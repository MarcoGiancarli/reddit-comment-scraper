learnpython,3e35oz,Kosooki_mrav,4,Tue Jul 21 16:30:45 2015 UTC,Reading your question I thought of this example in learn python the hard way. It is more of a learning example that uses classes as opposed to like a full on good game. Hope it helps.
learnpython,3e35oz,EqualsEqualsTrue,3,Tue Jul 21 17:36:00 2015 UTC,"This is great, thank you!"
learnpython,3e35oz,thargoallmysecrets,2,Tue Jul 21 17:45:18 2015 UTC,"just chiming in as someone who's written a couple java based OOP games... imagine a fully fleshed out, interactive game.  imagine all the physics and categories and interactions and rendering, and imagine that all built along the line of an extreme number of loops and objects performing mostly repetitive checks and updates.  imagine rendering the graphics, particularly detailed of each simultaneously and working that into your code for optimal run time/lower memory space.    trust me, 10 days in, it looks easy, but I also know a chick who wrote ""print(1) print(2) print(3) .... print(100)"" in first level programming course, and got an A.  In the beginning, you're supposed to be able to grasp it.  there are more right answers than wrong answers.  in a third year course, that first code would receive 0 points in most courses.  There is plenty to build on top of OOP basics, as long as you know the fundamentals inside and out, backwards and forwards."
learnpython,3e35oz,freakzilla149,1 point,Tue Jul 21 21:10:08 2015 UTC,"Yes, Having just learned OOP concepts, everything is a hypothetical. Seeing OOP ""in action"" out in the wild would be really nice."
learnpython,3e41kl,JustTurrble,4,Tue Jul 21 20:06:36 2015 UTC,"You could do this with metaclasses or a class decorator - at least that's what's coming to my mind.  Here's a metaclass for you :-)  class DecorateThings(type):      def __init__(cls, name, bases, dic):         super().__init__(name, bases, dic)          decorator = dic['method_decorator']         for method_name in dic['methods_to_decorate']:             setattr(cls, method_name, decorator(getattr(cls, method_name)))    def log_stuff(fun):     def wrapper(*args, **kwargs):         result = fun(*args, **kwargs)         print(""{}(*{}, **{}) -> {}"".format(fun.__qualname__, args, kwargs, result))         return result     return wrapper   class Foo():      def method1(self):         return 1      def method2(self):         return 2   class Bar(Foo, metaclass=DecorateThings):     method_decorator = log_stuff     methods_to_decorate = [""method1""]   bar = Bar() print(bar.method1()) print(bar.method2())"
learnpython,3e41kl,Nahnja,2,Tue Jul 21 20:33:50 2015 UTC,"The piece you are missing is setattr() and getattr()  for method_name in methods_to_mix:     super_method = getattr(super(), method_name)     def new_method(self, *args, **kwargs):         response = super_method(*args, **kwargs)         save_response(response)         return response     setattr(self, method_name, new_method)   Disclaimer: untested.  Here's other ways to the same end result that may be cleaner: http://stackoverflow.com/a/18859019"
learnpython,3e41kl,novel_yet_trivial,3,Tue Jul 21 20:35:15 2015 UTC,"This seems likely to be an X-Y problem. If you could tell us why you want this, perhaps we can come up with a less magical/implicit/voodoo solution that's clearer and won't frustrate the next person that reads the code (including future you)."
learnpython,3e41kl,raylu,1 point,Tue Jul 21 20:50:20 2015 UTC,"What I'm trying to do is probably best done with a decorator, as mentioned by others.  Basically, I'm using a package that does something I need, but I need it to do some logging on each method call, and the logging is specific to the app (which is a Django site, but that's not relevant here).  So I wrapped the classes and mixed in login details already, and now I'm trying to mix in this logging method so that the wrappers take care of it without me needing to duplicate that logic in the app (such as at the Django model or view level).  In terms of the problem I mentioned, I was trying to avoid exhaustively overriding every single method. Particularly because I expect to add new methods to the base package unrelated to the app, and I don't want to have to add more to my wrappers when I do, if I can avoid it."
learnpython,3e41kl,raylu,1 point,Tue Jul 21 22:05:41 2015 UTC,"No, the details are very much relevant here. What package? What something does it do that you need? What sort of logging are you trying to do? Who wrote the app? What classes did you wrap?  We can't solve your Y problem if you continue the misdiagnosis as an X problem and we can't identify the problem if you disguise it in generalities."
learnpython,3e41kl,raylu,1 point,Tue Jul 21 23:01:34 2015 UTC,"The package is python-amazon-mws. I've forked this to build it out more myself, but haven't changed it too much yet.  Basically, it provides classes for the API sections of Amazon MWS, with methods for each API action.  I've made short wrappers for each API class that mixes in my login details, so that when I call them from the Django app (which I developed myself, continue to work on, and cannot share due to company ownership), I just instantiate the class and call the API method.  The response object - which comes from the requests module - is returned by each method and contains XML data parsed into a python object. That response contains everything I need.  Logging is done with a Django model that stores the request and response data for each request. Hence my not wanting to put that logging into the MWS package itself, as that would be tight coupling. Besides, I'm just logging the same data that gets returned in that response object, so all I need to do is pass it to the model and save.    Granted, the MWS package probably needs some redesign, but for now it's working, so I'd rather leave it alone and build out what I need - which is more app-specific, anyway - using class wrappers and, if necessary, overrides."
learnpython,3e41kl,maks25,2,Tue Jul 21 23:38:00 2015 UTC,"I've made short wrappers for each API class that mixes in my login details   I'm not sure what you mean. All the classes already inherit from MWS, which takes an access_key and secret_key.   Logging is done with a Django model that stores the request and response data for each request. Hence   I'm not following here. What does logging with a Django model have to do with the MWS package?  All of the requests go through MWS.make_request, so one solution is to just monkeypatch:  import mws  orig_mr = mws.MWS.make_request def new_mr(self, extra_data, method='GET', **kwargs):     response = orig_mr(self, extra_data, method, **kwargs)     log(method, extra_data, kwargs.get('body'), response)     return response mws.MWS.make_request = new_mr   Another option is to create the classes dynamically:  import mws  class RequestLogger(object):     def make_request(self, extra_data, method='GET', **kwargs):         response = super().make_request(extra_data, method, **kwargs) # tweak super if you're on python 2         log(method, extra_data, kwargs.get('body'), response)         return response  for name, obj in mws.__dict__.items():     if not isinstance(obj, type): # we only care about classes         continue     if obj.__bases__ == (mws.MWS,): # subclass of MWS         logging_class = type(name, (mws.MWS, RequestLogger, obj)         globals()[name] = logging_class"
learnpython,3e41kl,maks25,1 point,Wed Jul 22 00:32:44 2015 UTC,"I'm not sure what you mean. All the classes already inherit from MWS, which takes an access_key and secret_key.   Any instance of the subclass I call would require me to pass the keys as arguments. I wrapped them in a new subclass that pulls them in from environment variables, so I can make an instance in the app without sending arguments to the wrapper:  inbound = mws_wrapper.InboundShipments()    I'm not following here. What does logging with a Django model have to do with the MWS package?   That's the point: I'm writing data to a Django model. I say ""logging"" as a general term, but what I'm doing is storing the original response XML in a model.  So my methodology was to intercept the response data, save it in a Django model, and move on.    I'll have to look at that code more in-depth tomorrow, I'm afraid. Thank you for your input. :)"
learnpython,3e568i,reedmanisback,3,Wed Jul 22 01:14:03 2015 UTC,I settled on PyCharm after starting with shell.  It was a welcome upgrade
learnpython,3e568i,Tbone_chop,3,Wed Jul 22 02:04:44 2015 UTC,stick to the shell until you understand it then use pycharm.  you'll thank yourself.
learnpython,3e568i,Mekhami,1 point,Wed Jul 22 02:52:58 2015 UTC,"The shell is hard to get productive in, but theres nothing wrong with it per se.  You probably want to at least start getting the benefits of syntax highlighting, which Notepad++ will give you. You can go to pycharm or something a bit lighter, like Spyder.  You should probably try all of them out so you can find what helps you."
learnpython,3e568i,oldpythonbestpython,1 point,Wed Jul 22 01:52:42 2015 UTC,"This is often discussed, the last time was here"
learnpython,3e568i,nwilliams36,1 point,Wed Jul 22 02:23:16 2015 UTC,"I prefer Sublime...it's not technically an IDE but you can execute code, run formatting macros etc..   I swear by it."
learnpython,3e568i,maks25,1 point,Wed Jul 22 03:33:58 2015 UTC,I used ipython and PyCharm when I started but I moved to Spyder and I like it much better.
learnpython,3e568i,joerod,1 point,Wed Jul 22 03:40:30 2015 UTC,Not heard of Spyder before. What makes you like it better than PyCharm?
learnpython,3e568i,usernamedottxt,1 point,Wed Jul 22 05:08:45 2015 UTC,I use 2 IDEs. WingIDE for basic script writing. It's pretty stripped down and the Personal edition is cheap and worth the upgrade of you use the free version.  I use pycharm for any project that has more than 2 files. It's a dream to workin once you get the hang of it and has tons of stuff builtin....  Both have free editions and you can try out the professional versions.  I tried spyder.... I'd put it somewhere between Wing and Pycharm in terms of features.
learnpython,3e568i,polyglotdev,1 point,Wed Jul 22 03:58:28 2015 UTC,"It depends on your platform really.  I've never personally been a huge fan of PyCharm.  I'm running Linux and I am a huge fan of Geany.   If I wasn't on Linux, I'd probably grab SublimeText.  PyCharm is just much more than I need, and I'm a bit of a minimalist (not, however, a masochist.  So I don't use just a text editor)."
learnpython,3e568i,smellsmoist,1 point,Wed Jul 22 04:30:06 2015 UTC,I tired alot of different stuff but really prefeer the basic shell
learnpython,3e568i,Smartare,1 point,Wed Jul 22 05:02:42 2015 UTC,I tried eclipse but settled with Geany
learnpython,3e568i,p_p_r,0,Wed Jul 22 05:09:53 2015 UTC,"Can't really answer that for you - however, there are several IDEs worth trying out. My recommendations are VIM, Sublime Text and PyCharm. However, there's also emacs, PyScripter (windows only), TextMate (Mac), Eric (Linux only - I think), Geany and more.  Try them all out and use the one that best suits you - this way you can focus more on coding."
learnpython,3e568i,theredbeard,3,Wed Jul 22 01:17:41 2015 UTC,"vim and sublime text are not IDEs, they are editors."
learnpython,3e3cet,thegreattriscuit,16,Tue Jul 21 17:16:07 2015 UTC,"Imagine the scenario where I had a class called WhackyInflatableArmFlailingTubeMan, and I wanted a method that would make the arms flail about. In your example, being descriptive might mean calling the method flail_arms_on_whacky_inflatable_arm_flailing_tube_man.  I may be going the route of the truly ridiculous here, but the point is that I'd be calling an instance of this class and then using its method like so:  a_whacky_inflatable_arm_flailing_tube_man = WhackyInflatableArmFlailingTubeMan() a_whacky_inflatable_arm_flailing_tube_man.flail_arms_on_whacky_inflatable_arm_flailing_tube_man()   First, the name of the instance variable is a bit redundant: I already know it's a WhackyInflatableArmFlailingTubeMan, so why repeat myself?  tube_man = WhackyInflatableArmFlailingTubeMan() tube_man.flail_arms_on_whacky_inflatable_arm_flailing_tube_man()   Further, the method is part of the WhackyInflatableArmFlailingTubeMan class, so, again, why am I repeating myself? I know what I want it to do:  tube_man = WhackyInflatableArmFlailingTubeMan() tube_man.flail_arms()     Your case is a bit similar. You have an object called a Statistic of some kind, you refer to instances of it or its attributes as statistics, your method names include ""statistic"" in there somewhere... it's safe to say, you're dealing with a statistic.  So you don't need to use that kind of verbose naming everywhere you go. It can help you understand what objects you're dealing with in some cases, but you should be able to keep the context in mind so you don't have to repeat yourself so much.  Case in point:  def compare_snmp_interface_statistics(snmp_interface_stat_a, snmp_interface_stat_b):   The snippet ""snmp_interface_stat"" or some variant therein appears 3 times, and muddles the whole thing. You know what you're working with inside the function when you call it, so why bother writing them out so much?  def compare_snmp_interface_statistics(a, b):   That's workable, I think. You know that a and b both represent snmp interface statistics, because you're calling them in a function that will compare_snmp_interface_statistics. What else could they be? :)  For my case, be descriptive where prudent, but keep the context in mind. You don't have to name every variable, attribute, function, method, and class as though the rest of the program doesn't exist: you can get away with simpler terms in a lot of cases.  Case in point, have a look for different kinds of modules that involve some kind of ""parsing"" and see how many of them simply have a parse method. Not parse_dates_from_arbitrary_strings or parse_html_from_binary or parse_pdfs_into_zip_files_with_images: just parse. That's it. And it's not hard to guess what they do within their contexts when you use them, either."
learnpython,3e3cet,JustTurrble,5,Tue Jul 21 18:35:26 2015 UTC,"I like your answer, but personally I would change where to be verbose. Just putting it here so OP can see a slightly different style.  class SNMPInterfaceStatistic()     def compare(stat_a, stat_b)   To me, this makes more sense. You're comparing two values, and those values are statistics."
learnpython,3e3cet,ripread,4,Tue Jul 21 21:02:07 2015 UTC,"I second this. If your class is SNMPInterfaceStatistic() then methods/functions for this class should not have SNMPInterfaceStatistic in them anywhere, e.g. simply compare() would suffice.  Also regarding passing verbose arguments, I just watched this interesting video which talked on this point. Basically you could do compare(*args), and in the Docstring for the function define what the arguments to be passed are."
learnpython,3e3cet,campenr,5,Tue Jul 21 19:40:52 2015 UTC,"Namespaces and location are part of documentation and naming, in my opinion.  from SNMPInterfaceStatistics import compare_statistics  def compare_statistics(stat_a, stat_b):   Makes sense to me and should be reasonable for users of the code. Theres no doubt what these functions are intended for based on where they were imported from.  Also, you could consider whether such functions belong as class or member functons:  class SNMPInterfaceStatistic:     @classmethod     def compare(stat_a, stat_b):   Thats my 2 cents on it."
learnpython,3e37zg,Rockybilly,20,Tue Jul 21 16:46:40 2015 UTC,"A class is useful when you want to define an object with multiple attributes and related methods, rather than handling those attributes separately or calling functions that seem unrelated.  Say you have data on a car, such as its make, model, and year. You could represent the car with just variables in a loose association:  car_make = 'Ford' car_model = 'Taurus' car_year = 1996   Problem is, if you have more than one ""car"", it can be difficult to handle all the different variables at the same time:  car_1_make = 'Ford' car_1_model = 'Taurus' car_1_year = 1996 car_2_make = 'Toyota' car_2_model = 'Prius' car_2_year = 2010   A Car class would hold this data in a single object, which you could refer to a bit more easily:  class Car(object):     def __init__(self, make, model, year):         self.make = make         self.model = model         self.year = year  car_1 = Car('Ford', 'Taurus', 1996) car_2 = Car('Toyota', 'Prius', 2010)     Where this comes in handy the most is when you want to pass all the details of an object to a function and make use of them. Say you had some function that would sell_my_car(), and you can to tell it which car to sell.  If it were an independent function and you didn't use a class, you'd have to pass everything in (and somehow keep track of it):  def sell_my_car(make, model, year):     # do something to sell it?  sell_my_car(car_1_make, car_1_model, car_1_year)   It's workable, but then this is possible, too:  sell_my_car(car_2_make, car_1_model, car_1_year)   Suddenly you're selling a 1996 Toyota Taurus. What?  It's simpler to pass the entire Car into the function (easier than in real life, of course: those things are heavy):  def sell_my_car(car):     # do something to sell it?  sell_my_car(car_1)     Even better: you can write a method within the class to do the work for you:  class Car(object):     def __init__(self, make, model, year):         self.make = make         self.model = model         self.year = year      def sell(self):         # do stuff with self.make, self.model, self.year, etc...  car_1 = Car('Ford', 'Taurus', 1996) car_1.sell()     In a basic sense, it's best to use a class when you find that there's an object with multiple attributes that you want to represent all at once. The benefit to this is that your class can then be used very simply by other developers.  Case in point: someone can build on the structure of this Car class and add a whole slew of other data points and methods and whatnot. And when they want to use one of the methods you defined beforehand?  car.sell()   Simple as that. :)"
learnpython,3e37zg,JustTurrble,2,Tue Jul 21 17:10:39 2015 UTC,"Great explanation. I've messed around with Python off and on a couple of times and was never really able to fully grasp OOP.  class Car(object):     def init(self, make, model, year):         self.make = make         self.model = model         self.year = year  def sell(self):     # do stuff with self.make, self.model, self.year, etc...   car_1 = Car('Ford', 'Taurus', 1996) car_1.sell()  The comment here really filled in what I believe was the biggest gap. Hard to say though as I haven't touched the stuff in months.  Either way, thanks again."
learnpython,3e37zg,Elephant_In_Ze_Room,1 point,Tue Jul 21 21:58:14 2015 UTC,"That's a great explanation. I've been doing data analysis projects in python for a while now without knowing when to use classes, getting by with just functions. This is a huge help! Thank you so much."
learnpython,3e37zg,DiscoPanda,1 point,Tue Jul 21 22:21:23 2015 UTC,Dude this was such a good explanation. Thank you so much for taking the time to write that out!
learnpython,3e37zg,Sayblahblah,3,Wed Jul 22 04:39:54 2015 UTC,The most common use for classes is when you have a group of variables and functions that can be clustered into an object.  Another good use of a class is when you find yourself passing huge amounts of variables around. A class is a way to use global variables in a managed way.
learnpython,3e37zg,novel_yet_trivial,2,Tue Jul 21 17:30:31 2015 UTC,"class is nothing but a custom data type. Take str, it represents some very specific thing and comes with a shitload of coupled functions that don't make sense in any other context. A class.  Once you get to the point where loosely coupled bits of data that describe the thing they are supposed to describe and functions working with them become an annoyance to manage, you can bind them together in a class and from now on they go together with zero effort. Once you have the object you have also all relevant methods, so the risk of using nonsense functions with nonsense data decreases significantly.  Inheritance allows for subtyping which allows for extending or substituting bits of the parent class without the copypasta of the whole thing."
learnpython,3e37zg,Vaphell,2,Tue Jul 21 17:01:55 2015 UTC,"A class should be used when you want to keep track of some state which changes the way things behave.  For instance, here's a basic function:  def greet(name):     print 'Hi {}!'.format(name)   We could make this a method on a class if we wanted, but as it doesn't care about the state of the rest of the program, this doesn't add much:  class Greeter(object):     def greet(self, name):          print 'Hi {}!'.format(name)   To make this class useful, we can add some adjustable state which changes the way the object will behave.  For instance:  class Greeter(object):     formal = False     def greet(self, name):          if self.formal:              print 'Good day to you, {}'.format(name)          else:              print 'Hi {}!'.format(name)  >>> greeter = Greeter() >>> greeter.greet('John') Hello John! >>> greeter.formal = True >>> greeter.greet('Jane') Good day to you, Jane   The behaviour of greet now depends on whether the greeter is in formal mode."
learnpython,3e37zg,ecjurobe,2,Tue Jul 21 17:18:31 2015 UTC,If you're trying to represent an object which has both state (i.e. variables associated with it) and behaviour (i.e. methods associated with it). Ideally if you're going to be representing several objects with different states.
learnpython,3e37zg,blackrat47,1 point,Tue Jul 21 20:31:30 2015 UTC,Do you  have a set of common values and functionality that it makes sense to group together?  Make that group an object.
learnpython,3e37zg,KronktheKronk,1 point,Tue Jul 21 17:26:52 2015 UTC,"Classes are easier for programmers to read and write because they don't have to remember odd prefixes to APIs.  It's common in something like C to have to prefix everything because there is only one namespace.  And then you have to have ""handles"", which are usually structs to pass around as arguments to your prefixed functions.  With Classes, you can have object1.print() and object2.print() or object1.save() object2.save() and these make sense.  Classes enable code reuse and extensions.  It's nice to subclass something and override some default behavior you don't like or to add functionality.  Python classes give you extra things over other languages like descriptors and properties."
learnpython,3e34cz,pok1natcha,5,Tue Jul 21 16:21:06 2015 UTC,"If you have an office job, find a simple task to automate. Otherwise, build a webscraper with beautifulsoup to grab all the relevant info of something you care about. Use the beautifulsoup documentation to help you out.   If you want to use Python on the web, Google Django. I've heard Two Scoops of Django is a good intro but I haven't read it myself."
learnpython,3e34cz,HackSawJimDuggan69,4,Tue Jul 21 16:54:10 2015 UTC,"For first-time webdev, use Flask - Django is usually unnecessary for smaller webapps and is a lot more complicated."
learnpython,3e34cz,Wrathofvulk,1 point,Tue Jul 21 16:59:26 2015 UTC,"I had found a flask full stack python tutorial. I wasn't sure as to what that was. Also, do I need to learn python before trying out flask?"
learnpython,3e34cz,Wrathofvulk,1 point,Tue Jul 21 20:31:36 2015 UTC,Flask is a Python backend web framework.
learnpython,3e34cz,CharBram,1 point,Tue Jul 21 20:48:21 2015 UTC,"Yes, you definitely need a good grasp of basic concepts first before getting into Flask."
learnpython,3e34cz,Neceros,3,Tue Jul 21 21:25:39 2015 UTC,"Highly suggest AGAINST django. It's  a nice framework, but it's very heavy and does everything (even if you don't want it to.)  I am very happy with Flask. Very minimal and does everything (when I want it to!)  Here's a tutorial: http://pythonprogramming.net/dashboard/#tab_webdev (This tutorial is for python 2, but it also works with 3, for the most part)"
learnpython,3e34cz,5225225,1 point,Tue Jul 21 21:20:45 2015 UTC,"I'll check out flask. I like tools that don't try to do everything for me.  Though personally, what I used to do is just use the inbuilt HTTP server and .format() to replace values. I'm sure it's an awful way of doing it, but it works well enough for me."
learnpython,3e34cz,autisticpig,1 point,Tue Jul 21 21:45:51 2015 UTC,http://newcoder.io may be right up your alley :)
learnpython,3e34cz,Mipsylicious,1 point,Tue Jul 21 23:27:40 2015 UTC,"For python projects I highly recommend /r/dailyprogrammer.  They give a beginner, intermediate, and advanced problem a few times a week.  You should be able to find something not only at your level, but also something that you may be interested in.  Interest really helps with the self-motivation point of self-teaching in my opinion.    As for python web design, I can't vouch for that but hopefully someone else here can help you out.    Have fun!"
learnpython,3e34cz,aroberge,1 point,Wed Jul 22 03:36:44 2015 UTC,"It is not surprising that you did not find and Python web design tutorials: web design requires Javascript+html+css ... not Python.  (Although, you could run Brython in the browser and have that replace Javascript.)    Javascript is for the main interactivity; html+css is for the design proper.  For web development, Python can be used as a web server, to deliver web pages."
learnpython,3e3q1j,BDCC,2,Tue Jul 21 18:48:39 2015 UTC,"I wrote something similar years ago to pull down configs, the code is here: https://github.com/jstnkndy/scripts/blob/master/rbackup.py"
learnpython,3e3q1j,juken,1 point,Tue Jul 21 21:33:26 2015 UTC,Check out paramiko for the SSH bit.
learnpython,3e5skd,lambo4bkfast,5,Wed Jul 22 04:23:39 2015 UTC,"ROI(ICCS, ROI)  ROI is a variable. You meant to type EPS(ICCS, ROI). If you simply read the line directly above the thrown type error you would have seen this. Additionally, you're setting this value to EPS, which is already a function name (thus overwriting your function definition).  To top it off, read the rules on the sidebar.    Posting screenshot of the code is (generally) not allowed. Read posting guidelines.   Looking more at the code, you have ROI(ROI) sprinkled throughout your code, redefinition of EPS everywhere, and attempting to call the function EPS after you set EPS to a variable. Variables and function cannot share names. When you name a variable, it should be an identifier unique to scope (preferably noun based), while functions should be a strictly unique identifier (preferably verb based). You are running into name conflicts all over and throughout your code."
learnpython,3e5skd,usernamedottxt,2,Wed Jul 22 04:33:20 2015 UTC,"To add to the above. If you're working with money you shouldn't be using floats, use the decimal type, or raised integers."
learnpython,3e5skd,Tomarse,1 point,Wed Jul 22 05:22:43 2015 UTC,"ROI is not a function. You can't call things in that way, like stuff(arg, arg2), if its not a function."
learnpython,3e4xz3,DATBEARD,2,Wed Jul 22 00:06:03 2015 UTC,You don't run pip install pyautogui from within Python.  You run it from your system shell (Dos/Bash/Powershell/whatever).
learnpython,3e4xz3,Doormatty,2,Wed Jul 22 01:24:28 2015 UTC,"If you have pip installed right, open command prompt and type   pip install pyautogui"
learnpython,3e5l9d,Bellgard,1 point,Wed Jul 22 03:17:51 2015 UTC,I thought it would open in your default browser by default.. Is Firefox set as your default?
learnpython,3e2w01,Tomarse,15,Tue Jul 21 15:21:10 2015 UTC,"The first version is better for a few reasons - here's the code which backs up copyfile, and the utility function, copyfileobj:  def copyfileobj(fsrc, fdst, length=16*1024):     """"""copy data from file-like object fsrc to file-like object fdst""""""     while 1:         buf = fsrc.read(length)         if not buf:             break         fdst.write(buf)  def copyfile(src, dst, *, follow_symlinks=True):     """"""Copy data from src to dst.      If follow_symlinks is not set and src is a symbolic link, a new     symlink will be created instead of copying the file it points to.      """"""     if _samefile(src, dst):         raise SameFileError(""{!r} and {!r} are the same file"".format(src, dst))      for fn in [src, dst]:         try:             st = os.stat(fn)         except OSError:             # File most likely does not exist             pass         else:             # XXX What about other special files? (sockets, devices...)             if stat.S_ISFIFO(st.st_mode):                 raise SpecialFileError(""`%s` is a named pipe"" % fn)      if not follow_symlinks and os.path.islink(src):         os.symlink(os.readlink(src), dst)     else:         with open(src, 'rb') as fsrc:             with open(dst, 'wb') as fdst:                 copyfileobj(fsrc, fdst)     return dst   There are several things which the code in shutil does that yours doesn't:   It avoids loading the whole file into memory. Your code would crash if it tried to copy a 15 GB file - shutil processes it in chunks. It checks to avoid copying a file onto itself. Thankfully, your code won't erase the file (there is a more naive version which would cause both files to end up empty) but it does unnecessary work. It's in the standard library, and people immediately know what shutil.copy does.   Even if 1 and 2 weren't true, you still shouldn't duplicate code that exists in the standard library without good reason. Generally, if you have to ask Should I do this thing that the standard library does, manually?, the answer is no - if it were yes, you would know it, because you would have done your research to find out why the standard library's version wasn't suitable."
learnpython,3e2w01,adamnew123456,1 point,Tue Jul 21 15:40:21 2015 UTC,Thanks. I probably should have checked the code first.
learnpython,3e2w01,oldpythonbestpython,3,Tue Jul 21 16:17:16 2015 UTC,"Less lines of code, and shutil.copy copies the permission bits of the source file, which you would need to consider on your own with the handrolled version."
learnpython,3e2w01,adamnew123456,2,Tue Jul 21 15:28:31 2015 UTC,I don't think it does - there's a separate function in shutil to do that.
learnpython,3e2w01,oldpythonbestpython,2,Tue Jul 21 16:08:23 2015 UTC,"Sure it does: https://docs.python.org/2/library/shutil.html#shutil.copy   Permission bits are copied. src and dst are path names given as strings.   Testing:  touch test.in chmod 400 test.in python -c ""import shutil; shutil.copy('test.in', 'test.out')"" ls -lat test.* -r-------- 1 user user 0 Jul 21 11:18 test.out -r-------- 1 user user 0 Jul 21 11:17 test.in"
learnpython,3e2w01,adamnew123456,1 point,Tue Jul 21 16:19:31 2015 UTC,"I misread, I thought that the post was referring to shutil.copyfile instead of shutil.copy."
learnpython,3e2w01,RubyPinch,0,Tue Jul 21 16:49:57 2015 UTC,"the first always correctly uses what is best for the current system (usually a system call specifically for copying files about, which can be vastly better for such things) nevermind  https://hg.python.org/cpython/file/3.4/Lib/shutil.py#l64 is the code that runs when one does a file copy, so, both do roughly the same thing (shutil's is a bit more efficient and uses binary mode), just shutil also manages errors and easyness a bit as well"
learnpython,3e48w6,ocny,2,Tue Jul 21 20:57:56 2015 UTC,"You open the file ""config"" 3 times per line in the file, plus 3! Try opening once, reading the data, modifying the data, and writing once.  #read with open(""config"") as fin:     data = fin.read().splitlines()  #modify new_data = [] for line in data:     #check all conditions     new_data.append(new_line)  #write with open(""newfile"",""w"") as fout:     fout.write(""\n"".join(new_data))"
learnpython,3e48w6,novel_yet_trivial,1 point,Tue Jul 21 21:41:39 2015 UTC,"I'm unsure why you only write to the last line but it will likely lie in the logic in your code. Try stepping through it like the interpreter would, and see where the issue is.  Side notes:  First I would suggest opening your files like:  with open(file_name, mode) as in_handle:      # do stuff with the file   As this automatically closes the file for you, saves you remembering to do so.  Also to save you from the regex you could split the contents of your line using the string method .split(), and use the operator in to check if your search is in the list of words that make up line.  Something I would consider with this is creating a frame buffer of multiple lines, so that you can check more than one condition. This may not be important in this example, but if you are just checking for the word background, if it occurs twice in your file you are going to overwrite something you don't want to. By creating a frame buffer of multiple lines you can say if line_1 is this, AND line_2 is that, then do this thing."
learnpython,3e2hbb,trancemsteve,1 point,Tue Jul 21 13:21:30 2015 UTC,"I think you answered your own question. If your script is trying to write to it and you do not have permission to do so, you would get an error."
learnpython,3e2hbb,DarthOpto,1 point,Tue Jul 21 18:49:42 2015 UTC,"Ok, so I've already gone through everything I can find in my Google account. I'm owner and have edit permissions as far as the api is concerned. So is it something in my script?"
learnpython,3e2hbb,Steamwells,1 point,Tue Jul 21 19:48:24 2015 UTC,Do you have two factor auth turned on for that account you are trying to use to insert to calendar with? Try with my gauth helper classes if you like:-  https://github.com/Pashbee/GAuth-GBuild  You are getting 403 due to permissions. Message me if you get stuck using those helper classes (example included) but that should help.
learnpython,3e3sbz,b00ks,2,Tue Jul 21 19:03:43 2015 UTC,"I think a list is the proper approach here, not a dictionary. A dictionary needs unique keys, is there anything about the data rows that is unique?   Several other points:   w, x, y are terrible variable names. Make them descriptive. To get a filename's extension, use the os.path.splitext() method. In this case, you don't even need that. All you need is if w.endswith('csv'): using with automatically closes the file, you don't need the finally block."
learnpython,3e3sbz,novel_yet_trivial,1 point,Tue Jul 21 19:15:44 2015 UTC,"The csv file will contain a header, which will be unique to the values in the column, wouldn't that make sense for a dictionary? (Example could be a column of Dogs names, or cat types)  Thanks for the input on the other points.  I didn't even know about the endswith method, that will definitely work a lot better. I'll do that, and I'll nuke the finally block.  I appreciate your time!"
learnpython,3e3sbz,novel_yet_trivial,1 point,Tue Jul 21 19:23:53 2015 UTC,"The csv file will contain a header, which will be unique to the values in the column   I'm talking about the rows, not the cells. How will each row be unique? Will you accept duplicate rows?"
learnpython,3e3sbz,p10_user,1 point,Tue Jul 21 20:25:31 2015 UTC,"Perhaps I'm misunderstanding.  I thoughts when lists were created, python stores the contents randomly.  Does it not?   If it stores it randomly, how would I know what the header row is, etc.  I thought a dictionary was the way to go here, since each value in the cell is directly related to the header."
learnpython,3e3sbz,campenr,2,Wed Jul 22 03:30:50 2015 UTC,"Quick trick - you can do:  if w.endswith('.csv')   instead of your string splicing to check if file is csv type.  Also I really like csv.DictReader. You could do something like:  #get all columns the user wants columns= [] while True:     try:         col_of_interest= raw_input('Enter a column you want to extract or Ctrl+C if done: ')         columns.append(col_of_interest)     except KeyboardInterrupt:         break   and then:     outfile = open('myoutputfile.csv', 'w')  with open(csvfile) as f:     reader = csv.DictReader(f)     for row in reader:         new_row = []         for col in columns:             new_row.append(row[col]) #loop over all columns of interest and add the data from that column of that row to the list         outfile.write(','.join(new_row))    This doesn't check for invalid headers or different delimiters (other than ','), but shouldn't be too difficult to do. You could also put some more conditions on whether or not to write the data from each row to file based on additional inputs from the user.  Edit: didn't see that you were already using DictReader. There's nothing wrong with your input file coming in as a list, you can simply grab the elements of the list of interest (based on the headers) and write them to file."
learnpython,3e490k,musicomet,3,Tue Jul 21 20:58:59 2015 UTC,"Switch your quotes:  In [7]: phone = ['{""value"": ""4088768912"", ""label"": ""mobile""}', '{""value"": ""415659408"", ""label"": ""home""}']  json.loads(phone[0]) Out[8]: {'value': '4088768912', 'label': 'mobile'}"
learnpython,3e490k,mikeoquinn,1 point,Tue Jul 21 21:05:46 2015 UTC,"That'd work except I don't have control over the quotes. This is what's being passed to the server:  phone = [""{'value': '4088768912', 'label': 'mobile'}"", ""{'value': '415659408', 'label': 'home'}""]"
learnpython,3e490k,blackrat47,1 point,Tue Jul 21 21:09:57 2015 UTC,Replace them with str.replace()?
learnpython,3e490k,novel_yet_trivial,2,Tue Jul 21 23:15:25 2015 UTC,"The error comes from using single quotes instead of double quotes. You can fix it like this:  data = json.loads(phone[0].replace(""'"",'""'))   Or you can directly make a dictionary (skip json), if you trust the data source:   data = eval(phone[0])   Where are you getting this data from? It would probably be easiest to fix the data source. i.e. if you are getting it from a print(dict_) statement change it to print(json.dumps(dict_))."
learnpython,3e490k,novel_yet_trivial,1 point,Tue Jul 21 21:08:34 2015 UTC,"I've written a test in pytest and the data being used is literally like this:      data = {     ""full_name"": ""John Terry of Chelsea"",     ""email"": ""j.terry_%s@test.com"" % str(uuid.uuid4())[0:8],     ""phone"": [{""label"": ""mobile"", ""value"": ""4088768912""},               {""label"": ""home"", ""value"": ""415659408""}] }"
learnpython,3e490k,novel_yet_trivial,2,Tue Jul 21 21:11:10 2015 UTC,"???   If that's a string, then you have no problems. If not, then you are converting it to a string somewhere, and you should use json.dumps() instead."
learnpython,3e490k,scfoothills,1 point,Tue Jul 21 21:18:56 2015 UTC,"It's a string, but the quotes are reversed :-/ Not sure why that's happening."
learnpython,3e3jqk,Tomus,3,Tue Jul 21 18:05:34 2015 UTC,"Instead of just calling main() at the end of your module, call it like this:  `if __name__ == '__main__':     main()   This is pretty standard in Python. This way, if you're running the module from the console, __name__ == '__main__' situation,  the main() function will be called, otherwise if someone imports your module, __name__ == module_name, main() won't run and the user can call the functions as they need in their module."
learnpython,3e3jqk,uhkhu,1 point,Tue Jul 21 18:23:51 2015 UTC,"Thanks for that, I did it on one file but not the other!"
learnpython,3e3jqk,novel_yet_trivial,2,Tue Jul 21 18:27:44 2015 UTC,"Do you really save any time by pre-computing the dictionary? Looks like unnecessarily complicated to me. instead of looping through the sequences and trying every one, you can easily find the values present in both with for sequence in set(dmap) & set(sequences): (this is called an intersection in mathematics). This also removes the need for your ""removedupes()"" function. speaking of, if you insist on keeping it, your ""removedupes()"" function can be boiled down to this:  def removedupes(lst):     return list(set(lst)) #converting back to a list is not needed"
learnpython,3e2bey,AussieCryptoCurrency,3,Tue Jul 21 12:23:27 2015 UTC,"I'm not sure I would recommend it, but:  print(reduce(access, [d, ""foo"", 0, ""bar""]))   (Where d = your dictionary of nested stuff)"
learnpython,3e2bey,gengisteve,3,Tue Jul 21 13:43:51 2015 UTC,"Reduce also accepts a third argument which becomes the first argument of the function. So you could do:  reduce(access, ['foo', 0, 'bar'], d)"
learnpython,3e2bey,kurashu89,1 point,Tue Jul 21 14:36:39 2015 UTC,"reduce(access, ['foo', 0, 'bar'], d)   Fantastic! That makes a lot more sense.  I appreciate the help you two!"
learnpython,3e2bey,zahlman,1 point,Tue Jul 21 14:45:46 2015 UTC,"(Where d = your dictionary of nested stuff)   Wow! I really should've tried that first! Thank you kindly, I was absolutely overthinking it :)"
learnpython,3e2bey,campenr,2,Tue Jul 21 14:20:36 2015 UTC,"FWIW, the keys of an ""object"" in JSON (which becomes a Python dict) are required to be strings. I would also say that trying to access a list with a string ""key"" should raise an exception, even if the string is convertible to int. So personally I would just use obj[prop] directly."
learnpython,3e4sv6,kader14,2,Tue Jul 21 23:25:21 2015 UTC,"Please format your code for reddit or use a site like pastebin. Your code is very hard to read and impossible to test otherwise.  a is a string literal (literally matches the character ""a"") and * is a special character meaning ""0 or more repetitions of the preceding RE"". So the regular expression a* searches for 0 or more instances of the character ""a"".  If you type  import re help(re)   in the interpreter you will see a list of all the special characters."
learnpython,3e4sv6,novel_yet_trivial,1 point,Tue Jul 21 23:32:05 2015 UTC,format your code for reddit  .... done and i'm sorry for that .  (a*) give other examples please.
learnpython,3e4sv6,rabidmonkey1163,1 point,Tue Jul 21 23:54:16 2015 UTC,'a*' means it will match one or more repetitions of 'a'
learnpython,3e4sv6,Tbone_chop,1 point,Wed Jul 22 01:11:39 2015 UTC,Experiment w regex101.com.  You can try out all your regex there and see what it produces
learnpython,3e4sv6,nwilliams36,1 point,Wed Jul 22 02:08:28 2015 UTC,"Regex stands for regular expressions and is used mainly to search strings internally to find a pattern.  In your example you are looking for repeated a's in the word firefox.  Regex has its own language of expression building which is similar across programming languages, but not identical.  Python has a library for regular expressions called re.  The documentation for this library is on the Python website.  There are also a huge range of website which provide tutorials or online tools."
learnpython,3e4kbr,eps89,3,Tue Jul 21 22:19:26 2015 UTC,The sidebar.   Can you complete the last lesson of code academy right now?  If you did all the other lessons first do you think you could? Learning is a slow step by step process.
learnpython,3e4kbr,tnvol88,1 point,Tue Jul 21 22:36:24 2015 UTC,"I have programming experience, but I'm just learning Python myself.  A friend of mine with a computer background (but 0 programming experience) is learning it with me, as well as his 11-year-old daughter.  We are using Python for Kids by Jason R. Briggs, and it seems to be working out well for them.  It's a bit basic for me, having the background knowledge I have, but it's great for just starting out, from what I can tell; and I am learning the syntax and intricacies of Python, even if the general concepts are quite familiar.  We're about half-way through the book, having done a chapter each week, although we're ramping up to 2 chapters each week to be done before his daughter goes back to school.  Two pieces of advice I can give you, no matter what educational source you use to learn code:   Stick with it.  Just like anything, it starts out very slow, which can be boring or seem like you aren't learning anything.  But you have to learn those basics to build on with more complex things later. If there are little practice examples, or code puzzles to do at the end of a section or chapter, DO THEM.  Even if the concept you just learned was very easy, and you think you have it all perfectly understood and learned in your head, there is NOTHING like writing the code yourself and running it to really ingrain that new skill or concept.   Hope you find a great source to learn from.  When you get proficient with a language, programming can be a ton of fun!"
learnpython,3e4kbr,atthem77,1 point,Tue Jul 21 22:39:49 2015 UTC,"Learning any language is difficult. Especially just learning through drills. I did code academy and it was good to get the syntax. I had a little experience with VBA, so I knew how if/else, for, while, etc.. statements worked, but once I had a  basic understanding of Python syntax, I was able to start dabbling in projects at work. They were small at first and probably unnecessary, most were converting VBA to Python, but it was much easier than running through lessons. It was applicable to my daily life.   Code academy (and the like) gives you the basic understanding so you can ask the correct questions. With that ability, you're well on your way to stumbling through projects that are far more interesting than lessons.   I would suggest trying to find something at work/school that can be automated/assisted with Python and going from there. Within 2 months of dabbling in random projects, I started building an application that my group (Aerospace) implemented into one of their software platforms. Python is a very sweet language to learn and I have a ton of fun programming in it.   Half the battle is getting a working interpreter, so I'd get:  PyCharm Community IDE Anaconda Python Distribution  Both are free and provide a no-brainer way to get Python, and all the modules you'll conceivably need, running locally with a beautiful IDE.   I still use these and it's plenty for my level of development."
learnpython,3e4kbr,uhkhu,1 point,Tue Jul 21 22:40:34 2015 UTC,"I double as an educator at work and if you want help, drop me a pm. I can teach you core Python despite your brain telling you to forget about it"
learnpython,3e4kbr,autisticpig,1 point,Tue Jul 21 23:25:19 2015 UTC,"Maybe you learn best by actually solving problems in code, rather than learning about code.  If so this reddit answer might help."
learnpython,3e3nic,hydrocity_1,1 point,Tue Jul 21 18:30:57 2015 UTC,"Using files in Python  CSV module for CSV.  For Excel, there are options. Some prefer pandas (which, arguably, has better CSV functionality, as well)."
learnpython,3e3nic,JustTurrble,1 point,Tue Jul 21 18:44:03 2015 UTC,"Thanks for the replies, but I might be attempting to do something that is not possible.  I guess I am attempting to make a dynamic variable.  to put it in context.  sideb = (sidea)*(math.tan((math.radians(anglea)))  anglea = 53.1301  while (anglea) > 0 :  (anglea) -=1  print (sideb)   This successfully reduces anglea to 0 but it does not change dynamically inside the variable sideb.  sideb = (sidea)*(math.tan((math.radians(anglea)))   as anglea counts down sideb should be changing its value every iteration, is there a way to make dynamic variables?  Or would this be considered like nested variables?"
learnpython,3e3nic,JustTurrble,1 point,Tue Jul 21 19:11:51 2015 UTC,"A variable is not static by default: if you want the value of sideb to change, then simply change it:  anglea = 53.1301 sideb = (sidea)*(math.tan((math.radians(anglea))) while anglea > 0 :     anglea -=1     sideb = (sidea)*(math.tan((math.radians(anglea)))     print(sideb)   Though, in this example, it makes more sense to build out the result that goes in sideb as a function, so as to avoid repeating the arithmetic:  def calculate_side_b(side_a, angle_a):     return side_a * math.tan(math.radians(anglea))  anglea = 53.1301 sideb = calculate_side_b(sidea, anglea) while anglea > 0 :     anglea -=1     sideb = calculate_side_b(sidea, anglea)     print(sideb)     By the way, note the fewer parentheses I'm using than your code. You're using quite a few, and that shouldn't be done lightly: you could be inadvertently creating tuples, which are immutable, and not know it."
learnpython,3e3nic,JustTurrble,1 point,Tue Jul 21 19:29:16 2015 UTC,"Thank you, your the man.  I do not understand the defining top part, but now I can play with it a bunch, thanks thats all I needed was a small example."
learnpython,3e3nic,no_sle3p,1 point,Tue Jul 21 20:01:13 2015 UTC,The def statement defines a function
learnpython,3e27jb,KieranX,9,Tue Jul 21 11:42:31 2015 UTC,"You will need to put in inside a while block, so that it keeps asking the user for input:  while True:     x = raw_input(""Password?"")     if x == ""Banter"":         print ""Welcome, Kieran.""         break     else:         print ""Try again."""
learnpython,3e27jb,waqqasdadabhoy,1 point,Tue Jul 21 11:54:17 2015 UTC,"I'm very new to python.  I just want to make sure I'm understanding a few things about what you posted correctly.  ""While True"" is there to make sure your code won't stop looping on its own, and the break on line 5 is the only way for it to end, correct?  Is ""While True:"" effectively the same as something like ""for x > 0:"""
learnpython,3e27jb,SirSkelton,1 point,Wed Jul 22 00:42:00 2015 UTC,"Yes, the ""while True"" makes it loop forever unless the password is correct, and the break is the only way for it to end (unless an exception occurs).  ""for x > 0"" is not used in python; the for loop requires an iterable (list, dictionary, set, generator, etc.) to be passed to it, and it loops over the iterable."
learnpython,3e27jb,waqqasdadabhoy,1 point,Wed Jul 22 04:06:00 2015 UTC,So python doesn't read x > 0 as the set of all numbers that make that true?
learnpython,3e27jb,SirSkelton,5,Wed Jul 22 04:07:21 2015 UTC,"In Python 2.X:  while raw_input('Password? ') != 'Secret':     print 'Please try again' print 'Welcome, User with password ""Secret""!'"
learnpython,3e27jb,codex81,2,Tue Jul 21 16:43:58 2015 UTC,"Great answer!  In case you need it, here's Python 3.4 version (just minor syntax differences):  while input('Password? ') != 'Secret':     print('Please try again') print('Welcome, User with password ""Secret""!')"
learnpython,3e27jb,atthem77,3,Tue Jul 21 22:46:09 2015 UTC,While true X =raw input If x = correct Print welcome Break Else  Fuck off Sorry about grammar I'm on my phone
learnpython,3e27jb,dankers,1 point,Tue Jul 21 11:54:11 2015 UTC,"This is the code in it's current form.  x = raw_input(""Password?"")  if x==""Banter"":  print""Welcome, Kieran.""  else:  print""Go away, intruder!"""
learnpython,3e27jb,Inmute,1 point,Tue Jul 21 11:43:05 2015 UTC,"If you don't want to use ""break"" you can use ""continue"" which will start the loop from the beginning once the program reaches it."
learnpython,3e27jb,Krizzu,1 point,Tue Jul 21 12:16:23 2015 UTC,"Use kind of:  While access_granted==False:         X=input(""password: "")         If X==""123"":                 access_granted=True          else:                  print(""error"")"
learnpython,3e27jb,jpfau,1 point,Tue Jul 21 17:48:06 2015 UTC,"You don't need an infinite loop to accomplish this.  Try something like this:  accepted_answers = ['yes', 'no', 'maybe']  user_input = ''  while user_input not in accepted_answers:     user_input = input(""Enter something: "")     if user_input not in accepted_answers:         print(""Wrong answer."")   You don't have to have a list of answers (or in your case, passwords), just some kind of way to evaluate the user input. You could have a function that evaluates it:  def password_is_valid(password):     # evaluate the password here  user_input = """"  while not password_is_valid(user_input):     user_input = input(""Enter password: "")     if not password_is_valid(user_input):         print(""Invalid password."")   The loop will break naturally when the user enters a valid answer. No need to make an infinite loop and manually break out of it.  Edit: and if it isn't already obvious, password_is_valid should return True if password is a valid password, or False if it isn't."
learnpython,3e4amz,trailblazery,3,Tue Jul 21 21:10:24 2015 UTC,"All the packages and dependicies can be a pain particualrly in Windows which lacks a unified package repository. My best suggestion would be to install the Anaconda distribution which comes with most of the SciPy stack preinstalled, then change your PATH to look for the anaconda python instead of the previous installation.  Not a fix but a possible solution."
learnpython,3e4amz,campenr,1 point,Tue Jul 21 21:36:48 2015 UTC,"Tried this, still does not work.  First it can't load praw (obviously) and second it throws a fit about matplotlib."
learnpython,3e4amz,campenr,1 point,Tue Jul 21 22:31:01 2015 UTC,"Run pip install praw. And what is the error it throws on matplotlib? Also I forgot, now that you've changed the path in windows, you also in PyCharm need to set the interpreter to the anaconda one. Go to file, settings, project:(name of current project), project interpreter and select the anaconda interpreter."
learnpython,3e4amz,campenr,1 point,Tue Jul 21 22:53:51 2015 UTC,"First I try to update pip and get this error:   AttributeError: 'module' object has no attribute 'wraps'   Then if I run the script I get  C:\Users\528356\AppData\Local\Continuum\Anaconda\python.exe C:/Users/528356/Documents/PyProj/praw.py Traceback (most recent call last):   File ""C:/Users/528356/Documents/PyProj/praw.py"", line 1, in <module>     import praw   File ""C:\Users\528356\Documents\PyProj\praw.py"", line 4, in <module>     import matplotlib.pyplot as plt   File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\site-packages\matplotlib\__init__.py"", line 1100, in <module> rcParams = rc_params()   File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\site-packages\matplotlib\__init__.py"", line 947, in rc_params fname = matplotlib_fname()   File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\site-packages\matplotlib\__init__.py"", line 768, in matplotlib_fname configdir = _get_configdir()   File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\site-packages\matplotlib\__init__.py"", line 635, in _get_configdir return _get_config_or_cache_dir(_get_xdg_config_dir())   File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\site-packages\matplotlib\__init__.py"", line 612, in _get_config_or_cache_dir return _create_tmp_config_dir()  File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\site-packages\matplotlib\__init__.py"", line 544, in _create_tmp_config_dir tempdir = os.path.join(tempdir, 'matplotlib-%s' % getpass.getuser())       File ""C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\getpass.py"", line 157, in getuser     import pwd ImportError: No module named pwd  Process finished with exit code 1   Pasting this in the console  import praw import numpy as np import pandas as pd import matplotlib.pyplot as plt   results in:  C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\pkgutil.py:186: ImportWarning: Not importing directory 'C:\Users\528356\AppData\Roaming\Python\Python27\site-packages\mpl_toolkits': missing __init__.py   file, filename, etc = imp.find_module(subname, path) C:\Users\528356\AppData\Local\Continuum\Anaconda\lib\pkgutil.py:186: ImportWarning: Not importing directory 'c:\users\528356\appdata\roaming\python\python27\site-packages\mpl_toolkits': missing __init__.py   file, filename, etc = imp.find_module(subname, path) Backend TkAgg is interactive backend. Turning interactive mode on."
learnpython,3e4amz,maks25,1 point,Tue Jul 21 23:35:47 2015 UTC,OK. The errors look like you don't have the modules installed. But lets do this one at a time.  Does entering just pip in the console work? (also make sure you close and then open a new console if you haven't already since installing anaconda and changing the PATH variables). Does it throw an error?
learnpython,3e4amz,LeftyDave,1 point,Wed Jul 22 00:33:15 2015 UTC,"Are you running 2.7 or 3.4 in the console?  Dateutil is a dependency of pandas, if I'm not mistaken you're missing it.   Maybe try installing it again with pip for 2.7?  http://labix.org/python-dateutil"
learnpython,3e0kir,chibiakutenshi,11,Tue Jul 21 01:00:05 2015 UTC,"Exact same position as you OP. You need practice, lots and lots of practice. Try this:  /r/dailyprogrammer  projectEuler  Code Wars  codingbat  There's lots more like these, all designed to help you with that practical experience. Also, don't be lazy like me, find elegant, fast, easy to read solutions instead of just whatever works. For example, if your program has a big O of O(n) see if you can improve on it.  Edit: Ask your friends if they have something fairly simple they do on their computer that could be automated. E.g. on my last job I used to spend a lot of time entering data into a spreadsheet, could've probably been automated."
learnpython,3e0kir,freakzilla149,1 point,Tue Jul 21 01:42:29 2015 UTC,"Exercism is great, too. :)"
learnpython,3e0kir,autisticpig,4,Tue Jul 21 23:29:24 2015 UTC,"There a plenty of sites on the internet which have small programming problems to solve.  You might want to look at CodingBat or Katas.  Or you could just try to develop a program to solve a large problem of your own (make your own reddit, build a program to calculate your tax ..).  This will immediately present you with a number of smaller problems to solve along the way."
learnpython,3e0kir,nwilliams36,2,Tue Jul 21 01:16:45 2015 UTC,"I found the problems on www.checkio.org useful. I've not checked out many of the others listed on this thread but I imagine they are all similar, where the idea is here's a problem, you figure out how to solve it, which is immensely powerful for learning the language."
learnpython,3e0kir,campenr,4,Tue Jul 21 11:06:55 2015 UTC,I post this every time one of these pops up
learnpython,3e0kir,Ticklethis275,1 point,Tue Jul 21 02:17:45 2015 UTC,You really post this every time? have you even read it? it's useless.
learnpython,3e0kir,hepuhudu,1 point,Tue Jul 21 16:49:50 2015 UTC,What's wrong with it?
learnpython,3e0kir,Ticklethis275,2,Tue Jul 21 17:29:52 2015 UTC,"Doesn't help in any way, sums up to ""go build something"" which is the problem in the first place, what to build for practice? Needs links to projects which solve this problem, like others have posted.  Just so I'm not being hypocritical here is my suggestion for OP."
learnpython,3e0kir,hepuhudu,1 point,Tue Jul 21 19:25:08 2015 UTC,"Thanks for the suggestions, I will work on it. I'm trying to keep it useful without making it about one specific language.   Added the list to the post, thanks again."
learnpython,3e0kir,Ticklethis275,1 point,Tue Jul 21 19:26:47 2015 UTC,"Well I can't speak for all the suggestions in this thread but /r/dailyprogrammer and my link are language independent, they just provide ideas for you to make for practice with varying difficulties. Which solves this creative gap and helps the person finds their speciality."
learnpython,3e0kir,hepuhudu,1 point,Tue Jul 21 19:35:47 2015 UTC,"I added the list you posted to the article, gave you credit too. Thanks!"
learnpython,3e0kir,Ticklethis275,1 point,Tue Jul 21 19:48:06 2015 UTC,code eval
learnpython,3e0kir,p_p_r,1 point,Tue Jul 21 02:47:20 2015 UTC,yeah i was in the same boat as you. i wanted to learn programming but didn't know what i wanted to do with it. I did lots of the projects like dice rolling and rock paper scissors but that's not really want i wanted to get out of programming. i'm now in the process if learning django to use programming in the backend of websites. so i see it like a phase 2 of programming. Learn the basics then chose what area in programming you want to do into.
learnpython,3e1zv5,MinimalDamage,1 point,Tue Jul 21 09:59:06 2015 UTC,"Maybe try traceback instead. You could put something like  error_variable = traceback.format_exc()   into a try/except. This will return a string of whatever the error is, which you could then write to your db.  ""INSERT into `ERRORS` VALUES (%s)"",(error_variable)"
learnpython,3e1zv5,jokle,1 point,Tue Jul 21 13:26:06 2015 UTC,"Out of curiosity, why are you using subprocess to run another Python script? You can use complie and exec to run the file, and capture errors using try: except::  def run_file(path):     with open(path) as code_file:         code = compile(code_file.read(), path, 'exec')      # We don't want to leak our variables to the script     module_scope = {}     exec(code, module_scope)  try:     run_file('my_script.py') except SomeException:     ..."
learnpython,3e2fqb,shmeckler,5,Tue Jul 21 13:06:12 2015 UTC,"Classic beginner's problem. Python doesn't understand common speech shorthands in a way you do. When you say ""x == 1 or 2 or 3"" you mean ""x == 1 or x==2 or x==3"" or ""x belongs to a set of {1,2,3}"".  You need to tell python exactly that.      if qrswidth == ""wide"" or ""Wide"" or ""WIDE"" or ""wIDE"":             print(""V-TACH!"")     elif qrswidth == ""narrow"" or ""nARROW"" or ""NARROW"" or ""nARROW"":             print(""SVT!"")   python sees if (qrswidth == ""wide"") or (""Wide"") or (""WIDE"") or (""wIDE""): if something or TRUE or TRUE or TRUE or TRUE.  non-empty strings on their own are truthy. It's not hard to figure out what goes wrong in that light.  that said if you want answer in a case insensitive context, use qrswidth.lower() == ""wide"" and skip the nonsense ;-)"
learnpython,3e2fqb,Vaphell,2,Tue Jul 21 13:36:43 2015 UTC,"These lines are not working:      if vrate >= '160':   If you want to compare greater than something you need to change it from a string to an int, otherwise it will give you unexpected results -- well, expected, but not expected the way you are expecting.  This line:      if qrswidth == ""wide"" or ""Wide"" or ""WIDE"" or ""wIDE"":   is also broken, because the or's each evaluate without looking behind, so or ""nope"" will always return true.  Do this instead:     if variable in ('wide', 'Wide', 'Wild', 'Wood'):"
learnpython,3e2fqb,gengisteve,1 point,Tue Jul 21 13:33:10 2015 UTC,"A common issue, as mentioned, is to think in natural language terms ""if this thing equals this, that, this, or this, do X"".  In programming, you'll have to be more explicit:   if qrswidth == ""wide"" or qrswidth == ""Wide"" or qrswidth == ""WIDE"" or qrswidth == ""wIDE"":   Each of the conditional statements, such as qrswidth == ""wide"", is a single object which returns either True or False. When you write it the shorthand way, Python evaluates each string as True or False, and a non-empty string always evaluates to True.  Thus, when you write:  if qrswidth == ""wide"" or ""Wide"" or ""WIDE"" or ""wIDE"":   what you're asking for is:  if A or B or C or D:   where A, B, C, and D are all conditional statements. In this case, for example, B is ""Wide"", which evaluates to True (what's called ""truthy"" sometimes) on its own.    The way to solve this without writing the same basic conditional statement every time is to use in and construct a list or set with all the possible values:  if qrswidth in (""wide"", ""Wide"", ""WIDE"", ""wIDE""):   Another method is to simplify the problem: you're checking for different values of the same basic word, but with different capital letters. Instead of checking for every combination (which you haven't covered completely), you can adjust the statement using .lower() and testing it against a single string:  if qrswidth.lower() == ""wide"":     # Sets all of `qrswidth` to lowercase, then tests it.     There are some other issues I want to touch on:  When you take your input on line 20, vrate = input(...), you're aware that it will always be a string. You can convert that to a different type, such as an integer, using int():  vrate = int(input(""What is the ventricular rate? ""))   There is a possible issue with this: if the user inputs something that can't convert to an integer, such as letters, it will raise a ValueError exception. That can be handled using a try...except block:  try:     vrate = int(input(""What is the ventricular rate? "")) except ValueError:     # do something to correct the error   Typically you might wrap that in a small loop and, inside the except block, call continue to start the loop over, asking for the input again. Afterward you could call break to exit the loop, knowing that your input is correct:  while True:     try:         vrate = int(input(""What is the ventricular rate? ""))     except ValueError:         print(""Not an integer! Try again!"")         continue     break     Try to avoid relying on globally-scoped variables where possible. Here, you're using vrate in the global scope and accessing it within the functions as such. You can make the program more flexible by passing the variable into the function as an argument:  vrate = # whatever you like  def asystole(the_vrate):     # do stuff with `the_vrate`  asystole(vrate)   Note that I changed the name of the variable inside the function. Try it out and see what happens. :)"
learnpython,3e2jua,hydrocity_1,8,Tue Jul 21 13:44:08 2015 UTC,/r/DoMyHomework
learnpython,3e2jua,Tomarse,3,Tue Jul 21 15:24:47 2015 UTC,"For free I can tell you Microsoft Mathematics, Wolfram Alpha, and lots of things have triangle solvers. If it's specifically a 'I want to learn how to manipulate excel with python' I can also help you along, its very simple programming to do, and you definitely could on your own!"
learnpython,3e2jua,Not_Nigerian_Prince,2,Tue Jul 21 14:00:37 2015 UTC,let me know more details on what are the input
learnpython,3e2jua,reckscene,1 point,Tue Jul 21 14:11:50 2015 UTC,"ok. I have triangle ABC.  ABC is a right triangle.  Side A = 3  angle A = 53.1301  angle B = 90  I need python to solve this triangle and print the results to excel or some place that I can organize the data.  Basically it will look like this.  3*tan(53.1301) = B  90-53.1301 = angle C  A2+B2=c2 sqrt(C)  Pint side A side B side C angle A angle B and C somewhere useful.  That is the first iteration, the loop needs to go on forever while  angle A is greater than 0.  and every loop needs to change angle A so that it subtracts .001 from the angle."
learnpython,3e2jua,Dinosaurman,2,Tue Jul 21 14:31:27 2015 UTC,My python is pretty week and I can help with that. Look at the csv module
learnpython,3e2jua,jrpjesus,1 point,Tue Jul 21 14:39:09 2015 UTC,Why not just do it in Excel?
learnpython,3e2jua,jrpjesus,1 point,Tue Jul 21 17:31:08 2015 UTC,because excel can not do thousands of iterations dynamically..  I dont think
learnpython,3e3cni,adeukis,2,Tue Jul 21 17:17:40 2015 UTC,"Perfect example would be the grocery store. You wouldn't want to have a list of items and a similarly indexed list of prices--you'd want a dictionary where you have an item as each key, and then values such as price, order date, etc."
learnpython,3e3cni,mrwagn,1 point,Tue Jul 21 17:24:17 2015 UTC,"thank you , i think i understand . So can i also call/learn which keys(items) have the same value(price in your example) , like which keys have a value of 5eu/usd, or it doesnt work like that?"
learnpython,3e3cni,NewbornMuse,1 point,Tue Jul 21 17:51:17 2015 UTC,"You can, by going through the entire dictionary and ""memorizing"" all those keys with value 5 or whatever."
learnpython,3e3cni,novel_yet_trivial,1 point,Tue Jul 21 18:38:30 2015 UTC,"A dictionary is designed to look up a value using the key, not the other way around. If you need the other way around then you build a second dictionary which maps the reverse (prices as keys, items as values in this case). You may have more dictionaries that map weights to items etc ... A collection of dictionaries like this is then called a database."
learnpython,3e3cni,colinq,1 point,Tue Jul 21 18:53:46 2015 UTC,"To expand, lists are great for when you want to be able to access your data with numbers. But there are cases when you want to access your data with strings, and that's where dictionaries come in."
learnpython,3e3cni,a1blank,2,Tue Jul 21 17:30:49 2015 UTC,"Although, dictionaries can index on both"
learnpython,3e3cni,colinq,1 point,Wed Jul 22 01:01:18 2015 UTC,"Yeah, personally I first learned dictionaries = lists with string indexes which made sense to me."
learnpython,3e3cni,Wrathofvulk,2,Wed Jul 22 02:17:36 2015 UTC,"Adding on to what everyone else said, you can basically think of dictionaries as a list, just that the indexes don't necessarily have to be integers - they can be any immutable type (strings, integers, tuples)."
learnpython,3e3cni,NewbornMuse,1 point,Tue Jul 21 17:56:20 2015 UTC,"I see an image in wikipedia , showing Names(keys) and phone numbers (values) can i name values? call them ""Phone Numbers"" ? same question for keys.  p.s by indexes you mean keys and values? sorry newbie here"
learnpython,3e3cni,novel_yet_trivial,1 point,Tue Jul 21 17:59:54 2015 UTC,"""index"" means ""key"" here. If you have a list list1, you can look up the first element by going list1[0], the third by going list1[2], and so on. The ""index is the thing inside the [ ], if you will.  Now suppose you don't want to go ""what's the 0th entry"", but rather ""what's the entry associated with 'asdfgh']"". For things like that, you use a dictionary."
learnpython,3e3cni,novel_yet_trivial,1 point,Tue Jul 21 18:42:44 2015 UTC,Thanks i got it ! :))
learnpython,3e3cni,cdcformatc,1 point,Tue Jul 21 19:00:41 2015 UTC,"Anytime you have x,y data. Lets say you want to know f(x). If you had a ""classic"" list of x values, and a parallel list of y values, you would have to find the index of x and return the value of that index of y:  idx = x_list.index(x) return y_list[idx]   This type of data structure is called a parallel array. The index() function is very slow, because it has to check every value in ""x_list"".  A dictionary (generically called a hash table), does the same thing, but much simpler and much, much faster, in O(1) instead of O(n).  return my_dict[x]"
learnpython,3e35ar,hydrocity_1,1 point,Tue Jul 21 16:27:45 2015 UTC,"What you are describing is a while loop:  from decimal import Decimal a = Decimal(""53.1301"") sub_amt = Decimal(""0.0001"") while a > 0:     #do something     a -= sub_amt    and print them out to excel or something.   This is very simple math ... you really could do this in excel."
learnpython,3e35ar,novel_yet_trivial,0,Tue Jul 21 16:38:50 2015 UTC,"quick question, is xlswriter supposed to open xcel and I should see that data going in or is it saved somewhere.  The x;swriter commands took but when designating to write to sheet it just hangs there, should excel open or something or is it just being saved somewhere?"
learnpython,3e35ar,novel_yet_trivial,2,Tue Jul 21 16:45:17 2015 UTC,It just saves the file.
learnpython,3e35ar,p10_user,0,Tue Jul 21 16:48:50 2015 UTC,"MAN I feel like FUCKKK just give me the answer, waiting through the fluff of you tube videos and articles that dont have the information I am looking for.  This is what I am gonna use its the same thing i think.  while (anglea) > 0:  (anglea) -= 1   worksheet.write (variable1)  worksheet.write (variable2)  worksheet.write (variable3)  worksheet.write (variable4) loop agian"
learnpython,3dzzuv,soqets,14,Mon Jul 20 22:15:42 2015 UTC,"or should I have went with ""celsius"" instead of ""fahrenheit_to_celsius""?   Yes. If you have a verb in the name it implies a function, not a value."
learnpython,3dzzuv,novel_yet_trivial,-1,Mon Jul 20 22:19:08 2015 UTC,There is no verb in fahrenheit_to_celsius.
learnpython,3dzzuv,ingolemo,22,Mon Jul 20 23:06:07 2015 UTC,"""To"" implies ""convert""."
learnpython,3dzzuv,Doormatty,5,Mon Jul 20 23:12:03 2015 UTC,"fahrenheit_to_celsius is more of a function name. Most functions will use verbs, and most variable names should be nouns. You have fahrenheit_temperature and so the celsius temperature should be celsius_temperature.   Also your variable names have to be shorter, if you have to remember how to spell fahrenheit every time you want to use the variable, that is bad. I'd go with f_temp and c_temp or temp_f and temp_c."
learnpython,3dzzuv,cdcformatc,4,Mon Jul 20 23:09:39 2015 UTC,"Also your variable names have to be shorter   To quote and paraphrase /u/jeffry_f, here's how I view it - said in three different ways:   Names tell their reason. If you can know what values your variable holds just by looking at it, you have solved half of your problems.  If you, the reader of the code, are able to understand the held data that your variable with the given name holds by only momentarily reading it, half of the problems that you have have in turn been solved.   Your ""f_temp"", ""c_temp"", ""temp_f"" and ""temp_c"" are like the first. They're unclear and easily misunderstood. You've sacrificed clarity at the expense of brevity, under the false banner of typing ease. Autocomplete exists for that.  ""fahrenheit_temperature"" and ""celsius_temperature"" are like the third (although not particularly extremely). They add redundant words to seem clear, but just miss the chance to quickly summarise their meaning. As /u/zahlman says, space is 3-dimensional, but Celsius and Fahrenheit only measure one thing.  I personally think ""fahrenheit"" and ""celsius"" are appropriate here. Standard shorthand is useful, but ad-hoc shorthand is as difficult to navigate as a foreign dialect's heavy slang."
learnpython,3dzzuv,Veedrac,1 point,Tue Jul 21 08:31:46 2015 UTC,"Agreed. Also, if you're using a sensible IDE (e.g. PyCharm), you don't need to remember how to spell farenheit every time, nor even the first time - your IDE will spellcheck your variable names for you, and autocomplete them after you've declared them."
learnpython,3dzzuv,jaekus123,8,Tue Jul 21 21:58:45 2015 UTC,"To put it simply variable names should be what that variable's value represents. For instance fahrenheit_temperature is good because its value is the temp in F. But farenheit_to_celsius is bad because its value represents the temp in celsius, not the process of turning the temp to celsius.   fahrenheit_to_celsius = (fahrenheit_temperature - 32) * 5 / 9  Furthermore your variable names are too long I'd call them temp_f and temp_c personally."
learnpython,3dzzuv,HipposGoneWild,5,Mon Jul 20 22:20:01 2015 UTC,"I'd call them temp_f and temp_c   temporary_float and temporary_char, huh?  Seriously, though, those are unfortunate names. ""temp"" has one canonical meaning in programming, and it's not ""temperature"". Just ""fahrenheit"" and ""celsius"" do fine, and autocomplete will fix the inevitable spelling troubles."
learnpython,3dzzuv,Veedrac,3,Tue Jul 21 08:01:56 2015 UTC,"I'd probably be wondering where temp_a, b, d, and e were.  Might as well go all the way and just name then c and f at that point."
learnpython,3dzzuv,Polycystic,2,Tue Jul 21 08:12:45 2015 UTC,"I prefer the long, descriptive variable names.  It might seem silly now, but if you have to check up on it in nine months it can make it a little easier to come back to."
learnpython,3dzzuv,Dlgredael,3,Tue Jul 21 02:53:45 2015 UTC,"If you can know what values your variable holds just by looking at it, you have solved half of your problems.  Shortening the variable will help.  If I were to write a very simple cash only cash register simulator, Drawer, CashIn, CashOut are good choices as they tell me exactly what it is.    Same goes for functions, keep it informative.  You will start writing intuitively."
learnpython,3dzzuv,jeffrey_f,1 point,Tue Jul 21 05:23:34 2015 UTC,"I'd probably go with 'temperature_in_fahrenheit' and 'temperature_in_celsius'  Temperature is what the variable is, so I'd think to put that first."
learnpython,3dzzuv,TamerzIsMe,1 point,Tue Jul 21 00:09:25 2015 UTC,"If you know about dicts, you might think temperature[""c""] and temperature[""f""] are more readable. I think that's what I would do.   Edit: as you suggested, ""celsius"" would be better than what you got, since a variable is just a value, it doesn't represent a process. Fahrenheit_to_celsius sounds like a function."
learnpython,3dzzuv,brainmeow,-1,Tue Jul 21 12:34:38 2015 UTC,I would have gone with tempFaren and tempCelsius myself. Having just the units as the name only works if you have one thing to measure. Imagine I had the name meters as the length of my house. What would the width of the house be stored in?  fahrenheit_to celsius doesn't really work. Does it store the temperature in Fahrenheit that is going to be converted or the temperature in Celsius that was converted from Fahrenheit (and why does it matter where it came from?)
learnpython,3dzzuv,AlSweigart,4,Tue Jul 21 00:10:26 2015 UTC,"I would have gone with tempFaren and tempCelsius myself. Having just the units as the name only works if you have one thing to measure. Imagine I had the name meters as the length of my house. What would the width of the house be stored in?   -1: First of all, that looks terrible from a PEP 8 perspective; second, it's unusual to include the units in a variable name anyway except that it's needed here because we're doing a conversion; and finally something like celsius_temperature is just redundant - space is 3-dimensional, but Celsius and Fahrenheit only measure one thing."
learnpython,3e1611,redsedit,6,Tue Jul 21 04:01:28 2015 UTC,"Take a tour through the code of PIL.Image - https://github.com/python-pillow/Pillow/blob/master/PIL/Image.py  Image.open() opens the file but does not read data until something requires it to, like calling load(). load closes the file for you:   This method will close the file associated with the image.   So it seems like Pillow is trying to keep you from needing to be worried about closing the file, and chooses to do it when it thinks its the right thing to do."
learnpython,3e1611,oldpythonbestpython,1 point,Tue Jul 21 04:28:05 2015 UTC,Good to know I'm not missing something. Thanks.
learnpython,3e1611,kurashu89,1 point,Tue Jul 21 12:34:09 2015 UTC,"Not to sway you away from pillow, I started using wand (needed to manipulate pdfs), and it supports using with to work with image files in a context. I was pleasantly surprised at that."
learnpython,3e0n7p,MortiSmorti,3,Tue Jul 21 01:21:56 2015 UTC,"I wouldn't worry about a benchmark. If you are comfortable with what you know give an intermediate challenge a try. There are always going to be gaps in your knowledge. Take some time to research and understand new topics when you encounter them.  I am also going to go out on a limb and say you are interested in programming as a profession (hence the interview question). Most companies know that as a junior programmer you probably have a lot of theoretical knowledge and very little practical experience. That's ok. Be honest about your skills and stress that you are interested in learning from the senior members of the team.   After you cut your teeth on a few professional projects things will start to make a lot more sense. There are concepts that you will use everyday and there are things you may only use once in your career. Don't get discouraged. You may spend as much time googling a way to do something as you do everything else at first. That's normal. Ask lots of questions, ask different developers. Different people have different methods. Discover what works best for you.  Good luck."
learnpython,3e0n7p,vector_zero,1 point,Tue Jul 21 04:18:51 2015 UTC,"Thanks for the advice! Definitely makes sense, like most people I tend to learn better from actually doing rather than just reading and talking about something"
learnpython,3e0n7p,campenr,2,Tue Jul 21 05:26:28 2015 UTC,"I'd recommend looking at something like [checkio.org](www.checkio.org). They have a set of elementary puzzles that helped me reaffirm what I had learnt up to that stage via books/courses. It was also a wake up call because I felt in many ways the books/courses don't prepare you for real problem solving in coding, whereas these little problems do. Maybe it's just me, but I find that having to actually code and figure out what to code (what logical steps are required to solve the problem at hand) makes you learn the workings of the language a lot better because if you don't understand a language feature you can't use it.  TL;DR: once you've learnt the basic language semantics jump in and try some coding."
learnpython,3e0n7p,captain_awesomesauce,1 point,Tue Jul 21 11:04:18 2015 UTC,"My 'filter' questions in an interview are:   How are generators and iterables different What's list comprehension What are the primary data types and how do they differ?   I ask these when someone has ""python programming"" on their resume. (we don't do programming, we do system testing and need to do scripting in whatever language suits the person to automate stuff)"
learnpython,3e238s,CaptainBroccoli,1 point,Tue Jul 21 10:45:46 2015 UTC,Is the aim here to automate correcting the names in the database? Or is the aim to use this database but first you need to fix the typos?
learnpython,3e238s,campenr,1 point,Tue Jul 21 11:09:13 2015 UTC,Automate correction.
learnpython,3e238s,gengisteve,1 point,Tue Jul 21 11:18:56 2015 UTC,Maybe diflib?   https://docs.python.org/2/library/difflib.html
learnpython,3e238s,ecjurobe,1 point,Tue Jul 21 11:09:56 2015 UTC,"This is a pretty good post on making a simple spell checker:  http://norvig.com/spell-correct.html  Edit:    You will have some differences because you are working with a smaller universe of correct spellings.  But the principles should be the same, make a dict or set of good words and start checking mistyped versions of the word, going out to further ""edit distances"" until you get a hit.  You probably also want some sort of log, so that you can check to make sure that it is not acting up."
learnpython,3e0n0d,brownmanrick,3,Tue Jul 21 01:20:09 2015 UTC,"You are very close. Firstly, the (^\d) is completely unnecessary. Then you want to match any of those characters, not all of them. Your code is currently looking for a string like (){}[]. But you want ( or ) or {  etc... To find one character out of a set, enclose your set in square brackets (see help(re) for more info):  >>> re.findall(r'[\(\)\{\}\[\]]',s) ['(', '(', ')', ')']   But to solve the problem you don't need to filter out the non-brackets first."
learnpython,3e0n0d,novel_yet_trivial,3,Tue Jul 21 01:32:03 2015 UTC,"character classes remove the need for escaping special chars. ] needs to be directly after the opening [, [ needs to be before the closing ] (empty class [] makes no sense so ] after opening and [ before closing are assumed to be elts of the class)  >>> re.findall(r'[]{}()[]', '((5+3)*2+1)') ['(', '(', ')', ')']"
learnpython,3e0n0d,Vaphell,2,Tue Jul 21 01:43:53 2015 UTC,Shhh we don't tell them that until they are more experienced with re. That's murky water for a beginner and escaping everything always works.
learnpython,3e0n0d,novel_yet_trivial,1 point,Tue Jul 21 01:55:37 2015 UTC,That was a big help. Thanks!
learnpython,3e0n0d,KronktheKronk,1 point,Tue Jul 21 16:05:34 2015 UTC,What're you planning to do with the parens once you have them all stripped out?
learnpython,3e0n0d,KronktheKronk,1 point,Tue Jul 21 14:32:15 2015 UTC,"Well at first I tried swapping the left-sided parens in a group and converting those into right ones, and comparing that to the right side, but that only works for symmetrical instances. Asymmetrical instances still trip me up. What I'm thinking now is to run a While-Loop through the stripped down string and find all instances of closed parens ""()"", ""[ ]"", & ""{}"" and removing them through each loop cycle(basically working from the middle on outwards). And if that strips The length down to 0 then return True, the parens were formatted right. Otherwise false, they weren't. Any thoughts or ideas for a better way?"
learnpython,3dyr23,Ligorenko,9,Mon Jul 20 16:59:15 2015 UTC,"There's lots of tiny projects on /r/dailyprogrammer, Project Euler, Python Challenge, or others. Find some tiny projects that (this is the important part) are fun or interesting to you."
learnpython,3dyr23,novel_yet_trivial,5,Mon Jul 20 17:14:18 2015 UTC,and http://www.codeabbey.com - more than hundred of simple exercises increasing in difficulty - and ability to see others' solutions (Python is most popular here)...
learnpython,3dyr23,RodionGork,5,Mon Jul 20 20:35:42 2015 UTC,"Save you a click; here's the ""others"":   Easylearncode Codecademy (Py2) learnpython (Py2) PySchools (Py2) CodeAbbey Project Euler MIT OCW: Assignments CheckiO Python Challenge PythonMonk Python Practice Projects Rosalind Python Bioinformatics Problems Codewars Exercism.io Programming By Doing"
learnpython,3dyr23,AlSweigart,0,Tue Jul 21 00:11:58 2015 UTC,Maybe not best to suggest python challenge to someone trying to mainly learn python rather than just have fun. Python challenge has a significant amount of general puzzle to it rather than pure programming problems (I'd suggest maybe 'cheating' to get to the next level and then doing the code problem.) This is from the experience of getting stuck on one since I had no idea what a pickle was at the time!
learnpython,3dyr23,somethingpretentious,4,Mon Jul 20 21:02:49 2015 UTC,Can you backup your save files and installs and then uninstall your games? Sounds drastic but it works very well.  I gave up computer games when I was studying for my year 12 exams and then never really picked them back up after that. This really helped me do well at Uni as well.  You could move your steam directory onto an external hard drive so you won't lose anything.
learnpython,3dyr23,pqu,3,Mon Jul 20 21:57:59 2015 UTC,"When you start to play a game, ask yourself why you wanted to learn python.   If you can't convince yourself then it will be difficult to learn anything, even if you do open a book.  Sometimes we all need a break but be honest about what motivates you."
learnpython,3dyr23,thelindsay,3,Mon Jul 20 21:12:28 2015 UTC,"One thing to keep focus do is to start create an over over over simplified realisation (I mean really simple) of your project. When you have it, add a little by little functionnalities.   Baby steps are the key."
learnpython,3dyr23,xcombelle,1 point,Tue Jul 21 02:58:19 2015 UTC,"""The First Twenty Hours: How to Learn Anything Fast""  You have to break it down and focus on highest leverage skills.  The author outlines his approach on learning Ruby."
learnpython,3dyr23,mpbikeman,2,Mon Jul 20 18:27:41 2015 UTC,"""The First Twenty Hours: How to Learn Anything Fast""  You have to break it down and focus on highest leverage skills.  The author outlines his approach on learning Ruby.     This is some good advice Here are some tips:   Have a end goal Have a big project that you have a use for. I picked up the book ""Automate the boring stuff with python""  last week and it had some fun little projects that learn you python. Halfway through I decided to make a python script that checks if I have songs that I have liked on SoundCloud on my PC. Break it down Make a flow chart/rough sketch of what needs to happen. Like get a list of likes > get list of files in music folder > compare the lists > output results file Research  Check existing solutions to your problems how do I get a list of likes from SoundCloud (api? Ifttt?). How do I get a list of mp3 files only? How do I get this stored in python? How do I find ""artist - song title "" in that list? How do I make a txt file in python? Scrumm Each week you focus on one of the problems that you encountered during step 2.  Over the course of the week you will do the research and come up with a solution.   Divide your time over the week. Some tools for you to use are draw.io and trello im currently on mobile so links are coming in the morning. This is my 3rd try on typing such a large text in this app."
learnpython,3dyr23,dmr8,2,Mon Jul 20 22:06:14 2015 UTC,"If the book's exercises are boring, skip them, and focus on something you want to build. Inevitably, you'll come up with ideas for such personal projects, and those will lead down more paths as you get them working. So write them down as you read through the instructive part of the book, then take a break and try getting one of them working.   Usually, if you start with too big a project, you'll get frustrated by lack of progress and give up. Instead, try to tackle the problems you come up with easiest to hardest. Easier ones include things you know how to do, so get them done, and you'll get good practice. Harder ones will take some figuring/experimentation, and should be left until you have more of the language in your grasp. But it sounds like you have plenty of time to pick up Python."
learnpython,3dyr23,bythenumbers10,1 point,Mon Jul 20 17:06:38 2015 UTC,I took an online course offered through a local community college.  The fact that I paid for it and lessons were due on a schedule kept me focused.
learnpython,3dyr23,nomadlives,1 point,Tue Jul 21 01:11:38 2015 UTC,How do I find a country that gives their workers 6 weeks of holiday.  I get none .
learnpython,3dyr23,jeffinRTP,2,Tue Jul 21 01:26:00 2015 UTC,"You're assuming they are of working age, in the UK summer holidays just started this week for Secondary school and most colleges, for 6 weeks, and University's have also closed for summer 2 weeks ago. They are probably a student, looking to help themselves."
learnpython,3dyr23,LinkToThis,1 point,Tue Jul 21 09:28:57 2015 UTC,You are right. I'm from germany :)
learnpython,3dyr23,xcombelle,1 point,Tue Jul 21 11:13:10 2015 UTC,France ?
learnpython,3dyr23,jeffinRTP,1 point,Tue Jul 21 02:54:08 2015 UTC,"I figured it was somewhere in Europe.  I'm in the us and even though I work full time  (40 hours)  I do not get any vacation, sick, or holidays off with pay."
learnpython,3dyr23,xcombelle,1 point,Tue Jul 21 04:02:50 2015 UTC,"But as you are in us you should have pretty good income, so it's up to you to take holidays without pay no ?"
learnpython,3dyr23,p_p_r,1 point,Tue Jul 21 05:23:00 2015 UTC,I'm just 15 years old and still a student.
learnpython,3dyr23,pfunkmort,1 point,Tue Jul 21 11:12:31 2015 UTC,learn python Free interactive python tutorial
learnpython,3e0zr9,finance_student,1 point,Tue Jul 21 03:05:27 2015 UTC,It looks like you may want item() instead of itemAt().
learnpython,3e0zr9,evilsaltine,1 point,Tue Jul 21 04:07:12 2015 UTC,OMGWTFBBQ...  I just assumed itemAt() was correct since I found it in a few other examples online and it tossed out no errors while still returning some object after all.  That change worked.   I also feel silly since I've used item() instead of itemAt() in another project and didn't even notice the difference.   D'Oh!
learnpython,3e1p6p,Elthran,5,Tue Jul 21 07:31:33 2015 UTC,"print (""Highest Point:"",highestPoint,""\nNew data:"",data)   highestPoint is a function object. You've already called it and assigned its output values to peak and data.  I'm assuming you want to replace 'highestPoint' with 'peak' in this line."
learnpython,3e1p6p,oldpythonbestpython,1 point,Tue Jul 21 07:36:54 2015 UTC,"Thanks, I'm an idiot!!!! You saved me."
learnpython,3e1oli,carlos_spicy_winner,2,Tue Jul 21 07:24:02 2015 UTC,"If you are incrementing xi and yi by 1 infinitely (while True), then eventually xi or yi  is going to be higher than the highest index in the lists xs/ys. That is where your error is coming from.  You need to figure out when to stop looping over the lists xs/ys."
learnpython,3e1oli,oldpythonbestpython,1 point,Tue Jul 21 07:39:59 2015 UTC,I knew it was something dumb like that. Thank you!
learnpython,3e1oli,jeans_and_a_t-shirt,1 point,Tue Jul 21 07:44:34 2015 UTC,"If I'm understanding the problem correctly, then for future reference, this problem can be solved like so:  def return_merge(xs, ys):     return list(set(xs) & set(ys))   or, manually like this if the above code is considered cheating for the excercise:  def return_merge(xs, ys):     return [x for x in xs if x in ys]"
learnpython,3e0mlj,ascottishnoobie,5,Tue Jul 21 01:16:37 2015 UTC,Variables only exist within the function (known as the functions scope). You can force a variable outside of a functions scope by making it global ... but this is not good practice. You should import data with function arguments and export data from the function with a return statement.  def my_func(data_in):     data_out = data.capitalize()     return data_out   If you have trouble using these then show us your code and where you are stuck.
learnpython,3e0mlj,novel_yet_trivial,3,Tue Jul 21 01:24:09 2015 UTC,i think line 2 should be data_in.capitalize()
learnpython,3e0mlj,iammrinal0,1 point,Tue Jul 21 08:05:27 2015 UTC,Exactly WHY is it not good practice to use global variables???
learnpython,3e0mlj,jeffrey_f,5,Tue Jul 21 05:26:41 2015 UTC,"If you Google ""WHY is it not good practice to use global variables"" you will find many in depth explanations."
learnpython,3e0mlj,novel_yet_trivial,1 point,Tue Jul 21 05:45:51 2015 UTC,"You could simply do it like this:  def just_do_it(name):     if name[:1].upper() == ""R"":         if len(name) > 10:             print(""My message about {}"".format(name))  def main():     just_do_it('Robertooooo')  if __name__ == '__main__':     main()   Or like this by just passing the name into your 2nd function. (if you really need 2 functions)  def just_do_it(name):     if name[:1].upper() == ""R"":         over_10(name)  def over_10(name):     if len(name) > 10:         print(""My message about {}"".format(name))  def main():     just_do_it(name='Robertooooo')  if __name__ == '__main__':     main()   the world is your oyster"
learnpython,3e0mlj,maks25,2,Tue Jul 21 05:57:55 2015 UTC,if checking only the first letter wouldn't name[0] suffice? why to use split?
learnpython,3e0mlj,iammrinal0,1 point,Tue Jul 21 17:45:42 2015 UTC,You can yes. Just another way of doing it.
learnpython,3e1b07,JaggedG,2,Tue Jul 21 04:49:34 2015 UTC,"Hey, this should give you the answer:  You have pip setup to only install for python2.7, here is how you fix that. https://docs.python.org/3/installing/  [copy pasted] ... work with multiple versions of Python installed in parallel? On Linux, Mac OS X and other POSIX systems, use the versioned Python commands in combination with the -m switch to run the appropriate copy of pip:  python2   -m pip install SomePackage  # default Python 2 python2.7 -m pip install SomePackage  # specifically Python 2.7 python3   -m pip install SomePackage  # default Python 3 python3.4 -m pip install SomePackage  # specifically Python 3.4 (appropriately versioned pip commands may also be available)  On Windows, use the py Python launcher in combination with the -m switch:  py -2   -m pip install SomePackage  # default Python 2 py -2.7 -m pip install SomePackage  # specifically Python 2.7 py -3   -m pip install SomePackage  # default Python 3 py -3.4 -m pip install SomePackage  # specifically Python 3.4"
learnpython,3e1b07,maks25,1 point,Tue Jul 21 05:37:18 2015 UTC,"Awesome, that did it-- Thanks for the helpful answer! That was driving me crazy >_<"
learnpython,3e1b07,maks25,2,Tue Jul 21 06:40:32 2015 UTC,No problem!
learnpython,3e1av3,Kappalicious_,1 point,Tue Jul 21 04:48:01 2015 UTC,Read a little and then immediately try out what you've learned. The wiki lists a lot of good resources. My personal favorite is Program Arcade Games with Python and Pygame (was great fun to read/watch).
learnpython,3e1av3,dunkler_wanderer,2,Tue Jul 21 07:30:49 2015 UTC,"I'm currently on Chapter 2 of ""Program Arcade Games"". So far it's the best tutorial I've used and it's keeping me engaged."
learnpython,3e1av3,soqets,1 point,Tue Jul 21 07:54:02 2015 UTC,"Solve a problem or automate a task you do frequently  You can also take a look at Python Cookbook, which has prebuilt code snippets which can be plugged into your code. http://www0.cs.ucl.ac.uk/staff/M.Gryka/download/pcb3.pdf  all the code is here https://github.com/dabeaz/python-cookbook"
learnpython,3dzuec,howtopython,4,Mon Jul 20 21:35:48 2015 UTC,">>> class MyObject(): ...     def __init__(self, attribute1,attribute2,attribute3): ...             self.attribute1 = attribute1 ...             self.attribute2 = attribute2 ...             self.attribute3 = attribute3 ... >>> >>> my_instance = MyObject('the string', 3, 3.141592635) >>> my_instance.attribute1 'the string' >>> my_instance.attribute3 3.141592635 >>> my_instance.attribute2 3   Is one way. You can also dynamically assign attributes:  >>> my_instance.dynamically_added = 'anything here' >>> my_instance.dynamically_added 'anything here'   In python, there's no need to declare that you want an object that has a str, an int, and a float, you just pass them in. You can raise TypeErrors in your __init__ if you want, as well."
learnpython,3dzuec,The-Mathematician,2,Mon Jul 20 22:30:14 2015 UTC,"What is self(argument for init)? The question is   Define a Dish object with three fields: a string for the name of the dish, a number for its price, and a number for the number of calories in the dish. Define a namedtuple for representing dishes like this and create three actual Dish objects (just make up the values for each Dish and assign them to variables named d1, d2, and d3).   Would it be like (no idea how to format on reddit)  class MyObject(self,dish,price,calories) self.dish=dish self.price=price self.calories=calories   my_instance = MyObject(pizza', 9.99, 1000) my_instance.dish 'pizza' my_instance.price 9.99 my_instance.calories 1000"
learnpython,3dzuec,The-Mathematician,3,Mon Jul 20 22:45:05 2015 UTC,"When you call a method on an object, it implicitly gets passed to the method. The . syntax in an expression like my_instance.foo() is syntactic sugar for MyObject.foo(my_instance). The implicit object is commonly called self in python.  However, this is not the way you want to do this assignment, since it specifies that it wants namedtuples.  EDIT: namedtuple docs"
learnpython,3dzuec,The-Mathematician,2,Mon Jul 20 22:50:47 2015 UTC,I looked at the doc and I'm confused. I know how to define namedtuples but confused about how to define the dish object in the namedtuple.
learnpython,3dzuec,The-Mathematician,2,Mon Jul 20 23:04:35 2015 UTC,">>> from collections import namedtuple >>> Dish = namedtuple('Dish', 'name price calories') >>> pizza = Dish('pizza', 2.99, 450) >>> pizza.calories 450"
learnpython,3dzuec,The-Mathematician,1 point,Mon Jul 20 23:07:49 2015 UTC,"oh i see, thanks! I had a feeling it wouldn't be as complicated because of the class objects."
learnpython,3dzuec,The-Mathematician,1 point,Mon Jul 20 23:12:37 2015 UTC,"Not sure if I'm doing this right(diff question relating to the same problem)  Write a function called Dish_str that takes a Dish and returns a string in this form: Paht Woon Sen ($9.50): 330 cal   I put  def Dish_str():     print(d1.name, d1.price, d1.calories)     print(d2.name, d2.price, d2.calories)     print(d3.name, d3.price, d3.calories)   Dish_str()   The thing is that I can't add + 'cal' on the print statements because   TypeError: unsupported operand type(s) for +: 'float' and 'str'"
learnpython,3dzuec,The-Mathematician,1 point,Tue Jul 21 00:37:20 2015 UTC,"You want to use the .format method of strings. Check this:  from collections import namedtuple Dish = namedtuple('Dish', 'name price calories') pizza = Dish('pizza',2.99, 350) def my_function(dish):     print('{}: {} blah {}'.format(dish.name,dish.price,dish.calories))  def my_function2(dish):     print('{0.name} blah 2 {0.price} blah3 {0.calories}'.format(dish))   my_function(pizza) my_function2(pizza)   outputs:  pizza: 2.99 blah 350 pizza blah 2 2.99 blah3 350"
learnpython,3dy1ur,investinginme,7,Mon Jul 20 13:51:44 2015 UTC,"Having ""imagePath"" inside the string you are passing to the system call is not expected to substitute the value of your variable.  You can substitute variables into strings using  % substitution or the .format() call - see here for a discussion on the topic which includes examples:  http://stackoverflow.com/questions/5082452/python-string-formatting-vs-format"
learnpython,3dy1ur,jibbly_jibbly,2,Mon Jul 20 14:45:56 2015 UTC,Thanks ! that worked !
learnpython,3dy1ur,swingtheory,2,Mon Jul 20 15:13:16 2015 UTC,"Quick note:  The original code you wrote would do what you think it does if you were writing in Perl.  For example:  my $imagePath='/usr/boo/foo/doo/blah'; system(""/user/bin/CustomApplication $imagePath"");   would work because perl has built in string interpolation when you use double quotes. I'm not trying to say anything positive or negative about Perl in regards to Python, but I thought this was a neat thing to point out about two different scripting languages."
learnpython,3e0w9f,saabr,3,Tue Jul 21 02:35:53 2015 UTC,"has_class_but_no_id is not executing when you pass it to find_all().  find_all performs the call to has_class_but_no_id, multiple times, passing it tags as the value of 'tag' at that time. This is a pattern which takes advantage of the fact that in python, functions are what's known as first-order objects - they exist as objects, and you can pass them around in variables.  This allows functions to accept other functions and run them at a later time  - just like beautifulsoup is doing here.  Try an experiment:  def say_something(something_to_say):     print something_to_say  def call_another_function(func, argument):     func(argument)  call_another_function(say_something, ""hi there"")"
learnpython,3e0w9f,oldpythonbestpython,2,Tue Jul 21 02:58:22 2015 UTC,"Functions are objects. You can __call__ them, set/get attributes on them, assign them to things, pass them around, etc."
learnpython,3e0w9f,raylu,2,Tue Jul 21 02:38:11 2015 UTC,"But, don't you think soup.find_all(has_class_but_no_id) is going to give an error as tag is not initialized there and hence has no type associated with it."
learnpython,3e0w9f,elbiot,3,Tue Jul 21 02:44:10 2015 UTC,Find all takes a function that takes an argument.  It will call that function with the argument when it does it's thing.
learnpython,3e0w9f,zahlman,1 point,Tue Jul 21 02:46:14 2015 UTC,with the argument   Which argument?
learnpython,3e1g5s,thezaynthe,1 point,Tue Jul 21 05:43:25 2015 UTC,"You can run python in your terminal (or through sublime or an IDE etc), so yes you can run python syntax without having to save it as a *.py file first."
learnpython,3e1g5s,maks25,1 point,Tue Jul 21 05:48:55 2015 UTC,Whenever I try running it on IDLE it says to save the file first.....
learnpython,3e1g5s,zombie_soul_crusher,1 point,Tue Jul 21 06:08:44 2015 UTC,"Whenever I try running it on IDE it says to save the file first.....   I think you mean IDLE and yes, you need to save the file first.  You can open the interactive python interpreter (or shell).  Open a terminal and type 'python', followed by return.  This will open the shell where you can run any commands you like."
learnpython,3e1g5s,zombie_soul_crusher,1 point,Tue Jul 21 06:19:46 2015 UTC,"sorry about that.....  so type in ""python return"" in one line?.....   (sorry if Im being a bit of a idiot here.....)"
learnpython,3e1g5s,dunkler_wanderer,1 point,Tue Jul 21 06:49:54 2015 UTC,"Open a terminal. Type 'python', without the apostrophes. Press the 'Return' key on your keyboard. You are now using the python shell and you should see something like this:  zombie@zombie-laptop:~$ python  Python 3.4.0 (default, Jun 19 2015, 14:20:21)  [GCC 4.8.2] on linux Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>>     You are using linux, yes?"
learnpython,3e0q7b,Romanticon,2,Tue Jul 21 01:46:44 2015 UTC,"Easiest solution would be to add something to the bottom that waits for the user, such as  input(""Press enter to continue..."")"
learnpython,3e0q7b,novel_yet_trivial,1 point,Tue Jul 21 01:52:45 2015 UTC,"Just tested it.  That would be brilliant - but I'm not sure the application even makes it that far after being compiled.  My steps are something like:   Test as Python file from command line.  Script works perfectly. Run the pyinstaller command (in OP).  Compiles as an app without any errors. Open up the folder, find both an executable .app package, and the Unix executable file. Double-click the Unix executable file, runs with no issues.  But I can't send that to other Mac users. Double-click the .app package, see it appear for a split second on the taskbar and then it auto-closes.  My script contains commands to open a couple other programs, and that never happens.  It's as if the app quits before even running. Frustrated, open up the .app package (with ""Explore contents""), find the executable Unix file in it, and see that it works with no problems.   In short, the package closes upon launch without actually running.  Is there a way to have it fully, well, you know, run?"
learnpython,3e0q7b,novel_yet_trivial,3,Tue Jul 21 03:54:39 2015 UTC,"I know nothing about mac, but can't you run the .app file from the terminal? Instead of double-clicking it? Then you could see the error it's throwing. As a wild guess, navigate to the folder it's in and type  ./file_name.app   or   /full/path/to/file/file_name.app   Otherwise, you need to wrap your program in a new program, which imports and executes your program in a try block and writes the traceback to a file or prints it to screen.   Edit: some googling says to use the open command:  cd folder/app/is/in open ./file_name.app   or   open /full/path/to/file/file_name.app"
learnpython,3e0q7b,novel_yet_trivial,1 point,Tue Jul 21 04:10:20 2015 UTC,"Another good idea - but when I try and run the .app from the terminal, the terminal says that it's a directory.  I guess because it's a package, terminal only wants to open it?  -bash: ./My_script.app: is a directory   Viewing it in Finder, on the other hand, calls it an application.    I'll give the try block approach a shot..."
learnpython,3e0q7b,novel_yet_trivial,1 point,Tue Jul 21 04:14:49 2015 UTC,See my edit
learnpython,3dzl3x,rm_-rf_slashstar,4,Mon Jul 20 20:30:11 2015 UTC,"You seem to have figured it out already. Because   if False and ""test"" in non_existent_variable or ""test"" in non_existent_variable2:   is evaluated in python as  if ((False and ""test"" in non_existent_variable) or ""test"" in non_existent_variable2):   An or statement requires evaluating both arguments."
learnpython,3dzl3x,novel_yet_trivial,3,Mon Jul 20 20:35:06 2015 UTC,"Ahh, of course!! Had myself confused there...thanks!"
learnpython,3e0b3m,violetbaelette,2,Mon Jul 20 23:43:02 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3e0b3m,Justinsaccount,1 point,Mon Jul 20 23:44:33 2015 UTC,Thank you!!
learnpython,3e0b3m,HipposGoneWild,3,Tue Jul 21 00:22:06 2015 UTC,"inputs = input(""Type something: "") sums = '' for m in range (len(inputs)-1, -1, -1):    sums += inputs[m] print(sums)   This worked for me, The only change I had to make was changing that 0 to ' '. There is a better way though of doing it:  def reverse(inputs):     return inputs[::-1]   for your other question use an if statement. Example:  blonde = True if blond:     print(""true"") else:     print(""false"")"
learnpython,3e0b3m,campenr,1 point,Mon Jul 20 23:54:50 2015 UTC,"Thanks a ton! You helped so much. It turns out I keep getting mixed up with where len(variable) needs to have a variable[i] or just a plain i, but your code showed me that I had the wrong form in my loop in IDLE."
learnpython,3dylx7,no_sle3p,2,Mon Jul 20 16:23:03 2015 UTC,"Quoting the documentation:   start([interval])    Begin autoincrement mode: schedules a recurring timer event that calls Progressbar.step() every interval milliseconds. If omitted, interval defaults to 50 milliseconds.   The way that your code calls Progressbar.start is that it schedules a loop in the Tk event loop - since you're running other code most of the time, Tk's event loop is being starved for time. You have two options here:   Stop starving the Tk event loop. You can do this by running the downloader in another thread, and arranging communication between the two threads to report progress information. Stop relying on the Tk event loop for the progress bar. Try using Progressbar.step, since it directly moves the progress bar ahead."
learnpython,3dylx7,adamnew123456,1 point,Mon Jul 20 16:39:51 2015 UTC,"You don't want to use .start() and .stop() if you're running other code, since the event loop won't be able to run. You might want to look at this module I wrote to do exactly this. I set the ['maximum'] to 1000, and in the callbacks set the ['value'] to 1000*value/total (which you appear to by given by your callback). You need to call .update() after changing values, to force Tkinter to update the progress bar."
learnpython,3dylx7,TeamSpen210,1 point,Mon Jul 20 21:32:32 2015 UTC,"This is what NMT say's about update().   This method forces the updating of the display. It should be used only if you know what you're doing, since it can lead to unpredictable behavior or looping. It should never be called from an event callback or a function that is called from an event callback.   Using .update_idletasks() is the better option."
learnpython,3dylx7,Tomarse,1 point,Tue Jul 21 15:31:12 2015 UTC,"This is how I use progress bar...  prog = ttk.Progressbar(root,orient='horizontal',length=300,mode='indeterminate') prog.grid()  prog['maximum'] = 1000 ## You should probably set this to the file size of the video pval = 0 ## This will be incremented and used to update the progress bar prog['value'] = pval ## This is how the progress bar will be updated. prog.update_idletasks() ## This ensures the updates to the progress bar refresh the gui.   Then as you're going through your process.  pval = pval + 10 ## Or whatever increment makes sense. prog['value'] = pval prog.update_idletasks()   If you're downloading a file then I would suggest maximum is set to the full file size, and as you're downloading you periodically get the size of the file at the destination and set that as the value of the progress bar."
learnpython,3dzxab,niceb0y,1 point,Mon Jul 20 21:56:40 2015 UTC,"What is with all the for loops and the appending above the introductory text ""Welcome to the wumpus hunt""?  You don't need anywhere near that amount of code. Your while loop is infinite anyways so you never will reach the code where the game is actually played.  Can you tell me what that mass of code above the intro is trying to do exactly and I will show you how to do it 5 lines."
learnpython,3dzxab,HipposGoneWild,1 point,Mon Jul 20 22:12:02 2015 UTC,"Actually, the outer while loop only happens once. Line 35 shadows i used for line 31's condition."
learnpython,3dzxab,raylu,1 point,Mon Jul 20 22:24:42 2015 UTC,"if len(caves[i]) >= 3:         continue    causes it to loop infinitely.  But anyways what I was trying to tell you is that you can turn the first 50 lines of code into:  cave_numbers = range(1,21) wumpus_location = choice(cave_numbers) player_location = choice(cave_numbers) while player_location == wumpus_location:     player_location = choice(cave_numbers)   Edit: thought you were op"
learnpython,3dzxab,HipposGoneWild,1 point,Mon Jul 20 22:28:09 2015 UTC,Generate random caves. Keep track of visited and unvisited caves.
learnpython,3dzxab,HipposGoneWild,1 point,Mon Jul 20 22:29:08 2015 UTC,"You only need to create a list from 1 to 20 to generate the caves, then you just put the wumpus in a random cave and the player in a random cave:  you can turn the first 50 lines of code into:  cave_numbers = range(1,21) wumpus_location = choice(cave_numbers) player_location = choice(cave_numbers) while player_location == wumpus_location:     player_location = choice(cave_numbers)"
learnpython,3dzxab,HipposGoneWild,1 point,Mon Jul 20 22:31:12 2015 UTC,I have that in there.  Also certain caves have to connect to other caves.
learnpython,3dyy9d,QuickNDirty1,2,Mon Jul 20 17:49:18 2015 UTC,"There's several websites that do that, mapalist.com for instance."
learnpython,3dyy9d,novel_yet_trivial,1 point,Mon Jul 20 17:51:59 2015 UTC,"Ooo... thanks - that is definitely something that I can use.  If it exists, however, I'd still like to see how such a thing is done in python (if it can be done) for the sake of seeing how such a thing can be done in python."
learnpython,3dyy9d,GenericHbomb,2,Mon Jul 20 22:24:37 2015 UTC,Ive never used it but somebody will probably have an example  Google maps api
learnpython,3dxk9k,Another_boy,11,Mon Jul 20 10:46:47 2015 UTC,for a new programmer this is pretty complex.  sounds like your code is stuck in a loop somewhere. cmd/ctrl+c will give you the last code that was run in the loop and also help you exit. Have a look in there what the problem is
learnpython,3dxk9k,trowawayatwork,2,Mon Jul 20 10:53:22 2015 UTC,"Thank you for responding. I don't know if it gets stuck in a loop or not but it doesn't freeze and responds to mouse input. I pressed Ctrl+C in the Shell window. Nothing happens right away but when I point the mouse pointer on the icon in systray it says:  Python WNDPROC handler failed Traceback (most recent call last):   File ""C:\Documents and Settings\user\Desktop\New Folder\13.py"", line 132, in notify     def notify(self, hwnd, msg, wparam, lparam): KeyboardInterrupt   I just want to know how to add my code to the SysTrayIcon.py demo. It start in line 244. The systray demo and my code work OK separately but don't work when combined."
learnpython,3dxk9k,seducer4real,6,Mon Jul 20 11:10:29 2015 UTC,"Just how the hell are you a new programmer?You must have lots of experience in other languages i assume?  Edit: Just realised you said that you only wrote the end part, but it is still impressive for a newcomer."
learnpython,3dxk9k,PJBentham,3,Mon Jul 20 17:11:30 2015 UTC,"Ha I thought exactly this... Here I was thinking I was a ""new to programming"" and then this beginner blows my mind with code!"
learnpython,3dxk9k,AlSweigart,1 point,Mon Jul 20 21:11:05 2015 UTC,I literally copy-pasted that from stackoverflow and just changed the URL.
learnpython,3dxk9k,Lj101,2,Mon Jul 20 22:34:49 2015 UTC,Can you give use the StackOverflow link that you copied this from?
learnpython,3dxk9k,Lj101,1 point,Tue Jul 21 00:13:59 2015 UTC,Here. It's not actually StackOverflow but I got there from there.
learnpython,3dynta,PresBuchanan,4,Mon Jul 20 16:36:30 2015 UTC,"Reformatted  Please do not respond to this post as I am a bot.    Hey all, I am learning python and stuck on a really simply concept.   The following is a simple code to add/multiply numbers:  def sums(listofnums):     total=0     for i in listofnums:         total=total+i     return total  def multiply(listofnums):     total =1     for i in listofnums:         total = total+i     return total  listofnums= input((""Put a set of numbers here seperated by commas"")) print (sums(listofnums)) print (multiply(listofnums))   In the listofnums= input((""Put a set of numbers here seperated by commas"")). It is not working with the code.   How do I fix this?   Thanks all!  EDIT: Sorry for the bad format. To keep it simple I want to know how to make an input of numbers such that it registers as (1,2,3,4) when going through the code."
learnpython,3dynta,RubyPinch,2,Mon Jul 20 16:39:17 2015 UTC,"Input returns a string. You need to first convert the string to a list (look into split(), and then convert each string in the list to a number (look into int(), or float()) before you add or multiply it to the total.  Also: how to format your code for reddit."
learnpython,3dynta,novel_yet_trivial,1 point,Mon Jul 20 16:40:55 2015 UTC,"Thanks for help.  I tried this idea and came up with the following:  listofnums= (input(""numbers: "")).split("","") print(listofnums) print (sums(listofnums)) print (multiply(listofnums))   It returns   numbers: 1,2,3 ['1', '2', '3'] Traceback (most recent call last): File ""C:/Python34/46 simple python ex/sum() and mult() v2.py"", line 16, in <module> print (sums(listofnums)) File ""C:/Python34/46 simple python ex/sum() and mult() v2.py"", line 4, in sums total=total+i TypeError: unsupported operand type(s) for +: 'int' and 'str'   Unfortunitely this does not work because I suspect it thinks that '1','2','3' are strings. How do I adjust this to make them intergers? or even better floats?"
learnpython,3dynta,novel_yet_trivial,1 point,Mon Jul 20 16:57:03 2015 UTC,You can convert a single string to a float with float(). You are already looping over the single strings with for i in listofnums:. Just convert it to a float before you add it.
learnpython,3dynta,novel_yet_trivial,1 point,Mon Jul 20 17:00:40 2015 UTC,"can you expand on this a bit?  I tried this but it isnt right either:  def multiply(listofnums): total =1 for i in float(listofnums):     total = total+i return total   I also tried   listofnums= (float(input(""numbers: "")).split("",""))   It similarly does not work"
learnpython,3dynta,campenr,3,Mon Jul 20 17:07:42 2015 UTC,You keep trying to convert the entire list to floats. You need to convert the values one at a time.  for i in listofnums:     #i is a single number as a string     i_as_float = float(i)     total = total+i_as_float
learnpython,3dzdg4,KevinWongyWongy,1 point,Mon Jul 20 19:35:42 2015 UTC,"Not super familiar with pandas but you could make your code a lot more readable and therefore easier to trouble shoot by refactoring. For example, you use:  df[['name1', 'name2', 'average']].sort('average') three times,   df['average'] = df[['score1', 'score2', 'score3']].mean(axis=1) three times,  pd.read_csv('classb.csv') three times, and so on.  You could do all these things once, especially reading the file. If you fixed this there would perhaps be three times less code to sift through in order to find out what's wrong. And when you find whats wrong you don't have to fix each instance you used the code because you only used it once."
learnpython,3dzdg4,campenr,1 point,Mon Jul 20 23:50:14 2015 UTC,"ANYTHING you do more than once, make a function and replace the repetitive code with your function.......makes things easier.  You can pass variables to a function."
learnpython,3dzdg4,jeffrey_f,1 point,Tue Jul 21 05:17:45 2015 UTC,"I'm getting a ton of syntax errors so you must clean those up first, basically your indents are all over the place.   Mainly the following statement is not indented (repetitively):  print(df[['name1', 'name2', 'rank2', 'rank1', 'rank0']])   Also some loops aren't indented properly either.  Now after that I got a name error on line 7. This is because you are using ""input"" and not ""raw_input"".  Another thing is, you aren't importing pandas. You need the following line on the top  import pandas as pd   After fixing all that I got an obvious IOError because I don't (understandably) have the file classa.csv so I can't test it any further.  I've used pandas in the past and it's quite an advanced library. Might I suggest numpy instead, might be easier? You might not even need numpy and could actually do it yourself (just use csv to load the file).  Also, look into ""DRY"". You can make this code a lot more readable by breaking it into functions. As /u/campenr and /u/jeffrey_f pointed out there is a lot of repetition in there.  import pandas as pd  print(     ""Welcome to the Database sorter. The system works based on the following functions. Choose your class by inputting a letter, and choose the method of sorting the data by inputing a number afterwards. A is for Class A, B is for Class B and C is the Class C.1 is for soritng the data as an average, 2 is for sorting the data in alphabetical order and 3 is for sorting the data from highest to lowest."") classanddatasorter = '' while not classanddatasorter in [""A1"", ""A2"", ""A3"", ""B1"", ""B2"", ""B3"", ""C1"", ""C2"", ""C3""]:     classanddatasorter = raw_input(""Input [A/B/C][1/2/3]"")  if classanddatasorter == ""A1"":     df = pd.read_csv('classa.csv')     print('Sorted by name1')     df.sort('name1')     print(df) elif classanddatasorter == ""A2"":     df = pd.read_csv('classa.csv')     print('Sorted by average column')     df['average'] = df[['score1', 'score2', 'score3']].mean(axis=1)     print(df)     print(df[['name1', 'name2', 'average']].sort('average')) elif classanddatasorter == ""A3"":     df = pd.read_csv('classa.csv')     print('Sorted scores')     scores = df[['score1', 'score2', 'score3']].values     scores.sort(axis=1)      for i in xrange(0, scores.shape[1]):         column_name = 'rank{}'.format(i)         df[column_name] = scores[:, i]      print(df[['name1', 'name2', 'rank2', 'rank1', 'rank0']]) elif classanddatasorter == ""B1"":     df = pd.read_csv('classb.csv')     print('Sorted by name1')     df.sort('name1')     print(df) elif classanddatasorter == ""B2"":     df = pd.read_csv('classb.csv')     print('Sorted by average column')     df['average'] = df[['score1', 'score2', 'score3']].mean(axis=1)     print(df)     print(df[['name1', 'name2', 'average']].sort('average')) elif classanddatasorter == ""B3"":     df = pd.read_csv('classb.csv')     print('Sorted scores')     scores = df[['score1', 'score2', 'score3']].values     scores.sort(axis=1)      for i in xrange(0, scores.shape[1]):         column_name = 'rank{}'.format(i)         df[column_name] = scores[:, i]      print(df[['name1', 'name2', 'rank2', 'rank1', 'rank0']]) elif classanddatasorter == ""C1"":     df = pd.read_csv('classc.csv')     print('Sorted by name1')     df.sort('name1')     print(df) elif classanddatasorter == ""C2"":     df = pd.read_csv('classc.csv')     print('Sorted by average column')     df['average'] = df[['score1', 'score2', 'score3']].mean(axis=1)     print(df)     print(df[['name1', 'name2', 'average']].sort('average')) elif classanddatasorter == ""C3"":     df = pd.read_csv('classc.csv')     print('Sorted scores')     scores = df[['score1', 'score2', 'score3']].values     scores.sort(axis=1)      for i in xrange(0, scores.shape[1]):         column_name = 'rank{}'.format(i)         df[column_name] = scores[:, i]      print(df[['name1', 'name2', 'rank2', 'rank1', 'rank0']])"
learnpython,3dzdg4,maks25,1 point,Tue Jul 21 05:28:16 2015 UTC,"Damn I'm stupid for forgetting to import the pandas module. In earlier drafts I definitely had it, not sure how I managed to lose it and without noticing. Thanks for the reminder.  IIRC raw_input is depreciated in Python 3 and beyond. I'm going to try using input() but do you think I should use that or alternaitvely eval(input())?  Thanks for helping me with my wonky indentation. At the current moment I'm getting a generic ""unindent does not match any outer indentation level"" error with 74 line in the code which I'm going to look at.  Regarding you, /u/jeffrey_f and /u/campenr said about the excessive amount of repetition in my code, I was struggling to implement functions earlier so I scrapped it initially in order to get the baseline code working. This is not the final thing so I will be able to go back to my code and I would like to be able to create a more efficient solution but I'm trying to focus on getting the core code working before moving on to functions etc."
learnpython,3dzdg4,campenr,1 point,Tue Jul 21 18:41:19 2015 UTC,"I would use input() as it is the preferred method for python 3.  I appreciate you want to optimize later but get it working first, but I think that you have so much code duplication that it is hindering your efforts to get it working.   Also I would highly consider restarting using functions. Putting each functional step in a python function allows you to modularise your code. This means that each function can be easily tested before moving on to coding the next.  For example:  def import_data(file_path):     # Do the stuff to import the file and convert to dataframe here     return df   This function does one, easy to understand, easy to test thing. Rinse and repeat for the rest of your code (testing each new function before coding a new one)."
learnpython,3dzdg4,maks25,1 point,Tue Jul 21 19:25:57 2015 UTC,"Sorry, still using python2.7 because some libraries never upgraded :( Yes raw_input was deprecated for python3.  And I agree with /u/campenr, I would honestly restart and and start using functions from the start.  It's so spaghetti I want to simply re-write it for you, but unfortunately I am just working on a deadline and I can't :("
learnpython,3dw7kr,alldayprogram,24,Mon Jul 20 01:21:14 2015 UTC,it can't feel love as far as i know.
learnpython,3dw7kr,manueslapera,10,Mon Jul 20 13:25:23 2015 UTC,"The big one (besides being 30-100x slower than c) is it can't run in a browser.  Only javascirpt can do that.  If you want code it run in browser, in a website, it needs to be ECMA script (javascript)"
learnpython,3dw7kr,elbiot,4,Mon Jul 20 03:38:36 2015 UTC,What about brython? I've never used it myself but doesn't that allow you to run python in the browser.
learnpython,3dw7kr,Sean1708,3,Mon Jul 20 07:42:17 2015 UTC,"I believe that it transpiles python into javascript source, and then the javascript can run in the browser.  So you can use python to generate javascript, but python does not run in the browser (in this case)."
learnpython,3dw7kr,elbiot,1 point,Mon Jul 20 16:50:29 2015 UTC,"Ah OK, I thought it was a Python interpreter written in Javascript."
learnpython,3dw7kr,Sean1708,1 point,Mon Jul 20 16:58:04 2015 UTC,The usual warning of code generation applies though: It will be very difficult to debug the code once it has been converted to JavaScript.
learnpython,3dw7kr,AlSweigart,1 point,Tue Jul 21 00:30:17 2015 UTC,It's still JavaScript interpreting Python.
learnpython,3dw7kr,an_actual_human,4,Mon Jul 20 10:39:33 2015 UTC,But how is that different from C interpreting python?
learnpython,3dw7kr,Sean1708,0,Mon Jul 20 12:22:42 2015 UTC,There are Python Python interpreters.
learnpython,3dw7kr,an_actual_human,4,Mon Jul 20 12:27:21 2015 UTC,"Anything (if it can be compiled to C-like) can be run in a browser these days thanks to asm.js. Not saying it's always the best option but i'll just leave this here.  And before anyone says it yes it is ""still javascript"" but you don't have to actually write it which is the import part."
learnpython,3dw7kr,campenr,2,Mon Jul 20 13:10:32 2015 UTC,Holy shit. Who needs Unity?!
learnpython,3dw7kr,henrebotha,1 point,Mon Jul 20 13:39:38 2015 UTC,"This is true.  No one would claim you can't run python on a computer because it's actually bytecode being interpreted by c.  So, bytecode interpreted by an interpreter written in javascript is legitimate.  However, a javascript python interpreter would be a heavy download*, slow as molases, and doesn't fully exist yet.  Though, see pypy.js.  So the story may change, but I stand by my claim for the time being.    *Though, there are some pretty small python interpreters (55kb)"
learnpython,3dw7kr,elbiot,1 point,Mon Jul 20 17:05:08 2015 UTC,Isn't that what django is for. I thought one of the strong points of python is web applications. Am I missing something here? I am not very learned in these areas.
learnpython,3dw7kr,elbiot,1 point,Mon Jul 20 23:33:39 2015 UTC,"Django is server side, and is awesome.  It serves html/css/javascript to clients' browsers."
learnpython,3dw7kr,keturn,9,Tue Jul 21 01:43:19 2015 UTC,"A Python process only makes use of a single CPU core, so in this era when low-end laptops (and even phones) have multiple cores, there are applications for which that's kind of annoying.  Writing correct programs that handle parallel execution is a hard topic in any language, but some approaches just haven't been doable in Python at all.  (You can run multiple python processes that run at the same time and talk to each other, but that's not quite the same thing.)  Pypy is doing some very interesting research in this area, but that branch of pypy is still very much in research mode. Promising but not yet usable."
learnpython,3dw7kr,stubborn_d0nkey,2,Mon Jul 20 03:57:07 2015 UTC,"Is it really that hard in all languages? I've seen some functional languages that seem to make it not that hard, especially those that value pure code.   To be fair, I havent looked that closely into it."
learnpython,3dw7kr,keturn,5,Mon Jul 20 05:49:11 2015 UTC,"The thing that makes it hard is if you have one chunk of memory that multiple processes are writing to at the same time. You have to coordinate between them somehow, make sure the left hand doesn't change something while the right is in the middle of using it.  With a purely functional program, you get around that problem, because a pure function never changes any existing values, it communicates only through returning a new value.  But there are some trade-offs there, and that's not how most people write code in Python (or any other language in the top ten of this list).  And yes, there are some implementations of Software Transactional Memory in other languages that pre-date pypy's.  I'm not trying to diminish the work of other languages here. Like I said, it's not hard to be better than Python in this area, and some of the functional languages show particular promise. But I don't think anyone's got it all figured out either. (Especially me.)"
learnpython,3dw7kr,Wrathofvulk,5,Mon Jul 20 06:27:32 2015 UTC,"Python is a general use language so it can do...most things.  It can't do things as fast as a language like C, and you can't really do systems-related things like what C is used for.  There's nothing that ""addresses"" this, per se, since it isn't what python is meant for."
learnpython,3dw7kr,freakzilla149,4,Mon Jul 20 01:28:56 2015 UTC,"What this means is that you won't use python for making big games like The Witcher, GTA etc.  What it can be used for: https://www.youtube.com/watch?v=-67hh86N42Q  Edit: Video fixed."
learnpython,3dw7kr,keturn,9,Mon Jul 20 01:52:39 2015 UTC,"Kinda blows me away to hear Kenneth describing python as ""super-small, so you can use it in embedded development."" I mean, I guess it's true now that you can buy a Raspberry Pi board for $25 that's under 7 cm and runs on 1 amp and is more than capable of running Python, but back in the day I remember having a lot of debate about whether we could strip out enough of the standard library to have python fit on the flash memory for our product...  I guess this comment doesn't really have a point other than to say that this makes me feel old and/or living in the future is awesome."
learnpython,3dw7kr,jollybobbyroger,4,Mon Jul 20 04:49:23 2015 UTC,https://micropython.org/
learnpython,3dw7kr,zahlman,1 point,Mon Jul 20 06:37:56 2015 UTC,"Out of interest, how much flash memory were you working with? And how much RAM?"
learnpython,3dw7kr,elbiot,1 point,Mon Jul 20 07:42:53 2015 UTC,This was hot stuff in 2004.  Way less than 1MB RAM.
learnpython,3dw7kr,keturn,1 point,Mon Jul 20 17:09:33 2015 UTC,"I don't remember exactly. This was around 2005, so we had enough flash to make running an OpenEmbedded Linux distro a viable option, and enough RAM that Python seemed like it might be a feasible choice, but it was going to be a tight fit.  I guess it was a lot less like working with a Raspberry Pi and a lot more like working with one of the devices you see DD-WRT or OpenWRT builds for. Lots of 4 and 8 MB builds on that page; if you're lucky enough to have 16 MB to work with that seems like a lot."
learnpython,3dw7kr,gutoandreollo,2,Mon Jul 20 17:17:02 2015 UTC,"Not really, actually.. EVE Online runs on python, although a rather modified to fit their goals. If you haven't seen it yet, This is EVE: https://youtu.be/AdfFnTt2UT0"
learnpython,3dw7kr,an_actual_human,5,Mon Jul 20 02:52:21 2015 UTC,You can use just about anything to handle business logic.
learnpython,3dw7kr,Wrathofvulk,1 point,Mon Jul 20 10:43:02 2015 UTC,"Right on.  By the way, you linked to the very end of the video :P"
learnpython,3dw7kr,elbiot,1 point,Mon Jul 20 02:00:02 2015 UTC,"Technically, it is slow.  But python is great at having c wrappers for fast things, plus cython.  So even something like Ace of Spades (a 3d action game like minecraft) can be written in python, with some opengl and probably other non-python bits."
learnpython,3dw7kr,keturn,3,Mon Jul 20 03:41:27 2015 UTC,"If you find yourself considering cython to make something python-like but faster, give pypy a shot. It's a full Python implementation, not a c/python pidgin. There are existing python/C wrappers it does not perform terribly well with but it's worth investigating.  In some cases running pypy and using cffi for your C integration will be a good option, as in this recent case study with ijson."
learnpython,3dw7kr,Sean1708,2,Mon Jul 20 05:55:44 2015 UTC,Unfortunately it doesn't keep up CPython very well (understandably) which can be a deal breaker in some cases.
learnpython,3dw7kr,elbiot,1 point,Mon Jul 20 12:26:59 2015 UTC,"What doesn't ""keep up Cpython"" very well?  Do you mean that the JIT is slow in short running and non-repetative scripts?  It's true.  You'd use them for different things."
learnpython,3dw7kr,Sean1708,1 point,Mon Jul 20 17:12:45 2015 UTC,"The latest version it implements is 3.2.5, nothing to do with it's speed."
learnpython,3dw7kr,Wrathofvulk,1 point,Mon Jul 20 17:15:28 2015 UTC,"Yup, for sure! As long as the whole game isn't in pure python."
learnpython,3dw7kr,grandzooby,6,Mon Jul 20 04:32:56 2015 UTC,"Python doesn't seem very good at making a nice installable program you can distribute to others; especially others that don't use python themselves.  Py2exe kind of works for version 2, but I'm not sure there is a good solution for version 3."
learnpython,3dw7kr,dempseye,7,Mon Jul 20 04:07:21 2015 UTC,Cx_freeze works fine for 3.4 for windows. I create an msi installer and no problems.
learnpython,3dw7kr,individual_throwaway,1 point,Mon Jul 20 04:26:47 2015 UTC,Second this. Cx_freeze is pretty great. You can still have some issues getting the setup.py right.
learnpython,3dw7kr,keturn,2,Mon Jul 20 15:23:30 2015 UTC,"PyInstaller works fine for me as well, noth for 2.x and 3.x"
learnpython,3dw7kr,AlSweigart,6,Mon Jul 20 10:57:51 2015 UTC,"Python hasn't made a very strong showing when it comes to game development. And not just because people think C++ is the only thing fast enough — even cheap laptops have 2.5 GHz CPUs now, that's plenty for any of your puzzle platformers, procedural death labyrinths, or deck-building metroidvanias or whatever — but more from lack of ecosystem support.  The pygame downloads page is covered in cobwebs, you might have trouble finding good options for current-generation 3-D renderers or physics engines, and then there's the distribution question: now that you've written a game in Python, how do you package it so your friend can run it or you can pitch it on Steam. And all those things are doable, but when you compare with something like Unity, Python doesn't look very good.  This is one of the things Jessica McKellar talks about in her presentation The Future of Python — A Choose Your Own Adventure.  Shout-out to Kivy for working on some of these issues.  I was going to say Godot, but I guess GDScript just looks like Python, it's not actually a Python.  And yes, this is absolutely one of those cases where some projects have used a second language (usually C++) in conjunction with Python. Wikipedia has a small but notable category of Python-scripted video games."
learnpython,3dw7kr,Rinnve,2,Mon Jul 20 04:30:01 2015 UTC,"I've written a blog post on this: What Professional Games Use Pygame?  But yeah, it's slim pickings."
learnpython,3dw7kr,thanks-shakey-snake,2,Tue Jul 21 01:08:36 2015 UTC,"Python is Turing-complete language that can fully interact with the underlying operating system. Theoretically, there are no things that can't be done with Python. There are things, however, that could be impractical to do; for instance, doing heavy math lifting in Python itself, without using appropriate C libraries (or Python-to-native code compilers) for doing actual calculations. There are also things that could be impossible due to technical restrictions of the platform, like programming microcontrollers or writing kernel-mode device drivers (although there is at least one board programmed in Python, and I think that it could be possible to embed Python interpreter into a kernel-mode driver; for what reason, that's whole different question)."
learnpython,3dw7kr,Wrathofvulk,1 point,Mon Jul 20 17:18:53 2015 UTC,"Also just started learning, and thinking the same thing. Would love to know what Python is and is not good for.  For example, I can't seem to get a straight answer about whether or not you can (or would want to) use Python to develop for Android... Or if you can, but it'd be really cumbersome compared to just learning Java.  Anyway, looking forward to more answers from the advanced guys!"
learnpython,3dwnct,maks25,20,Mon Jul 20 03:45:08 2015 UTC,"Use a DB when you need the features of a DB.  If you're just reading the whole file into memory anyway, then while a DB would be easier, it's not necessary.  However if you only want to get certain chunks of data at a time, then a DB is a good idea."
learnpython,3dwnct,Doormatty,1 point,Mon Jul 20 03:57:39 2015 UTC,Makes sense! Thanks
learnpython,3dwnct,pyskell,14,Mon Jul 20 16:44:05 2015 UTC,You also definitely want to start using a DB the moment more than one person is accessing the same set of data.
learnpython,3dwnct,dertyp,1 point,Mon Jul 20 08:29:26 2015 UTC,Thanks for the reply!  I have a few scripts that are accessing the same file. I'm guessing this would warrant it as well?
learnpython,3dwnct,pyskell,2,Mon Jul 20 16:42:47 2015 UTC,If the scripts do read access only (at the same time) there shouldn't be any problems. If one or more are modifying content it's the database's job (amog others) to ensure coherent read operations.
learnpython,3dwnct,Tesserach,2,Mon Jul 20 19:06:29 2015 UTC,"Yup, if more than one script is using the file you should use a database. This will help make sure that all files are seeing the right version of your data whenever they go to access the database."
learnpython,3dwnct,Exodus111,6,Mon Jul 20 19:19:36 2015 UTC,"If you would like to query and store data like you would in a DB, but don't want to go through the trouble of setting up a database server, you can try SQLite."
learnpython,3dwnct,AlSweigart,4,Mon Jul 20 08:41:05 2015 UTC,"The moment you are using the data for more then one thing, or in more then one way, start thinking about a Database.  Ultimately its the old Cost of Overhead vs Benefit at the end discussion."
learnpython,3dy8wg,qiman3,3,Mon Jul 20 14:47:46 2015 UTC,"^ is not ""or"", it's a bitwise XOR. Use or.  >>> True ^ True False >>> True or True True   Edit, Looking at it further, I think you want and. Also, your conditionals allow the battle if the stamina is greater than or equal to 0. You probably want to battle if ""the players stamina is greater than 0 and the monsters stamina is greater than 0"", right?"
learnpython,3dy8wg,novel_yet_trivial,1 point,Mon Jul 20 14:50:40 2015 UTC,Thanks. Works fine now.
learnpython,3dy8wg,Justinsaccount,1 point,Mon Jul 20 15:00:58 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3dyrjs,Rockybilly,1 point,Mon Jul 20 17:02:19 2015 UTC,After learning python about intermediate level. What one should do to improve programming ? What's the next step ? Just learn more and more libraries or should we try another language ? Open to any suggestions ...
learnpython,3dyrjs,ruicoder,1 point,Mon Jul 20 17:37:02 2015 UTC,Take on a programming project that will stretch your abilities.
learnpython,3dyrjs,Rockybilly,1 point,Mon Jul 20 17:51:03 2015 UTC,Well obviously there isn't something like that in where i live. So are there anything like that on the internet ?
learnpython,3dyrjs,ruicoder,1 point,Mon Jul 20 18:10:42 2015 UTC,"I'm confused as to what your location has to do with programming projects. You come up with a programming project that's more difficult than you're used to and then you implement it.  If you don't have any ideas you can find tons of them by googling ""programming project ideas."""
learnpython,3dyrjs,kryptn,1 point,Mon Jul 20 21:42:45 2015 UTC,"There's plenty of that on the internet.  I don't know what experience you have or how advanced intermediate is but try these:   Write a reddit bot to do something Write a web app that will track data from the reddit bot Write a clone for a website that you use frequently Consider the things you do frequently on your computer or at work, and try to automate them Think of the websites/services you use the most and see if they have an open API you can use Read code from established projects, my favorites being requests and Flask"
learnpython,3dyrjs,Rockybilly,1 point,Mon Jul 20 21:46:01 2015 UTC,"Well actually i didn't mean myself, i am much of a beginner if i should classify myself but i wanted advice if i ever make it to that level. Thank you for your answers. When i replied about location, i meant meeting with friends and working on a project which i don't currently have here.   I googled programming project ideas and each banner was saying like ""1500-2000"" ideas for programming which freaked me out a little bit but i will give it a shot thank you :)"
learnpython,3dyrjs,campenr,1 point,Mon Jul 20 22:09:13 2015 UTC,"I personally found working through the problems on websites like checkio.org useful until I thought up my own projects.   In trying to solve these problems I found out more about the language from reading books, because I had to understand how features of the language work in order to use them.  My 2 cents."
learnpython,3dyrjs,aziannomness,1 point,Tue Jul 21 00:09:05 2015 UTC,"I am wanting to get into Web Development with Python, I tested the waters running through tutorials with Flask and CherryPy. I found CherryPy to be much more fun, but I can't find anyone who uses it regularly to give me their opinion on it. I'm about to give up and jump into Pyramid because it seems to be the middle-ground between Django and Flask.    I'm primarily wondering what CherryPy is best used for. For instance:   Larger apps? Projects that use multiple apps in one project? Not worth using on small beginner projects? (Small, low traffic website).     Any feedback on CherryPy compared to any other Web Framework you have used would be awesome!"
learnpython,3dyrjs,EqualsEqualsTrue,1 point,Mon Jul 20 17:53:00 2015 UTC,"I have been working on these crypto challenges that have been pretty fun, but I get mixed up with the different encodings and stuff. I have figured out that 0x... means for binary, but get confused on \x and some others. I dont know what to google to learn about this, I guess what they might be called is like escape characters for different encodings?  Why would a string return with \x if it is in hexidecimal sometimes but other times I just get the string in hexidecimal without any backslashes?  Sorry if this is confusing, just looking for resources oh how these work."
learnpython,3dyrjs,ingolemo,2,Mon Jul 20 18:59:25 2015 UTC,"\x is just another way to represent characters in strings.  Every character in a string has a number associated with it; in ascii the letter A has the number 65 whereas * is 52. Here's a handy chart for the numbers of all the characters in ASCII. You can use these numbers to write the characters in a string without having to literally write that character. To do that you take the number in the Hx column of that table  and put \x before it. So, for example, '\x41' is exactly the same thing as 'A' and 'h\x65\x6clo' is just another way to write 'hello'.  This is most useful for showing the unprintable characters; the left-most column in that table contains a whole bunch of characters that can't be printed because they're not like conventional letters. For example, the bell character ('\x07') causes your computer to make a beep when you print it. If python tried to show a string containing that character then your computer would beep and you would get annoyed pretty fast.  Whether a backslash exists makes a huge difference to the actual characters that a string contains. The string '\x41\x42' contains two characters A and B and is really equivalent to 'AB', while '4142' contains the four characters that you see.  The technical term that you should google for here is escape. \x is an escape code or escape sequence.   By the way, 0x... doesn't mean binary, it means hexadecimal. If you want to write a binary number you need to start it with 0b...."
learnpython,3dyrjs,EqualsEqualsTrue,2,Mon Jul 20 22:12:18 2015 UTC,"Thanks, that was an awesome answer! That ascii table just filled in a huge gap for me."
learnpython,3dyrjs,schrogendiddy,1 point,Mon Jul 20 23:43:53 2015 UTC,"I am getting an error message that I don't understand. I have two separate python files, and I am trying to call a function defined in one of them, ""file1"" from ""file2"". ""file1"" looks like this:  import file2 as f  value = f.trigrid(pointnum,scale)  and file2 just has trigrid defined as:  def trigrid(pnum,scalesize):  .....  return value  The error I get is trigrid() takes exactly 1 argument (2 given)."
learnpython,3dyrjs,aziannomness,0,Mon Jul 20 19:11:32 2015 UTC,"I believe that your problem is that your trigrid() function is using pnum as it's identity. Typically a function should take self as a first argument and any that should be passed in after. So I believe you should have def trigrid(self,pnum,scalesize):.    I am fairly new to Python so sorry I wasn't really able to explain it better or even if I phrased any of that correctly.      EDIT: You would then have to declare your two arguments at the start of the function with something like self.pnum = pnum self.scalesize = scalesize If you haven't already."
learnpython,3dyrjs,schrogendiddy,1 point,Mon Jul 20 19:45:01 2015 UTC,that didn't work : /
learnpython,3dyrjs,aziannomness,0,Mon Jul 20 19:52:05 2015 UTC,"I wrote some tests that follow what you have and had no issues. So I'm not entirely sure what's wrong, sorry :(    RedditTest.py  def this_test(test_num,test_str):     return test_num,test_str   RedditTest2.py  import RedditTest as R test = R.this_test(5,""Test"") print(test)   The output is (5, 'Test')    EDIT: Do you happen to have a link to your full code?"
learnpython,3dwylg,grokjtrip,7,Mon Jul 20 05:42:14 2015 UTC,"There is a randint function.    random.randint(a, b)  Return a random integer N >such that a <= N <= b.    A list comprehension would be more pythonic for dice.    E.g.:  from random import randint def dice(sides, quantity, offset):     return [randint(1, sides)+offset for die in range(quantity)]   That does the same as your function, but are you sure it is what you want? This adds offset to each die roll, not the sum. I think you want something different:  def dice(sides, quantity, offset):     return sum([randint(1, sides) for die in range(quantity)])+offset   If you actually care about individual die rolls, you might return something more involved, like a 2-tuple with the list of rolls and the offset.   re is a natural choice for parsing strings of the 2d4+2 sort. I think you could use a closure to create functions like dice. Perhaps those things could be objects if you want to do something else with them.   E.g.:  def create_dice(sides, quantity, offset):     def dice():         return sum([randint(1, sides) for die in range(quantity)])+offset     return dice   Then you can create and use dice functions like that:  some_dice = create_dice(2, 6, 2) some_dice() # 7"
learnpython,3dwylg,an_actual_human,5,Mon Jul 20 07:06:01 2015 UTC,"Well, first off, normally people interpret e.g. 1d10 + 4 to mean that 4 is added to the total, not to each die. And usually people don't care about the individual die rolls, but only the total. (If you want to display them for some pretty graphical UI, that's another matter.)  Also, you can do the actual rolling much more neatly. I suggest you look at the documentation for the random module and see if you can find a function that's more appropriate to the task. ;)  As for the actual parsing, generally more robustness will require more sophistication. It helps to have a more precise specification of what input you want to allow, in the first place."
learnpython,3dwylg,zahlman,3,Mon Jul 20 06:48:30 2015 UTC,"And usually people don't care about the individual die rolls, but only the total.   Not true. Take 3.5 D&D for example. You could have a character that has 5 attacks per round, the first attack gets a +2 bonus. They can attack against 4 enemies in range, they take a -4 against one of them.  Then there might be miss chance, so you gotta roll percentile dice now. Oh look, a critical, gotta confirm it -- do we straight multiple damage, which bits get rerolled?  On top of that, there's...well, at some point I stopped counting, but at least 10 different kinds of damage the attacks could deal that each interact with various effects in different ways.  I'm not saying that OP is trying mimic 3.5 D&D, but carrying about individual rolls is a real thing."
learnpython,3dwylg,kurashu89,1 point,Mon Jul 20 13:02:16 2015 UTC,"Thanks for pointing this out. Honestly the system I was originally writing for (Shadowrun 5e) did not need an offset/modifer like this, so I just added that idea while thinking about making it more generalized to add to the discussion here...   It would be great to do either sum or individual rolls based on some additional input 7d4+5s or 7d4+3i but that is pulling away from my goal of making it as natural as possible to a gamer. Maybe that would work well with a default argument to one way or the other so the simple notation could still be used.   I'm not sure how I feel about making it implicitly one way or the other but maybe in the end if this tool is for one system specifically then sticking to it's specific needs is best.  The different usages are interesting, it makes me want to look for other edge cases.   Cheers"
learnpython,3dwylg,NewbornMuse,2,Mon Jul 20 19:04:10 2015 UTC,"Your rollfunction could be a bit more pythonic. Strings support the split method which allows you to, well, split a string at spaces or any other character. Using this, you can do  def roll(die_string):   splitted = die_string.split(""d"")   quantity = int(splitted[0])   sides = int(splitted[1])   return dice(sides, quantity))   If there wasn't the problem of converting to int, you could even do tuple unpacking, like so:  def roll(die_string):   quantity, sides = die_string.split(""d"")   #...   But that leaves quantity as ""4"" instead of 4. I guess you could do  quantity, sides = map(int, die_string.split(""d""))   or  quantity, sides = (int(x) for x in die_string.split(""d""))   , but I'm not sure how elegant that is; it might be too cramped, trying to do too many things at once."
learnpython,3dwylg,NewbornMuse,1 point,Mon Jul 20 10:54:22 2015 UTC,"Yes, using the split seems considerably cleaner. I love python's slicing so I did that without considering anything else. I'll have to look into this, I'm wondering if split() supports multiple delimiters or if I'll just split at 'd' and then also split the second half by the operator. Thanks for the suggestion!"
learnpython,3dwylg,Vaphell,1 point,Mon Jul 20 18:47:48 2015 UTC,"Thanks for the suggestion!   8/10 with rice?  To actually contribute something to the conversation, though, you can't split at different characters in the same call. If you wanted to do that, you'd have to whip out regex and groups."
learnpython,3dwylg,Vaphell,2,Mon Jul 20 20:05:22 2015 UTC,"some time ago one dude also wanted to write a dice calculator and just for kicks i wrote a dice class that instead of parsing text using regexes uses standard language features also known as operators. The code below is not too fancy but it works in standard x*Dy+z scenarios and shows the general concept. With a bit of effort it could be expanded to allow for full blown dice math eg 3*d4+2*d4+5*d6+4+3+2   #!/usr/bin/env python3  import random  class Dice:   # represents xDy+z      def __init__(self, sides, n=1, add=0):         self.n = n         self.sides = sides         self.add = add     def __rmul__( self, n):         return Dice(self.sides, n=n)     def __add__(self, add):         return Dice(self.sides, n=self.n, add=add)     def __str__(self):         _min = self.n*1+self.add         _max = self.n*self.sides+self.add         _avg = (_min+_max)/2         _dice = '{x.n}D{x.sides}+{x.add}'.format(x=self)         fmt = '{dice:6} (min: {min:2}, max: {max:2}, avg: {avg:4.1f})'         return fmt.format(dice=_dice, min=_min, max=_max, avg=_avg )     def roll(self):         mn, mx = 1, self.sides         return sum(random.randint(mn,mx) for _ in range(self.n))+self.add   d4, d6, d8, d20 = Dice(4), Dice(6), Dice(8), Dice(20)  dice = [ d4, d6, d8, d20, d4+2, 3*d6, 5*d8+3, 3*d20+7 ]      for d in dice:     print('{}  roll: {:2}'.format(d, d.roll()))   output   $ ./dice.py 1D4+2  (min:  3, max:  6, avg:  4.5)  roll:  4 1D6+0  (min:  1, max:  6, avg:  3.5)  roll:  4 1D8+0  (min:  1, max:  8, avg:  4.5)  roll:  4 1D20+0 (min:  1, max: 20, avg: 10.5)  roll: 20 1D4+2  (min:  3, max:  6, avg:  4.5)  roll:  5 3D6+0  (min:  3, max: 18, avg: 10.5)  roll: 11 5D8+3  (min:  8, max: 43, avg: 25.5)  roll: 30 3D20+7 (min: 10, max: 67, avg: 38.5)  roll: 39"
learnpython,3dwylg,fourboobs,1 point,Mon Jul 20 12:09:31 2015 UTC,This is pretty great and is pretty much what I was thinking about for a class based solution. Of course some might say the class is unnecessary but arbitrarily creating new dice is a feature that is really appealing even if only for studious reasons. Thank you for the example!
learnpython,3dwylg,kurashu89,1 point,Mon Jul 20 18:53:08 2015 UTC,"yes, class might be unnecessary if you are after singular rolls based on the dice formula, but if you wanted to write let's say a char sheet program with precomputed saving throws and shit, wrapping dice in a class and calling  char = Hero(""Jizzt Do'Urden"") char.attack_throw = Dice('6d6+6') char.saving_throw = Dice('2d6+3') for _ in range(10):     char.saving_throw.roll(success=10)   can certainly look appealing. At some level of complication juggling raw tuples with dice factors would become annoying. Also custom class allows for custom arithmetic as you can overload math operators to do the right thing in the domain of dice."
learnpython,3dwylg,an_actual_human,2,Mon Jul 20 20:35:33 2015 UTC,if i were you i'd probably do it in a object oriented way and implement a class for dice that spawns an instance of dice with the required sides that spits out the result. looks neater that way and also feels more pythonic imo.
learnpython,3dwylg,kurashu89,1 point,Mon Jul 20 07:23:48 2015 UTC,"I would disagree. Rolling a die is a single action:  def d(n):      return randint(1, n)   A class is meant to represent a logical group of functions that operate, cooperatively, on shared data. There could be a case for making a Die object, but I think it's complete overkill and over engineering."
learnpython,3dwylg,an_actual_human,1 point,Mon Jul 20 13:07:56 2015 UTC,"Why not just randint(1, n) then? Also there is chance OP doesn't care about individual dices."
learnpython,3dwylg,kurashu89,1 point,Mon Jul 20 13:14:23 2015 UTC,"randint(1, n) is what I used. The point of a function is to create a reusable bit of code. Maybe naming it d is a poor move, but it's more informative to me to see die_roller(6) (or sides=6) than just randint(1, 6).  And if OP doesn't care about individual dice (though, see my reply to zahlman above), it's trivial to compose several functions together:  def roll_many(num_dice, sides, bonus):     return sum(d(sides) for _ in range(num_dice)) + bonus"
learnpython,3dwylg,an_actual_human,1 point,Mon Jul 20 13:24:40 2015 UTC,"randint(1, n) instead of def d(n): randint(1, n). die_roller seems less informative. My first idea would be it's some kind of factory if I saw it in someone's code. If it's my code, I implemented it, so already know randint."
learnpython,3dwylg,kurashu89,1 point,Mon Jul 20 13:29:53 2015 UTC,"Again, for me, seeing something like die_roller (d was a bad choice for a function name, pardon that) is more informative about the intent of the call. It also makes randint an implementation detail. I can swap out randint for something else in a central spot, maybe I want to bias my dice so they never roll the maximum. Would you rather change randint to randrange in one spot, or a thousand?"
learnpython,3dwylg,kurashu89,1 point,Mon Jul 20 13:39:56 2015 UTC,"That's not wrong, but possibly irrelevant to OP's goal. I don't love the identifier die_roller. Changing a thousand times is not necessarily harder than once. And I doubt there will be more than a couple in this case."
learnpython,3dylmy,brownmanrick,3,Mon Jul 20 16:21:06 2015 UTC,"The result from argparse, ""args.s"", is a list of the arguments. Using the * puts that list in a tuple, which you then put in another list with lister = [args]. Try this:  def function(args):     lister = list(args) #make a copy of args     lister.sort()     return lister   Edit: the ""make a copy and sort the copy"" is implemented in the built in function sorted(). So you could shorten your code to:  def function(args):     return sorted(args)"
learnpython,3dylmy,novel_yet_trivial,1 point,Mon Jul 20 16:31:18 2015 UTC,"Yep, that did the trick. Thanks, man!"
learnpython,3dylmy,commandlineluser,2,Mon Jul 20 16:36:55 2015 UTC,"What tutorial are you following?  args.s is already a list, the problem is your function definition *args and then also lister = [args] which is turning it into list inside a tuple inside a list.  You can just do:  args = parser.parse_args() print(sorted(args.s))   Or if you want to actually use a function:  def sort_args(args):     return sorted(args)   Also, you're not really using any of argparse's capabilities here, it could all be replaced with a print(sorted(sys.argv[1:])).  (You may also want to check out click http://click.pocoo.org)"
learnpython,3dylmy,xcombelle,2,Mon Jul 20 16:36:19 2015 UTC,"Apparently you don't really know what *args does  A first possibility is to us a single arg  import argparse def function(arg):     lister = list(args)     lister.sort()     return lister  parser = argparse.ArgumentParser(description='parse some integers.') parser.add_argument('s', nargs='+', help='sort a list') args = parser.parse_args() answer = function(args.s) print(answer)   Another one is to use the builtin sorted function  parser = argparse.ArgumentParser(description='parse some integers.') parser.add_argument('s', nargs='+', help='sort a list') args = parser.parse_args() answer = sorted(args.s) print(answer)"
learnpython,3dxst8,HeNeverLies4,1 point,Mon Jul 20 12:26:50 2015 UTC,list.index is a function and needs to be called with parentheses:  name_list.index(name)   https://docs.python.org/3.5/tutorial/datastructures.html
learnpython,3dxst8,wiiittttt,1 point,Mon Jul 20 12:30:02 2015 UTC,Even when I chaged it im still not getting a return value..
learnpython,3dxst8,wiiittttt,2,Mon Jul 20 12:39:29 2015 UTC,"You are checking if name is equal to name_list which will never be true. You want to check if the name is contained in the list: if name in name_list:. That is unnecessary though since list.index will return the index if it's in the list or return an error if it's not. So you can just do:  try:     return name_list.index(name) except ValueError as e:     print(""Name not in list:"", e)   or something like that."
learnpython,3dxst8,ianepperson,1 point,Mon Jul 20 12:46:48 2015 UTC,"All I needed to was,   if name in name_list:     print (name_list.index( name ))   ha, thanks for pointing oiut my mistake lol. Been up waaay to late."
learnpython,3dxst8,campenr,1 point,Mon Jul 20 12:55:08 2015 UTC,"The reason why wiiitttt is suggesting the pattern of using a try is because it's generally faster and a good habit to be in. One of Pythons core ideas is to simply try to do what you need and assume it will work, then trap when it doesn't.   When you check if the name is in the list, the computer performs a search through the list to find the name. Once it finds it, you ask it to perform the same search again, but this time returning the index.  Wiiitttt's pattern only performs that search one time."
learnpython,3dxst8,ianepperson,1 point,Mon Jul 20 15:59:10 2015 UTC,"Ok that makes sense. Well, essentially I have to take that index number, parse through another list, and spit out the element on that other list with the matchin index number. Do you have a good Idea to approach that? I just started working on it"
learnpython,3dxst8,ianepperson,1 point,Mon Jul 20 17:56:08 2015 UTC,You could try using zip.
learnpython,3dxst8,ZidHuss,0,Mon Jul 20 20:10:11 2015 UTC,"So, are you trying to look up data about a given username?  That would probably be better solved with a dictionary of objects instead of searching through lists.  class Person(object):     full_name = None     address = None  USERS = {} USERS['Jon'] = Person() USERS['Jon'].full_name = 'Jon Smith' USERS['Jon'].address = '123 Somewhere' USERS['David'] = Person()   etc.  def get_name_index(name_list):     name = input(""Please enter the name of the person's address you would to see: "")     person = USERS.get(name)     if person is None:          print ""name not in data""          return None     return person.address   Looking up a dictionary key (like here) is an order of magnitude faster than looking up even a single list.  Even more importantly, it keeps similar data grouped together making the logic easier to follow and easier to maintain.  If I've mistaken your use-case, let me know and I'll post more."
learnpython,3dxst8,campenr,1 point,Mon Jul 20 20:12:43 2015 UTC,"THat would work as well but I think I got it before I got your reply. Here is what works for me.   def get_name_index(name_list):      name = input(""Please enter the name of the person's number you would to see: "")     return name_list.index(name)   def __main__():     for name in name_list:          print (Here are the names in the address book: "", name_list)      index = get_name_index(name_list)      print (number_list.[index])"
learnpython,3dxst8,campenr,1 point,Mon Jul 20 20:34:53 2015 UTC,"You might also find the enumerate keyword useful as well:  names = ['Jon', 'David', 'Carl'] for id, name in enumerate(names):     print('{0}: {1}'.format(id, name))  0: Jon 1: David 2: Carl"
learnpython,3dx512,2hands10fingers,1 point,Mon Jul 20 07:04:06 2015 UTC,So you want to create a .mid file? Or just what?
learnpython,3dx512,zahlman,1 point,Mon Jul 20 07:48:46 2015 UTC,I want it all in real-time. Data >> MIDI >> Synthesis
learnpython,3dwjn4,geekbahaa,3,Mon Jul 20 03:09:41 2015 UTC,define advanced?
learnpython,3dwjn4,energyinmotion,15,Mon Jul 20 04:45:52 2015 UTC,"Advanced (adjective): Highly developed or complex.  Advanced (adjective): Being at a higher level than others:  an advanced text in physics.   Advanced (adjective): Ahead of the times; progressive:  advanced teaching methods.     I am a bot. If there are any issues, please contact my [master]. Want to learn how to use me? [Read this post]."
learnpython,3dwjn4,Define_It,21,Mon Jul 20 04:45:59 2015 UTC,The first thing that AIs will take over is the role of smart ass.  Nice.
learnpython,3dwjn4,shuttup_meg,1 point,Mon Jul 20 04:46:59 2015 UTC,LOL I had to upvote the bot's response!
learnpython,3dwjn4,AlphaNerd80,4,Mon Jul 20 14:47:43 2015 UTC,Define pythonic.
learnpython,3dwjn4,dunkler_wanderer,3,Mon Jul 20 05:12:06 2015 UTC,It was worth a try.
learnpython,3dwjn4,bryantee,2,Mon Jul 20 05:42:59 2015 UTC,define pythonic?
learnpython,3dwjn4,nibble25,6,Mon Jul 20 07:25:57 2015 UTC,"Pythonic (adjective): Of, relating to, or resembling a python.  Pythonic (adjective): Of or resembling an oracle; prophetic.  Pythonic (adjective): Of extraordinary size and power.    I am a bot. If there are any issues, please contact my [master]. Want to learn how to use me? [Read this post]."
learnpython,3dwjn4,Define_It,2,Mon Jul 20 07:26:02 2015 UTC,That's... actually rather fitting.
learnpython,3dwjn4,zahlman,1 point,Mon Jul 20 07:36:45 2015 UTC,English isn't my native language
learnpython,3dwjn4,zahlman,5,Mon Jul 20 05:52:38 2015 UTC,"No, it's the right word; it's a question of how advanced you're looking for. Different people will have different standards for ""advanced"".  Personally, I think someone who qualifies as ""advanced"" is too good to get much out of a book on programming. You might learn interesting things from PyCon videos, though (look them up on Youtube)."
learnpython,3dwjn4,an_actual_human,4,Mon Jul 20 07:38:45 2015 UTC,"How about ""Which books on Python should I read to get to the point where I don't get much out of a book on programming?"""
learnpython,3dwjn4,zahlman,1 point,Mon Jul 20 10:46:27 2015 UTC,"I never really learned much about programming from books, and was already a pretty accomplished programmer before I ever touched Python, so I can't speak from personal experience; but I'd go with what this guy said - it seems to make sense."
learnpython,3dwjn4,campenr,3,Mon Jul 20 17:27:42 2015 UTC,"I am only a beginner in my mind (I took the codecademy python class), but felt the best way to learn after getting the basic semantics of the language was to get stuck in with little projects (self driven or things like checkio). I feel that ""learn to python"" books can only get you so far. As a result of working on projects I have spent a lot of time reading the python documentation, as well as the source code out of necessity, and in a way these learn to python books are just easier to read wrappers for the source code and documentation no?  TL;DR: The python documentation and the source code"
learnpython,3dwjn4,dayimproper,2,Mon Jul 20 12:50:06 2015 UTC,"What area do you wish to advance in? For example do you want more modules and cool use cases knowledge (python cookbook), more data science (data science from scratch), more web development (test driven development in python), after you learn enough language the question becomes what you want to do with it."
learnpython,3dwjn4,AlSweigart,1 point,Mon Jul 20 08:51:40 2015 UTC,Not a book but any of the talks given by Raymond Hettinger or Ned Batchelder would be good starting points. You can find some on http://pyvideo.org/
learnpython,3dxyga,pietrod21,1 point,Mon Jul 20 13:21:11 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3dxyga,Justinsaccount,1 point,Mon Jul 20 13:23:11 2015 UTC,ahahaha thanks I see this bot around sometimes
learnpython,3du4y6,pyth_semi-new,35,Sun Jul 19 14:23:04 2015 UTC,"It's so funny that people say that intermediate books are lacking. I've read four of them, and would recommend them all. But before I do, I want to clear something up.  After the raw beginner level, you will never find a book that is perfectly matched to your skill level. There are a thousand little minitopics in programming. The odds that you know every single one that the book assumes as prior knowledge, but none that the book introduces, is effectively nil.  So, you you need to change the way you read. I think there are two ways to do this.   First, The Completionist. As soon as a book uses a term you don't know, or seems to assume prior knowledge you don't have, go fill that whole. Drop the current book and use blogs, stackoverflow and other books to understand before you go on.  Second, The Hungry Reader. Just make a long list of books and read all of them. If a topic is over your head, don't worry about it. Just keep reading, and hope it all makes sense later. This only works if you're studying a ton in a short amount of time.  In reality, you'll use a blend between these two. It's also important you give yourself permission to skim over things you already know. The intermediate books have a good amount of overlap. I find reading about things I know so off-putting, it will crash my whole studying if I don't allow myself to skip it.  I think of self studying like building a house. Books and online interactive courses are bricks. They provide the structure. Stackoverflow and blogs are like mortar. They fill all the holes and keep things together. If your knowledge is all bricks, it will be brittle and full of holes. If it's all mortar, it will just be mush. The strongest is a combination of the two.  I used these techniques and these books to go from making crappy websites in PHP to getting a job as a Junior Software Engineer using Python in 4 months.  The list:   Problem Solving with Algorithms and Data Structures Using Python Python 3 Object Oriented Programming Effective Python: 59 Specific Ways to Write Better Python Python Cookbook, Third Edition   This next book is about computers in general, but I strongly recommend that you read it before any of the others. I think it's the first book you should read when transitioning from beginner to intermediate. Don't worry about studying it too hard, just read it.   Code: The Hidden Language of Computer Hardware and Software   Good luck!"
learnpython,3du4y6,jungrothmorton,6,Sun Jul 19 17:53:26 2015 UTC,"I have all the Python books that you mention, and I might consider the first two intermediate, but I would not consider the second two intermediate. At least not in the sense that people asking for intermediate books are probably thinking.  If you are learning Python by yourself, and in particular if you are a novice programmer, what you need is a narrative. In the data analytics world it is often said that the single biggest skill that's lacking is the ability to tell a narrative about the data. I would submit that having a good narrative about the programming topics is probably the single biggest things that helps novice programmers who are self-learning.  And by narrative I mean clean, clear, logical text that lays out the path, explains how this step is related to that step, gives multiple examples, provide relevant exercises that build on previous work,  and so on.  For beginners there is no end to books, video playlists, etc., that provide good narratives. If one doesn't work for you, find another.  But there just aren't many -- if any -- books that go to the next level in a similar manner.  I broke out of the rank beginner phase not too long ago, and had someone ask me to build a application for them. Among other things, I needed to learn something about exception handling. And I did.  In the spirit of learn one/do one/teach one, I volunteered to give a presentation on exception handling to my local Python User Group to solidify and lock in what I had learned.   I basically had to spend 6 - 8 weeks Googling and culling through inadequate Python documentation, blogs, Reddit and StackOverflow posts, video playlists, and so on to find adequate descriptions, explanations, and examples of exception handling topics that could be brought together and form an understandable narrative. And even then I left off some stuff because I just didn't have time dig deeper and go further.  From that experience I could easily see Exception Handling being a chapter in an intermediate Python book.  I could also see chapters on Unit Testing, Logging, Iterators and Generators, advanced data structures (e.g., DefaultDict, OrderedDict, etc.), using the argparse module, just to name a few.  Keep in mind who the audience is; who's asking for intermediate books.  It is probably people who are self-learning, like me. I don't work with people I can turn to to ask questions. I don't have people I can tap as mentors. I have learned a lot about how to learn -- how to ask questions on StackOverflow without getting clobbered, how to structure search queries to find what I need faster -- but I would still really love it if someone were to spend the effort that I'd be willing to spend money on to help guide me through the next phase of the path."
learnpython,3du4y6,vmsmith,3,Sun Jul 19 22:12:41 2015 UTC,Do you consider the second two books advanced then?
learnpython,3du4y6,alldayprogram,1 point,Mon Jul 20 01:42:41 2015 UTC,"Under the premise that I started with -- that we are talking about people who are self-learning and would like good narratives to frame things -- I consider them more advanced in that they both assume you already know a lot of stuff, and in particular that you pretty much know what questions you need to consider about the topics involved."
learnpython,3du4y6,vmsmith,2,Mon Jul 20 08:45:17 2015 UTC,Thank you
learnpython,3du4y6,mauza11,2,Mon Jul 20 05:22:07 2015 UTC,Can you give some details on how you found the job?  I am searching now and need ideas on how to get companies interested in hiring me.
learnpython,3du4y6,CharBram,2,Mon Jul 20 16:30:59 2015 UTC,"Made a small personal project website, put it on GitHub so I had something to talk about. Blogged about it, posted it here, told people I was looking for a job. Went to every meetup related to what I was interested in I possibly could. Met people, politely told them I was looking for a job. Used Indeed, Glassdoor and Angellist to find companies. I'd go through up to a thousand job listings (literally 1000), and end up opening about 50 tabs. Pare that down a second time to about 25 companies. Open the web pages for those companies and apply directly. Kept a very simple Google Doc of who I applied to and when. Went to two hiring fairs.   The first three all lead to contact with recruiters. The online search is how I found the job. My best friend and I were looking together, and she just got a job that she made contact through a job fair. So I'd say all 4 are worth doing.  Big tip: have someone else work on your resume. I think writing a resume is like getting a haircut. Just having someone else doing it is going to make it better, and it should be left to a pro if you want it to look really good. My friend and I both used http://www.resumeraiders.com/. Best money I've ever spent towards a job search."
learnpython,3du4y6,jungrothmorton,2,Mon Jul 20 16:51:43 2015 UTC,"Great info!  And just because I am curious, what part of the country are you in?"
learnpython,3du4y6,CharBram,2,Mon Jul 20 16:56:14 2015 UTC,"I live north of San Francisco, and I was looking only for jobs right in SF. Certainly made the search easier."
learnpython,3du4y6,jungrothmorton,1 point,Mon Jul 20 16:57:34 2015 UTC,"Yeah, that is what I was expecting.  I live in DFW and am having a much harder time finding a first true Python position!  Luckily, I am able to relocate so hopefully that will help."
learnpython,3du4y6,CharBram,1 point,Mon Jul 20 17:10:45 2015 UTC,"You probably know it, but Austin is the best for tech startups in Texas. If you want to try local first, look through every single page in this search. Python within 25 miles of Dallas. Most will be too experienced, but that's okay.  http://www.indeed.com/jobs?q=python&l=Dallas%2C+TX  One I found right away:  http://www.indeed.com/cmp/ARM/jobs/Junior-Backend-Developer-0eaa6977a8b972de?q=python+junior  Also, do you have plans for Thursday night? You do now.  http://www.meetup.com/dfwpython/events/222860120/"
learnpython,3du4y6,jungrothmorton,1 point,Mon Jul 20 18:17:43 2015 UTC,"Your a very good motivator you know!?     And I am actually already signed up to go to that meetup this Thursday so it looks like we are on the same page!  I think I am going to start looking in Austin hardcore.  I may even need to invest some time and drive down to some of the weekend meetups there in Austin.   Hey, do you happen to know how much a junior developer makes in Austin?  I can't find any solid numbers online that I trust.   It sucks because I make around 80k a year in finance now but I think I will have to take something of a pay cut in order to get into full time REAL development.   I mean I would think I would be able to jump back up in salary quickly after a few years, right?"
learnpython,3du4y6,CharBram,1 point,Mon Jul 20 18:44:16 2015 UTC,"Thanks! And good on you for being one step ahead of me with the Python meetup.   I really don't know about Austin software salaries. I get my info about salaries from Glassdoor, and it seems to be pretty consistent compared to other software sources. They only have two results for Junior Software Engineer in Austin, so that's just not enough data."
learnpython,3du4y6,jungrothmorton,7,Tue Jul 21 05:00:23 2015 UTC,"This is the exact category of book that needs to be written. There is a huge, gaping hole at the intermediate learning level. You currently need to go from blog to blog to blog, then toggle back and forth between Reddit and StackOverflow, and hopefully piece together your own coherent, cohesive understanding of the intermediate-level topics.  I thought Steve Lott might be heading in this direction after he wrote Python for Secret Agents, but I'm not really seeing it."
learnpython,3du4y6,vmsmith,7,Sun Jul 19 16:24:06 2015 UTC,"Violent Python is an interesting book that requires some prior understanding of programming, so I count it as an intermediate book. It teaches you how to write scripts for penetration testing and hacking. Or instead, make a website using Flask. It is an awesome web framework that's pretty easy to get started with but you will learn so much by using it. Check out Michael Grinberg's webseries on Flask (or get the book he wrote for O'Reilly media, though it is almost identical in content)."
learnpython,3du4y6,denialerror,4,Sun Jul 19 16:12:34 2015 UTC,+1 for Violent Python.  I came here to say this.
learnpython,3du4y6,b4xt3r,5,Mon Jul 20 00:42:32 2015 UTC,"This is part of my problem with ""learn Python the hard way."" For being such a thorough course, people never seem to be able to start coding once they're finished.  I've been coding for about six months as well. I would probably fail a test designed by LPTHW, but I've written five functional apps for work,  and I'm teaching Python to one of our interns.  If you want to get into intermediate coding, you have all the education you need. Find a coding exercise site like codewars.com, and start practicing problem solving.  Then, pick a project. Something small like web scraping. Look up ""automate the boring stuff with Python"" for some good ideas."
learnpython,3du4y6,LockeSteerpike,1 point,Sun Jul 19 15:00:49 2015 UTC,"Actually, web scraping is definitely what I want to focus on now.  Do you know any good reference books for web scraping?"
learnpython,3du4y6,LockeSteerpike,6,Sun Jul 19 15:51:41 2015 UTC,"""Automate the boring stuff with Python"" has a chapter on Web scraping. Should be all you need."
learnpython,3du4y6,simplycycling,2,Sun Jul 19 17:26:09 2015 UTC,This is a fantastic book; the one that really made it all click for me.
learnpython,3du4y6,threadpool,2,Mon Jul 20 04:28:47 2015 UTC,"Look at Scrapy. Or you could Google and put a more simplified one together, which is probably more useful to your learning. My advice for you is to put the text books down and begin creating anything you can think of/have an interest in. Use the books/Google as references to individual problems within your projects."
learnpython,3du4y6,blacwidonsfw,3,Sun Jul 19 15:59:51 2015 UTC,"Selenium, beautiful soup, requests, mechanize"
learnpython,3du4y6,dfume,1 point,Sun Jul 19 16:37:06 2015 UTC,"I too am a novice venturing into the confronting world of python documentation, blogs, and stackoverflow.  I've been working through the guided examples at newcoder.io which include: handling json, data visualisation, parsing command line arguments, accessing APIs, and web scraping.  I like that they provide some of that supporting narrative that vmsmith mentioned and they provide a framework for building your own useful projects."
learnpython,3du4y6,timworx,0,Mon Jul 20 06:38:51 2015 UTC,"Forget finding a book - if you haven't, first go do some scraping.   just import requests and 'lxml' and boom, go scrape from data.   Scrape without needing to be logged in, scrape something that needs to be logged in to, find a few ways to scrape the same thing. Then hook up scrapy and scrape a bit of data from somewhere and put it together to make something interesting, entertaining, or useful.   THEN read a book on how to improve everything you just did. The bonus is that the book will be a breeze a read and you can focus on improving, rather than learning in the first place."
learnpython,3du4y6,AlSweigart,3,Mon Jul 20 02:00:12 2015 UTC,"I recommend The Python Cookbook, the Python Module of the Week Blog, and any of Raymond Hettinger's PyCon talk videos."
learnpython,3du4y6,neptunDK,1 point,Sun Jul 19 20:32:37 2015 UTC,Getting a new Raymond Hettinger video is like xmas to me at this point. :)
learnpython,3du4y6,polished_iconoclast,3,Mon Jul 20 10:03:51 2015 UTC,Not a book but a great blog: http://intermediatepythonista.com/
learnpython,3du4y6,gengisteve,3,Sun Jul 19 20:43:25 2015 UTC,"I like this one:  http://interactivepython.org/runestone/static/pythonds/index.html  It teaches basic data structures -- most of which are of limited use in python, but the underlying thinking matters."
learnpython,3du4y6,BioSammyj,2,Sun Jul 19 14:49:47 2015 UTC,You want Effective Python. Once you're comfortable with the language this is a very readable list of examples of Python design best practices targeted at the intermediate to advanced Python programmer.
learnpython,3du4y6,construkt,2,Sun Jul 19 17:52:29 2015 UTC,This is pretty decent: http://www.amazon.com/Expert-Python-Programming-practices-distributing/dp/184719494X
learnpython,3du4y6,0sunny,2,Sun Jul 19 18:47:51 2015 UTC,"I am currently doing this one http://www.itmaybeahack.com/book/python-2.6/html/index.html , has decent amount of exercises(No solutions though), some questions seem discussion oriented.  The wiki https://www.reddit.com/r/learnpython/wiki/books mentions the book as beginner but I found it much better than LPTHW for explanations and exercises."
learnpython,3du4y6,metallidog,2,Sun Jul 19 22:29:37 2015 UTC,I'm only commenting to save all this info. Thanks for all the good answers even though I didn't ask the question.
learnpython,3du4y6,soqets,4,Sun Jul 19 23:42:33 2015 UTC,"Use the save feature, bookmark this thread, or both. I'm going to bookmark it and archive it.  This is how I save important threads and resources"
learnpython,3du4y6,metallidog,1 point,Mon Jul 20 00:46:14 2015 UTC,"This doesn't work for me because at different times, I could be on one of 4 different computers. So commenting usually is easy and fast and accessible from my reddit history."
learnpython,3du4y6,soqets,1 point,Mon Jul 20 01:55:35 2015 UTC,"Then take your bookmarks with you by exporting, then importing them onto the other computers that you use.  Also, saving is tied to your Reddit account. Just create a category named ""Python Resources"" and add them there  Edit: Firefox has something called ""Firefox Sync"" that may be useful to you. I personally don't use it, so I can't say how good it is.  Check out Firefox Pocket as well"
learnpython,3du4y6,______POTATOES______,1 point,Mon Jul 20 02:10:08 2015 UTC,Effective Python!
learnpython,3du4y6,neptunDK,1 point,Mon Jul 20 01:45:17 2015 UTC,This blog post describe pretty close how I feel about the stage I'm in programming wise. (Or the stage I'm about to enter).  why-learning-to-code-is-so-damn-hard  I'm hoping Matt Harrison's new pycast project will be just want I was looking for.
learnpython,3du4y6,campenr,1 point,Mon Jul 20 10:07:48 2015 UTC,"My advice, is just get stuck in. Reading and practicing examples from books is all well and good to get you familiar with semantics, but eventually if you want to code you have to actually code. With so much information at your fingertips, beyond a beginner stage the books I feel can be superfluous. Places like stack exchange are repositories of specific coding issues and solutions, many packages have cookbooks, and then there is always the source code to fall back on which is something you'll have to get familiar with.  TL;DR: Just start coding, and learn to troubleshoot."
learnpython,3dxc7d,LinkToThis,1 point,Mon Jul 20 08:49:34 2015 UTC,"I usually use the variable write to a file. dont think ive heard of saving the terminal but a quick google shows this  I dont think theres any other way to write to file?  f = open('/path/a.txt', 'a') f.append(terminal) f.close()   or  with open('/path/a.txt','a') as f:     f.append(terminal)   the with is usually simpler and autocloses for you have a read through the docs here which explains it"
learnpython,3dxc7d,trowawayatwork,1 point,Mon Jul 20 09:06:40 2015 UTC,You can have all the variables in a lists and write those to the file. Have one for questions and one for answers and just loop through at the end appending questions[x] then answers[x] to the file until you reach the end of the list?
learnpython,3dxc7d,Busby10,1 point,Mon Jul 20 09:35:56 2015 UTC,"Insted of using a list or a variable with single immutable value, you could use a dictionary to store all the answers and their questions. If you need to keep the order of the questions, you can use OrderedDict from the built-in collections module.  So basically you create a dictionary (or an OrderedDict):  questions = collections.OrderedDict()   And then one way or another, you ask questions and add the question with correct answer to the dictionary:  questions[q] = a # For example: questions[""What's your favourite color?""] = 'red'   Now that you got the questions and answers stored, you can save them into a file using with statement and open() function:  with open('path/to/file.txt', 'w') as answer_file:     for q in questions:         answer_file.write('{q}\n{a}\n\n'.format(q, questions[q]))   Obviously you can format the output any way you want :)"
learnpython,3dwzdb,drmaj,3,Mon Jul 20 05:52:04 2015 UTC,">>> from datetime import datetime >>> from pytz     import timezone >>> date = '19 Jul 18:42' >>> east_time = datetime.now(timezone('US/Eastern')) >>> time_then = datetime.strptime('{} {}'.format(date, east_time.year), '%d %b %H:%M %Y') >>> east_time datetime.datetime(2015, 7, 20, 2, 21, 7, 975856, tzinfo=<DstTzInfo 'US/Eastern' EDT-1 day, 20:00:00 DST>) >>> time_then datetime.datetime(2015, 7, 19, 18, 42) >>> time_then = timezone('US/Eastern').localize(time_then) >>> time_then datetime.datetime(2015, 7, 19, 18, 42, tzinfo=<DstTzInfo 'US/Eastern' EDT-1 day, 20:00:00 DST>) >>> east_time - time_then datetime.timedelta(0, 27547, 975856)   http://www.saltycrane.com/blog/2009/05/converting-time-zones-datetime-objects-python/"
learnpython,3dwzdb,commandlineluser,1 point,Mon Jul 20 06:25:29 2015 UTC,Answered my other question.  Thanks so much :)
learnpython,3dwzdb,elbiot,2,Mon Jul 20 06:29:41 2015 UTC,"What happens if you subtract those two now?  One is in 1900, so you need to fix that, but otherwise I'd expect it to work."
learnpython,3dwzdb,elbiot,1 point,Mon Jul 20 05:54:37 2015 UTC,"Ah whoops sorry, I've added it above."
learnpython,3dwzdb,skyfox345,2,Mon Jul 20 06:00:15 2015 UTC,"What do you expect to happen when you subtract a time without specifying the time zone from one with a specified time zone?  I'm going to sleep, but look at adding a time zone to one, or not adding it to the other."
learnpython,3dyvbb,valikund,6,Mon Jul 20 17:28:26 2015 UTC,"This is such a common question that there is a FAQ about it. In short, it will take about 10 minutes to learn the major differences in between them, so it really does not matter. If you have a set of   Here is a list of learning resources."
learnpython,3dyvbb,novel_yet_trivial,2,Mon Jul 20 17:34:24 2015 UTC,"Both. If you plan to use the skills in a workplace you're likely to run into 2.x, but as time progresses people will be using 3 for more and more projects."
learnpython,3dw92p,freakzilla149,6,Mon Jul 20 01:34:20 2015 UTC,"The method setRange is not needed. You would do that in a language like C++ or Java, but in Python we'd just write: pistol.range = 100  If you really need getter and setter methods you can use @property. It gets mentioned in Raymond Hettinger's Class Development Toolkit."
learnpython,3dw92p,dunkler_wanderer,4,Mon Jul 20 02:17:20 2015 UTC,Also I would consider it bad practice to name a function getX() when it isn't a getter. It should be named something like pick_up_ammo or add_ammo for example.
learnpython,3dw92p,pqu,4,Mon Jul 20 04:41:27 2015 UTC,"Pretty simple example, but yea.  It becomes really useful when coding, too, since you can just write your main animation functions (your view and controller in MVC), and when you notice that you need some method for one of your objects, such as getAmmo, you just assume it works and is there and you call it.  Then when that's done, you have, laid out in front of you, all of the methods that you have to implement.  Hope this makes sense.  It's also useful for having lists of objects - in a game like brick breaker, for instance, you can just keep a list of bricks, each of which have a collision method, their color/position, etc.  Also, you might want to do  class Weapons(object):   So that you inherit the built-in properties of objects."
learnpython,3dw92p,Wrathofvulk,3,Mon Jul 20 01:57:50 2015 UTC,"Also, you might want to do  class Weapons(object):  So that you inherit the built-in properties of objects.   You only have to do that if you use Python 2 or want to write compatible code."
learnpython,3dw92p,dunkler_wanderer,3,Mon Jul 20 02:05:43 2015 UTC,"Ah, figured it was a Python 3 thing.  Thanks!"
learnpython,3dw92p,Wrathofvulk,2,Mon Jul 20 02:11:35 2015 UTC,"Also, you might want to do  class Weapons(object):  So that you inherit the built-in properties of objects.   Cool, so say I wanted to create another class out of (extend?) Weapons, e.g.  meleeWeapons(Weapons):, it would inherit Object as well right? Seems logical.  This is veering off a bit (and beyond my current level) but is it best to create new subclasses out of Weapons (e.g. americanWeapons, russianWeapons etc) or just create new classes at that point and forget Weapons?"
learnpython,3dw92p,Wrathofvulk,2,Mon Jul 20 02:34:27 2015 UTC,"Correct!  And if you define a method or attribute in a class that shares the same name as one in the parent class, it overrides it.  You can get around this by using super, which lets you inherit from the parent's method, even if you use the same name.  This lets you set specific attributes in your init, for instance, while still maintaining the ones in your parent class.  Eg,  class C(B):     def method(self, arg):         super(C, self).method(arg)   Then there's the difference between type and isinstance.  Look at the following example and see if you can figure out the difference:  class Weapon(object):     pass class Pistol(Weapon):     pass  >>> famas = Weapon() >>> glock = Pistol() >>> type(famas) <class '__main__.Weapon'> >>> isinstance(famas, Weapon) True >>> type(glock) <class '__main__.Pistol'> >>> isinstance(glock, Pistol) True >>> isintance(glock, Weapon) True   The optimal configuration of the classes is up to you to decide, and depends on how you are using them.  The general idea though, is you might have a class Weapon that contains things in common with EVERY weapon - they all have a size, color, need ammo, etc.  But then you might have subclasses Pistol, MachineGun, Sniper, etc, all things that, while are all weapons, have very different traits.  Hope this makes sense."
learnpython,3dw92p,Wrathofvulk,2,Mon Jul 20 02:51:26 2015 UTC,"Awesome. I see why isinstance(glock, Weapon) is True. It belongs to the class Pistols, but of course Pistol is a subclass of Weapons."
learnpython,3dw92p,p10_user,1 point,Mon Jul 20 03:14:32 2015 UTC,Yep! This can be pretty useful if you know how it works!
learnpython,3dw92p,mikeselik,4,Mon Jul 20 04:31:41 2015 UTC,Looks like a good start. I really found this post to be good for introduction to classes.
learnpython,3dw92p,keturn,2,Mon Jul 20 02:02:09 2015 UTC,"The PEP 8 style guide says you should use method names that are lowercase_with_underscores, rather than lowerThenUpper. Class names should be CamelCase.  https://www.python.org/dev/peps/pep-0008/  I know I'm being nit-picky, but the small things matter.  Further, the method name .getAmmo is confusing. Normally the word get is reserved for returning a value, not for incrementing an attribute. Choosing a good name is often hard, but important."
learnpython,3dw92p,keturn,2,Mon Jul 20 04:08:18 2015 UTC,"As for getting better ideas about how classes are used in games, Al Sweigart has some books about learning python with games over at http://inventwithpython.com/  and of particular interest may be this blog post, Why is Object Oriented Programming useful? (with a role-playing game example)"
learnpython,3dw92p,Kosooki_mrav,1 point,Mon Jul 20 06:53:47 2015 UTC,"self refers to an instance of that class. That's why Weapons(""pistol"").name is different than Weapons(""shotgun"").name.  Methods get passed the instance (as self), so they may mess with its attributes, but that privilege is not unique to methods. Anyone else with the instance may do things like pistol.ammo = 99 too."
learnpython,3dw92p,kundun,1 point,Mon Jul 20 06:40:30 2015 UTC,"the below are all attributes, which all instances of the class will have.      # may assign new values using methods of the class     self.ammo = 0     self.range = 0     self.fireRate = 0    What's the difference in setting these three variables inside init() like in example above, and setting them outside methods, just after the class definition like this:  class Weapons:     ammo = 0     range = 0     fireRate = 0"
learnpython,3dw92p,Kosooki_mrav,3,Mon Jul 20 10:04:58 2015 UTC,"Variables assigned using self are object variables.  Variables assigned outside methods are class variables.  Object variables are owned by each individual object of the class. In this case, each object has it own copy of the variable.  Class variables are shared between all objects of the class. If you change a class variable it will change for all objects of that class.  A simple example:  class Person:     # This is a class variable     population = 0      def __init__(self, name):         # This is an object variable         self.name = name          # We refer to a class variable using the class          # name followed by the name of the variable.          # In this case we add 1 to the population each          # time a new Person object is created.          Peron.population += 1       person1 = Person(""kundun"")     person2 = Person(""Kosooki_mrav"")      # Because we used Object variables      # for the name of the person, each Person      # object will have an unique name      person1.name # This returns ""kundun""     person2.name # This returns ""Kosooki_mrav""      # Because we used class variables for the population,      # we find that the population is the same      # for each Person object.     person1.population # This returns 2     person2.population # This returns 2      Person.population # This returns 2 as well"
learnpython,3dxcdq,onesieswiththesocks,3,Mon Jul 20 08:52:32 2015 UTC,What projects have you done before? What's your level in Python ?  How much time do you have for this project?  It's easier to give you good suggestions with a bit more information.
learnpython,3dxcdq,scoutyx,2,Mon Jul 20 13:09:23 2015 UTC,Sorry about that :(  I have done most basics (web scraping and anything above that skill level is over me) and I understand most vanilla Python. I have 10 weeks and I see myself as a beginner/intermediate level programmer.
learnpython,3dxcdq,scoutyx,1 point,Mon Jul 20 21:15:05 2015 UTC,"Ok. How about a ""weight loss helper"" program that asks the user for their Body Mass Index and how much weight they want to lose in a particular timeframe; and then outputs a CSV File / Excel graph that shows them what their weight/BMI should be at a given time. You can also ask the user for more information and use these to output some other useful graph / image / file / etc...  For the user input, you could use a GUI framework like TkInter (or PyQt). It's not super easy but it would be a good learning experience for an intermediate programmer.  For the output, you could use the csv module or xlsxwriter, or some image generation library."
learnpython,3dxcdq,Ran4,1 point,Tue Jul 21 08:14:42 2015 UTC,Hmm. That could work. I'm pretty handy with  Pygame  so I could attempt a GUI with that. H Thank you :)
learnpython,3dy4nf,Beef15,1 point,Mon Jul 20 14:14:34 2015 UTC,Your program is cranky lol
learnpython,3dy4nf,99AFCC,0,Mon Jul 20 16:09:57 2015 UTC,Don't post screenshots of code.
learnpython,3dy4nf,Doormatty,5,Mon Jul 20 14:18:12 2015 UTC,"it’s not code, it’s color-coded questions and answers in the program."
learnpython,3dw60r,AlphaNerd80,1 point,Mon Jul 20 01:07:21 2015 UTC,"Isn't main.py supposed to be in your ""test"" folder ?"
learnpython,3dw60r,Rockybilly,1 point,Mon Jul 20 01:15:02 2015 UTC,"Why so? The test are typically is segregated in a different folder, so why would I place main there? Is my understanding of python testing wrong from the core point?"
learnpython,3dw60r,Rockybilly,1 point,Mon Jul 20 01:18:30 2015 UTC,"I have been led to understand if you want to import one of modules you writed, its gotta be in the same folder. But i might be horribly wrong. If i am, please ignore this message."
learnpython,3dw60r,Justinsaccount,1 point,Mon Jul 20 01:28:03 2015 UTC,"Well, fwiw, I tried what you mentioned and now the issue seems to be compounded :)  python test/calculate_test.py  Traceback (most recent call last):   File ""<frozen importlib._bootstrap>"", line 2218, in _find_and_load_unlocked AttributeError: 'module' object has no attribute '__path__'  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""test/calculate_test.py"", line 4, in <module>     from main.Calculate import Calculate ImportError: No module named 'main.Calculate'; 'main' is not a package     Also, generally that would be impractical to do on larger applications with multiple modules/packages.  An example would be when we're importing the standard libraries, they're somewhere else (depending on your environment) and the python interpreter knows where to look because of the sys path.    With that said, I do not think this is the issue in this case, rather a matter of better constructing my import statements in calculate_test.py on my part, but I'll be the good student and wait for an answer from someone far more experienced than I am."
learnpython,3dw60r,hudsonpenner,1 point,Mon Jul 20 01:42:43 2015 UTC,That's not quite right.  Download some popular but small packages off pypi and look how they have things set up.
learnpython,3dx2sz,OsamedeJones,3,Mon Jul 20 06:34:52 2015 UTC,"The less code you have, the more easily you will find mistakes, and the less opportunity you have to make them.  while True:     try:         if board[x + 1][y] == '*':             rules += 1         break     except IndexError:         rules += 0         break   You do this multiple times, and I don't understand your thought process. What is the purpose of the while loop? What is the purpose of doing rules += 0?  if board[x][y] == '*':     # lots of code to add up neighbouring cells     if rules < 2: #rules         board_game[x][y] = ''     elif 2 <= rules <= 3:         pass     elif rules > 3:         board_game[x][y] = '' elif board[x][y] == '':     # lots of code to add up neighbouring cells     if rules == 3: #rules         board_game[x][y] = '*'   All of the ""lots of code"" is the same. Why repeat it? Just do it before checking the current cell.  Similarly, instead of checking for x == 0 and y == 0 (I guess you noticed that when you subtract 1 from those values, you get -1 and wrap around the grid, thanks to how Python's indexing works) and using completely separate, huge blocks of code for each case (doing either 3, 5 or 8 checks), you could just write the 8-check block, guarding each individual check with the appropriate conditions for x and y.  In fact, you could also check for x and y being too big at this point, and then you wouldn't need the try/except logic.  Once you have that, the last step is to, instead of manually specifying all those combinations, instead loop over the possible values (-1, 0, 1) that you add to x and y for the indexing. :)    That said, where you went wrong is that you're trying to represent empty cells with '', which doesn't take up any space when it's printed."
learnpython,3dx2sz,zahlman,1 point,Mon Jul 20 08:07:03 2015 UTC,ahh I have been busy with class but thank you so much!! when I have time this weekend Ill try to edit it to make it cleaner.
learnpython,3dx2sz,Justinsaccount,1 point,Tue Jul 21 17:40:33 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3dx1qy,Rich700000000000,1 point,Mon Jul 20 06:21:26 2015 UTC,you can start with bar code detection on any consumer product
learnpython,3dx1qy,selvasair,1 point,Mon Jul 20 07:36:19 2015 UTC,"So how would I start writing that, where can I find some examples and tutorials?"
learnpython,3dx1jk,rohitreddy369,4,Mon Jul 20 06:18:49 2015 UTC,If you're using flask you want to be following http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
learnpython,3dvzcn,SirSkelton,2,Mon Jul 20 00:07:05 2015 UTC,"The first function works fine for me, though adding the 'break' after a 'return' won't do anything because a 'return' already breaks out of a function."
learnpython,3dvzcn,ghritt,1 point,Mon Jul 20 00:32:27 2015 UTC,the first code returns True composite numbers (I input 9 and got True).  I'm not really sure why that's happening.
learnpython,3dvzcn,wanderliss,2,Mon Jul 20 00:48:27 2015 UTC,"Whenever you're not sure, you should stick in print statements inside loops that print out the variables' values to see for yourself.  You have a for loop that quits after its first cycle because you're calling return whether the internal condition is true or false. So it's not testing if it has any divisors, it's testing if it's divisible by 2.  If you're going to brute force it like this, you should test whether it's divisible by anything, and if it isn't (i.e., after and outside of the for loop), return True. You've done this in your second version but you don't need to count up the number of divisors since non-primality is determined as soon as it has one divisor.  Note for speed purposes, you could be checking whether it's divisible by any number less than sqrt(x), rather than x, since if it's divisible by any number bigger than sqrt(x) it must also have a divisor less than sqrt(x)."
learnpython,3dvzcn,ghenshaw,1 point,Mon Jul 20 01:13:11 2015 UTC,"Remember, if you want to check if something is prime, you only need to check for factors up to the square root of the number you are checking.  This is because if a number has a non trivial factor, n = km, then either k or m is less than or equal to square root of  n. otherwise we would have km > n, a contradiction.   just use,      Def is_prime(n):          if n < 2:              return False          while i*i <= n:              if  n % i == 0:                 return False          i += 1        return True    This is much much faster."
learnpython,3dvzcn,Rockybilly,0,Mon Jul 20 02:34:53 2015 UTC,"Here how i got it working, you can decide which one to use if you want to need that later...  also see:  (If you ever need something else to try with prime numbers) https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes  def is_prime(x):     count=0     if x<2:         return False     else:         for n in range(x+1):             if n==0:                 continue             else:                 if x%n==0 and n!=x and n!=1:                     count+=1                 elif x%n!=0:                     continue         if count>=1:             return False         elif count==0:             return True"
learnpython,3dvzcn,Rockybilly,1 point,Mon Jul 20 00:24:17 2015 UTC,"thanks, that does look a little nicer.  I tend to break up my conditionals into multiple elifs when I don't need to.  I am trying to get it to just see if it has a divisor and if it does return False.  Is it more common to just use an extra variable like you did with count and i did with divisors?"
learnpython,3dvzcn,gengisteve,1 point,Mon Jul 20 00:31:45 2015 UTC,"i dont think so, actually i am probably using unnecessary variable right there. In codecademy i usually write what pops into my head rightaway so i wouldnt take this as a starting point. I would appreciate if a more experienced programmer answer this question as well :)  in my code i tried to count how many dividable numbers the value had. So if it is 1 or more, it returns false :)"
learnpython,3dvzcn,Rockybilly,1 point,Mon Jul 20 00:45:32 2015 UTC,"Just some optimization.  If you are returning something you do not have to worry about the else structure because the return terminates the function.  So we can turn your code into:  def is_prime(x):     if x<2:         return False      for n in range(2, x+1):         if x % n == 0 and x != n:             return False     return True   Also we set the range start at 2 to avoid some of the conditionals.  Also do you need to go to x + 1 or could you short circuit at sqrt(x)?"
learnpython,3dvzcn,atthem77,1 point,Mon Jul 20 01:34:10 2015 UTC,"That was exactly what i was talking about using unnecessary stuff.(check my code for example :D ) gengisteve's code is obviously more legit. about the sqrt(x) thing, i come across that while i was working on this:  https://projecteuler.net/problem=3  The number 600851475143 is way too large to use it in a range() function so i had to use sqrt(). I have been trying to prove it on my own and i think i got it after that question. If you want to deal with prime numbers later, sqrt() or **0.5 is definitely the method to explore next."
learnpython,3dvpo4,Rockybilly,1 point,Sun Jul 19 22:43:29 2015 UTC,"Had a look over, haven't played it but one thing I think may be an issue:  You are creating the four enemies at the start of the game, and depending on the level you randomly pick an enemy to fight, but seeing they are hardcoded before your main loop, if you fight and kill foe1, and in the second battle you randomly got assigned foe1 again he would still be on 0 or less hp? (hope that makes sense)  A better way to handle that would be to create the foe at the start of the battle, you could still use the random_opponent func, have it check the hero level, and create and return a foe object based on what roll they get.   Also, I'm not completely across classes, but you should look into having a ""person"" class that contains the overlapping features of Hero and Soldier, like name, hp, etc then those two can inherit those variables from that by doing  class Hero(Person):   It's not so much of an issue now, but if you where to keep working on it and adding new enemies it could save you a lot of lines not having to write out the hp and name stats over and over."
learnpython,3dvpo4,Busby10,1 point,Mon Jul 20 01:17:11 2015 UTC,"You are completely right about the class issue, I am currently a newbie at using classes let alone in inheritance, Thank you for your comment.  In the first issue you mentioned:  def win_battle():     print ""You have won the battle !""     time.sleep(1)      if current_enemy==foe1:         print ""You gained 40 exp.""         our_hero.exp+=40     elif current_enemy==foe2:         print ""You gained 45 exp.""         our_hero.exp+=45     elif current_enemy==foe3:         print ""You gained 50 exp.""         our_hero.exp+=50     elif current_enemy==foe4:         print ""You gained 55 exp.""         our_hero.exp+=55     print "" ""      current_enemy.current_hp=current_enemy.max_hp   Here is my win_battle function. At the end of it, there is a small piece of code, that replenishes current_enemies hp."
learnpython,3dvpo4,zahlman,2,Mon Jul 20 01:26:57 2015 UTC,"Have you considered giving the enemy an attribute that indicates how much xp it's worth? Then you could look that up directly, instead of checking which enemy was defeated."
learnpython,3dvpo4,zahlman,1 point,Mon Jul 20 07:50:53 2015 UTC,It seems like a good idea. Thank you for your comment. but can you explain why you suggested me to do that ? because it will save me from some line of codes or is it a style issue ?
learnpython,3dvpo4,gengisteve,1 point,Mon Jul 20 13:17:40 2015 UTC,Avoiding repetition is inherently a style issue.
learnpython,3dudod,snarfSniffer,8,Sun Jul 19 15:52:57 2015 UTC,"I thought the try/except caused a program to exit, if the except gets executed:    Nope, you still need to call sys.exit() or something inside of the except block if you want to exit the program. The point of try/except is to be able to recover from errors."
learnpython,3dudod,x3al,3,Sun Jul 19 16:20:28 2015 UTC,I see. I misunderstood the purpose of try/except. Thank you.
learnpython,3dudod,Prooffread3r,4,Sun Jul 19 16:48:24 2015 UTC,"You need to put your final two lines inside the try block, then your program will work as you expect. Right now those lines execute regardless of what happens in the try/except blocks."
learnpython,3dudod,FlockOnFire,8,Sun Jul 19 16:18:34 2015 UTC,"Better yet, make it a try/except/else. Always try to limit the code in a try block. Easier to distinguish between errors if multiple lines can go throw an error."
learnpython,3dudod,Prooffread3r,5,Sun Jul 19 16:24:37 2015 UTC,"True. It's also excellent practice to specify the type of error, e.g. except TypeError:"
learnpython,3dudod,status_quo69,1 point,Sun Jul 19 16:29:50 2015 UTC,I see. I obviously misunderstood what the try/except does. Thank you.
learnpython,3dudod,hudsonpenner,3,Sun Jul 19 16:47:27 2015 UTC,"In this case, instead of calling sys.exit() or whatever, you could use the handy else clause in try...except:  hours = raw_input(""how long worked: "") rate = raw_input(""pay rate: "") try:      hours = float(hours)     rate = float(rate) except:     print ""[+] Error -- Please enter numeric input "" else:     if hours > 40:         rate *= 1.5      total = hours * rate     print ""you made %s dollars"" % total     The only way the else gets executed is if no exception was raised."
learnpython,3dudod,gutoandreollo,1 point,Sun Jul 19 21:12:40 2015 UTC,Did not know about the else. Thanks.
learnpython,3dudod,boardhoarder,1 point,Mon Jul 20 14:47:59 2015 UTC,"The error is occurring because the string five is being passed into the hours variable instead of 5.  >>> float('5') 5.0 >>> float('five') Traceback (most recent call last):     File ""<stdin>"", line 1, in <module>     ValueError: could not convert string to float: five"
learnpython,3dudod,boardhoarder,1 point,Sun Jul 19 16:25:45 2015 UTC,"I understand that error. I was purposefully testing that case. I want the program to exit if someone inputs a something that cannot by converted to a float. My question was why the code gets to that part of the program. I was, erroneously, thinking the except would cause the program to exit."
learnpython,3dudod,Justinsaccount,1 point,Sun Jul 19 16:46:52 2015 UTC,"It is actually the way around. An UNhandled exception will cause the program to exit on the spot. By providing a try/except clause, you're catching and treating the exception, therefore allowing the program to continue."
learnpython,3dvzgr,NFTrot,3,Mon Jul 20 00:08:04 2015 UTC,Something like this?  try:     while True:         #part of program that loops except KeyboardInterrupt:     #stuff to do before exit     raise SystemExit   And then just hit Ctrl+C to kill the program.
learnpython,3dvzgr,thurask,1 point,Mon Jul 20 00:26:04 2015 UTC,"Thanks, I had to think about how to make this work correctly with my program but this solution should work perfectly, I think."
learnpython,3dvzgr,elbiot,2,Mon Jul 20 00:53:12 2015 UTC,while True will keep it running. Control+C will end it.
learnpython,3dvzgr,hudsonpenner,2,Mon Jul 20 00:21:46 2015 UTC,"If you want it to just run over and over, you might want to look into supervisord.  http://supervisord.org/  Whatever 'other stuff' you need to do before the program exits could just be baked into the program, and you could tell supervisor to keep running it over and over."
learnpython,3dvz2b,wannabetheorist,3,Mon Jul 20 00:04:31 2015 UTC,JSON! https://docs.python.org/2/library/json.html  Just save it as a file and import the file later.
learnpython,3dvz2b,tfitz237,1 point,Mon Jul 20 00:30:43 2015 UTC,Write it to text and then load later?
learnpython,3dvz2b,thurask,1 point,Mon Jul 20 00:20:58 2015 UTC,Is there something that will preserve the array format?
learnpython,3dvz2b,thurask,1 point,Mon Jul 20 00:27:31 2015 UTC,Are you using numpy or something like that?
learnpython,3dvz2b,thurask,1 point,Mon Jul 20 00:29:17 2015 UTC,"Yes, I am using numpy."
learnpython,3dvsm4,ainsey11,1 point,Sun Jul 19 23:09:25 2015 UTC,I would suggest using requests instead of CuRL:  http://docs.python-requests.org/en/latest/
learnpython,3dvsm4,hudsonpenner,1 point,Mon Jul 20 15:28:30 2015 UTC,I sorted it :)  Turns out I needed to use the legacy influxdb python lib as I'm using influxdb 8
learnpython,3dtmmh,aizikasaf,5,Sun Jul 19 09:52:08 2015 UTC,"When you paste in code in Reddit, put four spaces at the beginning of every line so it will format properly, like so:  cursor = arcpy.da.UpdateCursor (school, [""RISK_LEVEL""])  delim = arcpy.AddFieldDelimiters(school, ""NEAR_DIST"")  for row in cursor:      if row in delim < 5000:          row[0] = ""low""          cursor.updateRow (row)      else:          row[0] = ""high"""
learnpython,3dtmmh,Prooffread3r,3,Sun Jul 19 12:11:42 2015 UTC,"hey, i'm having trouble with some code   Note: It's really helpful if you give more detail about what trouble you're having.  Ie. what exactly happens (an exception?  Does something, but not what you wanted it to?), and what you were expecting.  If it is an exception, copy and paste the traceback you get.  Also, note that reddit will mess up your formatting unless you indent your code an extra 4 spaces.  Taking a stab at what looks wrong, I'm not familiar with arcpy, but this   if row in delim < 5000:   Looks a bit strange - what is it intended to do?  Currently, it'll compare delim to 5000 (which will likely either fail, or give a boolean result, depending on what delim is), and then check if row is contained within this value (which will almost certainly fail with a TypeError)."
learnpython,3dtmmh,Brian,1 point,Sun Jul 19 10:25:29 2015 UTC,"You are on the right track. The second argument in the UpdateCursor is a list of fields.  Each row in the cursor returns all of the values for all of the fields requested (maybe in a list- I don't remember off the top of my head). So to get at the row value you want to update, you must specifically call the position based on the order of database fields given in the second argument.               ..."
learnpython,3dtmmh,antigravity-monty,1 point,Sun Jul 19 14:21:36 2015 UTC,"Currently, it'll compare delim to 5000 (which will likely either fail, or give a boolean result, depending on what delim is), and then check if row is contained within this value (which will almost certainly fail with a TypeError).   Not quite. In Python, relational operators can be chained, and in is part of the same group treated with equal precedence. This was designed so that things like x < y < z mean the same as in mathematics; however, it has the counterintuitive-for-many consequence that row in delim < 5000 will check that both row in delim and delim < 5000 are satisfied (except that if delim required evaluation, it would happen only once). This will, of course, probably still fail, because anything that's valid on the right-hand side of in is unlikely to be comparable to an integer."
learnpython,3dtmmh,zahlman,1 point,Sun Jul 19 20:07:12 2015 UTC,I think the issue that you are having is that you are try checking to see if row < 5000. Row in this case is object in the cursor and is not an integer. Are you trying to set the first 5000 rows to be low risk? Or are you trying to check if another field has a value of under 5000?
learnpython,3dtmmh,jtaysom,1 point,Sun Jul 19 13:45:55 2015 UTC,"I wanted to add that this code is probably very inefficient. You might be able to run some smarter SQL to do this entirely on the DB, rather than downloading the whole table and re-updating each row one at a time.  UPDATE OR ROLLBACK school SET school.height = CASE     WHEN school.id < 5000 THEN ""low""     ELSE ""high""     END ;   Something like that. If you go that route, you might eventually also want to look in to using Python to generate these queries - check out SQLAlchemy for a good tool for doing that. But don't do that until you're comfortable with python, SQLAlchemy can be overwhelming for someone brand new to programming in Python."
learnpython,3dvffe,nyamand,3,Sun Jul 19 21:17:42 2015 UTC,"Couple of little things:  I believe in general you shouldn't name variables or functions with capitals.  Why do you have the 'checking' argument for hp_check, it doesn't seem to do anything?   Also i think its a little confusing that the Spider_alive variable is set to false when it is alive, and true when it dies. Seems like it might be better if it was Spider_dead?"
learnpython,3dvffe,Busby10,1 point,Sun Jul 19 21:36:51 2015 UTC,When I added else: dead() in the HP down it threw up an error so I made check HP to get around it ( I know it's possible but I broke it down to ok fine I'll check the HP in a different function first)  If I left the argument blank i got an error so I just stuck checking in no idea what it dose :s  Thanks for the help on naming functions and hmm your right about spider alive I'll re-do it thanks!
learnpython,3dvffe,Busby10,2,Sun Jul 19 21:49:51 2015 UTC,"ah right, that's strange, you should be able to have the function without any argument.   Looking at it again a little closer, your indenting is a bit all over the place, for each function, if statement, loop etc you should indent four spaces or one tab, in dead() and spider_room() you have this correctly, but some of the other functions are double indented, not sure but this might cause issues as python uses the indenting to work out what is inside a loop or if statement and what is not.   also, I've never used global, but I don't think you need to define it inside hitpoints_down seeing you define the hitpoints variable outside your functions on line 89, which should make it available to all the functions. So I think you should be able to get rid of line 73 and it will still work fine.  also I'd probably move line 89 down below the start() func, just so its clearer its not part of any of the functions.   See how you go with and post up any exact errors you get that you can't solve"
learnpython,3dvffe,Justinsaccount,1 point,Sun Jul 19 23:52:14 2015 UTC,"Thank you for the pointers I'm going to clean it up, add more comments and make the changes, thought I had the indenting right but I see what you mean I'm learning how important it is aswell as location."
learnpython,3dvetl,Hyperbole_Prone,3,Sun Jul 19 21:12:32 2015 UTC,"I don't think that's possible.  But IDLE is really not that great of an IDE.  There are dozens and dozens of Python IDEs, and virtually all of them are better than IDLE."
learnpython,3duj9c,TheGreatCrate,2,Sun Jul 19 16:44:01 2015 UTC,"you showld add 2 paths, python2 and python3, that way you can call python2 file.py and python3 file.py from the cmd.  if you are just double clicking its because the default interpreter is version2   But if you don't want python2 i would recomend uninstalling"
learnpython,3duj9c,Tuganazy,1 point,Sun Jul 19 17:08:59 2015 UTC,"Can I get some clarification? I went in to edit the environmental variables and I have ""C:\Python27;C\Python34;"" on there.  However, I can't seem to get one version to run over the other? I've tried renaming the Python.exe files to Python2 and Python3 (as I saw suggested on Stack Overflow), which worked for Python2 but Python3 didn't. For reference, I'm trying to run these through Windows Powershell."
learnpython,3duj9c,Tuganazy,1 point,Sun Jul 19 17:26:20 2015 UTC,"i don't really know how path works, have you tried living python3.exe as python ?"
learnpython,3duj9c,wanderliss,1 point,Sun Jul 19 18:02:46 2015 UTC,"Yeah, I've tried that but it still doesn't work."
learnpython,3duj9c,Not_A_Pumpkin,2,Sun Jul 19 18:33:02 2015 UTC,"You should read the official documentation for using Python on Windows. In particular, Python3.3 and onwards has a new helper program py that lets you specify which version to use, py -2 or py -3 (or py -3.4, and so on). The default is to use Python 2, and this can be changed by an .ini file or setting the PY_PYTHON environmental variable to 3."
learnpython,3duj9c,XtremeGoose,1 point,Sun Jul 19 18:54:21 2015 UTC,"Thanks to everyone in this thread for the help. I really appreciate it. I used what someone else suggested for ""import sys"" and then printing it to see what version I am running. It seems if I just do ""python test.py"", it's running Python 2.  But if I do py -3 test.py, it's running 3.4. That works for me! So now I can use both versions depending on the circumstances.  Thanks again for the help!"
learnpython,3duj9c,MrFoots42,1 point,Sun Jul 19 20:57:16 2015 UTC,I would say use raw_input and/or cast to a string.
learnpython,3dv5id,iamzee123,13,Sun Jul 19 19:52:23 2015 UTC,What am I doing wrong/missing?   You are missing any indication of what you actually tried doing.
learnpython,3dv5id,zahlman,1 point,Sun Jul 19 20:09:28 2015 UTC,"sorry, if I wasn't clear. So I used python IDLE. I typed my first code in the first line that stated (print ""Content-type: text/html""). I then typed a second line of just (print). After that, I ran the code. What I am supposed to be getting is the markup I wrote above (with the HTML code). It is supposed to be generated dynamically where I don't need to manually type it in. I hope that makes it more clear on what I did"
learnpython,3duyde,Trove_,1 point,Sun Jul 19 18:52:53 2015 UTC,David Beazley did diabolically magnificent talk on PyCon2015 about this
learnpython,3duyde,04h,1 point,Sun Jul 19 19:36:11 2015 UTC,Came here to say the same :-)
learnpython,3duyde,rhgrant10,1 point,Sun Jul 19 19:42:32 2015 UTC,Thanks for the video. He started by explaining it in a way that I could follow along and not feel like it was too advance or intimidating. I'm watching it right now and wanted to tell you I appreciate the recommendation.  I've avoided Pycon videos since I always thought they would be too advance
learnpython,3duyde,04h,1 point,Mon Jul 20 19:35:42 2015 UTC,"I'd say most of them are technical, but sometimes there are simple and beautiful talks about fundamentals.  (I hope you survived last part of Beazley's talk :)"
learnpython,3duyde,AlSweigart,2,Tue Jul 21 08:58:40 2015 UTC,I didn't survive the whole thing lol. After about an hour into it he was getting into PYthon 3 virtual environments. I didn't think I would get much out of it since I use python 2 so I stopped
learnpython,3duwuc,bbobthr,6,Sun Jul 19 18:40:15 2015 UTC,"import csv File ""/home/billy/csv.py""   Rename your file. You shadowing real csv module"
learnpython,3duwuc,04h,1 point,Sun Jul 19 18:46:48 2015 UTC,"Yep. And it will keep happening to you, OP, if you don't read the tracebacks ;)"
learnpython,3duln1,RedRavens,3,Sun Jul 19 17:05:26 2015 UTC,"The reason they all say Cuba is because of this loop:  for link in soup.select('tr.year-2015'):   You don't want that.  That's going through every <tr> element, and the value at the end is the last one seen, which is ""MNT vs Cuba"".  More notes:   The way that you're looping over things is somewhat awkward.  For one thing, you generally don't want to keep running searches over and over, like on lines like this:  temp = table.findAll(""tr"", { ""class"" : ""year-2015""})[j].findAll('td')[i].string   Also, there's no need to use indexing in Python when working with a list.  To iterator over each thing, you can write simply:  for elem in soup.find_all(...):     ...   BeautifulSoup method names spelled in camel case are deprecated and will be removed in a future version.  The methods were all renamed for BS v4, so you should be using soup.find_all(), not soup.findAll().  (Where do people keep finding this outdated information?  The BeautifulSoup documentation doesn't mention the old names except in a minor aside.) You don't need to import lxml or write BeautifulSoup(..., ""lxml"").  BeautifulSoup will always use lxml if it's installed.   Here is how I'd implement your example:  import re import requests from bs4 import BeautifulSoup  url = 'http://www.ussoccer.com/matches' soup = BeautifulSoup(requests.get(url).text)  for row in soup.find('table', class_='responsive').find_all('tr', class_='year-2015'):     date, time, opponent, venue, watch = [td.get_text(' ', strip=True) for td in row('td')]      # fix up 'opponent' by removing ""MNT vs"" or ""WNT vs""     opponent = re.sub(r'.*[MW]NT vs *', '', opponent)      # fix up 'watch' by removing leading 'Ticket Info'     watch = re.sub(r'^Ticket Info *', '', watch)      # placeholder for empty fields     venue = venue or 'N/A'     watch = watch or 'N/A'      # do something with values here     # e.g. print('{date:18} {time:11} {opponent:12} {venue:35} {watch}'.format(**locals()))   I'm not sure what your ultimate goal is, so I left that part out."
learnpython,3duln1,Rhomboid,0,Sun Jul 19 20:26:05 2015 UTC,Ultimately I'm trying to get it to do daily sidebar updating on /r/ussoccer but I just wanted to get the web scraping part down. Can you explain what the last line that is commented out will do? I recognize that it is Python 3 but what do the integers after the variables represent?
learnpython,3duln1,Rhomboid,1 point,Sun Jul 19 20:37:15 2015 UTC,"The commented out line just prints out the variables with fixed field widths to create a table.  The values after the colon are the widths.  str.format() is not specific to Python 3, it was backported to Python 2.6 and 2.7."
learnpython,3duln1,drivfe,0,Sun Jul 19 20:43:45 2015 UTC,Ok thank you! Do you think it should be easy enough for me to figure out how to use PRAW to write to a subreddit's sidebar if I read the documentation thoroughly?
learnpython,3duln1,Justinsaccount,1 point,Sun Jul 19 23:06:57 2015 UTC,"I would recommend using SoupStrainer to only parse the table. This way BeautifulSoup won't parse the entire webpage and then look for the table. Faster and more efficient.  soup = BeautifulSoup(data, parse_only=SoupStrainer('table', {'class': 'responsive'})) for row in soup.find_all('tr', ..etc)"
learnpython,3dukvo,Kid_HQ,2,Sun Jul 19 16:58:57 2015 UTC,What do you mean by clean up? Do you intend to shorten the code?
learnpython,3dukvo,saabr,1 point,Sun Jul 19 17:26:51 2015 UTC,"Yes, by avoiding the use of the ""creation()"" function, using ""try"" and ""except"" elsewhere I guess?"
learnpython,3dukvo,Zahand,2,Sun Jul 19 20:38:24 2015 UTC,"Well, I would use a generator like this:  def generate_sequece(n):     while n != 1:         n = 3 * n + 1 if n % 2 else n / 2         yield int(n)  def printer_function(generator):     for number in generator:         print(number)   You should check out yield and generators  Hope this helps."
learnpython,3dukvo,herminator,2,Sun Jul 19 18:18:50 2015 UTC,"You can use a while loop to keep repeating the same question, instead of calling the function recursively. Something like:  def get_number():     number = input(""Please enter a number: "")     while not number.isdigit():         print(""That's not a number!"")         number = input(""Please enter a number: "")     return int(number)"
learnpython,3dudtu,Dazzler_95,4,Sun Jul 19 15:54:23 2015 UTC,"It might help to break the task down into portions of code.  1) Write code that opens a text file, and reads it into a variable. (hint: with open (file, 'r') as f:)  2) Write code that can determine the number of times an email address occurs. There are a lot of different ways to do this, but I might suggest starting with Collections.Counter()?  Just focus on each portion one at a time and the assignment will be less overwhelming. Feel free to post your code here as you work on it, and we will do our best to help."
learnpython,3dt9ri,TedW,3,Sun Jul 19 06:11:52 2015 UTC,"I know this is confusing, but I can't think of a better way to describe it.   Draw diagrams, maybe?"
learnpython,3dt9ri,zahlman,1 point,Sun Jul 19 07:45:26 2015 UTC,"That's good advice, and what I actually did while thinking through it.  /u/Brian's suggestion got me over the hump I was stuck on, but I'll try including a diagram with questions like this in the future.  Thanks for taking a look."
learnpython,3dt9ri,Brian,3,Sun Jul 19 15:01:22 2015 UTC,"One thing that isn't entirely clear from your examples (since it's only an issue for 4+ zeroes) is: is this the difference between every pair of zeroes, or just adjacent zeroes (ie. only seperated by 1s)?.  Eg. should '000011' produce [3, 0, 1]  (there are 3 zeroes 1 element apart, and 1 3 elements away), or [3, 2, 1 ]  (IE we count 0-2 and 1-3 as well, which are seperated by other zeroes, rather than 1s).  I'll cover both ways:  Case 1 - adjacent zeroes.  Here basically want to walk through your ""combo"" list with a sliding window, but also wrapping round so the first and last get compared.  Ie: for '010101' (combo = [0, 2, 4], we want to measure between 0-2, 2-4 and 4-0.  You can do this by zipping the list with itself, rotated once.  Eg.  >>> list(zip([0, 2, 4], [2, 4, 0])) [(0, 2), (2, 4), (4, 0)]   And then loop through these indices, and compare these distances between them, similarly to how you're already doing between the single pair.  To generate that rotated list, you can use slices.  Ie. this is equivalent to:  >>> pairs = zip(combos, combos[1:] + [combos[0])   Case 2 - every pair of zeros  If you need the differences between every pair of zeroes (including ones seperated by other zeroes), it's slightly different.  For 3 elements, it's actually the same as the above, but for 4, there's a difference.  Eg. '000011' would give you combos == [0, 1, 2, 3], but where previously you wanted to measure the distances between the pairs [(0, 1), (1,2), (2, 3), (3, 0)], now you want those plus [(0, 2), (1, 3)]  You only want each pair once, and don't care about the order (ie. (0, 3) is the same as (3, 0)), which means that the list you want is basically the sequence of combinations of picking 2 elements from this list.  Fortunately, python has this built in, in the form of itertools.combinations.  For example:  >>> list(itertools.combinations([0, 1, 2, 3], 2)) [(0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3)]   And once again, you just need to measure the distance between each pair.  Note: you can also simplify your distance calculation.  Rather than special casing 4 and 5 to be the same as 2 and 1 respectively, you can just note that you need whichever is smaller - the value or 6 minus the value (ie. the reverse direction).  So basically you can replace those 2 lines with:  dist = min(dist, 6 - dist)"
learnpython,3dt5w7,Carloshmejia,3,Sun Jul 19 05:18:29 2015 UTC,Add path to site-packages from python 3.4. Like  import sys sys.path.append(r'C:\Program Files (x86)\Python3.4\Lib\site-packages')   But it's dirty. Proper way is to install modules
learnpython,3dt5w7,04h,2,Sun Jul 19 10:42:08 2015 UTC,"Thank you for your help. Do I need to write those two lines for every script from 3.5? Are there a way to change this system path so both python 3.4 and python 3.5 be able to find the modules? I know that installing the modules again is an option, but I think is more elegant that my scrips run with only one copy of modules and without extra lines."
learnpython,3dt5w7,kurashu89,3,Sun Jul 19 12:30:02 2015 UTC,"There is, actually. I'm not completely sure I recommend it, but you can create a ""pth"" file and drop it into your site-packages folder. What these files do is add additional paths to sys.path. You can also invoke arbitrary Python, but don't do that.  So in your 3.5 install, you could drop in a file called, ""34libs.pth"" with a single line:  C:\Program Files (x86)\Python3.4\Lib\site-packages  And Python should look for packages installed in the 3.4 packages directory.  However, I really, strongly recommend against this. Virtualenvs/Conda/whatever are your best bet for handling this situation."
learnpython,3dt5w7,hudsonpenner,2,Sun Jul 19 13:22:58 2015 UTC,"Agreed that virtualenvs are the way to go here. I avoided them for a long time, thinking that it was just an extra step, and that installing everything globally was fine. It IS fine for a bit, but eventually you will bump into some weird stuff. Get used to using virtualenvs right now and save yourself some grief down the line."
learnpython,3drbiq,mnky9800n,5,Sat Jul 18 18:30:31 2015 UTC,"My opinion. Go wide. As long as the installation is easy for them, it doesn't matter one bit what is under the hood.  I write code that is easy to read, because I want my code to be easy to read FOR ME. If they need to mess with anything I wrote, call me, pay me, or try to understand what I'm doing on your own. I have no obligation to shoot my future employment in the foot."
learnpython,3drbiq,Exodus111,2,Sun Jul 19 03:02:00 2015 UTC,"It is a good question to ask.   can be more obvious when it fails   Can you clarify this bit? Do you mean, that the csv module in the standard library has higher-quality error messages than pandas? Or do you mean that a new maintainer may not know pandas as well as they know the csv module?"
learnpython,3drbiq,amfarrell,1 point,Sat Jul 18 19:45:29 2015 UTC,"Both I suppose.  I find that Pandas error messages aren't so helpful until you've used  Pandas for a while (and numpy, and matplotlib, and . . .). Whereas the standard library has better error reporting.  Additionally, pandas seems to be in a constant state of flux. Will new maintainers want to update to a new version of pandas? Will new versions break old functionality?"
learnpython,3drbiq,rhgrant10,2,Sat Jul 18 19:58:06 2015 UTC,"I say if you feel that the errors you're allowing to bubble up by not try excepting them aren't sufficient in sone way, then by all means you should improve the readability and maintainability of your code and shore up their shortcomings by simply catching them and raising your own custom exceptions. Plenty of great python libraries take this approach. This also affords you the ability to distinguish between exceptions you want to expose and those you didn't expect while allowing the caller finer control in how they handle exceptions."
learnpython,3drbiq,grandzooby,1 point,Sun Jul 19 04:17:44 2015 UTC,"If the standard library does it easily and without you writing a lot of code, then use the standard library (keep it simple).  However, I see no problem in using well-established and commonly-used libraries like pandas.   If you have to write a lot of code to use the standard library to accomplish a task, then by all means, use a popular library to cut down on that.  Anyone maintaining your code will be able to get plenty of help using things like pandas.  On the other hand, I would avoid using things like the grandzooby-csv library.  Nobody uses it, it's not well-documented, and who knows what it actually does or doesn't do, or how to fix it when it doesn't work."
learnpython,3drbiq,hudsonpenner,1 point,Sun Jul 19 06:37:39 2015 UTC,"Standard library as much as possible.  Even a well established and actively developed library can have bugs, or might not function the way you expect. In these cases, you either have to submit a PR (which can take time to get into master), monkeypatch, or use your own fork.  There are of course times where using the standard library would just require to much effort and code, which is when you go to additional modules IMO."
learnpython,3dtova,rewtnull,2,Sun Jul 19 10:33:29 2015 UTC,"Ive never worked with this before, but that does seem to be an unhelpful piece of documentation.  Following the link to the spec: https://developer.gnome.org/notification-spec/ I found the expected calling convention for Notify, which this library has implemented as the init for the Notification class:  UINT32 org.freedesktop.Notifications.Notify (   app_name,     replaces_id,      app_icon,     summary,      body,     actions,      hints,    expire_timeout);        The hints paramter seems to be the interesting one, as it indicates an ""x"" and ""y"" hint which should correlate to screen coordinates.  ""x"" int Specifies the X location on the screen that the notification should point to. The ""y"" hint must also be specified.    ""y"" int Specifies the Y location on the screen that the notification should point to. The ""x"" hint must also be specified."
learnpython,3dtova,oldpythonbestpython,1 point,Sun Jul 19 13:30:09 2015 UTC,"Thanks for your answer. I have already tried this method, with no luck. Using pynotify, absolutely nothing happens, and with gi.repository Notify, using the following syntax:      current_desktop.set_hint('x', int)     ...   I get the following error:  TypeError: argument value: Expected GLib.Variant, but got int       If i call this method instead:  current_desktop.set_hint_int32('x', int) ...   just like with pynotify, nothing happens.  Also to account for different screen resolutions, I loaded the Gdk module to be able to access its get_width, and get_height methods, like so:  default_size = Gdk.Screen.get_default() default_screen_width = default_size.get_width() default_screen_height = default_size.get_height()   My idea was to explicitly position my popup like:  current_desktop.set_hint_int32('x', default_screen_width -20) current_desktop.set_hint_int32('y', default_screen_height -20)   I did this only as a test, because 1) If I don't absolutely have to, I'd rather not import another module, and 2) The explicit placement could clash with default system notification positions.  In either case, I have not managed to figure out how to use the set_hint methods in a way that works."
learnpython,3dqm6r,mikkkee,2,Sat Jul 18 14:35:40 2015 UTC,great! I'll give it a try
learnpython,3dqm6r,belalobo,1 point,Sat Jul 18 15:43:45 2015 UTC,Thanks. It's a little tricky getting MoviePy works with PyInstaller. Feel free to ask me if you have any problems with GIFer. :p
learnpython,3dqm6r,soqets,2,Sat Jul 18 16:58:24 2015 UTC,It doesn't open up whenever I try to launch it on Windows 8.1 64bit  I downloaded the binary executable. I'm using Python version 3.4.3 if that's any help
learnpython,3dqm6r,soqets,2,Sat Jul 18 18:04:47 2015 UTC,"Really sorry. The code is written in Python 2.7, thus not compatible with Python 3.x.  Will Add this to Docs."
learnpython,3dqm6r,soqets,1 point,Sun Jul 19 01:49:31 2015 UTC,No need to apologize
learnpython,3dqm6r,muksha,2,Sun Jul 19 02:04:31 2015 UTC,But the binary file should work because all requirements including Python are already packed into it.   Have no idea why it doesn't work. Will dive into PyInstaller to get more info.
learnpython,3dqm6r,DoTheEvolution,1 point,Sun Jul 19 02:13:59 2015 UTC,Okay
learnpython,3dqm6r,Pvt_Haggard_610,1 point,Sun Jul 19 02:15:15 2015 UTC,looks really nice. I am playing with it now
learnpython,3dsgbs,solololol,6,Sun Jul 19 00:42:03 2015 UTC,"Using a modulus is a relatively clean way to do something every x iterations:  for iter in range(10000):     # some magic happens     if iter%3333 == 0:          print(""working on index"", iter) print(l1)   This requires math on every iteration, which slows your loop down. Better would be to structure your for loop :  for i in range(3):     for iter in range(3333):         # some magic happens     print(""working on index"", iter+iter*i) print(l1)"
learnpython,3dsgbs,novel_yet_trivial,5,Sun Jul 19 00:51:48 2015 UTC,"novel_yet_trivial's advice is correct, I just wanted to add that if you wanted to check for intervals that aren't equally spaced, instead of chained or operations you could do:  if iter in [100, 1000, 5000]:"
learnpython,3dsgbs,Prooffread3r,2,Sun Jul 19 00:56:42 2015 UTC,"oh, this makes sense! Indeed, the variable's value follow a power law distribution, so changes are slim after a while. Thanks for the insight!"
learnpython,3dsgbs,Prooffread3r,2,Sun Jul 19 01:04:17 2015 UTC,"I find myself doing that quite often. If I have a calculation that runs a long time, I want reminders close together at first so I can estimate the total duration."
learnpython,3dsgbs,raylu,1 point,Sun Jul 19 01:30:00 2015 UTC,"awesome, I love the simplicity, thanks a lot."
learnpython,3dsgbs,Neceros,3,Sun Jul 19 01:01:52 2015 UTC,Is there a better way to achieve this?   https://github.com/lericson/fish   Ever wanted to have animating fishes for progress bars in your command-line script?
learnpython,3dsgbs,raylu,1 point,Sun Jul 19 01:11:11 2015 UTC,"man, that is awesome!"
learnpython,3dsgbs,novel_yet_trivial,0,Sun Jul 19 01:17:56 2015 UTC,"for iter in range(10000):  is a dead giveaway you should be using a with statement, as it automatically includes __init__ and __exit__ when you call upon it.  Edit: Oops! I meant to say a for loop, but you're already using for! Good job. :D  Enjoy some videos! Here's where I learned this: https://github.com/s16h/py-must-watch  Specifically this video: https://www.youtube.com/watch?v=EnSu9hHGq5o -- This guy is freaking smart."
learnpython,3dsgbs,dunkler_wanderer,2,Sun Jul 19 01:48:40 2015 UTC,"thanks a lot, true to the 'learn' part of this sub. Now I have homework to do!"
learnpython,3drzly,AlewisGB,4,Sat Jul 18 22:02:08 2015 UTC,"pylint Generally, parsing with regexes is not recommended because it's brittle and hard to debug, add features to, or otherwise maintain. The usual approach is to tokenize, then do syntactic analysis. You can build your own like jinja has done, or use one of the many ""python parser""s (that's what I googled for)."
learnpython,3drzly,raylu,1 point,Sat Jul 18 23:58:29 2015 UTC,"I have installed that and it is brilliant, I will fix my code tomorrow as I am too tired now. The article from http://effbot.org/ looks interesting but also very complicated, that is also on my to do list for tomorrow."
learnpython,3drzly,Busby10,2,Sun Jul 19 01:16:41 2015 UTC,"I'm fairly new to this as well, and I don't understand a lot of the regex stuff, but I can help with the functions from different files. If you create a file with some functions you can import it just like you import re and random, and use it the same.  I created a simple one to test:  test.py:  def print_hi():     print ""Hello World!""   main.py:  import test test.print_hi()   When you run main it will import the functions from the test.py file and run the print_hi function. Just like calling  re.search()  Hope that helps"
learnpython,3drzly,cscanlin,1 point,Sat Jul 18 23:52:40 2015 UTC,"So can I import the parse module into the __init__.py and then just do in my main code do:  import spintax spintax.parse(""example"")   Or do I have to do an extra step in the __init__.py?"
learnpython,3drzly,pqu,2,Sun Jul 19 00:44:12 2015 UTC,"Brace yourself as this might be a little hard to hear.  I know you probably worked really hard on this (especially all that regex, looks like it took awhile), but python already has this more or less built in.  The itertools library, specifically the product function does almost this exact thing.  import itertools  tuple1 = ('a','b','c') tuple2 = ('d','e','f') tuple3 = ('g','h','i')  print list(itertools.product(tuple1,tuple2,tuple3))    returns:  [('a', 'd', 'g'), ('a', 'd', 'h'), ('a', 'd', 'i'), ('a', 'e', 'g'), ('a', 'e', 'h'), ('a', 'e', 'i'), ('a', 'f', 'g'), ('a', 'f', 'h'), ('a', 'f', 'i'), ('b', 'd', 'g'), ('b', 'd', 'h'), ('b', 'd', 'i'), ('b', 'e', 'g'), ('b', 'e', 'h'), ('b', 'e', 'i'), ('b', 'f', 'g'), ('b', 'f', 'h'), ('b', 'f', 'i'), ('c', 'd', 'g'), ('c', 'd', 'h'), ('c', 'd', 'i'), ('c', 'e', 'g'), ('c', 'e', 'h'), ('c', 'e', 'i'), ('c', 'f', 'g'), ('c', 'f', 'h'), ('c', 'f', 'i')]   That said, the code for the most part looks ok from a brief look. Generally speaking python uses snake_case for variable names, with CamelCase reserved for classes.  Also, your intuition is correct that the code does not need to be in the __init__.py file, you can leave that blank and put all the code in another .py file in the same directory.  There may be some other things I missed (or am just wrong about) as I'm still learning as well, someone else may have more meaningful feedback for you.  Overall not so bad as a first project though, onwards and upwards!  EDIT: Realize this came off as a bit too much as ""your project is useless"", so I want to rephrase a bit. I know it does more than just the product function, I just think that itertools would have saved you from the massive headache of writing all that regex."
learnpython,3drzly,pqu,1 point,Sat Jul 18 23:53:39 2015 UTC,"I just made this to learn and that's what I have done, I will look into itertools. Spintax is already a thing wouldn't I need to parse the string into tuples for itertools to do its magic on anyway?  Yeah the regex was hard because i wanted to be able to use escape characters. For example http://www.spintaxtool.com/ , http://fastarticlespinner.com/ , and http://www.ubertoolz.com/demo/SpinnerShow.php  dont deal with escape characters."
learnpython,3drzly,rhgrant10,2,Sun Jul 19 01:01:38 2015 UTC,"I know someone has already suggested ditching the regular expressions, but if you do intend to keep them I have a suggestion.  In Python you can do ""verbose"" regular expressions that ignore whitespace. This is awesome because it means you can comment your regex, for example:  >>> verbose_pattern= re.compile(r""""""     ^                   # beginning of string     M{0,4}              # thousands - 0 to 4 M's     (CM|CD|D?C{0,3})    # hundreds - 900 (CM), 400 (CD), 0-300 (0 to 3 C's),                         #            or 500-800 (D, followed by 0 to 3 C's)     (XC|XL|L?X{0,3})    # tens - 90 (XC), 40 (XL), 0-30 (0 to 3 X's),                         #        or 50-80 (L, followed by 0 to 3 X's)     (IX|IV|V?I{0,3})    # ones - 9 (IX), 4 (IV), 0-3 (0 to 3 I's),                         #        or 5-8 (V, followed by 0 to 3 I's)     $                   # end of string     """""", re.VERBOSE)"
learnpython,3drzly,snarledapus,1 point,Sun Jul 19 06:34:24 2015 UTC,"Thank you, I was not aware of that. If I wanted to match a space would I use ""\ "" or does verbose have a different way of matching a space. I am aware \s would match all white space but what about just a space?"
learnpython,3dsed9,campenr,3,Sun Jul 19 00:22:57 2015 UTC,"Use enumerate() to keep track of the current index:  my_data = [data[idx+1] for idx, row in enumerate(data) if matched_pattern in row]"
learnpython,3dsed9,novel_yet_trivial,1 point,Sun Jul 19 00:33:51 2015 UTC,"Thank you, using the enumerated indices rather than the list indices fixes my problem quite nicely :D"
learnpython,3dsed9,zahlman,1 point,Sun Jul 19 13:39:36 2015 UTC,Does this help?
learnpython,3dsed9,zahlman,1 point,Sun Jul 19 05:08:47 2015 UTC,"I thought of doing it this way, and storing previous/future rows into their own variables, the problem is that I want to store the next 16 rows (not just the next 1 as shown in the example). I felt that this approach with storing that many lines would be cumbersome code wise, and it was easier to do data[index_start:index_end]."
learnpython,3dsed9,manueslapera,1 point,Sun Jul 19 13:45:47 2015 UTC,The window approach is general; you use some kind of buffer to store as many rows as appropriate to the problem.
learnpython,3dsmic,Miner_Guyer,3,Sun Jul 19 01:45:58 2015 UTC,"distance = abs(de-en)   This part seems very suspect.  Using ""abs"" basically means a value of -12 here is treated the same as a value of +12.  But this seems very iffy: going backwards 12 places isn't the same as going forward 12 places - it's actually the same as going forward 14 places (which wraps around to 12 places before).  Eg. consider the cases where we're going forward 14 steps, and happen to wrap round.  Eg. ""R"" (17) + ""O"" (14).  This gives us 31, equivalent to 5 ( ""F"").  But in your algorithm, we do 17-5 = 12 (""M"").  If we hadn't wrapped around (eg. ""A""(0) + ""O"" = 14 (""O""), we'd have happened to get the right answer, since 0-14 = -14, which gets reversed to 14.  And if we'd wrapped around, but subtracted 26 (eg. ""Z""(25) -> ""N""(13) -> de -=26 (=-1), so -1 - 13 = -14, you'd likewise get the correct answer.  What's actually happening here is that you've made 2 mistakes, but they happen to be such that they cancel each other out in a large number of circumstances (but not all).   The first is that you're calculating the wrong thing.  You work out de - en.  But this is the number of steps you should add to the encrypted string to get the decrypted string.  Ie we're measuring the password you'd need to turn ""FVRVGWFTFFGRIDRF"" into "" DONTWORRYBEHAPPY"", not the password that turns ""DONTWORRYBEHAPPY"" into ""FVRVGWFTFFGRIDRF"".   The second is that you're using ""abs"", which, when the result is negative, effectively turns a measurement of a number of steps backwards into a number of steps forwards, which are not the same thing.   As you can see, when de-en happens to be negative, these effectively cancel each other out - you measure the steps backwards, but flip it to steps forwards.  However, where it's not negative, that abs application doesn't change anything, and we get the wrong answer - the number of steps backwards, rather than forwards.  This only happens when we don't go into your if de + en > 26 and de > en: (since the -26 will force it negative), and where the values still wrap round (so that en < de, and so en-de is positive) - in other words, the first part of that if is true, but the second isn't.  This can actually only happen for password letters >=13, since adding 12 or less to a number that is also 12 or less will never be able to wrap round, so it's no coincidence that ""O"" is the only letter of the password where you see this problem - all the others happen to be in the first half of the alphabet.  You don't actually want to use abs here at all.  When you get a value like -12, that effectively means your result letter is 12 places before the inpput letter.  Think about what the equivalent to doing that is in ""going forwards, but wrapping round""."
learnpython,3dsmic,Brian,1 point,Sun Jul 19 05:13:33 2015 UTC,"Omg thank you so much I can't believe the problem was that simple. I got the answer now, thanks!"
learnpython,3drfvp,el_guapo_taco,6,Sat Jul 18 19:07:23 2015 UTC,"Annotations have been valid syntax since 3.0.    edit: but the typing module doesn't exist in 3.4. So, errm, probably not, sorry."
learnpython,3drfvp,Nahnja,1 point,Sat Jul 18 20:03:32 2015 UTC,"Wow. I feel like a dunce! I just swapped back to 3.4 and, yep, the annotations are a-ok. I had no idea!   Thanks!"
learnpython,3drfvp,dunkler_wanderer,1 point,Sun Jul 19 00:27:54 2015 UTC,I've just experimented a little bit with type hints in PyCharm and Python34. What are you doing with types that you have to import from typing like List and Any?
learnpython,3drfvp,EddyCalavera,1 point,Sun Jul 19 18:45:03 2015 UTC,Why don't you write a python script to do that? 8-)
learnpython,3dt9i2,MackenzieHidalgo,3,Sun Jul 19 06:08:01 2015 UTC,"The code would be absolutely relevant.  Syntax errors that don't make sense are frequently caused by errors on previous lines.  Without anything to go by, I'll give a common guess:  Your indentation is off.  Either you don't have a consistent four space indent, or you're not consistent with spaces v tabs."
learnpython,3dt9i2,kielejocain,2,Sun Jul 19 06:18:46 2015 UTC,"That's something I did not know, so thank you!  I'll look into the indentation, and if that doesn't fix it, I'll add my code to this post."
learnpython,3dt9i2,kielejocain,3,Sun Jul 19 06:28:34 2015 UTC,"You're missing a closing parenthesis on line 4.  You're also not using int the way it was intended, though you won't get the relevant error until you fix the parenthesis.  Use math.floor() first."
learnpython,3dt9i2,kielejocain,2,Sun Jul 19 06:45:02 2015 UTC,"I swear I checked the parentheses but it's two in the morning, so that's my excuse.  :)  Thank you for the other feedback as well."
learnpython,3dt9i2,hemlock_jackal,2,Sun Jul 19 06:47:27 2015 UTC,Your excuse is accepted.  Best of luck and you're welcome!
learnpython,3dt9i2,jeans_and_a_t-shirt,1 point,Sun Jul 19 06:48:51 2015 UTC,"That's your problem right there, you forgot this in line 1:  import caffeine"
learnpython,3dsivv,cham0,3,Sun Jul 19 01:08:12 2015 UTC,Please format your code for reddit or use a site like pastebin. Your code is very hard to read and impossible to test otherwise.
learnpython,3dsivv,novel_yet_trivial,2,Sun Jul 19 01:13:57 2015 UTC,"I've added some annotations about the things that have to be fixed (quite a lot :P). Please post again when you've corrected the script or need further help.   import pygame,time # time isn't needed, use a pygame.time.Clock import sys  # Needed to close the game.  pygame.init()  screen=pygame.display.set_mode((800,600)) pygame.display.set_caption('BOUNCY')  # A clock is missing. clock = pygame.time.Clock()  red=(200,0,0) black=(0,0,0)  def ball(x, y): # x, y parameters are not necessary. Remove them.      # This line needs to be in the while loop, otherwise it gets only drawn     # once. And use ballx, bally instead of x, y.     # I've already done that for you below.     pygame.draw.rect(screen,red,[x,y,50,50])      done = False      while not done:         # An event loop is missing (if you want to close the window).          for event in pygame.event.get():             if event.type == pygame.QUIT:                 done = True             # Demonstration of a key press event.             elif event.type == pygame.KEYDOWN:                 if event.key == pygame.K_LEFT:                     print('left arrow key pressed')          #===========================         # These variables have to be outside of the while loop, otherwise you're         # resetting them to these values every frame.         ballx=400          bally=300         speed=5         direction='upright'         #===========================          screen.fill(black)          # Here we draw the rect with the ballx, bally values (not x, y) which         # get updated every frame.         pygame.draw.rect(screen,red,[ballx,bally,50,50])           # Get rid of this line because it causes infinite recursion.         # That means the function calls itself infinitely.         ball(ballx,bally)           #===================         # This block can be simplified: Use speed_x, speed_y and multiply by -1 if an edge is         # reached.         # E.g.: if ballx >= 800 or ballx <= 0: speed_x *= -1         # Also this whole section should be above screen.fill(black) to keep         # game logic and rendering separate.         if direction=='upright':             ballx+=speed             bally-=speed         elif direction=='upleft':             ballx-=speed             bally-=speed         elif direction=='downleft':             ballx-=speed             bally+=speed         elif direction=='downright':             ballx+=speed             bally+=speed          if ballx<0:             if direction=='upleft':                 direction='upright'             elif direction=='downleft':                 direction='downright'         elif ballx>800:             if direction=='upright':                 direction='upleft'             elif direction=='downright':                 direction='downleft'         elif bally<0:             if direction=='upright':                 direction='downright'             elif direction=='upleft':                 direction='downleft'         elif bally>600:             if direction=='downleft':                 direction='upleft'             elif direction=='downright':                 direction='upright'         #===================          pygame.display.update()   #        time.sleep(0.02)  # Use the clock instead.         clock.tick(60)  # Game runs with 60 frames per second.      # Close the window when the while loop is done.     pygame.quit()     sys.exit()  # Call the ball function at the end of the program to start the game. if __name__ == '__main__':  # ball only gets called if the module wasn't imported.     ball()"
learnpython,3dsivv,dunkler_wanderer,2,Sun Jul 19 03:51:23 2015 UTC,Damn that's a lot of corrections. I'll fix my code and get back to you. Thanks for all the help!
learnpython,3dsivv,dunkler_wanderer,1 point,Sun Jul 19 16:39:13 2015 UTC,"By the way, to format your code for reddit (in your editor), enter a blank line at the top, select all and press tab once then post it here. Or use one of the code hosting sites linked in the sidebar, if it gets too long."
learnpython,3dt0ie,morbidlyobese1234,1 point,Sun Jul 19 04:15:12 2015 UTC,"From a command prompt (not python console) it's just ""pip install blah.whl"" (assuming you are in the folder where blah.whl resides)."
learnpython,3dt0ie,HoboChickenChili,1 point,Sun Jul 19 04:45:52 2015 UTC,so I can't install from the IDLE shell?  Thanks
learnpython,3dt0ie,Rubykuby,1 point,Sun Jul 19 05:00:51 2015 UTC,IDLE contains an interactive Python interpreter.  You want a system shell.
learnpython,3dt0ie,novel_yet_trivial,1 point,Sun Jul 19 11:06:43 2015 UTC,"Yes, numpy and pandas are included with Anaconda.    Since I can import numpy in spyder does that mean I should be able to do it in my IDLE shell as well, considering I have multiple python versions installed on my computer?   assuming that they are running the same instance of python, then yes. With multiple installs of python, packages need to be installed for each python installation. IOW you need to install numpy for each version of python."
learnpython,3dt0ie,novel_yet_trivial,1 point,Sun Jul 19 04:55:35 2015 UTC,"Okay thanks.  Is Anaconda the go to for most python programmers?    I have pyscript as well on my computer and notepad++  I noticed that Anaconda has both a console and an ipython console, as well as a kernel tab, would you happen to be able to clarify the meaning of that?  Thanks."
learnpython,3dsbkw,mattakesthehitkd,3,Sat Jul 18 23:56:16 2015 UTC,"When you write your code, make sure you are using only spaces, and no tabs. Make sure you format your code correctly, so that it looks like this:  import sys password = input(""Enter your password: "") if password != ""fred"":     sys.exit() print(""You are good to go!"")   You should also post the exact error message, when posting a question here, because it's hard to say what your problem might be, without it. The code you just posted (with my formatting, above) works fine for me, although I changed input() to raw_input() to make it work with my version of Python."
learnpython,3dsbkw,symmitchry,2,Sun Jul 19 00:09:27 2015 UTC,"When you write your code, make sure you are using only spaces, and no tabs.   This is a matter of taste. The important bit is not to mix tabs and spaces (for Python3)."
learnpython,3dsbkw,novel_yet_trivial,4,Sun Jul 19 00:11:58 2015 UTC,heresy
learnpython,3dsbkw,symmitchry,4,Sun Jul 19 00:22:37 2015 UTC,What can I say?
learnpython,3dsbkw,novel_yet_trivial,1 point,Sun Jul 19 00:57:00 2015 UTC,Is this true? I've heard it said Python doesn't work with tab-characters AT ALL.
learnpython,3dsbkw,Neceros,1 point,Sun Jul 19 02:03:06 2015 UTC,"That's not true. I use tabs always because I find its much easier to navigate in my code. After all, this is what tabs were invented to do.   Python2 accepts a mix of tabs and spaces, but in Python3 you need to pick tabs or spaces, no mixing allowed."
learnpython,3dsbkw,novel_yet_trivial,3,Sun Jul 19 02:08:36 2015 UTC,"Ah. Spaces all the way! My editor just puts in 4 spaces instead of a tab, so it's easy."
learnpython,3dsbkw,Neceros,1 point,Sun Jul 19 02:29:14 2015 UTC,"The error message I get is   Line 3  if password ! = ""fred"":                  ^ the ^ is pointing at the !"
learnpython,3dsbkw,novel_yet_trivial,1 point,Sun Jul 19 00:50:07 2015 UTC,Looks like you have a space between the ! and the =.
learnpython,3dsbkw,novel_yet_trivial,1 point,Sun Jul 19 00:55:53 2015 UTC,I checked and there isn't a space between the ! and the = sign.
learnpython,3dsbkw,novel_yet_trivial,1 point,Sun Jul 19 01:04:34 2015 UTC,"Then post your full code and error message, using reddit formatting."
learnpython,3dsbkw,novel_yet_trivial,1 point,Sun Jul 19 01:06:32 2015 UTC,"I copied and paste the code from symmitchry's post and got this error in command prompt.  But the ^ is under the !.  File ""ch5_1.py"" , line 3 if password ! = ""fred"":                  ^ Syntax Error: invalid syntax"
learnpython,3dsbkw,a1blank,3,Sun Jul 19 01:13:07 2015 UTC,"/u/symmitchry's code works flawlessly for me.  There is clearly a space between the ! and the = in your error message. There can't be a space there. This space can be hard to see if you are not using a code editor.  Post your full code, using reddit formatting, so that we can reproduce your error."
learnpython,3dsbkw,Rhomboid,1 point,Sun Jul 19 01:20:08 2015 UTC,"http://pastebin.com/uryhueRd  My code is in the above URL.   Would you know how to copy and paste the error in an easy way, since I can't quiet write it out good.  and Thank you for the help so far, but if I'm just to frustrating and you wanna leave, I appreciate the help given so far."
learnpython,3dsbkw,novel_yet_trivial,1 point,Sun Jul 19 01:25:30 2015 UTC,"Your code works flawlessly for me. Are you sure you pushed ""save""? How you are running it?   Would you know how to copy and paste the error in an easy way   In Linux (probably Mac too) just select the text and middle click to paste it elsewhere. I don't have windows, but I imagine you need to select it and press Ctrl-Shift-C to copy."
learnpython,3dsbkw,Neceros,1 point,Sun Jul 19 01:29:48 2015 UTC,"If you run python from command prompt in Windows,    right click and select ""mark""  arrow to where the text starts while holding shift, arrow to where the text ends when all the text you want is highlighted, press enter to copy to clipboard"
learnpython,3ds10d,zombie2870,4,Sat Jul 18 22:15:13 2015 UTC,"First, a problem: you're defining a function named range. That's going to override the builtin function named range(), thats not good practice.  Secondly, to answer your question, the simplest method would be to look at the user's input and make a decision.  choice = raw_input(""Choose:"") if choice == ""myfunc"":     myfunc() elif choice == ""something"":     something() else:     print ""Unknown function requested."""
learnpython,3ds10d,jibbly_jibbly,0,Sat Jul 18 23:48:22 2015 UTC,Try to guide OP to a solution instead of providing one directly.
learnpython,3ds10d,Exodus111,3,Sun Jul 19 13:23:11 2015 UTC,"You could make a dictionary with the functions within them.   dict = { ""range"": range, ""median"": median} # then call it  dict[""range""]"
learnpython,3ds10d,tfitz237,1 point,Sun Jul 19 02:30:32 2015 UTC,"I like this way the best.  It's also easy to make it a 1 liner {""range"": range, ""median"": median}.get(input_val, invalid_input_func)()  This will get the function that is input, or return the function that handles invalid input by default of the input isn't one of the functions in your list."
learnpython,3ds10d,shep247,1 point,Sun Jul 19 04:26:08 2015 UTC,But what about the arguments?
learnpython,3ds10d,dunkler_wanderer,1 point,Sun Jul 19 04:50:04 2015 UTC,You gotta use an if statement.
learnpython,3ds10d,Exodus111,2,Sat Jul 18 23:12:01 2015 UTC,I think the downvotes are not justified.    Try to guide OP to a solution instead of providing one directly. - Guidelines   And it seems OP didn't even try to come up with an own solution.
learnpython,3ds10d,dunkler_wanderer,2,Sun Jul 19 05:07:42 2015 UTC,"Exactly, this looks like a homework assignment, we are not supposed to provide code, but help guide the individual to figure things out on their own. And frankly this issue is a very simple one.  Hopefully nobody else.... right and people give code examples right away. No one reads the sidebar I guess."
learnpython,3dqjsb,PythonLearner12334,2,Sat Jul 18 14:08:50 2015 UTC,"You're running on Python 3, right? In 3, map doesn't return a list - it returns an iterable. If you want to know how long it is, you'll have to convert it to a list."
learnpython,3dqjsb,adamnew123456,1 point,Sat Jul 18 14:43:08 2015 UTC,"Hi, thanks I have fixed it now, check the edit"
learnpython,3dqjsb,ValorCat,1 point,Sat Jul 18 15:02:57 2015 UTC,"On a mobile device, so pardon my formatting.  The map() function returns an iterator, not a sequence. That means (among many things) you can't call len() on it. On the other hand, str.split() returns a list, which is a sequence. You'll want to assign rawnumbers.split() to another variable rather than passing it directly to map(), so you can reuse it to check the length.  A note on formatting: Try to avoid using capitalized variables (I'm looking at Numbers and Mean), as those are generally used for naming classes. Additionally, functions are normally named in lowercase with a verb. Here, you could do  def find_mean(numbers):     ...   If you're unsure about how a built-in function works, check the Python docs on python.org. Here's what I looked up: map function."
learnpython,3drr74,mastrtee,2,Sat Jul 18 20:46:18 2015 UTC,"Did you assign the file name to a variable called csv, thus overwriting the imported csv module?"
learnpython,3drr74,elbiot,2,Sat Jul 18 20:50:34 2015 UTC,"That fixed that problem thank you! However, I got another error that says : File ""C:/Users/[redacted]/Desktop/Python Youtube downloader.py"", line 29, in <module>     print(""Downloading: %s from %s..."" % (row.Title, row.Link)) AttributeError: 'list' object has no attribute 'Title'  I am not entirely sure what this error means either"
learnpython,3drr74,elbiot,2,Sat Jul 18 20:56:59 2015 UTC,row is a list.  How do you access elements of a list?
learnpython,3drr74,elbiot,2,Sat Jul 18 20:58:14 2015 UTC,"By looping through them using the for command, correct?"
learnpython,3drr74,elbiot,2,Sat Jul 18 21:16:49 2015 UTC,"or row[0] is the first element, row[1] is the second, up to row[len(row)-1] after which you get an IndexError  So print them and see what they are."
learnpython,3drr74,elbiot,2,Sat Jul 18 22:09:37 2015 UTC,"I printed them and for the first one or row[0] it outputed what it should, the titles. row[1] outputed the artists and row[2] outputed all of the youtube links. Those are all of what is contained in the file."
learnpython,3drn2r,snakai,1 point,Sat Jul 18 20:09:34 2015 UTC,"It seems like what you want is a HTTP server. For something that is low-volume and basically just a test project, you can use  http.server (SimpleHTTPServer if you are using python 2). Use a do_POST handler to catch incoming POST requests (google for examples).  There are many other alternatives; Gunicorn, Tornado, Apache or the Twisted web server to name a few."
learnpython,3drn2r,terminak,3,Sat Jul 18 20:32:30 2015 UTC,"There are many other alternatives; Gunicorn, Tornado, Apache or the Twisted web server to name a few.   Those are not exactly alternatives to http.server or even each other.  gunicorn is a WSGI server - it needs a WSGI app to run (tornado.web, django, flask, etc.).  tornado.server is a stand-alone HTTP server. tornado.wsgi allows tornado.web apps to run on other WSGI servers and other WSGI apps to run on tornado.server servers.  Apache (and its superior alternatives like lighttpd and nginx) are more traditional webservers that serve files out of the filesystem by default. They can be configured to serve python/WSGI apps through (fast)cgi, reverse proxy, or some other protocols.  Twisted is some old junk that does a lot of things, but poorly. You should just use eventlet or gevent :D.    In conclusion, /u/snakai should use flask."
learnpython,3drn2r,raylu,1 point,Sat Jul 18 23:45:56 2015 UTC,"You are right of course, flask is a better recommendation. I should've added a disclaimer that I'm not up to date on using python for web stuff"
learnpython,3drn2r,terminak,1 point,Sun Jul 19 11:43:41 2015 UTC,"It took hours of researching and skimming through lots of videos, but I finally got it!  It was much more complicated than I wanted (installing flask and such), but it feels good after making it work!  I am able to receive incoming POST messages and do things with it!"
learnpython,3dokua,swight74,12,Fri Jul 17 23:39:58 2015 UTC,Tell me more about this Gone Wild BASIC....
learnpython,3dokua,binarytree,11,Sat Jul 18 06:44:47 2015 UTC,It's for BASIC bitches only
learnpython,3dokua,ydepth,5,Sat Jul 18 09:50:39 2015 UTC,"I would try focusing on the fact that each ""object"" represents some data and provides methods that can operate on that data. Remember writing a ton of C functions that all did different things but also all took the same struct as their first argument? Now put those functions inside the struct. Boom. Classes."
learnpython,3dokua,rhgrant10,13,Sat Jul 18 03:55:23 2015 UTC,"Here's a tip: don't use classes just for the sake of being OO, which you assume to be good in all situations.    Just use functions until you have a situation where having a class which you create instances of makes sense.  see this as an example of OOP where it doesn't make sense.  And see this video to get some support for choosing functions over objects when it makes sense.    The goal with OOP is to reduce the ammount of code you write, not to make classes just because it's better in some way.  The best way to learn programming is to have a project that matters to you.  And the best way to learn OOP is to have a project which would benefit from classes instead of just functions."
learnpython,3dokua,elbiot,3,Fri Jul 17 23:49:53 2015 UTC,That makes a lot of sense.  Thanks!
learnpython,3dokua,Broan13,9,Fri Jul 17 23:51:46 2015 UTC,"Here is a great guide to programming based on OOP that uses a useful example, RPG games!  http://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-an-role-playing-game-example/"
learnpython,3dokua,theshaggyfox,3,Sat Jul 18 07:43:11 2015 UTC,Thank this is extremely helpful for an OOP n00b like myself!
learnpython,3dokua,terminak,4,Sat Jul 18 09:29:35 2015 UTC,Can you be more specific about what is causing the vertical climb? It's hard to give direction without knowing where you are stuck
learnpython,3dokua,redrick_schuhart,2,Sat Jul 18 00:01:24 2015 UTC,"I hear you brother. I had this. I submitted function-oriented example code for library tutorials and had them accepted and then the maintainers would completely rewrite them in an OO style and I got lost. Instead of being able to reason about the flow of data and control from top to bottom, it was all about objects interacting and sending each other messages. Plus now there was another layer on top of the problem to be solved: what classes do you create? How granular must they be? What's the difference between a class and an instance? And so on.  If you think back to C, you declare structs and then some functions to operate on them.  You allocate a new instance of a structure with malloc and then pass the pointer you get back as the first parameter to the functions you wrote. OO is not very different from this at all. You declare a class that has some internal state but the functions that operate on that state are now part of the definition. You allocate a new instance of a class by calling its name and you get back an instance with the internal state and the functions to operate on it all bundled together.  So instead of something like:  typedef struct lightbulb {         int status; }  void on(lightbulb *bulb) { bulb->status = 1}; void off(lightbulb *bulb) { bulb->status = 0};  ....  lightbulb *bathroom_light = malloc((lightbulb *)sizeof(lightbulb)); on(bathroom_light);   Python lets you bundle this all together in a class:  class Lightbulb:      def __init__(self):         self.status = False      def on(self):         self.status = True      def off(self):         self.status = False  # and here's how you use it bathroom_light = Lightbulb() # this calls the __init__ function bathroom_light.on() # another instance of light  outside_light = Lightbulb() outside_light.on() outside_light.off()   Hope this makes sense."
learnpython,3dokua,seriouslulz,2,Sat Jul 18 09:45:48 2015 UTC,"My advice: read code.  Have a look at praw (Python wrapper around reddit's API), it's incredibly well written."
learnpython,3dokua,tripperjack,2,Sat Jul 18 13:21:53 2015 UTC,"You're definitely not going to break through any walls asking very general questions here. I mean, you claim to already have the concepts make ""perfect sense""; so asking for concept tips may not be fruitful.  Instead, patiently identify a point of blockage and STOP RIGHT THERE and ask about it or research it.   For a good example: can you explain what ""self"" means in Python?"
learnpython,3dokua,dog_of_satan,2,Sat Jul 18 18:24:44 2015 UTC,"I am new to OOP too and have struggled with it. It helped me to think of it in the framework of a 3d graphics program and how it would encapsulate functionality and data in its classes. The way I see it is, the most generic attributes and functionailty are in the topmost classes (ex: 3D Object) and propogate inheritance to the more specific objects ( ex: Torus, Box). The more universal attributes can be placed in the parent class and the more specific to the child classes.  Once you define your objects and what you want to do with them everthing else falls into place. I hope this helps."
learnpython,3dokua,SimonWoodburyForget,3,Sat Jul 18 18:39:27 2015 UTC,"Well in python everything literally is an object, strings, lists, dictionary's are all instance of there main class, strings have multiple forms, they have methods of there own like strings have .format(), while lists have other quirky things. When you make a class you are trying to define is specific complicated thing.  >>> print(type('string')) <class 'str'>   Never force implement class's, inheritance is a terrible horrible thing when done wrong, so is using class's everywherem you should never need a 2 method class. LPTHW doesn't explain OOP correctly you'll need to do some research apart from it.  I got it personally when i started to work on programs with over 1000 lines, i never got the whole is it an animal, dog or cat thing really. After a while it just... makes sense..."
learnpython,3dokua,reallyserious,1 point,Sat Jul 18 00:42:11 2015 UTC,"I think that's my problem, wanting it to click before I really work with it for a while.  Even though I've had the realization many times that things I've learned in the past I've used without fully understanding until it just starts to make sense eventually.  I think my panic was that I couldn't even construct something fairly simple without pretty much just copying some other structure.  But yeah, I did that a lot way back and it didn't bother me, and eventually when it clicks you see ways of modifying it."
learnpython,3dokua,penguinv,1 point,Sat Jul 18 01:05:26 2015 UTC,"I think that's my problem, wanting it to click before I really work with it for a while. Even though I've had the realization many times that things I've learned in the past I've used without fully understanding until it just starts to make sense eventually.   Imitation and just winging it until it makes sense is a perfectly valid way of learning new things. It's how kids learn almost everything and it's effective. The adult way of understanding first, then do, is an intellectual victory but not very fast."
learnpython,3dokua,FifteenthPen,1 point,Sat Jul 18 15:05:37 2015 UTC,I like you. I need a good book/site on python. I tried PTHW but after lesson 34 I was doing boolean tables and I couldnt program anything. (I was a programmer long ago and student taught Pascal a while ago in which class we were certainly programming stuff that was considerably more complex than inputoutput.)   I wanted to learn what the identifier-strings meant as structures but that was nowhere to be found in PTHW.  I would appreciate any referrals.  Edit: classes and methods make total sense to me. I dont understand the notation.
learnpython,3dokua,seriouslulz,1 point,Sat Jul 18 06:42:55 2015 UTC,"Just think of classes as logical groupings of data and/or functions. Classes make sense when you have a set of data you want to store and interact with, or a set of functions that all perform related tasks, such as a set of unit tests all made to test another class.   A point worth noting is that most (all?) datatypes in Python are actually classes. Consider strings:  >>> foo = 'This is a string!' >>> type(foo) <class 'str'> >>> dir(str) ['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']   A string stores a sequence of characters, and there are a lot of things you might want to do with those characters, like convert them all to uppercase:  >>> print(foo.upper()) THIS IS A STRING!   Or check if a string input by a user which should be an integer actually is:  >>> bar = '41' >>> type(bar) <class 'str'> >>> bar.isdigit() True >>> bar = int(bar) >>> type(bar) <class 'int'> >>> foo.isdigit() False >>> int(foo) Traceback (most recent call last):  File ""<stdin>"", line 1, in <module> ValueError: invalid literal for int() with base 10: 'This is a string!'   As your projects get more complex, you'll probably find yourself naturally wanting to group related sets of functions and/or data together. When your program has to perform a bunch of different tasks, you'll want to logically group those tasks in order to make keeping track of everything easier.  There's also other useful stuff I haven't touched on, like polymorphism, but that's another one of those things that will probably click when you have a use for it. Basically, polymorphism comes in handy when you want to add on to an existing class, but you still have use cases that don't need the add-ons, it would make more sense and be more efficient to create a new subclass to distinguish it from its parent class. For example, an Employee can do a variety of things, a Manager earns more and can perform different tasks not available to the Employee."
learnpython,3dokua,kurashu89,1 point,Sat Jul 18 04:55:23 2015 UTC,"Just think of classes as logical groupings of data and/or functions.   Yeah, no, that's not pythonic. You want modules for that."
learnpython,3dokua,seriouslulz,2,Sat Jul 18 13:19:21 2015 UTC,"Except that's exactly what classes are. A logical group of functions that cooperatively work on some data. It's the marriage of data and functionality.  There's more to it than that, but it's a good place to start.  Modules and packages represent a logical collection of related things. All of your database stuff goes into the db module and models go into the db.models package. And your models are classes that represent some data in the database and gives a way to interact with it."
learnpython,3dokua,kurashu89,1 point,Sat Jul 18 13:24:56 2015 UTC,"Kinda, but I think it's a bad explanation to give to a newbie.  Maybe it's just me but reading that I'd think that, say, a Utils class with only static methods would be okay in a Python project."
learnpython,3dokua,seriouslulz,2,Sat Jul 18 13:27:58 2015 UTC,"But they're not functions cooperating on shared data. A utils class full of static method is a side-effect of languages that don't have the concept of standalone functions (Java, C#). However, in Python, we do have that concept, so you're doing Python OOP wrong in that case.   But there is a case for static methods in Python: functions that aren't directly connected a class but only make sense in the context of that class. Raymond gives a good example in one of his talks. If I remember correctly, it's in the concept of transforming discrete bits of data. I think the example he gives is a Circle class that has a static method for determining an arc on the circle.  Like I said, there's more to OOP than just ""functions + data""."
learnpython,3dokua,kurashu89,1 point,Sat Jul 18 15:23:09 2015 UTC,And that's why your opening sentence is misleading
learnpython,3dokua,seriouslulz,1 point,Sat Jul 18 15:40:05 2015 UTC,"I'm not sure how. Maybe it's because I'm stuck in my own head, but it seems perfectly clear. It's more than just related functions, it's functions that cooperatively work on shared data."
learnpython,3dokua,kurashu89,1 point,Sat Jul 18 15:47:04 2015 UTC,"Because obviously you got a fairly good understanding of OOP's good practices, as opposed to a newbie.  But again ""Just think of classes as logical groupings of data and/or functions"" sounds way too evasive to me.  class MathOperations(object):     @staticmethod     def add(a, b):         return a + b      @staticmethod     def sub(a, b):         return a - b   I consider that class as a logical grouping of functions that operate on the same kind of data, yet it's obviously bad practice"
learnpython,3dokua,seriouslulz,1 point,Sat Jul 18 16:07:48 2015 UTC,"I think you've confused me for the person you initially responded to. Anyways, you're missing the part where I say, ""cooperatively work on shared data."" I suppose I should add, ""Through underlying mechanisms"" but that sounds horribly vague.  Yes, that MathOperations is a collection of related functions.However, their only relation is ""They're math functions"", there's no deeper interaction between them.  However, if you had a collection of functions in a package that collectively handle processing a file, that makes sense to combine into a class though."
learnpython,3dokua,c3534l,1 point,Sat Jul 18 16:30:14 2015 UTC,"I think you've confused me for the person you initially responded to. Anyways, you're missing the part where I say, ""cooperatively work on shared data."" I suppose I should add, ""Through underlying mechanisms"" but that sounds horribly vague.   Derp, didn't notice.  But yeah the keyword is ""shared data"", the first commenter didn't stress that enough."
learnpython,3dokua,i_dreddit,1 point,Sat Jul 18 16:41:45 2015 UTC,"It takes a while, but I guess the biggest tip I'd give is that it helps you manage growing complexity. And object makes you take a bunch of related things and just think of them as one thing. It takes time for OOP to sink in and you'll wind up seeing it when you look ""how do I..."" or learn how to use specific libraries or whatever. Just give it time and you'll see it's not so weird, just DRY and abstraction really."
learnpython,3dokua,techCreationist,1 point,Sat Jul 18 05:36:52 2015 UTC,"i know exactly what you're talking about. I got to the classes topic and said WTF?? I then went through you tube videos, codecademy and python for dummies to get a better understanding. TBH, I sorta get it now, but i don't program enough to use it.  i'm learning python coz deluge doesn't process a .bat file I have correctly (and I want to put in a progress bar).. then I might add a gui later on for specific file types"
learnpython,3dokua,forwardbiased,1 point,Sat Jul 18 07:52:10 2015 UTC,"I think all good examples have been said here (encapsulation of state and related methods, etc), I wanted to point you two other things that be helping you:   functional programming: as a result of too much abstraction complexity with OO, there is a huge counter-movement to make things as stateless as possible. You might find that approach more intuitive with your background - and you'd be even more ahead of the curve with it ;) Hackership learning retreat: if you are too proud to ask for stuff, you might want to consider catching up on your skills by joining a self-directed learning retreat for developers, like hackership."
learnpython,3dokua,loveandkindness,1 point,Sat Jul 18 10:02:07 2015 UTC,Wow. Got an extra $7K I can have for the retreat?
learnpython,3drefh,Ko1300cc,4,Sat Jul 18 18:54:57 2015 UTC,"The exponent operator in Python is **, not ^. The ^ operator is completely unrelated -- it's the Bitwise Exclusive Or.  So, 3 to the power of 5 would be 3 ** 5.  (Also, I think the parenthesis in your expression may be mismatched/unbalanced?"
learnpython,3dqhgv,squattyroo,3,Sat Jul 18 13:41:50 2015 UTC,"In general, when approaching a large dataset, you have a couple of options for doing optimizations:   Avoid doing redundant work Restructure your data Do as much work at once as possible   In order to figure out where you're using most of your time, you really should check out Python's builtin profiling modules. They might have a bit of trouble with your code, since you're doing everything in the same function - the line_profiler project might be worth investigating.  See which parts of the program take the most time - it will be easier to figure out what can be tuned when you know what's running slowly.  Also, it may be that you're hitting a limit in terms of what CPython can do - considering that it's a non-particularly-intelligent runtime, you may be pushing some of its performance limits."
learnpython,3dqhgv,adamnew123456,2,Sat Jul 18 14:41:39 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3dqhgv,Justinsaccount,2,Sat Jul 18 13:43:57 2015 UTC,"I would try two things. One, precompute values that remain constant rather than computing them repeatedly in each loop iteration. Two, try reducing the work to be done by focusing on counting only words that exist in all reviews. For that you could use sets."
learnpython,3dqzga,between0and1,3,Sat Jul 18 16:45:19 2015 UTC,"Your code raises a ValueError when run since you can't unpack a dictionary. It will work, however, if you pass in a tuple instead of a dict (e.g. ('first_set', 'c') instead of {'first_set': 'c'}). Having said that, this is about as ""pythonic"" and ""condensed"" as I can make your method.  def _match(self, kvp, value=None):     k, v = kvp     commands = self.commands.get(k)     if commands is None:         self.log(""couldn't match key: %r"" % k)         return None      command = commands.get(v)     if not callable(command):         self.log(""couldn't match key: %r"" % kvp)         return None      if value is None:         command()     else:         command(value)   If your goal is to store, retrieve, and call functions by some key value pair, then I would recommend using a slightly different data structure. Instead of nested dictionaries, try a flat dictionary with key value pairs as keys. For example,  {     'first_set': {         'a': None,         'b': foo     },     'second_set': {         'c': bar_func,         'd': baz_func     } }   would become  {     ('first_set', 'a'): None,     ('first_set', 'b'): foo,     ('second_set', 'c'): bar_func,     ('second_set', 'd'): baz_func }   Then your _match function would become  def _match(self, kvp, value=None):     command = self.commands.get(kvp)     if not callable(command):         self.log(""couldn't match key: %r"" % kvp)         return None      if value is None:         command()     else:         command(value)   Edit: by the way... you can support passing any number of positional and keyword arguments by using *args and **kwargs. For example:  def _match(self, kvp, *args, **kwargs):     command = self.commands.get(kvp)     if callable(command):         command(*args, **kwargs)     else:         self.log(""couldn't match key: %r"" % kvp)"
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 17:48:37 2015 UTC,"ah, nice! thank you, it didn't occur to me that you can use a tuple as a key for a value.   ok, so my dict exists in a file that i'm loading in at runtime for ease of editing, and i'd rather not write 'first_set' a bunch of times for each entry that should belong in 'first_set'.  so i'll parse incoming json to reflect the tuple_as_key : value structure, and that will simplify this portion.  thank you!"
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 18:08:50 2015 UTC,"Happy to help :)  Oh, and since any hashable value can be used as a dictionary key, this information on dictionaries is good (err, useful) reading."
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 18:13:45 2015 UTC,"Just re-read your comment. If you're using JSON files to store the data, you're limited to using strings as keys and you can't use Python functions as values, so now I'm quite interested to see the rest of your code and whatnot to see how you're currently doing all of this!"
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 18:37:45 2015 UTC,"i'm just using json to represent keys outside of the running program. once the program starts up, it loads json in and parses info to a dict, and that internally stored dict is what stores the function references. so the function references do not persist between instances of the program, but must be reconstituted every time.   the intent is that the program won't ever know anything about the keys, but will pass that json out to any incoming socket connection so that any client will know the available list of commands that it can call. it will not have access to the function names, only their keys  it seems like the best route for my purposes currently, but there might be better ways to do this in python that i'm not aware of, so i'm all ears!"
learnpython,3dqzga,The-Mathematician,1 point,Sat Jul 18 18:47:33 2015 UTC,Have you looked at Fabric?
learnpython,3dqzga,The-Mathematician,2,Sat Jul 18 22:07:22 2015 UTC,"So your goal is to pass in a key, value pair and call the function if it exists?"
learnpython,3dqzga,keturn,1 point,Sat Jul 18 17:25:19 2015 UTC,that is correct. i'm also currently adding a field to contain a value that can be passed to the function
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 17:46:49 2015 UTC,"def _match(self, kvp, value=None):     try:         if value is None:             return self.commands[k][v]()         else:             return self.commands[k][v](value)     except KeyError, ValueError as e:         self.log(e)         if isinstance(e, KeyError):             return kvp         return None   Bear with me since I'm on my phone, so it's hard to format and reference your post as I'm writing. And I can't run either function."
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 18:46:38 2015 UTC,"ah, nice! i like it as it is concise.  i don't necessarily need the return value of the functions called, however, but that is a nice thought :)  the functions are being called from a remote socket and the client will never know anything about the function called, only that it put in a request for a particular function.  but yes, this is looks short and sweet. thank you! i will look into it"
learnpython,3dqzga,rhgrant10,2,Sat Jul 18 19:00:39 2015 UTC,"I can tweak it here and there, but I don't see a way around that three-branch if/elif/else around command_list[v] while keeping exactly the same behavior.  What follows are questions are questions about things that seem inconsistent. If the nature of the problem requires they remain inconsistent, then I don't think you can condense the solution. But maybe they'll shed light on something.  I assume ""kvp"" is ""key-value pair,"" but that means there's both ""v"" and ""value""? Renaming could help.  Is it weird that sometimes a command function sometimes gets called with a value and sometimes gets called with no arguments at all, depending on how _matchis invoked? How does the caller to _match decide whether to pass value?  How does an author of a command function decide whether it needs to take an argument or not? How do you avoid a function defined with an argument being called without one, or vice-versa?  Why do commands with no function (command_list[v] is None) ignore value? The no-function branch is the only one that returns a non-None result from _match, was that intentional?"
learnpython,3dqzga,rhgrant10,1 point,Sat Jul 18 17:42:41 2015 UTC,"when i first began writing this, _match was intended to parse the incoming dictionary, and if it found an appropriate entry that had no function assigned, return the entry so that it could be assigned to.  if it found a match that had a function assigned, execute the function, or execute the function if a value was passed.   at this stage of the game i am assuming that function calls and arguments will be consistent when they reach _match, and thus no checking occurs. as i develop this more (still haven't built the other end that will be registering and calling functions), i'll definitely need to handle that, although i'm not sure how best to do that here.   side note: this seems to be a downside of python? i have to check every argument type all the time in this sort of flexible scenario? if that's the way the language goes, so be it. but so far it seems i'm getting bogged down in type checking, which was one of the things i thought python was supposed to free you from. so perhaps i'm approaching this with the wrong mentality.   re: value - i see what you mean, i'll rename value to arg. i tend to just pick names quickly to move on, as i'm one of those who suffers from arguing obsessively with myself about names for far longer than is appropriate :/  ok, so what i'm getting from your line of questioning is that the branching if / elif / else is somewhat unavoidable. the actual issue here is that there are unhandled cases and potential for confusion. got it.  i'm writing this for my own personal use on a project, so i don't anticipate having to handle anyone else's code, but best practice dictates that i should write it with that in mind anyway. so, perhaps my next question is:   what would be a better way to handle a command OOP pattern in this case?  my use case is i am writing a socket server to handle calibration input from one device, and then real-time control of a program simultaneously from 3 different devices"
learnpython,3do8l4,sepehrhm,25,Fri Jul 17 21:55:37 2015 UTC,"Are these two character, by all means and in all cases, the same in Python?   Yes. Other languages make a distinction, but python does not.   become just a matter of style?   Yes, and convenience. If you have a string that contains an apostrophe, for instance, you use double quotes:  my_str = ""John's pizza""   Which is slightly neater than escaping the apostrophe:  my_str = 'John\'s pizza'   A string containing double quotes can be defined with single quotes:  my_str = 'John said ""pizza rules""'"
learnpython,3do8l4,novel_yet_trivial,5,Fri Jul 17 21:59:30 2015 UTC,"This info makes things a lot less annoying for me (German keyboard). I just started with Python a few days ago. My teaching material uses single quotes and, remembering some oddities from PHP, I just went with it.  Thank you!"
learnpython,3do8l4,Bukkake__Tsunami,3,Fri Jul 17 22:53:46 2015 UTC,"I usually use single quotes as well simply because they are faster to type.  Also, your username popping up on my feed made me go D: Thanks for that visual. Thought you should know."
learnpython,3do8l4,novel_yet_trivial,4,Fri Jul 17 23:01:18 2015 UTC,"I just started making the switch to double quotes right after reading your comment (love it!). Shift+2 is much easier to reach for me than shift+the bottom of the 2 keys next to Enter... I've thought about learning to type with a US keyboard layout, but there's no chance I could get used to it well enough to type as fast as I do now on a German keyboard.  Apologies for the visual ;)  Here's another one (SFW)."
learnpython,3do8l4,Bukkake__Tsunami,2,Fri Jul 17 23:26:42 2015 UTC,"But typing brackets, braces etc. is way easier on a US/GB layout than on a German one. I am talking from experience. You don't have to use that damn Alt Gr. []{} are on ü+Ü*. But it is still confusing, if you switch between both layouts rather often and only got the visuals of one (meaning the physical layout)."
learnpython,3do8l4,LuckyShadow,1 point,Sat Jul 18 14:19:39 2015 UTC,"But typing brackets   Comment reported for triggering me!  Kidding of course, but I agree, brackets are absolutely terrible on German keyboards.  Well, maybe I'll give it a shot some time, but I'd really hate breaking up ingrained habits like that. Just the y<->z alone will probably take months to get used to. Maybe I should move to another country for a couple years so I'd be forced to adapt... although that might be an overkill reaction to the slight annoyance of bracket typing ;)"
learnpython,3do8l4,Bukkake__Tsunami,2,Sat Jul 18 14:30:34 2015 UTC,"I find while coding, the y/z problem is the lesser one. The other special-chars on the number-row are way more difficult to remember. I got me a keyboard with British layout and it is just awesome. Now it is difficult to type on a German layout ^  But for real: if you don't want to (or cannot) spend money on another keyboard, just try to switch to a US or GB layout (software-based of course) when you are coding. It helps and it boosted my work. I can only recommend trying it. :)"
learnpython,3do8l4,LuckyShadow,3,Sat Jul 18 14:41:27 2015 UTC,"Oh I see, thanks!"
learnpython,3do8l4,Seventytvvo,1 point,Fri Jul 17 22:16:30 2015 UTC,"Other languages make a distinction, but python does not.   Okay, so if Python is my first language (it is...), but I plan on learning more in the future, would it be good to get in the hang of using one over the other? In other words, what languages make the distinction? And what do the characters mean in those cases??"
learnpython,3do8l4,my_walls,1 point,Sat Jul 18 12:31:53 2015 UTC,In some languages (I think mainly the whole C/C++/C#/Java family) single quotes are used for characters and double quotes are used for strings.
learnpython,3do8l4,Fuzzmiester,1 point,Sat Jul 18 15:38:06 2015 UTC,"In PERL and PHP:   single quotes contain string literals. double quotes contain strings which will be interpreted.   so, assuming the variable $string contains 'aardvark'  'my $string' would be: my $string  ""my $string"" would be: my aardvark"
learnpython,3do8l4,SimonWoodburyForget,6,Sat Jul 18 20:44:03 2015 UTC,""" "" and ' ' don't really exist, once you made a string, they don't exist anymore, they just exist to initiate the string. Now you need to be careful when you do initiate strings to make sure users don't break the program with this somehow."
learnpython,3do8l4,TankorSmash,4,Sat Jul 18 00:56:02 2015 UTC,"I try to make it so sentences are double quotes, and single quotes are words and keys. Deep down, it doesn't matter at all."
learnpython,3do8l4,shidarin,3,Fri Jul 17 23:06:13 2015 UTC,"I do something similar, but specifically, "" is for strings that the user will see (including exceptions). ' is for internal strings, like keys.  Of course, docstrings use """""". Never use '''."
learnpython,3do8l4,SirSkelton,2,Sat Jul 18 01:39:05 2015 UTC,"I'm going to piggyback on this instead of making a new post.  I've seen examples of making notes about functions using triple quotation marks.  For example:     def price(item)  """"""This is used to find the price of an item in our dictionary""""""   Followed by the actual working code.  Is there a difference between doing this, versus using the #?"
learnpython,3do8l4,NoLemurs,3,Sat Jul 18 02:32:50 2015 UTC,""""""" allows creation of multi-line strings. A string right after the function declaration is treated as the docstring for the function, and will be used by things like the help() function. A comment right after the function declaration is just a comment.  Since docstrings are often long, the convention is to use """""" for them, and for consistency and simplicity you usually do it even if you only have one line. Single quotes would work too though."
learnpython,3do8l4,Tomarse,1 point,Sat Jul 18 02:46:02 2015 UTC,"This is a docstring, essentially you are documenting your class/module/function with it.  Others can explain better."
learnpython,3do8l4,TeamSpen210,1 point,Sat Jul 18 02:56:46 2015 UTC,"Just to add to the list of answers, a docstring will also show on most IDE's when you type your function, which is handy if the function takes arguments and you don't remember what they are."
learnpython,3do8l4,aroberge,1 point,Sat Jul 18 05:16:57 2015 UTC,"If the first line of code in a function / class / module is a string, it is saved into the __doc__ attribute. That's how the builtin help() function gets information, and other similar things. Comments are totally forgotten when code is run, so the only way to read them is to find the source code file and open it."
learnpython,3do8l4,novel_yet_trivial,1 point,Sat Jul 18 07:34:19 2015 UTC,"Try both, one after the other, using a Python interpreter.  Each time, type help(price) ... and see what happens.   Try it with a single quoted string as well."
learnpython,3do8l4,Veedrac,1 point,Sat Jul 18 13:57:18 2015 UTC,"docstrings also have a special function: they show up in help files. Try this:  >>> def func(a=2, b=None): ...  '''how to use func''' ...  pass ...  >>> help(func) func(a=2, b=None)     how to use func   This works for modules, classes, or functions. docstrings are also accessible with the special variable __doc__:  >>> func.__doc__ 'how to use func'   Also, docstrings are used to save standard tests using the doctest module.  A # comment can do none of these things."
learnpython,3do8l4,SirSkelton,2,Mon Jul 20 14:45:41 2015 UTC,The quotation style isn't important though. Any string literal at the start (single quoted or otherwise) will make a valid doc comment.
learnpython,3do8l4,BoleroDan,1 point,Mon Jul 20 16:43:49 2015 UTC,"cool, thanks.  I didn't know about the help function, so that's a nifty thing to learn."
learnpython,3do8l4,SirSkelton,1 point,Mon Jul 20 15:51:30 2015 UTC,"multi line. Where as each line when using # would require a #.   """"""  this is  a valid comment block  """"""  # this is  # a valid comment"
learnpython,3do8l4,BoleroDan,1 point,Sat Jul 18 02:35:58 2015 UTC,so is it pretty much just easier than writing a new # every line?
learnpython,3do8l4,gschizas,1 point,Sat Jul 18 02:46:23 2015 UTC,"The tripple quotation marks are also called ""docstrings"" and are not necessarily, strictly considered ""comments"", but think of them as multi-line strings that you can also assign to variables in the program."
learnpython,3do8l4,Rhomboid,1 point,Sat Jul 18 02:53:09 2015 UTC,"One convention I've seen floating about, is use single quote strings for stuff that are internal to the program, and double quote strings for stuff that are shown to the user. That way it's easier to find what you need to internationalize if you decide to.  That is only a convention though, for Python they are equivalent."
learnpython,3do8l4,novel_yet_trivial,1 point,Sat Jul 18 13:48:43 2015 UTC,"well don't feel bad, I'm a n00b too. so we both can get the flames of redditors for being n00bs lol.    but I think it's more or so a matter of style, for example. say you wanted to quote text on a print command. you can do the following...     print 'My name is ""127_0_0_0"", hello!'     or you could go...     print ""My name is '127_0_0_0', hello!""     both will print the same string of characters, but the difference would be, the first code prints my username as    ""127_0_0_0"" (double quotes)    while the second code prints my name as    '127_0_0_0'  (single quotes)    hope this helps."
learnpython,3do8l4,Rhomboid,2,Fri Jul 17 22:02:49 2015 UTC,"It did, thanks.  I just think unless it's necessary e.g. escaping, double quotes are much better in terms of visibility. So that'd be my style.  I was wondering about this because for example in C++ books it's usually double quotes, but in Python (and sexier languages) books tend to use singe quote instead. I thought there might be an angle to it that I was missing."
learnpython,3do8l4,Rhomboid,1 point,Fri Jul 17 22:21:09 2015 UTC,"I've dabbled in C++ (felt overwhelmed by it all which is why I'm starting on python 2.7 now) and you can do the same with C++ with the single and double quotes.    and as we get deeper into coding, the single vs. double quotes might take on more meaning."
learnpython,3do8l4,5225225,1 point,Sat Jul 18 02:54:43 2015 UTC,"They aren't different at all, except for the escaping.  If a string contains single quotes, you can put it in a double quoted string literal without having to escape the single quotes, and vice versa.  If a string contains both single and double quotes, you'll either need to escape one of them, or use triple quotes.  In your example, where there are no embedded quotes, it's purely a matter of style.  (N.b. this is not universally true.  In other scripting languages, using single quotes can have other effects such as disabling interpolation of variables.  That's not the case with Python which doesn't have interpolation.)"
learnpython,3do8l4,Rhomboid,1 point,Fri Jul 17 22:01:57 2015 UTC,"Can you please name those other languages?  It's the same as Python with C, C++, JavaScript, and MATLAB. I only know the syntax of these languages.  Also, if you know, why these two characters do the same thing and aren't assigned differently? I guess there is a historical reason to it."
learnpython,3do8l4,toddthegeek,6,Fri Jul 17 22:18:42 2015 UTC,"bash, for instance, treats them differently:  $ echo ""user is $USER"" user is NYT $ echo 'user is $USER' user is $USER"
learnpython,3do8l4,Porcela,1 point,Fri Jul 17 22:26:31 2015 UTC,"oh wow, very interesting!"
learnpython,3do8l4,toddthegeek,3,Fri Jul 17 22:48:13 2015 UTC,"Perl, Ruby, and the Bourne shell/bash are the main ones I had in mind.  JavaScript doesn't have interpolation either, so there's nothing to disable there.  (Although ES6 did add template strings which have a form of interpolation, but they are written using backticks.)  Also, single and double quotes mean entirely different things in C and C++.  Single quotes are for character literals, whereas double quotes are fore string literals.   I guess there is a historical reason to it.   No, you don't need a historical reason, there is a very good one that I already explained: the ability to avoid having to escape things."
learnpython,3do8l4,rhgrant10,2,Fri Jul 17 22:23:08 2015 UTC,Isn't it possible to wrap characters in double quotes as well? in C++?
learnpython,3do8l4,skpkzk2,6,Fri Jul 17 22:49:20 2015 UTC,"Sure.  But that creates a string literal, not a character literal.  'a' is very different than ""a"".  The former has type char, the latter has type const char [1] const char [2], which usually decays to const char *."
learnpython,3do8l4,rhgrant10,1 point,Fri Jul 17 22:53:12 2015 UTC,Thanks :)
learnpython,3dqq58,loveandkindness,1 point,Sat Jul 18 15:16:17 2015 UTC,"Text files can easily be created using open(), from there you can write whatever you want to them. It's hard to tell what exactly you are looking for, maybe Jinja2 or a similar templating framework?"
learnpython,3dqq58,terminak,1 point,Sat Jul 18 15:22:33 2015 UTC,"open() will definitely work. I just wanted to ask and see if there was a proper way to do something like this.  Jinja2 looks neat, the standard library has configparser as well, but it seems specific to INI files."
learnpython,3dqq58,terminak,3,Sat Jul 18 15:28:54 2015 UTC,"It's not clear what exactly you want to do; you want to parse existing files and manipulate them in python and write them back to disk? Generate files from scratch using command line?  If you need to parse files, you might want to look at a lexer such as PLY. But if you can get away with just making a template (using something like Jinja) that will almost certainly be simpler."
learnpython,3dqol9,qt1000,3,Sat Jul 18 15:00:56 2015 UTC,ahhhh...it seems so glaringly obvious now that I have an answer  not in( )   is evaluating one condition  != 'x' or != 'y'   is evaluating two which is always going to return True with only one possible variable and is always going to execute the loop
learnpython,3dqol9,pqu,2,Sat Jul 18 15:55:10 2015 UTC,"Yup.  The second example should be:  while x != 'c' and x != 'r'   Or  while not (x == 'c' or x == 'r')   Although I much prefer your first example using ""not in""."
learnpython,3dqol9,zahlman,1 point,Sat Jul 18 18:38:59 2015 UTC,http://mathworld.wolfram.com/deMorgansLaws.html
learnpython,3dqol9,ingolemo,0,Sat Jul 18 19:49:31 2015 UTC,What does your condition evaluate to when execution_type is 'c'? Work through it step-by-step.
learnpython,3dqol9,StaticFuzz,1 point,Sat Jul 18 15:05:43 2015 UTC,"It's a string and it evaluates to True? So does != only work on integers/floats? != has to work though because it entered the loop without throwing an error  my reasoning, which is wrong, is that while the condition is True it enters the loop, I change the value of the variable within the loop at which point the condition should evaluate to True or False depending on whether the new value of the variable does or doesn't meet the condition. clearly the loop condition doesn't accept new_value for some reason. it shouldn't be a type error because because both are strings and no type error is thrown."
learnpython,3dqol9,terminak,1 point,Sat Jul 18 15:23:13 2015 UTC,!= is not your problem. look at your test cases. why would the while loop keep executing if a valid choice was chosen?
learnpython,3dqol9,ingolemo,1 point,Sat Jul 18 15:27:35 2015 UTC,"The loop runs for as long as the expression remains True.  What you need to ask yourself, is: why is the expression still true when execution_type = 'c'?  Hint: because it is not 'r'"
learnpython,3dqmp7,RivetSpawn,3,Sat Jul 18 14:41:17 2015 UTC,"I think you are trying to change the values for the traits, and you are, except not where you need to change them (which is on self).  You've used the trait values to create a brand new list of numbers called traits. Then you've transferred each trait value to a loop variable (trait) and that's the value (variable) you're changing, not the values of self.whatever.  Edit: I'd write a static clamping method that takes a number as input and returns the clamped value (as in the body of your loop). Then just use it when you're setting the values of traits.  self.hunger = self.clamp(self.hunger + x)"
learnpython,3dqmp7,rhgrant10,2,Sat Jul 18 15:16:02 2015 UTC,"This comes down to how python's variables work. In essence, they're just ""labels"" on the things they are. When you do ""x = 3"", what you do is you create the 3 thingy (if necessary), then attach the x label to it. If you also set y to 3, then the 3 thingy gets another label for y. When you change a variable, you're just moving labels around, but not changing the thingy they're attached to*.  So when, for instance, self.hunger is 121, you move the ""first item in traits"" label to 100 - but the self.hunger label remains where it was, on 121.  * Most types are so-called immutable, you can never change the thingy the labels are attached to. The 3 thingy will always be 3. Some types, most notably lists and dicts (but not tuples; in fact, that's a reason to use tuples), are what's called mutable: The thingy can change. If you do  x = [1, 2, 3] y = x x.append(4)   Then y becomes [1, 2, 3, 4] because you changed the thingy the two labels were attached to. This wouldn't have happened if you'd done x = [1, 2, 3, 4] in the third line, that would have moved the x label over."
learnpython,3dqmp7,NewbornMuse,2,Sat Jul 18 15:17:55 2015 UTC,"traits is a list of integers as written and is detached from the object that you're attempting to update. Maybe this is more of what you meant?  self.health -= w self.hunger += x self.happiness -= y self.hatred += z traits = ['health', 'hunger', 'happines', 'hatred'] for trait in traits:     trait_value = getattr(self, trait)     if trait > 100: setattr(self, trait, 100)     elif trait < 0: setattr(self, trait, 0)   Or a more fleshed out approach:  class Player(object):     'A player in our game.'      def __init__(self):         'Initialize a happy, healthy player.'         self.health = 100         self.hunger = 0         self.happiness = 100         self.hatred = 0      def update_traits(self, trait_deltas):         '''Returns None; we're evaluating this function for side effects.         Updates the player traits based on the dictionary of trait_deltas         provided. E.g.:              trait_deltas = {                 'health': -1,                 'hunger': 1,                 'happiness': -10,                 'hatred': 0,             }         '''         for trait, trait_value_delta in trait_deltas.items():             updated_trait = self.compute_updated_trait(getattr(self, trait), trait_value_delta)             setattr(self, trait, updated_trait)      def compute_updated_trait(self, trait_value, trait_value_delta):         '''Returns the trait_value with trait_value_delta added. Floor is set at         0 and ceiling at 100.         '''         updated_value = trait_value + trait_value_delta          if updated_value < 0:             return 0          if updated_value > 100:             return 100          return updated_value"
learnpython,3dqmp7,cshoop,2,Sat Jul 18 15:40:14 2015 UTC,"Ahh yes makes sense, It's worked out with the getattr() and setattr().  And thanks everyone I understand where I went wrong now, and self can't get dangerously unhappy anymore :3"
learnpython,3dp97c,RubyPinch,10,Sat Jul 18 03:26:05 2015 UTC,"completely unsafe to use, or even install (since it runs code during installation)  find legit modules using authoritative sites, e.g. requests' website will always mention the right pypi package, or python-module-of-the-week, or word-of-mouth with some critical thinking."
learnpython,3dp97c,kurashu89,3,Sat Jul 18 03:54:26 2015 UTC,"PyMotW details standard library modules only. It's also worth noting that Doug focuses on Python 2, not 3. That's not to knock it all, it's incredibly informative and introduced me to my stdlib loves collections and itertools."
learnpython,3dq5ln,saabr,2,Sat Jul 18 10:45:56 2015 UTC,"If you don't care about the order, you can put the links into a set. That removes duplicate items.  Possibly the page has the same item linked more than once."
learnpython,3dq5ln,5225225,1 point,Sat Jul 18 10:59:29 2015 UTC,"You shouldn't need multiple requests - I think 5225225 is suggesting something like replacing your:  for link in soup2.findAll('a'):     href1=link['href']   with:  for href1 in set(link['href'] for link in soup2.find_all(""a"")):     # the rest of this body (Though the if and flag stuff looks like it's redundant - not too sure what it's intending).   The set filters out any duplicate links appearing in the page, so it only ever looks at one of them, no matter how many times the same file is linked to on the page.  (Or alternatively, keep a set of links you've processed, and check this before processing a new one, which will work if there are multiple links to the same course on different pages as well, though not sure that's relevant here)."
learnpython,3dq5ln,Brian,1 point,Sat Jul 18 11:02:48 2015 UTC,"It'd probably be clearer if I split them up:  hrefs = set(link[""href""] for link in soup2.find_all(""a"")) for href in hrefs:     # the loop body   The first part is what's called a comprehension - it's basically like a for loop that builds up a sequence.  Eg. a list comprehension like:  squares = [ x*x for x in range(1, 5)]   would give you the first 4 squares: [1, 4, 9, 16]  My version is a slight variant called a geneator comprehension, written with round brackets rather than square.  Eg. (x*x for x in range(1, 5)).  The difference is that it requrns a generator rather than a list, but that's maybe a bit too complex a subject, and not too important here - you could add in the square brackets and make it a list comprehension and it'd end up the same.  In any case, it gives us a sequence of all the ""href"" attrbutes of the links, that we immedately put into a set (which wil ignore duplicates, so we end up with only the hrefs that are difference).   The second for then loops over these."
learnpython,3dq5ln,Brian,2,Sat Jul 18 12:52:19 2015 UTC,"There are multiple links to each course on the course listing page.  For example, in the ""Featured courses"" carousel, the image is a link and the text ""Artificial Intelligence"" is also a link.  You're visiting both of them.  Besides that, you shouldn't be using soup.findAll().  That's the old v3 spelling.  The methods were renamed for PEP-8 in BeautifulSoup v4.  The new spelling is find_all() and the old ones are deprecated.  You should read PEP-8, because your formatting is horrendous.  There should be whitespace on both sides of operators like = and +, there should not be parentheses around the if-condition, and your indentation is just all over the place.  It should be a consistent 4 spaces."
learnpython,3dq5ln,Rhomboid,1 point,Sun Jul 19 16:44:01 2015 UTC,This is just from looking at where your print statements are but try changing the last if of parse() to an elif.
learnpython,3do2wr,vmsmith,8,Fri Jul 17 21:11:16 2015 UTC,"Personally, I think the first way makes the most sense, or a combination of the first and third.  Something like:  def main(some_args):     do_stuff...  def parse_arguments():     argument_parse_code     return arguments  if __name__ == '__main__':     arguments = parse_arguments()     main(*arguments)   My thinking: By defining main with args, you can then import that script elsewhere and call the main function with arguments from the calling script.  By definite the argument parsing in a separate script, you can test more easily, and write unit tests to verify functionality."
learnpython,3do2wr,polkid,1 point,Fri Jul 17 21:43:08 2015 UTC,"Yes, this. Because testing. I can't test what's in the if name == '__main__': block!"
learnpython,3do2wr,rhgrant10,1 point,Fri Jul 17 23:56:16 2015 UTC,"Yup.   Specifically, you should use the first way if the parser is just a couple lines of code. If the parser is more complex, you encapsulate it, and use your method."
learnpython,3do2wr,NoLemurs,1 point,Sat Jul 18 02:54:47 2015 UTC,"Thanks. The preponderance of replies points towards the third way, but your synthesis of first and third is definitely something to think about."
learnpython,3do2wr,buleria,3,Sun Jul 19 00:06:13 2015 UTC,"I think it's a matter of taste, style and designing your code ""well"".  While not giving a direct response, here's what I like to do - this works for simple utilities, but doesn't change that much for more complicated stuff:   usually you have a function/object that does all the work, or at least serves as an entry point to your app logic having that in mind, let main() do two things: call a configure() function that returns parsed args; call do_stuff(arg1, arg2, arg3) using parsed args do_stuff() doesn't need to depend on some arbitrary args object - rather, it receives explicit arguments   Profits:   main() servers as a dispatcher, which makes it simple; you might have different logic depending on an argument, let main() dispatch it (there are cool options for complex stuff) configure() is where all your commandline options live do_stuff() is easy to test, easy to import into other projects which might not even have commandline arguments, perhaps you pull them from a DB or a config file?"
learnpython,3do2wr,NarsilNZ,1 point,Fri Jul 17 21:45:27 2015 UTC,Thanks. This is some good stuff to mull over. I appreciate it.
learnpython,3do2wr,blakfeld,2,Sun Jul 19 00:05:05 2015 UTC,"The first way is better if you want to call the main function from another Python script or module, or if you want to unit test it. The second and third way are similar to each other, though I would suggest that the third way is better. In my opinion the code is easier to read if the argument parsing is split out into its own function."
learnpython,3do2wr,Brian,1 point,Fri Jul 17 21:48:35 2015 UTC,Thanks. I appreciate your thoughts on it.
learnpython,3do2wr,grumbel,2,Sun Jul 19 00:04:16 2015 UTC,"I've seen the first done by some co-workers, but my preference is the third."
learnpython,3do2wr,elbiot,2,Fri Jul 17 23:19:01 2015 UTC,"OK. Thanks. Pretty much everyone leans towards the third way, although some with some minor modifications."
learnpython,3doqpp,KodaJames,2,Sat Jul 18 00:32:04 2015 UTC,"Coursera has some really good free, online Python courses. I completed part one of Interactive Python and learned how to make a few neat little video games. There is a second part to this course and by the end I'll make an Asteroids style video game. The first course was five weeks long and consisted of an hour or so of video lectures, sample problems, a quiz and an assignment. There is an active discussion forum with TAs who help with students' questions. It was challenging and enjoyable. Totally looking forward to the second part of the course."
learnpython,3doqpp,Zionark,2,Sat Jul 18 02:51:37 2015 UTC,The 2nd part of Interactive Python started about a week ago.
learnpython,3doqpp,forwardbiased,1 point,Sat Jul 18 14:37:32 2015 UTC,"There is no better site. It's going to take you about 1 month to get what programming is about either way and understand code and its going to take you around 3 - 6 months to really understand how to program. You'll need to spend hours trying to build something up.  The more time you spend per day learning it, the more likely you are to burn out later, it's hard to be a beginner because you need to think all the time, compared to experience programmers who can just, program 6 hours a day while barely thinking.  If you want to learn programming, the best way to do it is find a resource that you like, if over time you don't like it anymore, then change resource. Look at the side bar if you're not sure where to start, it has lots of resources."
learnpython,3doqpp,SimonWoodburyForget,1 point,Sat Jul 18 00:53:43 2015 UTC,I'm currently learning Python from: http://programarcadegames.com/  So far it's good. You can use this after you complete Codecademy or use it instead of Codecademy to learn Python 3 inside of 2.
learnpython,3doqpp,soqets,-1,Sat Jul 18 17:58:37 2015 UTC,"LPTHW I'm enjoying check YouTube there is a guy who runs through all the exercises I found somewhat helpful.  If your mathematically inclined check out introduction to computer science MIT 600 on edx.  Top tip that's helping me is don't assume make sure you understand before clicking next etc..  It's fun in 2 weeks I can now read Python ( granted I have no clue about the modules used but super easy to see do a quick search on I dunno .something() and understand what they are doing )  From what I've seen no one REALLY learns, nail the syntax and semantics your set to go. Even the ""pros"" Google modules they are unfamiliar with."
learnpython,3dpzrh,Always_Question_Time,2,Sat Jul 18 09:03:30 2015 UTC,"For packages that contain C extensions, you should find a pre-compiled binary package rather than trying to install from source, which is what you're doing currently.  That would require a full working C toolchain of a specific version, and often extra non-Python dependencies.  Some projects upload binary wheels to PyPI making them installable with pip without a toolchain, but that's the exception rather than the rule.  For all your windows binaries needs, go here."
learnpython,3dpwdg,avinassh,3,Sat Jul 18 08:06:48 2015 UTC,I think it really depends on the content of what you are storing and you can probably break it down and store different content differently.  Blog posts for example you may just store in raw markdown under /datastore/posts/{year}/{month}/{date}/{blog-post-title}  You should be able to sort pretty easily based on that.  Other forms of data should be stored in the format that is best suitable for that data. YAML is a really good format for storing human readable information without too much verbosity and is incredibly easy to load and use in Python.
learnpython,3dpwdg,RisingStar,1 point,Sat Jul 18 10:45:56 2015 UTC,Thanks for the reply. I will be storing learning materials(and sequence really matters). So I can't really use and sort them by dates. So any ideas?
learnpython,3dpwdg,RisingStar,3,Sat Jul 18 11:03:52 2015 UTC,Pretty much what you suggested in the OP. Organize the markdown into logical folders of some kind and then have a config file somewhere that contains their order to be displayed. Personally I would use YAML for the config but that's just me. JSON would work as well.
learnpython,3dnzzo,musicomet,5,Fri Jul 17 20:47:35 2015 UTC,create_user(**vars)   Assuming (as in your example) all the names are the same.
learnpython,3dnzzo,novel_yet_trivial,2,Fri Jul 17 20:49:35 2015 UTC,"the create_user() function is accepting explicit args. It looks like this:  create_user(     user_fname=None,     user_lname=None,     user_ssn=None, )"
learnpython,3dnzzo,novel_yet_trivial,5,Fri Jul 17 20:52:08 2015 UTC,"the create_user() function is accepting explicit args   OK ... using the ** unpacks a dictionary into explict arguments. My code and yours are equivalent. If you need to change the argument names then there is no cleaner way than what you had, outside of using more standard dictionary syntax:  return create_user(     user_fname = vars['fname'],     user_lname = vars['lname'],     user_ssn = vars['ssn'])"
learnpython,3dnzzo,StaticFuzz,1 point,Fri Jul 17 21:00:29 2015 UTC,I see. Thanks :)
learnpython,3dnzzo,Covered_in_bees_,3,Fri Jul 17 22:11:14 2015 UTC,"Your vars appear to already be in a dictionary (.get method), so why not just pass the dictionary as your only parameter. Then assign your variables within the function:  vars = {}  def create_user(my_dict):     fname = my_dict[fname]     lname = my_dict[lname]     ..."
learnpython,3dnzzo,novel_yet_trivial,2,Fri Jul 17 20:59:59 2015 UTC,"The best option as already mentioned is to use sequence and dictionary unpacking via *args and **kwargs in your function definition and to pass in the dictionary containing all the named parameters to the function.  However, keep in mind that this makes introspection on the function worse and since the parameters are not explicitly defined in the function definition, you need to take care to define them very clearly in the function documentation. I would still prefer to use explicit definitions of args and kwargs within the function definition rather than hide it all behind a **kwargs. The latter certainly has its uses but in this situation, I'm not sure it is the right thing to do. At the very least, you should still expose the key parameters explicitly so that the function is usable with the remaining defaults for all the parameters hidden away under **kwargs  Some examples: Matplotlib plotting functions will oftentimes have a long list of explicitly defined arguments and named parameters with a final **kwargs, with the documentation explaining that the kwargs are passed to some other matplotlib object (for example the Figure canvas).   If you check out the Pandas API, you will notice that the read_csv method for example has a very long list of parameters and they are all explicitly defined. While it may look ugly, I find it far easier to use when using an IDE or a call to help on the function.  I do think that the **kwargs approach to shorten function definitions are okay to use for internal functions for classes that are not to be exposed to the end user and I used this approach quite a bit on my EasyPlot library that I wrote a while back."
learnpython,3dnzzo,xcbsmith,1 point,Fri Jul 17 22:07:22 2015 UTC,Thanks for the thorough explanation! I think I'm just gonna stick with the explicit method.
learnpython,3dnzzo,SittingOvation,2,Fri Jul 17 22:14:37 2015 UTC,"Happy cakeday, by the way."
learnpython,3dnzzo,ewiethoff,2,Fri Jul 17 22:09:19 2015 UTC,TIL about reddit birthdays. Thanks!
learnpython,3dnzzo,forwardbiased,1 point,Fri Jul 17 22:12:08 2015 UTC,"That usually means you can combine them in to smaller objects. If not though, I'd seriously consider just using a namedtuple object with all those fields."
learnpython,3dolb3,abrarisland,3,Fri Jul 17 23:44:04 2015 UTC,"How does Python work that it can calculate a bitwise and in seemingly O(1) time?   It can't.  You're just not exercising large enough numbers to be able to see it.  Consider the following testcase:  import timeit  for exponent in range(0, 2000000, 40000):     n1 = 3**exponent     n2 = n1 - 1     elap = min(timeit.repeat('n1 & n2', 'from __main__ import n1, n2', number=5000))     print('{:10} {:12.5f}'.format(n1.bit_length(), elap))   This prints output that looks like:           1      0.00033      63399      0.03890     126798      0.07611     190196      0.11280     253595      0.14774     316993      0.18452     380392      0.22054     443790      0.25599     507189      0.29527     570587      0.33327     633986      0.36693     697384      0.40522     760783      0.44190     824181      0.47430     887580      0.51067     950978      0.55478    1014377      0.58742   This is doing bitwise 'and' of large numbers.  The first column is the number of bits and the second column is how long it takes.  As you can see, it's roughly linear in the number of bits.  So is_two_power() is really O(log n), not O(1).  But it has a very small constant factor, so you won't see much of a difference until you start using really gigantic numbers, far larger than anything you are going to have the patience to test with is_prime()."
learnpython,3dolb3,Rhomboid,1 point,Sat Jul 18 00:14:09 2015 UTC,"To follow up,   And why is is_prime not O( 2k )?   Because that's a complete brainfart on the part of whoever told that to you. 2n is extremely slow. It's O(n lg n) technically.  The other thing that's going on here is that under the hood, the processor is going to bitwise-and, perform chunks of divisions etc. 32 or 64 bits at a time. So until you get to numbers that don't fit in a ""machine word"", there's no effect at all - on the small numbers, it's ""wasting"" time (except it happens more or less concurrently) processing leading zeroes on the numbers."
learnpython,3doffp,Megalolo8,3,Fri Jul 17 22:52:36 2015 UTC,"FYI, this is really unpythonic code.  You shouldn't be using classes like this.  And it makes it hard to follow.  Clues you should be using functions instead of classes:  fileManage(""basicMath"").addNewQlist(alphaList)   You don't keep the instance around.  This is just a convoluted way of doing  save_qlist(""basicMath"",alphaList)   and again:  test().fullTest(""basicMath"")   how about:  do_test(""basicMath"")   ?  I think you've obfuscated yourself out of understanding your code, so you wrote things like:  def saveData(self):     pickle.dump(self.fullData,output)     output.close()   which won't work.  I feel like if you had thought of saveData as a function rather than a method of a class, you wouldn't have tried to use a variable that doesn't exist.  And, this doesn't do what you think:  dataManage().addData(q.question, q.answer, q.time, q.attempt, q.correct)   because you are using a different dataManage instance for every piece of data.  You keep appending to an empty list and then throw it all away!  Also, read PEP8, specifically the naming conventions.  Classes should be UpperCase, functions and methods lower_case_with_underscore."
learnpython,3doffp,elbiot,1 point,Fri Jul 17 23:31:08 2015 UTC,"ty, I've taken into account your advise (new code in edit, anymore improvements you would make, besides PEP8-stuff i will get round to it). Also is there a way to organise functions as I was with classes, without classes because I feel it like it will become hard to find where my functions are eventually."
learnpython,3doffp,elbiot,1 point,Tue Jul 21 16:59:56 2015 UTC,"Well, by not using classes unnecessarily, you've shortened the amount of code you wrote.  You can do this a bit further by moving the duplicated code into seperate functions: save_to_pickle and load_from_pickle.  (hint: load_from_pickle whould use the with construct, or atleast close the file manually.)  I'd also suggest writing to a human readable csv file rather than a pickle, so you can make new tests in a spreadsheet rather than having to define it has a constant in your program.  Then, use more consistent names:  save_qlist  load_qlist  save_test  load_test  And question doesn't need to be a class.  You instantiate it once to call one function, then you unpack all the data out of it into a list.  just make an ask_question(q_text,answer) function that returns the list (or a named tuple).  I think you'll find that if you use more consistent names (really important!) and use PEP8 naming conventions, your functions will be easy to find.  Also, get rid of those global variables.  You already save the correctness of an answer in your list, so you don't need an incorrect_list.  Just filter your question list based on correctness.  so, like  def do_test(file_name):     test = load_qlist(file_name)     test_result = []     for question, answer in test:         #append named tuples to the results         result.append(ask_question(question,answer))     keep_going = True     while keep_going:         keep_going, result = retry_test(result)     fname = input(""To save this test, enter your name, otherwise just press enter: "")     if fname:         save_test(fname,result)  def retry_test(result):         #check if all answers are correct         #if not, ask if they would like to retry the wrong ones         #  if so:             for i, question in enumerate(result):                 if question.correct == False:                     result[i] = ask_question(question)             return True, result         return False, result #either all answers are right or user is giving up."
learnpython,3doffp,novel_yet_trivial,1 point,Tue Jul 21 18:43:34 2015 UTC,"Just look at the traceback:     File ""C:\Users\theo\Desktop\repeatTrainer CURRENT\runQuestions.py"", line 51, in fullTest     self.doTest(self.incorrectList)   In line 51 you send a list to the doTest() method, when it expects a string.  Unrelated, but your ""dataManage"" class will have major issues since ""output"" needs to be ""self.output"", and you need to work with a single instance instead of recreating it each time. Should be like this:  def doTest(self, qlist):     ...     instance = dataManage()     instance.createSaveFile(qlist)     ...         instance.addData(q.question, q.answer, q.time, q.attempt, q.correct)     ...     instance.saveData()"
learnpython,3doffp,elbiot,1 point,Fri Jul 17 23:18:24 2015 UTC,"Your error is pretty clear.  On line 38 you are creating a new fileManage instance with a name coming from qlist (which is a list I assume, good name).    fileManage(qlist).getList()   So then you try to concatenate that list, which is now in self.name of the fileManage instance, with a string in getList:  pickle.load(open(""tests/"" + self.name,""rb""))   I don't know what you're expecting this to do.  Why do you create a fileManage with a list for it's name?"
learnpython,3doffp,Justinsaccount,0,Fri Jul 17 23:12:12 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3dn82g,leonardicus,3,Fri Jul 17 17:19:48 2015 UTC,Just start with getting familiar with plain SQL. For most personal projects you won't need any of the specific features of a specific implementation. Sqlite is probably the easiest as its a standard module. I believe the MySQL module is similar though I never used it myself (only in PHP).  On bigger projects you can take a look into ORMs and whatnot. Packages/modules like SQLAlchemy are interesting to learn.   As for resources to learn. this looks decent. I took it up working on a project and wanting to add a database. I just googled most stuff when I needed it.
learnpython,3dn82g,FlockOnFire,1 point,Fri Jul 17 17:26:27 2015 UTC,Thanks for the input. I'm going to try with pain SQL and use Al Sweigert's book that many people here mentioned.
learnpython,3dn82g,FlockOnFire,1 point,Sat Jul 18 18:23:28 2015 UTC,You're welcome. :) Let us know if you run into any problems!
learnpython,3dn82g,metl_lord,3,Sat Jul 18 18:54:08 2015 UTC,"I would recommend SQLite. It's a lot easier to get started with than other DMBSs and will teach you the basics of querying and table design. You can create a file and either use Python to pass commands to it or use the SQLite command line interface.  As for an ORM, don't use one until you have an understanding of what is occurring behind the scenes. Having an understanding of how everything works will help you greatly when you move to an ORM.  I recommend Learn SQL The Hard Way (which is only complete up to chapter 14) for learning SQL. For database design, I would recommend The Art of SQL"
learnpython,3dn82g,catdog101,1 point,Fri Jul 17 20:33:02 2015 UTC,"Thanks I'm going to try with the Learn SQL the hard Way book. Naive question, is the SQL language implementation of SQLite the same as that of MySQL?"
learnpython,3dn82g,keturn,2,Sat Jul 18 18:25:20 2015 UTC,"For personal projects I like to use dataset with sqlite, it makes it super easy to work with if you don't need a lot or custom queries but is easy to do if you need to  dataset.readthedocs.org"
learnpython,3dn82g,keturn,1 point,Fri Jul 17 20:18:23 2015 UTC,This seems really handy even for Android development too. From what I've heard the OS supports SQLite.
learnpython,3dn82g,Wrathofvulk,2,Sat Jul 18 18:26:23 2015 UTC,"Does ""medical-type data"" mean a medical records system like patient notes and billing codes, or does it mean dealing with instrument data like you'd get out of an MRI or mass spectrometer?"
learnpython,3dn82g,FlockOnFire,1 point,Sat Jul 18 18:19:18 2015 UTC,"It means data from instruments, experiments, blinding codes and demographic data (gender, initials, age, etc)."
learnpython,3dnzap,Ogi010,4,Fri Jul 17 20:41:57 2015 UTC,"Right now you're doing a brute force search, but you can do it much more efficiently than that.  It seems like you want two runs of non-increasing values, bracketed by the max and min values at the end.  It's possible to generate combinations much more efficiently using that information by only considering numbers for each slot that are equal to or less than the ones to their left.  I came up with this:  def non_increasing(values, length):     if length == 1:         for value in values:             yield value,     else:         for index, value in enumerate(values, 1):             for rest in non_increasing(values[:index], length - 1):                 yield (value,) + rest              def gen_combos(values, length):     max_val = max(values),     min_val = min(values),     for first_chunk in non_increasing(values, 8):         for second_chunk in non_increasing(values, length - 10):             yield max_val + first_chunk + second_chunk + min_val  possible_values = range(7, 11) combos = list(gen_combos(possible_values, 14))   This generates the same 5775 combinations in around 11ms.  I tried it with range(0, 21) but ran out of memory, as I'm using the 32 bit version."
learnpython,3dnzap,Rhomboid,1 point,Fri Jul 17 21:40:59 2015 UTC,"implementing right now... I only just recently started using things like generators (taking the CS 212 course on Udacity, ""Design of Computer Programs"" by Peter Norvig...so generators, list comprehension and so on are not as intuitive to me as I hope they will be."
learnpython,3dnzap,Rhomboid,1 point,Fri Jul 17 21:48:34 2015 UTC,"Got the same speed...jeez man, when I said make faster, I didn't mean for you to take my code that ran in 15 minutes and make it run in 11ms ..running on range(0, 21) to see what would happen, range(0, 11) took just under 1 minute to run... hoping I can get range(0, 21) complete before I leave work and send that list into my uniformity checker...  Can't thank you enough for posting this, definitely going to study this block of code on the weekend to figure out why it is so much faster."
learnpython,3dnzap,elbiot,3,Fri Jul 17 22:03:27 2015 UTC,"The heart of the code is non_increasing() which generates combinations of the specified length where the values are either equal or decreasing (but never increasing) as you go from left to right:  >>> list(non_increasing([1, 2, 3, 4], 3)) [(1, 1, 1),  (2, 1, 1),  (2, 2, 1),  (2, 2, 2),  (3, 1, 1),  (3, 2, 1),  (3, 2, 2),  (3, 3, 1),  (3, 3, 2),  (3, 3, 3),  (4, 1, 1),  (4, 2, 1),  (4, 2, 2),  (4, 3, 1),  (4, 3, 2),  (4, 3, 3),  (4, 4, 1),  (4, 4, 2),  (4, 4, 3),  (4, 4, 4)]   It's a recursive function, and it works one column at a time.  To get all the combinations of length 3, it chooses a value for the first column and then recursively calls itself for all the other columns.  This is almost but not quite identical to itertools.product().  If you remove [:index], so that it's recursively calling itself as non_increasing(values, length - 1) then it's exactly equal to itertools.product().  That one change however means that instead of considering every possible value for every column, it only considers values that are equal to or less than the current column value to its left.  That works because values is assumed to be in ascending order.  So for instance when the first column is chosen as 1 in the examples above, index equals 1 and values[:index] equals [1].  That means that for the second, third, and fourth columns, the only choice available is 1, so there's only the one combination starting with 1.  Likewise when it gets around to trying 4 for the first column, then the choices for the second column (via values[:index]) are all the values, since index is 4 and values[:index] is [1, 2, 3, 4].  The other function just glues together two of those sequences, while also sticking the max and min values at the beginning and end."
learnpython,3dnzap,Rhomboid,1 point,Fri Jul 17 22:16:39 2015 UTC,"So I tried to run range(0, 21) and while I didn't get an out of  memory error, checking the task manager, it definitely appeared as if I was out of memory.  My machine has 24GB, and I was using 22.5GB... range(0, 11) consumes 12.2GB, so I think I'm going to leave it at that.  Now, I thought I was happy with my 'scoring' function, ...but that's going to take a few hours to run through the combinations generated with range(0, 11)...  Can't thank you enough for the explanation!"
learnpython,3dnzap,zahlman,1 point,Fri Jul 17 22:27:57 2015 UTC,"FYI, it only consumes any memory at all because they put the generator into a list at the end for demonstration purposes:  possible_values = range(7, 11) combos = list(gen_combos(possible_values, 14))   is equivalent to (but faster than)  possible_values = range(7, 11) combos = [] for combo in gen_combos(possible_values, 14):     combos.append(combo)   which takes up memory only because combos becomes a very long list.  possible_values = range(0, 21) for combo in gen_combos(possible_values, 14):     print combo   might take forever to run, but it won't use much memory.  Yeay generators!"
learnpython,3dnzap,Rhomboid,1 point,Fri Jul 17 22:42:15 2015 UTC,"Just reading through your lines of code, I'm learning so many little things... thanks again for posting!  (for example, didn't know you could not start at 0 when using enumerate).    I still don't know what the comma notation is about, but I'll figure it out.  Thanks again!"
learnpython,3dnzap,zahlman,2,Mon Jul 20 19:06:26 2015 UTC,"foo, is how you express a tuple with a single value.  It's kind of awkward, but it stems from the fact that it's the comma that creates a tuple, not parentheses.  So (a, b, c) is obviously a tuple of three values, but so is a, b, c without the parentheses.  By that logic, (a) is just the scalar value a (i.e. you can always add parentheses around an arbitrary expression), not a tuple with a single value.  You can concatenate tuples with +, which is what is happening with things like yield (value,) + rest.  It wouldn't work to write value + rest because value is a number and rest is a tuple and number + tuple is invalid, but tuple + tuple is fine.  That's also why I had to write yield value, instead of yield value, because then otherwise rest would become a scalar when it reached length 1 and then the other line would be trying to do tuple + number, also invalid.  The same thing applies in the other function, where yield max_val + first_chunk + second_chunk + min_val is concatenating four tuples to create the final combination."
learnpython,3dnzap,Rhomboid,1 point,Mon Jul 20 23:13:56 2015 UTC,"Thanks for the explanation, I never have thought about creating tuples in such a manner, as I think of tuples as immutable I never thought to concatenate/append them."
learnpython,3dnzap,zahlman,1 point,Mon Jul 20 23:46:30 2015 UTC,"I'm pretty sure this is equivalent to combinations_with_replacement (with each element reversed), as also suggested by /u/novel_yet_trivial."
learnpython,3dnzap,Rhomboid,1 point,Sat Jul 18 20:00:33 2015 UTC,"It's not exactly equivalent.  combinations_with_replacement generates items in sorted order which violates the requirement that items be non-increasing, which is kind of the whole point.  I suppose you could reverse each tuple, or reverse the order of the items before passing them, but then the combinations would not be generated in lexicographic order and you'd get a different list than OP's list.  You could always sort the list but then you give up the nice property of it being a nice generator.  My version gives the exact same output as OPs code without any of that hassle."
learnpython,3dnzap,raylu,1 point,Sat Jul 18 21:33:56 2015 UTC,"Sorted items are, by definition, non-decreasing (for an ascending sort). If you meant ordered according to the input order, well, the input is a range."
learnpython,3dnzap,novel_yet_trivial,1 point,Sat Jul 18 22:23:48 2015 UTC,"The items need to have the property of being non-increasing, not non-decreasing.  That's why my function is named non_increasing()."
learnpython,3dnzap,novel_yet_trivial,1 point,Sat Jul 18 23:35:02 2015 UTC,"Yes, and that's trivially addressed by reversing the outputs, which can be done in a comprehension."
learnpython,3dnzap,novel_yet_trivial,1 point,Sun Jul 19 00:01:38 2015 UTC,"Yes.  I covered that:   I suppose you could reverse each tuple, or reverse the order of the items before passing them, but then the combinations would not be generated in lexicographic order and you'd get a different list than OP's list."
learnpython,3dnymo,Cardzilla,2,Fri Jul 17 20:36:56 2015 UTC,I don't know if this will work for you
learnpython,3dnymo,Zeryons,1 point,Fri Jul 17 23:56:14 2015 UTC,"Hi Zeryons  That did help!   I looked up the shortcuts on the start menu (or whatever window's 8 equivalent of a start menu) and I found that if I used that shortcut, Idle started in 3.4.3 instead of 2.7.   What I really don't get is that if I go into C:/python34/lib/idle.pyw and start that, it starts idle in python 2.7!   That's the main way I was starting idle. By going into that shortcut when I was installing and uninstalling. I guess I should have been using the start menu shortcuts instead.   From what little I know, would have thought it would be a path issue, but only python 3.4 is on my system path in environment variables and not python 2.7!  Can anyone explain this?   Thanks!"
learnpython,3dnymo,deepestbluedn,1 point,Sat Jul 18 04:56:39 2015 UTC,What operating system are you using?
learnpython,3dnymo,novel_yet_trivial,2,Fri Jul 17 22:02:55 2015 UTC,"Linux and mac come with 2.x preinstalled, so I'd assume Windows."
learnpython,3dnymo,dunkler_wanderer,1 point,Fri Jul 17 22:08:25 2015 UTC,"Maybe pyenv can help you, but I'm not sure because I've never used it.   When I had this problem, I just changed the PATH variable, so that Python 3 appeared first in the list. In Windows 8 you can find and change the PATH variable in: Start -> All Apps -> Control panel -> System -> Advanced System Settings -> Advanced -> Environment variables. The values/directories are delimited by semicolons C:\python34;C:\python27. However, I've hardly ever used Python 2 and I guess if you have to switch it very often that'll be quite annoying."
learnpython,3dnymo,dunkler_wanderer,1 point,Sat Jul 18 04:17:33 2015 UTC,"Hi guys, Yes sorry I forgot to say, Windows 8.   Also I've checked the path variable on system and it only python 3.4 on it. I didn't add python 2.7 to the path.   Grrrr. There are days I wished I used a mac.   Thanks again."
learnpython,3dnymo,dunkler_wanderer,1 point,Sat Jul 18 04:23:13 2015 UTC,"Ah, you're right, changing the PATH doesn't help. I think I actually uninstalled Python 2 or reinstalled 3 (it's been a while). Maybe this thread on superuser.com can help you."
learnpython,3doogk,Troge,3,Sat Jul 18 00:12:07 2015 UTC,"Yep, this line makes one dict and puts it into the list A times.        result = [{'true':0,'false':0}]*len(A)   They're all the same dict!  Do  result = [{'true':0,'false':0} for x in range (A)]   This list comprehension creates a new dict A times.  That's because the comprehension executes the dictionary construction each time.  See, each dictionary could be different if you used x within the dictionary, where in your case, it just makes the one dict and then fills a list with references to it.  Helpful for immutable values like int and str, but confusing for mutable values like list and dict."
learnpython,3doogk,elbiot,1 point,Sat Jul 18 00:28:57 2015 UTC,"To visualize what's going on, check out Python Tutor and enter those two lines.   Edit: There's an error in the second line. result = [{'true':0,'false':0} for i in range(len(A))] should work."
learnpython,3doogk,dunkler_wanderer,1 point,Sat Jul 18 00:34:56 2015 UTC,Thank you for the clean explanation
learnpython,3doogk,dunkler_wanderer,3,Sat Jul 18 02:52:48 2015 UTC,"I just took another look at your question and it seems to me that you just want to count how often x occurs in the list. Lists have a count method to do that: lst.count(5). And if you want to know how often x doesn't occur, just subtract the count from the length.   If you want to know how to count with dictionaries take a look at this talk by Raymond Hettinger: Transforming Code into Beautiful, Idiomatic Python."
learnpython,3doogk,elbiot,3,Sat Jul 18 01:18:45 2015 UTC,"Yes, OP seems to want some weird running count of match over length. I answered their literal question, but, ""why are you doing that and wouldn't X be better?"" is really the right question to ask."
learnpython,3doogk,Rhomboid,2,Sat Jul 18 01:57:37 2015 UTC,"it's just giving me 7 pointers to the same dict?    Yes, although I wouldn't phrase it like that.  When you use * with a list, you aren't creating any new objects, you're only duplicating references to the same objects that already exist.  For example, [foo] * 3 is the same as writing [foo, foo, foo], where foo is the same reference to the same object.  If you write them all out then that's creating new dictionaries.  You could also use a list comprehension.  I don't understand why you even need this dictionary, however.  Each entry is always going to be either one of two options, so why not just do:  >>> items = [5, 5, 1, 7, 2, 3, 5] >>> [item == 5 for item in items] [True, True, False, False, False, False, True]   If this is part of a larger scheme, then you should probably explain that scheme because I'm almost positive there's a better way to do whatever it is you're trying to do."
learnpython,3dmnd3,parnmatt,9,Fri Jul 17 14:40:25 2015 UTC,"In languages like C, blocks introduce a new scope.  However, in python, the only things that create scopes are essentially functions and classes (plus cases where a function is implicitly created, like generator comprehensions).  Though do note that the variable is defined in the scope no matter where it ends up being defined.  Eg. the following can sometimes surprise people:  x = 1 def foo():     print(""x = "", x)     x = 2     print(""x = "", x)   Many expect this to print 1, then 2, but in fact, it'll raise UnboundLocalError: local variable 'x' referenced before assignment.  The reason is that that ""x=2"" means that x gets treated as a local variable for the whole function body, not just the part that happens after it, meaning the first access to x fails because it's trying to access the local x hasn't been initialised, rather than using the global x instead.  In summary, functions are really the only things that introduce new scopes, and the scopes span the entire function."
learnpython,3dmnd3,Brian,1 point,Fri Jul 17 15:51:00 2015 UTC,Does indentation creates or destroys scopes?
learnpython,3dmnd3,saabr,2,Fri Jul 17 21:43:01 2015 UTC,"No, it's the def.  x = 1  while True:     print(x)     x = 2     print(x)   runs fine.  Edit: also, list comprehensions in python3 create their own scope I believe (not certain) but they don't use indentation"
learnpython,3dmnd3,elbiot,3,Fri Jul 17 22:48:46 2015 UTC,Does the locals() dictionary encompass the whole function?   Yes
learnpython,3dmnd3,StaticFuzz,3,Fri Jul 17 14:55:42 2015 UTC,"As an interesting side note, this works in Python2 list comprehensions too:  >>> l = [x**3 for x in range(3)] >>> print x 2   However, it was ""fixed"" in Python3:  >>> l = [x**3 for x in range(3)] >>> print(x) Traceback (most recent call last):   File ""<stdin>"", line 1, in <module> NameError: name 'x' is not defined"
learnpython,3dmnd3,novel_yet_trivial,3,Fri Jul 17 15:21:08 2015 UTC,"In this case, because your else statement raises an exception, you can be confident that either:   You've executed the if condition and have an n variable to work with; or You've raised an exception, stopping the execution of the function before print(n) is able to go off.     That said, scope in this case means that n is available within the scope of the function: there isn't a smaller form of scope within the if statement to worry about. Your main concern would be if the code block were able to execute and get to print(n) without ever setting n first.  Thus, this kind of thing can work just fine:  if something:     n = 'Blah' else:     n = 'Not blah'  print(n)   But this can cause problems:  if something:     n = 'Blah' else:     something_else_happens = True  print(n)   Here, if you get to the else statement, n is never set, and therefore calling print(n) raises an error stating something like ""local variable used before assignment""."
learnpython,3dmnd3,JustTurrble,1 point,Fri Jul 17 17:55:22 2015 UTC,It's the fact that the print equivalent worked in the first place. TIL that python doesn't have a separate scope for if. That alone is interesting.
learnpython,3dmnd3,jacobvgardner,2,Fri Jul 17 22:43:06 2015 UTC,"Yeah so basically Python has function scope instead of block scope, meaning no matter where in a function you define a variable, the remainder of the function will have access to it (excluding if it's created within a nested function)."
learnpython,3dmnd3,thegreattriscuit,1 point,Fri Jul 17 15:13:57 2015 UTC,"I never went too deep into C or Java, but I did a bit a long time ago and I can firmly say that I had no idea they behaved the way you describe.    Of course, I never went too deep, and probably had all my variables declared up at the top of the functions like a good boy and just never ran into that behavior, but it just seems weird to do it like that."
learnpython,3dmnd3,OCHawkeye14,1 point,Fri Jul 17 23:49:48 2015 UTC,"In most languages I've used n would only be in scope of the if statement.   In languages that block using braces, a rule of thumb for scope is that it is born when you first assign it, it dies when you hit the close brace in the block.   This is abnormal scope behaviour. However now I know it does this. This can be awesome. I cannot see an obvious reason why this would have until expected behaviour if you assumed block scoping.  However it does clean code up a little as you don't need to define the variable above the block to use it outside the block."
learnpython,3dmnd3,StaticFuzz,1 point,Sat Jul 18 15:11:33 2015 UTC,"I'm not sure I'm following...if an int is not passed to the function, it never makes it to the print(n) line.  When you raise the error, the function is abandoned in that spot.  only_ints(5) print '-'*79 only_ints('5')   Gives you:  5120 ------------------------------------------------------------------------------- Traceback (most recent call last):   File ""scratch.py"", line 11, in <module>     only_ints('5')   File ""scratch.py"", line 5, in only_ints     raise TypeError('You screwed up, I only want ints') TypeError: You screwed up, I only want ints   If you had not raised an error, you would have experienced a different problem - probably the one you anticipated.  def only_ints(num):     if isinstance(num, int):         n = num * 1024  # because, why not     #else:     #    raise TypeError('You screwed up, I only want ints')     print(n)  only_ints(5) print '-'*79 only_ints('5')   ...  5120 ------------------------------------------------------------------------------- Traceback (most recent call last):   File ""scratch.py"", line 11, in <module>     only_ints('5')   File ""scratch.py"", line 6, in only_ints     print(n) UnboundLocalError: local variable 'n' referenced before assignment"
learnpython,3dn9q7,The_Kilo,5,Fri Jul 17 17:31:27 2015 UTC,"Yep, here's mine: http://www.kershner.org/  And the code: https://github.com/kershner/blog  Built with Flask, which is what I recommend if you want to learn a bit more Python while getting your blog up and running.  Here's a great tutorial: Flask Mega Tutorial  Edit - also keep in mind that if you're starting from scratch or near it, this will be a huge undertaking, many weeks in the making.  Don't sweat the frustrations and just keep banging your head against it, you'll get it working."
learnpython,3dn9q7,billcrystals,3,Fri Jul 17 17:44:59 2015 UTC,that's a pretty clean site /u/billcrystals
learnpython,3dn9q7,billcrystals,2,Fri Jul 17 18:10:12 2015 UTC,Hey thanks!
learnpython,3dn9q7,archerimagine,2,Fri Jul 17 18:36:15 2015 UTC,You can also use Markdown and Pelican to make a static blog.  Here are some of the resources.   Pelican Docs Nafiulis | Tutorials
learnpython,3dn9q7,keturn,1 point,Fri Jul 17 18:26:23 2015 UTC,I quite like Nikola for this.
learnpython,3dn9q7,novel_yet_trivial,-2,Fri Jul 17 18:56:00 2015 UTC,"If all you want is a blog, just install wordpress.   If you want the challenge of building a website from scratch, blog or otherwise, look into the python packages django or flask."
learnpython,3dn9q7,FlockOnFire,1 point,Fri Jul 17 17:38:13 2015 UTC,Or if you want to play around with existing CMS written in Python take a look at PyPlate or Quokka.
learnpython,3dnpx2,sirhumphry,2,Fri Jul 17 19:31:35 2015 UTC,"To read the excel file simply save it as a csv and use the python csv module to read it. You may find it's much easier to do the calculations in python rather than excel.  To write, I bet the easiest solution is to write your output as html to load with word. I have in the past used a template to make a custom content.xml file for LibreOffice and zip it into an .odt file, but that may be a bit more complex than you want."
learnpython,3dnpx2,novel_yet_trivial,0,Fri Jul 17 19:48:40 2015 UTC,I didn't understand much of that... I've only taken like 2 semesters of comp sci. Is there any way you could give me an example of one of the read/write lines?
learnpython,3dnpx2,Exodus111,1 point,Fri Jul 17 19:55:23 2015 UTC,https://www.youtube.com/watch?v=NUVblHTElTk
learnpython,3dnpx2,novel_yet_trivial,1 point,Fri Jul 17 20:00:12 2015 UTC,"Do you know anything about html? At it's most basic (very, very basic), you can write a text file like this:  <font color='green'>this is green text</font> <font color='maroon'>this is maroon text</font> <font color='#4B0082'>this is Indigo text</font>   In this manner you can save the color of text using html color names or hex color codes, save it with a .html extension, and load the resulting file into word."
learnpython,3dnpx2,what_why_me,1 point,Fri Jul 17 20:14:51 2015 UTC,This will tell you how to do the read/write part.
learnpython,3dkgpe,RBVision,33,Fri Jul 17 00:13:39 2015 UTC,"I got tired of being asked what was taking me so long every morning with daily reports on getting them out to my boss, so I wrote scripts to do all the reports automatically.   Problem solved!"
learnpython,3dkgpe,StrugglingDale,8,Fri Jul 17 00:56:40 2015 UTC,"This is non-python related, but similarly I was given the responsibility to do an efficiency report on our QA department a few years back. It was a job that took my boss 2+ hours per day to complete. It was my main responsibility and was told it should be my main focus every day regardless of how long it took to complete. After a few weeks of doing it by hand like my boss showed me (seriously, pencil, paper and a calculator) I put it on excel and wrote some VB scripts to automate moving the data around. It went from 2+ hours per day down to 5 minutes per week. I did that job for nearly 3 years and until the day I quit my boss thought I still put 10+ hours per week into that stupid report."
learnpython,3dkgpe,whiskeysnowcone,5,Fri Jul 17 13:00:42 2015 UTC,What did you do with the time you saved?
learnpython,3dkgpe,TheFrigginArchitect,2,Fri Jul 17 13:17:40 2015 UTC,"I used most of the time to hone my skills in excel and VBA to make the report for efficient. I know excel inside and out which I use all the time now and I know VBA fairly well, at least enough to make a macro or two. I also spent a lot of time mindlessly playing on the internet looking at cat pictures and World of Warcraft forums.   Once I learned about python I was hooked and started learning to code but I've changed job since then so I don't really do anything in my current job that needs python so I have no REASON to learn it other than for fun. I've made a few little things here and there like outward IP alerts (similar to what Neurone214 mentioned) a few Reddit bots, and a script that notifies me when the temperature drops below a certain degree so I can leave water running in the winter to keep my pipes from freezing. I never kept it running though because the temp gauge that it read (NOAA weather) is 30 miles away and at an airport and I'm down in a valley so the temp difference is HUGE. Fun little project though."
learnpython,3dkgpe,whiskeysnowcone,1 point,Fri Jul 17 15:50:09 2015 UTC,a script that notifies me when the temperature drops below a certain degree so I can leave water running in the winter to keep my pipes from freezing   That sounds cool!
learnpython,3dkgpe,TheFrigginArchitect,4,Fri Jul 17 21:15:04 2015 UTC,If only I was allowed to install Python at work...
learnpython,3dkgpe,iatowks,11,Fri Jul 17 04:16:56 2015 UTC,"You can install the Anaconda distribution without Administrator rights.  Actually, I would recommend that any Windows Python user use Anaconda, especially if you think you'll ever use some of the complex scientific pancakes like scipy."
learnpython,3dkgpe,Notre1,2,Fri Jul 17 12:29:59 2015 UTC,"numpy, pandas, scipy.  anaconda has all the goodies."
learnpython,3dkgpe,verik,2,Fri Jul 17 15:48:09 2015 UTC,"I wish I had known about Anaconda from day one. That and ipython. (ipython itself, not ipython notebook which I found confusing until I knew about regular ipython)"
learnpython,3dkgpe,benr_r,2,Fri Jul 17 18:18:24 2015 UTC,"I am wondering if there are any fortune 500 admins or others who read this and know if it is a bad idea? I am not supposed to install software from the internet obviously, but outside of me getting in trouble what are the risks to the company if I where to install Anaconda?   If I tried to get this approved formally, what legitimate concerns should I be ready to answer to?"
learnpython,3dkgpe,EqualsEqualsTrue,2,Fri Jul 17 18:29:05 2015 UTC,complex scientific pancakes   Nope? No-one?
learnpython,3dkgpe,Sean1708,1 point,Fri Jul 17 20:22:44 2015 UTC,Anaconda can get weird when you start installing other dependencies with pip. We use it for scientific stuff but only in codebases who's dependencies are encapsulated in anacondas base install...   good recent example someone showed me:  take your anaconda install and add bcrypt:  pip3 install bcrypt   now find something generic on github that uses bcrypt and see if you can get it running out of the box. SPOILER: you are going to have a strange afternoon.
learnpython,3dkgpe,batoure,1 point,Fri Jul 17 19:37:21 2015 UTC,"Hmm, I'm still learning Python myself, but I'm wondering what could cause this.  What is Anaconda doing other than than installing pre-compiled binaries and modifying your path (if you are using the conda env stuff)?  Have you tried submitting a bug report to the Continuum/Anaconda guys on this?  I've used Anaconda quite a bit and haven't seen any behavior like this, but biggest non-Anaconda libraries I've used extensively is SAP's PyRFC and Twisted.  Now, if the pip libraries or GitHub project require compiling something on Windows, then that's a whole different ballgame..."
learnpython,3dkgpe,Notre1,1 point,Fri Jul 17 23:43:37 2015 UTC,actually I have witnessed this weirdness on windows as well as linux and mac seems to be 100% unique to anaconda no idea why. I can run the same set of test code side by side with vanilla 3.4 and it works fine.
learnpython,3dkgpe,batoure,5,Sat Jul 18 04:15:34 2015 UTC,Are you actually forbidden to use python or do you have a locked down windows environment?
learnpython,3dkgpe,SurviAvi,1 point,Fri Jul 17 05:21:14 2015 UTC,Second option. I work at a multinational company that uses citrix virtual desktop systems. You can't install anything without the IT department allowing it... And I was told by my boss the company has to pay some money for Citrix to install any software
learnpython,3dkgpe,iatowks,4,Fri Jul 17 11:23:45 2015 UTC,Just try using PortablePython or something similar. No installation necessary. See: http://stackoverflow.com/questions/2678702/install-python-2-6-without-using-installer-on-win32
learnpython,3dkgpe,compie,3,Fri Jul 17 12:16:47 2015 UTC,"Guess what, I'm not allowed to plug a usb storage device into the computer, either. They take data security very seriously."
learnpython,3dkgpe,iatowks,2,Fri Jul 17 14:03:00 2015 UTC,This sounds like a government system to me.  Maybe get yourself a t2.micro at AWS with Amazon Linux and SSH into it.  That is of course assuming you're allowed to move data outside the corporate network.
learnpython,3dkgpe,StrugglingDale,4,Fri Jul 17 14:13:07 2015 UTC,"The whole point of this digital fortress is to forbid people to do that. There are some workarounds, of course... For instance, Once I wanted to use Python to do some fancy visualization of a dataset stored on a .inf file to show it to my boss, so I opened the file using Windows notepad, copied it and pasted into a pastebin link. Then I saved the link and opened it at home."
learnpython,3dkgpe,iatowks,2,Fri Jul 17 14:45:10 2015 UTC,"software installation is also forbidden at the company I work at, but they're approach was to remove admin privileges.  The workaround we found for this scenario, was to install python in ""My Documents"" folder as opposed to ""C:""."
learnpython,3dkgpe,half_liquid,1 point,Fri Jul 17 13:36:19 2015 UTC,My comp is also restricted but I asked the IT guy and he let me download it.
learnpython,3dkgpe,validated1,1 point,Fri Jul 17 08:08:55 2015 UTC,"What kinds of reports, excel stuff?"
learnpython,3dkgpe,EqualsEqualsTrue,1 point,Fri Jul 17 18:30:05 2015 UTC,"Yeah, SQL pulls, Excel.  I'm moving it all to Tableau though."
learnpython,3dkgpe,StrugglingDale,-6,Fri Jul 17 21:05:49 2015 UTC,source!!
learnpython,3dkgpe,depakoitvs,7,Fri Jul 17 00:59:50 2015 UTC,It's all internal stuff I just cobbled together from googling stuff.   I can't publish anything here though due to its structure and how the data systems work.
learnpython,3dkgpe,StrugglingDale,28,Fri Jul 17 01:01:50 2015 UTC,"Script to rename downloaded TV shows to SXXEXX.episodetitle.ext format.  The script file is placed in the show's folder, it gets the name of the series from the folder name, finds the appropriate page on epguides.com, uses beautifulsoup to parse the page data, uses regex to figure out the season and episode number of each file, and uses the os lib to rename the files.  When I have new episodes I just double click the .py file and it's done.  Edit: since there is some interest, I have posted the entire script in this comment. It is written for Python 3 and Windows, edits may be required for use on other platforms. It's not very polished or well documented, so, uh, since this is /r/learnpython you could take it on as a project to tidy it up yourself... (good save?)"
learnpython,3dkgpe,callmelucky,8,Fri Jul 17 03:27:42 2015 UTC,"I used to do the exact same thing, but found it was ineffective for some shows where there were two series with the same title or something like that. I started using pytvdb to do it and it works far better now."
learnpython,3dkgpe,bpovs,1 point,Fri Jul 17 05:39:53 2015 UTC,"Yeah, for shows where that happens I just edit the copy of the script to hardcode the show's title in. I haven't heard of pytvdb, will have to check it out :)"
learnpython,3dkgpe,callmelucky,3,Fri Jul 17 09:19:04 2015 UTC,Can you upload the source on github for us? I'd really like to use it.
learnpython,3dkgpe,Arion_Miles,2,Fri Jul 17 09:12:41 2015 UTC,"I've posted it in another comment here directly. It's not very polished, but not horribly shabby. I encourage you to edit and tidy it to your liking :)"
learnpython,3dkgpe,callmelucky,1 point,Fri Jul 17 13:43:22 2015 UTC,I tried it. All I got was syntaxError: invalid Syntax
learnpython,3dkgpe,Arion_Miles,1 point,Fri Jul 17 14:31:19 2015 UTC,"Which line? This is written for Python 3 and Windows btw. If you use Python 2 you'll certainly need to convert any print('str') statements to print 'str', and possibly some other editing will be necessary."
learnpython,3dkgpe,callmelucky,1 point,Fri Jul 17 23:21:32 2015 UTC,Oh shit it's that. I'm using Python 2.7 and errors are at line 1. What more changes do I need to make?
learnpython,3dkgpe,Arion_Miles,1 point,Fri Jul 17 23:27:46 2015 UTC,"I'm not certain to be honest. Just change all the print statements in the manner I suggested to start with, and then see what you get.  Oh actually, did you de-indent everything? To post as code on reddit everything gets an extra 4 spaces (1 Python tab) at the start of each line, that would probably cause the line 1 error. Select the entire text in your editor and hit shift+tab (depending on your editor settings...)  edit: actually the indent problem should only happen if you copied the code from the source of the comment, not if you just copied straight from the comment as is. Then again, I have had strange experiences with indentation/whitespace when copy/pasting generally..."
learnpython,3dkgpe,callmelucky,2,Fri Jul 17 23:40:21 2015 UTC,"One question: What is the original name of the video that you have and how does it map to the new name ? Eg: If they are 2 video files, how does the script decipher that the first video is  Episode 1 and the second video is lets say, Episode 5 ."
learnpython,3dkgpe,hurricanepolio,2,Fri Jul 17 06:35:02 2015 UTC,I'd like to know this as well.
learnpython,3dkgpe,Fragmentalist,1 point,Fri Jul 17 08:26:26 2015 UTC,"Season and episode numbers are generally already indicated in the file name in some form, and I use regular expressions to find them. Usually they are already in SXXEXX form, but my script also parses 3x04, for example, to determine the file in question is season 3 episode 4. It handles one or two other formats as well. For files which can't be identified thusly, the console displays couldn't find season episode info for <filename>. This is all done via a get_season_ep_num(file) function, which (among other things) is called on in a for loop which iterates over the contents of the containing folder."
learnpython,3dkgpe,callmelucky,1 point,Fri Jul 17 09:05:32 2015 UTC,Could you share the code you use to identify the files? I was planning on creating a similar script but couldn't solve how to identify files with varying names. I've read about approximate string matching but in this case you'd have to reverse it to enter it into a database.
learnpython,3dkgpe,Fragmentalist,2,Fri Jul 17 12:00:47 2015 UTC,"I'll just give you the whole thing. It's a bit crude, I kind of stopped working on it once it pretty much did what I wanted. Apologies for the lack of docstrings in the functions, hopefully the names I used are explicit enough if you have some experience.  Here it is, hope it helps:  # epguide_file_renamer  import requests, os, bs4, re  # build regex patterns to find in file names SDDEDD = re.compile(r""[sS]\d{1,2}[eE]\d{1,2}"") DXD = re.compile(r""\d{1,2}[xX]\d{1,2}"") LONGFORM = re.compile(r""[sS]eason[\s|\.]\d{1,2}[\s|\.][eE]pisode[\s|\.]\d{1,2}"")   def make_url_tail():     cwd = os.getcwd()     folder = os.path.basename(cwd)     tail = folder.lower().replace(' ', '')     tail += '/'      return tail   def find_season_ep_num(fn):     if SDDEDD.search(fn):         return SDDEDD.search(fn).group()     elif DXD.search(fn):         return DXD.search(fn).group()     elif LONGFORM.search(fn):         return LONGFORM.search(fn).group()   def convert_season_ep_num(seas_ep_num):     if SDDEDD.search(seas_ep_num):         seas_ep_num = SDDEDD.search(seas_ep_num).group()         seas_ep_num = seas_ep_num.upper()         seas_ep_num = seas_ep_num.split('E')         ep_num = seas_ep_num[1].zfill(2)         seas_num = seas_ep_num[0][1:].zfill(2)      elif DXD.search(seas_ep_num):         seas_ep_num = DXD.search(seas_ep_num).group()         seas_ep_num = seas_ep_num.lower()         seas_ep_num = seas_ep_num.split('x')         ep_num = seas_ep_num[1].zfill(2)         seas_num = seas_ep_num[0].zfill(2)      elif LONGFORM.search(seas_ep_num):         seas_ep_num = LONGFORM.search(seas_ep_num).group()         seas_ep_num = seas_ep_num.lower()         seas_ep_num = seas_ep_num.split(' ')         seas_num = seas_ep_num[1].zfill(2)         ep_num = seas_ep_num[3].zfill(2)      else:         print(""No valid season ep numbers found in files in this directory."")         return      return 'S' + seas_num + 'E' + ep_num   def get_epg_epnums(show_tag_list):      epg_seas_epnums = []     for tag in show_tag_list:         seas_ep_num_lst = [x for x in tag['title'].split() if x.isdigit()]         seas = 'S' + seas_ep_num_lst[0].zfill(2)         num = 'E' + seas_ep_num_lst[1].zfill(2)         seas_ep_num = seas + num         epg_seas_epnums.append(seas_ep_num)      return epg_seas_epnums    print(""Getting show info from epguides.com..."")  # get show title from working directory & make epguides url # if this fails, user should rename the containing folder # or just assign the appropriate tail # as it appears in the epguides url to url_tail variable url_tail = make_url_tail() url = 'http://epguides.com/' + url_tail  # get url as html objects & convert to bs object show_get = requests.get(url) show_bs4_obj = bs4.BeautifulSoup(show_get.text)  # build list of html objects which are episode tags show_tag_list = show_bs4_obj.select('a[title]')  # build list of episode titles epg_epnames = [x.text for x in show_tag_list]  # get seas ep data, convert to SXXEXX format epg_seas_epnums = get_epg_epnums(show_tag_list)  #build dictionary of seas_ep_nums and ep_titles series_dict = {x: y for (x, y) in zip(epg_seas_epnums, epg_epnames)}   for fn in os.listdir("".""):     if 'epguide_file_renamer' not in fn: # and fn not in renamed_list:         if find_season_ep_num(fn):             fn_ext_ind = fn.rfind(""."")             fn_ext = fn[fn_ext_ind:]              seas_ep_num = convert_season_ep_num(fn)             ep_title = series_dict[seas_ep_num]             new_fn = seas_ep_num + ""."" + ep_title + fn_ext             print('Renamimg', fn, 'to', new_fn)              os.rename(fn, new_fn)         else:             print(""Could not find season/episode info in"", fn)"
learnpython,3dkgpe,callmelucky,2,Fri Jul 17 13:35:16 2015 UTC,You should check out FileBot. It pulls Metadata from thetvdb. Check their forums for AMC (automated media center).
learnpython,3dkgpe,a1blank,1 point,Fri Jul 17 10:32:21 2015 UTC,"Thanks, I certainly will :)"
learnpython,3dkgpe,callmelucky,1 point,Fri Jul 17 13:47:48 2015 UTC,Saving your comment as a project to do in the near future. Thanks!
learnpython,3dkgpe,Always_Question_Time,16,Fri Jul 17 06:54:46 2015 UTC,"I wrote one that runs on my home computer and monitors a gmail address.  When I e-mail that address a specific command, it will look up what my public-facing IP address is and e-mails it back to me so that I could ssh/ftp/etc into my home computer and retrieve files or do other boring but useful things."
learnpython,3dkgpe,neurone214,5,Fri Jul 17 04:07:07 2015 UTC,That's pretty cool but couldn't you just setup DDNS and just use that to SSH/FTP/Etc?
learnpython,3dkgpe,titanium_enigma,5,Fri Jul 17 04:26:12 2015 UTC,Maybe! I'm a scientist and am far better at analytics then actual computer stuff.  This happened to be my first Python script; the need for something like that was my motivation for getting into it.
learnpython,3dkgpe,neurone214,8,Fri Jul 17 04:48:57 2015 UTC,You could probably set it up to monitor your public facing IP and email an update to your main e-mail account when it changes. That way you always have the latest IP on hand. Combine it with filter for spam-free inbox.
learnpython,3dkgpe,MikroMan,2,Fri Jul 17 08:20:51 2015 UTC,"Yep, duckdns is free so long as you don't mind having ""duckdns"" in your domain. Otherwise, you could always pay for a domain."
learnpython,3dkgpe,FallenAege,2,Fri Jul 17 08:59:35 2015 UTC,"NameSilo have a campaign where you can get $1 off your first domain by giving ""WeLovePython"" as your code. And they're one of the cheapest to begin with."
learnpython,3dkgpe,road_laya,2,Fri Jul 17 13:57:34 2015 UTC,"Can't complain with $9 a year. Heck, even I might be able to afford that."
learnpython,3dkgpe,FallenAege,4,Fri Jul 17 19:38:50 2015 UTC,How do you monitor your gmail with python?
learnpython,3dkgpe,helasraizam,6,Fri Jul 17 06:08:55 2015 UTC,Probably via Python's imap module.
learnpython,3dkgpe,searchingfortao,5,Fri Jul 17 06:33:32 2015 UTC,Wow this is so cool
learnpython,3dkgpe,helasraizam,3,Fri Jul 17 06:55:46 2015 UTC,That's a smart use!
learnpython,3dkgpe,Smartare,9,Fri Jul 17 14:23:45 2015 UTC,"I wrote a system to pull my work schedule from a terrible website and throw it on my google calendar.  I explored expanding it for other users but it involves them giving me access to their employee HR records which while do-able, i'd rather not bother with."
learnpython,3dkgpe,kryptn,6,Fri Jul 17 02:41:11 2015 UTC,"I created my own ""life organizer"" app that ranges from a financial ledger to keeping a watch on my computer systems. I'm adding new modules to it as I go and I love the fact that I can create my own applications.   Edit: this doesn't necessarily make my life easier. It just makes it a little more fulfilling."
learnpython,3dkgpe,REE93,2,Fri Jul 17 08:54:46 2015 UTC,"That sounds really cool and something that I might give a go for a project! Do you have it set up for home and mobile use?   Typically I have been programming in a fairly procedural sort of way, would I need to know my way around classes, databases and the like to create such an app?"
learnpython,3dkgpe,bluemania,2,Fri Jul 17 10:45:19 2015 UTC,"Yeah I would definitely recommend this, specially if you are a beginning developer, as you improve you can improve your code and add to it, plus it's something you can use so the reward-factor is evident.   I started out doing procedural programming but as I learned Object Oriented Programming, I felt that it was a good way to learn it by re-writting my code in that way. I mean you can structure your code however you want since you're the only one that will be using it, but if you want to get better, trying out different methodologies if the way to go! And yes, databases are essential for an app like this.    Edit: At the moment it's just on my PC, but I've got plans to go mobile + pebble!"
learnpython,3dkgpe,REE93,1 point,Fri Jul 17 14:30:54 2015 UTC,I would be curious to see the results of this!
learnpython,3dkgpe,bigt252002,3,Fri Jul 17 11:35:42 2015 UTC,"I'll be posting it on Github when I feel that I can no longer add to it, but it always started off as a personal project. I'm the type of person who likes to have control of everything (specially when it comes to private information) but when I feel confident enough, I'll post it online and share it in /r/Python"
learnpython,3dkgpe,REE93,1 point,Fri Jul 17 14:32:48 2015 UTC,RemindeMe! 6 months
learnpython,3dkgpe,Smartare,1 point,Fri Jul 17 19:38:55 2015 UTC,Cool. Does it email you if something is wrong? Send you reports every morning? Or you just log into it to check stuff? Been thinking about doing something similar and was wondering how your experience have been
learnpython,3dkgpe,Smartare,1 point,Fri Jul 17 14:26:09 2015 UTC,"The system monitoring module of my app is pretty primitive at the moment as it's the most recent module I've added. Essentially I click a button and it shows me the status of RAM, CPU, Temps, and the whole shazoo. I'm actually researching how I can integrate an algo to check the integrity of my data (as I'm quite the digital hoarder). Additionally I've been thinking of actually making a Pebble companion app so I can monitor my system on my wrist but again, that's for another time."
learnpython,3dkgpe,REE93,1 point,Fri Jul 17 14:36:45 2015 UTC,"Nice. I plan on trying to build system incorporating most of my life (yes, I know it's probably not the most effective but heck it would be fun) so that my program can check everything from bills to be paid, meetings to be had, updates on things, etc and give it to me in a nice format. Like a daily morning brief on what I need to do and know for the day. =)"
learnpython,3dkgpe,Smartare,1 point,Fri Jul 17 14:40:56 2015 UTC,"sorta like a primitive Jarvis? Yeah that's my end goal too, I call mine ""Command Center"" a bit pretentious I know, but what the heck eh?"
learnpython,3dkgpe,REE93,2,Fri Jul 17 14:48:07 2015 UTC,"Yea, exactly. haha =) I will just go with The Situation Room"
learnpython,3dkgpe,Smartare,6,Fri Jul 17 14:56:00 2015 UTC,My only full script so far was one to organize my cellphone pictures. Doesn't seem like a big deal but it saved me probably 3 or 4 hours by sorting about 6000 pictures and every picture I take from now on is instantly sorted
learnpython,3dkgpe,GenericHbomb,7,Fri Jul 17 01:41:53 2015 UTC,"Damn! Doesn't it feel good?  And if you ever have to orginze files based on metadata again, bam, you're 80% of the way there!"
learnpython,3dkgpe,elbiot,1 point,Fri Jul 17 03:48:59 2015 UTC,"Agreed, it was awesome! I can imagine once you get a little repository of code going, things start to move a lot quicker as you can borrow quite a bit from script to script."
learnpython,3dkgpe,GenericHbomb,3,Fri Jul 17 12:23:30 2015 UTC,Would you mind sharing the script? Or at least explaining how it works and what module you are using for looking at the image data?
learnpython,3dkgpe,solaceinsleep,1 point,Fri Jul 17 06:34:36 2015 UTC,"Here is the github for it.   I actually don't look for image data because the names are auto formatted a certain way by my phone. However, I can't sort pictures that don't have the specific formatted name so sorting by metadata is the next step.  script"
learnpython,3dkgpe,GenericHbomb,2,Fri Jul 17 12:21:51 2015 UTC,"I am curious, is the script running on your cellphone or your laptop? If it is on your cellphone, was it easy to set up python on your cellphpone?"
learnpython,3dkgpe,truthseeker1990,1 point,Fri Jul 17 08:21:39 2015 UTC,"On my computer. Must be way to do it on your phone, but I do not know how at the moment. I have a python app so I can work on programs on my phone when I am just sitting around but that is it so far"
learnpython,3dkgpe,GenericHbomb,1 point,Fri Jul 17 12:19:32 2015 UTC,"What python app is it? All ways that I have found to run python programs on my droid have been quite ugly and inconvenience, unfortunately."
learnpython,3dkgpe,truthseeker1990,1 point,Fri Jul 17 12:32:36 2015 UTC,"QPython3, it is okay. Unfortunately, touch keypads make it difficult with all the symbol usage"
learnpython,3dkgpe,GenericHbomb,2,Fri Jul 17 13:28:41 2015 UTC,Take a look at Hackers Keyboard.
learnpython,3dkgpe,we_swarm,1 point,Fri Jul 17 18:58:56 2015 UTC,"Just checked it out, downloading now, thanks for the link"
learnpython,3dkgpe,GenericHbomb,1 point,Sat Jul 18 20:09:14 2015 UTC,Ah makes sense. Thanks.
learnpython,3dkgpe,truthseeker1990,6,Fri Jul 17 13:34:28 2015 UTC,"as an incident manager, part of my job is keeping track on how long certain incidents run for, and send that with other updates out to management.   the problem is, that we have clients in MANY time zones, and a very specific way of reporting it. So i wrote an app with tkinter that lets you add in the start time, with its local time zone, and adds up the duration in their required format, as well as things like start time in GMT. It looks ugly, but gets the job done. Some of my colleagues used to take up to 15-20 mins to work this out sometimes. now its just instant."
learnpython,3dkgpe,pirate59,5,Fri Jul 17 05:39:22 2015 UTC,The deceptively useful one automatically clears out my downloads folder every night. Simple but effective.
learnpython,3dkgpe,DiscoPanda,1 point,Fri Jul 17 04:52:51 2015 UTC,Nice
learnpython,3dkgpe,Smartare,6,Fri Jul 17 14:26:39 2015 UTC,I created a script that when run asks for a youtube channel name. Then proceeds to download all the videos on that channel if i dont have them in my download folder already.  Afterwards it converts all the videos (.mp4) to mp3.   This comes in handy for me because i listen to promotion channels where they only upload music from new artists etc.   The channels have over a 1000 videos and most youtube downloaders i tried choke up or are filled with malware.
learnpython,3dkgpe,Bullzeyes,3,Fri Jul 17 08:43:23 2015 UTC,Would you mind sharing?  This would be super useful for listening to videos to help me fall asleep at night.
learnpython,3dkgpe,barnesandnobles,2,Fri Jul 17 11:32:34 2015 UTC,+1 for that. i use youtube-dl from git-hub and it works great for single files. have not tried it with whole channels. definitely interested in taking a peek if your willing to share
learnpython,3dkgpe,pirate59,2,Fri Jul 17 13:14:18 2015 UTC,DELIVERY:  http://pastebin.com/Zykf1f9N
learnpython,3dkgpe,Bullzeyes,1 point,Fri Jul 17 23:35:22 2015 UTC,Try      youtube-dl -citw ytuser:<channelusername>
learnpython,3dkgpe,alexdeloy,1 point,Fri Jul 17 16:14:17 2015 UTC,Or just youtube-dl -i <channel URL> or ytuser:channelusername  You don't need to pass -citw
learnpython,3dkgpe,5225225,1 point,Fri Jul 17 21:17:31 2015 UTC,I'll share it when i get home in like 5 hours ! But you aren't allowed to critique it since it was my very first programming project from a while a go and i haven't had the time to redo it :p
learnpython,3dkgpe,Bullzeyes,2,Fri Jul 17 17:56:00 2015 UTC,no critique? aww. was going to say i like it alot. eeasy to read and well documented.... too bad i cant give that feedback =)
learnpython,3dkgpe,pirate59,2,Sat Jul 18 03:19:41 2015 UTC,DELIVERY:  http://pastebin.com/Zykf1f9N
learnpython,3dkgpe,Bullzeyes,2,Fri Jul 17 23:35:14 2015 UTC,Thanks!
learnpython,3dkgpe,barnesandnobles,1 point,Fri Jul 17 23:40:05 2015 UTC,I would love this too.
learnpython,3dkgpe,Smartare,2,Fri Jul 17 14:27:36 2015 UTC,DELIVERY:  http://pastebin.com/Zykf1f9N
learnpython,3dkgpe,Bullzeyes,5,Fri Jul 17 23:35:33 2015 UTC,"I'm working on a program to index and manage recipes.  I'm building a SQLite backend and I'm hoping to have a bunch of metadata driven features such as ""I have these ingredients, what can I make"", ""I only have this long to prepare the meal, what can I make"".  I'm hoping to support printing to 3x5 index cards since my wife and I store our recipes in one of these.  There are a few other features I'm hoping to implement but I need to get the core done first."
learnpython,3dkgpe,a1blank,7,Fri Jul 17 13:01:58 2015 UTC,"https://github.com/Permafacture/pygmaps-ng  For visualizing various GIS datasets on the same map, and sharing those maps with others."
learnpython,3dkgpe,elbiot,5,Fri Jul 17 00:48:30 2015 UTC,https://github.com/NISH1001/ScreenEat Screenshots sharing made easy
learnpython,3dkgpe,paradox44,-2,Fri Jul 17 02:24:46 2015 UTC,"dropbox does this, and safer, since its private"
learnpython,3dkgpe,validated1,1 point,Fri Jul 17 08:12:05 2015 UTC,"Dropbox doesn't take screenshots. It may host them, but doesn't take the screenshot for you."
learnpython,3dkgpe,5225225,1 point,Fri Jul 17 21:19:33 2015 UTC,This code also appears to require you to push a button and have it auto upload and generate a url. Dropbox does the exact same thing. I don't get the downvotes... Dropbox is also written in python.
learnpython,3dkgpe,validated1,1 point,Fri Jul 17 23:36:41 2015 UTC,"Wait, drop box will take a screenshot for you?"
learnpython,3dkgpe,5225225,1 point,Fri Jul 17 23:40:40 2015 UTC,"heres how it works for me on a mac. I press ctrl shift 3 and the screenshot automatically goes to my dropbox folder, and I get a little notification that the shareable link is now on my clipboard. Super simple."
learnpython,3dkgpe,validated1,1 point,Fri Jul 17 23:57:23 2015 UTC,"this ""dropbox screenshot share"" feature is not availabe for linux as far as I know."
learnpython,3dkgpe,paradox44,5,Sat Jul 18 11:02:13 2015 UTC,"Folderizer. I download a lot of TV shows, pretty much every day. But my Torrent program doesn't put them into their proper folders, I could refolder every episode I download every day in my torrent program, but fuck that shit.  So I made a simple python program that finds episode files, put them all in their proper folder (makes a folder if its a new show), and deletes all the excess files.  Its a good exercise, I recommend it for anyone that doesn't know what a folder walk is.  PS: I happen to be a major shareholder in Viacom, Disney and HBO, so I am technically an owner of all the shows I download and so I can do it legally."
learnpython,3dkgpe,Exodus111,4,Fri Jul 17 10:23:49 2015 UTC,No copyright theft indended.
learnpython,3dkgpe,fameistheproduct,1 point,Fri Jul 17 10:32:39 2015 UTC,technically
learnpython,3dkgpe,flowerpowersupergirl,5,Fri Jul 17 14:06:33 2015 UTC,I used to play eve-online and I made an app to gather data from a site collecting market data from players to get a grasp on where are the main trading routes. The result was used to prepare piracy 0:-)
learnpython,3dkgpe,This_Is_The_End,4,Fri Jul 17 14:17:38 2015 UTC,"Honestly probably the biggest time-saver I have ever written in python was as a college instructor. I wrote a GUI that took a multiple choice exam and answer key and created as many randomized versions as I wanted. That way every student has a different version of the test from everyone sitting in front, behind, and on either side of them. Pretty simple,  but doing it by hand takes way too long."
learnpython,3dkgpe,goodygood_274,3,Fri Jul 17 15:09:46 2015 UTC,"I use sshfs a lot, so I wrote a program for automatically executing commands on the remote server whenever I ""cd"" into an sshfs mount point. Now I don't need to keep a separate terminal window open for running commands on remote servers, and this also makes it easier for me to develop software on a remote server; I edit file using my local text editor then when I run something like ""make,"" it gets compiled using the remote server's resources instead of the local system."
learnpython,3dkgpe,ericpruitt,3,Fri Jul 17 01:54:36 2015 UTC,"My wife always loses her cell phone and asks me to call it so she can find it, so yesterday, I wrote a small script that monitors a gmail account for the subject 'Where is my phone?"". If the email was from her address, it will call her phone. Now she isn't bugging me every 15 minutes."
learnpython,3dkgpe,sankacoffee,4,Fri Jul 17 16:07:36 2015 UTC,"If you have an android phone linked to a gmail account, you can ask google ""where is my phone?"", and a google map with the location of the phone appears, even with a button for ringing the phone."
learnpython,3dkgpe,linus_rules,6,Fri Jul 17 21:14:34 2015 UTC,Not really an app but I made a program to do all the stuff I had to do with vectors at the beginning of my math class this summer like cross products and dot products and all the other stuff I had to do and I just finished a program that does Riemann sums that I can use as an impromptu definite integral calculator.
learnpython,3dkgpe,BlueSubaruCrew,3,Fri Jul 17 02:04:15 2015 UTC,You should look into sagemath.
learnpython,3dkgpe,helasraizam,1 point,Fri Jul 17 06:10:35 2015 UTC,will do.
learnpython,3dkgpe,BlueSubaruCrew,0,Fri Jul 17 14:33:54 2015 UTC,Are you worried about doing worse on tests since you won't have the program?
learnpython,3dkgpe,GenericHbomb,4,Fri Jul 17 12:25:03 2015 UTC,One nice thing about writing programs is that it usually requires a decently deep conceptual understanding of the process you are automating. As long as he (or she) doesn't abuse it too much they may have come out ahead understanding wise.
learnpython,3dkgpe,SirSourdough,2,Fri Jul 17 13:17:01 2015 UTC,Not really. The vector stuff is pretty easy math it was just really tedious to do it on the homework so many times and I've done more definite integrals than I can count and usually the ones I have to do aren't too bad. I'm also pretty sure if I didn't have solid understanding of the stuff I wouldn't have been able to make them in the first place.
learnpython,3dkgpe,BlueSubaruCrew,-2,Fri Jul 17 14:33:34 2015 UTC,Onf those were some big words [6]
learnpython,3dkgpe,GrossItsYouAgain,6,Fri Jul 17 04:37:06 2015 UTC,"The first thing I wrote without some sort of external input or inspiration, was a clash of clans calculator. I wrote it during my two-hour long business organizations class in law school. I actually learned a lot of programming in that class"
learnpython,3dkgpe,chrometoucan,1 point,Fri Jul 17 02:24:33 2015 UTC,What does it actually calculate?
learnpython,3dkgpe,green957,1 point,Fri Jul 17 17:18:26 2015 UTC,"Oh sorry forgot that. It just calculates the cost of a certain army, but you could input any unit, number, and level. Helpful for knowing the cost/benefit of raids"
learnpython,3dkgpe,chrometoucan,1 point,Fri Jul 17 18:38:03 2015 UTC,Why did you make that?
learnpython,3dkgpe,malpalmalpal,2,Fri Jul 17 18:32:39 2015 UTC,To impress this registered dietician I know
learnpython,3dkgpe,chrometoucan,1 point,Fri Jul 17 18:44:32 2015 UTC,*dietitian i believe is how it's spelled..............
learnpython,3dkgpe,malpalmalpal,-2,Fri Jul 17 18:52:55 2015 UTC,Okay you just earned a downvote
learnpython,3dkgpe,chrometoucan,-1,Fri Jul 17 20:17:56 2015 UTC,No. Don't do that.
learnpython,3dkgpe,5225225,2,Fri Jul 17 21:21:19 2015 UTC,"I wrote a Python app that takes in a list of hostnames and process IDs, one hostname and pid per line. I read in line by line and use subprocess.check_output() to ssh to the host and find out the user that owns the process. The one real cool thing is sometimes the pid that my coworker gives me in the input data isn't the real pid, so I need to check some weird java -Dcom.company.exec.pid=<fake_pid> condition if the pid I am looking for isn't found."
learnpython,3dkgpe,dahveed311,2,Fri Jul 17 00:24:22 2015 UTC,"I wrote a program that lets me define my music playlists the way I want to. The program reads the playlist file and either queues up the songs in my music player, copies them into a folder I specify, or concatenates them into a single audio file. In addition, since these playlists are made of queries that dynamically match songs in my library, they might change when I add music to the library or fix tags of existing music, so the program notifies me when a playlist produces a different set of songs than it usually does (and then I can tweak the playlist if necessary).  https://github.com/kalgynirae/rockuefort"
learnpython,3dkgpe,kalgynirae,2,Fri Jul 17 03:52:34 2015 UTC,I wrote an Evernote-like app that makes it a little easier to store any cool or useful bits of code I have and to search through and find them later. Especially useful when I have multiple files I want to keep together
learnpython,3dkgpe,teenageguru,2,Fri Jul 17 05:05:07 2015 UTC,/u/MassdropBot after seeing many people who don't understand the website at it's first glance (which they are bad in.)
learnpython,3dkgpe,DarkMio,1 point,Fri Jul 17 07:27:44 2015 UTC,Maybe you should change the site instead (if it's yours).
learnpython,3dkgpe,road_laya,2,Fri Jul 17 14:02:35 2015 UTC,"Massdrop ain't mine, I am just a consumer. Thing is, if they would market it even more open, then they might get legal issues. As for now, they're basically saying that they're a private club and a tool to organize purchases from the manufacturer (which is especially cheap).  And since they have to show how their site works and what they do, they have a developer backdoor on many sites, which this bot can abuse. The bot runs over /r/all, checks if there is a massdrop site I can give people access to and posts a relevant link.   That bot itself is poorly written (I started programming back then) and I am mostly done with a full reprogramming (there is just little time, since I have university finals and deadlines). His output will change too, informing people about the drop and updates comments when the pricetag gets cheaper and stuff like that. Yet I am proud that he survived a year without major fuckups and is well received."
learnpython,3dkgpe,DarkMio,2,Fri Jul 17 14:36:36 2015 UTC,"I'm not a programmer, so pretty much all I write is to make my life easier  Like some other people I wrote a script to rename series episodes (anime specifically because Sonarr doesn't work very well sometimes)  I wrote a wrapper for the livestreamer app so I can open twitch streams much more easily  I wrote a ping thing that informs me of my PC status via twitter  When I was learning I wrote a script to automatically download /r/dailyprogrammer challenges in a nice way..."
learnpython,3dkgpe,teerre,2,Fri Jul 17 12:07:15 2015 UTC,"I built a little budget app. It adds our monthly budget to each category, and I input my spending in it to keep track of what I have left. It also creates a log file of everything I spend."
learnpython,3dkgpe,2ndchoiceusername,2,Fri Jul 17 12:29:29 2015 UTC,"A web scraper that I can use to download a bunch of files from a CSV of URLs github.com/FreddieV4/VScraper   Originally it only scraped PDFs so I could download my professor's lectures, but then I started thinking of other stuff I could get (videos, images, audio, etc etc).   Still bug fixes to be made though :D"
learnpython,3dkgpe,Freddie_V4,2,Fri Jul 17 12:46:45 2015 UTC,"I wrote three packages in that sense:   GetGist: I download .vimrc, .bash_rc and my uBlock easily from the command line in any computer. AlchemyDumps: this together with a task scheduler such as cron and I don't have to worry about database backups anymore (works with Flask and SQLAlchemy). sortimages: When my Dropbox Camera Upload folders grow too big, I can organize it and clean it up easily."
learnpython,3dkgpe,cuducos,2,Fri Jul 17 13:44:45 2015 UTC,"I’m a total dilettante, but I use my little script to resize pictures in a folder to a target max width very often when blogging pics of the kids. I used to resize them one by one with gimp, which gets tedious."
learnpython,3dkgpe,MekkaGodzilla,2,Fri Jul 17 14:54:27 2015 UTC,I wrote a basic CRM in flask that I use everyday for work. It's hosted on a banana pi in my living room. There are many platforms I could have used instead of writing my own but I thought it would be fun. Plus I don't have to worry about my data being locked in to one vendor.
learnpython,3dkgpe,czech1,1 point,Fri Jul 17 15:22:28 2015 UTC,This sounds awesome!
learnpython,3dkgpe,cajuncape,1 point,Fri Jul 17 17:57:21 2015 UTC,Cool. Care to share some more info?
learnpython,3dkgpe,Smartare,1 point,Fri Jul 17 19:41:47 2015 UTC,"Sure. The database is mysql and queries are done with sqalchemy. Gunicorn runs the flask backend and nginx points to gunicorn and serves static content. The front end is mostly HTML with bootstrap and some JavaScript to do calendar stuff. The os is arch linux.   The CRM allows me to keep track of what I've done with each client. A client's profile page has ""pending events"" with a due date and ""completed events"" that are time stamped from when they were ""completed"". The home page is a list of all ""pending events"" that have a due date of today or earlier. I hard coded in some custom reports to keep track of upcoming birthdays etc..    It's kind of hard to put the workflow into words, sorry if that's confusing."
learnpython,3dkgpe,czech1,1 point,Fri Jul 17 20:19:38 2015 UTC,Cool. Anything you tried that you then realized was a bad idea so I can avoid it?
learnpython,3dkgpe,Smartare,1 point,Sat Jul 18 06:21:07 2015 UTC,"Yeah, i am still learning though so take it for what it's worth.   Use sqlalchemy. This gives you the flexibility to  more easily host your app anywhere.   Follow a design paradigm. I used the first few chapters of Miguel Grinbergs ""mega flask tutorial"" as a jumping off point. Before I considered flask for this project I wrote 600 lines of php in one monolithic file (first time with php) what a mess.   Doing it in php first was a blessing and a curse. I was able to quickly put together my ideas and allow them to evolve. What I ended up with was much different than I originally conceived. Then I realized there are 100 ways to do things in php and the way I chose was the least secure.   Also, if you're going to have multiple users accessing your app you need to implement locks so wonky things don't happen to your db."
learnpython,3dkgpe,czech1,1 point,Sat Jul 18 12:21:49 2015 UTC,Thanks! I'm still learning too so this is great. Haven't yet found a CRM that meets my needs so this will be a perfect project to build something useful and learn at the same time.
learnpython,3dkgpe,Smartare,2,Sat Jul 18 12:34:32 2015 UTC,"Tons and tons of little ones for all sorts of purposes. Sometimes they grew to slightly bigger projects (though still firmly in script territory), like a script that takes an mp3 file and an image and uploads them as a video to Youtube automatically.  As soon as you're even slightly familiar with a programming language, the sky's the limit and you'll find that it's very easy to find new ways to put your skills to use."
learnpython,3dkgpe,dada_,2,Fri Jul 17 15:27:28 2015 UTC,"I'm a soon to be Civil Engineer and I use AutoCAD Civil 3d for road design. the program gives me reports that I copy in excel but I want them in an specific format; before It use to take me like 20 minutes, now I just specify the file name and location, and some report variables and Boom! I started learning Python about 10 days ago, I wrote the script yesterday."
learnpython,3dkgpe,Inmute,2,Fri Jul 17 20:03:41 2015 UTC,"I'm a backend guy, and all of my project have a cli.py that makes my life easier.  As an example, right now I'm in a project where most of my work is developing a REST-like API for mobile apps. I have a commandline app that does most of the things the mobile app does, but it's much more convenient.  The app creates some entities using some lists fetched from the server. These are presented to the user, they make some choices, add some dynamic fields etc. It's great to have a tool that creates semi-random stuff in one command instead of tapping through the real app.  A sweet spot between unit/functional tests and actually using the app.  We can have a create-post command that posts something in a section with id 1, logging in as alice, fetching existing tags and using a random set. Post body is random by default:  ./cli.py create-post 1 --user alice --random-tags"
learnpython,3dkgpe,buleria,2,Fri Jul 17 20:39:09 2015 UTC,"Webpage-Lister a WIP application that just stores webpages into json files.  Using it to store manga sites from batoto and various light novels from various sites. It also stores the last chapters and volumes I've read.  Though it has a lot of manual work and it's definitely not that great, it definitely makes my life easier."
learnpython,3dkgpe,ElecNinja,1 point,Fri Jul 17 01:43:09 2015 UTC,"Every time I forget to mount the drive before launching OpenMW it deletes the current profile from the configuration file.  I created a python script that opens launcher.cfg and re-adds the missing lines.  Nothing fancy, but it saves me a bit of time and effort."
learnpython,3dkgpe,abcd_z,1 point,Fri Jul 17 06:01:47 2015 UTC,I created a script which clears all the .torrent files in my download folder hourly. I would use magnet links but I can't on my private trackers.
learnpython,3dkgpe,Fragmentalist,1 point,Fri Jul 17 08:30:06 2015 UTC,"I use python to do the scheduling for a specific task in our group. Each day that the task needs to be done is pulled from a spreadsheet indicating this, then the script assigns a pair randomly drawn from a uniform distribution so that everyone has equal share, while taking in to mind their constrains, which they email to me over the month, and I enter in to an array manually, and it finally publishes the outcome to our google calendar and our spreadsheet. Though, I have it print the monthly calendar to me when I run it, and I confirm that the ""random"" looks random enough so that people won't complain about being scheduled 4 days in a row or 8 times in a month or something, so I press random a few times until it looks random enough.."
learnpython,3dkgpe,astro_nova,1 point,Fri Jul 17 12:17:34 2015 UTC,I wrote a simple script that takes all my desktop backgrounds and shuffles them by changing the file name (which is just a number). The windows shuffle antilogarithm doesn't actually work for what ever reason so this was my way of getting around that issue.
learnpython,3dkgpe,if_name_-equals-main,1 point,Fri Jul 17 16:05:56 2015 UTC,"I wrote a full desktop app for crypto currency trading.   It connected to about 10 different exchanges and let me monitor rates in real time.   It had price alerts to let me know when min or max thresholds were passed.  It had several functions to calculate various arbitrage across the exchanges and give me reports on what to trade. This is where I made most of my money.  And of course, It let me do actual trading through the app.  I had started to write some automation to execute trades based on certain rules but I lost interest in trading about that time."
learnpython,3dkgpe,99AFCC,1 point,Fri Jul 17 17:45:11 2015 UTC,"Reddit saved image bulk downloader  WIP scripts that do some stuff from command line like check domain availability, check cheeseshop name availability & create/clone a git repo & submit to pypi."
learnpython,3dkgpe,skunkd,1 point,Fri Jul 17 18:19:21 2015 UTC,"I made one for work that queries and spits out a bunch of register settings from an ASIC I work with frequently. It takes me about 1 minute to get the settings to all the registers. Before, going through each register with the datasheet in-hand, it would take me over an hour."
learnpython,3dkgpe,Seventytvvo,1 point,Fri Jul 17 18:55:38 2015 UTC,"Wrote script run daily by a cronjob that automatically detects stray processes on our compute nodes, logs them, and allows me to kill the stray processes later on.  For context, I work at a supercomputing center."
learnpython,3dkgpe,kohis,1 point,Fri Jul 17 19:03:11 2015 UTC,I created a cron job manager that polls my google calendar
learnpython,3dkgpe,batoure,1 point,Fri Jul 17 19:41:31 2015 UTC,"I wrote a script that scrapes all of my son's grades from Edline and graphs them by subject over the quarter. Next I am going to add to it so that it texts my wife and I when a new grade is posted since some subjects go 7-10 days without an update.  It is nice since Edline only shows one subject at a time and does not show all current grades on one page, just by each subject."
learnpython,3dnxpi,Manchmal,2,Fri Jul 17 20:29:50 2015 UTC,"To sort by multiple values, the easiest is to make a list of tuples. Lists of tuples are automaticallly sorted by the first value. If the first value is equal, the second is used, etc ...  >>> tup_list = [(3,'a','bobby'), (2,'b','sue'), (2,'a','jimmy')] >>> sorted(tup_list) [(2, 'a', 'jimmy'), (2, 'b', 'sue'), (3, 'a', 'bobby')]"
learnpython,3dnxpi,novel_yet_trivial,1 point,Fri Jul 17 20:39:54 2015 UTC,I'll try that Monday and get back to you!
learnpython,3dnxpi,Justinsaccount,1 point,Sat Jul 18 00:05:57 2015 UTC,"Worked perfectly. Thank you, sir."
learnpython,3dnxpi,Rhomboid,1 point,Mon Jul 20 13:57:13 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3dmt2j,CauchyRiemanns,3,Fri Jul 17 15:25:13 2015 UTC,"Maybe you should check out Kivy, it is a python library for creating applications (including Android apps)."
learnpython,3dmt2j,rgbtap4android,1 point,Fri Jul 17 17:22:10 2015 UTC,thanks for this resource /u/CauchyRiemanns
learnpython,3dmt2j,novel_yet_trivial,2,Fri Jul 17 18:08:22 2015 UTC,"A programmer once told me how almost anything is possible with an Object oriented programming language, like Python for example.    In all honesty though, and PLEASE do not take this the wrong way, but I think this question would be better answered on the learn hacking subreddit."
learnpython,3dmt2j,hotmailer,1 point,Fri Jul 17 16:28:07 2015 UTC,"no offense taken, I just had assumed it would be better suited for this subreddit as I would be relying more heavily upon the python code instead of hacking.    but thanks for the response and if this doesn't gain ground here, I'll transition over to the hacker forums."
learnpython,3dmsfj,six-speed,3,Fri Jul 17 15:20:22 2015 UTC,"The problem is the word that's being tested, not any difference in your computer and CodingBat. The IndexError comes from this code snippit: str[i+3] == 'e'. Because it comes after an and statement, it's only executed if the first part of the and statement is true. If you tried the string ""codingbatco"" it would fail on your local computer as well.   Also, in general, why would you want to take anything less than the full range of the length of the string when looping through a string?   Get a piece of paper, write an example string on it, and block off how many substrings you can make from it. Then this will make sense."
learnpython,3dmsfj,novel_yet_trivial,1 point,Fri Jul 17 15:30:15 2015 UTC,"Thank you for your answer. The first part makes complete sense regarding the boolean 'and'     setting the logic such that it only runs if the first part of the statement is true.  I am still struggling with the second part of your answer. For example, say my string is 'code'. This has a length of 4. The smallest substring I can make would have a length of 1. Is this where the -3 in     range(len(str)-3)  comes from? I still don't understand why you would want to limit the range of the loop to less than the full length of the string. Thanks again for your help!"
learnpython,3dmsfj,novel_yet_trivial,2,Fri Jul 17 15:50:45 2015 UTC,"The range you are looping over is the number of 4-letter substrings you can make. As you point out, a 4-letter word only has one possible substring. A 7-letter string has 4 possible substrings to test.  code --> code codeing --> code, odei, dein, eing  There is a relationship between the length of the original string and the number of substrings you can make."
learnpython,3dmsfj,Wrathofvulk,1 point,Fri Jul 17 16:00:52 2015 UTC,Thank you!!
learnpython,3dmsfj,novel_yet_trivial,2,Fri Jul 17 17:18:01 2015 UTC,"Because you are indexing into i+3...  If you have a length 4 string, your indexes are 0-3. You get an out of bounds error if you try to index into 4+ because those don't exist..."
learnpython,3dmsfj,JustTurrble,3,Fri Jul 17 16:31:25 2015 UTC,"Also, do not use ""str"" as a variable name, since it's already a built-in name in python."
learnpython,3dmsfj,ewiethoff,3,Fri Jul 17 15:47:26 2015 UTC,"If you're interested, this same problem can be handled by regular expressions:  import re  def count_code(input_str):     pattern = re.compile(r'(co[a-zA-Z]e)')     results = pattern.findall(input_str)     return len(results)   Edit: corrections, thanks to /u/ewiethoff"
learnpython,3dmsfj,hudsonpenner,1 point,Fri Jul 17 18:09:35 2015 UTC,"we'll accept any letter for the 'd'   Yay, my first thought is a regex. r'co[a-zA-Z]e' will accept any (ASCII) letter. Oh, and the method is findall, not find_all."
learnpython,3dmsfj,Justinsaccount,1 point,Sat Jul 18 04:11:54 2015 UTC,"To avoid that issue, maybe think about using regex with the re module? This would also make cleaner, more readable code. If you must stick with examining the characters of the string, you could check the length of the string first with len."
learnpython,3dm4b6,freakzilla149,18,Fri Jul 17 11:26:50 2015 UTC,"A function that runs in ""linear time or better"" certainly also runs in ""n squared time or better"" also.   i.e.  1 is less than or equal to 1. It's also certainly less than or equal to 2"
learnpython,3dm4b6,madwilliamflint,9,Fri Jul 17 11:37:06 2015 UTC,"Ah! I see. That was a simple explanation. Thank you.  Technically, I could say that my above function is O(n2), because its growth rate is ""quadratic or less"". I say that it is O(n) because it's a tighter upper bound, more accurate."
learnpython,3dm4b6,robotsari,4,Fri Jul 17 12:02:06 2015 UTC,"Exactly right. You want to give the tightest bound you possibly can. Good question, it's definitely a hard point to wrap your mind around."
learnpython,3dm4b6,madwilliamflint,3,Fri Jul 17 12:34:22 2015 UTC,"Thanks for your help. Probably just my lack of any previous math/science background catching me out.   Now that I think about the definition of ""upper bound"", it makes sense."
learnpython,3dm4b6,MLGsallados,1 point,Fri Jul 17 12:45:09 2015 UTC,"Absolutely.  Remember that these are usually ""worst case"" estimates.  So... anything better qualifies."
learnpython,3dm4b6,mrmuagi,-1,Fri Jul 17 13:16:30 2015 UTC,I think I know some of these words
learnpython,3dm4b6,Brian,3,Fri Jul 17 12:50:37 2015 UTC,"Big-oh does not representative a type of case automatically, but we assume that we are working with the worst case since it's the one we generally care about. We can use best case big-oh, average case, etc.  If you don't want the math of it, big-oh is just an upper bound. If something is O(n), it is also by definition (the math one) O(n2 ), O(n3 ). Now this gives multiple answers and might be confusing.  So now, we also specific quite often that we want the tightest big-oh bound. So O(n) is what we would return, ignoring O(n2 ), O(n3 ).   Now I apologize if this doesn't make sense, but basically plain English is sort of a poor descriptor for big-oh, since it's a mathematical definition. If you are comfortable drawing graphs, try tackling it visually and draw a function like f(x) = x. Notice how the function is in big-oh of g(x) = x2 and h(x) = x3 after x = 1.  Does that help? Let me know if it doesn't."
learnpython,3dm4b6,mrmuagi,3,Fri Jul 17 11:39:13 2015 UTC,"but we assume that we are working with the worst case since it's the one we generally care about   Actually, I find this is frequently untrue.  Often average case is by far the more useful (the exception being things like realtime programming or some security cases where guaranteeing a minimum is really important), and it's frequently the one being referred to when people make off the cuff descriptions without specifying which case they're referring to.  Eg. you'll frequently see people referring to things like quicksort as O(n log n), despite the usual implementation actually being O(n2) worst case, or hash table lookups being referred to as O(1), despite being O(n) worst case.    I suspect a lot of the reason people prefer analysing the worst case rather than average is not that we care about it, but more because it's a lot easier to work out, and less ambiguous - ""average case"" can be somewhat slippery just to define what we mean by it, since you need to decide exactly what an average input is.  Eg. for a sorting algorithm, is it perfectly random data, or do we try to measure real-world usage patterns, where there's often some prior order?  Often it won't make more than a constant factor difference anyway, so no real effect, but those ambiguities make the question a lot less straightforward."
learnpython,3dm4b6,Brian,2,Fri Jul 17 15:39:44 2015 UTC,"Ah that's a good perspective, especially for the hash table. I agree with it being easier to work out as well, as that's the type of analysis we were first taught in algorithms and data structures. I'm only a couple courses in, but I find average case way more fun since it usually involves statistics and probability, ie. calculating the average case for quicksort was more challenging than the worst case.  However that makes it a bit harder to calculate right?   Though I heard that worst/best case was pretty useful when dealing with circuits, and cases where you needed to guarantee that something doesn't arrive to fast or too late."
learnpython,3dm4b6,Brian,2,Fri Jul 17 21:11:24 2015 UTC,"Isn't big O supposed to represent the worst case   Actually, no.  This is a common error, but ""upper asymptotic bound"" and ""worst case"" are really different criteria that a lot of people confuse.  Big O notation can be applied to worst case, average case, best case, or pretty much anything - it describes something about how the function grows, while ""worst case"" is generally referring to what the function is representing, which is independant from the maths.  O(n) is not about defining a worst case.  O(n) (to simplify a bit) represents the set of functions that grow no faster than n, once n becomes big enough.  Ie. it gives an upper bound on the asymptotic complexity - and if something is an upper bound on something else, then clearly a bigger value is also an upper bound.  Ie. saying a function that is in O(n) is also in O(n2) or O(n3) is basically similar to saying that if x is less than or equal to 2, then it's also less than or equal to 3 and 4.  Likewise if a function grows no faster than n, then clearly it can't grow faster than n2.    (To be more technical, O(f(x)) is the set of functions, g(x), for which we can pick some constant (K), and some threshold (T) such that g(x) <= K f(x) for all values of x > T ).  Ie. once x gets sufficiently large, your function is never bigger than a constant factor times f(x).)  One thing that can be confusing is that people often use O(n) as if it were ϴ(n) - the set of functions that essentially grow at the same rate as n, where no matter how far along you go, you can always pick a pair of constants K and L where your function is no more than K times smaller, and L times larger at all points greater than this value.  O(n) is only half of this claim - bounding on the upper side.  Of course, it's always technically correct to say something is O(n) when it's in ϴ(n), but it isn't usually isn't conveying as much information as intended (since they'll often know that it's not in Ω(n2) etc."
learnpython,3dm4b6,repsilat,1 point,Fri Jul 17 15:25:14 2015 UTC,"I'll need to learn a bit more math to fully grasp the last paragraph but I think I get the gist of what you're saying.  Once the size of the input is bigger than a certain threshold, the upper bound of the function becomes the size of the input (ignoring O(1)), so something bigger than n can be the upper bound too, it just isn't as tight/accurate.  Am I getting that right?"
learnpython,3dm4b6,Brian,2,Fri Jul 17 15:44:15 2015 UTC,"More or less.  The only slight caveat is that we don't care about constant factors - ie. it doesn't have to be bounded by the function, it's sufficient if we can say it's bounded by 5 times the function, or 100 times the function.  Eg. f(x) = 2n+10 is in O(n), even though there's no point at which 2n+10 is ever smaller than n, but there is a point where it's always smaller than 3n, which is why it qualifies.     it just isn't as tight/accurate.   Yes.  There is actually a name for the more tight/accurate bounds, which is referred to as Big Theta.  ie ϴ(n) means n is both an upper and a lower asymptotic bound, so it's basically as tight as you can specify.  I'm not sure why saying just O(n) caught on, rather than using ϴ(n) when you want to communicate those tighter bounds, but it's just one of those quirks of programming culture that everyone just talks about big O.  (And for the record, there's also Big Omega, which refers to the lower bound, but not the upper, and ""small o"" notation, which is the functions that grow strictly slower - ie. they're in O(f(x)) but not in ϴ(f(x))."
learnpython,3dm4b6,repsilat,1 point,Fri Jul 17 16:06:28 2015 UTC,"I'm not sure why saying just O(n) caught on, rather than using ϴ(n) when you want to communicate those tighter bounds,   Mm. Can be good to note, though, that some functions don't even have a big-theta worst case running time. For example, if you have a decision algorithm for something that is trivially false for odd-sized inputs, and non-trivial to check for even-sized inputs, your algorithm's worst case running time  might be (say) Omega(n) and O(n3), but not Theta(g(n)) for any g."
learnpython,3dm4b6,WolframAlpha-Bot,1 point,Fri Jul 17 18:12:37 2015 UTC,"I don't see why that would be a particular problem for Theta.  The odd sized input is irrelevant if we're just looking at worst case performance, so it comes down to the even-sized inputs.  We've already established it's O(n3 ), so the only further step in establishing that it's also ϴ(n3 ) is showing that it's also in Ω(n3 ).  If we already have a function describing the steps it takes in worst case, the same as we'd have used to establish O, then that shouldn't be too much of a problem, and certainly the trivial cases don't present a problem."
learnpython,3dm4b6,Brian,1 point,Sat Jul 18 07:04:41 2015 UTC,"The ""worst-case running time"" is just a function like any other. At each point in its domain we do a separate max over all inputs of that size (""of that many bits"" or ""with that many nodes"" or however we parametrise it.) There's no special fiddling to keep the function monotonic.  Because it's computed for each input size separately, the running times of the odd-sized inputs don't appear in the same max with any even-sized inputs, and the function is jagged -- the worst-case running time of the algorithm on input of size 100 is 1,000,000, so f(100)=1E6, but on size 101 there is no input that makes it run longer than 101 time steps, so f(101)=101.  (Of course, it's possible to come up with less practical examples. There's no big-theta bound for x sin2 x, for example.)  EDIT: Erm, of course x sin2 x is ϴ(x sin2 x)... Don't know what I was thinking there..."
learnpython,3dmi8n,neekankakanbraeen,1 point,Fri Jul 17 13:57:20 2015 UTC,"It is how I learned.  You aren't likely to pick up any bad habits from it.  Python 3 is really not that fundamentally different than python 2, especially at the level covered by the book."
learnpython,3dmi8n,TheBlackCat13,1 point,Fri Jul 17 14:11:45 2015 UTC,"I started with Think Python and moved to Lutz's second book after, so I haven't read his Learning Python. I can attest to Lutz's quality. His writing is clear, and he explains things perfectly for me. I'd be willing to recommend anything he writes for Python."
learnpython,3dmi8n,ryeguy146,1 point,Fri Jul 17 15:34:36 2015 UTC,"You can get some opinions on Learning Python here  It is a good book, but it is very long."
learnpython,3dmi8n,projecktzero,3,Fri Jul 17 17:16:01 2015 UTC,Long is an understatement.
learnpython,3dmi8n,kurashu89,-2,Fri Jul 17 22:43:58 2015 UTC,Yes.
learnpython,3do1l2,Simpfally,2,Fri Jul 17 21:00:31 2015 UTC,Very easy: https://docs.python.org/2/library/json.html
learnpython,3do1l2,novel_yet_trivial,2,Fri Jul 17 21:02:10 2015 UTC,"Great, thanks. I know it was a stupid question hehe."
learnpython,3dmmju,-2bR02b-,2,Fri Jul 17 14:33:19 2015 UTC,"Well, if you mean not to use a list, then you're going to have to forego using str.split - it returns a list of strings. At this point, you're going from the practical to the absurd, since you'd never actually want to avoid a function because it returned one kind of iterable rather than another, so here are a couple of thoughts:   Rather than using Python's builtin list, you can end up using a pair type to fake it. This is the way that Lisp works - a list (1 2 3 4 5) is equivalent to a series of nested pairs (1 (2 (3 (4 (5 ()))))), which you should be able to easily flatten to a tuple. I suggest this, because a tuple is essentially an immutable list, and you might as well get as far away as possible from a list. If you're avoiding str.split, you're going to have to roll your own string splitter. You still don't really need the N in this case, since the numbers are given on their own line."
learnpython,3dmmju,adamnew123456,1 point,Fri Jul 17 15:06:36 2015 UTC,N = int(raw_input()) foo = [int(x) for x in raw_input()]   Your welcome.
learnpython,3dmmju,DarkMio,2,Fri Jul 17 14:53:31 2015 UTC,"foo = tuple(int(x) for x in raw_input().split())   Your suggesting works for me with a small change. So thank you!  I was looking for a way to create a tuple from input like this.  12 34 56 67 78 (12, 34, 56, 67, 78)"
learnpython,3dmmju,NewbornMuse,2,Fri Jul 17 15:01:25 2015 UTC,"This is probably the most pythonic solution. It's a single line, it uses a generator expression, it's immediately clear what you want to do."
learnpython,3dmmju,DarkMio,1 point,Fri Jul 17 21:07:45 2015 UTC,"Oh, that's my mistake, I thought they were seperated, but they're not. Glad it works for you."
learnpython,3do4pd,zombie2870,1 point,Fri Jul 17 21:25:01 2015 UTC,"what value are you attempting to remove? I'm very new to the python language, but is entering a null value possible?    for example, if you don't want lets say the number 89 to be used, can't you null it? or null doesn't function like that?"
learnpython,3do4pd,novel_yet_trivial,1 point,Fri Jul 17 21:55:14 2015 UTC,You can remove values with pop(). Which value do you want to remove?   numbers.pop(0) #removes the first value numbers.pop(-1) #removes the last value
learnpython,3do4pd,OCHawkeye14,1 point,Fri Jul 17 21:55:20 2015 UTC,"Depends on what your lists look like.  If you know the item is in the list and that it's only there once, then list.remove() will do the trick.  l1 = ['a', 'b', 'c'] print l1 l1.remove('b') print l1   output:  ['a', 'b', 'c'] ['a', 'c']   If the item is not in the list, though, you'll get ValueError: list.remove(x): x not in list If the item is in the list more than once, it will only remove the first instance. So input: ['a', 'b', 'c', 'b'] above would output: ['a', 'c', 'b']  You could alternatively do a list comprehension if there are more than one occurrence of what you are trying to remove:  l2 = ['a', 'b', 'c', 'b'] print l2 l2 = [ x for x in l2 if x != 'b' ] print l2   output:  ['a', 'b', 'c', 'b'] ['a', 'c']   This has the added benefit of not crashing if you try to remove something that isn't in the list."
learnpython,3do4pd,dunkler_wanderer,1 point,Fri Jul 17 22:24:27 2015 UTC,"Do you simply want to skip numbers when they are entered?   numbers = [] for count in range(3):     print('please choose 3 numbers ')     add = input()     # Skips all fours.     if add != '4':  # Or to skip more: if add not in ('1', '2', '3'):         numbers.append(int(add))"
learnpython,3dmddz,YuntiMcGunti,3,Fri Jul 17 13:12:00 2015 UTC,"Two reasons.  First, the asserts are captured by the unittest module as failures while regular asserts are treated as exceptions.  Second, they automatically provide more informative messages about what went wrong."
learnpython,3dmddz,TheBlackCat13,2,Fri Jul 17 13:14:11 2015 UTC,"Normal asserts are caught and treated as failures, you just dont get the benefit of the helpful messaging :  FAIL: test_upper (__main__.TestStringMethods) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""test.py"", line 7, in test_upper     assert False AssertionError  FAIL: test_upper (__main__.TestStringMethods) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""test.py"", line 7, in test_upper     self.assertTrue(False) AssertionError: False is not true   Is there something elsewhere in the unittest framework where the difference is palpable?"
learnpython,3dmddz,oldpythonbestpython,2,Fri Jul 17 13:53:24 2015 UTC,"Thanks for the great answers, that's really helpful - I thought there had to be a good reason somewhere."
learnpython,3dmddz,jibbly_jibbly,2,Fri Jul 17 18:11:45 2015 UTC,"They are there to give you tools to write well-explained, obvious test code.  You can use or ignore them, but lets say you ignore them, you'll get tracebacks like this:  FAIL: test_something (__main__.TestStringMethods)     --------------------------------------------------------------------- Traceback (most recent call last):   File ""test.py"", line 8, in test_something     assert thing > thing2 AssertionError   If you used assertGreater, the error is more helpful:  FAIL: test_something (__main__.TestStringMethods) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""test.py"", line 8, in test_something     self.assertGreater(thing, thing2) AssertionError: 2 not greater than 3"
learnpython,3dmddz,KronktheKronk,1 point,Fri Jul 17 13:58:00 2015 UTC,assert thing > thing2\nassertion error seems pretty clear to me
learnpython,3dmddz,jibbly_jibbly,1 point,Fri Jul 17 15:08:28 2015 UTC,"Im not arguing it isnt helpful, but getting a bit more info out of it saves you the initial work of needing to re-run the tests, adding pdb hooks, etc just to get the failure data out."
learnpython,3dmddz,KronktheKronk,1 point,Sat Jul 18 02:12:05 2015 UTC,"It really doesn't.  If the assert fails, it should be obvious that the assert was false."
learnpython,3dmddz,jibbly_jibbly,1 point,Sat Jul 18 12:43:09 2015 UTC,"Its a simple issue of information loss.  assert a is True   When it fails, with a simple AssertionError you will only learn the obvious: that a was not True.  It could have been None, False, or ""potato"". The exact value that you observe will be a part of debugging, so why not gain access to it from the test run itself?  A more verbose error would tell you additional information and lead to faster understanding.  AssertionError: ""potato"" is not True."
learnpython,3dmddz,werpoi,1 point,Sat Jul 18 23:45:05 2015 UTC,You should look into pytest. It is another testing framework very similar to unittest and allows you to do exactly what you are talking about.  http://pytest.org/latest/assert.html#assert
learnpython,3dmad0,turtledactyl,3,Fri Jul 17 12:40:18 2015 UTC,"In python 3 print is a function.  So you can do print(""I have words here %s"" % mydict['key']).  However, in your case it would be easier to use the new format method: print(""I have words here {key}"".format(**mydict))."
learnpython,3dmad0,TheBlackCat13,1 point,Fri Jul 17 12:45:56 2015 UTC,"Perfect.  ""format"" is the jam.  I appreciate ya and thank you kind sir!"
learnpython,3dkcw1,thedatacurator,1 point,Thu Jul 16 23:41:15 2015 UTC,X-post Subreddit Link: /r/python
learnpython,3dlvix,trancemsteve,1 point,Fri Jul 17 09:21:14 2015 UTC,"I would probably just do this with list slices, something like:  result = [data[x:x+8] for x in range(0, len(data), 8)]   You could use tuple(data[x:x+8]) if you want tuples. Note that the last list/tuple will have fewer items if the data list length is not a multiple of 8  edit: clarify"
learnpython,3dlvix,terminak,1 point,Fri Jul 17 09:50:47 2015 UTC,"Ah that's cool thanks   EDIT: works great now just trying to think it through what that line is actually doing. I'm think that the first part takes data from index 0 through 8 and puts them in a list. The for loop then does that same action for the rest of the big list until it doesn't find 8 pieces of data left. The final 8 would be how many steps to do at a time so I could have:  result = [data[x:x+7] for x in range(0, len(data), 8)]  And this would still for loop for every 8 bits of data but would only actually store the first 7.  This about right?"
learnpython,3dldir,absent_observer,1 point,Fri Jul 17 05:19:09 2015 UTC,"Found a solution.  Jonathan Vogel's website has code that does it.    The python tutor website doesn't support those imports, so my idea is out of luck.  But i'll leave the links up in case anyone's a masochist."
learnpython,3djk6w,id_30,3,Thu Jul 16 20:01:59 2015 UTC,i use GPSD a lot (http://www.catb.org/gpsd/client-howto.html) and the python bindings. Another way is to check by IP - python-geoip  You could also use bluetooth when you walk in - or check for wifi from your device.  Just some random suggestions from some projects Ive coded
learnpython,3djk6w,potent_rodent,2,Thu Jul 16 20:16:30 2015 UTC,Wait... where is it running? On a laptop? Off a usb stick or cloud synced directory?
learnpython,3djk6w,madwilliamflint,1 point,Thu Jul 16 22:24:41 2015 UTC,using a laptop with windows 8
learnpython,3djk6w,madwilliamflint,1 point,Fri Jul 17 01:02:50 2015 UTC,"Ah, okay. So you can't just detect machine name or something simple.  I couldn't figure out why no one suggested that. Makes sense."
learnpython,3djk6w,novel_yet_trivial,1 point,Fri Jul 17 02:15:42 2015 UTC,How about trying to login to your wifi router? Correct username / password == you're at home.
learnpython,3djk6w,Doormatty,3,Thu Jul 16 20:23:07 2015 UTC,Or even just check the MAC address of the router.
learnpython,3djk6w,novel_yet_trivial,1 point,Thu Jul 16 21:08:39 2015 UTC,Oooh great idea. Stupidly fast and easy.
learnpython,3djk6w,Doormatty,2,Thu Jul 16 21:13:54 2015 UTC,"while that does sound like the easiest thing to do, i have no idea how to go about doing that. any chances you guys would be kind enough to tell me?? haha"
learnpython,3djk6w,roddds,1 point,Fri Jul 17 01:04:30 2015 UTC,"http://robpickering.com/2013/08/using-hazel-python-lingon-and-arp-to-determine-if-a-device-is-on-your-network-1243  This is kinda what you want already, except it looks for a list of devices."
learnpython,3djk6w,novel_yet_trivial,1 point,Fri Jul 17 02:20:02 2015 UTC,Best suggestion in the thread right here.
learnpython,3dld36,pazzarpj,2,Fri Jul 17 05:14:31 2015 UTC,"Just make a simple webapp.  Use Bootstrap, Materialize, or another CSS framework if you so choose, and Flask or Bottle (pretty simple Python backend frameworks).  There will be a learning curve, but you should be able to figure out how to get a simple app running soon enough, especially if you have the majority of your program functioning already.  /r/flask is a good resource too"
learnpython,3dld36,Wrathofvulk,1 point,Fri Jul 17 07:47:32 2015 UTC,Thanks I will look into it.
learnpython,3dld36,Wrathofvulk,1 point,Fri Jul 17 08:02:39 2015 UTC,Subbed to flask. Love the look of Materialize. Got ideas spinning in my head. Also found the term server side events (sse) which looks to be my main roadblock before as I wanted to push from server and not pull from client.
learnpython,3dld36,LeftyDave,2,Sun Jul 19 23:14:10 2015 UTC,"What were you thinking of doing?  And yea, Materialize is made by a few guys from my school, it's a really awesome and relatively simple-to-use framework!  Let me know if you have any questions about Materialize or Flask :)"
learnpython,3dld36,elbiot,2,Mon Jul 20 01:51:59 2015 UTC,I use flask with python3 and think it might suit the purpose. I've also used test stand in a past job as an automotive software test engineer.   If you are at pyconau on the Friday head to the Django minicon. It's not entirely relevant though flask does borrow a little from Django. I'll see you there.
learnpython,3dld36,tripperjack,1 point,Fri Jul 17 08:44:20 2015 UTC,Yeah I was already looking at flask. I have started some tuts. It's the front end and ajax that I have trouble with
learnpython,3dk8wc,destruct0r9,2,Thu Jul 16 23:07:45 2015 UTC,"Check py2exe, cz freeze, pyinstaller"
learnpython,3dkcgh,ColbyHep55,2,Thu Jul 16 23:37:33 2015 UTC,Getting a 404.
learnpython,3dkcgh,Buttwallaby,1 point,Fri Jul 17 00:44:04 2015 UTC,works if you remove [1]
learnpython,3dkcgh,Vaphell,1 point,Fri Jul 17 00:52:04 2015 UTC,"Fixed, sorry."
learnpython,3dkcgh,an_actual_human,2,Fri Jul 17 01:45:09 2015 UTC,"Should I continue to add more [Stats, two player, etc] or should I give up on this mess and work on something else?   Should I get a puppy or a pizza? What kind of question is that? It's up to you.   I know you can break my game pretty easily right now but it just needs a couple of Try: and Except: blocks and it should be fine   Why don't you add them?    I've perused the code for a minute or so. A few random things:   It's poorly formatted. See https://www.python.org/dev/peps/pep-0008/. Some tuples are called lists. E.g. on line 222 you are creating a tuple called ship_list. You should really put parenthesis (or brackets if you want a list) explicitly. You can have multiline string literals surrounded by triple quotation marks. Multiple consecutive prints with explicit newlines are pretty ugly in my opinion."
learnpython,3dkcgh,nwilliams36,1 point,Fri Jul 17 00:53:17 2015 UTC,"Oh I was just asking that because I didn't want to continue implementing features if my code already needs a lot of changes.   Thank you for that link, I'll read up more on formatting in Python."
learnpython,3dkcgh,nwilliams36,2,Fri Jul 17 02:16:37 2015 UTC,"Your code has a lot of if statements which does lead to repetitive code which is long to write and difficult to debug.  This stack overflow comment discussed this issue  One way to remove these is to use Collections (Set, Dictionaries, Lists)  and search for the information in which to make a decision.  It does take a while to get use to this type of thinking (and not all ifs are bad) but its definitely worth the effort.   I know you can break my game pretty easily right now but it just needs a couple of Try: and Except: blocks and it should be fine   The purpose of Try block is to keep the program running and handle issues from external sources over which you have no control,  it should not be used fix errors within your program.  These errors should be fixed by your code design."
learnpython,3dkcgh,nwilliams36,1 point,Fri Jul 17 01:19:27 2015 UTC,"Huh, I'll have to read more into that.  Do you have any examples of using an if statement then not using one?   Oh yeah I know was going to put Try: and except: blocks around the spots where it gets input from the user. So if they entered a letter instead of a number and it raised an error I could tell them to enter a valid number, etc."
learnpython,3dkcgh,raylu,2,Fri Jul 17 02:14:25 2015 UTC,"Just a simple and trivial example, using your  code  Your code (slightly modified for this example)   def withif(choice):      if choice == '1':                  return 10      elif choice == '2':                  return 15      elif choice == '3':                  return 20       Without using if  def withoutif(choice):     choose={'1':10,'2':15,'3':20}     return choose[choice]   Test  print(withif('2')) print(withoutif('2'))"
learnpython,3dkcgh,raylu,1 point,Fri Jul 17 02:29:40 2015 UTC,"Ah okay thank you for that example, should I try to replace most if statements with this method?"
learnpython,3dkcgh,raylu,2,Fri Jul 17 02:54:42 2015 UTC,"Yes if you find it efficient.  There is still a place for the if statement, but be very wary of nested ifs or if chains, there is often a better way.  raylu advice about recursion is very good, recursion done well is an excellent technique, but you must ensure that you fully return from it.  Python has a definite limit to recursion depth (1000 I think)."
learnpython,3dkcgh,ingcake,1 point,Fri Jul 17 03:01:09 2015 UTC,Yeah I find myself using nested if statements frequently.
learnpython,3dkcgh,ingcake,2,Fri Jul 17 03:12:13 2015 UTC,"Recursively calling menu is a really odd way to write a loop. Also, you don't return the recursive call. Mutual recursion on single_p is a really brittle way to handle state transition. The usual way is something like  def main_loop(self):     while True: / while not game_over:         # get user input         # check guess         # manipulate game state, check game over  Line 314 can read else: On line 316, using is instead of == to check equality instead of object identity is risky.   The operators is and is not test for object identity: x is y is true if and only if x and y are the same object. x is not y yields the inverse truth value.  Consider using a list of lists to represent the board: https://gist.github.com/raylu/5053677#file-go-py"
learnpython,3dkcgh,pqu,1 point,Fri Jul 17 01:27:27 2015 UTC,"I see your point, should I put the menus in the PlayGame class and just use if statements?    I'm already working on your 2, 3 and 4 suggestions, another user gave me the same advice.   What's beneficial about using lists of lists for the board?   Thank you for your post!"
learnpython,3dkcgh,OCHawkeye14,2,Fri Jul 17 02:08:24 2015 UTC,"should I put the menus in the PlayGame class and just use if statements?   That might also help, yes.   What's beneficial about using lists of lists for the board?   The visual representation of the board is now more directly tied to the in-memory one. You can do board[x][y], for example."
learnpython,3dlnbs,sealax,2,Fri Jul 17 07:19:59 2015 UTC,"from sys import argv  print(argv)   Save that somewhere on your desktop as argument.py. Open PowerShell / Bash / CMD / Shell, now get to the desktop:   Windows: cd Desktop Mac: cd /Users/username/Desktop Linux: cd /home/username/Desktop   Next you type:   python argument.py here are some arguments, thank you   That should give you a hint what it means and what to do."
learnpython,3dlnbs,DarkMio,-1,Fri Jul 17 07:32:07 2015 UTC,"You can also run  chmod a+x pw.py   That plus the shebang at the top (#! python3) allows you to run the script, so you can type in  ./pw.py [args]   where args are your arguments, each one separated by whitespace.  argv is the array of the arguments that you type in, where argv[1] would be your first argument (since argv[0] is the script name itself).  EDIT: I am confused, why is this being downvoted? Is this not correct..."
learnpython,3dlnbs,Wrathofvulk,1 point,Fri Jul 17 07:44:10 2015 UTC,Thanks - these comments have helped me overcome the issue.
learnpython,3dk9s9,Romanticon,2,Thu Jul 16 23:15:11 2015 UTC,"It is possible for the HTML of a page to be entirely generated using javascript, but I don't think that's going on here, since I do get HTML content with requests.get)  There is a large amount of minified javascript, but it's not all that's there - if you scroll down past both <script> tags (""search for '<body') , you should eventually see the HTML for the page. You can probably just ignore the javascript altogether - the bit you want is presumably the form doing the login (search for action=""login"").  It should probably be enough to POST to /login with the values from this form - basically giving values for all the input elements it provides (utf8, authenticity_token (just echo the value it is set to - this is to defeat CSRF attacks), email, password, remember) etc.  Note - you'll also need to provide the various cookies to maintain the session.  I'd recommend going through the process manually, but using your browser's dev tools to show the network activity.  This should show you effectively what your code needs to do to login (except for the variable parts like that authenticity token that you can just scrape)."
learnpython,3dk9s9,Brian,1 point,Fri Jul 17 00:59:09 2015 UTC,"First, thank you so much for taking a look!  It's always really nice when someone shows that I'm not going crazy.  I've poked around a bit more, and I see what you mean.  I used my browser's dev tools to see the submitted values, but I do have one other problem.    I notice that in the HTML body, there are several values specified, such as ""TS01dcfc03_cr"".  If I look at the dev tools while logging on, I can see that this gets the ""challenge"" JS function.  Does this mean that I can simply list this information as data to be supplied to the Requests POST?  I can see that it looks like some of the requirements are the results of executing some of the JS code.  Also, where would I find the cookies?  Are those supplied somewhere on the GET request?"
learnpython,3dk9s9,Brian,2,Fri Jul 17 02:15:00 2015 UTC,"If I look at the dev tools while logging on, I can see that this gets the ""challenge"" JS function.   Hmm - not entirely sure what it's doing here, and trying it out seems to show that it doesn't always do this (the first time I do it, I got a straightforward form submit.  It then alternated between this further wrapping, with the previous form parameters held in TS01dcfc03_pd etc and the normal form where those parameters were provided as-is.  Personally, I'd try just ignoring it, and sticking to the basic form parameters - people will generally design sites so that they should work even without javascript, so the standard form submit should probably work.   Does this mean that I can simply list this information as data to be supplied to the Requests POST?   Pretty much - I'd try just a standard post with the parameters as per the HTML form, rather than trying to untangle the javascript (Maybe try disabling javascript on the site with something like YesScript to verify that it works, and get a less complex reference to compare with).   Also, where would I find the cookies? Are those supplied somewhere on the GET request?   You'll find them on the response you get back from the request.get call (in the .cookies attribute.  You can handle this manually, passing back the previous responses cookies into subsequent get / post calls (ie. requests.get(url, cookies = prev_response.cookies), but you can actually just get requests to handle this for you using a Session object.    Ie. instead of doing requests.get, create a Session object (sess = requests.Session()), and then use sess.get(url) instead.  This will maintain and handle passing / retrieving cookies on all requests going through the session for you."
learnpython,3dk9s9,JayTh3King,2,Fri Jul 17 04:12:40 2015 UTC,"</script>\r\n     <noscript>Please enable JavaScript to view the page content.</noscript>\r\n</head>   When requesting the url with both requests and urllib3 i get the same response. It seems as though the page relies heavily on javascript to display it and as part of the sites mechanics. Looking get the post request, it simply sends your email and password in plain text with an authenticity token.  You might need to experiment with a new library, or try usings requests post with your email and password.     https://www.nookpress.com/login?utf8=%E2%9C%93&authenticity_token=Gc3RUH5P2czqZ0ardpCFSaaPMdgQ5vivMDAxr8mZl6U%3D&email=test%40GMAIL.COM&password=jack&button=  this is your post url.  Try this:     http://stackoverflow.com/questions/22764322/scraping-html-and-javascript"
learnpython,3dkm6t,uttamo,2,Fri Jul 17 01:01:49 2015 UTC,"Since it's in the python package index, you can simply install it by using pip (from your terminal):  pip install PrettyTable"
learnpython,3dkm6t,Wrathofvulk,2,Fri Jul 17 01:03:42 2015 UTC,"Thanks, I did that but in PyCharm when I try importing it it says that there is 'no module named prettytable' or 'PrettyTable'. I've restarted PyCharm since installing the module but it still won't show up. Running it in Terminal works fine but not in PyCharm. Any ideas?  Edit: got it to work. Updated the interpreter from 2.7.6 to 2.7.10 in PyCharm and installed the package PrettyTable through the program. Thanks."
learnpython,3djn1l,potent_rodent,1 point,Thu Jul 16 20:23:34 2015 UTC,"Why numpy?  PIL or ImageMagick already do what you're wanting, why reinvent the wheel?"
learnpython,3dj9el,mkdz,1 point,Thu Jul 16 18:43:59 2015 UTC,"What about this? Moves invariants outside the loop, dispenses with the prepend &append of zeros and ones, and gets rid of the list. Also uses asarray for minor gains if values is already an ndarray.  This runs in 18 seconds on my machine with len(values)=02000 and samples==100000. (Python 3.4, numpy 1.9.2, Windows, 64 bits).  def get_sum_weighted_values(values, samples):     sum_averages = numpy.zeros(samples)     data = numpy.asarray(values)     num_columns = len(values) - 1      for i in range(samples):         # Generate random numbers for each sample of data         random_numbers = numpy.sort(numpy.random.random([(num_columns+2)]))         random_numbers[0] = 0.         random_numbers[-1] = 1.          # Compute the weights and multiply each weight by the data value         gap_values = numpy.diff(random_numbers)         sum_averages[i] = numpy.sum(numpy.multiply(gap_values, data))      # Sum up all the values to get the weighted average     return sum_averages   Haven't tested this one (other than verifying it runs), but I get around 3 seconds for this one:  import multiprocessing import numpy   def get_sum_weighted_values(samples):     sum_averages = numpy.zeros(samples)     data = numpy.asarray(values)     num_columns = len(values) - 1      for i in range(samples):         # Generate random numbers for each sample of data         random_numbers = numpy.sort(numpy.random.random([(num_columns+2)]))         random_numbers[0] = 0.         random_numbers[-1] = 1.           # Compute the weights and multiply each weight by the data value         gap_values = numpy.diff(random_numbers)         sum_averages[i] = numpy.sum(numpy.multiply(gap_values, data))      # Sum up all the values to get the weighted average     return sum_averages   values = numpy.random.randn(2000)  if __name__ == '__main__':     pool = multiprocessing.Pool()      a = pool.map(get_sum_weighted_values, [1000]*100)     pool.close()     pool.join()"
learnpython,3dj9el,rlabbe,1 point,Fri Jul 17 02:06:40 2015 UTC,Thanks for this! It was very helpful!
learnpython,3dj2ca,fantabulus,1 point,Thu Jul 16 17:53:33 2015 UTC,make a dictionary of { user: [tweets] }  if user in dict:     dict[user].append(tweet) else:     dict[user] = [tweet]   Then loop over the dict and print every key/value.
learnpython,3dj2ca,usernamedottxt,5,Thu Jul 16 17:58:31 2015 UTC,"Your code is equivalent to a defaultdict. I would write it like this:  from collections import defaultdict user_dict = defaultdict(list) for user, tweet in csv_file:     user_dict[user].append(tweet)   Also, although you probably were just making a point, I want to point out not to use ""dict"" as a variable name, since it's already a built-in name in python."
learnpython,3dj2ca,novel_yet_trivial,1 point,Thu Jul 16 18:18:43 2015 UTC,"I'm still new to Python. I'll have to check out defaultdict! Thank you.  And yeah, was just writing it in the easiest way to understand."
learnpython,3dig59,gma992,3,Thu Jul 16 15:10:31 2015 UTC,"When talking about asymptotic run time, we reduce everything in constant time, eg O(1000), to O(1). Any constant time function is considered to have the same asymptotic run time as just 1.   When there are multiple terms that depend on the same variable, we also drop the ones of slower growth. This means that O(10+5log(x)+2x) becomes O(x). Note that like with constant time, we set the coefficient of the terms to 1 because we're taking about asymptotic growth. The reason we do this comes from the formal definition."
learnpython,3dig59,ablatner,1 point,Thu Jul 16 19:08:46 2015 UTC,Shouldn't be then O(1 + 2x) the asymptotic run time for  O(10+5log(x)+2x) ? Or are we talking about derivatives here? In that case would be O(x) if we assume that we can ignore the slower growth one.
learnpython,3dig59,ablatner,1 point,Fri Jul 17 07:06:18 2015 UTC,"Don't think of it as derivatives. The point is that all constant time functions and all log functions have a slower growth rate than all linear functions, so we discard the constant and log terms.   Try thinking of it as O(1)=O(x0)<O(x)."
learnpython,3dig59,raylu,2,Fri Jul 17 07:14:23 2015 UTC,"1000+x is in O(x). Informally, because we can ignore constants in asymptotic analysis.  Formally, we look at https://en.wikipedia.org/wiki/Big_O_notation#Formal_definition  and can pick g(x) = x, M = 2, x_0 = 1000. (We could also pick larger x_0 and smaller M, but we merely need to show that there exists at least one pair.)"
learnpython,3dig59,Vaphell,2,Thu Jul 16 18:59:34 2015 UTC,"So, for the curious, the correct answers were:  3003 for the best case scenario. 5*n + 3003 for the worst case scenario.  In the best case scenario, assuming that x=0:  total = 0 #1 step for assignment loop #executed 1000 times with 3 steps (1 for assign i, and two for the += operation as /u/unpythonic said) while x > 0 #1 step, false so we don't enter in the loop return #1 step   Solution = 3003  For the worst case scenario what changes is that x is a positive number, so we add more steps to the previous process, we enter in the second loop:  += #2 steps -= #2 steps x > 0 false and exit # 1 step   Solution:  5n + 3003  Conclusion: Fuck me."
learnpython,3dig59,unpythonic,1 point,Fri Jul 17 06:59:55 2015 UTC,"i loop is a fixed overhead independent of input, so maybe they are after the complexity of the while loop itself?"
learnpython,3dig59,unpythonic,1 point,Thu Jul 16 15:25:52 2015 UTC,"so if 'i' is 1 step regarding the value assigned and counting everything in the function, I would have:  1) assign total = 0, 1 step  2) i loop, 1 step  3) increment operation inside i loop, 1 step  4) while = 0, so it ends here, but has been checked, 1 step  5) return total, 1 step  Not accepting the answer, and I cannot see a simpler case than x = 0"
learnpython,3dig59,Vaphell,2,Thu Jul 16 15:38:48 2015 UTC,"How exactly is ""step"" being defined here? A line of code? Generally in computer science a function like that would be said to have a complexity that is linear in x because the i loop has a fixed overhead.  However the focus on ""steps"" confuses the question. ""while x > 0"" translates to more than one python byte code operation so the count of ""steps"" may be quite complicated to determine."
learnpython,3dig59,LET-7,1 point,Thu Jul 16 16:20:00 2015 UTC,"That's one of the items I don't get it, how steps are counted, but I'll write an example as from the notes:  def f(x):     for i in range(1000): #1000 steps         ans = i     for i in range(x): #2x steps         ans +=i     for i in range(x): #2x^2 steps         for j in range(x):              ans +=1  solution: 1000 + 2x + 2x^2 steps   1000 steps for the first ""for statement""  2x steps for the second ""for statement"", one the statement itself and another one the add operation, and increments in x times depending on the input.  2x2 steps for the third ""for statement"", the same reason s before but we also have a nested loop here."
learnpython,3dig59,Justinsaccount,2,Thu Jul 16 16:26:41 2015 UTC,"They seem to be counting primitive operations, but they seem to have considered some operations to be ""free"". In the example the first ""for statement"" counts for 1000 steps but the assignment within the for loop appears to have zero cost. That assignment most assuredly does have a real non-zero execution cost, but we have to work within their framework. So the next ""for statement"" is 2x steps because even though ""+="" is two operations (addition and assignment) we are considering assignment to be free.  Therefore, looking back at your problem:  def program1(x):     total = 0                 # 0 steps, assignment is free     for i in range(1000):     # 1000 steps ""for statement""         total += i            # 1000 steps for addition      while x > 0:              # x steps ""while loop""         x -= 1                # x steps for subtraction         total += x            # x steps for addition      return total              # assuming this is free   My best guess would be that the answer is 2000 + 3x."
learnpython,3dilxj,Handsdowndopestdope,6,Thu Jul 16 15:53:53 2015 UTC,"If you are on windows you can write a .bat file that simply contains the commands you would type into the command line. It could be as simple as:  python c:\path\to\my\script.py   This assumes that the person has python and the script on their computer (or maybe a network location). If you need something a little more robust, py2exe could be what you are looking for."
learnpython,3dilxj,shivasprogeny,2,Thu Jul 16 15:58:22 2015 UTC,"Thanks, i'll look into batch scripts too!  I was able to get it working by associating the file with the python interpreter"
learnpython,3dilxj,unpythonic,4,Thu Jul 16 16:11:31 2015 UTC,"You need to change your file type association. Right now it sounds like your .py files are associated with your editor. You need to associate them with the python interpreter.  Of greater concern may be that these other people will need to install Python on their computer. Is everyone okay with that? If not, you may need to use one of the tools to make an exe out of it."
learnpython,3dilxj,novel_yet_trivial,2,Thu Jul 16 16:07:09 2015 UTC,"Python comes installed, and everyone is running the same version, so that part is good to go!  And that worked!  Thank you!"
learnpython,3dilxj,stillalone,3,Thu Jul 16 16:10:28 2015 UTC,"On windows, if you save with a .pyw extension, the terminal windows is not shown."
learnpython,3djoka,musicomet,6,Thu Jul 16 20:33:51 2015 UTC,"I don't think you understand what the name and *name means.   When you define a function in Python you also define what variables will be passed on, but there are times when you don't know how many variables will be passed in. Due that reason * and ** were intoduced. By both can be named anything, so you could use *schools, *school, or the more conventional *args, it didn't matter, it only affects the name that you use to access the values. So by setting up a *args, that tells python to catch all other non-keyword variables.   Alternatively ** is used to capture all additional keyword arguments. And the standard is **kwargs  Sorry for the poor editing, I'm on a phone right now."
learnpython,3djoka,JeremyTiki,1 point,Thu Jul 16 21:35:07 2015 UTC,"Very thorough! Thanks, I get it now!"
learnpython,3djoka,JeremyTiki,1 point,Thu Jul 16 23:02:33 2015 UTC,You are welcome.
learnpython,3djoka,novel_yet_trivial,3,Fri Jul 17 00:36:54 2015 UTC,"For that case, *schools."
learnpython,3djoka,StaticFuzz,1 point,Thu Jul 16 20:35:46 2015 UTC,I just tested it. You are correct. Thanks :)
learnpython,3djoka,neRok00,3,Thu Jul 16 20:36:58 2015 UTC,"You don't need either of them. You could pass the school names as a list to keep it simple.  In terms of your question though *args would work. The only reason you need keyworded arguments is if there is something differentiating them. Like if you wanted to pass not only the name of a school, but also their graduation rates, or maybe the number of attending students:  my_func('name' = 'stupid_school', 'grad_rate' = 0, 'population' = 69)   But all your inputs are the same type of thing, capable of having the same type of things done to them, so you could just group them all together as positional arguments"
learnpython,3djoka,StaticFuzz,3,Thu Jul 16 20:50:40 2015 UTC,"You could pass the school names as a list to keep it simple.   You didn't actually show him what this would look like...  schools_to_print = ['harvard', 'berkeley', 'chico state'] my_func(schools_to_print)   or in 1 line  my_func(['harvard', 'berkeley', 'chico state'])"
learnpython,3dgrqj,Samus_,5,Thu Jul 16 03:41:50 2015 UTC,"For those who don't know, we already have an official IRC channel with, at the moment of writing, 100 users online.  Edit: There is also no mandatory registration required to use it."
learnpython,3dgrqj,_wsgeorge,5,Thu Jul 16 19:01:56 2015 UTC,I pasted the questions in my terminal. :(
learnpython,3dgrqj,MoreTeaPleaseVicar,1 point,Thu Jul 16 15:17:49 2015 UTC,heh I did too :) I had an idea of what was happening but not a chance to do the calculations mentally.
learnpython,3dgrqj,rainmakerbro,2,Thu Jul 16 18:57:36 2015 UTC,"I can understand having questions on the official developers slack, but on a learnpython channel, it defeats the purpose."
learnpython,3dgrqj,FifteenthPen,1 point,Thu Jul 16 21:18:05 2015 UTC,"well yeah, I don't why they have that but it's probably because they created the #learningpython room afterwards.  I'll pass on your comments, thanks!"
learnpython,3dgrqj,AnAverageAnomaly,5,Sat Jul 18 22:57:45 2015 UTC,Oh god what if I didn't answer the questions correctly? The admin of the group will surely have a laugh at my expense!
learnpython,3dgrqj,jtypemusic,1 point,Thu Jul 16 14:09:57 2015 UTC,"Those questions are... odd. Also, cmp() is deprecated, and no longer exists in Python 3."
learnpython,3dju9h,ratbotseattle,1 point,Thu Jul 16 21:16:00 2015 UTC,Your code won't even run as written.  Can you format it correctly please?
learnpython,3dju9h,Doormatty,1 point,Thu Jul 16 21:23:52 2015 UTC,i don't understand reddit formatting but i'll try.
learnpython,3dju9h,Justinsaccount,3,Thu Jul 16 21:28:49 2015 UTC,now try.
learnpython,3dju9h,Doormatty,1 point,Thu Jul 16 21:29:32 2015 UTC,"You can use project euler to learn python or to learn math. You can not use project euler to learn python and math at the same time.   the primality test i print the result of 100 no composites smade it through the test so i think it's accurate mathematically   3 is prime, 5 is prime, 7 is prime. All odd numbers are prime.  >>> 2 ** 340 % 341 == 1 True >>> 341 / 11.0 31.0 >>>"
learnpython,3dju9h,tyggerjai,1 point,Thu Jul 16 21:35:58 2015 UTC,i know what's wrong now. the test was allowing carmichael numbers through. for instance 1105 is not prime but it got there.
learnpython,3dju9h,Doormatty,-1,Thu Jul 16 21:40:07 2015 UTC,All odd numbers are prime   Uh.  9?
learnpython,3djpmt,propolistic,3,Thu Jul 16 20:41:46 2015 UTC,"Maybe a good start would be Automate the Boring Stuff with Python by /u/AlSweigart, free to read online.  It has chapters about dealing with files and folders, dealing with .json and .csv, and much more.  It's targeted at beginner level, which might be too low for you, but nonetheless the approaches are very good and well explained.  Uses Python 3.x"
learnpython,3dhf7q,Dephinite,3,Thu Jul 16 08:15:05 2015 UTC,"Not sure.  I haven't used eyed3 before, but I just tried that out, and it worked for me (it complains if there's a pre-existing 2.2 tag, but with 2.4 it seems OK).  A few things that might be worth trying:  Try getting some more debug logging.  Ie do:  import logging eyed3.log.setLevel(logging.DEBUG)   And then repeat the process and see if it gives you anything more (and maybe compare against tag._render / tag._saveV2Tag in eyed3/id3/tag.py to see what code paths it's going down.  A few other things that might be worth checking:   has the file been modified at all (ie. does the modification timestamp change?) - might show whether the problem is in failing to do anything, or somehow not updating with the new data. Any obvious reasons writing might fail (read only, held open by another process etc).  These would probably give an exception, rather than silent failure, but may be worth checking.   What happens if you save to a brand new file.  Ie `tag.save(""some_other_filename.mp3"") - does this one work?"
learnpython,3dhf7q,Brian,1 point,Thu Jul 16 12:17:58 2015 UTC,... And what happens when you try it?
learnpython,3dhf7q,zahlman,1 point,Thu Jul 16 09:31:16 2015 UTC,The script runs but there are no changes to the details of the MP3 file.
learnpython,3dhf7q,frublox,1 point,Thu Jul 16 10:02:27 2015 UTC,"I've used an ID3 tag library before (not this one) and it was a pain to get this working. Look around at the docs, probably for the save method, for any sort of options that you can pass in regarding versions. After setting some version properties to different settings, I finally got it to update correctly."
learnpython,3di70e,dudeguy8220,1 point,Thu Jul 16 13:57:03 2015 UTC,"Django and Flask are both good options. Everyone is going to have a different recommendation and their reasons. My 2 cents, pick one and just go with it. Learn the basics of the framework and then work on your project."
learnpython,3di70e,awsomntbiker,1 point,Thu Jul 16 15:25:51 2015 UTC,"This worksheet may help you decide whether to use Django or Flask.  I say ""may"", because ultimately it's a personal choice, and that worksheet may just have its own bias. Read through it carefully, check out the two frameworks individually, and get some more background on the problem before deciding."
learnpython,3di70e,JustTurrble,1 point,Thu Jul 16 17:56:11 2015 UTC,"I started outlining a job search site today!  Never used python for anything web facing, but I'm going with flask.  The general consensus seems to be that flask is lighter and less opinionated, which I prefer.  What kind of search are you going to set up?  I am looking at scouring reddit itself, categorizing and combining the many job and freelance subs for both job seekers and talent seekers."
learnpython,3di70e,ijustwannacode,1 point,Thu Jul 16 21:37:59 2015 UTC,"tarted outlining a job search site today! Never used python for anything web facing, but I'm going with flask. The general consensus seems to be that flask is lighter a   Im looking to create a website which pools up Jobs from a variety of banks in my city. It seems really tough!"
learnpython,3di70e,neRok00,1 point,Fri Jul 17 01:03:56 2015 UTC,"Have you done any development with a web framework in the past?  If you haven't, I would suggest starting with django. Everything has been 'considered' in that framework, so it will help you understand all of the in's and out's of a web framework.  If you have experience and you understand the concept of ORMs, routes and views, authentication, etc, then there are a few different frameworks to consider, including Flask and Pyramid."
learnpython,3dirsp,DeGaulleSucksCock,3,Thu Jul 16 16:36:47 2015 UTC,datetime.strptime?
learnpython,3dirsp,04h,3,Thu Jul 16 16:55:25 2015 UTC,If you post your code we can help you improve it. The general structure will be like this:   Convert the user input into a datetime object using datetime.strptime(). add a datetime.timedelta(days=7) object convert back to user string with datetime.strftime()
learnpython,3dirsp,novel_yet_trivial,1 point,Thu Jul 16 17:04:44 2015 UTC,Holy shit! Thank you! datetime.strptime is exactly what I was looking for.   I really appeciate your time.
learnpython,3dirsp,JustTurrble,3,Thu Jul 16 20:08:02 2015 UTC,"Once you have your datetime object representing the user's date, you can use datetime.timedelta(days=7) to do math on that object:  my_date = datetime.datetime(2015, 7, 10) new_date = my_date + datetime.timedelta(days=7) # new_date is now (2015, 7, 17)   datetime.now() is used as an example in documentation, but that represents any datetime object you want. It doesn't change what now() refers to: it simply does some math and gives you a new date.    If your issue is how to convert the date from whatever you have in your form into a datetime, that involves using datetime.strptime."
learnpython,3djm96,zombie2870,6,Thu Jul 16 20:17:51 2015 UTC,"Again, please format your code for reddit or use a site like pastebin. Your code is very hard to read and impossible to test otherwise."
learnpython,3djm96,novel_yet_trivial,1 point,Thu Jul 16 20:19:29 2015 UTC,Just add four spaces to before every line of code.
learnpython,3diif5,roshambo12,1 point,Thu Jul 16 15:27:51 2015 UTC,"If you want to stick with python, sounds like fabric would do you well. It is easy to use and allows for multiprocessing as well as simple inventory control.  http://www.fabfile.org/  If you are just running this as a script (i.e. - you just want to see the uptime results, not do any processing on them), ansible would probably be even easier to use. It also has a Python API if you do need to post-process the results.  http://docs.ansible.com/intro_getting_started.html"
learnpython,3diif5,hudsonpenner,1 point,Thu Jul 16 15:48:13 2015 UTC,"You could use paramiko to create the SSH session and get the uptime.  Assuming you have a file like the following:  s1.domain.tld s2.domain.tld s3.domain.tld   Then you could do something like the following:  import paramiko  with open('server-list', 'r') as f:     servers = f.readlines()  # Strip newline chars servers = [server.rstrip() for server in servers]  for server in servers:     ssh = paramiko.SSHClient()     ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())     ssh.connect(server, username='username', password='password')     stdin, stdout, stderr = ssh.exec_command(""uptime"")     uptime = stdout.readlines()     print uptime   NOTE: This will get the uptimes sequentially. If you want to do multiple at the same time you will need to thread it out or use multiprocessing or another option."
learnpython,3diif5,werpoi,1 point,Thu Jul 16 16:46:57 2015 UTC,This is absolutely perfect. I was using paramiko to start with and this is fantastic.   Thank you!
learnpython,3dhfcj,anywhereelse,2,Thu Jul 16 08:17:08 2015 UTC,Doesn't matter
learnpython,3dhfcj,04h,0,Thu Jul 16 08:44:41 2015 UTC,"Depends on what you are using it for.  If you are using it for mathematics, using 64bits will help, since it uses 64bit floating-point numbers (which have higher precision)."
learnpython,3dhfcj,TheBlackCat13,1 point,Thu Jul 16 08:52:01 2015 UTC,"Are you sure?  I can't seem to find anything stating this, but I could just be looking in the wrong places.  Edit: Yeah, I'm pretty sure you're wrong.  http://bytes.com/topic/python/answers/803415-32-bit-64-bit"
learnpython,3dhfcj,Doormatty,1 point,Thu Jul 16 18:48:12 2015 UTC,"It depends on something.  What, exactly, is unclear.  There was recently a mailing python mailing list thread where a lot of people got different answers regarding whether their floats where 32bit or 64bit.  I don't recall any firm conclusion coming of it.  Using a 64bit python, at least, seems to guarantee that you get a 64bit float.  Having a 32bit python may or may not result in having a 64bit float, depending on the version and maybe some other unknown factors.  Check out this thread."
learnpython,3dhesu,warlock1992,2,Thu Jul 16 08:09:16 2015 UTC,"web2py is probably not the best choice, it's a web framework. Sure, you can build a desktop app with it, but it will be more complex than it needs to be.  I've personally found PyQt a good choice. It is cross platform, looks visually appealing on most platforms (as compared to tkinter), is customizable, has tools for designing an UI and has a very object-oriented design which fits Pyhton nicely (in my opinion).  Otherwise there are some more libraries that you can look into, there is the basic tkinter and there are Python bindings for GTK, wxWidgets, Kivy, Qt, ..."
learnpython,3dhesu,Dunj3,1 point,Thu Jul 16 09:36:50 2015 UTC,"i am looking into PyQt ... I am currently using PyCharm as my IDE, but can code in it if i want to use PyQt"
learnpython,3di7gs,Beef15,2,Thu Jul 16 14:00:50 2015 UTC,"I can't comment on the website but are you still in school? When I was in college I after completing some homework I would often write a simple program to do similar operations (although back then I was coin MATLAB or VBA in excel). For example, after learning reinforced concrete beam design I would a little tool to that could do the same."
learnpython,3di7gs,81dwarves,1 point,Thu Jul 16 14:33:19 2015 UTC,"Still in school and yeah this is definitely a great idea. There are currently some things that I can implement with python, though they might be slightly simple."
learnpython,3di7gs,benr_r,2,Thu Jul 16 16:18:50 2015 UTC,"I think this all depends on your style of learning and what you want to do. For me, I like to use books etc that allow me to go at my own pace. I also like to make sure I am staying on course rather than just googling things I want to try as I think of them.  Here are my suggestions:   Try some of the problems here Checkout this interactive book on data structures and algorithms I have not looked too far into automatetheboringstuff, but for a general course on python I  quickly ran through and found helpful after learning the basics was google's free course."
learnpython,3di7gs,benr_r,2,Thu Jul 16 14:40:00 2015 UTC,"Well I haven't exactly learned about the full practicality of python, but for now I'd just like to write basic programs to help me learn to write more intricate, practical programs. I really like the python practice problems though, I think i'll start with that, and then maybe move to that google course since you mentioned that it was a more general course. Thanks!"
learnpython,3di3dm,WalterDragan,1 point,Thu Jul 16 13:25:02 2015 UTC,"I don't think it can be done this way - the original Tk command upon which tkinter.filedialog is based is called tk_getOpenFile. The documentation for that command lists how file types are defined, and the only things you can use are either:   File extensions Old Mac file types (which, I presume, is for older Macintoshes - not OSX)   You'd have to code up a custom widget to do that - the glob module ought to help you match filenames against a wildcard, if you decide to go this route."
learnpython,3di3dm,adamnew123456,1 point,Thu Jul 16 13:41:37 2015 UTC,"Thank you for the response. Writing my own widget is outside my current skill set, to be honest. I am still very much in the early stages of learning python"
learnpython,3dgrof,CornFlakesOnAPlane,1 point,Thu Jul 16 03:41:10 2015 UTC,"Too much copy-paste. How about pack all Entry-widgets to one dict like ratios? Confusing naming. Why Entry is a blablaButton? And why camelCase? Docstings should be inside finction, not outside. This way user can get help(yourfunction)"
learnpython,3dgrof,04h,1 point,Thu Jul 16 08:59:08 2015 UTC,Thank You Very Much :)
learnpython,3dgrof,Saucedd,1 point,Thu Jul 16 14:55:22 2015 UTC,"as a rule of thumb you should write functions in a self contained way, that makes them communicate with the outside world solely via parameters and return statements, without using any side channels eg in the form of global variables. Globals might be quick, easy and less typing, but they are bad news for maintainability in the long run. You should stick your buttons in a dict/list/whatever and push that container to funtions as a param."
learnpython,3dhx0y,loveandkindness,1 point,Thu Jul 16 12:22:18 2015 UTC,Where is a other part of traceback?
learnpython,3dhx0y,04h,1 point,Thu Jul 16 13:46:27 2015 UTC,"No traceback, nothing crashed. The program finishes successfully, and leaves that little message for me."
learnpython,3dhx0y,04h,1 point,Thu Jul 16 17:02:46 2015 UTC,"Do you have source code? Maybe it's documented somehow. If not, find this string and check what is going on"
learnpython,3dhx0y,interactionjackson,1 point,Thu Jul 16 18:08:43 2015 UTC,http://stackoverflow.com/questions/20621070/ice-default-io-error-handler-doing-an-exit-pid-11281-errno-4
learnpython,3dhtp9,cswl_rddt,1 point,Thu Jul 16 11:44:17 2015 UTC,Installing stuff works better with sudo. In the install help on the website of mpl there is  section with instructions on how to build with dependencies.
learnpython,3dhtp9,martijnf1,1 point,Thu Jul 16 11:59:01 2015 UTC,Answer is use Anaconda installer
learnpython,3dhtp9,CATHOLIC_EXTREMIST,1 point,Thu Jul 16 12:16:19 2015 UTC,Is there a reason you cannot use the version in debian's repos?  sudo apt-get install python-matplotlib    (or python3-matplotlib)
learnpython,3dhtp9,generic_genus,1 point,Thu Jul 16 15:46:51 2015 UTC,"@generic_genus  Unfortunately, I cannot install from repos, as I'm running Python on virtualenv.   @martijnf1 Normally, pip install would work just fine, so I didnt look at the install help page.  But thanks for the link. I decided to build from source. The problem still happened on latest github sources. so I checked into setup.py and found the problem.  Apparently, matplotlib was checking for freetype version by using  "" freeetype-config --ftversion""  .  But running that command in terminal gave "" .."" which matplotlib was incorrectly interpreting.  I removed the check and hardcoded the freetype version and did setup.py build.   And it worked.    But i think its issue with freetype-config.  If you guys are on debian testing, can you confirm?"
learnpython,3deixu,saabr,20,Wed Jul 15 17:27:15 2015 UTC,"Check out /u/AlSweigart's Automate the Boring Stuff with Python. It has chapters on web scraping with Python. (It's free to read online, BTW)"
learnpython,3deixu,desrtfx,9,Wed Jul 15 18:50:14 2015 UTC,"I know this is a python question, but why not just wget...?"
learnpython,3deixu,I_do_not_know_me,5,Wed Jul 15 19:35:23 2015 UTC,I would also recommend this is the goal is getting the pdf files and this is more of a one-off task.
learnpython,3deixu,leonardicus,1 point,Wed Jul 15 21:12:28 2015 UTC,"Yeah, that's why I wasn't too sure if OP just wanted the task done, or was looking to learn a little more about Python."
learnpython,3deixu,I_do_not_know_me,1 point,Wed Jul 15 21:31:57 2015 UTC,He could be on windows too
learnpython,3deixu,casey12141,6,Wed Jul 15 23:23:32 2015 UTC,I always forget about windows for some reason. I'm not sure why.
learnpython,3deixu,I_do_not_know_me,1 point,Wed Jul 15 23:26:40 2015 UTC,Powershell has an equivalent. It's even aliased as wget
learnpython,3deixu,flipstables,2,Thu Jul 16 07:34:18 2015 UTC,Please elaborate on this.
learnpython,3deixu,I_do_not_know_me,24,Wed Jul 15 19:56:43 2015 UTC,"man wget But really, if I wanted all the pdf's on a website I'd just do something like:  wget -r -P ./pdfs -A pdf http://www.pdfgalore.com   -r means recursive -P sets save directory -A sets a whitelist"
learnpython,3deixu,The-Mathematician,5,Wed Jul 15 20:05:36 2015 UTC,What the fuck. I need to learn command line tools. I did this literally two weeks ago in selenium.
learnpython,3deixu,Fuzzmiester,1 point,Thu Jul 16 02:32:24 2015 UTC,"Trying to do it all yourself is a mistake for one ;) But I suspect you know that.  for scoping, do you want to get every pdf, or just every pdf that's on a single page. The second is far easier than the first.  I'd suggest looking into something like http://scrapy.org/ to handle the extraction and parsing of the web page for you."
learnpython,3deixu,seducer4real,2,Wed Jul 15 18:16:59 2015 UTC,"I think you're looking for a web crawler. Here is a tutorial on the newboston. https://www.thenewboston.com/videos.php?cat=98&video=20144  It is a 3 part series. The tutorial before that is on how to download files from the web, you might want to watch that before the 3 part web crawler mini series."
learnpython,3deixu,promess,2,Wed Jul 15 17:46:01 2015 UTC,There's an even more in depth mooc on audacity.com taught by one of the founders of google on how to make a python web crawler. It's pretty freakin awesome. I would start with either of these.
learnpython,3deixu,seducer4real,3,Wed Jul 15 19:01:06 2015 UTC,Why is a founder of Google charging so much? Like he didnt make enough money off my search for his tutorial.
learnpython,3deixu,seducer4real,1 point,Thu Jul 16 00:34:11 2015 UTC,Link please?
learnpython,3deixu,promess,1 point,Wed Jul 15 19:32:35 2015 UTC,"https://www.udacity.com/course/intro-to-computer-science--cs101  I was wrong, it's Udacity, and it seems it's no longer as free as it once was. :("
learnpython,3deixu,jeffinRTP,1 point,Wed Jul 15 20:59:09 2015 UTC,$199 a month after 15 day free trial. Out of my price range.
learnpython,3deixu,hubo85,2,Thu Jul 16 00:08:46 2015 UTC,"You can ""audit"" the class for free.   Click the blue button that says ""Access course materials"""
learnpython,3deixu,jeffinRTP,1 point,Thu Jul 16 00:12:03 2015 UTC,"Thanks,  just did a quick look."
learnpython,3deixu,pres82,1 point,Thu Jul 16 00:23:38 2015 UTC,Wget would be easier. It's a command line that can pull a  filetype a from a website. It even uses recursion.
learnpython,3deixu,pohatu,1 point,Wed Jul 15 23:27:03 2015 UTC,https://en.m.wikipedia.org/wiki/Fusker
learnpython,3deixu,Covered_in_bees_,1 point,Thu Jul 16 03:42:29 2015 UTC,"Not to discourage you from programming this, but for a robust, GUI based approach, you can get the DownThemAll Firefox extension. It is very powerful and very capable and supports custom filter definitions, etc."
learnpython,3djdbx,zombie2870,3,Thu Jul 16 19:12:18 2015 UTC,"Please format your code for reddit or use a site like pastebin. Your code is very hard to read and impossible to test otherwise.  Your list is being sorted alphabetically. If you want to sort it numerically, you have to convert each user input to an integer. Try this:  numbers.append(int(add)) #convert to int and then append   You should also look into adding all these numbers in a loop, rather than hard coding each addition. Remember the point of programming is to do repetitive tasks for you."
learnpython,3djdbx,novel_yet_trivial,0,Thu Jul 16 19:18:14 2015 UTC,how would i put in a loop
learnpython,3djdbx,JustTurrble,1 point,Thu Jul 16 19:27:01 2015 UTC,The concept of loops.  Loops in Python.
learnpython,3djdbx,py_student,1 point,Thu Jul 16 19:41:45 2015 UTC,"something like:    names = ('douchenugget, buttface, twatnozzle, devon, knobjockey, buttpirate, prosthodontist, wanker, tool').split names = names()  nums = [] for i in range(9):     endearment = names.pop()         num = input(""Hey {}, gimme a goddamn number.\n> "".format(endearment))     nums.append(int(num)) print('nums', nums) nums.sort() print('sorted', nums)"
learnpython,3djdbx,novel_yet_trivial,1 point,Thu Jul 16 20:35:33 2015 UTC,"You seem to need a snickers. Or anger management therapy. As per the sidebar rules, we try not to directly give OP an answer, but rather guide OP to figure it out themselves. You need change the end of line 2 to (','). The pythonic for loop would be for endearment in names:"
learnpython,3djdbx,py_student,1 point,Thu Jul 16 20:53:56 2015 UTC,"If my hero Novel thinks it's not funny I guess it's not. Although my prosth bud Devon's gf fell on the floor laughing when she read it. Tyvm for the comma, and all your other help in the past."
learnpython,3dhmsh,trancemsteve,3,Thu Jul 16 10:07:04 2015 UTC,the comma is not for string concatenation in python.
learnpython,3dhmsh,LarryPete,1 point,Thu Jul 16 13:41:20 2015 UTC,"Use +, or {} formatting"
learnpython,3dhmsh,liam_jm,1 point,Thu Jul 16 14:45:39 2015 UTC,Ok got it thanks had to through in a few str()  to get it to work with +
learnpython,3dg9b1,Barbados_swole,1 point,Thu Jul 16 01:04:05 2015 UTC,"Have you tried just increasing the recursion limit to, say, 10000?  If there's a recursion depth error in a module then unless you want to create a solver yourself, or they have an iterative solver solution elsewhere, then, AFAIK, increasing recursion depth limit is the only way."
learnpython,3dhgd8,druskim,4,Thu Jul 16 08:32:03 2015 UTC,Your loop is assigning a string from the animals list to a variable called animal. Here's what's happening when your loop runs...  animal = animals[0] print animal animal = animals[1] print animal animal = animals[2] print animal
learnpython,3dhgd8,willm,1 point,Thu Jul 16 08:44:03 2015 UTC,anything you set after for and before in is just a name for your iteration. you could name it jesus_juice and it would still parse.
learnpython,3dhgd8,trowawayatwork,1 point,Thu Jul 16 08:35:35 2015 UTC,So what's the point in writing for ? Does it play a role AT ALL ?
learnpython,3dhgd8,trowawayatwork,1 point,Thu Jul 16 08:37:55 2015 UTC,for and  in is the built in function to allow you to iterate. thats why its called a for loop
learnpython,3dhgd8,zahlman,1 point,Thu Jul 16 08:41:49 2015 UTC,"It means more or less the same thing as in English. Programming languages generally don't expect us to add the word ""each"" (and Python is no exception here), because it's redundant in context."
learnpython,3dhgd8,x3al,1 point,Thu Jul 16 09:36:56 2015 UTC,"animals = [""cat"", ""ant"", ""bat""]  So, animals is a list. Well, it can be any iterator, for doesn't care much.  for animal in animals:  Here animal will take each item from the animals and execute the  print animal  for this item. It will repeat until for will work with all the items inside of animals."
learnpython,3dhgd8,zahlman,1 point,Thu Jul 16 08:44:02 2015 UTC,"Okay, I kind of understand now, thanks!"
learnpython,3dhgd8,thegreattriscuit,1 point,Thu Jul 16 09:09:40 2015 UTC,"In the for loop, there is ""animal"" ( without the quotation marks )   Here, animal is a variable name, just like animals is when you set it up.   My question is, does python already know animal names ?   No, of course not. The names come from animals. That's what for animal in animals: means: it looks at animals, and uses each item in it, one at a time, to determine what animal should be. (And I mean, don't you think it would be very strange if Python automatically knew, out of the box, that ""cat"", ""ant"" and ""bat"" were names of animals, but it didn't know any other animal names? Not even, say, ""python""? Did you actually try the code?)   isn't ""animal"" literally should be written as ""animal"" as it's text ?   No; if you asked it to print ""animal"", then it would display the exact text animal, instead of the strings contained in the list (cat, ant, and bat)."
learnpython,3dhgd8,JustTurrble,1 point,Thu Jul 16 09:34:24 2015 UTC,"one of the great things about python is that you can quickly try out different approaches.  You won't break anything, so just give it a shot.  When you come across something you don't understand, experiment with it.  It'll help clear up exactly how and why things behave the way they do."
learnpython,3dfq32,thunderbootyclap,5,Wed Jul 15 22:29:26 2015 UTC,"Never use a bare except: unless you have a very good reason. It will hide all errors, not only the one that you've expected (even KeyboardInterrupt), and is very hard to debug. In this case write except ValueError: instead. You have way too much code in your try block and the program won't let me try again, if I enter something wrong. You can use while loops around your inputs to allow this, and only put the line into the try block that could cause an error:     while True:     try:         count = int(raw_input('How many numbers do you want to average?\n>>> '))         break     except ValueError:         print '\nChoose appropriate numbers.'    Don't overwrite built-in functions like iter. Why do you convert the first input (count) to a float? Can the user enter 3.5 numbers? :) You can use a for loop instead of the while loop with the iter variable for _ in range(count):. The time.sleep(5) line seems to be useless.  As thespt mentioned, you can just use a float to keep track of the sum. total += ask   Besides that, good job and happy coding! :)"
learnpython,3dfq32,dunkler_wanderer,2,Wed Jul 15 23:22:52 2015 UTC,"Thanks for the reply!   This was my first time using try/except and wasn't sure which error to use. I also realized the problem of not having a do-over i would usually do something with a function for that but this was a first draft.   Thank you for informing me that 'iter' was a built in function if i had known i would have used 'i' probably.   I derped on the count-float thing lol.   I thought about using a for loop but i wasn't sure if it would've mattered.  I used time.sleep() because when i ran the program it would close before the output could be seen.  That sounds good and makes sense (total+=ask), i dont know why i didnt think of it, maybe i wass just over complicating my code.  Thank you for your input it has significantly helped!"
learnpython,3dfq32,dunkler_wanderer,1 point,Thu Jul 16 01:13:16 2015 UTC,"I used time.sleep() because when i ran the program it would close before the output could be seen.   Ah, the usual trick to keep the window open is to add a blank raw_input() at the end of the program."
learnpython,3dfq32,ruicoder,1 point,Thu Jul 16 01:35:50 2015 UTC,"Ah i see, ok!"
learnpython,3dfq32,thespt,3,Thu Jul 16 15:57:42 2015 UTC,"count = float(raw_input('How many numbers do you want to average?\n>>> '))   Count should be a whole number, so storing it as a float doesn't make sense. It should be an int.  while iter < count:   Use a for loop instead of a while loop:  for _ in range(count):"
learnpython,3dfq32,thespt,3,Wed Jul 15 22:38:52 2015 UTC,"Just my two cents but I think that instead of:  lst=[]   lst could very well be a float equal to zerro and then you'd have:  while iter < count:     ask=float(raw_input('Input number.\n>>> '))     lst+=ask     iter+=1   Which I think is more efficient, and then your average would simply be:  average=lst/count   It's the tinniest of improvements, but it's an easy one!"
learnpython,3dfq32,Wrathofvulk,2,Wed Jul 15 23:15:06 2015 UTC,Thanks for the reply! It makes sense but can i ask how its more efficient? What does the computer do differently?
learnpython,3dgpqm,steelcowboy1,2,Thu Jul 16 03:23:57 2015 UTC,"Are you married to piping in the shell? If you're not, see subprocess.call."
learnpython,3dfj4s,aziannomness,1 point,Wed Jul 15 21:37:06 2015 UTC,"Konbanwa! Your game is pretty nice. Rock, paper, scissors mixed with Pokémon? :)  I've taken a quick look at creatures.py and you're repeating yourself quite often. For example you could move the attack methods of your creatures to the parent class Creature.   The attributes armor, base_strength, attack_map are class attributes which will be shared between instances. I'm not sure if that's desired. You could turn them into instance attributes in the creature's __init__ methods. This is important for mutable types like lists or dictionaries. If you had two Rock instances and one evolved and gained a kick attack (added to the attack_map), then both would have this kick attack.  The mehods like creature_name and creature_type could be simple instance attributes: self.creature_type =  'Plant'. Actually creature_type should be a class attribute.  No idea why you're using @abstractmethod and ABCMeta. I have hardly any experience with meta classes yet, but it seems that you don't need it.  Case sensitive input is a bit annoying. Just let me enter punch, a letter or a number.  The file looks pretty clean and it's very nice that you use docstrings extensively. Good job!"
learnpython,3dfj4s,dunkler_wanderer,1 point,Thu Jul 16 02:50:25 2015 UTC,"You pointed out one major thing that has been causing an itch on the back of my mind since creating that creatures.py! I stared at it for a bit after writing it but couldn't decide if I could have handled those attributes better. Thank you for the verification!  Thanks for pointing out the case sensitive input for the attacks, I will fix it!  I appreciate your review and input!"
learnpython,3dfj4s,raylu,1 point,Thu Jul 16 13:25:19 2015 UTC,"This is a pretty cool idea for a game :D. Normally I suggest learntris for learning, but designing your own interactions is more fun.   Instead of x.y() != 1 and x.y() != 2, use x.y() not in [1, 2]. I'm not sure when you expect to get an AttributeError here, but it doesn't seem possible to me. If your docstring specifies the input too precisely (""randomly selected integer value of range(0,2)""), it is extremely likely that you need to refactor your code. Consider why your function needs to take an input at all if it already knows/needs a specific value. rand_options should be an enum. It's uncommon for module names to have capital letters in them. rock_paper_scissors.py creatures.py is... excessive. If you have nothing to say, don't write a docstring. There's no need to use abc. There's no need for creature attributes to be methods instead of just strs. There's absolutely no need for metaclassing. I'd argue there's actually no need for classes, but this is debatable. But if you're using inheritance, attack() and creatureattacks should absolutely not be repeated - this is missing at least half the point of OOP. pylint    ...abc...   It's not used that often.   Are decorators used that often in Python programs? Are they a newer concept?   When appropriate :D   if threading is regularly used in web development using Python   Concurrency is critical for a web application. Generally, your WSGI server (gunicorn, waitress cherokee, etc.) will take care of that for you, so as the framework (flask, django, tornado, etc.) author, you need not worry about it.   Which web framework would you recommend   Flask apps look the simplest, but thread-locals are complicated. Tornado is well-abstracted, but uses explicit async, which makes DB operations tricky. Django is a mess. The best is the one you write yourself!   Are there any ... good ... videos   No."
learnpython,3dfj4s,raylu,1 point,Thu Jul 16 03:24:15 2015 UTC,"Wow, learntris looks pretty cool! I might run through it to make sure all the basics are etched into my brain and will stay there lol.      1. Instead of x.y() != 1 and x.y() != 2, use x.y() not in [1, 2].    Thanks for pointing that out! I like that better but just so I completely understand, is it faster in the long run to use this method or purely for readability?    2. I'm not sure when you expect to get an AttributeError here, but it doesn't seem possible to me.    The reason I added that try block was to catch anyone fat-fingering a number somehow.    3. If your docstring specifies the input too precisely (""randomly selected integer value of range(0,2)""), it is extremely likely that you need to refactor your code. Consider why your function needs to take an input at all if it already knows/needs a specific value.    I very much like this comment, I'm going keep looking that function over and report back.    4. rand_options should be an enum.    Would you be able to explain the reasoning for this a bit more? Also, would I implement it as rand_options = enumerate(['rock','paper','scissors'])?    5. It's uncommon for module names to have capital letters in them. rock_paper_scissors.py    Thanks for pointing that out! I have some experience in other languages and somehow adopted the mindset of ""when in doubt camel-case"".    6. creatures.py is... excessive. If you have nothing to say, don't write a docstring. There's no need to use abc. There's no need for creature attributes to be methods instead of just strs. There's absolutely no need for metaclassing. I'd argue there's actually no need for classes, but this is debatable. But if you're using inheritance, attack() and creatureattacks should absolutely not be repeated - this is missing at least half the point of OOP.    All good things, thanks!    7. pylint    This is really cool, thanks for introducing it.    Flask apps look the simplest, but thread-locals are complicated. Tornado is well-abstracted, but uses explicit async, which makes DB operations tricky. Django is a mess. The best is the one you write yourself!    I have looked into writing my own and would really love to one day. What are your thoughts on CherryPy? I think I have messed around with that the most and really enjoyed it."
learnpython,3dfj4s,raylu,2,Thu Jul 16 14:01:16 2015 UTC,"1: There is never a reason to improve the performance of a constant-time operation. If that sort of speed matters to you, go write C or something.  2: Is this python3? If not, you should be using raw_input. If so, I don't see how you can get an AttributeError. Even if you can, you should be checking the input some other way - AttributeError seems at best distantly related to the actual problem.  4: No, not enumerate. Click my link.   I have looked into writing my own and would really love to one day.   Why not now?   CherryPy   I've never used it."
learnpython,3dginn,flamesflight,3,Thu Jul 16 02:21:49 2015 UTC,"I read some posts about what questions would likely come up at interviews for various levels.  I was a solid intermediate.   But it's all been hobby stuff for the past 6 years, so I probably don't have the git or travis skills that might usually go along with being intermediate."
learnpython,3dginn,elbiot,2,Thu Jul 16 06:01:13 2015 UTC,"How do you determine skill level with anything else? It's pretty subjective. The best guide is to compare yourself to others - do people who call themselves, say, ""intermediate"", typically surprise or impress you with their competence? Then you're probably not at that level yet. If they frequently seem to miss enhancements, while rarely showing you anything useful/new, that's a sign you're above that level."
learnpython,3dh2xy,Yoto-P,2,Thu Jul 16 05:35:32 2015 UTC,"Uh, are you sure you're talking about linked lists? They're tricky to implement in Python without pointers...  regardless, however you implement it, the general way to traverse through a linked list (excuse the C syntax), using a loop:  start from start/head node;  progress it one node at a time, using the next field (ie, start = start->next in C);  keep doing this while you are not at end/tail  Thinking about how to translate this to recursion: you know you want to end when you hit your end/tail node, so this would be your base case.  Otherwise, if you want to print the elements in order, you would just print node->data, and then recursively call your function on your next node.  Hope this makes sense...not really sure how you would even be implementing linked lists in python (I guess with separate classes instead of structs for your header, and your nodes?)"
learnpython,3dh2xy,Wrathofvulk,1 point,Thu Jul 16 06:05:35 2015 UTC,"From what I understand, recursion has a base case. Could you please explain a bit more what would be the base case here ? I  About the linked lists, I do use separate classes for the node and the list."
learnpython,3dh2xy,Wrathofvulk,2,Thu Jul 16 06:16:50 2015 UTC,"Right, in recursion you have your base case and your recursive case. Your base case is where you want to terminate your recursive calls - a lot of times, if you are translating something typically done iteratively to recursion, your base case would be when the loop guard is negated. So for us, we want to keep going until we hit our end/tail node. So that's our base case - if we hit that node, we want to stop recursing and return out of the function.   Note that you will have to pass in your end node at each recursive call, and your function will have to take it in as a parameter.   If you are still confused about this I can post an example solution in the morning when I wake up.  It helps to think about how you would do this iteratively, though."
learnpython,3dgxl5,AgAero,1 point,Thu Jul 16 04:37:15 2015 UTC,"basically, your pip is broken because you got the wrong python-requests library installed (pip relies on this to communicate with the Internet). you are going to have to reinstall pip using either easy_install or fedora's package manager."
learnpython,3dgxl5,oxymor0nic,1 point,Thu Jul 16 05:25:29 2015 UTC,https://stackoverflow.com/questions/29134512/insecureplatformwarning-a-true-sslcontext-object-is-not-available-this-prevent  As well as the duplicate.
learnpython,3dgxl5,usernamedottxt,0,Thu Jul 16 04:57:24 2015 UTC,I seem to get an issue related to this part of the response:  $ apt-get install libffi-dev libssl-dev   The pip command fails at one point because I lack these dependencies.  $sudo yum install libffi-dev libssl-dev   does not find those packages.
learnpython,3dgxl5,usernamedottxt,1 point,Thu Jul 16 05:30:00 2015 UTC,"https://serverfault.com/questions/375179/installing-libssl-dev-in-fedora7  Mate, do you even google? Also check out some of the other replies here."
learnpython,3dgxl5,Rhomboid,-1,Thu Jul 16 05:42:37 2015 UTC,"Why don't you take this opportunity to switch to Python 3 and get off the rotting, sinking ship of 2.7?  Fedora 20 has packages for Python 3.3.2.  They are designed to coexist with Python 2, so you don't have to worry about breaking anything, you just need to change your hash-bang to use python3 (and of course you need to write code that's compatible with 3.x.)  3.3 is not the latest, but it's new enough to have all of the SSL fixes that this warning is telling you that you currently lack."
learnpython,3dgxl5,elbiot,2,Thu Jul 16 05:06:09 2015 UTC,"The rotting, stinking ship that is python 2?  I didn't down vote, but I did audibly scoff.  The ssl issue is something I've never had with python 2 FWIW"
learnpython,3dgxl5,Rhomboid,0,Thu Jul 16 05:23:03 2015 UTC,"Unless you're using 2.7.9 or 2.7.10, the ssl module in the standard library is hopelessly broken and insecure; and it's insecure even if you don't happen to use a version of urllib3 that's new enough to warn you about it."
learnpython,3dgxl5,elbiot,1 point,Thu Jul 16 05:29:09 2015 UTC,Good to know.  Source?
learnpython,3dgxl5,Rhomboid,1 point,Thu Jul 16 05:33:36 2015 UTC,You can read about it in this blog post and PEP-466 and the 2.7.9 release notes.
learnpython,3dgxl5,elbiot,1 point,Thu Jul 16 06:07:58 2015 UTC,Thanks!
learnpython,3dev9o,04h,2,Wed Jul 15 18:51:46 2015 UTC,"What if you have, for example: /root/tmp/dir1 with 10 files and /root/tmp/dir2 with 10 files? Doesn't your script just drop 20 files in /tmp? What if there are files with same name?  What if some files are binary? What if some files are huge (movies)?"
learnpython,3dev9o,davidbuxton,1 point,Wed Jul 15 19:39:11 2015 UTC,Great points !!!
learnpython,3dev9o,individual_throwaway,1 point,Wed Jul 15 19:42:29 2015 UTC,"You aren't doing too badly with the open() calls. If you need to search the contents of the files you will have to do an open on each to read the contents, and an open when writing the file back out.  You are doing an extra read of the source file when you make a backup with shutil.copy2(), which could be avoided since you already have the contents in memory.  Instead of doing f.open() followed by f.close() you should use with like so:  with open(path, 'w') as f:     f.write(strg)   That way Python will always call f.close() for you, even if there is an exception. You can use that for reading and writing files.  You have a semi-bug when you create a backup. Suppose your directory structure is like:  root/ root/client-passwords/ root/client-passwords/july.txt root/kittens/ root/kittens/july.txt   When you do shutil.copy2(src, '/tmp') you will first write ""root/client-passwords/july.txt"" to ""/tmp/july.txt"" and then later write ""root/kittens/july.txt"" to ""/tmp/july.txt"", overwriting the first backup with the second. Possibly not what you want.  If you are really just searching for a string like 'PYTHON' then it may be faster to just test if 'PYTHON' is in the contents instead of searching for 'PYTHON' as a pattern:  if 'PYTHON' in strg:     strg = strg.replace('PYTHON', 'python')"
learnpython,3dev9o,individual_throwaway,2,Wed Jul 15 19:48:38 2015 UTC,"I came up with this, which made me much more happy. It is much more to the point.   oldstr = 'Time'  newstr = 'TIME'  file_path = '/home/Lolerman/PycharmProjects/learning/file.csv'  fopen = open(file_path)  with fopen as f:       filedata = fopen.read()       strg = filedata.replace(oldstr, newstr)       fopen = open(file_path,'w')       fopen.write(strg)       fopen.close()   However, I have a question.  Why do I have to open the file a second time? Why it doesn't work if I open it once before the ""with"" with the 'w' mode?  This has been throwing me off all day long.  If you could answer me this you would make this whole day all worth it."
learnpython,3dev9o,davidbuxton,2,Wed Jul 15 21:44:59 2015 UTC,"You are not using the context manager correctly for what you want to be doing. Your with line needs to read:  with open(filename, 'w') as f:   This way, you get full read and write access to the file as long as you're in that scope, and it closes the file automatically, even if there are exceptions thrown at runtime. You can also of course put this with inside a loop that iterates over all the filenames in your os.walk result list."
learnpython,3dev9o,davidbuxton,1 point,Wed Jul 15 22:25:39 2015 UTC,"I tried it that way and it simply refuses to work :(   oldstr = 'Time' newstr = 'TIME' file_path = '/home/gmastrokostas/PycharmProjects/learning/file.csv' with open(file_path, 'rw') as f:       filedata = file_path.read()   ttributeError: 'str' object has no attribute 'read'"
learnpython,3dev9o,hudsonpenner,1 point,Thu Jul 16 19:32:35 2015 UTC,"You are giving the file an alias in your context manager, in your case f. This is the so-called filehandle that you need to address when you want to do IO. It is the  object that has those attributes."
learnpython,3ddlpv,seducer4real,14,Wed Jul 15 13:09:08 2015 UTC,"It's because, in Python 3, input() returns a string.   Also, you're printing out their sums, but the instructions say to return the sum."
learnpython,3ddlpv,Freddie_V4,2,Wed Jul 15 13:13:22 2015 UTC,"Yay! Just started reading to learn python and I knew this already.... but someone please explain, what's the difference between the sum of 2 different integers and doubling of an integer if they are the same...isn't that the same process?"
learnpython,3ddlpv,hotmailer,2,Wed Jul 15 17:12:04 2015 UTC,"If A=B , return double the sum. that is 2(A+B)."
learnpython,3ddlpv,Loregard735,2,Wed Jul 15 17:18:37 2015 UTC,Oh...thank you
learnpython,3ddlpv,hotmailer,7,Wed Jul 15 17:32:22 2015 UTC,"This is because input() returns a string. You can use the int() or float() function:  num1 = int(input(""...""))   Note that this will raise a ValueError if you type something that is not an integer (like ""a"" or ""1.5""), you can handle that with try/except"
learnpython,3ddlpv,terminak,2,Wed Jul 15 13:17:18 2015 UTC,The command line interprets inputs as strings. You must convert them to integers.   int(num1) + int(num2)   Etc
learnpython,3ddlpv,richard_mayhew,2,Wed Jul 15 13:14:28 2015 UTC,"num1=eval(input(""Hello please type in your first number:""))  This will convert the input string to an int."
learnpython,3ddlpv,phobos101,14,Wed Jul 15 14:58:24 2015 UTC,"It's best to use int. Using eval is a potential security hazard, as it would let the user run arbitrary code on the machine."
learnpython,3ddlpv,Ultimate_Timmeh,14,Wed Jul 15 15:08:08 2015 UTC,TIL not to use eval()
learnpython,3ddlpv,phobos101,3,Wed Jul 15 15:15:37 2015 UTC,"Yep, I mean it's not the best idea, but I wish people wouldn't downvote answers like yours - answers that are technically right, but wrong in practice for one reason or another. See it a lot on /r/python and other forums, and it just means people won't see the explanation why it's not a good idea.  Btw, for an explanation why, this page does a pretty good job. Apparently (I'm not gonna try it...), eval would execute code like this happily and delete everything it could on your system:  eval(""__import__('os').system('rm -rf /')"", {})   Also, worth noting this technically only applies to untrusted strings, I wouldn't say it's inherently unsafe"
learnpython,3ddlpv,Polycystic,5,Wed Jul 15 15:33:13 2015 UTC,"Any user input is untrusted. You shouldn't be able to crash a server just by typing into a box which the server presents you, as a user."
learnpython,3ddlpv,blackrat47,1 point,Wed Jul 15 16:06:41 2015 UTC,"Sure, but for people like me who only write local scripts for personal use it's not something to worry about. It's certainly worth knowing in the case I do start writing code to run interactively online, but for now it's just not an issue."
learnpython,3ddlpv,Polycystic,7,Wed Jul 15 16:56:54 2015 UTC,"But you are not likely to be re-learning basic stuff like how to get numbers as input instead of strings when you later move on, so its really best to do it the ""right"" way from the very beginning."
learnpython,3ddlpv,klug3,-2,Wed Jul 15 17:42:23 2015 UTC,"Except it does more than just get numbers as input instead of strings, and is only unsafe in a specific context.   If people are unlikely to relearn this stuff later on as you say, then dismissing something as both wrong and harmful early on seems worse, since in many cases neither is true yet they'll continue to think that."
learnpython,3ddlpv,Polycystic,1 point,Wed Jul 15 19:55:29 2015 UTC,"The entire reason they got rid of python2's input is because it did exactly this, it evaled the input. In reality, you should never ever eval user input, even if you don't think it will be used externally, it's just good practice in general"
learnpython,3ddlpv,echocage,-1,Thu Jul 16 05:19:58 2015 UTC,"you should never ever eval user input   Which is what I already said in my first post. I'm not really sure what you're arguing - that it's a good practice to never use eval? Because...why? You might accidentally run some malicious code yourself? If you're that worried, you might as well just shut off your computer since you can easily do far worse damage yourself outside of Python."
learnpython,3dg08r,learningpythonx,2,Wed Jul 15 23:49:44 2015 UTC,"Restaurant is the name of the type.  The list of restaurants is RL, and that's what you need to sort.  Side note: you don't need to provide any key function.  The default behavior of tuples (and by extension, namedtuples, since they are a subclass) is to sort element-wise.  That means that the first elements of the two tuples are compared, and if there's a tie then the second elements are compared, and so on.  Since the name is the first element, all you need is sorted(RL)."
learnpython,3dg08r,Rhomboid,1 point,Thu Jul 16 00:02:52 2015 UTC,"I see. What would I need to change for this question?  Write a function called alphabetical_names that takes a list of restaurants and returns a list of the names of all the restaurants in alphabetical order by name. [Part (1) asked for a list of restaurants; this part asks for a list of strings, with each string the name of a restaurant.]  It seems like the same question but I'm slightly confused."
learnpython,3dg08r,Rhomboid,1 point,Thu Jul 16 00:18:08 2015 UTC,"It's not quite the same question.  A list of restaurant objects is different from a list of strings.  Do you know how to get the name of a restaurant from a restaurant object?  Then do that for each restaurant object in the list to generate a list of names.  There are several ways you could do that, such as a list comprehension, a traditional loop, using map(), etc."
learnpython,3dg08r,elbiot,1 point,Thu Jul 16 01:18:39 2015 UTC,Would I use a for loop like for names in Restaurant:      print (RL.name)
learnpython,3dg08r,elbiot,1 point,Thu Jul 16 04:28:57 2015 UTC,for restaurant in sorted (RL)     print(restaurant.name)
learnpython,3dg08r,elbiot,1 point,Thu Jul 16 06:54:02 2015 UTC,I tried what you wrote but I got   AttributeError: 'list' object has no attribute 'name'   def alphabetical_names():     for restaurant in sorted(RL):         print(restaurant.name) alphabetical_names()
learnpython,3dgl41,steelcowboy1,1 point,Thu Jul 16 02:42:59 2015 UTC,"I don't think this code works. There is no way the last elif or the else will ever get executed. https://ideone.com/aDD6NP  import operator  playlist = client.playlistinfo() pos = None for i, song in enumerate(playlist)     if song['title'] == curtitle:         pos = i         break if pos is not None:     print map(operator.itemgetter('title'), playlist[pos:pos+5])"
learnpython,3dgl41,raylu,1 point,Thu Jul 16 02:54:00 2015 UTC,"I made a silly mistake and didn't run my code before posting ;) I noticed that quickly and edited it I though before someone would even notice my question lol. What is there I can confirm works perfectly, however :)    For your code, what are the benefits over what I currently have (other than it looks more professional)?"
learnpython,3dgl41,raylu,1 point,Thu Jul 16 03:17:47 2015 UTC,"The logic is much easier to follow. I had to read your version a few times and think about what happened in a bunch of cases since all the logic is tangled up (""spaghetti code"") in a giant elif block. In mine, the first bit finds the position and the second bit prints from that position."
learnpython,3dgk8g,maddoc74,2,Thu Jul 16 02:35:16 2015 UTC,conditions is a reference to the dict already: https://ideone.com/Z3yGSV  I give this question a 50% chance of being an X-Y Problem.
learnpython,3dgk8g,raylu,1 point,Thu Jul 16 02:40:10 2015 UTC,"I've since changed the naming. Sorry for being an XY problem (most likely), I don't always know exactly what to ask to get where I want to go, ya know? The other comment has a response further detailing my situation."
learnpython,3dgk8g,Rhomboid,1 point,Thu Jul 16 03:23:15 2015 UTC,"and return it after modification.    You shouldn't do that.  Either mutate the parameter and return None (which is what happens if you don't have an explicit return statement) or leave the parameter unmodified and return the new object.  It's not a huge deal, but you're sending mixed signals by doing both, when it should be an either-or situation.   I have to pass the conditions to the first one, and pass the modified conditions to the second one   You're already doing that.  Names in Python are always references to objects.  >>> def rule1(conditions): conditions['foo'] = 1 >>> def rule2(conditions): conditions['bar'] = 2 >>> rules = [rule1, rule2] >>> conditions = {} >>> for rule in rules: rule(conditions) >>> conditions {'bar': 2, 'foo': 1}   This is not to say that Python has pass-by-reference semantics, however.  The references are passed by value to the function, which means a copy (of the reference, not of the object) is made, so you can't modify a caller's parameter by simple assignment:  >>> def foo(arg): arg = 2 >>> arg = 42 >>> foo(arg) >>> arg 42   That would be possible only if Python had pass-by-reference semantics, which it absolutely does not.  It's better not to try to describe languages like Python as having either pass-by-reference or pass-by-value (although the latter is technically correct).  ""Call by sharing"" is the term commonly used to describe the situation.  The first example works where the second failed because in the first example, the code is following the reference to the object being referred to and mutating that object.  The second example is trying to modify the reference to refer to a different object, and that's acting on the local copy of the reference."
learnpython,3dgk8g,Rhomboid,1 point,Thu Jul 16 02:56:49 2015 UTC,"I think I get it... maybe. Here's an example function (denoted by current_rule):   @current_rule  def rule_014(vc):      if((vc.current_value – RANGE_MIN < -10) and (vc.current_value – vc.past_value < -3) and (vc.flow1_past > 0) and (vc.flow1_past <= (2*WEIGHT) and (vc.flow2_past = 0)):         vc.setFlows(6.2,False,2.7,False)         vc.setRuleNumber(14)      return vc   As I understand it, what this does is:   Check to see that the conditions are satisfied by reading values from the object passed in.  If the conditions are satisfied, modify the object. Otherwise, don't do anything. Return the (un)modified object.   When this loops through, I don't think it will pass the object to each rule. I don't know though, because Python does some cool things automagically to me."
learnpython,3dgk8g,Rhomboid,1 point,Thu Jul 16 03:19:18 2015 UTC,"Return the (un)modified object.   No.  There is only one object.  You are modifying it, assuming that setFlows and setRuleNumber are things that modify the object they were invoked on.  You are returning the modified object, which is totally unnecessary, especially since you aren't actually using that return value anywhere.  What you've written will work fine and the next function will see the modifications.  Why don't you try it?"
learnpython,3dgk8g,absent_observer,1 point,Thu Jul 16 03:27:02 2015 UTC,"I will! TBH, I've never any kind of Object Oriented language before, so this is a whole new ballgame. Does this mean I shouldn't return objects when my goal is just to modify them? Just modify and forget about it?"
learnpython,3dgk8g,The-Mathematician,1 point,Thu Jul 16 03:33:51 2015 UTC,"There are no hard and fast rules, but generally speaking either you mutate or you return a new value, but you don't do both.  This is the convention followed by most of the standard library, for example str.split() returns a new string and leaves the original string untouched.  (There isn't really a choice there, as strings are immutable.)  But list.sort() sorts the list in place and returns None, and similarly for list.append()."
learnpython,3ddevs,Turin_Martell,4,Wed Jul 15 11:59:15 2015 UTC,"What's happening is the package you are trying to install, pytumblr, requires the package oauth2 to work. If oauth2 won't install neither will pytumblr.  Unfortunately, oauth2 package is not compatible with python 3 (that's what causes the error you see). This in turn means that pytumblr can't be either.  You either need to find a different tumblr library, or ask pytumblr maintainers if they can use a newer oauth package that supports python 3, or switch to python 2 for the moment."
learnpython,3ddevs,ivosaurus,1 point,Wed Jul 15 17:34:57 2015 UTC,*Sigh* OK. Thanks.
learnpython,3ddevs,ivosaurus,2,Wed Jul 15 19:10:43 2015 UTC,optimistic issue...
learnpython,3ddevs,zahlman,2,Wed Jul 15 19:20:01 2015 UTC,"What exactly did you use to attempt to install it?  That file is in a temporary directory. You should not be trying to track it down. It was put there as part of a larger, more complex process that should have been able to find it. Something else messed up, and you need to walk us through step by step what you're trying to do."
learnpython,3ddevs,Rubykuby,1 point,Wed Jul 15 12:33:46 2015 UTC,"Sorry, meant to include that. I first used pip to install it which gave me a the print syntax error followed by ""Command 'python setup.py egg_info' failed with error code 1"" message. Then I downloaded the zip file from GitHub and used ""python setup.py install"" which gave me the print error again and the file path above. The first trace back during the pip installation was:  File '<string>', line 20 in <module> File C:\Users\Turin_Martell\AppData\Local\Temp\pip-build-pg9rvo2f\oauth2-1.5.211\setup.py, line 18 print ""unable to find version in %s"" %(VERSION,) Syntax Error: inavlid syntax"
learnpython,3dg4cm,zeta_orionis,2,Thu Jul 16 00:22:45 2015 UTC,"This link walks you through it.   Install LiveEdit plugin (and reboot PyCharm) File > Settings > Build, Execution, Deployment > Debugger > Live Edit Check Auto in (ms) Install the Chrome extension In your html file, right click and click 'Debug blahblah.html' or set up a run configuration in the top right of the IDE. Whatever, just click the green bug. You can do this, I believe in you. ??? Profit."
learnpython,3dec2k,ultimatemanan97,4,Wed Jul 15 16:37:56 2015 UTC,"a, b = input().split()"
learnpython,3dec2k,anonymousperson28,1 point,Wed Jul 15 16:53:59 2015 UTC,thanks
learnpython,3dg0o1,Northstat,3,Wed Jul 15 23:52:58 2015 UTC,Regex. You should be able to figure it out pretty quickly with some google.
learnpython,3dg0o1,usernamedottxt,1 point,Thu Jul 16 00:25:45 2015 UTC,"Nice. I used the following:  df['jobtitle'].replace( to_replace='.*[Ee]ngineer.*', value= 'Engineer', regex=True, inplace=True )"
learnpython,3ddp8e,riscie,2,Wed Jul 15 13:41:46 2015 UTC,"If memory serves, you use question marks for parameterization   cursor.execute(""SELECT [ref_gebruiker], [naam], [ref_lokatie], [objecttype], [specificatie] FROM [TOPDESK_PROD].[dbo].[hardware] WHERE naam = '""+hostname+""'"")  cursor.execute(""SELECT [ref_gebruiker], [naam], [ref_lokatie], [objecttype], [specificatie] FROM [TOPDESK_PROD].[dbo].[hardware] WHERE naam = ?"", hostname)   However the LIKE statement will have to stay, you cannot do the same method for a LIKE.  Unless the database name is not the same as the one specified in the pyodbc.connect string, you don't really have to do [TOPDESK_PROD].[dbo]. you can just say the table name.  A pyodbc.cursor also returns the columns as attributes for each object. So when you have:  rows = cursor.fetchall() if rows:     for row in rows:         # Instead of row[0] for naam you can use:         print(row.naam)   You could even shorten that to:  for row in cursor.fetchall():     print(row.naam)"
learnpython,3ddp8e,ramse,1 point,Wed Jul 15 14:06:40 2015 UTC,"However the LIKE statement will have to stay   This isn't correct. Accept the like query param and munge the data to put the wild cards quotes and wild card symbols around it.  Python has cool trick w/ arrays. Double quoted strings don't need to  be separated by a comma. With this you can clean up your query.   sql = [     ""SELECT long, list, of, attributes ""     ""FROM table ""     ""WHERE something = something_else"" ]   this helps w/ dynamic queries as you can check param objects and append ""AND""/ ""OR"" clauses to the statement.  if some_param: sql.append(""AND some_param = some_param "")   Also it allows you to dry(don't repeat yourself) up the code if the queries are similar.   and you'd execute the query like:   cursor.execute("""".join(sql), params)"
learnpython,3deim0,hovissimo,1 point,Wed Jul 15 17:25:07 2015 UTC,why do you need a lock there?
learnpython,3deim0,LarryPete,1 point,Thu Jul 16 13:31:34 2015 UTC,"Fun fact is I don't.  I thought that Bottle could be handling requests asynchronously and I might end up with a race condition over the header.  The code's already shipped, I'm just asking the question because I don't understand what asyncio is doing."
learnpython,3deim0,LarryPete,1 point,Tue Jul 21 09:34:57 2015 UTC,"I'm pretty sure bottle does not handle the requests asynchronously the same way asyncio does.  Asyncio ""misuses"" the yield from functionality to be able to suspend a function in the middle of it's operation and give control back to the event loop that's handling all the ""futures"" that are yielded by that suspended function.  The yield from in write_records makes it into a generator, which can be used as a coroutine (coroutines in asyncio are essentially generators). What's supposed to happen is, that you'd have an event loop running that takes those coroutines/generators and issues next() on them to get whatever they are yielding, which is usually another coroutine or any instance of asyncio.Future or of a subclass like asyncio.Task.  As an example:  >>> import asyncio >>> g = asyncio.sleep(5) >>> g <generator object sleep at 0x7fb152240510> >>> next(g) <Future pending> >>> loop = asyncio.get_event_loop() >>> loop.run_until_complete(asyncio.sleep(5)) >>> # waited 5 seconds   or  >>> g = asyncio.sleep(5) >>> loop.run_until_complete(next(g))  # take the future and pass it >>> # also took 5 seconds   here the event loop takes any task or generator and consumes all yielded tasks or generators, until it's complete.  To make it look a little bit more like your example (function with yield from):  >>> import asyncio >>> def foobar(): ...     yield from asyncio.sleep(10) ...     print('slept!') ...  >>> loop = asyncio.get_event_loop() >>> loop.run_until_complete(foobar()) slept!   In order to process it with asyncio, you need to handle it with an event loop. Bottle does not have such an event loop (afaik), and I doubt you can just use the asyncio one and expect it to ""somehow"" work. Especially the thing you're trying to do (preventing mulitple processes to modifiy the file at the same time) won't work that easy.  To get to the thing you're trying to do:  It highly depends on whether you use multiple processes, multiple threads or even both with your bottle app. If it's just one process and multiple threads, you probably can get away with using locks from the threading module. If you have multiple processes it might get a bit more difficult and into an area I don't have much experience (something about file locks from your operating system)."
learnpython,3dez7z,Hypogeum,2,Wed Jul 15 19:19:11 2015 UTC,I'd recommend looking into wordlist!
learnpython,3dez7z,echocage,1 point,Wed Jul 15 19:43:13 2015 UTC,Thanks I really appreciate it. I'll look into this!
learnpython,3dez7z,b4ux1t3,2,Wed Jul 15 19:50:36 2015 UTC,"You could simply use a text file from something like puzzlers. Here is one. You just open it like you would any other file (after you download it!):  f = open(""pocket.txt"", ""r"") for line in f:     print line   2-3. You could use PyGame for a GUI, since it does a great job handling user input. It's pretty simple to pick up, too!"
learnpython,3dez7z,Sirkk,1 point,Wed Jul 15 20:39:36 2015 UTC,Great thanks! I'll start learnin me some pygame.
learnpython,3dfpkj,mistahwhite,2,Wed Jul 15 22:25:50 2015 UTC,Can you not just pass this off to linux using pdftotext?
learnpython,3dfpkj,deamer44,1 point,Wed Jul 15 22:48:59 2015 UTC,I tried using pdftotext but I don't know how to use it with windows. And I couldn't find anything through google.
learnpython,3dfpkj,liam_jm,1 point,Wed Jul 15 22:56:11 2015 UTC,Give PDFMiner a go :)
learnpython,3dfpkj,liam_jm,1 point,Wed Jul 15 23:12:27 2015 UTC,No python 3 support unfortunately
learnpython,3ddi5o,Visti,1 point,Wed Jul 15 12:33:43 2015 UTC,Maybe pdb can help you
learnpython,3ddi5o,04h,1 point,Wed Jul 15 14:32:34 2015 UTC,"Thanks, I'll look that up!"
learnpython,3ddi5o,The-Mathematician,1 point,Wed Jul 15 14:37:39 2015 UTC,"Heads up, your API_SECRET is called that for a reason."
learnpython,3dfnj3,chalupataco2,1 point,Wed Jul 15 22:09:48 2015 UTC,"Does the site use Javascript for login or search? If not, you should be able to use requests in place of Selenium. Otherwise, Python itself can't execute Javascript, so if a site needs Javascript you need to use something like PhantomJS."
learnpython,3dfnj3,ruicoder,1 point,Wed Jul 15 22:48:05 2015 UTC,"I would use phantomjs, or just make the requests raw, I've also heard good things about mechanize"
learnpython,3dfmeo,TheXRTD,2,Wed Jul 15 22:01:33 2015 UTC,"I tend to use dirpath, dirnames, filenames in os.walk, as I find that the clearest names for what os.walk does.  You should not add or remove files/directories while you are doing an os.walk. It would be better to build up a list of directories to remove, then remove them after you have built the list.  Line 5 has this classic mistake. '.mp3' will always be truthy. If you fix that to if '.mp3' in subdir or '*.wav' in subdir, you are still not checking the right thing - this is checking for those 2 text strings against the name of each subdir. You instead need to check whether any of the filenames end with those 2 strings.  Unless the directory always goes to depth 1 (i.e. dir/subdir/file), you need to consider what happens if a directory contains no MP3/WAV files but does contain other directories that do.  Here's some code that should hopefully get you started:  directory = ""C:\Users\XPS 8500\Desktop\Test""  dirs_to_remove = [] for dirpath, dirnames, filenames in os.walk(directory, True):     if not any(filename.endswith('.mp3') or filename.endswith('.wav') for filename in filenames):         dirs_to_remove.append(dirpath)  for dir_to_remove in dirs_to_remove:     os.rmdir(dir_to_remove)"
learnpython,3dfmeo,liam_jm,1 point,Wed Jul 15 23:21:00 2015 UTC,"Thank you very much for this, I will read over it and try to understand exactly what's going on and see if it does what needs to be done!"
learnpython,3dfmeo,Rhomboid,1 point,Wed Jul 15 23:35:34 2015 UTC,"There's a few things wrong with your approach:   An expression like 'foo' in str does a simple substring test.  It doesn't know anything about wildcards. An expression like 'foo' or 'bar' in str does not do what you think.  It's parsed as 'foo' or ('bar' in str) and since 'foo' is truthy, this expression is always true.  This isn't actually testing anything. subdirs is just a plain Python list.  Removing something from that list, as with subdirs.remove(), does not remove the directory or the files within it.  The only effect this has is to prevent os.walk() from descending into that directory, but you don't care about that. I'm not really convinced that os.walk() is what you want, because that's suited for recursive traversals, but in your use case there's no recursion needed, since the tree is flat.  (That is, you aren't trying to look for nested subdirectories.) If you want an actual backslash in a string literal, you need to either quote it (\\) or use raw strings.  You can also use forward slashes to avoid the hassle.  (Yes, Windows is perfectly fine with forward slashes.)   Here is how I'd write that script:  import os import glob import shutil  os.chdir('C:/Users/XPS 8500/Desktop/Test')  for entry in os.listdir('.'):     if not os.path.isdir(entry): continue      def contains_no(ext):         return len(glob.glob('{}/*.{}'.format(entry, ext))) == 0      if contains_no('mp3') and contains_no('wav'):         shutil.rmtree(entry)   Here are some notes about why I did what I did:   The way (or a way) to check if a directory does not contain a certain type of file is to check if the glob that would match that kind of file returns a list of length zero. Because the building of that glob is kind of ugly, I wrote a small inline helper function so that I wouldn't have to repeat it twice. A lot of people will tell you to use things like os.path.join() when working with paths, since that will use slashes or backslashes as appropriate for your operating system.  That's fine I suppose, but as I mentioned before, the Windows filesystem APIs are 100% fine with the forward slash as the path separator, and this has been the case for decades, since DOS 2.0 in the early 1980s.  Individual applications, like Windows Explorer or cmd.exe might not understand them, but none of those are involved here.  The actual filesystem APIs are just fine with it. os.rmdir() will remove a directory, but only if it's empty.  os.remove() / os.unlink() will remove a file but not a directory.  There is in fact no direct syscall for removing a directory that contains files, you have to first remove all the files and then remove the directory.  Thankfully that logic is already implemented for you as shutil.rmtree(). I began the script by changing the current working directory to the top of the tree.  That eliminates having to form relative paths to each entry, because os.listdir() only returns names, not paths. You don't have to care about directories named '.', those are automatically filtered for you by os.listdir() (and os.walk() for that matter.)"
learnpython,3dfmeo,Rhomboid,1 point,Wed Jul 15 23:19:32 2015 UTC,"Wow, what a reply, thank you so much for explaining what you did too. I love the idea behind returning length 0 to mean it doesn't contain the file.  It worked EXACTLY as planned. This is fantastic, thank you very, VERY much. Aside from the code, I've learned a few things about using os.walk().   I do have one question, what is the function of:  if not os.path.isdir(entry): continue   Forgive me for being such a beginner."
learnpython,3dfjjj,sonofeast11,1 point,Wed Jul 15 21:40:14 2015 UTC,"You can't do implicit multiplication. So (b**2)(blah blah is first doing b**2, returning an int, then finishing the right side, then trying to call that int. Change it to (b**2)* blah blah blah  EDIT: fixed markdown"
learnpython,3dfjjj,The-Mathematician,1 point,Wed Jul 15 21:55:29 2015 UTC,"Fixed it, thanks!"
learnpython,3ddpab,jpfau,6,Wed Jul 15 13:42:12 2015 UTC,"You are only calling init_foo() once and storing the result. So no, it will not be called 10 times. You could easily confirm that with a print in your init_foo function."
learnpython,3ddpab,terminak,3,Wed Jul 15 14:14:59 2015 UTC,FOO_CONSTANT is defined when you import the module.
learnpython,3ddpab,xiongchiamiov,1 point,Wed Jul 15 16:01:21 2015 UTC,"If the real program is like this model, the foo_constant is evaluated once and is equal to the return of init_foo().  However, if you are passing an argument to init_foo(), then init_foo() will run each time foo_constant is called.  That would be, if you real program looks more like:  def init_foo(y):     return y  foo_constant(x) = init_foo(y)  def get_foo_bar(z):     return foo_constant(z) + 'bar'   This website is great for watching the program, step-by-step.  python tutor  Here is the equivalent code (the website only accepts standard library imports):  class module1:     def init_foo():         return 'foo'      FOO_CONSTANT = init_foo()      def get_foo_bar():         return module1.FOO_CONSTANT + 'bar'  # module2.py #import module1  def main():          for i in range(10):         print(module1.get_foo_bar())  if __name__ == '__main__':     main()"
learnpython,3dchjj,explore_repeat,6,Wed Jul 15 04:50:08 2015 UTC,Some that I have marked for future investigations. I haven't read any of these so I can't comment specifically on their value or relevance (or even Python version):  *Python for Data Analysis  *Think Python: How to Think Like a Computer Scientist  *Python for Computational Science and Engineering  *Python for Scientists  *Data Science from Scratch
learnpython,3dchjj,cydcarter,1 point,Wed Jul 15 12:40:45 2015 UTC,"Another vote for ""Think Python.""  One of the best texts I've tried but haven't looked at the others on this list.  If you're new to programming you could try Learn Python The Hard Way to get the basics."
learnpython,3dchjj,mpbikeman,1 point,Wed Jul 15 15:43:48 2015 UTC,Are these for Python 2 or 3 (and will it matter)?
learnpython,3dchjj,MisspelledUsrname,1 point,Wed Jul 15 20:39:08 2015 UTC,"For the most part, scientific python stuff seems to be still stuck on v2.x due to a few hold-out libraries, although that may be changing soon.    Personally, I'd suggest using Python 3.x whenever possible - not much point in running 2.x and then having to use from __future__ import division to get sensible default behavior.  Most of the user-visible changes such as print() vs print, etc. can be coded as such in python 2.x or python 3.x - so if you do decide to go with 2.x, you can save yourself some trouble down the road and future-proof your code now."
learnpython,3dchjj,memilanuk,2,Wed Jul 15 22:45:14 2015 UTC,A Primer on Scientific Programming with Python
learnpython,3dchjj,memilanuk,1 point,Wed Jul 15 06:30:20 2015 UTC,Do you have this book yourself? How do you apply it? can you give an example?
learnpython,3dchjj,Hayertjez,2,Wed Jul 15 07:29:54 2015 UTC,"I do have it; unfortunately my use of Python took me another direction and I haven't had a chance to utilize much of what this book offers.  There are a lot of other resources out there that cost less, or are free.  Something to note is that this is not a small book - it runs something over 850 pgs.  The preface suggests using the book alongside a course in calculus or similar if that helps frame it for you.  There is a page for the book code that has some examples, slides, etc. that may be helpful for you."
learnpython,3dchjj,memilanuk,1 point,Wed Jul 15 09:41:18 2015 UTC,Software Carpentry was built with scientists in mind: http://swcarpentry.github.io/python-novice-inflammation/
learnpython,3ddbuj,MaxwellSalmon,1 point,Wed Jul 15 11:20:08 2015 UTC,"If you have saved the image to a variable, that variable should have a coordinates attribute..."
learnpython,3ddbuj,goodyguts,1 point,Wed Jul 15 12:59:07 2015 UTC,Can you make an example? I'm pretty lost on this one :-)
learnpython,3ddbuj,goodyguts,1 point,Wed Jul 15 14:18:24 2015 UTC,"Actually, no. I was just guessing. It should work the same. Can you give me an example that doesn't work?"
learnpython,3ddbuj,goodyguts,1 point,Wed Jul 15 17:40:59 2015 UTC,"This is the function that causes the error:     def remove(self):             self.sky1_pos = g.canvas.coords(self.sky1)             self.sky2_pos = g.canvas.coords(self.sky2)             self.hus_pos = g.canvas.coords(self.hus)             self.tree_pos = g.canvas.coords(self.tree)          if self.sky1_pos[0] < -110:             self.active[0] = False         if self.sky2_pos[9] < -110:             self.active[1] = False         if self.hus_pos[0] < -100:             self.active[2] = False         if self.tree_pos[0] < -100:             self.active[3] = False   I know g.canvas is working, since I've been using it other places in my code.  When printing the coordinates on the images, I get an empty list. - The error is saying, that there's no such position as self.sky1_pos[0]"
learnpython,3dd83u,Gregman,2,Wed Jul 15 10:28:53 2015 UTC,"Oh snap!  I hope this answer will help someone!  Just use:  tasks = [     asyncio.async(factorial(""A"", 2)),     asyncio.async(factorial(""B"", 3)),     asyncio.async(factorial(""C"", 4))     ]   Instead."
learnpython,3dd83u,LarryPete,1 point,Wed Jul 15 10:43:46 2015 UTC,New in version 3.4.4   ;)
learnpython,3df4fi,OptioMkIX,1 point,Wed Jul 15 19:53:50 2015 UTC,"You can get the regular diagonal using A.diagonal(). The negative diagonal using A.flat[step:-step:step] where step = len(A) - 1.  If I'm not misunderstanding, couldn't you just plot them with something like plt.plot(A.diagonal(), B.diagonal()) ?"
learnpython,3df4fi,Covered_in_bees_,1 point,Wed Jul 15 20:57:27 2015 UTC,"This is my problem. np.diagonal returns only the principle diagonal of each array from element [0,0] to say [4,4] through [1,1],[2,2] and [3,3] in turn.  My problem is that I need all of the diagonals of these arrays, not only the principle diagonal."
learnpython,3df4fi,Covered_in_bees_,1 point,Wed Jul 15 21:25:15 2015 UTC,"When you say all diagonals, do you mean offset diagonals around the principal diagonal? So for   array([[0, 1, 2],        [3, 4, 5],        [6, 7, 8]])   you would want [6], [3, 7], [0, 4, 8] , [1, 5], [2] and similarly the corresonding ""negative"" diagonals?  np.diagonal() actually has an offset parameter that you could use to do this for positive diagonals. You could use the numpy flip methods to flip the array and do the same to get them for the negative diagonal."
learnpython,3df4fi,Covered_in_bees_,1 point,Wed Jul 15 21:36:33 2015 UTC,"I knew about fliplr.   I was more looking for a neater way of going through the offsets and plotting them in a way that would avoid having to generate a mass amount of arrays of the diagonals and plotting each pair A,B with a separate plt.plot line - there are at least four different regions, each with an A and B array for coordinates, each 50x50 - the large numbers make for some serious crunching even without creating even more arrays to keep track of.   Is there a nice way of avoiding this problem? :/"
learnpython,3df4fi,Covered_in_bees_,1 point,Wed Jul 15 21:49:04 2015 UTC,"I'm not sure I entirely understand the issue. Ultimately, you will still have to provide arrays of x, y values to matplotlib for plotting. For simplicity in code, the diagonal() and fliplr approach will probably be hard to beat. From an efficiency standpoint, using np.flat with different indexing sequences as in my post above will help you generate different views into the A and B arrays for the elements you care about along the diagonals. Since the flat method returns a view, this should be efficient as it avoids creation of many in-memory copies of each diagonal.  You could also play with Numba and Cython for ultimate performance gains if performance is key. Both will likely give you good speed gains as you are going to have a bit of a bottleneck with the Python loop for generating a view/copy of each diagonal of the array. Numba and Cython should be able to accelerate that loop to C level speeds."
learnpython,3df1b2,zombie2870,2,Wed Jul 15 19:33:02 2015 UTC,You're trying to subtract 5 (an integer) from a string and that's causing the TypeError. And instead of subtracting you should divide the total by 5. Try:  print('the average is ' + str(total / 5))   or as the bot suggests:  print('the average is {}'.format(total / 5))   It's also a good idea to keep the calculations separate from the output. So you could add a line average = total / 5 first and then print average.
learnpython,3df1b2,dunkler_wanderer,2,Wed Jul 15 19:55:27 2015 UTC,"Let's clarify first: this is your code, formatted:  #finding the average of 5 numbers # tell person to type 5 numbers  print('plaese type 5 diffrent random numbers') number1=int(input()) #first number number2=int(input()) #second number number3=int(input()) #third number number4=int(input()) #forth number number5=int(input())#fifth number # program adds all the numbers togther  total= number1+number2+number3+number4+number5 print('you added up to ' + str (total)) # program then finds the aveagre  print ('the average is' + str (total) - 5)     Next, the traceback tells you what the error is and where it is. In this case, it tells you that you're trying to subtract an int from a string. That's happening here:  print ('the average is' + str (total) - 5)   For what you're trying to do, you probably just want to subtract 5 from the total, right?  print ('the average is' + str (total - 5))     Finally, ask yourself: What is an average, and how do you calculate it?"
learnpython,3df1b2,JustTurrble,2,Wed Jul 15 19:55:38 2015 UTC,thank you so much for your help i manged to finsh the program and it works fine now thank you (:
learnpython,3df1b2,Justinsaccount,1 point,Wed Jul 15 19:58:48 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3df1b2,ummmbacon,1 point,Wed Jul 15 19:35:58 2015 UTC,hi im still struggling with this i changed my code so it looks like  print('you added up to {}'.format(total)  program then finds the aveagre  print ('the average is {}' - 5.format(total)  but im still getting the same error
learnpython,3dbk5o,itsmabby,9,Wed Jul 15 00:15:36 2015 UTC,"Normally, you would raise NotImplementedError instead of pass.  Abstract classes often implement some of an interface and leave the rest up to the inheritor/implementor.  Not really, unless you count a bunch of methods that raise NotImplementedError.    In general, OOP is a tool taught to newbies by academic programmers with little-to-no real world experience. It's taught using trivial examples for which an OOP solution is severely overengineering for. Once they learn that this is the ""correct"" usage, they then go apply their new-found hammer to every problem they see, no matter how un-nail-like it may seem. This is how the Java standard library was invented."
learnpython,3dbk5o,raylu,1 point,Wed Jul 15 00:46:13 2015 UTC,"I wasn't aware of that exception. Thanks for pointing it out.  Yes, this is what I'm currently struggling with. When my lecturer talked about OOP, he used things like Person class or Vehicle class to explain OOP but I feel like it's overly simplified. When I look into the source code of frameworks like Flask or webapp2, I see they use classes behind the scenes but I still don't understand why it works that way. I get the basic idea that classes are blueprints, and objects are instances of a class. That's all I can understand so far but I am struggling to move past it."
learnpython,3dbk5o,F22Rapture,1 point,Wed Jul 15 01:01:30 2015 UTC,"It seems like you understand how OOP works, but no so much why it's used.  Is that what you're asking?"
learnpython,3dbk5o,FallenAege,2,Wed Jul 15 05:55:58 2015 UTC,I haven't found any uses for it other than building a library. It usually makes sense to have variables and functions without having to create a new class for them.
learnpython,3dbk5o,zahlman,1 point,Wed Jul 15 08:11:28 2015 UTC,"Yeah pretty much. When I'm writing programs, I find myself always going procedural and not thinking much if at all about OOP. Even though I get the basic idea of how it works, I don't understand why or when I should use it."
learnpython,3dbk5o,Brian,3,Wed Jul 15 20:34:36 2015 UTC,"What is the point of the class Shape in this case? I feel it's redundant, unless I'm missing something here. What is an abstract class and what is it used for?    These are kind of the same question, and the possibly disappointing answer is that in Python and for an example like this, it doesn't do much of anything really. In fact, to really make an ""abstract"" base class - in the sense of one that can't be instantiated - requires you to jump through some hoops that people don't normally bother with in Python (and that can probably be circumvented anyway).  The more important question is what inheritance is used for. Two things:   It's a mechanism for code reuse. Unfortunately, there's nothing really to reuse here, because of how radically differently the Shapes compute their areas and perimeters. It indicates subtyping: if you create x = Rectangle(1, 1), then isinstance(x, Shape) will be True.    I saw a solution for this problem in Java, and it talked about using an interface instead of an abstract class. Does Python have something like Java's interface?    Not formally, no. Well, there are two concepts that are being conflated here:   ""Interface"" in the general computer-science sense, which just means ""the rules for how you use something and what it does in response"". You can speak of the interface to a function, describing its parameters and return value, for example. Interface the Java keyword, and Java-specific concept. This is a restriction of the ""abstract class"" idea, getting rid of all the ""code reuse"" stuff so that you can focus on describing a data type. In Java, you're allowed to inherit from multiple interfaces, but only one class (abstract or otherwise). This simplifies the logic for figuring out which code gets reused, at the expense of a lot more boilerplate.   Anyway, in Python, we have an informal concept called a protocol. The idea is that certain pieces of code are written to expect that they'll be fed instances of classes, such that the classes implement methods that have specific names/parameters/return values, and do the right thing. A simple example is the length protocol: You give your class a method named __len__, that accepts only self and returns an integer; and then outside code is able to call len on instances of your class, and that will use the __len__ method (and type-check the result). If you implement the ""iterator protocol"", using the __iter__ and __next__ methods, you make it possible to iterate over an instance of your class using a for loop or a comprehension (and also make it possible to pass it to the list, tuple etc. constructors). The built-in range (xrange in 2.x) does this, carefully designed so that it can represent a large range of values without actually storing them all in memory."
learnpython,3dbk5o,elbiot,3,Wed Jul 15 04:26:16 2015 UTC,"What is the point of the class Shape in this case? I feel it's redundant   In python, it mostly is, in that you could remove it entirely, and everything would work the same way.  This is because python's handling of interfaces is somewhat looser than something more strongly typed, in that it allows for ""duck typing"".  This is so named in reference to the saying ""If it looks like a duck, swims like a duck and quacks like a duck, it's probably a duck"".  In short, so long as you define all the methods that a duck (or here, a shape) requires, your class can be used anywhere a shape is needed, nothing further required.  However, many languages are much stricter about what something is.  Ie. just because the Gun and the Pen classes implement a draw() method, doesn't mean these can be used interchangably.  This is something enforced by the type system, where you'll be declaring the type of a variable, parameter or instance variable in advance, and the language will forbid you from putting anything in that variable that is not either that type, or a subclass of that type.  Eg. when you write:  Shape myShape = new Rectangle(10,10);   you can't assign to myShape anything that doesn't inherit from the Shape class, even if it happens to implement area() and perimiter() methods.   What is an abstract class and what is it used for?    Basically an abstract class is a class that serves as a base class for these types of thing.  It differs from a concrete class in that it isn't anything on its own - you can't create a Shape object, only subclasses of Shape, which fill in the missing functionality required.  It may define methods, and even some functionality, but this functionality is essentially incomplete - it needs to be built on by subclasses to make something you can use.   I saw a solution for this problem in Java, and it talked about using an interface instead of an abstract class.   Interfaces are essentially even more limited than an abstract class.  Not only can you not instantiate them on their own, they also don't contain any functionality.  They basically just say ""Here are the methods that this class supports"".  In your shape example, Shape could easily be an interface - it doesn't do anything, just says what methods are expected for anything that subclasses it.  Again, in python, there's no language enforcement of interfaces, since it uses the duck typing approach - the interface basically is just having methods named like that, and anything with those methods conforms to the interface.  The equivalent is essentially just documentation - though often a dummy base class like the above may be added for illustrative purposes.  In something like Java, you need to declare that you're implementing that interface before anything that wants to use stuff with that interface.  Ie if we declare a variable:  IShape someShape;   It limits anything we assign to this to something implementing the IShape interface (interfaces are conventionally prefixed with I), meaning that it must not only have the perimiter and area methods that IShape specifies, but it must also say it implements the IShape interface explicitly."
learnpython,3dbk5o,zahlman,5,Wed Jul 15 04:55:33 2015 UTC,"I think this is a good video: Stop Writing Classes  One line in that particulalrly relevant to you is ""Classes are not for making taxonomies"".  The Shape class really does nothing.  The only case you'd ever want that is if you found yourself writing  if isintance(obj, Rectangle) or isinstance(obj,Circle) or ...   or just verifying that an object has an area and a perimeter in general.  But  if 'area' in obj.__dict__ and 'perimeter' in object.__dict__   does the same thing and avoids the problem of someone having instantiated a Shape object that technically has those methods but all they do is pass (where, even though isinstance(obj, Shape) returned True, the object doesn't actually implement those methods.)  And really, just a try/except AttributeError is the standard way of dealing with that sort of uncertainty.  Or just let the exception happen.  Why was the user trying to get the area of string anyways?  Do you really want to handle those cases gracefully?  The Class heirarchy should be for reducing the amount of code you write, not increase it.  If, say you defined __lt__, __gt__, etc in there so that you could do if this_circle < that_square.  But if you don't want something like that, then I'd say don't have a Shape class.  No one will ever instantiate one and it lends no functionality to subclasses that derive from it.   edit:  I just use inheritance in a project I posted here.  Check it out.  The objects actually derive functionality from the parent class, and thus saved re-writing a lot of code and make refactoring easier:  https://github.com/Permafacture/terminal_windows/blob/master/windows.py"
learnpython,3dbk5o,elbiot,3,Wed Jul 15 00:48:47 2015 UTC,if 'area' in obj.__dict__ and 'perimeter' in object.__dict__   Please don't do this; use hasattr.
learnpython,3dbk5o,raylu,1 point,Wed Jul 15 04:26:50 2015 UTC,"I agree,  I would never do the former, and have only used the latter once or twice."
learnpython,3dbk5o,elbiot,2,Wed Jul 15 05:24:54 2015 UTC,"Completely unrelated sidenote:  hasattr(obj, 'area')"
learnpython,3dbk5o,elbiot,1 point,Wed Jul 15 02:14:03 2015 UTC,"https://github.com/Permafacture/terminal_windows/blob/master/windows.py   I took a look at your code, and I have a question. Did you have classes in mind from the start when you were writing the code for window? When does it become clear that OOP is the better approach instead of something procedural? I'm still loading the video so I don't know if those questions are answered in it.  So you have class Windowthat acts as sort of a very general catch-all class for all kinds of windows. It has attributes and methods common to any and every window. Then you have something like StringWindow, which is a specific kind of Window that inherits from the parent class but also has its unique methods. It's like a top-down approach of handling it, right?"
learnpython,3dbk5o,JayTh3King,2,Wed Jul 15 01:18:16 2015 UTC,"I did have classes in mind because from the begining I knew that I would have multiple windows that all shared a common ""interface"" (attributes and methods).  Then, when I saw that I would have more types of windows, I knew I would have a heirarchy.  I actually took some of my original code out of Window when I realised I wanted a StringWindow that had some functionality which should not be in common with EditorWindow, but both should have position, size, and be able to draw a border for themselves.  Now, if I want to change how borders are drawn, I just change it in one place.  If I want to dynamically re-size the windows, I only do it in one place.  If I want a Window that is a thread that takes it's input from a socket and displays it, well most of that functionality is already in StringWindow, so I don't have to re-write that code.  My thinking was to minimize re-writing code though, not to have a taxonomy."
learnpython,3delk8,TheRomanista,1 point,Wed Jul 15 17:45:22 2015 UTC,"You can write to any html file as if it were a .txt  with open(""hi.html"",""r"") as e:     e.write(""<h3>Hi</h3>"")"
learnpython,3delk8,maxibaby,1 point,Wed Jul 15 17:52:46 2015 UTC,What if I had an existing HTML file? How would I take the output variable from my python file and stick it into ny existing HTML file?
learnpython,3delk8,Fuzzmiester,1 point,Wed Jul 15 18:10:40 2015 UTC,"In general, you wouldn't.  Normally, you'd be using a templating engine, so you'd have a template, which contains all the static html, and then has a replacement variable, which, when you use the template engine, fills in with some parameters you hand it.  https://docs.djangoproject.com/en/1.8/ref/templates/"
learnpython,3delk8,liam_jm,1 point,Wed Jul 15 18:28:00 2015 UTC,"""r"" won't work"
learnpython,3degjp,wookrook,1 point,Wed Jul 15 17:09:55 2015 UTC,"So for this ad here: https://boulder.craigslist.org/tch/5122913301.html[1] I am trying to parse this section of the code: <section class=""userbody""> <div class=""mapAndAttrs"">  <p class=""attrgroup""><span>compensation: <b>$20-$23 Per hour</b></span><br></p>  <div class=""no-mobile"">      <div id=""printcontact""></div><p>     <div id=""qrcode""></div> </div>   </div>  <section id=""postingbody"">"
learnpython,3de7cp,niftykettles,3,Wed Jul 15 16:04:04 2015 UTC,"You don't want to store in a dictionary, since you can only have 1 entry per ""Path"" key. You want a list.  cfg_to_update = []  # Blank list ...             cfg_to_update.append(os.path.join(root, file))   You could use glob to significantly reduce your work:  from glob import glob PATTERN = ""web*.config"" for root, dirs, f in os.walk(inetpub):  # Scans the root folder of inetpub     cfg_to_update.extend(glob(os.path.join(root, PATTERN)))"
learnpython,3de7cp,novel_yet_trivial,1 point,Wed Jul 15 16:14:10 2015 UTC,"Ah ofcourse, I'm going to have to redo the codeacademy list/dictionary chapters.  Many thanks - not heard of glob I'll look into it."
learnpython,3de7cp,novel_yet_trivial,1 point,Wed Jul 15 16:26:09 2015 UTC,We have a saying in my lab: A day or 2 of programming can save you 10 minutes of google. :)
learnpython,3de7cp,terminak,2,Wed Jul 15 16:29:50 2015 UTC,"A dictionary contains key = value pairs. When you do cfg_to_update['Path'] = .. you assign to the Path key, but the next iteration of the loop will overwrite that key, so you will end up only with the last file found.   What you want is to collect your results in a list; cfg_to_update = [] and cfg_to_update.append(os.path.join(root, file))"
learnpython,3dd4cc,NeonBlizzard,2,Wed Jul 15 09:36:42 2015 UTC,ima beginner too so i may be wrong. but in your code you have open() but no close() so the file is in limbo isnt it? you could also try a with so that you dont need to close.
learnpython,3dd4cc,trowawayatwork,2,Wed Jul 15 09:51:18 2015 UTC,"CPython will eventually clean up open file descriptors. But yes, it's best to explicitly close the file and to only keep it open for as long as you need it.   Even better, open has supported the context manager protocol for quite a while now, meaning it's easy to do it like this:  with open('somefile.ext') as fh:     #do stuff with opened file   Using this idiom means that the file will always be closed outside of something like sys.exit being called in the block -- though, CPython should still close the file automatically when it shuts down.  If you're using a file like object that has a close option, there's also the closing context manager. For example, you can do this with urllib:   with closing(urllib.urlopen('some.uri.tld')) as page:      # do stuff with content here   And the connection is ensured to be closed automatically."
learnpython,3dd4cc,kurashu89,1 point,Wed Jul 15 13:57:52 2015 UTC,"I see a couple things wrong with your code here.  First, in the third line of your findPicture function, you're calling another function that is undefined.  Secondly, opening images is a little different from opening a regular file. First you need to create a buffer (StringIO), and then you need to read from your file object TO the buffer, like this:  import StringIO  buffer = StringIO.StringIO() buffer.write(open('path/to/image.jpeg', 'rb').read()) buffer.seek(0)   Then you can use something like the Image library to utilize the data in the buffer and turn it into something usable."
learnpython,3dd4cc,njosnavel,1 point,Wed Jul 15 11:46:19 2015 UTC,"Why isn't there a function that behaves in the same way as getAFile(), but rather than requiring inputs, just takes a path and grabs that file, which I can then perform makePicture on."
learnpython,3dd4cc,Justinsaccount,2,Wed Jul 15 12:26:52 2015 UTC,"You need to read the documentation for the things you are using. According to the documentation for this ""JES"" thing:  makePicture     makePicture(path): path: the name of the file you want to open as a picture   so makePicture just wants the path to the file. which means your function should just be  def findPicture(workingFile):     picture=makePicture(workingFile)     return picture   or  def findPicture(workingFile):     return makePicture(workingFile)   Which means that your findPicture is really just a copy of makePicture and has no reason to exist."
learnpython,3dd4cc,Justinsaccount,1 point,Wed Jul 15 12:47:01 2015 UTC,"Thank you so much. That did it. Seriously, thank you."
learnpython,3dd4cc,kurashu89,1 point,Wed Jul 15 12:54:45 2015 UTC,"I don't know anything about this findPicture and makePicture stuff, but reading a file into a StringIO object is definitely not correct.  The point of the StringIO class is to make strings work like files.  You are making a file work like a file, which it already was.  A file object and a StringIO object behave the same way. The error was that 'file' object is unscriptable and a StringIO object is equally unscriptable.  Going to reply to OP on how to actually fix this."
learnpython,3dcbqv,ev1lchink,1 point,Wed Jul 15 03:57:43 2015 UTC,"I completed the Codecademy Python course and thought I would be set to go into the wild and code but I was proved wrong, the course had left out many key aspects and had quickly gone over others.  I have since started Learn Python The Hard Way which goes far more in depth but is quite dry and the Coursera Python course, I cannot comment on that so far as it only commenced 4 days ago."
learnpython,3dcbqv,squeezedfish,1 point,Wed Jul 15 14:46:18 2015 UTC,"Codeacademy is great at introducing you to languages. If you're liking the course so far, go ahead and complete. But just that before you can get out and start coding on your own, you'll likely going to have to do another course or do a lot of your own research (either method works actually, just depends on what you prefer).  The problem with Codecademy is that it holds your hand. A lot. Like, I said, great for an introduction, but you might find yourself to be lost if you try to code a big project right after completing the course.  It's not necessarily behind the times because Python2 is still widely used. Making the switch from Python2 to 3 really isn't that difficult, so you shouldn't let it deter you from using a resource if it works for you."
learnpython,3dcos7,__skrap__,3,Wed Jul 15 06:08:22 2015 UTC,"Your evens_in_list() has a subtle bug:  >>> evens_in_list([0]) False   That's because the n for n in ... construction means that n is being yielded and tested for truth by any() for any entries that pass the n % 2 == 0 filtering, but 0 is falsey despite being even.  What you want is:  return any(n % 2 == 0 for n in numbers)"
learnpython,3dcos7,Rhomboid,1 point,Wed Jul 15 07:23:14 2015 UTC,"Isn't there some contention if 0 is even, odd, or has no parity at all?"
learnpython,3dcos7,kurashu89,2,Wed Jul 15 14:04:21 2015 UTC,Zero is even.
learnpython,3dcos7,The-Mathematician,2,Wed Jul 15 15:20:24 2015 UTC,I think we can trust The-Mathematician.
learnpython,3dcos7,dunkler_wanderer,1 point,Wed Jul 15 17:08:33 2015 UTC,"No, not at all. An even number is a number which is an integer multiple of 2, and 0 = 0*2.   On the same topic, another misconception I hear is that 1's primality is unknown or debatable. This is also wrong. 1 is not prime because a prime is a number which has exactly two distinct factors, 1 and itself."
learnpython,3dcos7,wololongong,1 point,Wed Jul 15 18:24:23 2015 UTC,"Ah. I guess I misremembered something or was taught some bad math in high school. I knew 1 wasn't prime for that exact reason, though."
learnpython,3dcos7,kurashu89,1 point,Wed Jul 15 18:41:10 2015 UTC,"Thank you for the clarification and clean fix.  I was thinking = was not allowed as an expression for comprehensions, which is the case for assignment."
learnpython,3dcos7,ydepth,1 point,Wed Jul 15 17:38:07 2015 UTC,"Hey, thanks for this.  What is the explanation for this weird behaviour?"
learnpython,3dcos7,The-Mathematician,2,Wed Jul 15 11:50:25 2015 UTC,"Iterators internally store their location in the iterable, and will advance it once per iteration. The problem is that if you change an iterable as you iterate over it, the location of the elements changes.  My shitty MS Paint"
learnpython,3dcos7,ydepth,2,Wed Jul 15 15:30:04 2015 UTC,"Makes perfect sense, thanks"
learnpython,3d9qbk,marc_poulin,2,Tue Jul 14 16:31:56 2015 UTC,They do this every day. I gave up checking the website every day a couple months ago when it became obvious it wasn't a limited time offer.
learnpython,3d9qbk,shidarin,2,Wed Jul 15 02:59:17 2015 UTC,"Damn missed it by half an hour. Thanks for the link, though!"
learnpython,3d9qbk,Fourgot,1 point,Tue Jul 14 23:40:54 2015 UTC,Thanks for the link!
learnpython,3d9qbk,Ogi010,1 point,Tue Jul 14 21:55:41 2015 UTC,This is awesome. Thanks!!
learnpython,3dcqk0,ikvivekkanna,-1,Wed Jul 15 06:28:12 2015 UTC,"""\\"".join(r""E:\Python\pdfs\1\python.pdf"".split(""\\"")[-2:])"
learnpython,3dcqk0,bpovs,6,Wed Jul 15 06:47:24 2015 UTC,Please no. Use os.path.split.
learnpython,3dcqk0,K900_,0,Wed Jul 15 06:55:02 2015 UTC,"giving OP an unspecific answer to an unspecific question. he didn't say how deep he wanted each path to be split, or anything specific, and never implied anything other than backslash-style paths would be used."
learnpython,3dcqk0,bpovs,1 point,Wed Jul 15 07:00:12 2015 UTC,"There's answering exactly the question asked, and then there's giving the person the proper answer, which will teach them how to handle things in different situations.  The second is always better than the first. Teaching to fish, rather than giving a fish."
learnpython,3dba0o,galaxyrocker,2,Tue Jul 14 22:57:36 2015 UTC,"You didn't define any data_files in your setup.py, so your mp3's aren't being packaged with your code. Running it locally works because you have your mp3's in the same directory as your code. When running from py2exe, your relative paths won't find the mp3's in the current directory because of them not being packaged, hence no audio.  Check out what data_files does with setup.py, and you should be on your way."
learnpython,3dba0o,jerseysucks182,1 point,Wed Jul 15 00:04:47 2015 UTC,Does this work even when the data isn't already in the program? The program is downloading the data files depending on what the user searches.
learnpython,3dba0o,Rubykuby,1 point,Wed Jul 15 00:14:55 2015 UTC,Then download them to a location like ~/.local/share or whatever AppData folder Windows uses.
learnpython,3dba0o,Rubykuby,1 point,Wed Jul 15 00:44:40 2015 UTC,"I downloaded it to AppData/Roaming, and can get it to play from the source. Still can't get it to play from the .exe, even trying it with elevated privileges."
learnpython,3dba0o,jerseysucks182,1 point,Wed Jul 15 01:08:54 2015 UTC,"Because it's looking for those files in the current directory. If you launch the script from the directory where you keep your files, it will work. If you launch the script from elsewhere, it will not work."
learnpython,3dba0o,Rubykuby,1 point,Wed Jul 15 01:25:57 2015 UTC,"No, I've changed and updated my source to both download them and look for them in the AppData/Roaming directory. But the new .exe isn't looking for them there, though it is downloading them."
learnpython,3dba0o,wub_wub,1 point,Wed Jul 15 01:31:23 2015 UTC,What does your download code look like? I don't have enough context.
learnpython,3dbx53,investdave,3,Wed Jul 15 01:57:46 2015 UTC,"That's an interesting trick. Functions in Python can get assigned attributes like other objects, too. So the author first had to define the function ""wrapper"", which increments its own attribute ""called"", and then he could give this function the attribute ""called"" and set it to 0.   BTW, line 6 should be wrapper.__name__ = func.__name__.  And instead of this you could use functools.wraps which will also preserve docstrings.   from functools import wraps  def counter(func):     @wraps(func)     def wrapper(*args, **kwargs):         wrapper.called += 1         return func(*args, **kwargs)     wrapper.called = 0     return wrapper  @counter def test():     """"""Decorated function test.""""""     return  print(help(test))"
learnpython,3dbx53,dunkler_wanderer,1 point,Wed Jul 15 02:59:23 2015 UTC,"I'm confused as to why there is a ""wrapper.called = 0"". Everytime you call test and then wouldn't test.called always be 0? Or does the outer function of the decorator only gets processed once and the inner function gets refreshed?"
learnpython,3dbx53,dunkler_wanderer,2,Wed Jul 15 13:18:41 2015 UTC,"The line wrapper.called = 0 just adds an attribute to the function object wrapper that you've defined before. It's exactly the same as giving some other object an attribute. some_object.x = 0. Or a function in the global scope:  def foo():     foo.x += 1     print(foo.x)  foo.x = 5  foo() foo() foo()   It can see its own attribute and increments it.   When you decorate the function test it gets replaced by the function wrapper which has the attribute called. The @counter is just syntactic sugar and you could as well write:  def test(): pass test = counter(test)   Then when you call test() you're actually calling wrapper() which increments its own attribute.   And every time you decorate a new function, you create a new wrapper function with a fresh called attribute.    Now to something a bit different to confuse you even more. :) You can actually ""store"" variables in the outer scope of the wrapper function, which you can access with the nonlocal keyword (only in Python 3).   from functools import wraps  def counter(func):     count = 0     @wraps(func)     def wrapper(*args, **kwargs):         nonlocal count         count += 1         print(count)         return func(*args, **kwargs)     return wrapper   @counter def test():     pass  test() test() test()   I'm not really sure what's going on in the background, but I think Python has to keep the variable count in the memory, because it's referenced by the nonlocal keyword."
learnpython,3dbx53,Nahnja,2,Wed Jul 15 16:08:21 2015 UTC,"I'm having trouble understanding why wrapper.called has to be declared after the wrapper   If you declared it before wrapper you'd get an UnboundLocalError: local variable 'wrapper' referenced before assignment. wrapper doesn't exist yet, so you can't set wrapper.called = 0.   when I call test.called it's not 0   this  def counter(func):     def wrapper(*args, **kwargs):         wrapper.called += 1         return func(*args, **kwargs)     wrapper.called = 0     return wrapper  @counter def test():     return  print(test.called)   prints 0.  here's a dude on stackoverflow rambling on about decorators."
learnpython,3dbx53,Rhomboid,2,Wed Jul 15 02:51:05 2015 UTC,"I'm having trouble understanding why wrapper.called has to be declared after the wrapper   The def statement is a form of assignment; it assigns a function to a name.  Think of it as:  wrapper = ... wrapper.called = 0   If you reversed those then of course you get an error because you can't assign to an attribute of something without first establishing what that 'something' actually is.  There's no hoisting of function definitions like in some other languages.   when I call test.called it's not 0   I ran your code as written, except for fixing the botched indentation and changing fn.__name__ to func.__name__, and afterward test.called is 0:  >>> %paste def counter(func):     def wrapper(*args, **kwargs):         wrapper.called += 1         return func(*args, **kwargs)     wrapper.called = 0     wrapper.__name__ = func.__name__     return wrapper  @counter def test():     return  ## -- End pasted text -- >>> test.called 0"
learnpython,3dbk7q,lamecode,2,Wed Jul 15 00:15:59 2015 UTC,"Are you just downloading one huge file?  Either way, threading won't really help with updating the log, since you only update when the thing is finished.    Without threading, LengthyScrapeFunction could/should update the log as it does things.  With threading, LengthyScrapeFunction will probably run faster if much of it's time is spent waiting for servers to respond.  Did you see this and this? (it says requests is blocking and so threads won't help.  Use something else)"
learnpython,3dbk7q,elbiot,1 point,Wed Jul 15 01:17:24 2015 UTC,"Thank you for those links - the first one in particular looks like it might be promising. It's not one file being downloaded, it's many thousands of URLs.  You would think that it would update the log as it actioned, but the app behaves different to how I expected it to here (my first time working with UIs of any kind). I even put a time.delay(5) in after the call to update the log and before the LengthyScrapeFunction executes, and the UI is still not redrawn until LengthyScrapeFunction completes - it just pauses before executing the function."
learnpython,3dbk7q,elbiot,2,Wed Jul 15 01:48:57 2015 UTC,Oh I see.   Your first log update doesn't display.  It's the main event loop that actually redraws the screen. You could force it to do so inside your function with repaint or processEvents: http://stackoverflow.com/questions/11836623/pyside-settext-not-updating-qlabel
learnpython,3dbk7q,elbiot,1 point,Wed Jul 15 02:04:11 2015 UTC,"Thanks again, that looks like it should achieve what I want as far as updating the log. I think my preferred method is going to be via QThread as per the below link - I would prefer the UI to not be unresponsive for the duration of the process, and it seems like this might be the solution for that, too:  http://stackoverflow.com/questions/6783194/background-thread-with-qthread-in-pyqt"
learnpython,3dbk7q,wub_wub,2,Wed Jul 15 02:42:56 2015 UTC,"If your time soaking call is blocking, your UI will be unresponsive.  Just want to make sure you got that.  IO (hitting servers and letting the os accumulate responses in buffers) can be non-blocking.  So urllib or grequests (not requests) would work for you.  But any CPU consuming functions will block the UI."
learnpython,3dbk7q,wub_wub,1 point,Wed Jul 15 02:48:11 2015 UTC,"Either way, threading won't really help with updating the log, since you only update when the thing is finished.   You can maybe get the file information and download it in chunks and update the progress in the GUI."
learnpython,3dcjqa,ev1lchink,5,Wed Jul 15 05:12:47 2015 UTC,"tl;dr Lambda creates a function without a name and has slightly different syntax. It's nothing to be afraid of.  How is lambda used?  In Python, lambda is mostly just used as a shorter syntax for creating functions. Usually it's used for short, throw-away functions. For instance, if I want to sort a list of pairs by the second element (by default Python sorts by the first element) you'd write:  s = sorted(my_list, key=lambda x, y: y)   This is slightly idiomatic since you have to know about how sorted works in order to sort by key with a function like that.  You can even, oddly enough, give lambdas a name:  In  [1]: add_five = lambda x: x + 5 In  [2]: add_five(10) Out [2]: 15   In tkinter, in order to get a button to perform a certain action, I use lambdas since they're lazily evaluated (meaning they won't be evaluated until they're called). Here's how you might think you'd do it with a traditional definition (very contrived, don't think too hard about what it might actually be doing):  def add_five(x):     return x + 5  num = 10  someButtonObject.on_click(add_five(num))   The problem is that Python will evaluate add_five(num) exactly once - when I define it. But if the value of num changes during the course of my program, then that might not be what I want to do. If I want to call this function regardless of what num might be at the given moment, I'd have to do it like this:  someButtonObject.on_click(lambda: num + 5)   You can also use it for ""partial evaluation."" What this means is that you can quickly create a new function in which you've sort of filled out a few of the arguments ahead of time. For instance:  In  [1]: def complicated_add(users_operating_system, users_age_in_base_7, x, y):     <optimize for user's age and OS>     return x + y  In  [2]: myAdd = lambda x, y: complicated_add(""Amiga"", ""26"", x, y)  In  [3]: myAdd(4, 5) Out [3]: 9   As a syntax note, remember that a lambda function cannot span multiple lines and a lambda function cannot contain a loop or if statement.  Where did lambda come from? Lambda functions have a history that goes well beyond Python. In fact, before computers in fact. The lambda calculus was invented by Alonzo Church to solve a math problem about the solvability of equations. Alan Turing solved the same problem independently and the two are mathematically equivalent (called the Church-Turing thesis). The lambda calculus modeled computation not as a machine with an infinite tape with read-write capabilities like Turing did, but as these very simple functions that didn't even have a name. In the lambda calculus, each lambda function takes some arguments, then returns a new expression consisting of its arguments copied, deleted, and shuffled around a bit. It turns out that you only need to keep track of two variables (traditionally s and z) to calculate anything that can be calculated with this method.  Most computer scientists found it much easier to prove stuff using concepts like finite state machines, push-down machines, and turing machines. Programming languages based on concepts from lambda calculus are called ""functional programming languages"" (function meaning lambda functions). Haskell and LISP are the biggest examples, although the pedantic might want to point out that LISP isn't ""purely"" functional.  Python, as it was conceived, was probably meant to be a much more functional language than it wound up being. But those features slowly got muscled out. You even have to import reduce now. But lambda remains in it's strangely mutated form as an anonymous, lazily-evaluated function with syntax different from the rest of Python. This isn't because of any theoretical reason, but just because it's proved to be a handy little feature that comes up quite often."
learnpython,3dcjqa,c3534l,2,Wed Jul 15 06:36:06 2015 UTC,"Very nice write up, thanks."
learnpython,3dcjqa,lamecode,3,Thu Jul 16 05:58:26 2015 UTC,"It's a way of defining a small function inline without all the hassle of a def statement.  Suppose you had something like:  people = [('Alice', 26), ('Bob', 23), ('Charlie', 31), ('Danielle', 22)]  def get_age(person):     return person[1]  youngest = min(people, key=get_age)   It's often more convenient to write short functions like that inline:  people = [('Alice', 26), ('Bob', 23), ('Charlie', 31), ('Danielle', 22)]  youngest = min(people, key=lambda person: person[1])   These two examples are completely equivalent, except that the function in the first example has a name whereas it's anonymous in the second example.  But in both cases, min() is being called with a function object being passed as the keyword argument key.  The parameter list of the function follows after the lambda keyword and ends at the colon, followed by an expression which is the value to be returned by the function.  Lambdas in Python are rather restricted.  They can't be used to define functions that contain anything other than a single return statement, which is why you don't have to write return in the lambda expression, since that's the only choice.  If you need to define a function that contains any other kind of statement (such as a for or while statement(*)) you can't do it with a lambda expression.  (*) Note that comprehensions are expressions and not statements, so you can write a lambda that uses list/set/dict comprehensions, so don't be confused if you see for being used in the body of a lambda.  It's not the for statement, it's a different form."
learnpython,3dcjqa,Rhomboid,1 point,Wed Jul 15 05:44:14 2015 UTC,"Sorry, I kind of think I'm not grasping it as well. Is lambda specifying the lowest number value? What is the result of these scripts?"
learnpython,3dcjqa,Rhomboid,3,Wed Jul 15 05:55:30 2015 UTC,"Forget the second example with lambda, do you understand the first example?  The function get_age takes a single parameter and then returns the second element of that parameter.  That's it.  It's used with the min() function to find the youngest person in the list, by extracting the age (the second element of each tuple) from each item in the list to be used as the comparison key.  You don't have to know anything about min() to understand lambda.  It's just a simple mechanical translation:  def func_name(PARAM_LIST):     return EXPR  .... func_name ....   # some expression that references that function by name   vs.  .... lambda PARAM_LIST: EXPR ....   It's the same idea as this:  foo = 5 + 2 print(foo)   vs.  print(5 + 2)   In both cases you're changing what was originally a named expression into an anonymous one."
learnpython,3dcjqa,elbiot,1 point,Wed Jul 15 06:04:17 2015 UTC,"Alright, got it, kinda. Right now I'll refer to it as some type of shorthand."
learnpython,3dcjqa,dood31251,2,Wed Jul 15 06:07:39 2015 UTC,"A one statement function without a name.  print( (lambda x: x+1)(2) ) #prints 3  fun = lambda x: x[1] print( fun([1,2,3]) ) #prints 2"
learnpython,3days5,Nebucatnetzer,6,Tue Jul 14 21:35:11 2015 UTC,The first thing you should do is add a .gitignore file and add /.idea/* and /__pycache__/* to it.
learnpython,3days5,Triplanetary,5,Tue Jul 14 22:27:40 2015 UTC,"I think you should go with a class here. It would merge your pet_variables and pet_functions into just pet.  Edit: If you find classes hard to grasp, you could go with simpler Python tricks first.  Your is_alive() function can be shortened to:  def is_alive():     return pet_variables.pet_health > 0   You can also change all your increment functions from:  pet_variables.something = pet_variables.something + 1   To:  pet_variables.something += 1   So += operator takes what's on the right side, and increments what's on the left side by it."
learnpython,3days5,markusmeskanen,3,Tue Jul 14 22:33:06 2015 UTC,"Have all pet variables and functions in a class, in one file.  Initialize the pet outside the main loop.  Good!"
learnpython,3days5,goodyguts,2,Tue Jul 14 23:21:22 2015 UTC,right?  i think   if self.happiness < self.max_happiness:   is much more readable than  if pet_variables.pet_happiness < pet_variables.max_happiness:
learnpython,3days5,elbiot,2,Wed Jul 15 01:04:57 2015 UTC,OP has basically created a class without the syntax...
learnpython,3days5,goodyguts,2,Wed Jul 15 12:52:26 2015 UTC,Thank you very much guys. Time for me to learn classes then :).
learnpython,3db4m6,terminak,5,Tue Jul 14 22:17:48 2015 UTC,"Why not just use split for this?  >>> '2345LolerLolerson    XXX     12345'.split() ['2345LolerLolerson', 'XXX', '12345']   You'd have to split it into lines first first, for example lines = mystring.split('\n'). If you really want to do it with regex, you could do something like re.search('\s+([^\s]+)', one_line) to find the first space(s) and capture anything that is not a space after it."
learnpython,3db4m6,liam_jm,1 point,Tue Jul 14 22:27:22 2015 UTC,">>> t = """"""2345LolerLolerson    XXX     12345 OHOHK                YYY     12345 DolanPLZ             AAA     12345"""""" >>> [s.split()[1] for s in t.split('\n')] ['XXX', 'YYY', 'AAA']   Does that make sense?"
learnpython,3db4m6,raylu,1 point,Tue Jul 14 22:23:11 2015 UTC,HA...makes perfect sense.  Thank you :)
learnpython,3db4m6,Fuzzmiester,1 point,Tue Jul 14 22:29:49 2015 UTC,"Depending on whether your data will ever have spaces that need to be quoted in it, you may want to use csv instead.  import csv  reader = csv.reader(f, delimiter=' ', skipinitialspace=True) for row in reader:     print(row[1])"
learnpython,3dcwdb,nitfut,3,Wed Jul 15 07:43:46 2015 UTC,1) Can you post what you have on gist.github.com?  Really helps to see what your code looks like.  2) Suggest you consider a different version of Python.  2.5.4 is VERY old (released 7 years ago).  The current version is 3.4
learnpython,3dcwdb,mcowger,-1,Wed Jul 15 07:56:52 2015 UTC,"if you want to create characters that save you need to look at opening and saving to file to csv or text file.  learn how to pull the values into a list and append each character into it  for eg   characters[[""char 1"", 100, 50],[""char 2"", 100, 50]]  characters.append([3 values pulled from the saved list])  Your text file might simple look like char 1 100 50  i did something ages ago like this so im pretty sure its a top google search for read and write to files with python.  the version you are using is quite out of date, id say get 2.7 at least because its the most straight forward to get working with pygame if you  felt like building graphics later, most examples you see on the net are for 3.4 so watch out if u like to directly take code off the net and modify it"
learnpython,3dao1e,CornFlakesOnAPlane,3,Tue Jul 14 20:20:45 2015 UTC,"If you already have the json downloaded then just use it to make the icon URL:  icon_url = ""http://openweathermap.org/img/w/%s.png"" % json_data[""list""][0][""weather""][0][""icon""]"
learnpython,3db16f,Sambiino,5,Tue Jul 14 21:52:24 2015 UTC,"JSON lets you store simple data in a text format. A lot of languages (all the popular ones) have support for it.   Pickle lets you store Python objects in binary format. Not just data fields, but methods as well. I don't think other languages support it.  JSON is great for passing simple data to other languages (especially JavaScript). If it can handle whatever you want to store, use it."
learnpython,3db16f,an_actual_human,2,Tue Jul 14 23:19:59 2015 UTC,"Well, pickle predates JSON becoming a widely used standard (and, AFAIK, JSON itself), so that's one reason it exists. If you're passing data to another Python application, or simply storing data for the same application to load again later, either option is viable, but if you're communicating with anything non-Python, you pretty much have to use JSON.   I'm having difficulty understanding exactly what these two modules do   So are you asking what their basic usage purpose is? It's called data serialization, and the purpose is, as implied above, for storing data in a file or for passing it to other applications.  Say you have some data in your Python app that you want to pass to a JavaScript app so that the JS app can display it on a web page or do whatever with it. You can stuff all that data into a Python dict, but you can't just hand that dict directly to the JS app, because a Python dict is stored in memory as binary data in a form that only Python knows how to interpret.  So what data serialization does is it converts that binary data into a string of text, which you can then send to the JS app, and the JS app will parse the text string and convert into a JavaScript object. This works well because plain text is something that any language can read, and, if you're transmitting the data over the Internet, transmitting plain text is exactly what the HTTP protocol was designed for.  This is also useful for storing data to a file because storing plain text is generally more efficient than storing binary data, and because you then have a file that can be read and edited by other programs, if you so desire."
learnpython,3db16f,Triplanetary,1 point,Tue Jul 14 22:22:44 2015 UTC,Thank you! This was the answer I was looking for. Are there other common methods for data serialization?
learnpython,3db16f,raylu,3,Tue Jul 14 23:52:23 2015 UTC,"YAML, ini, SQL(ite) or some other (relational) database, CSV, ... the list is endless."
learnpython,3db16f,an_actual_human,0,Wed Jul 15 00:50:15 2015 UTC,"if you're communicating with anything non-Python, you pretty much have to use JSON.   Yeah, that's not at all true."
learnpython,3db16f,Triplanetary,1 point,Tue Jul 14 23:12:32 2015 UTC,"I meant versus pickle, although I wouldn't be surprised if other languages have libraries to import pickled data that I'm entirely ignorant of."
learnpython,3db16f,an_actual_human,0,Tue Jul 14 23:15:36 2015 UTC,"A couple more things.   Well, pickle predates JSON becoming a widely used standard (and, AFAIK, JSON itself), so that's one reason it exists.   Do you mean to say it's the only reason? It's certainly not and it's not the most important one either.   storing plain text is generally more efficient than storing binary data   What do you mean by efficient?"
learnpython,3db16f,Triplanetary,1 point,Tue Jul 14 23:32:02 2015 UTC,"What do you mean by efficient?   Mostly talking out of my ass. In retrospect I should've just stuck with saying ""it's for passing data as text strings"" and been done with it instead of embarrassing myself."
learnpython,3db16f,lamecode,1 point,Tue Jul 14 23:36:42 2015 UTC,"I tend to use pickle because it's what I learnt first and I'm generally only storing something so small that the speed difference isn't noticeable, but one key difference is that JSON is safer than pickle if that's something that might be a concern with whatever you're coding.  If you store a pickled file somewhere, it could be replaced by another pickle file containing malicious code, which would be executed when unpickled."
learnpython,3db16f,gutoandreollo,1 point,Wed Jul 15 01:02:11 2015 UTC,"On this comparison, JSON (and XML, too) are ways to 'dump' data into a standard format that can be then parsed or communicated to other <whatever you want to read it>, or just be 'load'ed back into python for processing. It's also (usually) a text-safe format, using only printable ascii characters.  JSON is limited to some types of data by default, and it's widely known and accepted by many different languages and systems. It has a syntax pretty close to a python 'dict', too.  Pickle, on the other hand, is native to python (and AFAIK, to python only), and as long as you don't run afoul of any differences, also works between python2 and python3. It's a binary-only format, and support pickling and unpickling mostly any type of python object. Dicts, arrays, functions, methods, classes, whole libraries, too.   JSON is limited to some data types, and if you have a custom class with custom data types, you need to write a converter and an 'unconverter' to use it to store your information. With pickle, you just pickle it on one side, and unpickle it on the other side.  The downside of it is that pickle is NOT safe. You should DEFINATELY NOT be unpickling ANY content you're not completely safe of the origins. Given how powerful python is, every time you're unpickling something that you don't know what it is or where it came from, you should treat it as being able to access all your data and act within your system with full access priviledges. That's also why it's not used as a common data exchange format in python.  One personal example where I use pickled data: I wrote an GOE app that runs A* shortest-path routing among a set of points from a dataset that's not very ordered, and requires quit a bit of processing to be used. Loading, ordering and tagging that dataset with all the different properties took a bit over 15 minutes in an i7, and althought the dataset at the end is quite small (after being worked on), almost 1.8 Gb of RAM to store it completely on it's unprocessed state.  After that data was all processed and ready to be used (and after some good old trial-and-error), I just pickled it onto a single file, and shipped that off to GOE. When the app starts up, it unpickles that pre-processed dataset from disk and starts working with it as if it had just processed it all by itself."
learnpython,3db16f,Northstat,0,Sat Jul 18 21:35:50 2015 UTC,"""We can pickle that!"""
learnpython,3d8pci,Iqirx,3,Tue Jul 14 11:12:57 2015 UTC,"Cool site! (Kinda ironic that /r/flask is the top subreddit, but meh)    Add permissions! I could create a topic that showed up! (Other Stuff). I couldn't create pages in that topic!"
learnpython,3d8pci,goodyguts,1 point,Tue Jul 14 15:18:22 2015 UTC,"Hi,  Thanks for exposing a bug! It was not possible to add pages if category is empty. Now it's fixed."
learnpython,3dcow8,muksha,2,Wed Jul 15 06:09:27 2015 UTC,"I am not a django user, but in general terms   For 1:N consider Person and Address. A person can have any number of addresses; home, office, summer cabin etc. If two people happen to live at the same address, it is a coincidence. For N:N, consider Book and Author. A book can have many authors, an author can write many books. 1:1 is a bit more tricky; ""extra, optional data"" is one way to think about it. Commonly used for technical reasons like dividing your table for performance or access control. For example, you may have User for required data such as username, password, last login time etc and Profile for things like eye color, favorite book, etc that only a percentage of users will ever fill in. That way you avoid having a host of empty columns for most of your User records - only the ones that create a profile get a matching Profile record."
learnpython,3dcow8,terminak,1 point,Wed Jul 15 08:16:35 2015 UTC,thanks!
learnpython,3dcow8,x3al,1 point,Wed Jul 15 14:45:37 2015 UTC,"It depends on objects you want to save.  For example, if you have users, their profiles, comments and groups on your site: users and user profiles can be 1-1 if a user has exactly one profile or 1-N if each user can have several profiles. User comments are 1-N because each user has a lot of comments. User groups and users can be N-N because each user can be in several groups and each group can have several users.  Foreign key points to the ""parent"" model: user that made a comment or something similar.  There are several implementation details on how it lays to the database but you can skip it for now."
learnpython,3dcow8,x3al,1 point,Wed Jul 15 07:39:59 2015 UTC,lets say I also supports users having avatars. A user can have multiple avatars and an avatar can be used un multiple users. So is that N-N?
learnpython,3dcow8,JustTurrble,1 point,Wed Jul 15 14:44:15 2015 UTC,"Why? User does not need to pick amongst avatars that other users made. So it's a simple 1-N will work. Even a simple field in the profile would work if you're fine with discarding avatar change history.  N-N is used when you have two or more mutable sets, if you really need queries like ""which users have THIS avatar"", it can make some sense but not much."
learnpython,3dcfrq,Zhayah,3,Wed Jul 15 04:33:18 2015 UTC,To properly paste code on /r/learnpython each line needs to begin with four spaces:  [four_spaces]if True:  [four-spaces][four_spaces]do_stuff  if you do this your code will look like this:  if True:     do_stuff   If that seems like a pain you can always use pastebin: Here  As for your question I'm not certain what your actually asking. Could you clarify what has you stumped?  Is it this part:  for symbol in message:     do_encryption
learnpython,3dcfrq,StaticFuzz,1 point,Wed Jul 15 08:53:46 2015 UTC,"What does the ""symbol"" after ""for"" stand for ? there was no value for symbol stated before. what is symbol. >.< im sorry if it's a stupid question."
learnpython,3dcfrq,StaticFuzz,2,Fri Jul 17 07:27:20 2015 UTC,"In the simplest terms its just a variable. In this case it will represent a character from the string message(""This is still a silly example""). I can understand how this can be confusing, because this happens behind the scenes.  So to clarify let's add aprint() statement to the for loop:  for symbol in message:     print(symbol)  #first iteration(first execution of the for loop block) T #second iteration h #third iteration i #fourth iteration s #fifth iteration ' ' # blank space ...   A for loop will loop over each individual part of the object after the in statement, and the variable symbol is the way we can reference the part within our for loop block. You can change the variable to whatever you want, as long as you change all the instances of the variable in the block as well:  for whatch_ya_ma_call_it in message:      print(whatch_ya_ma_call_it)     #This will do the same thing as the example above   Take note though the variable will represent different things based on the type of thing we add after the in. As shown above if we use a string, the variable will be assigned to the individual characters of the string, but if we pass a list of strings the variable will be assigned to the whole string:  my_list = ['srting1', 'string2', 'string3']  for var_name in my_list:     print(var_name)  #first iteration string1 #second iteration string2 #third iteration string3 #nothing else in my_list, so for loop stops   Try writing a few different for loops on your own until the idea of whats happening clicks for you, but if you need more clarification feel free to ask."
learnpython,3da5tv,kickthebug,1 point,Tue Jul 14 18:17:40 2015 UTC,"Seems to work well as far as I can tell. Hablo muy poco espanol y no muy bien, but I was still able to navigate the site without too much trouble. I did notice that the ""General"" group doesn't show up under groups, though that may be intentional."
learnpython,3da5tv,iminurnamez,1 point,Tue Jul 14 20:11:17 2015 UTC,That was actually intentional
learnpython,3dbah7,Countdown369,2,Tue Jul 14 23:01:01 2015 UTC,"Catching all exceptions like this makes your program hard to debug, and is generally considered bad form (you should catch the exceptions you know how to handle, and raise others).   To figure out what's going on, you can putraise in your except and see what it complains about."
learnpython,3db7s7,fuzzyfractal42,3,Tue Jul 14 22:40:25 2015 UTC,"You need to replace in each item; this can be done in many ways, for example:  new_row = [item.replace(',', '') for item in row]   or  new_row = map(lambda item: item.replace(',', ''), row)   EDIT: this will perform the replacement on all items in row of course; if that's not what you need, you'll have to manipulate the ones you need only.."
learnpython,3db7s7,terminak,1 point,Tue Jul 14 23:04:57 2015 UTC,Exactly what I was looking for! Thanks!
learnpython,3db7s7,blackrat47,2,Tue Jul 14 23:44:36 2015 UTC,"You could use re.sub.  import re regex = re.compile(r'[\.,]')  # put the 'bad' characters in the square brackets, escape as necessary new_string = regex.sub('', old_string)   This allows you to get rid of all the bad characters at once, and is quicker for large files."
learnpython,3db31b,flyingturtlepet,2,Tue Jul 14 22:06:12 2015 UTC,"Use an XML library Use += instead of reps = reps + 1 Use an XML library Replace line 20 with string formatting Seriously, use an XML library"
learnpython,3db31b,raylu,2,Tue Jul 14 22:49:01 2015 UTC,"I like Python 3's print statement, and including the parentheses in Python 2 shouldn't hurt. To be safe, you can import print_function from __future__ in Python 2.6+:  from __future__ import print_function  import urllib2  response = urllib2.urlopen(""htptp://google.de"") page_source = response.read()   def findrep():     zip = raw_input(""What is your zip code?"")     zip_source = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip="" + zip)     zip_source = zip_source.read()     reps = 1     while zip_source.find(""<rep"") != -1:         block_start = zip_source.find(""<rep"")         block_end = zip_source.find(""/>"")         if zip_source[block_start:block_end].find(""house"") != -1:             zip_block = zip_source[block_start:block_end]             name_start = zip_block.find(""name="")             name_end = zip_block.find('""', name_start + 6)             rep = zip_block[name_start + 6:name_end]             print(str(reps) + "": Rep. "" + rep)             reps = reps + 1         zip_source = zip_source[block_end + 2:]     if reps > 2:         print(""You have more than one representative! This is most likely due to redistricting within the last few years."")   def menu():     print(""Welcome to CongressPy. This is currently in testing, so please be aware of the possibility of bugs."")     print(""1. Find your Representative"")     selection = raw_input(""Please select the option you would like"")     if int(selection) == 1:         findrep()     else:         print(""what the fuck"") menu()   Now it's consistent, and is closer to working in Python 3 too.  When I try to run it, I get an error:  Traceback (most recent call last):   File ""/Users/liam/Desktop/cong.py"", line 5, in <module>     response = urllib2.urlopen(""htptp://google.de"")   File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py"", line 126, in urlopen     return _opener.open(url, data, timeout)   File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py"", line 400, in open     response = self._open(req, data)   File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py"", line 423, in _open     'unknown_open', req)   File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py"", line 378, in _call_chain     result = func(*args)   File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py"", line 1240, in unknown_open     raise URLError('unknown url type: %s' % type) URLError: <urlopen error unknown url type: htptp>   Your page_source variable doesn't seem to be used. I imagine it was for testing and can be removed. This means I can also remove response.  from __future__ import print_function  import urllib2   def findrep():     zip = raw_input(""What is your zip code?"")     zip_source = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip="" + zip)     zip_source = zip_source.read()     reps = 1     while zip_source.find(""<rep"") != -1:         block_start = zip_source.find(""<rep"")         block_end = zip_source.find(""/>"")         if zip_source[block_start:block_end].find(""house"") != -1:             zip_block = zip_source[block_start:block_end]             name_start = zip_block.find(""name="")             name_end = zip_block.find('""', name_start + 6)             rep = zip_block[name_start + 6:name_end]             print(str(reps) + "": Rep. "" + rep)             reps = reps + 1         zip_source = zip_source[block_end + 2:]     if reps > 2:         print(""You have more than one representative! This is most likely due to redistricting within the last few years."")   def menu():     print(""Welcome to CongressPy. This is currently in testing, so please be aware of the possibility of bugs."")     print(""1. Find your Representative"")     selection = raw_input(""Please select the option you would like"")     if int(selection) == 1:         findrep()     else:         print(""what the fuck"") menu()   Great, now it runs! As the script only has one function, it doesn't really need the option menu:  from __future__ import print_function  import urllib2   def findrep():     zip = raw_input(""What is your zip code?"")     zip_source = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip="" + zip)     zip_source = zip_source.read()     reps = 1     while zip_source.find(""<rep"") != -1:         block_start = zip_source.find(""<rep"")         block_end = zip_source.find(""/>"")         if zip_source[block_start:block_end].find(""house"") != -1:             zip_block = zip_source[block_start:block_end]             name_start = zip_block.find(""name="")             name_end = zip_block.find('""', name_start + 6)             rep = zip_block[name_start + 6:name_end]             print(str(reps) + "": Rep. "" + rep)             reps = reps + 1         zip_source = zip_source[block_end + 2:]     if reps > 2:         print(""You have more than one representative! This is most likely due to redistricting within the last few years."")   def menu():     print(""Welcome to CongressPy. This is currently in testing, so please be aware of the possibility of bugs."")     findrep() menu()   It also makes sense to guard your script so that it can be safely imported as a module:  from __future__ import print_function  import urllib2   def findrep():     zip = raw_input(""What is your zip code?"")     zip_source = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip="" + zip)     zip_source = zip_source.read()     reps = 1     while zip_source.find(""<rep"") != -1:         block_start = zip_source.find(""<rep"")         block_end = zip_source.find(""/>"")         if zip_source[block_start:block_end].find(""house"") != -1:             zip_block = zip_source[block_start:block_end]             name_start = zip_block.find(""name="")             name_end = zip_block.find('""', name_start + 6)             rep = zip_block[name_start + 6:name_end]             print(str(reps) + "": Rep. "" + rep)             reps = reps + 1         zip_source = zip_source[block_end + 2:]     if reps > 2:         print(""You have more than one representative! This is most likely due to redistricting within the last few years."")   if __name__ == '__main__':     print(""Welcome to CongressPy. This is currently in testing, so please be aware of the possibility of bugs."")     findrep()   I think it makes more sense for findrep to take the zip code as a parameter, so that it's more general purpose. It would also make more sense for it to be an iterable of representatives found (like a list):  from __future__ import print_function  import urllib2   def findreps(zip_code):     zip_source = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip="" + zip_code)     zip_source = zip_source.read()     while zip_source.find(""<rep"") != -1:         block_start = zip_source.find(""<rep"")         block_end = zip_source.find(""/>"")         if zip_source[block_start:block_end].find(""house"") != -1:             zip_block = zip_source[block_start:block_end]             name_start = zip_block.find(""name="")             name_end = zip_block.find('""', name_start + 6)             rep = zip_block[name_start + 6:name_end]             yield rep         zip_source = zip_source[block_end + 2:]  if __name__ == '__main__':     print(""Welcome to CongressPy. This is currently in testing, so please be aware of the possibility of bugs."")     zip_code = raw_input(""What is your zip code?"")     reps = list(findreps(zip_code))     for n, rep in enumerate(reps, 1):         print(str(n) + "": Rep. "" + rep)     if len(reps) > 2:         print(""You have more than one representative! This is most likely due to redistricting within the last few years."")   Note I also renamed ""zip"", as this is a builtin function (which is rather useful too!)  Looking into the findreps function, it would be much better to use an xml library, e.g. xml.etree.ElementTree:  from __future__ import print_function  import urllib2 import xml.etree.ElementTree as ET  def findreps(zip_code):     xml_response = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip="" + zip_code)     root = ET.fromstring(xml_response.read())     for rep in root.findall(""./rep""):         yield rep.get(""name"")  if __name__ == '__main__':     print(""Welcome to CongressPy. This is currently in testing, so please be aware of the possibility of bugs."")     zip_code = raw_input(""What is your zip code?"")     reps = list(findreps(zip_code))     for n, rep in enumerate(reps, 1):         print(str(n) + "": Rep. "" + rep)     if len(reps) > 2:         print(""You have more than one representative! This is most likely due to redistricting within the last few years."")   This also seems to fix a bug where not all representatives would be found (e.g. using 90210 your script shows 3 representatives when there are 5).   Finally, I would use string formatting rather than concatenation:  def findreps(zip_code):     xml_response = urllib2.urlopen(""http://whoismyrepresentative.com/getall_mems.php?zip={}"".format(zip_code)) ...     for n, rep in enumerate(reps, 1):         print(""{}: Rep. {}"".format(n, rep))"
learnpython,3db31b,liam_jm,1 point,Tue Jul 14 22:50:03 2015 UTC,wow... awesome response! :D hopefully i can use this advice in future endeavors!
learnpython,3d9ugd,musicomet,4,Tue Jul 14 17:00:19 2015 UTC,"output = date.year, date.month"
learnpython,3d9ugd,novel_yet_trivial,1 point,Tue Jul 14 17:02:14 2015 UTC,"ok now I feel silly, haha. Thank you!"
learnpython,3d9ugd,Justinsaccount,1 point,Tue Jul 14 17:16:37 2015 UTC,"er.. If you literally have  string_year = '2015' string_month = '7'   and you want (2015,7), then you are just asking for  (int(string_year), int(string_month))"
learnpython,3d9ugd,Justinsaccount,1 point,Tue Jul 14 23:38:29 2015 UTC,You read the questions right but I wasn't clear. I need to return a python-date-object.
learnpython,3dao7l,MaxwellSalmon,2,Tue Jul 14 20:21:49 2015 UTC,"I spent some time rewriting it because I am new to tkinter. Still not happy with Game.mainloop...  From what I could tell, it was some weird timing issue between Obstacle.move() and Obstacle.remove()."
learnpython,3dao7l,half_lurker,1 point,Thu Jul 16 03:12:48 2015 UTC,Thank you. I will look into it!  :-)
learnpython,3dao7l,Justinsaccount,3,Thu Jul 16 13:26:11 2015 UTC,"Replace box1, box2, box3.. with a list of boxes... Your program is currently 5 times longer than it should be"
learnpython,3daf97,Kylearean,2,Tue Jul 14 19:20:55 2015 UTC,http://continuum.io/downloads
learnpython,3daf97,__skrap__,2,Tue Jul 14 19:23:08 2015 UTC,"Anaconda (as /u/__skrap__ mentioned) or Python(x,y)."
learnpython,3d8s90,AlmightyMexijew,3,Tue Jul 14 11:49:29 2015 UTC,"$python process_text.py this_text.txt   Is way easier than getting prompted by raw_input, which doesn't do tab completion.  And like other's said, with the above you can use bash to apply the script to a bunch of files (and don't have to reimplement all of bash's tricks for doing a variation of something multiple times), or have a cron job run your script with different arguments at different times.  I never use raw_input because it is so awkward for a user.  I put input in a txt/csv file, use argv, or make a web interface.  These all have great advantages over raw_input"
learnpython,3d8s90,elbiot,1 point,Tue Jul 14 16:32:33 2015 UTC,"raw_input   It's not so awkward.  If its something like Age = raw_input(""What is your name?"") , it's actually quite..............simple...At least, on powershell as I've run it....which leads to a different curiosity altogether: turning python into an executable type situation which can be given an icon and such.  Not expecting an answer, but, it was something I did wonder about when I'd learn."
learnpython,3d8s90,elbiot,2,Tue Jul 14 17:14:37 2015 UTC,"It's not awkward for super simple examples like that, but I've never actually made a program that worked like that.  Once you're writing programs that do something useful, you'll quickly want to use tab completion for file paths, and text files for multiple lines of input.  Can you imagine if wget prompted you ""what url would you like to download?"", ""Where would you like to save this file"" every time you used it?  Oh, it would be awful!"
learnpython,3d8s90,mcowger,2,Tue Jul 14 20:06:07 2015 UTC,"It seems like if I was going to make a program, this would essentially be useless repetition of something I already can have (such as the raw_input command) when I'm programming.   Yes, you can gather user input in multiple ways - on the command line, or interactively (or via web, etc).  This method of arguments is common because its easier to do a number of things:  1) We separate the user interaction form the code, so we not have to work about where the raw_input() statements are.  2) It makes it easier to run your script over and over again with the same inputs (for testing, for example, or automation).  3) Its cleaner to document."
learnpython,3d8s90,mcowger,1 point,Tue Jul 14 11:57:19 2015 UTC,"Separate user interaction from code   Can you please give an example of this and why it is important?  Right now my perspective is still in the lowly realm of practice programs that emphasize questions for the user to input into. (An unG-dly amount of ""What is your name/age/weight/height/etc."" type stuff to hammer the code into my brains good.)   Run your script over   Um.....but..if you just run something like:  python ex13.py  ,you're accomplishing the same script...over and over..variables not being so important.  It seems like more work if you're going to be inputting the same variables always."
learnpython,3d8s90,mcowger,2,Tue Jul 14 12:04:23 2015 UTC,"Right now my perspective is still in the lowly realm of practice programs that emphasize questions for the user to input into. (   And from that perspective, its not really that important....either way works.  But most apps aren't like this.   Can you please give an example of this and why it is important?   Say I wrote a program that has 3 modes...in mode 1, it prints out my name, in mode 2 it prints my age, and in mode 3 it prints my city.  If I always asked the user for that information, my interaction looks like this:  $ python example.py  Hello, enter your mode (1, 2 or 3): 1  OK, your name is Matt   But what if I want to go faster, and not be asked?  I know what i want to do.  If I accept arguments on the command line, I can do this:  $ python example.py -mode 1 Your name is Matt   See - much faster - no questions, no waiting, just fast.  What if I wanted to run it 100 times (maybe every time I run it, it prints my name and also records some information in a database?).    If I collected that data with raw_input(), you'd have to run the program, type the mode, and repeat over and over.  But if I accept it on the command line, I could just copy and paste this:  $ python example.py -mode 1  over and over again.  Much easier.  Does that help?"
learnpython,3d8s90,thegreattriscuit,1 point,Tue Jul 14 12:18:25 2015 UTC,"Would this be a form of the ""log-in"" that remembers your name, or, a form of old school videogame saves (like Megaman) where you enter in a general code and it sets the mode and you're able to play the same level, albeit you won't be able to make progress from a particular point on a map?"
learnpython,3d8s90,terminak,2,Tue Jul 14 13:07:18 2015 UTC,"That's a reasonable use case, yup"
learnpython,3d8s90,Justinsaccount,2,Tue Jul 14 13:28:46 2015 UTC,"One of the things to keep in mind as well is that, as you said, the kind of programs that you've been exposed to, where you're doing a very small limited number of actions based on direct input, are pretty rare in real usage.  Or rather, it's rare that that's ALL you want to do.   I do get how it's hard to ""connect the dots"" with some of these concepts without a sensible use-case in mind however, so here's a good example that comes to mind.  I'm using python to automate pulling information from (and pushing configuration changes to) different devices on my network.  We've got 200 or so sites across the U.S. and between 2 and 30 devices per site.  Working with that many devices is a nightmare without automation.  So the scripts that I'm writing will accept interactive input, if the thing I'm doing is small and simple (pull some info from one or two switches).  In that scenario it makes sense to just ask the user (me) which switches to connect to and what info to pull.    $ polldevices.py    Enter Devices:     10.10.10.1, 10.10.10.2    Enter Command:     show version   But for 200?  No, I've already got lists of the devices on our network, so I'll modify them as needed and just feed them to my scripts as files.    $ polldevices.py -f devicelist.txt -c ""show version"""
learnpython,3d8s90,Vaphell,2,Tue Jul 14 15:16:50 2015 UTC,"Can you please give an example of this and why it is important?   I will try to clarify /u/mcowger's statement with a different example. Let's say you make a program that asks for a number of inches and converts it to centimeters. If you accept an argument via sys.argv for the inches, you can do things like  xargs -n 1 python inch2cm.py < data.txt   and you will run your script once for each line in data.txt. If you had used input, you would have no way of passing the information in data.txt to the process in inch2cm.py.   Further, you might want extend it to be any2cm.py and accept a -from inches or -from feetor -from parsecs, so you could do  xargs -n 1 python any2cm.py -from feet < feet.txt xargs -n 1 python any2cm.py -from parsecs < parsecs.txt   If need be, you can use input to ask for required arguments that are not present on the command line and have no default."
learnpython,3d8s90,cdcformatc,2,Tue Jul 14 12:49:00 2015 UTC,"This comes down to you being a windows user with no exposure to a cli interface (other than perhaps dos which is a poor excuse for one)  The point of it all is that the vast majority of unix programs do not work interactively, you run them with some arguments, they do something, then exit."
learnpython,3d8mh9,acpcalin,6,Tue Jul 14 10:35:24 2015 UTC,"It really depends. In this case, I would say the equation is sufficiently complex that it deserves it's own name, documentation and tests."
learnpython,3d8mh9,kurashu89,5,Tue Jul 14 10:41:21 2015 UTC,"I would say that if a single ""chunk"" of code is repeated, and is complex enough to warrant a comment describing its functionality, it should absolutely be in its own function."
learnpython,3d8mh9,GripGambler,3,Tue Jul 14 12:05:06 2015 UTC,"I think the real issue here is you have the same entire function twice, with the only difference being one has a default value and one doesn't. Why not just have it once?"
learnpython,3d8mh9,tripperjack,3,Tue Jul 14 15:19:55 2015 UTC,I think you missed another subtle difference between the two functions.
learnpython,3d8mh9,japherwocky,3,Tue Jul 14 16:58:35 2015 UTC,I did!
learnpython,3d8mh9,tripperjack,3,Tue Jul 14 17:26:15 2015 UTC,I'd wrap that in a function called reverse_steinhart.
learnpython,3d8mh9,shaggorama,3,Tue Jul 14 13:08:56 2015 UTC,"Yup, break it out.   It absolutely makes sense - you have already proven that with 2 functions that require it. It provides a separate easily testable purpose.   With functions, it isn't about size, but rather purpose. In this case, the functions become small, but they each have a defined purpose and the reusability of the one has already been proven."
learnpython,3d8mh9,timworx,3,Tue Jul 14 15:47:31 2015 UTC,"Will you ever need the power, outside of those two places? If your answer is ""maybe"" you should break it out."
learnpython,3d8mh9,cdcformatc,2,Tue Jul 14 19:17:08 2015 UTC,Why do you say it wouldn't make sense to put in its own function? I think it's a good idea to put that expression in another function called get_power() or something.
learnpython,3d8mh9,mkdz,2,Tue Jul 14 11:31:53 2015 UTC,"Seems to me like it would make sense to have a new function for ""power"".  In a general sense, when you find your code is getting repetitive, it's probably time to write a function to take care of that for you."
learnpython,3d8mh9,JustTurrble,2,Tue Jul 14 16:35:04 2015 UTC,"# The Reverse Steinhart Hart Equation: http://i.imgur.com/wiIVNyj.png power = lambda temp: _A + _B / temp + _C / math.pow(temp, 2) + _D / math.pow(temp, 3)  def get_resistance(temperature, reference_resistance=1e+5):     return round(reference_resistance * math.exp(power(temperature)))  def get_reference_resistance(temperature, resistance):     return round(resistance / math.exp(power(temperature)))   Why wouldn't this make any sense?"
learnpython,3d8mh9,CodeShaman,2,Tue Jul 14 18:48:21 2015 UTC,"This looks actually really, really good! I love it! Is it recommended to make such helper functions using lambda?"
learnpython,3d8mh9,CodeShaman,2,Tue Jul 14 19:11:32 2015 UTC,"It's best to use lambdas when passing functions anonymously as arguments or setting default function parameters, but the equation just looked so simple (has no logic, takes one argument) that it could work as one.  I'd rename it to sh_equation or something, but it's your code to do what you please with. power makes me think of math.pow."
learnpython,3d8mh9,cdcformatc,1 point,Tue Jul 14 19:31:33 2015 UTC,"This example is a good top-end of complexity that you are going to want to use lambda for. Any more complicated and you should just make it a function, for readabilities sake. Some people would argue it already crosses that line however. lamdas are a tradeoff between usability and readability."
learnpython,3d5yxr,rdf-,26,Mon Jul 13 20:02:32 2015 UTC,"Try out Automate the Boring Stuff with Python and the accompanying YouTube series.  What I like to do is read a chapter a day in the morning, then watch the chapter video at night in bed as a refresher."
learnpython,3d5yxr,Buttwallaby,5,Mon Jul 13 21:31:48 2015 UTC,So what boring things have you automated thus far?
learnpython,3d5yxr,MLGsallados,5,Tue Jul 14 00:29:20 2015 UTC,I automated a process that used to take me 300 hours to complete and now it only takes 5 hours. =) The only downside is that now I only get paid for 5 hours of work rather than 300 haha
learnpython,3d5yxr,Smartare,1 point,Tue Jul 14 09:15:26 2015 UTC,Use the other 295 hours to pick up a new hobby or work on other projects for yourself. Get paid for 300 hours.
learnpython,3d5yxr,headyyeti,2,Tue Jul 14 14:49:47 2015 UTC,Couldnt report false hours since I'm not the type of person who committs frauds.
learnpython,3d5yxr,Smartare,1 point,Tue Jul 14 17:07:30 2015 UTC,What process? Sounds awesome the amount you reduced it.
learnpython,3d5yxr,Inmute,3,Tue Jul 14 17:39:47 2015 UTC,"It was basically just really ineffective before. Basically reading and eveaulating a couple of hundreths documents. Instead of going to the site and download, saving and reading all the documents I wrote a program/script that downloads all the documents, organize them, search and highlight important things and then present them on the screen and I can just read it, give it a quick evaluation and it will show the next document and when I'm done it will construct the report with all the information. Works great."
learnpython,3d5yxr,Smartare,3,Tue Jul 14 17:53:50 2015 UTC,I automated finding broken links for my school's websites the other day (I work for them). The normal websites for this don't work on the school's pages because of some Web server  shenanigans.
learnpython,3d5yxr,theGentlemanInWhite,1 point,Tue Jul 14 02:02:00 2015 UTC,"Check out LinkChecker, http://wummel.github.io/linkchecker/  You can simply install it with pip, https://pypi.python.org/pypi/LinkChecker  :)"
learnpython,3d5yxr,mrcaptncrunch,1 point,Tue Jul 14 12:38:50 2015 UTC,Wow! I have read this so many times and never knew there was a video series!!
learnpython,3d5yxr,headyyeti,1 point,Tue Jul 14 03:45:05 2015 UTC,"Just want to let people know since they aren't labled, on the Youtube series the actual automation part of the book starts on Lesson 22."
learnpython,3d5yxr,headyyeti,1 point,Tue Jul 14 14:48:51 2015 UTC,Replying to reference later. Thanks. ☺
learnpython,3d5yxr,b4ckl4sh,1 point,Tue Jul 14 04:44:29 2015 UTC,Same. Thanks from me as well!
learnpython,3d5yxr,YoungOil,1 point,Tue Jul 14 05:59:37 2015 UTC,"So much this book! It's great. I didn't know about the YouTube videos.   I just finished a web scraper that crawls a website, collects data from from various pages, creates a gpx file for each hike, then organizes them in folders by state and region."
learnpython,3d5yxr,ANeonBlueDecember,1 point,Tue Jul 14 02:51:51 2015 UTC,"I like the book. Im having problems with it right now though. I felt like the section on else, if, elif could've been explained a little bit better. It felt like they cut some of the examples short. Either that or i just missed something."
learnpython,3d5yxr,mofallon86,2,Tue Jul 14 03:24:19 2015 UTC,Yeah it's not perfect. I think what it really excels at is the projects.   CodeAcademy had me bored. Automate made me feel like I was doing more than just typing words and actually creating things.
learnpython,3d5yxr,ANeonBlueDecember,1 point,Tue Jul 14 03:38:43 2015 UTC,"makes sense. Im not a fan of codecademy. It does its job of teaching you the basics, but its just to dry."
learnpython,3d5yxr,mofallon86,0,Tue Jul 14 03:40:47 2015 UTC,"I like Automate the Boring Stuff with Python. He explains things better than LPTHW, but I think LPTHW is better for getting you to remember. I've been using them both."
learnpython,3d5yxr,Iyajenkei,1 point,Tue Jul 14 05:22:18 2015 UTC,"I like Automate the Boring Stuff with Python. He explains things better than LPTHW, but I think LPTHW is better for getting you to remember. I've been using them both.   I think LPTHW is Python2..."
learnpython,3d5yxr,CATHOLIC_EXTREMIST,1 point,Tue Jul 14 08:21:25 2015 UTC,"It is, but the only differences between the two I have found that you actually use in the books are print(), input(), and {}.format()"
learnpython,3d5yxr,headyyeti,2,Tue Jul 14 14:51:51 2015 UTC,String encodings are very different and there's a ton of new modules in the standard library that are now best-practices.
learnpython,3d5yxr,CATHOLIC_EXTREMIST,1 point,Tue Jul 14 15:03:35 2015 UTC,Can you give some examples? The only thing I've changed is my use of %s to .format()
learnpython,3d5yxr,headyyeti,1 point,Tue Jul 14 15:11:57 2015 UTC,"Well the default encoding for strings in Python 3 is UTF-8 whereas for Python2 it's something else, system dependent I think."
learnpython,3d5yxr,CATHOLIC_EXTREMIST,2,Tue Jul 14 15:21:09 2015 UTC,Python 3 is unicode by default and Python 2 is byte strings (read: ascii) by default. Actual encoding for unicode is system dependent (iirc)  unless you specify it.
learnpython,3d5yxr,kurashu89,2,Tue Jul 14 23:12:01 2015 UTC,"If that was the case, there wouldn't be the Python 2-3 divide. Replacing print some_var with print(some_var) across a code base using sed is trivial.  There's syntax changes, class creation changes, import is mostly implemented in Python (instead of C) as of 3.3. Strings are unicode by default now. Bytestrings got gutted (unfairly in my opinion). That's not even getting to the meat of it.  Sure, an absolute beginner will see print is a keyword in one and a function in the other, but there's a gulf between 2.7 and 3.4 (or even 3.3 when Python 3 really became super worth it)."
learnpython,3d5yxr,kurashu89,11,Tue Jul 14 23:18:02 2015 UTC,This is a good book (and it's free!)        Think Python 3
learnpython,3d5yxr,botena,4,Mon Jul 13 21:27:11 2015 UTC,UC Berkeley CS 61A lectures and exercises got me up to speed with Python 3 in short amount of time
learnpython,3d5yxr,cntx,3,Tue Jul 14 00:03:42 2015 UTC,"I recommend checking out IPython to get you started.   There are very few differences a beginner will notice between Python 2 and 3, so I recommend using whichever has the tutorial you wish to read.  (Scientific communities still use Python2.7, everyone else has switched to Python3.)"
learnpython,3d5yxr,loveandkindness,2,Mon Jul 13 21:42:18 2015 UTC,i think scientific comminities are about to switch because they are salivating at the newly introduced matrix multiplication operator @ plus some other good stuff added to the 3.x line.
learnpython,3d5yxr,Vaphell,1 point,Mon Jul 13 23:47:14 2015 UTC,"Thanks for pointing that feature out, I didn't know about that!"
learnpython,3d5yxr,loveandkindness,1 point,Tue Jul 14 00:15:02 2015 UTC,"While Scientists are generally conservative in the tools they use, it's not universally true. Scipy/Biopython modernised pretty quickly, for example, compared to many web frameworks."
learnpython,3d5yxr,cathalgarvey,1 point,Tue Jul 14 06:11:42 2015 UTC,Thank you for showing me this!!!
learnpython,3d5yxr,loveandkindness,3,Tue Jul 14 12:46:53 2015 UTC,"I am a huge proponent of Composing Programs. I think other books/websites/etc focus too much on teaching you tricks specific to python, or syntax... Composing Programs focuses on problem solving with computers, breaking programs into chunks, etc. You can always google/check the docs for syntax issues, but Google can't tell you how to structure a program. Based on a classic computer science textbook."
learnpython,3d5yxr,theinevitable,3,Tue Jul 14 04:36:13 2015 UTC,"John DeNero who teaches at UC Berkeley uses the Composing Programs site in his videos. Seeing environment diagrams being automatically generated and playing with recursive programs is when everything suddenly ""clicked"" for me. Before that, Python execution was a bit of a mystery. I knew I was missing something. Composing Programs website was the biggest ""aha moment"" in my journey to learn programming."
learnpython,3d5yxr,cntx,4,Tue Jul 14 09:30:22 2015 UTC,"All of the resources listed so far are all good.  I would like to add the following:   Head First Python by O'Reilly Hello Web App Hello Web App url Python Programming by John Zelle Introduction to Programming in Python by Sedgewick, Waye, and Dondero Learn Pyton the Hard Way by Zed Shaw (some people this books does not click for) Real Python Real Python Url  # I am a huge fan of them because they send you a url every time the book is updated. You can email them if you are a student and get all three books for $20.    Do not ignore the videos either. A one month subscription to Safari Books Online or Pluralsight is well worth the money. I would lean towards Safari because you can get a 10 day trial and they have all of the OReilly books and videos which can be viewed offline."
learnpython,3d5yxr,linuxlearningnewbie,9,Mon Jul 13 23:23:14 2015 UTC,"I started with Python 2 and transitioned to Python 3.   Honestly, it's rather easy. You'll make mistakes for a little while afterwards, but it certainly isn't hard to find resources that tell you the things you really need to know that have changed."
learnpython,3d5yxr,timworx,5,Mon Jul 13 20:32:52 2015 UTC,Mostly with prints. Those darn parenthesis.
learnpython,3d5yxr,Vicyorus,3,Mon Jul 13 21:17:31 2015 UTC,i've experienced the encoding horrors. pretty much the biggest problem for me. everything else super simple.
learnpython,3d5yxr,tk421whyarentyouatyo,3,Mon Jul 13 21:22:00 2015 UTC,"I recommend you watch or read Pragmatic Unicode, or, How do I stop the pain? by Ned Batchelder. It made everything fall into places for me. Great talk and not very long too. I'd say it's better than the official How-to."
learnpython,3d5yxr,an_actual_human,1 point,Tue Jul 14 03:30:03 2015 UTC,"No, no, don't mention those demons to me again. AHH!!!"
learnpython,3d5yxr,Vicyorus,2,Mon Jul 13 21:26:10 2015 UTC,"I've been shopping around as well. One site that I've found is the Intro to CS course from Harvey Mudd College. If you look into it, and don't get the picobot exercise, don't worry. Just skip it. I'll admit I haven't gotten very far yet, but it explains concepts of python 3 that people with no background in programming (me) can understand relatively easily. I'm jumping between that and the revised Think Python pdf that has been edited for python 3. On mobile, sorry for no links.  Edit: I'm not everyone, just a humble beginner"
learnpython,3d5yxr,dumpster_dinner,2,Mon Jul 13 20:29:48 2015 UTC,"Started with real Python. All code in the book is written in 2 but anytime there is a difference in 3 it is noted. Additionally, all the solutions are written in 2 and 3."
learnpython,3d5yxr,GenericHbomb,2,Mon Jul 13 22:17:49 2015 UTC,"I really like this one: programarcadegames.com, the instructor really explains the concepts very well."
learnpython,3d5yxr,James_Hunt,2,Tue Jul 14 10:27:20 2015 UTC,Automate the boring stuff =)
learnpython,3d5yxr,Smartare,2,Tue Jul 14 09:14:12 2015 UTC,"Switching from Python 2 to 3 is very easy. You might not even have to right away because plenty of projects are still written in 2.  The differences are small like    print ""String""   becomes  print(""String"")   or  raw_input(""Enter a number: "")   becomes   input(""Enter a number: "")   Switching from Python 2 to 3, won't be like learning a whole new language. So if you think LPTHW might be a good resource for you, don't let that it was written in Python 2 dissuade you. Here's a handy guide for switching from Python 2 to 3 in case you want to take a look."
learnpython,3d5yxr,Sambiino,1 point,Mon Jul 13 21:32:41 2015 UTC,"Also, it still works in Python3 (even though I've heard it will be phased out), but    ""%s %d"" % (""Age"", 3)     becomes:    ""{0} {1}"".format(""Age"", 3)"
learnpython,3d5yxr,headyyeti,1 point,Tue Jul 14 14:55:30 2015 UTC,You can start now with Python Learn for Everywhere (https://www.coursera.org/course/pythonlearn)
learnpython,3d5yxr,thuvh,1 point,Tue Jul 14 01:43:04 2015 UTC,"I know it's not the most popular opinion, but I learned from the python tutorial on python.org. It takes a few hours to go through it tops and introduces you to all the big features of the language. You'll probably still want another resource to give you some exercises or what not and give a little more explanation to anything you didn't quite understand in the tutorial, but it's enough information that you can get started on projects and you will know what you still need to learn."
learnpython,3d5yxr,skpkzk2,1 point,Tue Jul 14 07:32:21 2015 UTC,I personally really liked python for kids. I like pictures of animals and wizards and bad puns.
learnpython,3d5yxr,PuffinTheMuffin,1 point,Tue Jul 14 11:02:18 2015 UTC,"My suggestion is https://www.thenewboston.com/  Bucky has a really nice way of teaching. Small videos, straight to the point(with funny moments), you will be up to speed in days, at least it works for me. You can try and if it doesn't work well there are many options!  Personally i didnt like reading at the beginning, and in general i like videos i receive knowledge faster but maybe its only me :S"
learnpython,3d5yxr,__boko,1 point,Tue Jul 14 17:32:53 2015 UTC,http://www.amazon.com/Python-Programming-Absolute-Beginner-Edition/dp/1435455002
learnpython,3d5yxr,tk425,-1,Tue Jul 14 18:49:35 2015 UTC,"Here was my process for learning:    Download Python 3.4 and the community version of PyCharm.  Come up with a project you want to work on.  My project is an automated backup program for all the devices on my network.  As you encounter new challenges, search for answers on the internet.  How do I create a function?  How do I save a piece of data to an XML file?  Eventually you'll have a working program.   Not everything in a book or guide is going to relate to what you want to do.  Likewise, not everything you want to do is will be in a single guide.  Trying to learn everything at once is a great way to burn yourself out before moving on to something else.  Keep it simple."
learnpython,3d5yxr,ClanzDev,8,Mon Jul 13 20:58:09 2015 UTC,"The problem being is that he/she is a complete beginner, so I'd jumping into a project headfirst like this is likely to leave them confused and burned out. It's easy to say look up how to define a function in Python, but if you're a complete beginner in programmer and don't even know that what you're looking for is a function, then what?  My advice is to browse the more popular suggestions for learning resources and find whichever one you're most comfortable with. It doesn't really matter which one, because if you're serious about learning Python, it definitely won't be the only one you read. But it'll be a good intro and get you to understand the very basics so you can go about doing something like /u/ClanzDev suggests.  I personally used Learn Python the Hard Way. There are a lot of people who don't like that particular resource, but it worked to get me understanding the very basics, and more importantly, how to go about researching more in-depth topics."
learnpython,3d5yxr,Sambiino,4,Mon Jul 13 21:28:21 2015 UTC,"I started with PyCharm, and loved it.   ...  Looking back, I wish I had found IPython sooner."
learnpython,3d5yxr,loveandkindness,0,Mon Jul 13 21:45:29 2015 UTC,"transitioning from python2 to 3 isnt the worst experience, and LPTHW is so darn good I'm tempted to say ""just take the plunge"".  Added benefit of also learning python 2. Still tons of great code out there that hasn't been ported."
learnpython,3d716x,TrendingBot,1 point,Tue Jul 14 00:48:21 2015 UTC,WE DID IT REDDIT
learnpython,3da0wi,AlmightyMexijew,1 point,Tue Jul 14 17:44:29 2015 UTC,"(Edit: These things come after gaining some proficiency in programming.)  If you're interested in being employed, then you need to engage in active projects.  I believe a standard ""first step"" is to try to improve documentation for the libraries you will be working with (you do have a general direction here, I hope). Being closely familiar with documentation for a popular library is critical to success.  Also, learn not just about Python, but about the environment and the community where you will be applying Python."
learnpython,3da0wi,loveandkindness,1 point,Tue Jul 14 18:38:18 2015 UTC,use linux
learnpython,3d9qqy,Mocha2007,6,Tue Jul 14 16:34:59 2015 UTC,"Sets can only contain unique elements:  >>> set('1.3333333') set(['1', '3', '.'])   And you can find the length with len():  >>> len(set('1.3333333')) 3"
learnpython,3d9qqy,novel_yet_trivial,1 point,Tue Jul 14 17:07:55 2015 UTC,option 1:  set('1.333333')   option 2:  x = '1.3333333' y = [] for char in x:     if char not in y:         y.append(char)
learnpython,3d9qqy,david622,-3,Wed Jul 15 00:57:34 2015 UTC,Strings are just lists.  for character in string:   Then just add the characters to a set to get rid of the duplicates.
learnpython,3d9qqy,Sir_not_sir,8,Tue Jul 14 16:42:09 2015 UTC,"Strings are not lists, they are iterable though."
learnpython,3d9qqy,Justinsaccount,3,Tue Jul 14 17:40:35 2015 UTC,"Strings are technically not lists, but they have many of the same attributes as lists and can be treated like a list of characters in most cases.  Sorry, even though you are nearly right, we are sticklers for details in this sub :)."
learnpython,3d9qqy,novel_yet_trivial,1 point,Tue Jul 14 18:17:22 2015 UTC,Are they arrays then?
learnpython,3d9qqy,Sir_not_sir,3,Tue Jul 14 18:19:14 2015 UTC,"Strings and lists are two of the built-in python data types. Under the hood I would guess that strings are an array of chars, and lists are an array of pointers. If can you read C you can check, but I don't read C."
learnpython,3d9qqy,novel_yet_trivial,1 point,Tue Jul 14 18:32:36 2015 UTC,"Most notably, lists are mutable but strs are not. So lists have methods like .append and .extend. On the other hand, strs have methods like .lower() and .startswith. dict keys must be immutable, so strs are valid keys but lists are not.  Indexing, iterating, and slicing a str always gives you more strs but lists can contain any type."
learnpython,3d9q9x,pythonhelp123,2,Tue Jul 14 16:31:37 2015 UTC,string == vowel   This will ALWAYS be false since you are comparing a string to a list. A string is never equal to a list. You need to check if the string is in the list.
learnpython,3d9q9x,novel_yet_trivial,1 point,Tue Jul 14 16:34:56 2015 UTC,"I changed it to if string in vowel and the program runs, but it doesnt show True/False."
learnpython,3d9q9x,novel_yet_trivial,2,Tue Jul 14 16:36:37 2015 UTC,"You are asking it to assert, which does nothing if the result is True. If you want to show the result, change it to a print statement."
learnpython,3d9q9x,novel_yet_trivial,1 point,Tue Jul 14 16:43:01 2015 UTC,Ah okay it runs now. Do people usually leave assert in their programs?
learnpython,3d9p1r,Arion_Miles,2,Tue Jul 14 16:23:05 2015 UTC,encrypt my executable   Can you explain what you mean with this? Do you mean you want to encrypt the source code?
learnpython,3d9p1r,novel_yet_trivial,0,Tue Jul 14 16:31:41 2015 UTC,I don't want to obfuscate the source code. I just want the executable to be undetectable by virus scanning applications.
learnpython,3d9p1r,novel_yet_trivial,2,Tue Jul 14 16:33:06 2015 UTC,You seem to have a fundamental misunderstanding of what cryptography is.
learnpython,3d9goe,BasicDesignAdvice,2,Tue Jul 14 15:23:53 2015 UTC,"Try  def do_POST(self):     logging.warning(self.rfile.read())   Also, why do you have       SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self)   What are you trying to do?"
learnpython,3d9goe,Justinsaccount,1 point,Tue Jul 14 19:45:13 2015 UTC,"I'm assuming you read this, which assumes that the incoming data is form-encoded. /u/Justinsaccount has the right idea."
learnpython,3d9fgx,Yalpski,2,Tue Jul 14 15:15:11 2015 UTC,"The data file is missing something where the python script expects it. We can't tell you what until we see a sample of the data.   Edit: as a guess, I would say the problem is the last column, which this script expects to contain a /. I'd bet that it does not."
learnpython,3d9fgx,novel_yet_trivial,1 point,Tue Jul 14 15:23:27 2015 UTC,"Ahhh ok thanks. I was thinking that it was telling me line 40 had a problem in it, not that the file it was trying to read had a problem. I'll try reformatting the file and see if it works!"
learnpython,3d9fgx,novel_yet_trivial,1 point,Thu Jul 16 00:50:48 2015 UTC,Looks like the new files I was trying to run this on had an extra blank line at the start which was throwing the whole thing off. Thanks again for the help!
learnpython,3d9fgx,novel_yet_trivial,1 point,Thu Jul 16 15:01:55 2015 UTC,"Ahh. So you added a line to continue if len(splitLine) is less than 6, right?"
learnpython,3d97cl,Visti,3,Tue Jul 14 14:11:26 2015 UTC,"continue in except starts another iteration of the same code asap (will fail, duh), pass does nothing, so indirectly it starts another iteration too. break is a must or you will never leave the while True loop.  Why do you have that loop there in the first place if infinite retries are not your goal? If you want to try once and skip if failure, try/except would be enough. If you want n tries, implement a counter and break when you run out of tries."
learnpython,3d97cl,Vaphell,1 point,Tue Jul 14 14:31:59 2015 UTC,"IIt's there for the simple reason that if you google ""python exception handling"" then the While True loop comes up a whole bunch. I thought that was just the way you did it. The other thing makes way more sense to me."
learnpython,3d97cl,Vaphell,1 point,Tue Jul 14 15:17:08 2015 UTC,"maybe in the context of particular code snippets it made sense, eg flaky connection where retries can be perfectly fine and productive. In your case it's highly unlikely that a failing query sent to a remote db will miraculously work in near future so retries are a waste of time. Gotta understand the reasoning behind the code within the context, instead of copypasting wholesale."
learnpython,3d97cl,terminak,2,Tue Jul 14 16:00:21 2015 UTC,"I've tried both Pass and Continue to no avail.   pass and continue will have the exact same result here; both will resume the next iteration of the infinite loop, and retry the failing operation until it completes (in this case, when the missing artist/track info becomes available on last.fm some time in the future).   What you need is return to exit the function, but you really should get rid of that loop altogether and make a better mechanism for retrying if the operation fails for other reasons (like timeout/network issues) and you actually want to try again. Look into the retrying module for that."
learnpython,3d8zuf,NeonBlizzard,2,Tue Jul 14 13:05:35 2015 UTC,some context? which library/module do you use? don't leave us hanging.
learnpython,3d8zuf,Vaphell,2,Tue Jul 14 13:13:24 2015 UTC,I am not sure what you mean by Library/Module. Sorry I am very new to Python. I am using JES 5.020.
learnpython,3d8zuf,Vaphell,2,Tue Jul 14 13:17:09 2015 UTC,"google says you need something like  new_pic = makeEmptyPicture(newWidth, newHeight) writePictureTo(new_pic, pickAFile())   http://www.cs.uic.edu/~troy/spring07/cs101/labs/lab6.html  as for generating names it's trivial  total = 4 for n in range(1, total+1):     filename = '{}_4_Pinetree.jpg'.format(n)   or to be more flexible  total = 4 source = 'Pinetree.jpg' for n in range(1, total+1):    filename = '{}_{}_{}'.format(n, total, source)"
learnpython,3d8zuf,Vaphell,2,Tue Jul 14 13:31:40 2015 UTC,"Haha thanks. I figured out a method to do it and to control the file name.   First I set the media path in the main, pass that onto the split function.   Then in the split function I get the file name of the original picture, eg Castle.jpg using filename=''.join(os.path.splitext(os.path.basename(filepath)))  Then I have the total number of slices to make int(ceil(filesize/20000)), which I convert to a string.   In the loop, I have the number of which slice the loop is on converted to string as well.   So getting the file path to save to is as easy as adding the strings  savePath=path+currentSlice+""_""+Total+""_""+filename   This gives you the correct filename, file type and numbers them appropriatly."
learnpython,3d8zuf,Vaphell,3,Tue Jul 14 13:50:41 2015 UTC,"converting to string is not necessary if you use format(). You shouldn't do str+str+str+str anyway, each + step builds a new string object so it's wasteful.  str.format() does the right thing even if param is a number.  >>> total = 4 >>> filename = 'SomePic.jpg' >>> for i in range(1, total+1): ...     f = '{}_{}_{}'.format(i, total, filename) ...     print(f) ...  1_4_SomePic.jpg 2_4_SomePic.jpg 3_4_SomePic.jpg 4_4_SomePic.jpg   also instead of adding path and filename by hand, you should rather use os.path.join()"
learnpython,3d7c4n,elbiot,3,Tue Jul 14 02:15:08 2015 UTC,"IDK why this is not upvoted as any hand-made project here. It's awesome. I didn't dig it deep enough to completely understand how it works, but it looks solid and creative. A bit raw (some styling/formatting issues, no documentation), but hey!"
learnpython,3d7c4n,04h,1 point,Tue Jul 14 15:37:46 2015 UTC,Oh fsck.  I was changing stuff around so much that I didn't bother with docstrings.  Definately meant to add more comments though.  I'll push some later today.  Thanks.
learnpython,3d69t8,lattakia,6,Mon Jul 13 21:18:52 2015 UTC,I always thought of it as a sequence of “cd” statements.  cd one cd two cd /three   Will clearly make you end up in /three
learnpython,3d69t8,flying-sheep,1 point,Mon Jul 13 22:39:47 2015 UTC,Great way to think about it! Thanks!
learnpython,3d69t8,FoolofGod,1 point,Mon Jul 13 22:46:27 2015 UTC,Nice rule of thumb
learnpython,3d69t8,loveandkindness,1 point,Mon Jul 13 22:59:51 2015 UTC,"Neat, thanks."
learnpython,3d7dhr,Bliss86,4,Tue Jul 14 02:26:21 2015 UTC,"Edit: By the way, if collision detection only takes up 13% of your run time, well you can only get 13% faster by taking it to zero, and that's an unlikely accomplishment.  With numpy you can hope for a 10x-30x performance improvement if you can avoid iterating over elements of arrays (which I'm sure you can for tetris).  Tetris seems like a good game to be made faster with numpy.  For instance, if your board was a 2d numpy array of bools, you could do a simple mask comparison to see if the position is invalid.  This would get rid of the nested loop and so be way faster.  Then you'd write the mask to the array to place it (also fast).  Determining if a line is complete is trivial then.  If you need to find holes (to train your AI) you could use openCV to do marching squares.  Though you could just use the mask to find out how much overhang the piece in that position causes, if you want a more rough quality score.  You should make cached masks that represent all the pieces in all the orientations so you don't have to make any new arrays while the program is doing its thing.  Array creation is expensive."
learnpython,3d7dhr,elbiot,1 point,Tue Jul 14 02:54:42 2015 UTC,"Yes, there are a lot of other computations that could be speed up by numpy arrays. Still trying to figure out its functionality.  def validPosition(self, board, x, y, rotation):      dx =x + self.dimension     dy =y + self.dimension     #Check if out-of-bounds     if y < -1 or dy > const.BOARD_HEIGHT:         return False     if x < 0 or dx > const.BOARD_WIDTH:         return False     cells = self.cells(self.rotation)     return y == -1 or (board[y:,x:][:dy-y,:dx-x] * cells).sum() == 0   This already works twice as fast, but has problems when a cell-matrix overlaps the game board (for example the vertical I has to empty columns before any actual cell)"
learnpython,3d7dhr,elbiot,1 point,Tue Jul 14 14:41:06 2015 UTC,"Is that with numpy?  you could do:  or not any(board[y:dy,x:dx][cells])   which uses a slice (like you were) and a mask of the same size of the slice to return only the elements where the mask was True.  Regarding your question: Is the problem that your bounding box is bigger than your peice, so that getting the bounding box up against the side of the board may not get the piece up against the side?  I'd either use a bounding minimal rectangle for each rotation (it seems that you're using a bounding square that accomodates all rotations),  (the height and width of a numpy array are stored in it's shape tuple: arr.shape) or a hackier way would be to pad the board with True on all sides and let the same collision detection determine if the move is valid or not.    I vote for the first one.  A rotation should return the new array, height, width and (x,y) position (since it's ""center"" will probably need to be adjusted in some cases, no?)"
learnpython,3d7e4j,MemeInACan,3,Tue Jul 14 02:31:25 2015 UTC,"You need blank lines around your code and it needs to be all indented 4 extra spaces.  Besides that:  input ( ""what was al capone put in jail for?"") a = input   input is a function that is returning whatever you type in, then that value is just thrown away. Then when you do a = input, you are setting a to be the same as the function input, not the return value. What you need is  a = input ( ""what was al capone put in jail for?"")"
learnpython,3d7e4j,The-Mathematician,1 point,Tue Jul 14 02:35:41 2015 UTC,"Ohhh, that works! For some reason I thought that you couldn't make the value the input on the same line (if that sentence makes sense). It makes a lot of sense now. As for the spacing and indentations, that's just how reddit formatted it when I pasted it in."
learnpython,3d7e4j,The-Mathematician,2,Tue Jul 14 03:01:30 2015 UTC,"Yeah, if you want it to be readable without me having to look at the res source then you need to format it yourself"
learnpython,3d7e4j,MorrisCasper,2,Tue Jul 14 03:03:33 2015 UTC,You have to put 4 spaces in front of your code to make reddit treat it like code
learnpython,3d7e4j,Sir_Jerry,1 point,Tue Jul 14 13:10:47 2015 UTC,"I didn't test, but I think your issue is the input you are getting includes a newline.  Hope this helped."
learnpython,3d6x9h,jrclayton,4,Tue Jul 14 00:16:43 2015 UTC,"When you recursively call F on the last line, you only pass in one variable, not two."
learnpython,3d6x9h,Doormatty,2,Tue Jul 14 00:20:52 2015 UTC,Thanks so much. Duh.
learnpython,3d7isy,tbharber,2,Tue Jul 14 03:08:41 2015 UTC,You mean percentage of area?  Calculate the area of each and divide one by the other.    Do it with pencil and paper before you try to write a function.  Get clear on exactly what your question is.
learnpython,3d7isy,elbiot,1 point,Tue Jul 14 03:47:09 2015 UTC,Do it with pencil and paper before you try to write a function.   This is always the answer if you have a math problem. (If its not trivial.)
learnpython,3d7isy,The-Mathematician,2,Tue Jul 14 15:23:22 2015 UTC,"(64, 64, 116, 119)   So is that (x0, y0, x1, y1)? Assuming it is, it's just a matter of converting the arithmetic into python for finding the rectangle's area:  coords = (64, 64, 116, 119) width = abs(coords[0] - coords[2]) height = abs(coords[1] - coords[3]) area = width * height   You can write this as a function taking four arguments:  def area(x0, y0, x1, y1):     w = abs(x0 - x1)     h = abs(y0 - y1)     a = w * h     return a   And if you're a scientist, write it on one line and give it an opaque name:  def arRect0(x0, y0, x1, y1):     return abs(x0-x1)*abs(y0-y1)   And if you have a PhD, be sure to write it something like this:  arRect0 = lambda *a:abs(a[0]-a[2])*abs(a[1]-a[3])   Otherwise, just do your own homework! :)"
learnpython,3d7isy,leeroyhightechnology,1 point,Tue Jul 14 04:09:51 2015 UTC,I need to determine what percentage the first tuple is to the 2nd.   What is that supposed to mean? Can you give an example with small numbers and show how you do the calculation?
learnpython,3d7hmu,whereTehPandas,2,Tue Jul 14 02:59:26 2015 UTC,"Good job!    How fast is the clicking? 100x a second? 10x a second? 1x a second?  Isn't clock(10) 1/6th of a second (.16667) and your sound duration is .1 second still?  But I'm not seeing a play on the beat queue anyway, so is the clicking just in the 440 hz?"
learnpython,3d7hmu,elbiot,1 point,Tue Jul 14 03:12:37 2015 UTC,"Thanks elbiot! According to the Pygame Documentation, clock.tick(fps) is the number of frames per second you'd like to run your game at, as compared to the converse, time.sleep(t). So the 440 Hz channel loops for infinity (-1) without any issues. The problem is the channel that's dependent on the mouse. I think it clicks/pops about 10x a second, in line with the while loop. Currently, I've tried both the chan.play() and chan.queue() functions. I was hoping that using the queue function would remove any clicking/popping, as I could write anything I wanted to the buffer, and as long as the system still had sounds in the buffer, I'd be able to avoid any discontinuity or popping (as long as the buffer wasn't too small). In other news, if I change the frame rate to 1 fps in Pygame (and adjust duration accordingly), I don't really hear any clicking. Unfortunately 1 fps is far too slow to be useable."
learnpython,3d7hmu,elbiot,2,Tue Jul 14 03:51:43 2015 UTC,"as I could write anything I wanted to the buffer, and as long as the system still had sounds in the buffer, I'd be able to avoid any discontinuity or popping (as long as the buffer wasn't too small).   How did you avoid discontinuities?  I'd think you'd make buffers that are some exact number of wave lengths long, and add new buffers to the queue to start after the last finishes.  So, every buffer is filled with values that start increasing from zero, and the last few samples are increasing up to zero... and then the next buffer takes over and starts increasing past zero at the new frequency.  But it might be that it's the changing of buffers that causes the problem, so you could put a long numpy array into the buffer and update it ahead of where it is actually playing at.  Do an experiment to see if you can write into the buffer while it is being played (write 10 seconds of 440 and sleep 5 seconds and then write in 4400 over the last half or whole thing).  I do think continuity in position and first derivative is important.  My 2 cents"
learnpython,3d4czr,sunrise_highway,12,Mon Jul 13 12:39:28 2015 UTC,Yes.
learnpython,3d4czr,redditiv,8,Mon Jul 13 12:45:45 2015 UTC,So then what's the p in strptime?
learnpython,3d4czr,oxymor0nic,9,Mon Jul 13 13:57:32 2015 UTC,parse.
learnpython,3d4czr,REFERENCE_ERROR,2,Mon Jul 13 14:24:18 2015 UTC,oooh... thanks!
learnpython,3d4czr,oxymor0nic,7,Mon Jul 13 14:48:12 2015 UTC,"The name comes from a standard library C function which does the same thing, and it's common to use ""f"" to mean ""format"" in C. ""printf"" is another example."
learnpython,3d4czr,XenophonOfAthens,1 point,Mon Jul 13 15:38:14 2015 UTC,"I always assumed it was ""string format time"".  I just assume I'm saying half of these things incorrectly.  No matter what I know it means, I cannot pronounce 'popen' any way except ""poppen""."
learnpython,3d4czr,scottevil110,0,Mon Jul 13 13:52:16 2015 UTC,"Hah, I have the same issue. The very first time I read it I saw it as ""popopen"", and subsequently tried to type it that way. Now every time I read it, I pronounce it as ""pop open"" in my head."
learnpython,3d4czr,Polycystic,1 point,Mon Jul 13 14:35:22 2015 UTC,"You, my friend, are not alone."
learnpython,3d7gls,MusaTheRedGuard,1 point,Tue Jul 14 02:51:13 2015 UTC,XPost Subreddit Link: /r/codereview
learnpython,3d7gls,XPostLinker,1 point,Tue Jul 14 02:55:12 2015 UTC,"care to show some input data, ie csv, website to scrape?"
learnpython,3d7gls,Vaphell,1 point,Tue Jul 14 03:12:47 2015 UTC,"Yeah sure, here is the test.csv file given. I wasn't sure whether I should include it as I don't want to give away my identity"
learnpython,3d7gls,Vaphell,1 point,Tue Jul 14 04:12:29 2015 UTC,"running your prog on the csv produces glitches in the matrix in my solution.csv file the header is broken in half with newline which looks funky  name,gender,birthdate,address,city,state,zipcode,email,bio,job,""start_date "",start_date_description   also the first 5 ""lines"" are:  header header header data line #1 header data line #1"
learnpython,3d7giq,ColbyHep55,1 point,Tue Jul 14 02:50:36 2015 UTC,"Consider different structure:  class Game:     """""" Game logic here """""" class Board:     """""" Well, game board and it's methods """""" class Ship:     """""" Blueprint for any ship objects """"""   and maybe  class BattleShip(Ship):     """""" For battleship. Like, big ones """""" class TorpedoBoat(Ship):     """""" Small and quick """""" ...   It will be much easier to programm"
learnpython,3d7giq,04h,1 point,Tue Jul 14 09:17:37 2015 UTC,"I structured it differently and I got it to work how I wanted it too, but I don't like how the code looks right now. Any suggestions?  https://gist.github.com/ColbyHepworth/d2c3f1577f35445fe50c"
learnpython,3d7giq,04h,1 point,Tue Jul 14 16:41:59 2015 UTC,"I need some time to dig through code (v2 is definitely more readable, but still messy). For now I can say one thing: KISS   Why Game needs so many arguments? What is r_ships, c_ships, r_starts, c_starts? What is the purpose of the Game? What is the output? Why ShipGeneration needs even more arguments? Shouldn't it just take size and generate one ship of this size and some shape?"
learnpython,3d7giq,autowikibot,1 point,Tue Jul 14 18:12:12 2015 UTC,"KISS principle:       KISS is an acronym for ""Keep it simple, stupid"" as a design principle noted by the U.S. Navy in 1960.   The KISS principle states that most systems work best if they are kept simple rather than made complicated; therefore simplicity should be a key goal in design and unnecessary complexity should be avoided. The phrase has been associated with aircraft engineer Kelly Johnson (1910–1990).  The term ""KISS principle"" was in popular use by 1970.  Variations on the phrase include ""keep it short and simple"", ""keep it simple and straightforward"" and ""keep it small and simple"".       Relevant: Instruction creep | Arch Linux | Dragora   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3d7giq,04h,1 point,Tue Jul 14 18:12:51 2015 UTC,"Thanks, robot"
learnpython,3d79m5,mozzerellabeachballs,5,Tue Jul 14 01:55:26 2015 UTC,"sqlalchemy. Check out the ORM(Object Relational Mapper) documentation, and I think you'll see what you are looking for. Tables become classes, sql becomes functions like .order_by(), .group_by(), .join(), etc...  I'll save my rant about sqlite for another time..."
learnpython,3d79m5,jerseysucks182,1 point,Tue Jul 14 02:19:14 2015 UTC,"what don't you like about sqlite? right now my only complaint is that i wish it supported more data types (date/times, urls, hashkeys, etc), had a better way to implement metadata & header info, plus a few other things, but i'll live.  right now i'm just using it to store information about user profiles (login ids, registration info, account types & permissions, etc). would you reccommend a better alternative, one that is possibly just as simplistic?"
learnpython,3d79m5,misterphilly,2,Tue Jul 14 17:54:53 2015 UTC,"Forgot the /s. There's nothing really wrong with sqlite. It's great for a quick and dirty prototypes, and lightweight applications. You get sqlite for free with Python, and there's no need for any administration. It does fall short in places though. Things like concurrency and data integrity become your problem, along with some of the things you mentioned. When it comes time for your application to scale, you'll probably find yourself wishing you had used something like MySQL or PostgreSQL; both of which are pretty trivial to install and configure these days. I would recommend reading about the differences between a database like PostgreSQL and sqlite, and think about where you want to take your application.  With that said, using an ORM like sqlalchemy will take a lot of the pain away, at least when it comes to interacting with the database. sqlalchemy helps you keep your code database agnostic, so switching between backends should ideally not require any code changes. Assuming you have multiple lifecycles(dev, qa, qp, prod, etc...), it's entirely possible to connect to a sqlite database for dev, and hit postgres in qa without needing to touch your code(this would be driven by your app config file). It's not recommended(databases don't all act the same), but it highlights the flexibility you get with an ORM."
learnpython,3d5qr8,pythonlearnerman,1 point,Mon Jul 13 19:06:06 2015 UTC,"You could use a list to keep track of the results.  I know that you haven't asked for it, but I have a few small comments on your code :)  Why do you use low/high ranges? I don't quite understand the purpose of those.  You repeat some code many times, and could simply do user input before your conditional statements.  Another thing is that you call your main function y() recursively (meaning you call it inside itself), which has some side-effects.  Instead, you could make a while-loop instead, like this:  while again != 'n':     y()     again = input('Do you want to continue? y/n: ')"
learnpython,3d5qr8,hw_t_dstr_ngls,1 point,Mon Jul 13 19:44:45 2015 UTC,"I would write a small output function like so:  def output_result(output_str):     output_str = str(output_str) # make sure it's a string!     print(output_str)     all_outputs.append(output_str)   For this to work, initialize all_outputs as an empty list at the start of the program, near about line 3. This would be all_outputs = []  Instead of printing your outputs directly, call this function, instead. So, where it might say print (number1 / number2), use output_result(number1 / number2). The function will take care of the rest for you, every time.  Then, when your program is about to exit, run print ""\n"".join(all_outputs)."
learnpython,3d70tq,Sambiino,2,Tue Jul 14 00:45:25 2015 UTC,Setup instructions:  Make a virtualenv (read up on this if you haven't already)  mkdir sambiinotumblr cd sambiinotumblr virtualenv venv ln -s venv/bin/activate   Activate the virtualenv (this is necessary each time you start a new shell session)  . ./activate   Grab the pytumblr source  git clone https://github.com/tumblr/pytumblr   Install it  cd pytumblr python setup.py install   Instructions for using the library:  Start a new shell session and use the library interactively  cd sambiinotumblr . ./activate python import pytumblr   Or start a new shell session and use the library with your own program  cd sambiinotumblr . ./activate python sambiinos_porn_downloader.py
learnpython,3d70tq,leeroyhightechnology,2,Tue Jul 14 02:12:54 2015 UTC,"Thank you! This is so much more helpful and concise than all of what I've read elsewhere.   python sambiinos_porn_downloader.py    HAHA! Actually no, but now that you bring it up, that'd be a great feature to work on implementing..."
learnpython,3d70tq,leeroyhightechnology,1 point,Tue Jul 14 02:21:57 2015 UTC,Cool. Is it working for you?
learnpython,3d6zqx,MLGsallados,3,Tue Jul 14 00:37:06 2015 UTC,"I'd suggest not putting anything in the Python32 directory. Make a new directory for your game wherever you want and an images directory inside that. Then  img_path = os.path.join(""images"", ""image.png"") image = pygame.image.load(img_path).convert()   Using os.path.join will construct the path according to the specific OS running your script so it will work on all systems."
learnpython,3d6zqx,iminurnamez,1 point,Tue Jul 14 02:19:55 2015 UTC,Does image = pygame.image.load('graphics/my_image.png').convert() not work with every OS? I'm using Windows and don't have experience with other OSs.
learnpython,3d6zqx,dunkler_wanderer,2,Tue Jul 14 20:18:45 2015 UTC,"I'm in the same boat (no OS experience outside of Windows) so I can't really say for sure, but from what I understand there are actually different versions of the os.path module for each OS due to the differences in how they handle paths so I figure better safe than sorry."
learnpython,3d6zqx,iminurnamez,1 point,Tue Jul 14 21:30:04 2015 UTC,If your image is in the same directory as your .py file with which you start the game.  image = pygame.image.load('my_image.png').convert() # or convert_alpha()   If your image is in a sub-directory called 'graphics'.  image = pygame.image.load('graphics/my_image.png').convert()
learnpython,3d57s1,fannypackpython,3,Mon Jul 13 16:53:48 2015 UTC,"Looks good. Your URL is could be a lot shorter:  URL = ""http://forecast.weather.gov/MapClick.php?lat=24.561592393874946&lon=-81.7721791659349""   The \ts are tab characters, which are a type of whitespace. To strip whitespace, use the strip() method:  curSummary = [x.strip() for x in curSummary if x != '']   And to be nitpicky, your imports should be on separate lines.  Edit: Your next improvement could be to use the API, which makes your program faster and eases the load on weather.gov's servers."
learnpython,3d57s1,novel_yet_trivial,1 point,Mon Jul 13 17:20:16 2015 UTC,"Awesome, thank you. It looks much better."
learnpython,3d57s1,campenr,1 point,Mon Jul 13 17:31:29 2015 UTC,"I'll definitely read through it and try and re write the script using their API. I have a quick question.   curSummary = [x.strip() for x in curSummary if x != '']   I know what that does, but I don't know how it does it. Could you explain that?"
learnpython,3d57s1,novel_yet_trivial,2,Tue Jul 14 01:58:26 2015 UTC,"From the documentation it is ""a concise way to create lists"". Really it's just a normal for loop in an easy to read format, although if you are creating a new list with the same name as a list you are iterating over I believe the list comprehension has the advantage of iterating over a copy of the original list. You're code is easier to read than:  new_list = [] for x in curSummary:     if x != """":         new_list.append(x.strip()) curSummary = new_list"
learnpython,3d57s1,Covered_in_bees_,2,Tue Jul 14 14:23:12 2015 UTC,"To add to what /u/campenr said, your elemDet[0].getText() method returns a list of strings. Every string has a strip() method, which removes whitespace (tabs, spaces, newlines, and carriage returns) from both sides of the string (but not the middle).  >>> ""   \t\n   This has whitespace on the ends and the middle \n\r   "".strip() 'This has whitespace on the ends and the middle'   What I did is call the strip() method on every string in the list. Strings without whitespace on the ends are returned unchanged."
learnpython,3d57s1,novel_yet_trivial,2,Tue Jul 14 15:12:29 2015 UTC,"Looks good. This is a simple enough script so it doesn't really need it, but think about how you would abstract away and encapsulate different pieces going forward. For example parsing could be one method. Displaying could be another. It would be over-engineering for something so simple, but if you decide to extend this and do something more complex, those are things you would want to think about."
learnpython,3d4hgv,MJMarto,1 point,Mon Jul 13 13:24:58 2015 UTC,"I'm going through this course right now as well... I've been able to find all the solutions on the site. What are you having trouble with?  Edit - nevermind... You're quite a bit farther along than I am, so I guess I haven't hit that part of the course yet."
learnpython,3d4hgv,Seventytvvo,2,Mon Jul 13 19:17:28 2015 UTC,"I believe I was fine until problem set 5 or 6. After that, it's kind of a crap shoot. Some of the solutions are correct, some are for entirely different problems.  Also beware when referencing the solutions to the exams. In one case I noted that their 'correct answer' wasn't correct. I believe it was problem 5 of exam 2 or something like that. If you run the code listed in the problem you get a different answer."
learnpython,3d4hgv,Seventytvvo,1 point,Mon Jul 13 20:09:13 2015 UTC,"I'll be sure to keep an eye out for that, thanks. Did you join the study group they have on the OCW website? I've thought about joining that, but haven't needed to ask any questions yet. Just wondering if it was worth while or not."
learnpython,3d4hgv,Seventytvvo,1 point,Mon Jul 13 20:30:07 2015 UTC,"I took a look at that link and asked some questions, but the response rate is not nearly as high as here on the learnpython forum. If you have any questions feel free to message me."
learnpython,3d4hgv,Seventytvvo,1 point,Mon Jul 13 23:48:11 2015 UTC,"Great, thanks. If I were further along, I'd offer to compare work, but you're quite a long way ahead!  Do you have plans for other MOOCs to take after you finish 6.00SC? I think I'm going to do Principles in Computing through Coursera and Programming Foundations in Python through Udacity at the same time.   I'd like to eventually establish a solid-enough foundation to do the Georgia Tech online masters program. I already have a BS in electrical engineering, but my CS/programming is weak - hence the intro classes..."
learnpython,3d6u7v,MJMarto,1 point,Mon Jul 13 23:52:34 2015 UTC,"Looks like you are running over this block:                 if passes == multiple:                     for ind, num in enumerate(indexes):                         indexes[ind] += multiple                         try:                             indexes[ind] <= self.n - 1                         except ValueError as e:                             # print(e)                             break   one too many times, as indexes ends up being [9, 10, 11].  I think you might want to go back to the drawing board on this one.  I really like this tutorial and how it addresses things:  http://norvig.com/sudoku.html  But if you are stuck on the list of list approach, I would still build the groupings up front, so that you can check to make sure the addressing is correct.  Also instead of iterating and ticking off found numbers, try using sets to see if each crossing (columns, rows, or boxes) contains set(range(1,10))."
learnpython,3d6u7v,gengisteve,1 point,Tue Jul 14 01:40:34 2015 UTC,I'm going to second the suggestion of using sets. They're really convenient once you remember which operators perform which set operations.
learnpython,3d6u7v,leeroyhightechnology,1 point,Tue Jul 14 01:47:54 2015 UTC,Thank you! I'll definitely give that tutorial a read.  I have not learned how to use sets yet. Looks like I need to read up.
learnpython,3d6u7u,pythonhelp123,3,Mon Jul 13 23:52:34 2015 UTC,"shouldn't the function accept list as parameter? I don't think it's the user input that they got in mind, given this part negatives([4, 0, -1, -3, 6, -9])  def negatives(listofnumbers):     for num in listofnumbers:         ....   you need to wrap the print in an if that accepts only n < 0"
learnpython,3d6u7u,Vaphell,2,Tue Jul 14 00:05:21 2015 UTC,"An if will help you. Also, input() will return a string which you have to convert first."
learnpython,3d5y0u,Shaggy1135,3,Mon Jul 13 19:56:23 2015 UTC,"Is this feasible with Python?    Absolutely.   Any concerns   You will quickly be in a massive amount of data, and Apple Music may ban you for making too many requests to the website."
learnpython,3d5y0u,novel_yet_trivial,2,Mon Jul 13 20:03:12 2015 UTC,I don't think there's a public Apple Music API yet. But perhaps you could use the Spotify API instead?
learnpython,3d5y0u,hw_t_dstr_ngls,1 point,Mon Jul 13 20:10:59 2015 UTC,"Well, thank you for pointing me to the Spotify API! Turns out they've already done my project in beautiful fashion actually.  https://artistexplorer.spotify.com/"
learnpython,3d6ruu,chickmagnet3,1 point,Mon Jul 13 23:34:02 2015 UTC,"Looks like you're attempting to call a function from within a string.  It would be easier to first format the whole string with the timestamp:  Welcome_Message = """""" /                                  \\ {} |   Garry's Mod Loader initialized   | \                                  / """""".format(time.strftime(""|      %d/%m/%Y     %H:%M:%S       |""))   And then print each line centered:  for line in Welcome_Message.split('\n'):     print line.center(80)"
learnpython,3d6ruu,hw_t_dstr_ngls,1 point,Tue Jul 14 00:06:22 2015 UTC,"Okay thanks! But the newline at the end of each line? How Would I get rid of that? It looks like this:         /                                  \        |      14/07/2015     00:19:25       |        |   Garry's Mod Loader initialized   |         \                                  /   but should look like this.          /                                  \       |      14/07/2015     00:19:25       |       |   Garry's Mod Loader initialized   |        \                                  /   Thanks!  Edit: I Should mention that I am on windows, if that changes anything."
learnpython,3d6ruu,elbiot,3,Tue Jul 14 00:20:39 2015 UTC,Is your terminal at least 80 characters wide? Look at the built in curses module for better control over what/where you display on the screen.
learnpython,3d6ruu,hw_t_dstr_ngls,2,Tue Jul 14 01:01:30 2015 UTC,"Weird... no newlines here. But if my example still gives you newlines, you could try:  for line in Welcome_message.split('\n'):     print line.center(80).rstrip()"
learnpython,3d6ruu,hw_t_dstr_ngls,2,Tue Jul 14 00:33:36 2015 UTC,Awesome that fixes it.  Thanks!
learnpython,3d6ruu,hw_t_dstr_ngls,1 point,Tue Jul 14 19:55:23 2015 UTC,No problems! :)
learnpython,3d5vuj,pythelp,1 point,Mon Jul 13 19:41:17 2015 UTC,"I've only just begun socket programming and purchased a book on the subject: Foundations of Python Network Programming by Brandon Rhodes/John Goerzen and they have some good info on the subject of multi-threading. I highly encourage you support the authors... but they do have a public github and ch7 has some nice code including a multithreaded server example (srv_threaded.py). Be sure to inspect the zen_utils.py as well, as that's where most of the ""server code"" actually is. https://github.com/brandon-rhodes/fopnp/tree/m/py3/chapter07"
learnpython,3d5vuj,tk421whyarentyouatyo,1 point,Mon Jul 13 20:02:56 2015 UTC,"Thanks, will check it out and hopefully get something out of it."
learnpython,3d6qs1,maxx75,1 point,Mon Jul 13 23:25:51 2015 UTC,"When setting up the remote interpreter and selecting Vagrant, I get the following error in PyCharm:  Can't Get Vagrant Settings: [0;31mThe provider 'virtualbox' that was requested to back the machine 'default' is reporting that it isn't usable on this system. The reason is shown bellow: Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed. Vagrant uses the VBoxManage binary that ships with VirtualBox, and requires this to be available on the PATH. If VirtualBox is installed, please find the VBoxManage binary and add it to the PATH environment variable.[0m"
learnpython,3d6qex,Mluka,2,Mon Jul 13 23:22:53 2015 UTC,"screenshots are borderline useless, as one cannot copypaste and test to confirm the problem/play with the code. Pastebin or github or whatever would be nice. We get to see 47% of the code and the top part is kind of relevant as the context of the for loop is there (is it inside of function? class? some loop or conditional?)  that said, you shouldn't create lists inside loops if you want to preserve them. If the loop runs 0 times you got no list and if that's not the case, each iteration creates it from scratch with a blank slate. Also use list.append(elem) or list.extend(sequence_of_elems) to add to the list instead of +="
learnpython,3d6qex,Vaphell,2,Mon Jul 13 23:56:10 2015 UTC,"So generally you want to have a script set up like so:  def func1():     return result_func1  def func2():     return result_func2  def main():     print func1()  # prints result_func1     print func2()  # prints result_func2  if __name__ == ""__main__"":     main()     You generally don't want to be doing a ton of stuff under  if __name__ == ""__main__"". You want to use this space to establish what executes (if anything) when the module is imported vs what executes when you run the module from a command line, say.   The actual problem, so far as I can see from the screen shot, is that you're returning e_results, but it's not in a function. If it is in a function, I can't tell if you're actually calling it under the if __name__ == '__main__' line.   Try and redo the module in the format that I showed above where you define functions and establish a main() function that will execute your entire program, then call main() under the if __name__ == ""__main__"" line."
learnpython,3d6qex,uhkhu,1 point,Mon Jul 13 23:57:41 2015 UTC,"here's a simple test scenario for your to run  create 2 modules in the same folder  module1.py  module2.py  in module1.py:  def print_me():     print 'me'  you = 'you' print you  if __name__ == ""__main__"":     you = 'me'     print you     print_me()   in module2.py:   import module1  now open a command window in the folder and run:  > python module1.py me me   and  > python module2.py you   So what you can see is that anything under the if __name__ == ""__main__"": line is executed when the module was run directly (meaning __name__ is __main__ in python), but it's not executed if the module was imported."
learnpython,3d6og1,Tuganazy,1 point,Mon Jul 13 23:07:44 2015 UTC,"datetime.datetime.strptime(date_str, format_str) parses time from string to create a datetime object.  >>> a = '2015/07/18 18:00:00' >>> x = datetime.datetime.strptime(a, '%Y/%m/%d %H:%M:%S') >>> x.strftime('%a, %H:%M') 'Sat, 18:00'"
learnpython,3d6og1,Vaphell,1 point,Tue Jul 14 00:16:47 2015 UTC,use the strptime method in either time or datetime modules  https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior  https://docs.python.org/2/library/time.html
learnpython,3d6nzy,I_do_not_know_me,2,Mon Jul 13 23:04:13 2015 UTC,"SQLite has no date or time types. I would probably store as an INTEGER timestamp (retrieve with fromutctimestamp and, assuming you have a UTC datetime, store as timestamp."
learnpython,3d6nzy,raylu,1 point,Mon Jul 13 23:15:15 2015 UTC,"Huh. Well, hell. I guess that I kind of was doing it in the right way. I'll just clean that up a little. Thanks."
learnpython,3d58y4,bigdog927,1 point,Mon Jul 13 17:02:18 2015 UTC,"I'm looking for a solid text, not one designed for classroom settings, that I can use to get the basics of python. I've looked at the Head First books which seem to be written for people like me, but the python edition was written in 2005. Is there anything that is more up to date that will help me get the wheels turning in a hands on, interactive sort of style? Thanks."
learnpython,3d58y4,Busby10,2,Mon Jul 13 19:04:07 2015 UTC,"I've been working through Learn Python the Hard way and really enjoying it, though there seems to be a lot of people that don't. There is a good list in the sidebar of /r/Python"
learnpython,3d58y4,dan_RA_,1 point,Mon Jul 13 21:37:44 2015 UTC,"Ditto for me with Learn Python the Hard Way.  Been working slowly in my limited free time for a few months.  As an absolute programming beginner, I've found it pretty useful."
learnpython,3d58y4,jkudria,2,Mon Jul 13 22:40:51 2015 UTC,"Think Like a Computer Scientist teaches you, well, how to think like a computer scientist, very good Python, and is quite interactive online. I've taken to recommending it over anything else. Very well written book."
learnpython,3d58y4,shadowonthewind,1 point,Mon Jul 13 22:05:34 2015 UTC,"Hi guys, is there an IDE or something that can help me find errors in my python script, eg. while loop not terminating, or I'm trying to pull an element beyond the end of a list, that sort of thing? I think it would really speed up my learning process. Would be really helpful if it could show me how the variables change through each step of my script."
learnpython,3d58y4,Busby10,4,Mon Jul 13 20:08:36 2015 UTC,"Don't really have any advice about an IDE, but a good way to keep track of what variables are doing while you are troubleshooting is to just add print statements wherever you need to check, like in a loop you could print the variable at the start and finish of each loop through so you can make sure it is doing what you think it is."
learnpython,3d58y4,kurashu89,1 point,Mon Jul 13 21:34:00 2015 UTC,if DEBUG: print(some_var)   Is a way of life.
learnpython,3d58y4,elbiot,1 point,Tue Jul 14 10:39:01 2015 UTC,"I'm a fan of  #print(somevar)   or better:  #print(""somevar is: "",somevar)"
learnpython,3d58y4,Scien,1 point,Tue Jul 14 16:26:17 2015 UTC,Dumb question but what does the octothorp do in this case.  It's just a commented out debug right?
learnpython,3d58y4,elbiot,1 point,Wed Jul 15 02:46:18 2015 UTC,"Yes. More granular than if DEBUG, and easy to navigate with searching for #pr vs pr.  But logging is really the way to go for anything involved."
learnpython,3d58y4,aqua_scummm,2,Wed Jul 15 02:54:06 2015 UTC,"I haven't found one I like, but a lot of people swear by PyCharm.  If you're new to coding, it's worth it to start learning about using a debugger early.  Python has a built in one - pdb - but it doesn't have a fancy interface or anything.  A debugger will run your code, and you can have it execute one instruction at a time, run up through a certain point and pause, or run and pause anywhere, and inspect/modify variables while your code is still be executed."
learnpython,3d58y4,shadowonthewind,2,Tue Jul 14 07:48:22 2015 UTC,Ah debugger. So that's what it's for. I had this idea that a debugger automatically amended code. Messing with it right now. Thx!
learnpython,3d58y4,mkdz,1 point,Tue Jul 14 09:36:23 2015 UTC,I would highly recommend learning how to use a debugger. A lot of IDEs have a debugger integrated and offer a few tools that make debugging a lot easier too. My favorite IDE is PyCharm.
learnpython,3d58y4,TeamTuck,1 point,Tue Jul 14 15:45:46 2015 UTC,"Posted this earlier today, but wanted to bump here (sorry if it's not allowed).  Please check it out if you know anything about Selenium!  Clock In/Out"
learnpython,3d6l51,piincce,2,Mon Jul 13 22:42:19 2015 UTC,"You're looking for an IDE (Integrated Development Environment). Here are some options.  A lot of folks seem to like IDLE or PyCharm, so you might start with one of those."
learnpython,3d6l51,JustTurrble,1 point,Mon Jul 13 22:43:55 2015 UTC,Awesome! Thanks for the quick reply. Is the terminal (output window) also in the IDE or do I have to download that aswell? edit: Is pycharm beginner friendly?
learnpython,3d6l51,JustTurrble,1 point,Mon Jul 13 22:53:55 2015 UTC,"Can't say, personally. I write my code in Notepad++ and run it through servers first, though while testing I usually open a shell program and write the snippets in line by line.  I encourage you to do some reading on those IDEs yourself, or possibly someone else can give a recommendation. I don't use them: I just know they exist and are popular. :)"
learnpython,3d6l51,dunkler_wanderer,1 point,Mon Jul 13 23:07:12 2015 UTC,"I think PyCharm is rather overwhelming for beginners, but it's a pretty cool IDE. If you just want to get started quickly and check out stuff in the shell/REPL then use IDLE. I'd also recommend downloading the IdleX extensions for IDLE (just unzip and run idlex.py). Unfortunately, the IdleX project is inactive atm and the IPython extension doesn't work with the newest IPython version. And check out how IDLE's debugger works."
learnpython,3d6l51,galudwig,2,Tue Jul 14 00:18:53 2015 UTC,"If you're on Linux or mac, it's probably easiest to start out with sublime, vim or emacs. Just edit files and run with python (and if you put a shebang at the top and make your scripts executable you can just run them directly). On Windows, IDLE will have what you're looking for early on.   A full IDE is great but most of them cost money and would just be unnecessarily complex for a beginner I'd say."
learnpython,3d6l51,Wrathofvulk,1 point,Mon Jul 13 23:45:04 2015 UTC,Your best bet is to use sublime + terminal. It's the simplest setup (apart from using vim/emacs) and gets you familiar with the command line.
learnpython,3d6ic8,warriortux,1 point,Mon Jul 13 22:20:41 2015 UTC,I don't see any pickle in here.  What is the error?  (Post it!)
learnpython,3d6ic8,elbiot,1 point,Tue Jul 14 03:17:34 2015 UTC,Python uses Pickle to pass objects to the child processes. Here is the error:  _pickle.PicklingError: Can't pickle <function MultiProc.handler at 0x7ffb93bc7840>: attribute lookup handler on __main__ failed
learnpython,3d6ic8,elbiot,2,Tue Jul 14 03:58:09 2015 UTC,"Hmm, seems relevant: http://stackoverflow.com/questions/21113398/pickling-static-method-python (can't pickle static methods)"
learnpython,3d5lvg,Nonamenewname,3,Mon Jul 13 18:31:51 2015 UTC,"^ is not ""raise to the power of"". You need **."
learnpython,3d5lvg,novel_yet_trivial,2,Mon Jul 13 18:34:29 2015 UTC,"Use the fractionsmodule:  from fractions import Fraction  i = Fraction(1, 2) n = 2  while i < 2:     print float(i), i, n     i = i + Fraction(1, n)     n = 2 * n"
learnpython,3d5lvg,diesch,1 point,Mon Jul 13 18:49:58 2015 UTC,this works:   i = 0.5 n = 0.5 print i  while i < 2:      i = i + n/2     n=n/2      print i
learnpython,3d2yc2,keraneuology,12,Mon Jul 13 02:41:35 2015 UTC,"It is not a good idea to mutate a list while iterating over it, as you are doing in the following code:  if State in StateList:     print State, ""removed""     StateList.remove(State)     StateRemoved += 1   I'm thinking using sets might work really well here.  You could build up a set of all the visited states then compare to your state set.  If you like I can provide an example.  Most people like to use the requests library over urllib.  If you have an example url I can post an example.  import os  import requests  url = os.path.join('http://callook.info/', 'w1aw', 'json') r = requests.get(url) json_data = r.json()   I usually like to use os.path.join() to build url's to make sure all the slashes are correct.  urllookup = os.path.join(""http://callook.info/"", call, ""json"")   EDIT - I posted some corrections assuming you want feedback.  Writing code to automate a task is fun and rewarding.  You script is a great start!  EDIT2 - added requests example"
learnpython,3d2yc2,__skrap__,1 point,Mon Jul 13 03:36:33 2015 UTC,Just be sure any machine you're using this on is linux based otherwise your os.path.join isn't going to work as planned.
learnpython,3d2yc2,ramse,3,Mon Jul 13 11:47:16 2015 UTC,"It does appear they are using windows based on the file path.  The python documentation says os.path.join will use os.sep for the separator.  So on windows use posixpath.  import posixpath posixpath.join('http://callook.info/', 'w1aw', 'json')  # Double check using interpreter on windows >>> import os >>> os.sep"
learnpython,3d2yc2,__skrap__,1 point,Mon Jul 13 12:35:47 2015 UTC,Absolutely want and appreciate feedback.  Why is it not a good idea to mutate a list like that? My thinking was that this was the best way to do it because I was literally eliminating the state from the list - once a state is worked once it is no longer of consequence and will never be referenced again. (Although it occurs to me that I may run into an error of some kind when I have removed every state from the list.)  Until yesterday I had never used a library (they haven't been covered in Coursera through chapter 9 so far) and now I'm hearing about new libraries left and right. Python appears to have a lot of potential.
learnpython,3d2yc2,__skrap__,2,Mon Jul 13 14:13:36 2015 UTC,"You are correct, the way you are changing the list is acceptable.  I initially thought you were looping over the list.  Python does have many packages to use.  Normally you will want to use them when possible as they are usually written very well.  I would still consider using sets.  They are a good fit for the problem and it is a good time to learn them.  You could do it two ways:  # Number 1 from collections import Counter [...] states_worked = [] for line in handle:     [...]     # notice the small 's' for state     state = AddrLine2.split()[1]      states_worked.append(state)  # convert lists to sets for set math worked_set = set(states_worked) state_set = set(StateList) not_worked_set = state_set - worked_set  # This will give you a count for each state worked # so if you contacted 3 people in OH, it will list OH: 3 states_worked_count = Counter(states_worked)  print 'Count of states worked: {}'.format(len(worked_set)) print 'Number of states not worked: {}'.format(len(not_worked_set)) print 'States not worked: {}'.format(' '.join(not_worked_set)) # This might not print pretty print 'Count of states worked: {}'.format(states_worked_count)  # Number 2 - don't get contacts per state count [...] states_worked_set = set() for line in handle:     [...]     # notice the small 's' for state     state = AddrLine2.split()[1]      # because it is a set, no duplicates will occur     states_worked_set.add(state)  # set math not_worked_set = set(StateList) - states_worked_set  print 'Count of states worked: {}'.format(len(states_worked_set)) print 'Number of states not worked: {}'.format(len(not_worked_set)) print 'States not worked: {}'.format(' '.join(not_worked_set))"
learnpython,3d2yc2,timworx,2,Mon Jul 13 17:25:54 2015 UTC,"I'm not sure why it isn't good to mutate a list,  I'd like to learn that as well. However, FWIW,  removing it requires it to look through the last anyways,  so it is still O(n) for the removal.   Using sets are good because they're hash tables so the lookup is faster. Since it's a hash (which pints to a lovation) there can only be one of each item,  making it fitting for a state list.   Also,  i didn't know about requests for my first script that accessed a url and did the same as you.  requests is awesome.  Use it so you learn it."
learnpython,3d2yc2,__skrap__,1 point,Mon Jul 13 17:28:02 2015 UTC,That was my fault about mutating a list.  It is common to see code like the following:  for item in your_list:     your_list.remove(item)   which will cause unexpected results as the list is changing while be iterated over.
learnpython,3d2yc2,timworx,1 point,Mon Jul 13 18:03:50 2015 UTC,"I've never tried it, so I just tested it to see what happened. The results make sense:  With a list of l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  If we iterate over it and print + remove the item like so:  for i in l:     print(i)     l.remove(i)   We get:  0 2 4 6 8   Why? It's simple, as we iterate through we're getting the item at i+1 ( i for iteration) next.   So, the first iteration is l[0] , which is 0.  The thing is, we've also just removed 0, making our list now [1, 2, 3, 4, 5, 6, 7, 8, 9]  So when it steps through the list to the next item to access it via index of 1, the result is 2 instead of 1."
learnpython,3d2yc2,__skrap__,1 point,Mon Jul 13 20:30:18 2015 UTC,"You are working with a small list that has no conditionals.  Try actually processing data with a larger list of random data  import random  def remove_evens(numbers):     for number in numbers:         if number % 2 == 0:             numbers.remove(number)     return numbers  def evens_in_list(numbers):     return any(n for n in numbers if n % 2 == 0)  # let's remove only the even numbers in the list: numbers = range(1, 11) * 10 odds = remove_evens(numbers) print evens_in_list(odds) # False # everything works as expected  # now let's remove only the even numbers from a list of random numbers random_numbers = [random.randint(1, 10) for _ in range(100)] random_odds = remove_evens(random_numbers) print evens_in_list(random_odds) # True # Hmm doesn't seem to work correctly now   When you know what data is in the list, and know what to expect it 'might' give you expected results.  Working with actual data most likely will provide unexpected/incorrect results.  I'm sure if one studied iterators and the internal workings of Python it could provide reliable results - but I would avoid it unless you are expecting those unexpected results."
learnpython,3d2yc2,headyyeti,1 point,Mon Jul 13 21:57:34 2015 UTC,Could you not just iterate over a slice of StateList?
learnpython,3d2yc2,__skrap__,1 point,Sun Jul 19 04:55:46 2015 UTC,"Yes - A slice will return a shallow copy.  L = [1, 2, 3] L_copy = L[:] >>> L_copy [0, 1, 2] >>> L_copy.append(3) >>> L_copy [0, 1, 2, 3] >>> L [0, 1, 2]   You can also create a new list, which is what I would use.  L = [0, 1, 2] L_copy = list(L) # would result in the same output as just above. for element in list(L):  # would also work - L[:]     # the following would remove every element from L      # with no surprises     L.remove(element)"
learnpython,3d2yc2,seducer4real,2,Mon Jul 20 18:51:24 2015 UTC,Your first Python script? Thats impressive.
learnpython,3d2yc2,blackrat47,2,Mon Jul 13 12:09:19 2015 UTC,"Looks good! Very minor points: it's a good idea to A) use the current and future version of the language, Python 3, and B) use PEP8 code conventions. That's only very minor things like making sure there's a line break in your if ...: continue, and making your variable names snake_case rather than UpperCamelCase.  Another thing which doesn't really make any difference to your script here but you might find useful later, is to use string formatting rather than string addition:  urllookup = ""http://callook.info/"" + call + ""/json"" # could be url_lookup =""http://callook.info/{}/json"".format(call)   And (even more minor) to bear in mind that you don't need to bother with adding the strings in print statements:  print ""Count of states worked:"", StateRemoved"
learnpython,3d50do,boyled,3,Mon Jul 13 16:00:08 2015 UTC,Wouldn't it be easier to install the drive desktop application and sync the files directly? Just mentioning it in case you forgot/didn't know this.
learnpython,3d4zsx,TeamTuck,1 point,Mon Jul 13 15:55:44 2015 UTC,"Hm, I just started using Selenium this week, but I don't think you want it to pick up and click the img tag, you want it to identify and click the anchor tag.  Unfortunately it doesn't have an ID, or even class, so having it identify the right a tag might be hard."
learnpython,3d4zsx,aqua_scummm,1 point,Tue Jul 14 07:51:57 2015 UTC,"Thanks for the reply.  I've tried by xpath, tags, etc, and I can't read anything on this webpage.  Not sure what I'm doing wrong.  I've even tried to pull all a tags from the page and print them out to the console.  It's a no go.    Any other ideas?  EDIT:  Tried another script to pull all href links from CNN.com, still doesn't work.  Is Selenium busted?"
learnpython,3d4qtg,dr_everlong,1 point,Mon Jul 13 14:46:31 2015 UTC,You want to distribute and have it work on machines that don't have Python installed? If so look at cx-freeze or py2exe.
learnpython,3d4qtg,Tomarse,1 point,Mon Jul 13 15:44:24 2015 UTC,"No, sorry if i didn't convey what i want to do properly.   I want to use it on machines that have some python distribution installed, like conda, and be able to load the module from other scripts. I guess I want to create a setup file for it, but what confuses me is that the module will need the dll file installed along with it in the same folder as the py file."
learnpython,3d64nj,montecarlo1,1 point,Mon Jul 13 20:41:52 2015 UTC,"reservationId on line 35 is not a function: it is an integer object.  When you then try to call it in the last line as reservationId(num), Python doesn't know what to do with it.  Try simply print reservation1.reservationId  Also, do not use the name id by itself: you will be overwriting a built-in function, id    EDIT: I see the issue now. Your init method is named incorrectly: you've written ___init___ within the Reservation class with 3 underscores, when it should be __init__ with 2."
learnpython,3d64nj,JustTurrble,1 point,Mon Jul 13 20:45:01 2015 UTC,I still error out on the reservation1.flightData.fightnum  object call
learnpython,3d64nj,JustTurrble,1 point,Mon Jul 13 20:48:29 2015 UTC,"See my edit, please."
learnpython,3d64nj,JustTurrble,1 point,Mon Jul 13 20:49:46 2015 UTC,"Thanks!! I can't believe it was something that simple. But then again, i fixed the reservationiD issue as well.  Thanks!"
learnpython,3d64nj,JustTurrble,1 point,Mon Jul 13 20:53:52 2015 UTC,"No problem. Fun fact: these methods with two underscores are called ""dunders"", meaning ""double underscore"". Keep that in mind when you write them in the future: refer to this as ""dunder init"" and you can't go wrong."
learnpython,3d64nj,JustTurrble,1 point,Mon Jul 13 20:55:23 2015 UTC,hahaha DUNDER it is.
learnpython,3d64nj,zahlman,1 point,Mon Jul 13 20:58:20 2015 UTC,"Further, you should be calling the parent method - Trip's __init__ method - using super on line 7:  super(Flight, self).__init__(departCity,arriveCity,departTime,departDay,arriveTime,arriveDay)"
learnpython,3d628w,RivetSpawn,2,Mon Jul 13 20:25:01 2015 UTC,"For simulations, global constants are very desirable-- but don't do it. It's bad, even for true constants like colors.  Take a moment to learn how to use namedtuples, and store all your constants in them.   Instead of BLUE in your code, you can have c.BLUE, where c can be passed around."
learnpython,3d628w,loveandkindness,2,Mon Jul 13 21:29:16 2015 UTC,"Very cool.  Some general points:    I don't love the name Object because it is too close to object, which is a built-in  your use of class variables is fine, but reference by self.variable, not object.variable.  The idea being that you can subclass them out and change them, making them more flexible. Consider using a dictionary to handle the different aging states.  Make it a class constant.  Then you can subclass with just a different dictionary and get all new behavior.  I would make new functions for change_angle/change_speed, and have them apply the boundaries.  Then decide_move becomes simpler. This is the big one:  Object should not be aware of ships.  So your Objects need a container class (or just functions) that are aware of all the ships, while your ships remain ignorant of one another. in object's __init__, try not to use screen as the basis for default, as this gets messy. make a method that combines all the things that you do together, like decide_move, move, bounce, etc.  Then just call that for every tic"
learnpython,3d628w,gengisteve,1 point,Mon Jul 13 22:36:54 2015 UTC,"Thanks for the tips, I'll have a play with them.  I don't understand the big one about Object awareness."
learnpython,3d628w,gengisteve,1 point,Tue Jul 14 02:08:10 2015 UTC,"Fair enough, I could have explained better.  Right now, to function every ship needs to know about every other ship.  It seems sensible enough at first, but after a bit you will find yourself down a rabbit hole where it just falls apart.  A better solution is to have another object that shepherds all the ships and keeps track of them and only  calls upon the ships that actually know one another.  Think about ships steaming across the atlantic in the second world war.  None know about the others until they actually come across one another and start shooting.  So you would have an atlantic class that marshalls the ships, then sends them off to do battle when they bump into one another.  In your program, it might look like this:  from random import randrange from pprint import pprint  class Ship(object):     def __init__(self, x, y, size):         self.x = x         self.y = y         self.size = size      def absorb(self, other):         '''         Absorb self or other, depending on the bigger one         :return: the bigger ship that ate the small one         '''         print('{} has encountered {}'.format(self, other))         small, big = sorted([self,other], key = lambda x:x.size)         print('{} eats {}'.format(big, small))         big.size += small.size         return big      def __repr__(self):         return 'Ship({},{}:{})'.format(self.x, self.y, self.size)  class Board(object):     def __init__(self, size = 5):         self.ships = {}         for i in range(size*3):             s = Ship(randrange(size), randrange(size), randrange(size))             position = (s.x, s.y)             if position in self.ships:                 print('collision at {}'.format(position))                 other = self.ships[position]                 s = s.absorb(other)             self.ships[position] = s  def main():     b = Board()     pprint(b.ships)   if __name__ == '__main__':     main()   As you can see from above, we have removed the dependency of the ship class on the ships variable.  Instead we have created  interfaces that handles when two ships need to interact with one another, above in the absorb method.  let me know if that makes sense."
learnpython,3d61qq,RMSEP,2,Mon Jul 13 20:21:37 2015 UTC,"Here are some notes from a quick read-through.  line #4:     if len(sys.argv) is 4:  Don't use is when comparing numbers like this. Use '=='.  line #11: Good fit for all().  if not all(argCheck):   line #19(and 23): It seems that this assumes that full paths were given at the command line. Is the slave directory inside the master one? You can ensure they are full paths by using os.path.abspath to augment them beforehand.  line #21(and 25): Consider using os.path.splitext() instead.  In general, things are looking very well put together and very Pythonic. Very nice job."
learnpython,3d61qq,Peterotica,1 point,Mon Jul 13 21:14:14 2015 UTC,"Thanks for your comments, highly appreciated. I've incorporated 'm all. To discuss further:    yeah, I'm always struggling with using either == or is. What I gather from your link is that the former means equality of two objects and the latter checks if two references point to the same object. Not 100% sure on the exact meaning of that, but happy to use is for comparing numbers. indeed. I was thinking first to use something like:   if any(argCheck is False):     but I couldn't get that working. I know any is used like that in R, which is where I'm coming from, but it appears slightly different here.    it is indeed assumed that the full path is provided. The slave dirs reside in my case always inside the master dir, but I guess that shouldn't be relevant? In any case, I'm providing full paths to both dirs. Can you elaborate a bit on what os.path.abspath does? Does it fix a corrupt path, or does it append a subdir to its parent dir?  that's a nice method, which I guess is really usefull is the masters and slaves would have their full path in front of the filename. In this case, glob.glob() returns only the filename + extension (this is not intentional btw, just how it worked for me the first try).    Updated code here"
learnpython,3d61qq,Peterotica,2,Tue Jul 14 19:45:10 2015 UTC,"Until you become comfortable with when it should be used, I suggest following the rule of only using is to check when something is None. any() takes a list (or more precisely, an iterable) of values and checks the ""truthiness"" of them. If a truthy value is encountered, then any() returns True. If all of the values are falsey, then it instead returns False. You can play around with it in your REPL:  >>> any([False, True, False]) True >>> any([False, False]) False  os.path.abspath() converts a relative path into an absolute path.  >>> os.path.abspath('../mp3s') '/blah/blah/blah/mp3s'  Here is a difference between your previous method and os.path.splitext(). Sure, you could easily write your own version that does the same thing, but leaning on the os module is a good habit to get into. For instance, your code could be compatible with some operating system that uses some character other than period to denote the extension of a file. Plus, it's one less place to have a silly bug.  >>> 'vacation.20150714.jpg'.split('.') ['vacation', '20150714', 'jpg'] >>> os.path.splitext('vacation.20150714.jpg') ('vacation.20150714', '.jpg')"
learnpython,3d61qq,Peterotica,1 point,Tue Jul 14 22:05:09 2015 UTC,"Thanks, very interesting.   On the third point, how does os.path.abspath() know the dir that should be appended to the front of its argument? In other words, how does it know that /blah/blah/blah/ is the correct partent dir of /mps3? Possibly it appends its argument to the output of os.getcwd()?  On os.path.splitext(), appreciate now that it detaches the file extention regardless of any . in the filename, or indeed, whatever char is used to seperate the filename and extension."
learnpython,3d61qq,terminak,1 point,Wed Jul 15 20:25:34 2015 UTC,"Your intuition is correct, the result of os.path.abspath() depends on the current working directory."
learnpython,3d61qq,terminak,2,Wed Jul 15 23:26:22 2015 UTC,"The standard is to use 4 spaces for indent, not 2 Look into the argparse module for processing the command line. Before you know it, you'll need --yes or --move-to <dir> or whatever, and doing it using sys.argv is a mess. Plus you get neat help messages and such. Just semantic notes that really have no bearing on the program itself:    ""union"" and ""set"" are not descriptive of the two operations (your ""union"" is a set difference and your ""set"" is a set intersection) I would instinctively think of raw files as ""master""  It may not work as you intended on non-Windows systems where the filesystem is case-sensitive. So on Linux or Mac, a file with extension "".JPG"" or "".rw2"" will not be recognized, and ""file1.jpg"" will not match ""File1.RW2"". This will of course require you to decide what to do if both ""File1.jpg"" and ""fiLE1.jpg"" is present and so forth."
learnpython,3d605g,Koaty,1 point,Mon Jul 13 20:11:00 2015 UTC,"I can't see what's wrong by looking at your code snippets, because they are too short. What exactly are you doing?   Something simple like this example should work:  for sprite in platform_list:     sprite.rect.x += shift"
learnpython,3d605g,dunkler_wanderer,2,Mon Jul 13 22:28:59 2015 UTC,"That is EXACTLY what I needed, you are my hero :)"
learnpython,3d605g,dunkler_wanderer,1 point,Mon Jul 13 22:42:47 2015 UTC,"Hehe, you're welcome. :)"
learnpython,3d4xtb,pectvs,2,Mon Jul 13 15:40:50 2015 UTC,"Are you using Anaconda for your local Python/Ipython/Jupyter install? If you are, it will make life a lot easier.  In any case, you don't need to do anything special for Jupyter/Ipython. You should be able to pip install libraries that can be installed via pip. If the libraries can be imported on your default Python installation that you use currently, it should be available for imports via Jupyter.  Edit - Are you doing the edX Intro to Big Data & Scalable Machine Learning course by any chance? In that case, if you are trying to install libraries onto the VM image they provide, it will likely be quite a bit more complex to do."
learnpython,3d4xtb,Covered_in_bees_,1 point,Mon Jul 13 16:33:48 2015 UTC,"Im afraid im in this case. What do you recommend? should i start a fresh installation of jupyter? would i still be able to run it as a server?  edit: I took the big data course but not the ML, so no big deal on uninstalling it for now"
learnpython,3d4xtb,Covered_in_bees_,2,Mon Jul 13 16:43:33 2015 UTC,"It depends on whether you still want PySpark working in Jupyter and are planning on using PySpark along with other libraries, or whether you want to explore non Spark based Big Data/ ML learning.  If you are okay with not having PySpark, you can still keep your Virtual Machine from the course and run it using Vagrant whenever you want to use PySpark and Jupyter. For everything else, you can just download the Anaconda Python distribution from continuum.io. It is really simple to install and will install pretty much all the main numeric/scientific computing libraries by default. It also comes with Jupyter pre-installed and you can then start the Jupyter server from the Anaconda installed shortcut and proceed from there.  Once you have Anaconda installed, you can also install newer libraries (if they aren't included by default) from the command prompt using either conda (preferrable) or using pip.   If you need PySpark in addition to all of this, then it will likely get a lot harder to get working as PySpark setup is not very easy (which is why the course bundled everything in a VM). In that case, I'd recommend going through the Piazza forum for the course (it is read-only now). I remember seeing a couple of posts regarding how to go about adding libraries to the Jupyter install on the Virtual Machine."
learnpython,3d4xe7,vmsmith,3,Mon Jul 13 15:37:46 2015 UTC,"But right now it is jumping out of the subdirectory to the next subdirectory, thereby skipping the rest of the files.   Are you sure? Boiling it down to basics and it behaves like you would expect, and only continues the inner loop. Try this to convince yourself:  for i in range(3):     print 'outer loop', i     for j in range(6):         if j%2:             continue         print 'inner loop', j   Maybe your ""validate_input_file(f)"" returns False for every file after the first False?  Edit: some style notes: if ... continue is redundant, since that's exactly what the if statement is for. Also, using a conditional to check a boolean is silly. Do this instead:  if validate_input_file(f):     do_something(f) else:     append_job_report(some_message)   Also, concatenating file names makes me twitch. Do this instead:  for f in glob.glob(os.path.join(input_data, d, ""*.drc"")):"
learnpython,3d4xe7,novel_yet_trivial,1 point,Mon Jul 13 15:48:59 2015 UTC,"OK. I'm taking on board the comments about using conditionals to check a boolean, and concatenating names. Thank you for that.  But I did just run a few tests in the code, and none of the files (from the same subdirectory) after the invalid file makes it to the validate_input_file() function. They are just not even processed.  I see that the structure of my code looks exactly like the structure of the example you gave, but the outcomes are different."
learnpython,3d4xe7,novel_yet_trivial,1 point,Mon Jul 13 16:25:30 2015 UTC,If you post some complete code that I can test I'll try to see what's going on.
learnpython,3d5of2,Precautionary,1 point,Mon Jul 13 18:50:06 2015 UTC,"You can check if any boolean in a list of booleans is True with the built-in any() function:  if any([False, False, True, False]):     print('yep')   But you do not have a list of booleans. Make sure you have make a list of booleans first."
learnpython,3d5of2,novel_yet_trivial,1 point,Mon Jul 13 18:53:41 2015 UTC,"Theres a few things wrong with your code:   Your list is actually a tuple Your tuple contains strings instead of variables   Once you fix those, read into any(), it will solve your problem"
learnpython,3d5of2,anonymousperson28,1 point,Mon Jul 13 18:55:07 2015 UTC,"Your code isn't doing what the description asks.  You are assigning a tuple of strings to variable, and then checking if that tuple is equal to True, which can never be the case, so that will never print anything.  And moreover, the strings in that tuple have nothing whatsoever to do with the other variables, despite the coincidence of them having the same names (i.e. you aren't checking the values of those other variables.)  The question wants you to write something like this:  if north or south or east or west:     ...   or is used to combine multiple conditions.  And if these variables are already booleans, then there's no need to use ==.  If a variable foo is True, then writing foo == True is meaningless.  That == operator yields a value True or False, but your variable already contained a value True or False if it's a bool, so it's just extra typing."
learnpython,3d5of2,Rhomboid,1 point,Mon Jul 13 18:58:02 2015 UTC,"I understand your first part, but confused about the part after the or part. I changed my code to  north = True south = True east = True west = True  if (north or south or west or north == True):     print('I can escape.')"
learnpython,3d5of2,Rhomboid,1 point,Mon Jul 13 19:02:31 2015 UTC,"Why did you write that instead of what I wrote?  You don't need any == True anywhere.  You want just as I wrote:  if north or south or east or west:     ...   You don't need the parentheses around the condition, and it's not idiomatic to do so."
learnpython,3d5of2,Rhomboid,1 point,Mon Jul 13 19:11:23 2015 UTC,"I wrote == True cause it made sense to me. It didn't make sense to me if I just wrote if north or south etc :   It made sense to me if it is like if this, then that. Can you explain why I dont need == true?"
learnpython,3d5of2,Rhomboid,1 point,Mon Jul 13 19:44:51 2015 UTC,"Putting something in the clause of an if statement inherently tests whether it coerces to true or false.  (In the case where the variable is already a boolean, there is no coercion, so it's literally the same in that case.)  You don't have to do that yourself, it's implicit based on the fact that it's in an if statement.  Additionally, you need to understand that what you wrote is not the same as what I wrote.  If you're being explicit, then what I wrote is equivalent to the following (assuming that these variables are already bools, not in the general case):  if north == True or south == True or east == True or west == True:     ...   Alternatively stated, your version is only explicitly testing north == True, all the others are still being tested implicitly just as in my version."
learnpython,3d5mfl,TanAndBlonde,2,Mon Jul 13 18:36:00 2015 UTC,"If you don't use the uuid namespace in that file, you don't need the import"
learnpython,3d5mfl,terminak,1 point,Mon Jul 13 18:56:00 2015 UTC,"It sounds like your current module looks like this:  import uuid  MyClass(object):     def __init__(self, unique_id):         self.unique_id = unique_id   And your code probably looks like this:  import uuid id_ = str(uuid.uuid4)  my_class = MyClass(id_)   If that's the case, then, correct, you don't need uuid in your module. See how it's never used (which is what pylint is telling you). You would need it in your code that creates the instance of the class, but not in the module itself.  Alternatively, if you want you could change it so that the class can either take in a user specified id, or create one on the fly. If you wanted to do this, it would need the uuid import and would look like this:  import uuid  MyClass(object):     def __init__(self, unique_id=None):         self.unique_id = unique_id or str(uuid.uuid4)"
learnpython,3d5m69,meatb4ll,1 point,Mon Jul 13 18:33:52 2015 UTC,"Yes, you should be able to do what you describe. Just note that the indentation has to be exact, so if your loop body starts as 4 spaces, all statements in that body had better start with an indentation of 4 spaces. If you can't figure it out, please give us the code so we can help."
learnpython,3d5m69,Peterotica,1 point,Mon Jul 13 18:47:03 2015 UTC,"Added the whole loop.  Before that are a couple lines to make sure filenames are correct.  Line 69 is commented out, it was giving a syntax error, as were lines 71/72, 73, 74, and 75 when previous from 69 onwards were commented out."
learnpython,3d5m69,Peterotica,1 point,Mon Jul 13 19:01:25 2015 UTC,"The second line in your big loop is a with statement, but the third line is at the same indentation level.  Edit: Also, there is missing right paren on line 58.  Unrelated, but you don't need to be manually closing csvwrite and csvread. That is what the with statements are doing for you. If you open a file with with, it is automatically closed for you once the with statement's body is finished."
learnpython,3d5m69,Peterotica,1 point,Mon Jul 13 19:11:33 2015 UTC,Whoops.  Copy-paste error.  It's indented in n++.  And thanks for the clarification on with statements.
learnpython,3d5m69,The-Mathematician,1 point,Mon Jul 13 19:43:06 2015 UTC,You check the missing right paren on line 58 as well? Just making sure you didn't miss that one.
learnpython,3d5m69,Ran4,1 point,Mon Jul 13 20:06:52 2015 UTC,"It doesn't look like you're posting the whole loop and what you tried with each loop, but look at this:  for outer in range(1):     print('top of outer loop {}'.format(outer))      for middle in range(1):         print('top of middle loop {}'.format(middle))          for inner in range(1):             print('in inner')          print('bottom of middle loop {}'.format(middle))      print('bottom of outer loop {}'.format(outer))   and play around with the range numbers."
learnpython,3d3cma,tensorstrength,3,Mon Jul 13 04:50:55 2015 UTC,"I thoroughly recommend checking out this http://pythonprogramming.net/dashboard/#tab_flaskbasics and then this http://pythonprogramming.net/dashboard/#tab_practicalflask.  He goes through the entire proccess of getting a virtual server, configuring the stack, getting your HTML, CSS, JS and Python to play nice together.  These are video tutorials with acompanying notes. It's very useful to be able to see everything as it happens but he also does a reasonable job of explaining what each thing means so it's not just black magic..   I went from being utterly stumped at the whole proccess to having a functional webapp based on a simple script I had written in two evenings."
learnpython,3d3cma,DeGaulleSucksCock,2,Mon Jul 13 05:13:00 2015 UTC,I second it. Followed it and got my VPS (DO) and web app working flawlessly.   Highly recommended.
learnpython,3d3cma,pylund,1 point,Mon Jul 13 06:26:17 2015 UTC,Thank you so much! I will most probably go this route!
learnpython,3d3cma,cratervanawesome,3,Mon Jul 13 22:53:00 2015 UTC,Django is a larger framework. For simple things you can use flask.  Google app engine is a nice free way to host some python web apps. As it sounds like you don't know much of the system side of things you may want to stick with that. Otherwise you can look to host on your own Linux server with any wsgi capable web server.
learnpython,3d3cma,helasraizam,1 point,Mon Jul 13 04:54:28 2015 UTC,"I haven't gotten as far as Django and Flask, but if you have LAMP/WAMP installed, getting python on there is as easy as installing/configuring mod_wsgi."
learnpython,3d3cma,Comm4nd0,1 point,Mon Jul 13 10:59:08 2015 UTC,I have some Pro hosting through bluehost.com and i've literally just messaged them asking them if my server is capably of hosting as website that's powered by python and they replied straight away saying YES! so i'm happy with that. That's a good place to start.
learnpython,3d5iye,jamesk93,2,Mon Jul 13 18:11:59 2015 UTC,"Your loop doesn't have any input. It's checking, printing out the message, and then checking again. You need to put a new input at the end of the loop, or something hacky like:  print (""\nMagic Number Game: Guess the number between 1-100 to win!"")  import random  number = random.randint(1,100)  guess = int(input(""Take a guess:"")) tries = 1  while guess != number:     tries += 1     if guess < number:      guess = int(input(""Enter a higher number: ""))     else:      guess = int(input(""Enter a lower number: ""))"
learnpython,3d5iye,rich_toasted_cheese,1 point,Mon Jul 13 18:24:42 2015 UTC,"Thanks very much! Btw, what did you use to submit the code to reddit so it displays on the page rather than as a link so in future, I can use the same?"
learnpython,3d5iye,anonymousperson28,1 point,Mon Jul 13 18:46:34 2015 UTC,"add a newline before your code block, then add four spaces in front of each line of code"
learnpython,3d5iye,RyanTargaryen,1 point,Mon Jul 13 18:57:21 2015 UTC,"Your while loop is never meeting the condition because you aren't getting any input within the loop.   Easy way to fix: within the if statements, instead of     Print(""enter a higher/lower number"")  Try this:     guess = int (input (""enter a higher/lower number""))"
learnpython,3d5iye,smnslwl,1 point,Mon Jul 13 18:25:30 2015 UTC,"The second input statement is outside the while loop block. So the infinite loop occurs because the while loop is checking 'number' against the first 'guess' everytime.  The second input statement needs to occur before the if-else inside the while loop, otherwise the first guess is checked twice.  You could eliminate the first input statement and the subsequent if-else altogether, by setting guess to a dummy value that could never be equal to the number.  Also, import statements are usually placed before the rest of your code."
learnpython,3d5isz,Inmute,2,Mon Jul 13 18:10:54 2015 UTC,That does not happen for me. How are you running this?
learnpython,3d5isz,novel_yet_trivial,1 point,Mon Jul 13 18:22:23 2015 UTC,"Yeah I was just checking and it did it right, I literally spend a lot of time trying to fix it haha.   Im running it in Canopy which is a pretty awesome free software! Thanks for the help, next time I'll run on Terminal first."
learnpython,3d4jsz,warlock1992,2,Mon Jul 13 13:46:56 2015 UTC,"Kivy is a python module, not a separate executable. If you installed it with the package manager, it should be added to your normal python installation, and you can just import kivy in a python shell or script."
learnpython,3d5ckl,shubphotons,2,Mon Jul 13 17:27:45 2015 UTC,Are you having problems with their install tutorial page?
learnpython,3d5a25,Ghopper21,2,Mon Jul 13 17:10:24 2015 UTC,"i am a beginner and use this book, i have found the material useful you can also get access to videos where charles goes through explaining the concepts for free as well as he wants more people to teach python though it seems to focus on python2.7"
learnpython,3d5a25,runicnet,0,Tue Jul 14 01:10:48 2015 UTC,You're an experienced Python programmer and you can't tell whether the book is good or bad?   Here are reviews for a course taught by Charles Severance that uses that book  Amazon reviews says that it's good as well.
learnpython,3d5a25,soqets,2,Mon Jul 13 17:28:19 2015 UTC,"I'm looking for a beginner's point of view, especially with a focus on business data analysis.  P.S. Snark necessary? :-)"
learnpython,3d5a25,soqets,1 point,Mon Jul 13 17:38:54 2015 UTC,"I'm looking for a beginner's point of view  Curious if anyone here has used this book either to learn or teach Python?   If you were looking for a beginner's point of view then why ask someone that used the material to teach? The book has great reviews by beginners so I assume that it's good for beginners.  By the way, it's available for free by the author himself and there's a course for it taught by the author himself"
learnpython,3d53s1,Tuganazy,2,Mon Jul 13 16:24:34 2015 UTC,"Since you asked BeautifulSoup to find all, what you are printing is a list (which happens to contain one element). You can get the first element with find():  schedule = soup.find(""div"", {""class"": ""server_schedule""})   then you can use find_all() to get a list of the ""a"" tags within the subset, and loop over them:  for item in schedule.find_all('a'):     print(item['href'], item.div['data-countdown'])"
learnpython,3d53s1,novel_yet_trivial,1 point,Mon Jul 13 16:48:20 2015 UTC,"tks :)   Now i'm working on trying to get how long until the event, any tips on what module i showld use and what i showld be looking for?"
learnpython,3d53s1,novel_yet_trivial,2,Mon Jul 13 17:30:00 2015 UTC,the datetime module can read text into a time format and returns timedelta objects when you subtract.
learnpython,3d4fx7,elbuckez,2,Mon Jul 13 13:10:04 2015 UTC,"Take a look at this Stackoverflow thread, and the unidecode library: http://stackoverflow.com/questions/816285/where-is-pythons-best-ascii-for-this-unicode-database"
learnpython,3d4fx7,jibbly_jibbly,2,Mon Jul 13 13:26:26 2015 UTC,"Hey. Thanks for the help I used unidecode and it is great, does the job, no issues with that as a solution in principle. My problem now is that if other users run my code from the network, they don't have unidecode installed. Ideally there needs to be a default work-around."
learnpython,3d4fx7,jibbly_jibbly,1 point,Mon Jul 13 15:16:44 2015 UTC,"Wellll, I'd make the case for considering deployment and the user's environments as part of the solution - namely can you contribute requirements to their environments, or host this application as a web app which they can use in their browsers?  I say this, because the odds are good that you'll spend a lot of time re-engingeering the behavior of a library like unidecode, and probably with less satisfactory results. The benefits of using community code are very high, and I doubt you want to turn the maintenance of this tool into a large part of your life."
learnpython,3d4a6o,zylo4747,2,Mon Jul 13 12:11:12 2015 UTC,"I've generally found that if PIP doesn't find the library/module, it's because I've given PIP the wrong name. A quick google search turns up the correct name and then, using the correct name, it works."
learnpython,3d4a6o,redsedit,1 point,Mon Jul 13 12:30:34 2015 UTC,How about something like pygame?
learnpython,3d118t,Elthran,9,Sun Jul 12 17:04:26 2015 UTC,"[1,2,2] has a 33% chance to roll 1, and 66% chance to roll 2.   [1,1,3] has a 66% chance to roll 1, and a 33% chance to roll 3.   If you look at the possible rolls against each other you get:  P1 | P2 1  | 1 1  | 1 1  | 3 2  | 1 2  | 1 2  | 3 2  | 1 2  | 1 2  | 3   The second die can only win on three possible scenarios. The first can win on four. That is an advantage.   In the second pair of dice, the first die has three of six sides which guarantee a tie or better. A massive advantage."
learnpython,3d118t,C0rinthian,3,Sun Jul 12 17:26:06 2015 UTC,Thank you!
learnpython,3d118t,goodyguts,3,Sun Jul 12 18:34:51 2015 UTC,"This is more maths and probability    die1 = [1, 2, 2] die2 = [1, 1, 3]   3 has a chance of 1 of winning (i.e: 100%). There is a 1/3 chance of it being chosen.  2 has a chance of 2/3 of beating die2. There is a 2/3 chance of it being chosen.  1 can be ignored as it has no effect (due to replays)  Therefore:  chanceDie1 = 2/3(chance chosen)*2/3(chance wins) = 0.444444... chanceDie2 = 1*1/3 = 0.333333...     General Formula  For each dice:     Chance of winning = 0     For each number on the dice:         Chance of winning += Probability of choosing the number * Probability the number will win"
learnpython,3d118t,LarryPete,1 point,Sun Jul 12 17:21:10 2015 UTC,Thank you!
learnpython,3d118t,snarledapus,1 point,Sun Jul 12 18:35:02 2015 UTC,"If I understand it correctly: The list [1, 2, 2] represents a 3-sided die, with those numbers. If you throw it, you have a 2/3 chance of getting a 2, and the opponent has a 2/3 chance of throwing a 1. Which makes you more likely to win (probably? I don't know the math behind that).  The other one has a 50% chance of getting a high number (7 or 8) and the other one has a 5/6 chance of getting a lower number than your 7 or 8."
learnpython,3d3oej,kulrajwashere,7,Mon Jul 13 07:08:31 2015 UTC,I believe set() doesn't preserve the order of whatever's fed into it.
learnpython,3d3oej,thurask,1 point,Mon Jul 13 07:14:54 2015 UTC,"ahhh, thank you for the help!"
learnpython,3d3oej,EsperSpirit,4,Mon Jul 13 15:54:21 2015 UTC,"Pastebin mirror of OP's script  OP, you should probably also tell us, what your functions tries to accomplish."
learnpython,3d3oej,EsperSpirit,2,Mon Jul 13 10:39:52 2015 UTC,"Thank you, will Pastebin and explain next time"
learnpython,3d3oej,werpoi,2,Mon Jul 13 15:54:45 2015 UTC,Even better: Create a github account and use https://gist.github.com/
learnpython,3d3oej,JustTurrble,3,Mon Jul 13 17:36:45 2015 UTC,"If you are asking why the ""not equal"" sometimes prints and sometimes doesn't, as /u/thurask stated, sets don't preserve order. So when you create new_orig, sometimes it will be ['1', '2'] and sometimes it will be ['2', '1']. If it is the later, the ""not equal"" will print."
learnpython,3d3oej,JustTurrble,1 point,Mon Jul 13 14:10:14 2015 UTC,THanks for the help!
learnpython,3d3oej,JustTurrble,2,Mon Jul 13 15:54:55 2015 UTC,"Just want to point out this segment of code:  c = 0 ... for ele in new_orig: #check     if not(new_orig[c] == new[c]):         #print (new_orig[c])         #print (new[c])         print (""not equal"")         regular = False     c +=1   This is an odd usage, since you're looping through new_orig using ele as the element, but then ignoring it to use c, which refers to the index of both lists.  This can be replaced with the built-in function enumerate, which goes through an iterable producing both its index and the value at that same position:  for idx, elem in enumerate(new_orig):     if not(elem == new[idx]): # elem and new_orig[idx] are the same value         print (""not equal"")         regular = False   I see you use c later in the function, but at that point you expect that c is equal to the length of new_orig, anyway. Plus, you're directly referencing an index of new without knowing that it will exist, which can potentially (though unlikely in this context) throw an IndexError.    if new == []: is dubious: what you want is to check if it's an empty list, but you can simply test the list itself, since an empty list evaluates False. This can be just if not new:, and the following statement can be if not new_orig:.  Same for boolean values: if regular == False: reads better as if not regular:, and if sec_check == False: is better as if not sec_check:    Beyond that, I can't really see what the purpose of this function is. There's a lot going on that's just confusing:   del_pics is initialized and never used Extraneous parentheses are all over the place: (len(new_orig) could just be len(new_orig), (list()) could just be list(), return (orig_new) can be return orig_new, and so on. There are print statements in the function, and the function itself is called within a print statement. I wonder, which is it you want to use?     All that said, can you say the purpose of this code? It'd be easier to see how to go about with suggestions if we knew your intended output.  EDIT: grammar fixes."
learnpython,3d3477,ascottishnoobie,3,Mon Jul 13 03:32:53 2015 UTC,"Since this is for an assignment I'll give some hints.  In Python if you want to create a mapping of data you can use a dict.  Alternatively, if you want to use two lists you could consider zip.  zip - https://docs.python.org/3/library/functions.html#zip  dict - https://docs.python.org/3/library/stdtypes.html#mapping-types-dict  EDIT - nested loop explanation - the nested loop is working as it should.  You will be looking at the first element of name, then every element of age.  When the age loop finishes the next element of name will be assigned to i.  Then it will iterate over each element of age again.  So basically, you will iterate over every element in age, for each element of name.  Also, as typed your for loop probably will not work.  You can think of a for loop as 'for each element of list'.  # how to write a for loop for a list of names called name_list for name in name_list:     print(name)  # use range when you need numbers, or a number of times for number in range(10):     print(number)  # In Python 2 range will return a list of numbers >>> range(5) [0, 1, 2, 3, 4] # In Python 3 to get a list >>> list(range(5)) [0, 1, 2, 3, 4]   Not trying to be to nit-picky but your while loop as typed will go forever as you never increment num."
learnpython,3d3477,__skrap__,1 point,Mon Jul 13 03:54:08 2015 UTC,"You don't have to use a nested loop to do this. Essentially what a nested loop does is something like this: a = [1,2,3] b = [a,b,c]  for i in range(len(a)):       for j in range(len(b)):           print a[i]+b[j]  The output would be:  1a 1b 1c 2a 2b 2c 3a 3b 3c  This means that for every element in list a, you will run another loop for every element of list b.   However, since both of your lists are the same length, you can just loop through the indexes of one of the lists and print the element of each list at that index. When you use a nested loop, you are doing a loop inside of a loop: for every element in name, you loop through every element in age. But you only want to loop through each list once, so you should just use one loop.  Also, a couple of quick notes: You aren't incrementing num, so the while loop will be an infinite loop, and to write the loop for the print, you'll be using the indexes of the lists instead of the elements themselves, which is why my example below has name[i] and age[i].  def main():   name = []  age = []  num = 1  while (num<4):       newname = input(""Enter name:"" )       name.append(newname)       newage = input(""Enter age: "")       age.append(newage)       num += 1  for i in range (len(name)):       print(name[i], ""\t"", age[i])   main()  (This may not be formatted correctly, since I'm on mobile, sorry!)  Good luck on your assignment!"
learnpython,3d3477,kachingfire,1 point,Mon Jul 13 03:54:15 2015 UTC,"Try to avoid using range(len()). Instead, use enumerate():  for index, value in enumerate(names):     print(value, ""\t"", ages[index])"
learnpython,3d3477,JustTurrble,1 point,Mon Jul 13 17:26:02 2015 UTC,"or zip  for name, age in zip(names,ages):     print(name,""\t"",age)"
learnpython,3d3477,elbiot,1 point,Mon Jul 13 18:10:14 2015 UTC,"Indeed, zip works better in this context. Just posting reactions to the pervasive range(len()) thing."
learnpython,3d3477,JustTurrble,2,Mon Jul 13 18:19:32 2015 UTC,"Yep.  I think zip speaks to the same idea though: explicit is better than implicit and more specifically, don't phutz with list indices in a loop (unless you actually need to)"
learnpython,3d3477,elbiot,0,Mon Jul 13 18:36:34 2015 UTC,"You don't need a nested loop. You could just use a dictionary, or if you really want to use a for loop:  for i in range(len(name)):     print(name[i], age[i])"
learnpython,3d3477,olyko20,2,Mon Jul 13 04:08:54 2015 UTC,"Try to avoid using range(len()). Instead, use enumerate():  for index, value in enumerate(name):     print(value, age[index])"
learnpython,3d3477,JustTurrble,1 point,Mon Jul 13 17:26:55 2015 UTC,"Interesting, I wasn't aware of that function (kind of a newbie myself.) Why should I avoid using range(len(var))?"
learnpython,3d3477,olyko20,2,Mon Jul 13 17:33:05 2015 UTC,"range(len()) is hacking two functions together for an unintended functionality: you're making a range for a number which is the length of a sequence, and then iterating through that range. Whereas enumerate() will (wait for it :) ) enumerate the sequence and iterate through that sequence directly.  It's more Pythonic, more useful, easier for others to read, and is slightly faster (though the difference is incredibly miniscule).  EDIT: words."
learnpython,3d1zz1,Fourgot,2,Sun Jul 12 21:48:30 2015 UTC,"Thanks for updating with the solution you found!  I would suggest that you might want to try running your code through a linter, which is a tool that attempts to highlight redundancies and gaps.  import pandas.io.data probably only needs one call ;)"
learnpython,3d1v9z,WHENUBUYMAHPIZZABRAH,4,Sun Jul 12 21:10:22 2015 UTC,Here's everything that I've bookmarked:  projects that can be solved in any language  reddit post containing Python exercises  interactive coding challenges  py4fun  exercism.io  codewars.com  Hopefully they're helpful
learnpython,3d1v9z,soqets,2,Mon Jul 13 01:02:13 2015 UTC,"You can really try to tackle anything with python! If you want some problems on various concepts to practice with, you could try going through some of the homework problems here: http://www.cs.cmu.edu/~112/schedule.html  Usually we have an autograder up, but seeing as you won't have access to it, your best bet to check your answers would be to write a lot of strong test cases - give an input and assert that the result of calling the function on that input is the output that you expect."
learnpython,3d1v9z,Wrathofvulk,2,Sun Jul 12 22:11:03 2015 UTC,this is fairly easy at first then gets a bit more challenging as you go.
learnpython,3d1v9z,Busangod,1 point,Sun Jul 12 23:36:20 2015 UTC,/r/dailyprogrammer  http://www.checkio.org
learnpython,3d1v9z,bobdobbsjr,1 point,Mon Jul 13 07:16:15 2015 UTC,Zed Shaw has just started a new blog/book that looks promising: http://projectsthehardway.com/
learnpython,3d3tb6,TheMajorXIII,1 point,Mon Jul 13 08:17:07 2015 UTC,You may find this interesting
learnpython,3d3tb6,chimichanga9,1 point,Mon Jul 13 08:31:35 2015 UTC,Thank you very much! Exactly what I needed.
learnpython,3d3tb6,Peterotica,1 point,Mon Jul 13 19:12:57 2015 UTC,"Personally, I really enjoy writing code related to computer graphics. It is so satisfying to be able to SEE the result of your work. Try rendering the Mandlebrot set, or check out processing.py."
learnpython,3d3tb6,scrabaddict,1 point,Mon Jul 13 16:48:02 2015 UTC,I will definitely try this. Thank you for your help. :)
learnpython,3d2bl4,pfeifnuts,3,Sun Jul 12 23:23:20 2015 UTC,"You want to do file_list += gather.split() or file_list.extend(gather.split()) rather than file_list.append(gather.split()). The reason is that gather.split() returns a list, so you're adding a list as an element of file_list rather than extending the list with those elements.  >>> a = [] >>> a.append('test1 test2'.split()) >>> a [['test1', 'test2']] >>> a.append('test1 test2'.split()) >>> a [['test1', 'test2'], ['test1', 'test2']]"
learnpython,3d2bl4,leeroyhightechnology,1 point,Sun Jul 12 23:42:02 2015 UTC,"Thank you. That is great knowledge to have. I had tried .extend() previously, but thought I was wrong. Trying .extend() or += now ends me with this error:  IOError: [Errno 2] No such file or directory: 'test'  It seems to have cut the number from test. I created two new files ""testa"" and ""testb"" to try it out. I changed the code to read:  file_list.extend(gather.split())   and  gather = ""testa testb""   It still comes with the same error indicating the last character has been cut off."
learnpython,3d2bl4,leeroyhightechnology,6,Sun Jul 12 23:59:35 2015 UTC,"Yeah, that's what [0:-1] (also abbreviated as [:-1]) means. It means ""this thing from index 0 up to but not including the item at index -1."" And since the -1th index is the last character, you're asking for everything except the last character.  >>> 'hello'[0:-1] 'hell'"
learnpython,3d2bl4,leeroyhightechnology,1 point,Mon Jul 13 00:12:35 2015 UTC,Doh! Thank you. Sometimes it's the simple things that elude me. I really appreciate your help. I've been stuck on that for longer than I'd like to admit.
learnpython,3d2bl4,ElecNinja,2,Mon Jul 13 00:23:22 2015 UTC,"No problem! I get stuck on really simple things all the time—the longer I've been looking at the code, the more likely that is to happen."
learnpython,3d2bl4,Justinsaccount,2,Mon Jul 13 00:33:55 2015 UTC,"Just a tip for general debugging, try to run through the program step by step through an ide like pycharm and watch the variables.  That's usually what causes most problems for me, something wrong happening to a variable"
learnpython,3d38e2,coolbeans1114,7,Mon Jul 13 04:10:10 2015 UTC,"I'm sure someone is thinking of a more well-thought response to your post right now, but I just wanted to let you know that your feelings are completely normal for a beginner and the questions you are asking are GOOD questions.  You are asking the ""right"" kinds of questions and it's a good idea to struggle with them now (and figure them out) as you will run into them over and over again."
learnpython,3d38e2,kevl510,4,Mon Jul 13 04:21:42 2015 UTC,"Anytime a tutorial tells you to download something, you should take it with a grain of salt. Pip is useful, you don't really need XCode, and I'm not sure about the other Homebrew/SetupTools.  Bash is the type of shell you are running in the terminal. It's one of the more common ones, and probably the best one for the point you're at.   PATH is the shell path for a set of locations in your directories where you can use certain applications/commands/programs without specifying the full path.  The terminal is a very useful tool, but can be overwhelming for beginners. It's not really necessary for learning python, but can perform a lot of generally useful computer tasks. You can check out /r/commandline or try to find some other tutorial if you want to learn more about it. One of the better ones I've come across is in the ubuntu documentation here:  https://help.ubuntu.com/community/UsingTheTerminal  I hope I helped you out at least a little! I'm kind of a beginner myself. Good luck."
learnpython,3d38e2,olyko20,3,Mon Jul 13 04:20:21 2015 UTC,"Adding on - you should look at downloading Sublime as a text editor. Think of it as word for your documents - you can use it to edit python files (and other files too).  When you want to run your code, you'll type python into your command line (or python3), followed by the name of your file, if you are in the directory the file is located in. To interact with your code, you can just type python (or python3) into your terminal. Then type execfile(""insertfilenamehere.py""). Then you can call your functions with various input - this is called a REPL.   Homebrew is a package manager, and pip  is a python package manager. Homebrew is a command line application, so you won't see it appear in your applications folder. It lets you install a lot of command line tools that you will need as you grow as a programmer. Pip allows you to install python-specific packages.   Xcode is an apple-made IDE (basically a text editor with some extra perks) generally used for app development. I'd stay away from it, too complicated and completely unnecessary for you."
learnpython,3d38e2,Wrathofvulk,3,Mon Jul 13 07:42:43 2015 UTC,"I'm having the same issues.  I feel like I'm in a foreign country and can't understand what people are saying when they're trying to be helpful and tell me where to go. All I know is I have to immerse myself deeply enough into this culture that I'll eventually be able to order my own dinner without having someone else just pointing at stuff on the menu for me to eat without me knowing what's in the dish. I guess that's a weird analogy, but it's how I feel."
learnpython,3d38e2,dumpster_dinner,3,Mon Jul 13 18:10:59 2015 UTC,relevant user name
learnpython,3d38e2,elbiot,2,Tue Jul 14 03:27:23 2015 UTC,"You should provide relevant information about which Mac/OS/etc you have.  For instance, I have a MacBook Pro with OS X 10.10.4 which includes python 2.7.6.  I installed TextWrangler as a tool for creating simple documents/files which includes creating python code.  Otherwise, I believe your questions have been answered."
learnpython,3d38e2,twisted_spaghetti,2,Mon Jul 13 12:19:59 2015 UTC,I recommend this book to you. Learning Unix for OS X http://shop.oreilly.com/product/0636920025870.do
learnpython,3d38e2,minhavoz,1 point,Mon Jul 13 13:23:57 2015 UTC,"Thank you everyone for the advice and encouragements. It took a while to figure it out but I did end up making a little more sense of things.  This is my 3rd day using a Mac and it take time to figure out how it's directories and folders and stuff are organized.  Regarding Python, I did end up downloading Sublime as /u/Wrathofvulk had suggested. I don't know what it is but a lot of things sort of clicked with Sublime so thank you for the suggestion!   /u/olyko20 I subscribed to /r/commandline and bookmarked the link you provided to look at a little later.   /u/minhavoz thank you for the book suggestion, I bookmarked that as well and will definitely look into it when I have the time."
learnpython,3d32yk,OutOfTine,3,Mon Jul 13 03:22:02 2015 UTC,"str+str+str+str. Use str.format(), eg `'this is {} {} of {}'.format(1, 'line', 'output'). format() is very powerful and allows fo.  you shouldn't use recursion in your menu(). Use a loop to contain the flat code with menu and break out of it if the terminating condition is met, eg  class TodoList:     def menu(self):         while True:             print('menu stuff')             choice = input()             if not choice:                  break             elif ...:                 ....   input() accepts prompt as param, you don't need print(end=' '). choice = input('Enter choice (enter to exit): ') will do just fine."
learnpython,3d32yk,Vaphell,1 point,Mon Jul 13 03:58:07 2015 UTC,"Oh yeah! I totally forgot about format(), that certainly makes my print statements a lot cleaner. And ok, I took out the recursion. It didn't sit well with me but I couldn't quite figure out how to do it otherwise. A loop seems like the obvious choice now lol. Thanks!"
learnpython,3d32yk,aroberge,3,Mon Jul 13 04:10:20 2015 UTC,"You don't need sys.exit() at the end.  On line 63, instead of   if len(self.items) < 1:   I would write  if not self.items:   And, other than what /u/Vaphell noted, I'd say your code looks fine."
learnpython,3d165j,iamdavehawkins,3,Sun Jul 12 17:44:28 2015 UTC,tried CodeEval?
learnpython,3d165j,Chazmer87,1 point,Sun Jul 12 17:49:23 2015 UTC,"Looks cool, thanks! I'll check it out."
learnpython,3d165j,Nodocify,2,Sun Jul 12 20:23:46 2015 UTC,"One of the best ways I have found to evaluate myself is a personal challenge. For example, I challenged myself to build a program that will solve a rubik's cube. I had 4 hours. Google was only allowed for the method of solving the cube but anything related to programming was strictly off limits. I failed the first attempt (at 6 hours i still wasn't finished). Then I gave myself a few months of odd projects to keep myself learning and then I tried again. Got it at 3 hrs 45mins.  Next, I challenged myself to create a command line blackjack game, as if I was sitting at an actual blackjack table. Internet searching was strictly forbidden for anything. The game must support betting, splitting, doubling down, multiple players and multiple decks if the user desires. Again, start to finish in 4 hours. Was pretty proud to have it finished in 2 1/2.  These would show that you not only have the grasp of whatever programming language you are using but that you can think logically through a problem and reach a solution in a timely manner. Which is what employers are looking for more so than just someone who can wright a script in python or java.  As far as online resources go, they are few and far between. Have you looked pythonchallenge.com or Project Euler? Both are sites of programming challenges (what language you use is your decision) that get progressively harder the further in you go."
learnpython,3d165j,Alto_Madness,1 point,Sun Jul 12 20:25:24 2015 UTC,"I really appreciate this response, and agree that personal challenges are a great learning experience. For whatever reason, I have always felt like I needed something deliverable (like a web site, or an open source contribution) or it didn't feel real, but examples like yours are certainly beneficial for learning a language, and I should do more of them.  The thing about this particular online assessment (talentguide.co) was the auto-testing, the in-browser interpreter, the ""classic"" algorithms that were tested for both accuracy and performance. It even offered many different languages as options. I really wish it hadn't been a one-time-only thing!  But back to your suggestion, I know of /r/programmingprompts. Are there any other similar subs or web repositories of ""personal challenges"" like your example? I have played through pythonchallenge.com a bit and just signed into Project Euler. As it is, I have plenty to keep me occupied for a while, but figured I'd ask."
learnpython,3d1ear,the_kernel,1 point,Sun Jul 12 18:51:24 2015 UTC,You appear to be using dictionaries instead of lists? Try using [] instead of {}.
learnpython,3d1ear,Danzi218,7,Sun Jul 12 19:00:23 2015 UTC,"He's using sets not dictionaries, but the sets are the problem because the website tests if goto([], '2') returns 0. If you try [] in {1, 2, 3} you get a TypeError: unhashable type: 'list', because sets are hashtables and lists are not hashable."
learnpython,3d1ear,dunkler_wanderer,2,Sun Jul 12 19:52:41 2015 UTC,"Thanks for your input guys, the function works with lists."
learnpython,3d2h15,pricklywit,1 point,Mon Jul 13 00:10:38 2015 UTC,"There are actually multiple reasonable ways to do this, depending on just how much data you're sorting through it could be done with different approaches, some requiring more thought and programming, some very naive.  Heres a naive version, not tested, yadda yadda -  its not great programming and theres plenty of other ways to come at it, but I wanted to cook something up quick:  You could read in both sets of data, where each line of info could be a simple object like a tuple that puts the timestamp first, the type of data second, and all the remaining info last:  list_of_echos = [ (xxxxx.yyy, ""echo"", a, b, c, d...),   ... ] list_of_gps = [ (xxxxx.yy, ""gps"", z, y, z, j, k....), ... ]   Then you could smack them all into a list and sort it by the timestamps(make sure they are converted to some kind of time object eg datetime), which will interleave the data but get them all really close by time:  list_of_all = list_of_echos list_of_all.extend(list_of_gps) list_of_all.sort(key=lambda x: x[0])   Then you could just walk this new list looking for ""echo"" tuples, then look backwards and forwards from that position for the next 'gps' tuple. Pick the one with the smallest time difference, and blammo:  def search_forwards(inlist, start):     for i in range(start, len(inlist)):         t = inlist[i]         datatype = t[1]         if datatype == 'gps':             return t  def search_backwards(inlist, start):     for i in range(start, -1, -1):         t = inlist[i]         datatype = t[1]         if datatype == 'gps':             return t  for i,t in enumerate(list_of_all):     datatype = t[1]     signaltime = t[0]      if datatype != ""echo"":         continue     previous_gps = search_backwards(list_of_all, i)     next_gps = search_forwards(list_of_all, i)     diffs = ((signaltime - previous_gps[0]), (next_gps[0] - signaltime))     if diffs[0] > diffs[1]:          print ""next_gps is closest time to signal""     elif diffs[1] > diffs[0]:         print ""previous_gps is closest time to signal""     else:         print ""previous and next gps are equidistant to signal""   You can use this as a jumping off point - like I said theres lots of small issues with it from a python and programming standpoint, I dont even attempt to guess what your data actually looks like or to help read it from file (check the 'csv' library in the standard lib). I just wanted to keep it simple to explain the pattern.  If you are dealing with lots of data (100s of thousands, millions of records) then there might be concerns about processing time or memory which require a more nuanced approached to reading and correlating the data - such as maybe loading it all into a database and letting that to the work with some crunchy SQL ? :)"
learnpython,3d2h15,jibbly_jibbly,1 point,Mon Jul 13 00:45:38 2015 UTC,"Here's a basic way to use the python csv module. Assume you have some csv like this:  1436747000,38.995,-22.023 1436747100,38.996,-22.023 1436747200,38.995,-22.023 1436747300,38.995,-22.023 1436747400,38.995,-22.023   And those values represent a timestamp, latitude and longitude...  >>> import csv >>> with open('trackpoints.csv') as file: ...     trackpoints = {int(time): (float(lat), float(long)) for time,lat,long in csv.reader(file)} ...  >>> trackpoints {1436747000: (38.995, -22.023), 1436747200: (38.995, -22.023), 1436747400: (38.995, -22.023), 1436747100: (38.996, -22.023), 1436747300: (38.995, -22.023)}   From here the challenge is simply figuring out how you want your output data to be constructed and how you go about correlating call data to each of these trackpoint data points."
learnpython,3d1dsm,pythonhelp123,5,Sun Jul 12 18:47:12 2015 UTC,"I assume I'm supposed to make a for loop but how should the for loop be?   The instructions laid it out for you, step by step:   Prompt the user. Loop over the phrase the user input, and output each character, one at a time.   (Hint: What will the type of the user's input be? How can you iterate over the characters of such a thing?)   Also I should ask the user to input in the def main() function right? not the display function?   The instructions explicitly told you to do it in the display function:   Implement the function display that takes no parameters. It prompts the user   Here ""it"" refers to ""the function display"". Given that the instructions don't even mention a function named main, I have no idea how you came to that conclusion. (Note that in Python, there is nothing special about a function named ""main"", and no requirement to write one.)"
learnpython,3d1dsm,zahlman,3,Sun Jul 12 18:52:34 2015 UTC,"If I'm understanding this correctly, after the display()  word = input(""Enter a word : "")      for letters in word:      print letter"
learnpython,3d1dsm,Ran4,2,Sun Jul 12 19:10:30 2015 UTC,"Your indentation is off on your second line. Remember that indentation is very important in Python, it's not something you can just ignore. Your code won't work if it's not indented correctly.  Also, you're calling your loop variable letters, but you're trying to print letter. Make sure that they're both called letter. In each iteration of the loop, your loop variable is only going to contain a single letter, right?  By the way, consider using the term character rather than letter. ""0"" isn't a letter, for example. It's a character."
learnpython,3d1p2o,Trove_,2,Sun Jul 12 20:18:41 2015 UTC,Have you checked out the SQLAlchemy documentation?   http://docs.sqlalchemy.org/en/rel_1_0/orm/basic_relationships.html#many-to-many  It gives a pretty good example on how to set up an association table and some of the things you have to keep in mind.
learnpython,3d1dft,saabr,3,Sun Jul 12 18:44:12 2015 UTC,It means what it says. I don't understand what you're confused about. Are there specific words you need defined?
learnpython,3d1dft,zahlman,2,Sun Jul 12 18:53:56 2015 UTC,"Yes, these:  Iterating over a sequence does not implicitly make a copy. The slice notation makes this especially convenient:  How is this relevant in this discussion of loops?  I mean i know it will not make a copy. Did I miss something?"
learnpython,3d1dft,zahlman,3,Sun Jul 12 18:56:28 2015 UTC,"""Iterating"" is looping.  The point is that if you're putting things in (or removing them from) the same list you're iterating over, it will naturally mess up the iteration. How is Python supposed to determine the ""next"" element correctly? (In practice, it maintains a counter internally that it uses to index into the list, stopping when it gets out of bounds. This means that a loop that tries to remove every element it encounters, will in fact only remove every other element.) Making a copy avoids this problem, because you can make the changes to the original, while iterating over the copy.   However, you can still end up struggling to get the code right with this kind of approach. Often the best idea is to write code that will produce a new list from scratch, and then replace the old list with the new one."
learnpython,3d1dft,zahlman,3,Sun Jul 12 19:01:31 2015 UTC,"So in the above we are iterating over a copy and changing the original, is that it?"
learnpython,3d1dft,IAmAmbitious,3,Sun Jul 12 19:07:17 2015 UTC,"Right. The slice notation is used to create a copy (words[:]), which we then iterate over, while changing the original (words)."
learnpython,3d1dft,IAmAmbitious,3,Sun Jul 12 19:10:24 2015 UTC,Ok thanks.
learnpython,3d1dft,IAmAmbitious,2,Sun Jul 12 19:12:40 2015 UTC,"What exactly are you asking?  Yes, it's true: you don't typically want to modify the sequence you are iterating over inside the loop. So when you say for w in words[:]: you are making a copy of words as it is at that point in the program and that is what you will iterate over. If you try your code without [:] you will run into errors."
learnpython,3d0yq4,tbharber,8,Sun Jul 12 16:42:14 2015 UTC,Concatenating two slices in the for loop will work.  for num in my_list[0:3] + my_list[7:10]
learnpython,3d0yq4,The-Mathematician,2,Sun Jul 12 16:50:15 2015 UTC,"Why bother with even creating a new list? Just check the indices you need.  for i, x in enumerate(xs):     if 0 <= i <= 3 or 7 <= i <= 10:         print(x)"
learnpython,3d0yq4,wiiittttt,2,Sun Jul 12 18:15:15 2015 UTC,"2 reasons. First, I wanted the syntax and use to be similar to what OP wanted in his post. Also, this added an extra layer of indention that I didn't want to have. Doing it the other way (if not condition: continue) seemed a little roundabout and indirect."
learnpython,3d0yq4,The-Mathematician,2,Sun Jul 12 18:19:47 2015 UTC,"For one more reason, if xs is very long, you'd have to check a lot of inequalities which can be slow."
learnpython,3d0yq4,an_actual_human,1 point,Sun Jul 12 23:40:57 2015 UTC,"One reason not to do that is because indices are bad and should be avoided wherever possible. Indices are surprisingly hard to reason about and are notorious for creating off-by-one errors.  On a related note, the condition should have been 0 <= i < 3 or 7 <= i < 10."
learnpython,3d0yq4,ingolemo,1 point,Sun Jul 12 18:48:11 2015 UTC,Yep that was it!  Couldn't figure that out for the life of me.  Thanks!!!!
learnpython,3d0yq4,olyko20,1 point,Sun Jul 12 17:03:59 2015 UTC,"Do you mind going a little further into what this is doing? Does it loop through one and then the other, processing num with whatever is in the loop? Could you do this with any two (or more?) iterables?"
learnpython,3d0yq4,The-Mathematician,2,Sun Jul 12 18:31:39 2015 UTC,"Sure. Bear with me since I'm on my phone so formatting might not look right.  This is going to work only with iterables that can be concatenated with a plus. I don't know off the top of my head which iterables will work with that in python besides lists. What this is doing is:  for num on my_list[:3] + my_list[7:10]:   First it's going to take each of those slices and evaluate them, building the list for each. For simplicity, let's say my_list = list(range(10)). So this becomes:  for num in [0,1,2] + [7,8,9]:   So then the lists get added together (concatenated) with the plus operator.  for num in [0,1,2,7,8,9]:   So it's building a new anonymous list that is looped over."
learnpython,3d0yq4,olyko20,1 point,Sun Jul 12 18:46:05 2015 UTC,"I see, thanks! Just tried it out, and it can be done with strings as well."
learnpython,3d0yq4,dunkler_wanderer,3,Sun Jul 12 21:32:08 2015 UTC,"itertools.chain can chain two or more iterables together.   from itertools import chain  figureList = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H','I','J']  for x in chain(figureList[0:3], figureList[7:10]):     print(x)"
learnpython,3d0yq4,ryeguy146,3,Sun Jul 12 19:01:16 2015 UTC,"String concatenation will work, but as usual, generators are the better option. I'd choose chain from my favorite standard library, itertools.  from itertools import chain  used_chunks = chain(figure_list[0:3], figure_list[7:10]) for figure in used_chunks:     process_figure(figure)   Docs for itertools.chain: https://docs.python.org/3/library/itertools.html#itertools.chain"
learnpython,3d0yq4,jpfau,3,Sun Jul 12 19:09:01 2015 UTC,"If you want to loop through two interables at the same time, check out zip()  for i, j in zip(figureList[0:3], figureList[7:10]):     # do something"
learnpython,3d1tp5,whitneyjb5,1 point,Sun Jul 12 20:57:18 2015 UTC,obaervation_data is clearly supposed to have 3 things in it and you are only defining it with 2 of them.
learnpython,3d1tp5,Justinsaccount,1 point,Sun Jul 12 23:00:42 2015 UTC,"Okay, I see that now and I feel foolish. Thanks"
learnpython,3d1o7h,hounddog29,1 point,Sun Jul 12 20:11:46 2015 UTC,def toBinary(decimal):  binaryList=[]  while decimal>0:  remainder=decimal%2  binaryList.append(remainder)  binaryList.pop(remainder)  decimal=decimal//2  print(binaryList)  print(toBinary(1238))
learnpython,3d1o7h,anonymousperson28,2,Sun Jul 12 20:15:42 2015 UTC,"Could you explain what you are trying to do? binaryList.pop(remainder) will remove and return the element in binaryList at index remainder, which is not what I think you are trying to do.   Also, in the future, add four spaces before your code to make it formatted properly."
learnpython,3d20p9,Ben3862,3,Sun Jul 12 21:54:30 2015 UTC,"For your purposes, there isn't anything Python can't do. It's a general purpose programming language, and can be used for simple scripts, full applications, and web applications."
learnpython,3d20p9,C0rinthian,1 point,Sun Jul 12 21:59:06 2015 UTC,"This may be a silly question, but what are some examples of each of those written in python?"
learnpython,3d20p9,Wrathofvulk,1 point,Mon Jul 13 01:42:26 2015 UTC,There are tons of websites and apps built in Python.  Reddit is in Python! Dropbox uses Python (and Go).  Python is a super popular language to use for webapps because it's pretty quick and easy to get up and running - the two main Python web frameworks are Django and Flask.
learnpython,3d20p9,callmelucky,1 point,Mon Jul 13 01:55:48 2015 UTC,"I think the Plex media server is Python as well. At least, Windows task manager describes it as 'Python' in running processes."
learnpython,3d20p9,an_actual_human,2,Mon Jul 13 10:02:43 2015 UTC,"Some of the things that Python is not well-suited for: things that deal with hardware on a low level, things that are required to be superfast (for some of those you use Python to talk to software that does the heavy lifting, e.g. in numerical computations or bioinformatics), things that have to run in a browser, things that require a lot of multithreading. You can do those things to an extent, but you should really choose another language if you can. There is a good chance you don't want to do them anyway, now or at all.  Other than that, you can do just about anything.  Peruse this for a few ideas:  https://automatetheboringstuff.com/"
learnpython,3d20p9,ShadowTaze,2,Sun Jul 12 23:29:54 2015 UTC,It's great for use in aircraft.  Just import antigravity!
learnpython,3d20p9,Wrathofvulk,1 point,Mon Jul 13 00:15:19 2015 UTC,What do you mean?
learnpython,3d20p9,ChristianGeek,1 point,Mon Jul 13 01:43:35 2015 UTC,Try it! :D
learnpython,3d20p9,St0kka,1 point,Mon Jul 13 01:54:17 2015 UTC,Try what hahaha
learnpython,3d20p9,Wrathofvulk,6,Mon Jul 13 02:21:20 2015 UTC,Import antigravity. It's the only legal way to get high.
learnpython,3d20p9,Wrathofvulk,2,Mon Jul 13 02:32:34 2015 UTC,That is amazing.
learnpython,3d20p9,Wrathofvulk,1 point,Mon Jul 13 12:54:16 2015 UTC,"Python is the best!  As C0rinthian said, you can do most everything with it - you can make quick scripts (I recently used python to make a web page monitor, for instance), games (Tkinter, pygame, etc), web apps (Django, Flask, Bottle, etc) and so much more!  Another really awesome part of Python is it's super easy to learn - the syntax is really intuitive, so most of your time spent learning will be on actually programming concepts, and not syntax, which is great. Because of how easy the syntax is, it's also a really great language to use for coding interviews!"
learnpython,3d2qzn,ggrieves,2,Mon Jul 13 01:37:00 2015 UTC,why not use google docs?
learnpython,3d2qzn,JayTh3King,1 point,Mon Jul 13 02:55:47 2015 UTC,"That would work perfectyly, however it's for work. We can't store potentially sensitive data off site, so all sites like that are blocked."
learnpython,3d2qzn,JustTurrble,1 point,Mon Jul 13 11:14:33 2015 UTC,Might try googling this. Best result I found: http://www.editablegrid.net/en/
learnpython,3d1zaz,saabr,1 point,Sun Jul 12 21:42:58 2015 UTC,"It would be a good idea to mention what version of Python you're using, as that affects the answer.  It looks like you're using Python 3, in which case the division operator / performs true division, which is not what you want.  When you write x/2, you want that to be done with integer division.  Otherwise, x will never reach zero.  Print out the values of all the variables when the exception is raised and you'll see that they're enormous, hence the error.  Use x//2 to get integer division.  Side note: you are not converting from decimal to binary, you're converting an integer to a binary representation.  Integers do not have bases, only representations of integers.  The thing returned by int() is an integer.  It's already been converted for you from a decimal representation to an integer."
learnpython,3d1zaz,Rhomboid,1 point,Sun Jul 12 22:06:14 2015 UTC,How are integer and decimal different? I thought they meant the same.
learnpython,3d1zaz,Rhomboid,1 point,Sun Jul 12 22:12:51 2015 UTC,"Decimal refers to base 10, which is one of many ways of representing an integer.  But an integer does not have a base, it's just an integer.  As soon as you try to do something like print an integer, then you have to create a representation of it, and that representation has a base.  But the integer as it exists in the program does not have a base.  For example, if you changed int() in your program to something like hex() or oct(), then your program would convert hexadecimal or octal input to binary.  But main() stays the same, which shows that main() is not converting from decimal, it's converting from an integer, which has no base."
learnpython,3d1zaz,Vaphell,1 point,Sun Jul 12 22:24:39 2015 UTC,"So integer is sort of a generalization while decimal, hex, oct, binary are its representations in a program?"
learnpython,3d1zaz,XtremeGoose,1 point,Sun Jul 12 22:30:25 2015 UTC,"yes, integer represents the universal mathematical abstract (stored internally in a binary form because that's how computers roll) and hex, oct, binary you get to see on your screen are merely string representations of it using a different set of digits. It's as if you asked how is 5 in English, French, German and Japanese. The word is going to be different, but the concept behind it doesn't change. Another clearcut case of ""value vs representation of value"" is date/time. You can write it YYYY-MM-DD, DD-MM-YYYY, MM/DD/YY or as seconds after 1-1-1970 as unix timestamp does (representation) but it still represents the same point in time (true value)"
learnpython,3d1f74,Northstat,2,Sun Jul 12 18:58:59 2015 UTC,"Let me know if any of this doesn't make sense.  x = np.array( [np.nan, 5, 10, np.nan] ) >>> x array([ nan,   5.,  10.,  nan])  x[ np.isfinite(x) ] = np.random.randn() >>> x array([nan, 0.90445471,  0.90445471, nan])   EDIT: just realized this will set the same random number to every float. If you want a different random number for each float, this will work:  >>> x + np.random.rand( *x.shape ) array([nan,  1.30650743,  1.21386745, nan])   This works because nan + anything is still nan (when dealing with numpy arrays)."
learnpython,3d1f74,anonymousperson28,1 point,Sun Jul 12 20:17:40 2015 UTC,"I'm sorry for not being clear. I meant to assign each value to a different (potentially) random value not all values to one random value. So something like:  x = np.array( [np.nan, 5, 10, np.nan, 4, np.nan, 3] ) >>> x array([ nan, 5., 10., nan, 4., nan, 3.])  ??? >>> x array([nan, 0.90445471, 0.3245188, nan, 0.4583821, nan, 0.7718332])"
learnpython,3d1f74,anonymousperson28,2,Sun Jul 12 20:26:39 2015 UTC,"I see, in that case you want to use my second example. What I did there, was use np.random.rand to create an array of the same dimensions as x except it is filled with random values. Then I added the random array to x, and since nan + any number is still nan under numpy rules, random numbers were added only to float elements. Looking back at my example I realize I need to subtract x at the end.  x + np.random.rand( *x.shape ) - x"
learnpython,3d2kqc,voider1,2,Mon Jul 13 00:42:27 2015 UTC,"Just copy it?  import shutil filename = ""something.pdf"" shutil.copyfile(filename, filename.replace("".pdf"", ""_copy.pdf""))"
learnpython,3d1bt9,2ndchoiceusername,3,Sun Jul 12 18:31:07 2015 UTC,"I suspect that you don't understand the difference between print and return, and that your problem has nothing to do with the actual import mechanism.  Either that, or you are somehow expecting the other scripts to make use of globals (like s) that you created here. Globals are only global to the module they're defined in."
learnpython,3d1bt9,zahlman,1 point,Sun Jul 12 18:48:28 2015 UTC,"s is defined separately, but in the same way, in the other modules. Is that a problem? What I'm finding is that the functions I'm calling in the main script just aren't running when they are called. When they run, they should update the db using shelve, and I know that function works from running it in its own module."
learnpython,3d1bt9,zahlman,1 point,Sun Jul 12 19:13:04 2015 UTC,"What do you mean ""just aren't running""? How do you know they aren't running? Have you tried putting a print statement at the top of each to see if it's reached? Have you tried putting print statements before and after the calls, to verify that the call is being made? You're not seeing any exception traces?"
learnpython,3d1bt9,campenr,1 point,Sun Jul 12 19:16:50 2015 UTC,"I haven't seen any exceptions at all here. Here is the module I'm having difficulty with that the main script calls: http://pastebin.com/uJaRJLyM. I have played with it some more and I found out the function is being called and is running, but something isn't right with the shelve module I believe. The functions such as ""spend"" contained in the editShelf module will run, as it asks for the inputs in the function, but somehow that isn't synced back to the db the same way as when I run editShelf alone. I managed to get it to work now by moving the ""viewBudget"" function from residing in the main file to the ""editShelf"" module and calling with with editShelf.viewBudget(), though I have no idea why that worked. Thank you for your help!"
learnpython,3d1aq1,Nesotenso,3,Sun Jul 12 18:22:15 2015 UTC,"the * ""unpacks"" the contents of sys.argv. sys.argv is a list of arguments, and just like any list (or iterable in general) you can unpack it on function arguments using the star.  mylist = [1, 2, 3] func(*mylist)   is equivalent to:  func(1, 2, 3)   while func(mylist) without the star, would be equivalent to func([1, 2, 3]).  so, since main only allows one argument (name), sys.argv should also have only one element in it's list. I kinda doubt that's going to work, because the first element in sys.argv is always the script that's being executed (at least on linux, and I doubt it's different on windows).  So if you have a script like this (let's say, filename is test.py):  import sys  def main(name):     print(name)  print(sys.argv) main(*sys.argv)   and execute it with python test.py, the output should be something like:  ['test.py'] test.py   And if you run the script with an extra argument like: python test.py foobar you get:  ['test.py', 'foobar'] Traceback (most recent call last):   File ""test.py"", line 10, in <module>     main(*sys.argv) TypeError: main() takes 1 positional argument but 2 were given"
learnpython,3d1aq1,LarryPete,1 point,Sun Jul 12 18:32:13 2015 UTC,thanks for the reply. so the difference between func(*mylist) and func(mylist) is that the first one takes three arguments (number of elements of the list) and the second one takes the whole list?
learnpython,3d1aq1,LarryPete,2,Sun Jul 12 19:58:12 2015 UTC,"The second one takes the whole list as the first argument to func. So yes.  If your function definition is:  def func(a):     pass   then mylist is bound to a when called with func(mylist).  If you call the function with func(*mylist) then it is only going to work, if mylist has only one element. If it has three, like in my previous example, then python tries to call it like func(1, 2, 3), which obviously does not work.  (you can however change your function definition to take an arbitrary number of arguments, also using *-notation)"
learnpython,3d2i00,DJ_Mission,1 point,Mon Jul 13 00:18:54 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using the or construct with a constant string  instead of doing something like:  if color == 'red' or 'blue':   Which is the same as   if (color == 'red') or ('blue'):   and 'blue' by itself is always True  You need to do  if color == 'red' or color == 'blue':   or  if color in ('red', 'blue'):   or, a special case if they are all single letters you can do  if letter in 'aeiou':   You can also make it case insensitive by using soething like  if color.lower() in ('red', 'blue'):   If there were a large number of choices and inputs (as in, 10000+) you could use a set() to speed things up.  Also refer to The FAQ Entry for more information."
learnpython,3d2f9m,the_hound16,1 point,Sun Jul 12 23:55:58 2015 UTC,"Depends on what you know. Elementary knowledge underpins everything in programming, largely ""same shit, different day"" thing. That said I'd imagine in your line of work the efficiency of math heavy components is going to be crucial which might not be as important in your past experience in robotics  You will have to develop a keen eye for spotting bottlenecks and learn to utilize non-naive solutions to problems. Probably you will also need to whip out numpy which is a small specialized universe in its own right."
learnpython,3d2f9m,Vaphell,1 point,Mon Jul 13 00:13:24 2015 UTC,"There is an excellent course on coursera.org on computational investing with python. It was offered two years ago but you can still access the material, or You can go directly to the wiki page and start the tutorials if you want a quick-start, as they are very clear on how to use the libraries and also on their installation. Heres the link to the Assignments, but i highly recommend you to watch the second week of the coursera page to revisit python syntax and the libraries themselves (numpy, matplotlib, pandas, etc.)  http://wiki.quantsoftware.org/index.php?title=Computational_Investing_I#Assignments"
learnpython,3d2akw,luisfmh,2,Sun Jul 12 23:14:29 2015 UTC,"I don't believe your algorithm is paralizeable.  Adding and multiplying number is fast, and it is dictionary accesses that soaks up all of your time.  The dictionary access portion of your code can't be parallelized because 1) each period must be computed before the next period and 2) each period must join the results into the single dictionary.  So you can't compute seperate periods in parallel, and you can't construct the dictionary in parallel.  So, for each period, you could parallelize the process of adding and multiplying, producing a list of tuples like ((1,.2),(2,.5),(1,.3)), but then your main process has to reduce that down to ((1,.5),(2,.5)), which is the slow part anyway (and can't be parallelized AFAIK).  But, your code doesn't run so slow for me.  I have a celeron processor on an oldish laptop and for 50 possibilities over 400 iterations, I get 83 seconds.  Here, I cut out some of the cruft in your code and got it to run in 56 seconds as opposed to 83:  from collections import defaultdict def crufty(probabilities_tree, period):     ret = probabilities_tree     probabilities_leaves = ret.copy()     for x in range(period):         tmp = {}         for leaf in ret.keys():             for tree_leaf in probabilities_leaves.keys():                 try:                     tmp[leaf + tree_leaf] = (ret[leaf] * probabilities_leaves[tree_leaf]) + tmp[leaf + tree_leaf]                 except:                     tmp[leaf + tree_leaf] = ret[leaf] * probabilities_leaves[tree_leaf]         ret = tmp     return ret   def less_crufty(probabilities_tree, period):     ret = probabilities_tree     probabilities_leaves = ret.items()     for x in xrange(period):         tmp = defaultdict(float)         for leaf,ret_leaf in ret.iteritems():             for tree_leaf, p_tree_leaf in probabilities_leaves:                     tmp[leaf + tree_leaf] += ret_leaf* p_tree_leaf         ret = tmp     return ret   num = 50 p_tree = {(x-num/2):1./num for x in xrange(num)} period = 400  from time import time  begin=time() orig = crufty(p_tree,period) end = time() print ""crufty done in %s""% (end-begin)  begin=time() modified = less_crufty(p_tree,period) end = time() print ""less crufty done in %s""% (end-begin)  same_keys = sorted(orig.keys()) == sorted(modified.keys())  print ""They give the same results?"" print same_keys and all(abs(orig[key]-modified[key]) < .000000001 for key in orig.keys())   By cruft (you see), I mean unnecessary try/excepts and dictionary look-ups.  Maybe yours runs more slowly because the possible steps don't share a reasonable common divisor.  If your steps are (-1,0,1), you'll have far fewer final (and intermediate) possibilities as time goes on as opposed to (-.333,0,.1234) since fewer combinations of steps will get you to a place that has already been visited.  I'm going to look at a solution that uses itertools.permutations, which would lead to something parallelizable and probably faster even without parallelization."
learnpython,3d2akw,elbiot,1 point,Mon Jul 13 01:59:04 2015 UTC,"thanks for the detailed reply!  hmmm, that's odd. I'm running it on an old laptop too, checking /proc/cpuinfo says it has an Intel M430 not sure how that compares though? I also tried it on a digitalocean vps (the smallest one) and I get a similar runtime (around 5 minutes), even running it with your trimmed down code. I ran the code you posted and I got similar times, 95 sec for crufty and 70 sec for less_crufty. So I'm guessing the high runtime maybe has to do with the p_tree I'm using? I noticed the p_tree you're using has all the probabilities set equally.  This is a sample of the p_tree I'm using to test it  probArr = {0: 0.4140127388535032, 1: 0.044585987261146494, 2: 0.012738853503184714, 3:0.01910828025477707, 6: 0.03184713375796178, 8: 0.006369426751592357, 10:0.006369426751592357, 12: 0.006369426751592357, 13: 0.006369426751592357, 22: 0.006369426751592357, 25: 0.012738853503184714, 26: 0.012738853503184714, 111: 0.006369426751592357, 30: 0.006369426751592357, 31: 0.006369426751592357, 32: 0.006369426751592357, 36: 0.006369426751592357, 37: 0.006369426751592357, 38: 0.006369426751592357, -88: 0.006369426751592357, 41: 0.006369426751592357, 46: 0.012738853503184714, -120: 0.006369426751592357, 53: 0.006369426751592357, 56: 0.006369426751592357, -68: 0.006369426751592357, 61: 0.012738853503184714, -65: 0.006369426751592357, -61: 0.006369426751592357, 68:0.006369426751592357, 69: 0.006369426751592357, 70: 0.006369426751592357, -2:     0.01910828025477707, -67: 0.006369426751592357, -49: 0.012738853503184714, -46: 0.006369426751592357, -38: 0.006369426751592357, -33: 0.006369426751592357, -31: 0.012738853503184714, -29: 0.006369426751592357, -27: 0.006369426751592357, -25: 0.012738853503184714, -17: 0.006369426751592357, -15: 0.006369426751592357, -14: 0.006369426751592357, -12: 0.012738853503184714, -130: 0.006369426751592357, -10: 0.01910828025477707, -9: 0.006369426751592357, -7: 0.01910828025477707, -6: 0.012738853503184714, -4: 0.006369426751592357, -3: 0.01910828025477707, -1: 0.06369426751592357}    So, for each period, you could parallelize the process of adding and multiplying, producing a list of tuples like ((1,.2),(2,.5),(1,.3)), but then your main process has to reduce that down to ((1,.5),(2,.5)), which is the slow part anyway (and can't be parallelized AFAIK).   Well that's exactly what I did in my parallelized code. I made a function that would calculate each of the ((1,.2),(2,.5),(1,.3)) tuples but instead of putting them in a tuple it just put them into a dictionary that was shared with all the processes. I figured that was the part that was slow, because in my testing I noticed that as it goes on, there's more and more branches to calculate( which makes sense) so if I could get 2 or more cores instead of just one calculating the branches (which can get pretty huge) it would bring some time improvements. Especially if I can highly parallelize it accross a lot of cpus. The problem is that when I run it with the paralelized code it takes even longer to run, so I'm guessing this is because of some sort of bottleneck with the shared dictionary?  Granted I'm new to any kind of scientific computing, I'm just an undergrad math that's taken a few cs courses but I like reading up on that kinda stuff."
learnpython,3d2akw,elbiot,2,Mon Jul 13 06:14:38 2015 UTC,"No, the reason for the performance difference is not the different probabilities, but what I said.  see the 5x performance increase with normalized step values:  num = len(probArr) probArr = {(i-num/2):prob for i,prob in enumerate(probArr.values())}    but instead of putting them in a tuple it just put them into a dictionary that was shared with all the processes.   But you can't have a dictionary shared by all the processes, because they are seperate python processes, and so they can't share python objects.  The ""overhead"" is that multiprocessing tries to use multiple cores, but the GIL keeps getting in the wy because they are sharing something that locks the GIL.  So it keeps firing up cores to do work, and then realizing that it can't do that work.  They need to return objects that aren't shared, and then join them in the main process.  But it's that joining that is slow, not the rest of the math.  I did look at this more, and inorder to really parallelize this (AFAIK, I'm not expert), you'd want a function that can generate each path on it's own.  So, if you had three options and a period of 5, it would yield:  [0,0,0,0,0] [0,0,0,0,1] [0,0,0,0,2] [0,0,0,1,0] ... [2,2,2,2,2]   Basically, you'd make a base N couter that spits out the indices to probArr.  My shot at an implementation of this was much slower than your algorithm, such that no number of cores could make up for it.  In case you're interested, here is that code that runs impossibly slow:  def base_gen(n,base,n_places):     '''yield 10 base representations of each place of n     represented in base.  ie: base_gen(10,2) -> 0 1 0 1'''     current=n     for x in xrange(n_places):       yield current%base       current /= base  def permuted(p_tree, period):     p_tree = p_tree.items()     result = defaultdict(float)     num_paths = len(p_tree)**(period+1)     def f(acc,idx,ptree=p_tree):         step,prob = ptree[idx]         acc[0] += step         acc[1] *= prob         return acc     for x in xrange(num_paths):       key,val = reduce(f,base_gen(x,len(p_tree),period+1),[0,1])       result[key]+= val     return result"
learnpython,3d25im,keraneuology,3,Sun Jul 12 22:31:58 2015 UTC,Yes it should. Some context? How do you read the file and how do you produce the output?
learnpython,3d25im,Vaphell,1 point,Sun Jul 12 22:43:23 2015 UTC,"Here is the code where I read the line and process it:  for line in cdata: #.split('\n'):     line = line.replace(""{"","""").replace(""}"","""")     line = line[1:]     CLookup = CLookup + line #.replace("": "","":"").replace(""\t\"""",""\""\"""").replace(""\t"","""")     linecount += 1   I have also tried  for line in cdata: #.split('\n'):     line = line.replace(""{"","""").replace(""}"","""").replace(""\t\"""",""\"""")     CLookup = CLookup + line #.replace("": "","":"").replace(""\t\"""",""\""\"""").replace(""\t"","""")     linecount += 1"
learnpython,3d25im,Vaphell,1 point,Sun Jul 12 22:45:36 2015 UTC,are you parsing json by hand or what? care to show a snippet of the input file?
learnpython,3d25im,Vaphell,1 point,Sun Jul 12 23:08:30 2015 UTC,"""location"":      ""latitude"": ""41.714754626155"",     ""longitude"": ""-72.726791873574"",   In reddit those are spaces, but in the actual file they are tabs"
learnpython,3d25im,Vaphell,2,Sun Jul 12 23:13:40 2015 UTC,"and what are these { } you get rid of with replace()? Key value pairs and {} braces look a lot like a json. If it's json, parse it with json module."
learnpython,3d25im,Vaphell,1 point,Sun Jul 12 23:25:39 2015 UTC,It is a json.  I've never heard of a json module - what site do you recommend for me to read up on those?
learnpython,3d25im,echocage,2,Sun Jul 12 23:33:32 2015 UTC,"https://docs.python.org/3/library/json.html  it's as straightforward as it gets. Check this out.  import json  test_json = ''' {     ""location"":     {         ""latitude"": ""41.714754626155"",         ""longitude"": ""-72.726791873574""     } } '''  data = json.loads(test_json) # returns a python dict reflecting the structure of json source print(type(data), data) loc = data['location'] print('lat: {}, long: {}'.format(loc['latitude'], loc['longitude']))   output  $ ./json_test.py <class 'dict'> {'location': {'longitude': '-72.726791873574', 'latitude':'41.714754626155'}} lat: 41.714754626155, long: -72.726791873574   json.loads() loads a string, there is also load() that accesses files directly.  with open('test.json') as f:     data = json.load(f)  print(data)"
learnpython,3d25im,anonymousperson28,1 point,Sun Jul 12 23:38:42 2015 UTC,"This is the code I am currently using that queries the data source:   calling = urllib2.urlopen(""http://$$$$$$$/json"")  cdata = calling.read()   The $$$$s is a URL that provides the data I want.  So I would want to  import json import urllib2 calling = json.loads(urllib2.urlopen(""http://$$$$$$$/json""))   to pull down the complete json record?"
learnpython,3d25im,echocage,1 point,Sun Jul 12 23:50:36 2015 UTC,"calling = urllib2.urlopen(""http://$$$$$$$/json"") cdata = json.loads(calling.read())   urllib2.urlopen() is not a string so it cannot be loads()-ed directly. To get contents of the remote file you have to go through read()  it might be possible to use json.load() on it though as it's a file-like object, haven't checked that, so drop the 's' and see if it works."
learnpython,3d25im,echocage,1 point,Sun Jul 12 23:57:22 2015 UTC,"Traceback error, most likely because the json library is not loading.  When I look in my c:\Python27\Lib directory I see a urllib.py and a urllib2.py - as I understand it when I invoke ""include urllib"" is is reading that .py file, correct?  I do not see a json.py but I see a <DIR> json but there is no json.py in that directory so I conclude it is a wild goose chase.  With some google searching I find a source for json.py at this site, I download the file and extract the contents to c:\Python27\Lib along with the other files that I include  Now when I run my python script I get  C:\Users\A\Documents\Python>1.py  Traceback (most recent call last):   File ""C:\Users\A\Documents\Python\1.py"", line 3, in <module>     import json   File ""C:\Users\A\Documents\Python\json.py"", line 8, in <module> AttributeError: 'module' object has no attribute 'loads'  C:\Users\A\Documents\Python>   Obviously I'm screwing up something with installing that json.py module - what am I doing wrong?"
learnpython,3d25im,echocage,1 point,Mon Jul 13 00:19:20 2015 UTC,"Oh I see your problem!  You're trying to get rid of a tab, rather than the literal characters \t, you have to re-escape \t to \\t so it's check for the actual characters \t, if that makes any sense.  .replace('\\t""','""')"
learnpython,3d1ygo,lyingmap,6,Sun Jul 12 21:36:21 2015 UTC,Ok
learnpython,3d1ygo,antlong,3,Sun Jul 12 21:50:49 2015 UTC,"be glad you discovered, or rather were shown by your experienced mom, the benefits of rubber duck debugging so early."
learnpython,3d1ygo,Vaphell,2,Sun Jul 12 22:48:57 2015 UTC,"She tells me about working with punch cards, and punch tape, and turning in a program to the mainframe operator, and waiting until the next morning to find out whether the program did anything at all.   My first ever academic programming education was when I was about 12 (6th grade), taking a summer class at a local high school in the 80's. It didn't have all that much to do about the science of programming, per se. It was more a class about how to use #2 pencils to fill in bubble-cards to arcanely instruct a line printer to print upper- and lower-case letters in patterns that, when you stood back a ways, made the image of a Klingon Bird-of-Prey or Snoopy.  At the end of each day the teacher would gather up our card decks, leave the high school and drive to a local [university? | school district HQ?] where he'd feed each deck into a mainframe and print out the results (if any) on wide green-bar fan-fold paper.  The following morning he'd come into class with our card decks and the stack of print-out and begin ripping apart pages and handing them back to the students along with their associated card deck.   We would then examine our print-outs, see where shit went wrong, try to locate on which card we'd fucked up, fix the error on one or more new cards and reassemble our decks.  The teacher would then take our decks downtown that evening, run them, collect the print-outs and bring them back the next day.   Rinse and repeat.  A single lesson/exam might take a week simply because of the delay involved in getting your deck processed and the results back. There were some days we didn't get any results back because the teacher was unable to obtain time on the mainframe. He/we got bumped because of higher priority project runs.    A ""trial of passage"" many people encountered back in those days was to be carrying numerous boxes of cards (2,000 per box) and accidentally trip and dump them on the floor. You then spent the next hour or so sorting all of the cards back into sequence and into their appropriate boxes.  You weren't a ""real"" programmer until you'd done this. You weren't a ""real"" programmer if you did it more than once. ;)"
learnpython,3czvwy,pietrod21,11,Sun Jul 12 08:05:07 2015 UTC,"map(t.get,['a','b'])"
learnpython,3czvwy,04h,4,Sun Jul 12 08:20:51 2015 UTC,"Thanks, infact I read from >>>help(dict):   get(...)  |      D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None."
learnpython,3czvwy,04h,7,Sun Jul 12 08:38:38 2015 UTC,"+1 for using help. I think help (and dir) is a ultimate source of info, expecially in the beginning"
learnpython,3czvwy,04h,1 point,Sun Jul 12 13:47:42 2015 UTC,"Definitely, I know dir from a long time and discover help few days ago :(.  I will like to find a minimalist guide to python functional oriented, is it there any similar guide out there?"
learnpython,3czvwy,NoLemurs,1 point,Sun Jul 12 18:26:33 2015 UTC,Something like list of builtin functions?
learnpython,3czvwy,NoLemurs,4,Sun Jul 12 18:34:34 2015 UTC,"A couple alternatives:  The most pythonic approach is a list comprehension:  [t[x] for x in ('a', 'b')]   If you want to default instead of throwing an error:  [t.get(x) for x in ('a', 'b')]   Either of the above can be done with parens in place of brackets to produce a generator instead of a list.  Finally, if for some reason you really want to use map but don't want to silently default to None:  map(t.__getitem__, ('a', 'b')"
learnpython,3czvwy,04h,1 point,Sun Jul 12 15:58:33 2015 UTC,"The last one is interesting, exactly the same definition of get but without None defaulting.  __getitem__(...)  |      x.__getitem__(y) <==> x[y]   Anyway I know functions delimited in this way are not to call: http://igorsobreira.com/2010/09/16/difference-between-one-underline-and-two-underlines-in-python.html can you explain me how is the normal way to use this?"
learnpython,3czvwy,04h,2,Sun Jul 12 18:31:26 2015 UTC,"can you explain me how is the normal way to use this?   Whenever you use t[x] under the hood you're calling t.__getitem__(x).  The main use of __getitem__ is that you can create a class with a __getitem__ function, and then access items like from a dictionary. For example:  >>> class Foo: ...     def __getitem__(self, x): ...             return ""Bar"" ...  >>> a = Foo() >>> a[3] 'Bar'"
learnpython,3czvwy,04h,1 point,Mon Jul 13 03:11:42 2015 UTC,"Oh yesyes, thanks, now I see an example also in the page linked."
learnpython,3czvwy,04h,1 point,Mon Jul 13 09:04:54 2015 UTC,I solve using your solution:  [a.__getitem__(x).lower() for x in range(len(a))]   But what if I want to use map instead? (Please ask in the same question above)
learnpython,3czvwy,stebrepar,1 point,Tue Jul 14 00:35:57 2015 UTC,"And if I want to apply a str method instead of a __method__?  For example I want to do this: map(lower(),['Ciao','Hello','Hallo'])?"
learnpython,3czr99,futsalmaster,8,Sun Jul 12 06:52:22 2015 UTC,"Replace 'def' with 'class'. You are trying to implement a custom exception class, which inherits from Exception, but your code is defining a function."
learnpython,3czr99,jerseysucks182,3,Sun Jul 12 07:17:14 2015 UTC,"Ohh. I should've realized that from the error when it says ""classes"" and ""inherit"", haha. Thanks!"
learnpython,3czr99,xcombelle,3,Sun Jul 12 14:46:24 2015 UTC,It's far from obvious. I missed it at the first read.
learnpython,3czow9,FastGrass,6,Sun Jul 12 06:19:40 2015 UTC,"if hasattr(report, 'lat' and 'lon'):   How are you expecting this to work?"
learnpython,3czow9,zahlman,1 point,Sun Jul 12 11:19:28 2015 UTC,"This is potentially a blocking issue. I'm not at all familiar with this module, but I skimmed this page HERE. Try adding some down time in between each call for new data. There appears to be a built in method for this:gps.waitng()  or you could use the time module: time.sleep()."
learnpython,3czow9,StaticFuzz,1 point,Sun Jul 12 09:18:24 2015 UTC,I put in a delay and the same thing happens. Just slower! :/. Thanks for the response.
learnpython,3czow9,StaticFuzz,2,Sun Jul 12 09:59:47 2015 UTC,"I did a little bit more reading, and it appears .next() is a blocking call, meaning it will stop the while loop until it receives data. That also means your code will not print('0') if it doesn't receive data, it will just hang.   You could use the .waiting() method to check if there is data. It returns a boolean, so you could use it like this:  if session.waiting(<timeout>):     report = session.next()     ... else:     #there is no data     print(0)   .waiting() returns a boolean. It will return True if there is data to be read, or if it reaches the <timeout> limit it will return False."
learnpython,3czrxn,Elthran,3,Sun Jul 12 07:03:13 2015 UTC,Did you get any errors?  Have you tried to install it with pip?  pip install symfy
learnpython,3czrxn,salamandrium,1 point,Sun Jul 12 07:49:36 2015 UTC,SymPy is on the Python Package Index (PyPi) which means you can use the python package installer Pip to install it. As /u/salamandrium said just use pip install symfy in a terminal/cmd.exe.  If you are using macOS or a debian flavoured linux distro and want to install the package for python you should run pip3 instead (it's the python3 version of pip).
learnpython,3czrxn,campenr,1 point,Sun Jul 12 12:57:04 2015 UTC,Thank you.
learnpython,3czrxn,not_perfect_yet,1 point,Sun Jul 12 15:01:58 2015 UTC,"It's included in the winpython distribution. If all else fails, just use that."
learnpython,3czrxn,basyt,1 point,Sun Jul 12 12:21:02 2015 UTC,Thanks!
learnpython,3czrxn,DickCheeseSupreme,1 point,Sun Jul 12 15:01:52 2015 UTC,Use a comprehensive python suite like Anaconda or Enthought Canopy can be a good option on windows as it'll install a hell lot of libraries needed for scientific computing (including sympy). The process is automatic like any typical windows installation.   Here is an install link:  For anaconda: http://continuum.io/downloads  For enthought: https://store.enthought.com/
learnpython,3cwvjp,godlikesme,2,Sat Jul 11 14:02:27 2015 UTC,Some bots can hide the message body. Is this done via subreddit CSS? Also is there a lib that helps with formatting messages for reddit?
learnpython,3cwvjp,PalermoJohn,3,Sat Jul 11 15:26:35 2015 UTC,"According to this /r/autowikibot post, yes. So subreddits must update their CSS."
learnpython,3cwvjp,Q_coder,1 point,Sat Jul 11 15:30:54 2015 UTC,"I would be interested in seeing you create a bot that would crawl all subreddits, or, even just the top 500.  Output could be a graph showing which subreddits are linked to each other..?"
learnpython,3cwvjp,Q_coder,1 point,Sat Jul 11 15:52:34 2015 UTC,"This would be fun, but crawling all posts and all comments is impossible. Reddit rate limits api users, so you can make only 30 requests per minute.   So while downloading all subreddit posts/comments is possible, it'll take prohibitively long time.   PS: I am linking my code for downloading the whole subreddit here . It turned out to be non-trivial(I had to use a cloudsearch syntax)"
learnpython,3cwvjp,Deleos,1 point,Sat Jul 11 16:22:21 2015 UTC,"Awesome.  I am looking forward to your stream.  Do you have any materials you can recommend, like libraries (obviously PRAW) that are scoped around what you are doing here?  Cloudsearch syntax?? Amazon?"
learnpython,3cwvjp,oldmanstatusachieved,1 point,Sat Jul 11 16:35:18 2015 UTC,I can recommend flask for creating web app part of your bot.
learnpython,3cwvjp,neggasauce,1 point,Sat Jul 11 17:53:50 2015 UTC,Does it limit the requests per IP address? Would it be possible to seperate the requests out into hundreds or thousands of different IPs and then merge the data?
learnpython,3cwvjp,StarWolf999,1 point,Sat Jul 11 17:54:07 2015 UTC,"I doubt it. They are limiting it not because they don't want to receive lots of requests from one ip, they're limiting it because they don't want to receive tons of requests in total.  On the bright side, I've just found this submission, so it may be possible to do what /u/Q_coder wants to do:    https://www.reddit.com/r/datasets/comments/3bxlg7/i_have_every_publicly_available_reddit_comment/"
learnpython,3cwvjp,DJ_Mission,1 point,Sat Jul 11 17:59:16 2015 UTC,I think they limit it to 60 if you use OAuth  edit: grammar hurd
learnpython,3cwvjp,weez09,0,Sat Jul 11 18:07:07 2015 UTC,"No, they do not limit by IP but by User Agent banner.  You can get around the API limitation very simply, but you do run the risk of getting caught and banned."
learnpython,3cwvjp,FlockOnFire,1 point,Sat Jul 11 20:21:03 2015 UTC,Is it possible to use several bots to attain this?
learnpython,3cwvjp,Tweakfix,1 point,Sun Jul 12 10:41:59 2015 UTC,"I guess you could cheat, yeah, but you'll likely get banned before downloading even a small percentage of the sub.   PS: after leaving that comment, I learned that the whole reddit comments are available as a public dataset(but it is huge, and downloading it may be tricky)."
learnpython,3cwvjp,vznary,1 point,Sun Jul 12 23:21:34 2015 UTC,"So I am brand new to Python, and went the 2.7 course. I am studying for the ability to create networking scripts and packet capture scraping tools, and started earlier this year. I have gotten halfway through lpthw and also through codecademy and understand enough to have gotten the jist of boolean structure--my question: would this be helpful to a guy like me or do I need another 5 years working at it?"
learnpython,3cwvjp,Jadeskycore,3,Sat Jul 11 17:08:59 2015 UTC,"I guess you could try watching it? I don't think it'll be that advanced, and in fact praw greatly simplifies dealing with reddit api.  Also, feel free to ask questions during the stream."
learnpython,3d027s,Langdon2015,2,Sun Jul 12 09:57:41 2015 UTC,"There's lots of things wrong here.  First, pattern is a bytestring object and pattern.replace is bytes.replace.  This is a plain string function, having nothing to do with regular expressions.  Its third argument is the count of how many replacements to make.  So this:  pattern.replace(b'?P<id>', b'(?P=myFlag)', re.DOTALL)   ...is just completely wrong.  By luck, re.DOTALL is a constant that's greater than zero, so the replacement worked, but it's nonsense.  That parameter shouldn't be there.  Secondly, re.sub() is not doing any substitution at all because it's not matching anything, because the regex needs re.DOTALL to match.  You need:  contents = re.sub(pattern, replPattern, contents, flags=re.DOTALL)   However, if you make those changes then the result is nonsense:  (?P<myFlag>[a-zA-Z0-9_]+)::(?P=myFlag).+:.+((?P=myFlag)\(UINT\)0 *,) pParent, pApp)     , m_pReaderApp(pApp)     , m_info(pApp) {  }   That's because things like .+, (?P<foo>), and (?P=foo) are completely meaningless in a replacement string.  A replacement string is not a regular expression, it's a plain string.  The only things you can do in a replacement string is write things like \1 which expands to the contents of capture group 1, or \g<name> to expand to the contents of a named capture group.  But that won't help you, because you've got parts that aren't captured at all, like the .+ matches.  I think you should flush this idea of modifying a regex to create a replacement string.  Instead, use the information in the match object.  The start and end methods give you the indices in the string of where a certain group matched.  You can use that to modify only a single group, like this:  import re  contents = b''' xdlg::xdlg(x_app* pApp, CWnd* pParent)     : customized_dlg((UINT)0, pParent, pApp)     , m_pReaderApp(pApp)     , m_info(pApp) {  } '''  pattern = rb'(?P<myFlag>[a-zA-Z0-9_]+)::(?P=myFlag).+:.+(?P<id>\(UINT\)0 *,)' res = re.search(pattern, contents, re.DOTALL) if res:     contents = (contents[:res.start('id')] +                  res.expand(r'\g<myFlag>\g<id>') +                 contents[res.end('id'):])  print(contents)"
learnpython,3d027s,Rhomboid,1 point,Sun Jul 12 17:27:15 2015 UTC,"First of all:  contents = re.sub(pattern, replPattern, contents)   you're missing the DOTALL flag. It should be like this:  contents = re.sub(pattern, replPattern, contents, flags=re.DOTALL)   (with keyword, because the 4th argument is ""count"")  After that' you'll notice, that your replacement still didn't work as expected:  (?P<myFlag>[a-zA-Z0-9_]+)::(?P=myFlag).+:.+((?P=myFlag)\(UINT\)0 *,) pParent, pApp)     , m_pReaderApp(pApp)     , m_info(pApp) {  }   What you did was, to replace the string replPattern with whatever pattern matched in contents. The second argument to re.sub is not a regular expression. It's a normal string, and inside that string, you refer to the matched arguments using backslashes, like so:  contents = re.sub(pattern, r'\1::\1\2\1\3', contents, flags=re.DOTALL)   or, using \g<...>  contents = re.sub(pattern, r'\g<myFlag>::\g<myFlag>\2\g<myFlag>\3', contents, flags=re.DOTALL)   (though you have to group the middle part "".+:.+"" as well, to make it work)  For more information, read: https://docs.python.org/3.4/library/re.html#re.sub"
learnpython,3cz4ce,RedRavens,1 point,Sun Jul 12 02:29:18 2015 UTC,"I used Selenium: https://selenium-python.readthedocs.org/  It runs with some version of Firefox, and you can use DOM elements to call 'click' functions.  It has to be EXACT for javascript functions.  Selenium was also easier for me to use than mechanize.  Just a heads up, you can't really touch the computer if you're using anything like sendKeys, it broke my script whenever I used the mouse or keyboard.  For clicking javascript buttons, I'd look at the DOM element and traverse the DOM to find the element if it wasn't specifically labelled with something like a unique set of classes or an ID.    I had trouble creating a spider with mechanize a few months back.  I'd link my Selenium code, but I did it for work so I can't share, but here's an example someone else did:  http://stackoverflow.com/questions/11947832/how-to-click-a-button-in-selenium-webdriver-using-javascript"
learnpython,3czb02,Hallelujah10,3,Sun Jul 12 03:38:28 2015 UTC,"I could be fairly wrong but it says you should ""return the string ""true"""". I don't know if they literally want you to return a string that says true or if they just write it like that.  Edit: If you look at their outputs samples they want a string with true and false.."
learnpython,3czb02,Kvixen,2,Sun Jul 12 04:13:52 2015 UTC,Shit. I m dumb.  I thought they wanted to return boolean True or False
learnpython,3czb02,Kvixen,1 point,Sun Jul 12 04:30:41 2015 UTC,We all make mistakes. :)
learnpython,3cxeti,ihoegen,5,Sat Jul 11 17:06:44 2015 UTC,"Hey, this is a pretty cool program. If you wanted to make it even lazier, for URL's you could get someone to input it with BS4 (http://www.crummy.com/software/BeautifulSoup/bs4/doc/) and urrlib. Then you could find the tags or html attributes (title, date, author, website URL) to automatically populate the citation for maximum laziness.  Here's a simple example of how someone has done it here: http://stackoverflow.com/questions/18042661/using-bs4-to-extract-text-in-html-files  Another suggestion is to let the user constantly type in entries and save them to an iterable (like a list or a dictionary), like citations = [citation, citation, citation], and then do either of these:    copy to clipboard : http://stackoverflow.com/questions/579687/how-do-i-copy-a-string-to-the-clipboard-on-windows-using-python  output the list to a file: http://stackoverflow.com/questions/17225287/python-2-7-write-and-read-a-list-from-file   This way, they would only have to use the program in one run-through for an entire works cited section. Good job dude."
learnpython,3cxeti,oldmanstatusachieved,1 point,Sat Jul 11 17:19:57 2015 UTC,urllib doesn't exist in 3.x like it does in 2.x so if OP is using it they should be aware.
learnpython,3cxeti,mnky9800n,5,Mon Jul 13 13:16:59 2015 UTC,"This isn't really related to python, but if you find yourself having to manage a lot of citations you might consider using Zotero to manage them. It exports to APA format among others."
learnpython,3cxeti,ghritt,2,Sun Jul 12 01:04:23 2015 UTC,"Second this, Zotero is brilliant for saving all kinds of citations from the web, and comes with plugins for things like word that allow you to easily add those citations into a document in a standardised manner."
learnpython,3cxeti,campenr,0,Sun Jul 12 12:42:47 2015 UTC,"LaTex is definitely worth the time for longer documents with lots of references, or lots of math, or both."
learnpython,3cxeti,ghritt,1 point,Sun Jul 12 04:44:41 2015 UTC,"First: That's an amazing thing to get started with!  Second: Make sure you never recreate the wheel on accident! Simply learning to use what's out there will make you an incredibly valuable person to have around.  (I recommend bibtex, which is the standard in most science fields.)"
learnpython,3cxeti,loveandkindness,1 point,Sun Jul 12 12:38:32 2015 UTC,"I know other resources exist to do this, this is just to practice python"
learnpython,3czahe,freakzilla149,3,Sun Jul 12 03:32:56 2015 UTC,In both the case where L is the empty list and the case where f returns false for each element of L then returning 0 and L = [] is correct.    The spec states that the function assumes that every element of L is a string. So you should not need to consider other tours of elements.
learnpython,3czahe,NarsilNZ,1 point,Sun Jul 12 03:48:00 2015 UTC,"According to the spec it seems like you're good, you should just return 0 and an empty list (in the case of no string objects) which it seems you're doing. According to the spec you should also assume the list will only be strings, so you shouldn't need to check the type of elements in the list. Checking the type of your inputs doesn't look like it would hurt you, unless you're facing an extremely zealous grading algorithm. You may be overthinking this, with what you've described it seems your code is fine."
learnpython,3czahe,Rodeopants,1 point,Sun Jul 12 03:49:23 2015 UTC,"Hi, I just submitted this problem on the MIT quiz and got it right. I'll try my best to help.  So pretty much the question is asking you to compare each index in your list with f(s). So in the example f(s) will check to see if a is in L[0], L[1], and L[2]. The best way to do this is to use a for loop and iterate over your list. As you are iterating over each index in your list you plug in f(s) with that specific index and it will return True or False.  From here the assignment is telling you to edit L and remove any indices that do not return True. This is where it can get tricky because as you remove an index your for loop range changes. A little searching on StackOverflow can help. If you need I can point you in the right direction!"
learnpython,3czahe,IAmAmbitious,1 point,Sun Jul 12 06:33:28 2015 UTC,"This is exactly what I am doing. I've created a clone of  L called copyOfL using L[:], over which I I iterate using a for loop. I call f(s) for each element of copyOfL and if it is False I removed it from L, using L.remove(element)  See pseudocode:   # create a copy of the list to iterate over # For each element in the list copy # If f(element) returns False # Remove element from L  # return the length of L   As shown in the course video about lists.  I've tried loads of different lists, long, short, single and muti char strings. All give the expected output. I've also tried editing f(s) so that it looks for strings that are longer than one char, it still works."
learnpython,3czahe,IAmAmbitious,1 point,Sun Jul 12 09:57:54 2015 UTC,"Look, I've tried again with the list comprehension shown in the stack overflow link but the code was marked incorrect. I only have 5 attempts left. How did you handle the empty List? did you just return a 0 for length of list and and an empty List? Or did you use assert statements to stop the function if the list was empty?  I don't know what test case it could be failing when I've tried every variation of L I can think of.   Test case where all the elements return True Test case where none return True Test case where the list is empty  where the list is made of string longer than one char, with versions to satisfy testcase 1 and 2 Test case where the list is only 1 element, of one char, both True and False versions. Of course, I've tried test cases where some elements are True while others are False   code:  L[:] = [el for el in L if f(el)] return len(L)   They all return what I'd expect. So what the hell?"
learnpython,3czahe,IAmAmbitious,1 point,Sun Jul 12 10:44:09 2015 UTC,"Hmmm...I'm not sure because like you said it doesn't show you what test cases they use. I'll post my code and walk you through it. Firstly, I didn't create a copied list to add contents to. I stuck with the main list, because that's what the question asks. Typically it's not a good idea to edit your main list, especially while you iterate over it (it can cause problems with your range and indices).   However, I did it because that's what they wanted. The code is simple, 4 actual lines:  def satisfiesF(L):     # We reverse the range because when it won't affect when     # we delete elements since we're moving down to index 0     for i in reversed(range(len(L))):         # I use str(L[i]) in case there is a number in the list         if f(str(L[i])) == False:             del L[i]     return len(L)   The reason we start at the end of the list first, reversed(range(len(L))), is because if we delete that element it won't affect us as we iterate down through the loop.   Say we wanted to go through the loop from the beginning, for i in range(len(L)):  If I'm iterating through and I hit the 4th element and it returns False I will delete that element. Now when I go to the next iteration of the loop the I should be going to the 5th element, however since we deleted the 4th element, the 5th element now drops down to 4th and we skip that element altogether. Also when you get towards the end of your list it will throw an error because you are still trying to iterate over the original len(L), not accounting for what we've deleted."
learnpython,3czahe,IAmAmbitious,1 point,Sun Jul 12 17:10:54 2015 UTC,"So, in essence my code is correct. Prof Gimson himself showed us the cloning technique which allows us to iterate over L without actually iterating over L, and overcome the issue of mutating the list we're iterating over.  The only difference I see between our code is this:  mine: if not f(i):. Yours: if f(str(L[i]) == False. I never test to ensure that the elements of the list are strings, Because the bloody spec says to assume the list only has strings. Why would I need to convert to strings if I have list of strings?  If it said nothing at all about the type of the elements of the list L I would've got it right a long time ago."
learnpython,3czahe,IAmAmbitious,1 point,Sun Jul 12 17:32:01 2015 UTC,I didn't even realize it said to assume everything was a string...haha. I was testing my code with all sorts of inputs and just included it to make sure it worked on everything. Yea you can use if not f(i):...it looks better that way!
learnpython,3cz9lp,scrabaddict,4,Sun Jul 12 03:23:43 2015 UTC,You never actually asked a question. Is there something you want help with?
learnpython,3cz9lp,ghritt,1 point,Sun Jul 12 04:45:07 2015 UTC,"OK, cleaned code up a little, and got it to work somewhat.  But I'm not even sure if I can follow it.  My trouble starts at line 33.  I'm open for suggestions to make it more Pythonic and open to any clever Booleans, etc.   It seems to work except when there's only one value in the list for a key."
learnpython,3cz9lp,ghritt,2,Sun Jul 12 05:18:43 2015 UTC,"It seems you want a loop that breaks if either there are 2 wrong answers or the user guesses all the anagrams, yes? In that case something like:  while wrong_answers < 2 and correct_answers < len([anagrams])     #guessing loop goes here, counting correct and incorrect answers     #also might want to remove a correct answer from list?   Edit: Looks like you already modified that! I think it was different before? Anyway I'm not really sure what you are doing with the 's' variable or why it's needed. I think it would be better to test for anagrams via 'in' to test if an item is in a list:  if guess in values:     #do a thing, possibly including values.remove(guess)"
learnpython,3cz9lp,ghritt,1 point,Sun Jul 12 05:31:52 2015 UTC,"I actually want to add the key and values of a wrong answer to a separate dictionary...but I'm not trying to get ahead of myself.  I'm thinking that would be easy to accomplish after getting the logic sorted out.   I think the 's' variable moves through each index on the list in the dict value.    My issue is that the list in the value varies in length in the dictionary.   Here's a sample... {'aborting': ['borating', 'taboring'], 'abortus': ['robusta', 'rubatos', 'tabours'], 'abounds': ['bausond']}"
learnpython,3cz9lp,ghritt,2,Sun Jul 12 06:08:14 2015 UTC,Why is that list length a problem?
learnpython,3cz96b,WalrusPorn,1 point,Sun Jul 12 03:18:50 2015 UTC,str.strip() may be useful to you.
learnpython,3cz96b,ghritt,1 point,Sun Jul 12 04:30:54 2015 UTC,"To my knowledge, strip just removes the leading and trailing characters (whitespace unless specified). If I'm trying to get ""Just wondering cause you\\\'re from California."" to show up as ""Just wondering cause you're from California."", I'm not sure how I would use strip. I could be overlooking something though, because I am not the best at python."
learnpython,3cz96b,ghritt,1 point,Sun Jul 12 05:06:10 2015 UTC,"Right, that won't work for you in that case. I didn't read your question very carefully. If it's always going to be '\\' that you're removing it may work to use str.replace()"
learnpython,3cz96b,kalgynirae,1 point,Sun Jul 12 05:16:33 2015 UTC,"Are you using Python 3? I can't tell without seeing your code, but it sounds like your API is giving you bytes objects and you're trying to print them without decoding them into text first. That would explain why you're seeing the backslash escapes (you're probably converting them to strings somewhere by calling str(), and for bytes objects str() is the same as repr()). Additionally, b""\xf0\x9f\x8d\x88"" is the bytes that represent that particular emoji when encoded in UTF-8, so if you hit that with a .decode('utf-8') you should get what you're looking for.  Provide your code if you want more specific advice."
learnpython,3cz96b,kalgynirae,1 point,Sun Jul 12 05:35:40 2015 UTC,"okay okay cool. That was a great help. using bytes.decode(string, 'utf-8')I am getting exactly what I want. Only one problem. I am reading these things from a file, and reading them in, they come as strings, and I cant use my bytes.decode with them. I am reading them with simply for line in file:. In the console, I can cast them as bytes when I make them (with b'xxxxxx') and everything works. What is the best way to either read them from the file as bytes, or cast them as such before I work with them?  Thanks again for your help.  EDIT: Okay if I open the file in 'rb' mode, it appears to work, except if I do that I cant search the line and cut out the parts (timestamp) I don't want. I get a TypeError: 'str' does not support the buffer interface exception from the code line = line[line.find(""> "") + 2:-2]  EDIT2: Okay I feel I should clarify what is happening. I am reading this line from a file   559954317361573888 b'2015-01-26T22:01:27-08:00 <twitter> @twitter \xf0\x9f\x8d\x88\xf0\x9f\x8d\x88\xf0\x9f\x8c\x9a\xf0\x9f\x8c\x9a.   I want to cut it down to    @twitter \xf0\x9f\x8d\x88\xf0\x9f\x8d\x88\xf0\x9f\x8c\x9a\xf0\x9f\x8c\x9a'    (I used find and string[x:] for this), then use bytes.decode(line, 'utf-8') to finally end up with    @twitter\U0001f348\U0001f348\U0001f31a\U0001f31a   Of course I would use this for the entire file, but I am taking it one line at a time."
learnpython,3cz96b,kalgynirae,1 point,Sun Jul 12 06:35:04 2015 UTC,"bytes.decode(string, 'utf-8')   That should just be string.decode('utf-8'). And string is not a good name because it's really not a string (it's bytes)!   EDIT2: Okay I feel I should clarify what is happening. I am reading this line from a file  559954317361573888 b'2015-01-26T22:01:27-08:00 <twitter> @twitter \xf0\x9f\x8d\x88\xf0\x9f\x8d\x88\xf0\x9f\x8c\x9a\xf0\x9f\x8c\x9a.    I'm still rather confused. Does the file really contain that b' and the backslashes and end with a period? (Like, if you open the file in a regular text editor, do you see those?) If so, we've got a different problem. How are you creating this file (or where are you getting it from)?   EDIT: Okay if I open the file in 'rb' mode, it appears to work, except if I do that I cant search the line and cut out the parts (timestamp) I don't want. I get a TypeError: 'str' does not support the buffer interface exception from the code line = line[line.find(""> "") + 2:-2]   This error message is a confusing one (I think it's being improved in Python 3.5), but all it means is that you passed a str to something that needed a bytes. In this case, it means line is a bytes and so you can't use a str with .find(). Using .find(b""> "") instead would work, but that's not the best solution. Really you should decode line before doing the find, because the find is conceptually a textual operation (it happens to work as a byte operation only because the involved characters are ASCII characters).  So, you should not open the file with a binary mode. When you open a file in text mode, Python does the encoding/decoding for you so that you get back str objects automatically, and you shouldn't need to do any decoding. If you think you do still need to decode things, then it's a problem with how you're getting the data into the file in the first place.  Can you please provide your code? It would make this a lot easier."
learnpython,3cz96b,kalgynirae,1 point,Sun Jul 12 14:33:05 2015 UTC,"My code is here  I'm getting the file by running twitter's command line tool that archives all of some users tweets. It generates the file on its own, with no extension. Here is an example of what it would generate."
learnpython,3cxbia,FrostySK,2,Sat Jul 11 16:37:45 2015 UTC,"d = {} d['x'] = 'y' for key in d:   print(key, d[key])"
learnpython,3cxbia,Daavee,1 point,Sat Jul 11 16:44:46 2015 UTC,I have 3 keys+values in my dictionary and I want to call just one specific. I guess this calls all of them.
learnpython,3cxbia,__skrap__,5,Sat Jul 11 17:02:03 2015 UTC,"You don't have to use the for loop.  # get all the keys as a list your_dict.keys() # get all the values as a list your_dict.values() # get all the key, value pairs as a list of tuples your_dict.items()  # loop over all the keys in your_dict for key in your_dict.keys():     print(key)  # python defaults to iterating over the keys if no method is used for key in your_dict:     print(key)  # if you want a value for a known key your_dict[key] # or  your_dict.get(key)   EDIT - the official tutorial might help some - https://docs.python.org/3.4/tutorial/datastructures.html#dictionaries"
learnpython,3cxbia,oldmanstatusachieved,3,Sat Jul 11 17:22:25 2015 UTC,"Daavee's second line should retrieve the dictionary value correctly:  d['x'] = 'y'   So if your list was animals = {'dog':'cute','cat':'fluffy'}, animals['cat']will retrieve 'fluffy'."
learnpython,3cz760,hellothere4556,1 point,Sun Jul 12 02:58:19 2015 UTC,"Can you explain that again, I'm not getting what you're saying"
learnpython,3cz760,echocage,1 point,Sun Jul 12 03:02:20 2015 UTC,"Okay so basically I have this dictionary: my_dict={1:[(20,30,100)],2:[(80,90,200),(8,9,300)]}  Each key in the dict has only one value. However, the key 1 has one tuple and key 2 has two tuples.  For each key, I want the sum of their third number from the tuple. So for key 1, the sum would just be 100. For key 2, the sum would be 200+300=500.  Since 100<500, I want to return the key '1'  Let me know if it still doesn't make sense lol"
learnpython,3cz760,Rhomboid,1 point,Sun Jul 12 03:14:25 2015 UTC,"I want to just return the key that had the lowest sum of the third numbers. So, I would want to return '1'   You can get that with:  >>> min(my_dict.items(), key=lambda item: sum(t[2] for t in item[1]))[0] 1   You could also write it as:  >>> min(my_dict, key=lambda key: sum(t[2] for t in my_dict[key])) 1"
learnpython,3cz760,Rhomboid,1 point,Sun Jul 12 03:13:24 2015 UTC,is there a way to do it without using lambda?
learnpython,3cz760,elbiot,1 point,Sun Jul 12 03:15:07 2015 UTC,"You could write the key function as a normal function, but why?  It's just more typing:  def keysum(k):     return sum(tup[2] for tup in my_dict[k])  some_var = min(my_dict, key=keysum)"
learnpython,3cyi5w,ClanzDev,2,Sat Jul 11 22:53:30 2015 UTC,"I think you need to bind to self.onselectdrive, not Application.onselectdrive.  the uninstantiated Application class does not have a driveList because that gets created in __init__."
learnpython,3cyi5w,elbiot,1 point,Sun Jul 12 00:17:28 2015 UTC,"Thanks for the help.  Replacing all instances of ""Application"" with ""self"" worked out.  Also had to add a second parameter to the functions I'm calling...  I don't understand why, but I'll figure it out.  Working code:  def createwidgets(self)     #Code from OP     self.deviceList.bind('<<ListboxSelect>>', self.onselectdevice)  def onselectdevice(self, wut):     w = wut.widget     items = w.curselection()     self.driveList.delete(0, END)     for device in items:         drive = self.getdrives(w.get(device))         for idrive in drive:             self.driveList.insert(END, idrive.text)"
learnpython,3cyi5w,zahlman,1 point,Sun Jul 12 03:06:02 2015 UTC,Also had to add a second parameter to the functions I'm calling... I don't understand why   self is the Application instance; wut is the event object created by Tkinter to give you information about how the listbox was selected. widget is not actually an attribute of the Application (note that you didn't assign self.widget anywhere).
learnpython,3cz2cs,redsedit,2,Sun Jul 12 02:10:16 2015 UTC,"But if it is, it returns the "" - Shortcut"" too, which is not what I want. I thought the ? makes the "" - Shortcut"" optional   It's precisely because you made it optional that it's doing this.  If the "" - Shortcut"" is optional, then that makes it legal for "".+"" to match everything except the .lnk at the end, with "" - Shortcut"" not matching at all, even though it could if "".+"" hadn't consumed everything.  But because "".+"" came first and is greedy, that's exactly what it's going to do.  Make "".+"" non-greedy with "".+?"" and you should get what you want.  That will cause it to backtrack after matching everything and consider matching less in order to let "" - Shortcut"" match.  As an aside, you really don't have to explicitly call re.compile() like that.  The RE module has a cache, so it's fine to call re.match() or re.search() directly even if it's in a loop.  And you can use the fact that re.match() always matches at the beginning to not have to write ^.  >>> filename = r'c:\first_launch\first_launch - Shortcut.lnk' >>> m = re.match(r'(.+?)(?: - Shortcut)?\.lnk$', filename, re.I) >>> m.group(1) 'c:\\first_launch\\first_launch'   I put the "" - Shortcut"" part in a non-capturing group ((?:...)) since you don't care about its contents."
learnpython,3cz2cs,Rhomboid,1 point,Sun Jul 12 02:47:52 2015 UTC,"Thanks. Changing the (.+) to (.+?) fixed it. This is the first time I've ever heard of a non-capturing group. Not really needed here, but still, another arrow in my quiver for the future. Thanks again.  The re.compile() is just that's how I learned how to do it and it makes (to me at least) the code more readable. But you are 100% correct."
learnpython,3cz2cs,ITS_NOT_HASHTAG,1 point,Sun Jul 12 03:10:41 2015 UTC,It's called an octothorpe
learnpython,3cyd9k,MaxwellSalmon,2,Sat Jul 11 22:08:45 2015 UTC,"The problem is with the variable background scope. When you enter background = blah you are creating a class-level variable meaning: background will be the same for any instance of the class, and if any instance changes it it, the change will happen for all instances.   Then when you call image = background in the create_image method, someone correct me if I'm wrong, the interpreter is looking for background in the global  scope.  To solve this problem you can create the background variable as an instance-level attribute using self.:  self.background = Photo...   and then use the instance-level attribute when assigning the image for create_image:  self.canvas.create_image(0, 0, anchor = 'nw', image = self.background)"
learnpython,3cyd9k,StaticFuzz,1 point,Sun Jul 12 00:20:50 2015 UTC,Thank you!
learnpython,3cyuh8,BadCustomerService,6,Sun Jul 12 00:51:17 2015 UTC,Run it on a computer that isn't turned off.  Like a $5/mo digital ocean account.
learnpython,3cyuh8,elbiot,3,Sun Jul 12 00:59:27 2015 UTC,Google app engine is great  And free
learnpython,3cyuh8,pipsqueaker117,1 point,Sun Jul 12 01:33:02 2015 UTC,But it requires a credit card that I do not have because I'm on vacation.
learnpython,3cyuh8,pipsqueaker117,7,Sun Jul 12 01:36:44 2015 UTC,"Lol, take a break from Reddit and kick back. The internet isn't going anywhere"
learnpython,3cyuh8,echocage,1 point,Sun Jul 12 01:38:59 2015 UTC,"I would highly recommend looking into github student pack if you're a student, it comes with 100$ digital ocean credit, and their cheapest server is 5$ a month"
learnpython,3cyuh8,AdvicePerson,1 point,Sun Jul 12 02:30:04 2015 UTC,How do you not have a credit card on vacation?
learnpython,3cyuh8,oldmanstatusachieved,5,Sun Jul 12 03:38:05 2015 UTC,"Cause Im 15, thats why."
learnpython,3cyuh8,Quteness,2,Sun Jul 12 03:38:56 2015 UTC,"I run some locally on my machine, but yeah, the other suggestions of using cloud based solutions is probably the way to go 90% of the time."
learnpython,3cxetk,oldmanstatusachieved,2,Sat Jul 11 17:06:45 2015 UTC,"2) if it runs too slow, profile it and fix the bottle neck.  Otherwise, don't worry.  But, it is a good idea to learn from those timeit comments on reddit, since if you know from the begining what and why certain idioms are preferred, you will be less likely to have to profile or consider fixing parts of your code."
learnpython,3cxetk,elbiot,1 point,Sat Jul 11 19:36:41 2015 UTC,"Thanks, this is helpful. I've seen a few benchmarking tools, but using timestamps to find bottlenecks seems pretty doable.  I've also used locust.io to test weaknesses in my flask applications."
learnpython,3cxetk,campenr,2,Sat Jul 11 20:57:10 2015 UTC,"1) I would recommend looking into the use of Docstrings in your code, see here for the relevant PEP. Then you can make use of tools such as Docutils to extract the Docstrings from your code, generating nice documentation. I personally find this feature very useful."
learnpython,3cxetk,campenr,1 point,Sat Jul 11 21:30:37 2015 UTC,"That sounds like a good idea, I frequently have multi-line comments. Thanks.  I've disliked using this before because I think it eats up a lot of vertical space in my code but maybe there's a way to minimize it in Atom?"
learnpython,3cxetk,04h,1 point,Sat Jul 11 21:46:52 2015 UTC,I've never used atom but it may very well collapse Docstrings. One way to find out :D
learnpython,3cxetk,04h,2,Sat Jul 11 22:01:21 2015 UTC,"Looks good!  ""corrected to follow pep8 rules"", but how about naming? Something like getMetaData isn't pep8-compliant. Also, maybe class? You know, shared data (attributepairs), binded methods (getMetaData, _getTitle_…) — seems reasonable to make a class. /u/elbiot explained it perfectly You about lambdas?"
learnpython,3cxetk,04h,1 point,Sun Jul 12 08:13:46 2015 UTC,"I've been scared of classes.  I don't use them frequently and don't have much practice so I've avoided them.  Sounds like a great time to start using them, thanks.  Also a bit about naming, I haven't been following those conventions apparently.  Linter didn't catch them and I've never actually read the PEP8 documentation.  This is useful thanks. Lambdas and one-liner iterators.  I use them from time to time, but would like to use them more. For loops with dictionaries are straightforward, but there has to be more of this type of code, right?"
learnpython,3cx2u9,princesspatches,2,Sat Jul 11 15:17:55 2015 UTC,"How to use Python to send emails from an email account   https://docs.python.org/3/library/email-examples.html for generating random sentences, look at random.choice.   How to create a bot using Python.   I'm not sure the precise definition of a bot, but in my experience it's the same as any other python script, except the input/output is automated, and they tend to be coded into a big while loop. Look into the time module here so you can control how often it sends emails.  Here's an example of a simple bot(I probably wouldn't call this a bot since there's not much real output/input) printing out randomized sentences:  import time import random  def generate_sentence():     prefix = random.choice(('Big','small','tiny'))     suffix = random.choice( ('idiot','placeholder','no more ideas'))     return 'Hey you {} {}'.format(prefix,suffix)  while True:     print(generate_sentence())     time.sleep(5)"
learnpython,3cx2u9,The-Mathematician,1 point,Sat Jul 11 15:48:50 2015 UTC,"This is very helpful. Thank you. The time interval is definitely key and not really something I had thought through yet.   I think I understand everything in the code you wrote and can definitely work from this. Is the while loop infinite, but only produces an output every 'time.sleep(5)' time units?  Thanks!"
learnpython,3cx2u9,The-Mathematician,3,Sat Jul 11 16:14:48 2015 UTC,"Yes, every time your program gets to time.sleep(x), it just sits at that line for x seconds doing nothing."
learnpython,3cx2u9,Tomarse,2,Sat Jul 11 16:24:23 2015 UTC,Checkout Yagmail.
learnpython,3cx2u9,Tomarse,1 point,Sat Jul 11 16:03:02 2015 UTC,"Great! Thank you. I definitely think I can use some of this. I'm not really familiar with Git Hub yet, so this will be a good introduction to using that as well."
learnpython,3cx2u9,pvkooten,2,Sat Jul 11 16:09:57 2015 UTC,"It's on pypi as well. But save yourself a bunch of time by getting pip. Then you can call for yagmail from the command line, and it will get all the dependencies as well (keyring, smtplib).  The only downside to yagmail is that it's too easy, so as a learning tool it's not so great."
learnpython,3cy8go,jmcwx,1 point,Sat Jul 11 21:25:05 2015 UTC,"You should look at what mesh grid does,  and then consider what a 2d array of pressures means in relation to that.  Look up resources on griding irregular data in scipy/matplotlib.  Hint, you're going to have to interpolate your pressure data."
learnpython,3cxf6r,Turin_Martell,4,Sat Jul 11 17:09:43 2015 UTC,"In Python 2.x, the former is called an old-style class and the latter is called a new-style class.  There are behavior differences, but they're not worth worrying about.  Always use new-style classes, they work much more consistently with the rest of the language.  Old-style classes are legacy baggage from the days of Python 2.1.  In Python 3.x, there is no difference at all.  Old-style classes are gone, and if the list of base classes is empty or missing, then it's the same as (object).  It's just another way that Python 3.x is simpler and more consistent, especially for beginners."
learnpython,3cxf6r,Rhomboid,3,Sat Jul 11 17:21:05 2015 UTC,"You can inherit from another object to get it's methods and properties.  Imagine two classes: Car and Ford. A ford is a car, a cat ain't a ford.  class car:     def get_wheels():         return 4  class Ford(car):     def manufacturer():         return ""Ford""  print(Ford().get_wheels())   This yields 4. Polymorphism and inheritance are very broad topics, which you should read up.  class Foo(object):   Is the same as without object, since all objects inherit from at least object."
learnpython,3cxf6r,DarkMio,1 point,Sat Jul 11 17:26:19 2015 UTC,"Is the same as without object, since all objects inherit from at least object.   This is not true in Python 2.x."
learnpython,3cy2rp,twbrand,2,Sat Jul 11 20:35:20 2015 UTC,list (''.join (data2))   Or just use the data from before you reformatted it (duh?)
learnpython,3cy2rp,elbiot,1 point,Sun Jul 12 01:35:56 2015 UTC,I wasn't using the previous data because I am going to be dealing with hexadecimal input and will be easier to manipulate in most cases with the sorted data.  Thank you for this code. This is exactly what I needed!
learnpython,3cy2rp,Rhomboid,1 point,Sun Jul 12 04:15:25 2015 UTC,Your code is unreadable.  Give a concrete example with actual data of what you're trying to do.
learnpython,3cy2rp,adamnew123456,1 point,Sat Jul 11 20:50:16 2015 UTC,"First - you can indent your code by adding an extra four spaces, which will prevent Reddit from rendering your code as Markdown:      code block:   It's a bit difficult to read in its current state."
learnpython,3cxy46,shakhaki,4,Sat Jul 11 19:54:00 2015 UTC,"You can use text editor like SublimeText, highlight the code you want and press tab.   You can also use Reddit Enhancement Suite highlight your code and press the code button which will add 4 spaces to all selected lines."
learnpython,3cxy46,wub_wub,1 point,Sat Jul 11 19:56:56 2015 UTC,I just downloaded it and oh man that was sooooo nice.
learnpython,3cxy46,Rhomboid,5,Sun Jul 12 04:55:34 2015 UTC,"Any decent text editor can indent code in a few seconds — select, tab, copy to clipboard.  You should never be manually pressing the spacebar."
learnpython,3cym44,pa1q,4,Sat Jul 11 23:30:03 2015 UTC,How would you solve it with pencil and paper?
learnpython,3cym44,elbiot,0,Sat Jul 11 23:32:24 2015 UTC,"would this work?  declare real mph declare real hour  display ""hour"", tab, ""distance traveled"" display ""__________________"" for hour = 1 to 5      set distance traveled = mph * hour      display hour, tab, distance traveled end for"
learnpython,3cym44,ghritt,0,Sun Jul 12 00:38:23 2015 UTC,"A simple method of printing a table:  values = [[1,2],[3,4],[5,6]] for value in values:     print(value)"
learnpython,3cxrkh,Koaty,1 point,Sat Jul 11 18:57:24 2015 UTC,Example code?
learnpython,3cxrkh,campenr,1 point,Sat Jul 11 21:57:45 2015 UTC,"It would really help to see code to understand how you're using the variable. If you use a class you could set it up in the init (or another method that sets up stuff for your class, to make it cleaner) as self.catanim and then access it via self.catanim in any other methods within that class."
learnpython,3cxrkh,cratervanawesome,-2,Sun Jul 12 01:11:48 2015 UTC,"My example solution is pretty generic.  It is usually easier if you post example code.  Anyways, here is my best guess.  You could declare catanim as a global which is usually frowned upon in Python.  global catanim  def update_animation():     global catanim     catanim += 1   You could also return the value from the function:  def update_animation(value):     value += 1     return value catanim = update_animation(catanim)"
learnpython,3cxrkh,__skrap__,3,Sat Jul 11 19:34:12 2015 UTC,avoid globals at all costs
learnpython,3cxrkh,campenr,4,Sat Jul 11 19:31:46 2015 UTC,No. global variables are almost never the answer.
learnpython,3cxr1i,keraneuology,2,Sat Jul 11 18:53:02 2015 UTC,"In the second code chunk you are looping over a string rather than a list of lines (strings) When you loop over a string the variable line will become ""a"" then ""b"" ...   try splitting cdata first.   for line in cdata.split('\n'):     ..."
learnpython,3cxr1i,whatsdoom,1 point,Sat Jul 11 19:09:14 2015 UTC,Thanks! I was hoping it was going to be something simple.
learnpython,3cxr1i,davidbuxton,2,Sat Jul 11 19:17:17 2015 UTC,"You can also loop over the lines of the response like so:  response = urllib2.urlopen('http://example.com') for line in response:     print line   The response is a file-like object, and looping over file-like objects gives you lines.  And if you want to keep a counter in the loop, the built-in enumerate function is your friend:  for count, line in enumerate(response):     print count, line   N.B. Count starts at 0."
learnpython,3cxr1i,Vaphell,2,Sat Jul 11 19:57:16 2015 UTC,"enumerate accepts optional param, which is the starting index."
learnpython,3cxr1i,cratervanawesome,2,Sat Jul 11 20:16:48 2015 UTC,"Splitting will totally work, but readlines() is the more pythonic way to do it. No need to write code to do something a library already did for you."
learnpython,3cxr1i,cratervanawesome,1 point,Sun Jul 12 01:36:57 2015 UTC,"I haven't come across that yet - I'm learning everything through coursera so aside from urllib and urllib2 everything I know is from chapters 1-7.  I googled up the readlines() and found this example  line = fo.readlines() print ""Read Line: %s"" % (line)   What does that % (line) do?  Also, how are the read lines actually stored and accessed later? ie: how do you actually do things with them?"
learnpython,3cxr1i,cratervanawesome,2,Sun Jul 12 14:20:16 2015 UTC,"Readlines just makes cdata a list instead of a string. I ran your code with just that instead of read, changed nothing else and it works perfectly."
learnpython,3cwbjs,Elthran,2,Sat Jul 11 09:07:46 2015 UTC,"You haven't defined the factorial(1), so your function will never yield anything. max(1,factorial(1)) will give you max(1, factorial(0)), max(1, factorial(-1)) and further until you run out of stack.  Why exactly you decided you need max()?  If you want a way to fit if into a lambda expression, you can do something like factorial= lambda x: 1 if x < 2 else x * factorial(x-1). The A if B else C is a python version of ternary operator and could be found in lambdas or anywhere when you want an expression, not a statement like usual if X:"
learnpython,3cwbjs,x3al,1 point,Sat Jul 11 09:26:09 2015 UTC,"Also, you can use the Y combinator if you want to remove the name of function from your lambda."
learnpython,3cwbjs,x3al,1 point,Sat Jul 11 09:33:20 2015 UTC,I never heard of that before and decided to look it up. I didn't quite understand it. Here's the code for factorial:   fac = lambda f: lambda n: (1 if n<2 else n*f(n-1))   Would you be able to explain what the advantage of doing this is vs. the solution that was proposed?
learnpython,3cwbjs,abrarisland,3,Sat Jul 11 17:46:47 2015 UTC,"The only point of the Y combinator is to make a recursive anonymous function in a language without named functions, which is not practical in common programming languages. But, on the other hand, there is zero point in making a recursive factorial in almost any language: it's slow and prone to stack overflow (unless it's a tail call optimized) so I thought it's a good concept to know about the lambda calculus. The recursion has practical applications, sure, but the factorial is not one of them."
learnpython,3cwy4i,bob_cheesey,1 point,Sat Jul 11 14:30:00 2015 UTC,Here:  l = task.LoopingCall(main.run()) l.start(loop_int)   is your new class one and here:  l = task.LoopingCall(do_work) l.start(LOOP_INTERVAL)   is your old one. Note what l is being set to. What is being passed to task.LoopingCall in these two scripts? Note: It's not the same thing.
learnpython,3cwy4i,The-Mathematician,1 point,Sat Jul 11 15:26:21 2015 UTC,"Right, I'm with you - I corrected the call to l = task.LoopingCall(main.run) and things perform as expected. That being said, I'm not entirely clear on the difference. I thought it through and it's my understanding that the parentheses cause the main.run function to be executed, whereas without them means the function is only referred to - is this right?"
learnpython,3cwy4i,The-Mathematician,2,Sat Jul 11 17:58:27 2015 UTC,"Yes exactly. The syntax f() causes the function to run, but just f refers to the method or function object. So what happened was the main.run() was running, and returning None (an object) which was being passed instead of the function object. Then that was causing an error because later it tries None() and gets an error because None isn't callable."
learnpython,3cxlue,Nesotenso,2,Sat Jul 11 18:07:59 2015 UTC,nevermind. typo caused the error.
learnpython,3cv1w2,n-d-j,10,Sat Jul 11 00:32:49 2015 UTC,Flask
learnpython,3cv1w2,Doormatty,11,Sat Jul 11 00:40:48 2015 UTC,"To expand on Flask, since I feel their documentation on getting started can be lacking, I like to refer to Miguel Grinberg's 'Mega-Tutorial'"
learnpython,3cv1w2,tsumnia,2,Sat Jul 11 00:49:56 2015 UTC,"Thanks! I looked around on StackOverflow + Github, but never came across this."
learnpython,3cv1w2,jpfau,7,Sat Jul 11 01:24:59 2015 UTC,"Flask is so chill, you're gonna love it."
learnpython,3cv1w2,joshgrib,4,Sat Jul 11 01:43:16 2015 UTC,"I agree, I just did the same type of thing a few weeks ago and flask is nice"
learnpython,3cv1w2,RBVision,2,Sat Jul 11 03:58:44 2015 UTC,"Sorry for this noob-question, but should I see flask as an simple alternative to django? Can you explain the difference between both?"
learnpython,3cv1w2,jpfau,1 point,Sat Jul 11 10:17:17 2015 UTC,"Django has a steeper learning curve, and I haven't really used it. Flask is lightweight and quick to deploy. This would display a Hello World in your browser:  from flask import Flask app = Flask(__name__)  @app.route(""/"") def hello():     return ""Hello World!""  if __name__ == ""__main__"":     app.run()   If anything it makes creating RESTful API extremely easy."
learnpython,3cv1w2,BitBotRobot,-3,Sat Jul 11 16:47:02 2015 UTC,Is Flask BSD licensed?
learnpython,3cv1w2,useryourname,3,Sat Jul 11 04:22:54 2015 UTC,"Also, if you want to deploy it easily, try pythonanywhere or c9.io."
learnpython,3cv1w2,changed_perspective,6,Sat Jul 11 04:26:39 2015 UTC,"I am going to plug Django, I have been playing around with it and I find it quite fun"
learnpython,3cv1w2,dood31251,1 point,Sat Jul 11 03:37:32 2015 UTC,wooey would probably be the fastest way. It's a flask webapp.
learnpython,3cxbkt,Depth_Magnet,1 point,Sat Jul 11 16:38:18 2015 UTC,Use Scrapy with its DjangoItem class to directly create and save Django models from your crawler. Then use Django Rest Framework to put an API on top of that.
learnpython,3cxbkt,dempseye,1 point,Sat Jul 11 17:43:40 2015 UTC,Maybe this will help you - https://www.airpair.com/python/posts/buildredditapi?utm_source=Python%20Weekly%20Newsletter&utm_campaign=f383eb7c0d-Python_Weekly_Issue_197_June_25_2015&utm_medium=email&utm_term=0_9e26887fc5-f383eb7c0d-312743461
learnpython,3cxbkt,__skrap__,1 point,Sat Jul 11 19:41:09 2015 UTC,"you might want to take a look at scrapyrt: https://github.com/scrapinghub/scrapyrt  ""Scrapyrt (Scrapy realtime). HTTP server which provides API for scheduling Scrapy spiders and making requests with spiders.""  But if you want to use your own scripts with Django, I would recommend Django Rest Framework."
learnpython,3cxbgb,Elthran,2,Sat Jul 11 16:37:20 2015 UTC,"You are printing the key from the dict, you are wanting the value associated with the key (think of a dict as a key value pair).  There are several ways to get the value:  for alloy in alloys:     print(alloy, alloys[alloy])     # alternate using dict method     print(alloy, alloys.get(alloy))  # if you want the key and value I recommend this option # items() is a method that iterates over the key, value # as a tuple (key, value) for alloy, fraction in alloys.items():     # alloy is the key, fraction is the value     print(alloy, fraction)"
learnpython,3cxbgb,__skrap__,1 point,Sat Jul 11 17:08:57 2015 UTC,Thank you so much!!!
learnpython,3cx32e,ErikRK,1 point,Sat Jul 11 15:20:03 2015 UTC,"I feel like this is more of a problem in the ""learn_quantummechanics"" department than ""learn_python"". Maybe you'd have more luck in a sub for quantum mechanics, chemistry, physical chem., theoretical chem etc. To me it seems unlikely that quantum chem and python skillsets would overlap (hurr durr) as I imagine that numerically intense stuff like that is more likely to be carried out in Fortran or C/C++ (talking out of my ass here, might be totally wrong, I remember nothing from my physical chem classes)  Good luck"
learnpython,3cx32e,Mcpoyle_Something,1 point,Sat Jul 11 19:16:34 2015 UTC,it seems unlikely that quantum chem and python skillsets would overlap   You'd be surprised.
learnpython,3cx19y,dmv1975,2,Sat Jul 11 15:03:00 2015 UTC,Here's what I do:  leeroy@dixiemay~ mkdir project leeroy@dixiemay~ cd project leeroy@dixiemay~/project python -m venv venv leeroy@dixiemay~/project ln -s venv/bin/activate leeroy@dixiemay~/project . ./activate  (venv) leeroy@dixiemay~/project pip install ...
learnpython,3cx19y,leeroyhightechnology,1 point,Sun Jul 12 23:30:51 2015 UTC,"Cool, thank you for your straightforward answer."
learnpython,3cx19y,leeroyhightechnology,2,Mon Jul 13 00:23:23 2015 UTC,Just remember that you need to run . ./activate each time you enter the project directory in a new shell session.
learnpython,3cx19y,Rhomboid,1 point,Mon Jul 13 00:32:29 2015 UTC,"I cd into whatever/bin and run pip install from there, right?    Don't do that.  You should activate the virtual environment by sourcing the appropriate 'activate' file for your shell.  That sets up your PATH properly so that you can type just pip, and it also modifies your prompt.  Virtualenvwrapper was doing that for you before."
learnpython,3cx19y,Rhomboid,1 point,Sat Jul 11 16:41:47 2015 UTC,So how do I do that now?
learnpython,3cw0ar,bigt252002,2,Sat Jul 11 06:17:43 2015 UTC,"You could write a newline ('\n') after each one. Or add the newline to the read input before writing it. Or do all the inputs and join them together with newlines, then write the joined result. Or collect the inputs in a list and use the list in writelines(). Or..."
learnpython,3cw0ar,stebrepar,2,Sat Jul 11 06:42:44 2015 UTC,so add fo.wite('/n') in between each? or is there a better way I'm not thinking of??
learnpython,3cw0ar,ucshadow,5,Sat Jul 11 06:44:36 2015 UTC,"fo.write(raw_input(""Enter name: "") + ""\n"")"
learnpython,3cw0ar,Sean1708,2,Sat Jul 11 06:47:36 2015 UTC,That still isn't splitting it in the actual text file. Just adds the /n at the end of each section. Am I missing something?
learnpython,3cw0ar,Sean1708,4,Sat Jul 11 06:56:33 2015 UTC,"Yes, you should be putting a back slash (\n) not a forward slash (/n)."
learnpython,3cw0ar,x3al,2,Sat Jul 11 11:33:46 2015 UTC,I knew I was going to make some dumb mistake! Thank you for helping me out!
learnpython,3cv0jw,oldirtyjappy,2,Sat Jul 11 00:21:24 2015 UTC,"Step 0) the server runs linux.  If it's just for yourself, use ssh (putty is the windows client).  If it's for others, use flask. Each function needs a form to accept arguments and a return html (jinja for flask will render python objects to html for you, given a template).  You could write a javascript terminal that communicates via ajax, but that isn't trivial.  Alternatively, a web based ssh may work: https://en.wikipedia.org/wiki/Web-based_SSH  seems hell of insecure though if it's public facing.  You may be able to wrangle this to do what you want, but it runs on the client's browser, not your server: http://pypyjs.org/index.html"
learnpython,3cv0jw,elbiot,1 point,Sat Jul 11 02:41:12 2015 UTC,or bottle.py is pretty newbie friendly.
learnpython,3cv0jw,mpbikeman,-4,Sat Jul 11 11:42:27 2015 UTC,Run an iPython notebook server
learnpython,3cvgpi,UpBoatDownBoy,11,Sat Jul 11 02:48:56 2015 UTC,"Suppose you are implementing a class that you want to act like a number via operator overloading.  So you implement __add__ in your class, and now expressions like myobj + 4 can work as you want and yield some result.  This is because myobj + 4 is interpreted as myobj.__add__(4), and your custom method can do whatever it means to add 4 to your custom class.  However, what about an expression like 4 + myobj which is really (4).__add__(myobj)?  The 4 is an instance of a Python built-in type and its __add__ method doesn't know anything about your new type, so it will return a special value NotImplemented.  (The interpreter recognizes this special value coming from __add__ and raises a TypeError exception which kills your program, which is the behavior you'd actually see, rather than the special value being returned.)  It would suck for operator overloading if myobj + 4 was valid but 4 + myobj was invalid.  That's arbitrary and restrictive — addition is supposed to be commutative.  Enter __radd__.  Python will first try (4).__add__(myobj), and if that returns NotImplemented Python will check if the right-hand operand implements __radd__, and if it does, it will call myobj.__radd__(4) rather than raising a TypeError.  And now everything can proceed as usual, as your class can handle the case and implement your behavior, rather than the built-in type's __add__ which is fixed and doesn't know about your class.  The same applies for the other operators that take two arguments (the binary operators.)"
learnpython,3cvgpi,Rhomboid,2,Sat Jul 11 03:20:04 2015 UTC,"That makes complete sense, thank you!"
learnpython,3cvgpi,esbenab,1 point,Sat Jul 11 03:28:22 2015 UTC,Since addition is commutative why even have _radd_ it would seem to make more sense to just have _add_
learnpython,3cvgpi,Adreik,3,Sat Jul 11 09:38:59 2015 UTC,"Multiplication is commutative with real numbers too, no? So you might as well drop rmul too. But say you were trying to implement, for example, matrices, in which case you'd want to check the type of the thing being multiplied and do different things if it's a float/integer/whatever else compared to if it is a matrix. And AB is not necessarily the same as BA if A and B are matrices.  If you were trying to make something where you want to use the + operator for an operation that is not commutative, you want different things for radd and add."
learnpython,3cvgpi,esbenab,1 point,Sat Jul 11 10:09:01 2015 UTC,"Ahh I see, thank you."
learnpython,3cvgpi,Adreik,3,Sat Jul 11 10:10:10 2015 UTC,"You don't even have to make a new class to find an example of non-commutative addition;the use of the plus operator when working with lists and text, for example, is not commutative, and with very good reason:  [1]+[2] != [2]+[1]  'a'+'b' != 'b'+'a'"
learnpython,3cvgpi,Rhomboid,1 point,Sat Jul 11 10:31:24 2015 UTC,"In the example, the class was trying to behave like numbers where addition is commutative, but that's not always the case.  String, list, and tuple concatenation also uses + but it's not commutative there, so a class that was trying to behave like one of those would need to know whether it was on the left hand side or the right hand side of the +.  And you can always invent completely new types with new meanings, for example someone might want to write an image class where img1 + img2 layers the two images with alpha blending, and in that case the order would also matter, because one image is conceptually behind the other.  And the same applies for the other operators."
learnpython,3cvgpi,kalgynirae,1 point,Sat Jul 11 15:22:04 2015 UTC,"Imagine you've defined a type Foo and it makes sense to be able to add an instance of Foo (we'll call it f) and an integer together. If you write f + 5, Python will call f.__add__(5). But if you write 5 + f, Python will call (5).__add__(f), which will return an error (because integers don't know how to add themselves to instances of Foo). So, after (5).__add__(f) fails, Python will then try f.__radd__(5).  You need to define the normal and the reflected versions separately when the operation is not commutative (for example, string concatenation: ""5"" + ""6"" is not the same as ""6"" + ""5""). If the operation is commutative, you can just use the same function for both, like __radd__ = __add__ (after you've defined __add__, of course!)."
learnpython,3cvgpi,kalgynirae,1 point,Sat Jul 11 03:26:33 2015 UTC,"So if I'm adding fractions and my radd covers a fraction + an instance, is both my code for add and radd going to be the same?  def __add__(self, other):     newnum = self.num * other.den + \                  self.den * other.num     newden = self.den * other.den     return Fraction(newnum, newden)  def __radd__(self, other):     newnum = self.num * other.den + \                  self.den * other.num     newden = self.den * other.den     return Fraction(newnum, newden)"
learnpython,3cv1as,mpbikeman,2,Sat Jul 11 00:28:05 2015 UTC,"I kinda ended up giving up at the webapp part. I felt so lost, so instead I took up flask, and I'm glad I did."
learnpython,3cv1as,Dracunos,1 point,Sat Jul 11 07:57:18 2015 UTC,How is flask working for you?  I looked into it and it looked promissing as well.
learnpython,3cv1as,Dracunos,1 point,Sat Jul 11 11:35:53 2015 UTC,"I use Miguel Grinbergs tutorial, which got pretty heavy pretty quick for me, but still a great flask tutorial. I haven't gone all the way through it yet, but I learn enough to get my site working, couple games, simple login/registration.  The big help was that I used pythonanywhere.com. They have free accounts and will host your python site for free with limitations. All you have to do is make an account, and a few clicks and it will set up for you an online 'hello world' Web page, which you can really easily build up from there, highly suggested. You can use any of the more popular Web dev frameworks, it will set up whichever one you want. Got flask running so painlessly and free, can't possibly have asked for more"
learnpython,3cv1as,callmelucky,-3,Sat Jul 11 14:37:47 2015 UTC,"Alternatively, instead of using LPTHW use literally any other tutorial. That thing is total crap."
learnpython,3cv7nf,Northstat,3,Sat Jul 11 01:24:28 2015 UTC,You can run any shell command by prefixing it with !.  You can even assign the output to a variable.  There is also a cd magic for changing the current working directory (which can't be run as a shell command.)
learnpython,3cv7nf,Rhomboid,2,Sat Jul 11 02:14:23 2015 UTC,"Yes! It's awesome.  Edit: this is ipython only, btw."
learnpython,3cv7nf,elbiot,1 point,Sat Jul 11 02:28:15 2015 UTC,"This is especially nice, super quick."
learnpython,3cv7nf,terminak,2,Sat Jul 11 02:32:05 2015 UTC,"If I understand correctly, you just want to run some shell commands while you are using the python interpreter?   I'm not aware of a builtin way to do that, but you can press ctrl-z to suspend the interpreter, do your stuff and type ""fg"" to return, maybe that'll cover you?   I usually just run in tmux, that way I can have as many shells and python interpreters and editors etc as I want :)"
learnpython,3cv7nf,leeroyhightechnology,1 point,Sat Jul 11 01:41:50 2015 UTC,Good point. I should use tmux more.
learnpython,3cv7nf,elbiot,1 point,Sat Jul 11 02:34:47 2015 UTC,">>> sh = type('',(),{'__repr__':lambda _:__import__('os').system('bash')*''})() >>> sh      [leeroy@dixiemay ~]$ exit  >>>"
learnpython,3cv7nf,leeroyhightechnology,1 point,Sat Jul 11 01:42:45 2015 UTC,It's funny that you know this and not the ipython !
learnpython,3cv7nf,elbiot,2,Sat Jul 11 02:43:20 2015 UTC,"Ha. Yeah, I never liked ipython much. I'd rather just use a lightweight startup script whose custom functionality is all familiar to me."
learnpython,3cv7nf,leeroyhightechnology,1 point,Sat Jul 11 04:22:23 2015 UTC,"Whoa.  Really?  You don't like tab completion and searching history from past sessions, and history completions with up-arrow? %timeit?"
learnpython,3cv7nf,elbiot,2,Sat Jul 11 04:44:43 2015 UTC,I have all that and more. It wasn't very hard to write because readline already does most of that stuff. The difference is I don't have any magic non-python syntax.
learnpython,3cv7nf,leeroyhightechnology,1 point,Sat Jul 11 05:19:49 2015 UTC,Is your setup on github?
learnpython,3cut4n,Didgeridoox,2,Fri Jul 10 23:17:52 2015 UTC,"Here's how I'd do it:  import requests from bs4 import BeautifulSoup  url = 'http://www.fangraphs.com/statss.aspx?playerid=10954&position=P' soup = BeautifulSoup(requests.get(url).text)  for row in soup.select('#SeasonStats1_dgSeason11_ctl00 tr'):     cols = [elem.get_text(strip=True) for elem in row.find_all('td')]     if not cols: continue      if cols[0] == '2015':         print(cols[0], cols[1], cols[-1])   This prints:  2015 Depth Charts 2.6 2015 Steamer 2.2 2015 Fans (29) 3.2 2015 ZiPS 3.1 2015 Mets 3.1 2015 ZiPS (R) 1.9 2015 Steamer (R) 1.4 2015 Depth Charts (R) 1.5   Some of those are from hidden rows that are present in the markup but aren't displayed; I'm not sure which of these you actually care about.  Anyway, the point is that cols contains the column values and you can do whatever you want with that.  The line if not cols: continue is to skip over the header row, which has no <td> elements and returns an empty list."
learnpython,3cut4n,Rhomboid,1 point,Sat Jul 11 01:52:36 2015 UTC,"Thank you, this works perfectly! I think I'm just going to skip over the hidden rows, so I just added  if row.get('class') is not None and ""grid_projections_hide"" in row.get('class'):     continue   right after the ""for row in ___"" line. Now I have to see if I can find a way to search Fangraphs automatically, since the URLs are somewhat cryptic."
learnpython,3cusq3,theinevitable,3,Fri Jul 10 23:14:36 2015 UTC,echo $PATH which python which python3   before and after you do the source command.
learnpython,3cusq3,Justinsaccount,1 point,Fri Jul 10 23:36:35 2015 UTC,before:  $ which python /Library/Frameworks/Python.framework/Versions/2.7/bin/python  $ which python3 /Library/Frameworks/Python.framework/Versions/3.4/bin/python3  $ echo $PATH /Library/Frameworks/Python.framework/Versions/3.4/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Postgres.app/Contents/Versions/9.4/bin   after:  $ echo $PATH /Users/theinevitable/Documents/python/test/venv/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Postgres.app/Contents/Versions/9.4/bin  $which python /Users/theinevitable/Documents/python/test/venv/bin/python $ which python3 /Library/Frameworks/Python.framework/Versions/3.4/bin/python3
learnpython,3cusq3,jerseysucks182,1 point,Sat Jul 11 02:52:39 2015 UTC,"well, huh, that's weird as hell. So there is a 3.4 in /bin/, but it is somehow using the one in library/frameworks?  here are the contents of test/venv/bin... both 3.4 and 2.7 show up:  $ cd bin $ ls activate        easy_install        pip2.7          python3.4 activate.csh        easy_install-2.7    python          wheel activate.fish       pip         python2 activate_this.py    pip2            python2.7"
learnpython,3cusq3,jerseysucks182,2,Sat Jul 11 04:39:16 2015 UTC,"Deactivate your virtual environment and run the command 'virtualenv --help'. Look for the -p option, and in the description, it will say what version of python will be used if -p isn't used. IIRC, -p is looking for just the interpreter to use, not the actual path to it. Try the command 'virtualenv -p python3.4 venv` and see if things look better. The version of python/pip you used to install virtualenv will be the version virtualenv defaults to using. If I were a betting man, I'd say your machine came with python2.7 installed, which is what you probably installed virtualenv with.  On a related note, if you are playing with virtualenvs, take a look at virtualenvwrapper; it makes managing your virtualenvs just a tad bit easier."
learnpython,3cvzch,Hallelujah10,1 point,Sat Jul 11 06:05:17 2015 UTC,"First off, welcome to the world of programming! I'm going to assume you're new here, because this is kind of a newbie question.  This is what /r/learnprogramming suggests for git101.  To cover some basic things: Git is a program that does version control. Github is a website where you can conveniently store git repos.   If you are the type of person who just wants it to work (and are running windows) https://windows.github.com/ is pretty much the way to go."
learnpython,3cvzch,usernamedottxt,1 point,Sat Jul 11 06:27:28 2015 UTC,"I use this sublime text package to upload small single-file scripts to gist.github.com and I use the Github app found at mac.github.com or windows.github.com for uploading projects.  The Github app just needs to know the location of the project, i.e. the path to the folder containing the .git folder."
learnpython,3cvzch,jeans_and_a_t-shirt,1 point,Sat Jul 11 07:06:28 2015 UTC,That is the problem. I don't have  folders. I just have one simple script. That is not a solution or something with lot of files. I am trying to upload it from my browser
learnpython,3cvzch,jeans_and_a_t-shirt,2,Sat Jul 11 07:22:57 2015 UTC,"In that case you can copy the script text and paste it into the text box at gist.github.com.  With this method you don't need to initialize a git repository for the code.  You can also edit it later in the web editor and see past revisions.  If you want the file(s) to show up under a project, you can create projects in your profile and add files via the browser too, but you need to initialize it via the terminal or a git application."
learnpython,3cvzch,sathyabhat,1 point,Sat Jul 11 07:35:37 2015 UTC,"Create a folder for all your scripts. Or create a for for each script (I do this, even for a 10line script)."
learnpython,3cvzch,04h,0,Sat Jul 11 12:41:59 2015 UTC,What have you tried? Did you visit https://help.github.com? Did you read about creating repos?
learnpython,3cs93d,nyamand,10,Fri Jul 10 10:34:50 2015 UTC,"Yes! I took this course as an undergraduate at MIT as a sophomore chemistry major who'd never programmed before. I switched my major, now have a masters in CS, a good job, and as a TA I wrote a good portion of the version of 6.00x that's now on edX, including the automatic graders and infrastructure for them. You can totally do it! :D"
learnpython,3cs93d,robotsari,2,Fri Jul 10 17:51:53 2015 UTC,Thanks for taking the time to reply! I'm glad we have access to such good FREE information online
learnpython,3cs93d,robotsari,4,Fri Jul 10 18:15:07 2015 UTC,"One thing I will mention about 6.00x is that it's meant for MIT undergraduates - that means it is fast and somewhat difficult. That alone shouldn't intimidate you - I think anyone can do it. The problem is that MIT undergrads come into MIT with at least pre-calculus completed, and are required to take two semesters of calculus once on campus.  So, the class assumes that you are extremely comfortable with math, and can pick up something like the idea behind compound interest relatively quickly.  In teaching 6.00x on edX, I found that the pace of the course, while challenging, didn't intimidate many. However the prolific use of math did. I think if you know that going into it, it's helpful to be aware of. It's ok if you don't remember the quadratic formula or how to do compound interest - poke around in the forums and get help from others."
learnpython,3cs93d,__baxx__,3,Fri Jul 10 21:14:11 2015 UTC,"Answers like this confuse the hell out of me   I think anyone can do it.    Oh OK, cool   the class assumes that you are extremely comfortable with math   Wait what?  I'd imagine the first statement (anyone) wouldn't cover the second (extremely prolific with maths). I feel posts like this can confuse more than they help, perhaps if you supported statements with examples, screenshots of what you mean it would be clearer.   Cheers"
learnpython,3cs93d,freakzilla149,1 point,Fri Jul 10 23:07:07 2015 UTC,"I'd go with the first statement. I'm one of those people who are uncomfortable with math, I didn't finish my secondary education so my maths is terrible*, but about a dozen hours on Khan Academy was all I needed to be able to tackle this course up to now and not get flustered by the math. In any case, most of it provided for you, you just need to be able to read and translate it into code.  *By terrible I mean couldn't even tell you what quadratic equation is let alone solve it."
learnpython,3cs93d,__baxx__,1 point,Sat Jul 11 09:16:46 2015 UTC,"Right fair, nice one for the input :) I might have a look if I get chance"
learnpython,3cs93d,robotsari,1 point,Sat Jul 11 09:21:43 2015 UTC,"Glad to hear that Khan Academy helps! I always steer users in the forms to Khan Academy, but I think we were told that we couldn't link to Khan Academy directly from the courseware because we don't have a partnership with them, or something. Sigh."
learnpython,3cs93d,robotsari,1 point,Mon Jul 13 12:36:31 2015 UTC,"baxx - that's a fair point and I'm sorry to be confusing. I really do think anyone can do it, but I think it's a bit unfair to say that without qualifying that it has a bit of maths in it, and if you are rusty on math or math gives you panic attacks, this may not be the best intro course for you. Similarly, if you're unaware that the course is pretty fast-paced, it could lead you to think that you're not good at programming - when in fact, the course was just going too fast for you. I want everyone to learn to program who wants to, and I don't want people to get needlessly discouraged, because they fail at a course i said ""anyone can do"", for other reasons (math panic, too fast paced).  I'm sensitive to this because my mom FREAKS THE FUCK OUT when she experiences math or numbers of any kind. I've explained programming to her and she's written a few programs (hangman and some other word games), but she literally had a panic attack when we had to do one thing with numbers when programming a card game (you have to calculate how many cards to draw...). I would definitely feel bad if someone came to the course and saw the warm up problem to ""use the quadratic equation"", freaked out (""omg I failed algebra!""), dropped out, and then concluded they could never program."
learnpython,3cs93d,__baxx__,1 point,Mon Jul 13 12:35:09 2015 UTC,"I really do think anyone can do it, but I think it's a bit unfair to say that without qualifying that it has a bit of maths in it, and if you are rusty on math or math gives you panic attacks, this may not be the best intro course for you.   Yeah that's fair - but I still think that these things are so crazily broad that the text doesn't mean anything without an example or two. One persons idea of rusty might be brushing up on cross multiplying fractions whereas someone else might think of differentiation. Without some kind of example its impossible for a reader to know. I get this is a problem with language in general, but if it can be made clearer with an example it might as well be imo.   I want everyone to learn to program who wants to, and I don't want people to get needlessly discouraged, because they fail at a course i said ""anyone can do"", for other reasons (math panic, too fast paced).   Absolutely - and I feel as though better communicating what's meant at particular points is an important part for people to understand the requisites. It should be OK for people to phrase a course in a manner that makes some people feel that they can't do it, because that's probably the case. Instead there appears to be a constant trend of telling everyone they can do anything, when in fact they can't. With better information it might be that they realize they need to brush up on math for a few months prior to the course or whatever. I think this is a better approach than the other, but maybe that's just me.    I don't mean to be some mega pedant here - I find these things interesting and the problem of everything being presented as an option for everyone (when it isn't really) is one that I often see. I get that course want to have more people join them, and that no one wants to scare people off, but some things just need to be in place first (and stated) for all to benefit.  cheers :)"
learnpython,3cs93d,robotsari,1 point,Mon Jul 13 12:53:14 2015 UTC,"OK so concretely, the course asks you to:   Calculate compound interest Program the quadratic equation (gives you the formula on what it is, you have to translate it to code) Generally be comfortable with basic algebra (assigning variables within an equation and what that represents)   The latter part of the course introduces statistics and graphing statistics. Up front, I had NO training in statistics before I took this course. This part of the course is challenging for people who don't know stats but it is not impossible, not by a long shot. However, the stats unit expects:   You are comfortable understanding how to read data off a graph You are comfortable taking data and producing a graph, and knowing how to interpret a graph You are comfortable with algebraic equations; statistics are generally represented as algebraic equations.   I think that's about all the math the course expects of you. If you took algebra in middle or high school I would expect that to be sufficient.  That said if algebra was 10 years ago, you should go into the course prepared to spend a bit of extra time brushing up on Khan Academy, asking questions in the forums, etc."
learnpython,3cs93d,doob10163,1 point,Mon Jul 13 13:01:44 2015 UTC,"Hello,   I started learning compsci by following 600.1 and then 2. They were really excellent, thank you for all of your work. Do you have any recommendations on other free resources in which I can continue my education to simulate a real college degree?"
learnpython,3cs93d,pepsivanilla93,2,Fri Jul 10 22:27:51 2015 UTC,"Google ""MOOC"". It'll give you a bunch of links like MIT opencourseware, coursera, edx, etc."
learnpython,3cs93d,robotsari,1 point,Fri Jul 10 23:51:38 2015 UTC,"It depends a lot on what you want to learn. Here's a list of courses on CS on edX: https://www.edx.org/course?subject=Computer+Science  CS50x from Harvard is another intro level class, but introduces a few new languages. Everyone I know who took this class loved it, so I would recommend it.  I can't vouch for any of the courses as I'm not familiar with them. However, there are courses on Java, HTML5, mobile development and more.   This course looks promising: https://www.edx.org/course/paradigms-computer-programming-louvainx-louv1-1x-0#.VBBX97xdUnQ - it has a follow on course that looks more advanced, too: https://www.edx.org/course/paradigms-computer-programming-louvainx-louv1-2x-0  This course is finished but perhaps worth poking around in, if you are mathematically inclined: https://www.edx.org/course/li-lun-ji-suan-ji-ke-xue-ji-chu-pekingx-04830260x I loved theoretical compsci in college, but others felt like it was pulling teeth.  I hope that helps! The advice to simply google around and checkout courses on opencourseware, Coursera, Udacity, and more is a great idea. I think Udacity has some programs designed to teach you specific marketable CS skills."
learnpython,3cs93d,BAMF_3,8,Mon Jul 13 12:46:08 2015 UTC,I think a foundational course like this will have much better long term value than the usual recommendations such as learn python the hard way.  It looks like an intro course so there should be no previous programming experience necessary.  The thing that throws a lot of people about computer science classes and degree programs in general is the focus on theory and math (probably won't apply here) versus nuts and bolts programming.   It should be a good foundation regardless of what language(s) you end up programming with.
learnpython,3cs93d,pepsivanilla93,1 point,Fri Jul 10 11:01:28 2015 UTC,"Having watched the first lecture I can see what you mean, I looked at some other online lessons but this is giving a more grounded introduction in to programming in general using Python as the language.  I must say so far I'm impressed knowing why and how it should work. I looked over at the final exam and thought well if by the end of this I'll be able to read and understand how a script works it has to be a good start.  doing the other online lessons I'll have a better understanding rather than ""just do it like this I won't explain why but just know that's how it should be done"" that I've seen and been left confused.  Complete programming noob here I'm guessing to others this might seem a pointless course."
learnpython,3cs93d,pepsivanilla93,2,Fri Jul 10 11:13:27 2015 UTC,"I'm taking Harvard's CS50 right now and it's an intro to comp sci and well. If you haven't checked it out yet, I really like it so far. I hope to have a shotgun spread of knowledge afterwards rather than just a hole on a target like you'd get with a programming book."
learnpython,3cs93d,pepsivanilla93,1 point,Fri Jul 10 23:49:28 2015 UTC,"I will have a look at this course as well,  could you tell me dose it also use Python as the taught language during this course?"
learnpython,3cs93d,pepsivanilla93,2,Sat Jul 11 08:40:23 2015 UTC,It actually uses the C programming language.
learnpython,3cs93d,pavlaki,1 point,Sat Jul 11 12:23:49 2015 UTC,Ooo thanks something to keep Im mind if I decide to learn C
learnpython,3cs93d,freakzilla149,1 point,Sat Jul 11 12:24:59 2015 UTC,"Yep. I like it cause arduino programs in C. I forgot you wanted a course for python, oops."
learnpython,3cs93d,robotsari,1 point,Sat Jul 11 13:21:27 2015 UTC,Nah don't get me wrong I might one day decide to try out C it's a good place to start :)
learnpython,3cs93d,kingkayvee,1 point,Sat Jul 11 13:24:48 2015 UTC,I'm finding it very accessible after learning the basics of python. And it's a really fun class with a very entertaining teaching method.
learnpython,3cs93d,toodim,2,Sat Jul 11 15:09:25 2015 UTC,"Yeah im loving it so far, managed this attempt after lecture 2 of the Python version http://pastebin.com/QGfBwdjG"
learnpython,3cs93d,chicka-deedeedee,7,Sat Jul 11 16:13:58 2015 UTC,"I took this course about a year and a half a ago which looks like pretty much the same course: https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-0  It was an excellent course and really taught me the fundamentals well. After I finished, I finally felt like I was on my way to becoming a programer."
learnpython,3cs93d,chicka-deedeedee,2,Fri Jul 10 12:08:00 2015 UTC,"Seems to have the same lecturer, I'm wondering if they are the same course. Either ways I'm going to enrol!"
learnpython,3cs93d,MrRiddell,1 point,Fri Jul 10 12:12:41 2015 UTC,"New lecturer, Eric Grimson. Very good."
learnpython,3cs93d,chicka-deedeedee,2,Fri Jul 10 13:10:42 2015 UTC,"Agreed. I think Prof Grimson is a bit better online than John Guttag is; he takes a bit more time to speak and explains the fundamental concepts in more detail, which is useful when you can't interrupt with a question. However they're both great professors. Prof Guttag wrote most of the course textbook and designed the course; he really cares about getting people who have never programmed up and running."
learnpython,3cs93d,freakzilla149,1 point,Fri Jul 10 21:11:31 2015 UTC,"Same course, and the interactive aspect will be much more helpful than anything! I highly recommend you sign up for the next course offering.  Until then, I would recommend doing something like Codecademy just to learn some of the general syntax. You won't get much more out of it than that, but it will be useful so that when you're in the MIT class, you're focusing solely on the actual theory and application instead."
learnpython,3cs93d,neverspoongoats,4,Fri Jul 10 17:15:44 2015 UTC,"Yes, this course was my first experience with programming back in 2011. In retrospect, the OCW course was not an ideal place to start as it focused too much on CS theory and not enough on basic programming syntax. I would guess that the updated version on edX is probably a bit better about providing supplements to teach those basics. That said, I think a quick run through some codeacademy python exercises and perhaps Udacity 101 will help build your skills to a level where you will get as much as you can out of the MIT course."
learnpython,3cs93d,freakzilla149,3,Fri Jul 10 12:18:17 2015 UTC,"I'm currently taking the EdX class thats similar to this course. It says it takes 15 hours a week to complete but it is taking me longer. However, the exercises used in the class are excellent. I have a bit of a background in Python and I think it's helping me a lot with understanding the material and lectures. I think the lectures move too quickly sometimes and the explanations aren't the best. If you stick it out and research a bit though, you should be fine.   This course was recommended to me from someone who is actually programming as a job now. He never went to school, just completed courses like this online."
learnpython,3cs93d,freakzilla149,2,Fri Jul 10 14:53:48 2015 UTC,"Thanks for the reply! I can see what you mean about moving  too quickly I mean I'm just trying to understand types at the moment but am finding taking side notes is helping me remember ( getting tripped up when I get to the questions )  Defiantly need to take this slow, it's so easy to just copy paste without really understanding and I don't want that. Good luck on your journey!"
learnpython,3cs93d,isuckatpasswordsso,1 point,Fri Jul 10 15:04:20 2015 UTC,"I know what you mean. Also, you can access the answers pretty easily so it's very tempting to look at the answers when you are stuck instead of trying to figure it out on your own."
learnpython,3cs93d,hudsonpenner,1 point,Fri Jul 10 17:31:14 2015 UTC,Yeah having the answers I think is wrong better off having a hint to what to go look back over.
learnpython,3cvty0,8Vanilor8,3,Sat Jul 11 05:02:06 2015 UTC,try defining variables as integers with int(). sounds like its adding 2 and 2 as a string to create 22.
learnpython,3cvty0,Iyajenkei,3,Sat Jul 11 05:21:01 2015 UTC,"Input function takes user input and makes it into a string. So when you are adding, your not adding 2 + 2 as number, your adding them as strings so the code does ""2"" + ""2"" which gives ""22"".  Make your n1 = int(input()) same with your n2. Watch out with this thought if someone does not put a number it will give an error since you cant change ""cat"" to a number."
learnpython,3cvty0,gustbug,1 point,Sat Jul 11 05:28:59 2015 UTC,"Ok, thanks. I'm not that worried about someone adding cat to fish because I won't show it to that many people, haha.   But is there a way to check if a variable is a number and not something else?"
learnpython,3cvty0,x3al,3,Sat Jul 11 05:42:13 2015 UTC,int() throws a ValueError if a variable is not a number. You can catch it.
learnpython,3cvty0,usernamedottxt,2,Sat Jul 11 05:53:26 2015 UTC,"x3al has a valid solution. You can also use .isnumeric(). It doesn't catch decimals or negative symbols though.   I recently worked on a calculator very similar to this. I am by no means a great programmer, but if you would like see it for ideas/talk about alternate solutions feel free to PM."
learnpython,3cvty0,nyamand,1 point,Sat Jul 11 05:59:03 2015 UTC,"Ok, I will think about it."
learnpython,3cvty0,campenr,2,Sat Jul 11 06:17:28 2015 UTC,"Not sure if it would help but I'd use .. X = int(raw_input(""n1:""))  Although I'm still new probably better ways of doing it I have not yet learnt.  Try add something like ..  X =(raw_input(""n1:"")) If x.isdigit() == False:     print (""please only use numbers"")  But like I said I'm still new that works not sure if it's the pythonic way of doing it though!"
learnpython,3cu6vk,Juggernog,2,Fri Jul 10 20:26:39 2015 UTC,"My first thought is including documentation like a README, and also Docstrings in the files themselves. Just to help explain what is going on to others, and to help you remember in a years time what things do."
learnpython,3cu6vk,campenr,1 point,Sat Jul 11 22:41:08 2015 UTC,"Awesome, Python has these too. I just started using docstrings in my C# code - and I agree it's great for readability.   Thanks for taking the time to read :)"
learnpython,3cu6vk,Mekhami,2,Sat Jul 11 23:06:05 2015 UTC,a few notes:   Your installers should check to see if the software exists already before installing it. Your files should start with lower case letters. https://github.com/ThatOneBeagle/Splinter/blob/master/Interface/Workspace.py#L15 Why do these methods need to return True as well as doing what they do? https://github.com/ThatOneBeagle/Splinter/blob/master/Services/UploaderHelpers/Imgur.py These methods are quite long and contain a bunch of state. Can you move some of those things like tokens and dates outside and pass them as parameters?
learnpython,3cu6vk,Mekhami,2,Fri Jul 10 23:48:32 2015 UTC,"Thanks for taking the time to reply. I definitely agree with you on points 1 and 3, I'll try to refactor to incorporate your points!   Number 2 though, while it looks pointless to return True there, it actually stops the GTK event propagation and so stops the window being garbage collected and breaking. I should probably include a comment to suggest what that's there for.   Thanks again for your time! :)"
learnpython,3cvnl7,scrabaddict,2,Sat Jul 11 03:56:33 2015 UTC,"Pass the delimiter to str.split():  >>> 'xanthein, xanthine'.split(', ') ['xanthein', 'xanthine']"
learnpython,3cvnl7,Rhomboid,1 point,Sat Jul 11 04:13:55 2015 UTC,"the output is weird:  ['xanthein', 'xanthine/n']  the newline pops up after xanthine in the list...    for line in f:     words = line.split(', ')"
learnpython,3cvnl7,Rhomboid,2,Sat Jul 11 04:40:01 2015 UTC,"I figured it out!  yay  for line in f:   line = line.rstrip('\n')   words = line.split(', ')"
learnpython,3cvn9g,TheSpeedOfLove,2,Sat Jul 11 03:52:59 2015 UTC,"The loop here is a wasteful computation.  You're saying if the password is length 10, then evaluate that if statement on the password 10 times, but the password doesn't change.  for words in pswd:     if len(pswd) < 8:         return False   The below problem is from a logic error in your second loop:  >>> print(validatePassword(""bLahblah8@"")) False >>> print(validatePassword(""9bLahblah8@"")) True   This will happen with every loop you have where you have:  for char in psswd:     if ...         return False     else         return True   if you have a number, special char or uppercase in index 0 it will return True regardless of the validity of the password, otherwise False.  Only the first loop of these will execute though because it will return on the first character.  And what is bool(psswd) for?"
learnpython,3cvn9g,jeans_and_a_t-shirt,1 point,Sat Jul 11 04:15:41 2015 UTC,"Ok, so I think I see what you are saying about the loops. My loops are only set up to read the index 0 character, and not the rest of the parameter. This would make a ton of sense, since during my individual testing of each for loop, it would only work correctly if there was one character in my parameter for the function.   The first loop, I was told to use the string len function to validate the length of the password, and then return false if the password is less than 8 characters long. I feel like what I have is correct, as during my individual testing of that loop, it worked perfectly fine.   bool(psswd) is probably not correct, but I was told to code an if statement to return false if any of the boolean variables are false. bool(psswd) is what I came up with..  Same with line 10 where I am supposed to initialize additional boolean variables. I totally have no idea what either means, truthfully."
learnpython,3cvn9g,jeans_and_a_t-shirt,1 point,Sat Jul 11 04:27:12 2015 UTC,"The first loop,  for words in pswd:     if len(pswd) < 8:         return False   is the same as  for words in 'blahblah8@':     # this will evaluate 10 times, once for each character     if len('blahblah8@') < 8:         return False   Unless validatePassword is taking a list of passwords, it should just be:  if len(pswd) < 8:     return False   Your contains variables should all be initialized to False, then you iterate through the password and evaluate for each of the 3 logical checks which require checking each character.  You could reduce your 3 remaining for loops to a single one which checks if the character is a number, special character, and uppercase all at once.  Then return the and'ed result of your contains variables; this is probably what the last if statement is supposed to do -> return false if any of the contain checks are False.  Also: not sure if you're allowed to solve it this way for the class, but its possible to make the function body as a single statement (return ...), without any for loops, using len, str.isdigit(), a list comprehension, str.lower(), and set operations."
learnpython,3cvn9g,jeans_and_a_t-shirt,1 point,Sat Jul 11 04:50:55 2015 UTC,"Alright, I am getting somewhat confused now when it comes to the contains variables. I understand what you are saying, but don't at the same time. The contains variables were in the starter code provided by my professor, so I can honestly say I have no idea what they even mean.   I think that the for loops should not be a single check, as my professor outlined it in a way that didn't make it seem like that's how he wanted it done. Although at one point I started dabbling with turning the checks into a function in themselves, and then just patching it into the validatePassword function.   Unfortunately I cannot make the function body as a single statement. I am providing a fresh copy of what my code looks like now, I have gone ahead and updated the contains variables, initializing them to False. I have also tinkered with line 27, but I have no idea if this is what you were hinting at with my last if statement.   http://pastebin.com/v0Spxg6e"
learnpython,3cvmwu,ask824,0,Sat Jul 11 03:49:34 2015 UTC,"Forget about youtube tutorials and switch to text, maybe? Videos are the worst way to learn any programming language and progamming as whole."
learnpython,3cvmwu,x3al,1 point,Sat Jul 11 09:00:56 2015 UTC,"Okay, like text books? Any links??"
learnpython,3cvmwu,x3al,1 point,Sat Jul 11 19:14:50 2015 UTC,https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_python.3F is in the sidebar.
learnpython,3ctuzf,pepsivanilla93,3,Fri Jul 10 18:59:19 2015 UTC,"I thought it might be interesting to see how someone else might do it, here's my implementation   def main():     user_input = raw_input('Please enter pyramid height: ')     if not user_input.isalnum():         print('Invalid input')         return     height = int(user_input)      for row in range(height):         blanks = ' ' * (height - row)         hashs = (row + 1) * '#'         print(blanks + hashs)   if __name__ == '__main__':     main()"
learnpython,3ctuzf,echocage,3,Fri Jul 10 21:25:22 2015 UTC,"The tower drawing part can be simplified :)  for i in range(1, height+1):     print ('#' * i).rjust(height)   Which can be written in a single line (if that's what you like):  for i in range(1, height+1): print ('#' * i).rjust(height)  for i in range(1, height+1): print(('#' * i).rjust(height))  # Python 3   EDIT: Just saw that it's supposed to be 2 hashes at the top of the pyramid. So the code should be:  for i in range(2, height+2):     print ('#'*i).rjust(height+1)"
learnpython,3ctuzf,hw_t_dstr_ngls,2,Fri Jul 10 21:56:19 2015 UTC,Huh that's awesome!
learnpython,3ctuzf,echocage,1 point,Fri Jul 10 21:58:59 2015 UTC,Nice; I forgot about str.rjust().
learnpython,3ctuzf,kielejocain,1 point,Fri Jul 10 23:57:09 2015 UTC,"don't do the one line thing. nothing should come after : in a line, ever. it's not readable."
learnpython,3ctuzf,Mekhami,2,Fri Jul 10 23:13:35 2015 UTC,"A lot of this looks good.  A couple comments:   You didn't use your pound and spaces variables (and rightly so); as such, they should be removed. Your for loop is a little rough.  It looks really awkward to decrement height; you shouldn't change a variable's purpose like that.   Instead, you could compute the number of spaces using your index variable num:  print "" "" * (height - num - 1),   And then you could leave height -= 1 out.  There's also no real need for a second print line:  print "" "" * (height - num - 1), ""#"" * (num + 2)   is all you need in your for loop.  This is foreshadowing for when you cover tuples!  Here's a slightly edited version of the for loop, where I added a width variable to make the computation a little more legible.  It's probably fine either with width or without.  if 0 <= height <= 23:     width = height + 2     for num in range(2, width):         print "" "" * (width - num - 1), ""#"" * num else:     print ""Integer outside of valid range""     exit()"
learnpython,3ctuzf,kielejocain,2,Fri Jul 10 19:48:18 2015 UTC,"Yep the variables were there for me to start then became redundant when I didn't use them. Looks a lot nicer without them too! Thanks for the h elp on the loop. I was unsure how to combine statements like that, and I assume that's what you mean by foreshadowing tuples. One question: the calculation for spaces calculates one less space than you would need per line, is this because combining the print statements would yield a space between them? Thanks for your help though! It'll be better when I can get home and try out some of this.  Also, I was reading a clean maintainable code article, and I think that's a problem with giving a variable two uses. Variables, classes, functions should all do exactly one thing, right?"
learnpython,3ctuzf,kielejocain,1 point,Fri Jul 10 21:11:12 2015 UTC,"the calculation for spaces calculates one less space than you would need per line, is this because combining the print statements would yield a space between them?  Also, I was reading a clean maintainable code article, and I think that's a problem with giving a variable two uses. Variables, classes, functions should all do exactly one thing, right?   Correct on both counts.  The comma in the print statement puts a space between the strings.  Also, I was able to figure out what your code was doing because the script was so small, but in a larger code base those kinds of practices can really confuse a reader; that's why we generally preach not to do those things from the beginning.  Glad I was able to help!"
learnpython,3cvlvk,deviaan,1 point,Sat Jul 11 03:39:10 2015 UTC,how did you install it?  did you use pip? pip install cx_Oracle
learnpython,3cvlvk,LeftyDave,1 point,Sat Jul 11 05:19:21 2015 UTC,"I downloaded the installer from the Python site. I did try Pip but it said I needed Visual C++ 10. I already have Visual C++ 10, so I'm not sure why pip can't see it."
learnpython,3cvlvk,LeftyDave,1 point,Sat Jul 11 07:02:56 2015 UTC,try to follow some of the tricks in thw following. step 3 helped me a while back  http://blog.ionelmc.ro/2014/12/21/compiling-python-extensions-on-windows/
learnpython,3cvl53,Sherlock___Holmes,2,Sat Jul 11 03:31:53 2015 UTC,"In your example the nesting is wrong, but that may just be your post's formatting. Should be something like this:  for n in range (2,10):     for x in range(2, n):         if n % x == 0:             print (n, 'equals', x, '*', n/x)         else:             print(n, 'is a prime number')   Because you want the x value's for-loop to cycle for each n value.  You also missed a comma after 'equals'"
learnpython,3cvl53,Renaissance8905,1 point,Sat Jul 11 03:38:15 2015 UTC,That was exactly it.  Thank you kindly.
learnpython,3cstn4,RBVision,6,Fri Jul 10 14:17:05 2015 UTC,"I don't know if this is significant enough to count as 'building something' on my own, but...  I've also been slowly working my way through LPTHW in my free time since about April / May, and I've already made a short .py to use at my office to rename repetitive files and create a log file of the changes.  At first I just did it as a challenge (it took me 2 or 3 hours to figure everything out and make it run right, and the 10 or so files I needed to rename every week would only take a few minutes), but after I got it working, I was able to use it in a lot of other situations than what I had originally intended.  The biggest use so far was in having to spare my project team the tedious task of renaming each of 900 individually printed PDFs at a deadline.  I'd like to learn how to make it into a .exe that references a text file for some of its information, so that I can share the tool with the rest of the team / office since hardly anybody else is going to install python just to save some time renaming files.  I think the key for me is to not focus on ""Can I build a big crazy program yet?"", but rather on making sure I can work out my own examples of the problems and make them work under different conditions.  Each little victory I have helps me keep coming back to try to learn more."
learnpython,3cstn4,dan_RA_,2,Fri Jul 10 18:05:57 2015 UTC,I'd like to learn how to make it into a .exe    Have you tried this:    http://www.py2exe.org/   references a text file for some of its information   Is it simple enough to be able to just send command line arguments via command line arguments?
learnpython,3cstn4,ummmbacon,1 point,Fri Jul 10 19:32:27 2015 UTC,"I've see py2exe, but haven't had a chance to try to learn it yet.  Its definitely something I'm going to try to do soon.    As for command lines / referencing outside info... here's what I'm actually trying to do.    I (or somebody else) creates a bunch of new files (say PDFs or DWGs or whatever), and the program that creates them automatically appends some prefix (usually the name of the parent file, but sometimes other things) to the beginning of each file.  With the .py I run now, for each different prefix, I open the program up in Notepad++ and change a variable called 'prefix' to whatever I need.  Then I just run the script by double-clicking from whatever folder all my files to be renamed are in.  Program runs, files renamed, I'm happy.  The problem is, I don't want my coworkers to have to go into the program to change the 'prefix' variable for every new situation.  For the next step in the project, I was thinking that if I made a .exe that referenced a text file (say, prefix.txt), then my coworkers could just copy the .exe and the .txt into whatever folder they need, open the .txt and change the single string inside of it, then run the .exe.  I'm not sure if having them open the .txt or having the command line pop up would be more intimidating to them.  I think if they have to run it from the command line with arguments, they'll never really use it.  Next step would probably be to learn some GUI stuff and have it pop up a nice friendly window to input the prefix... but thats a ways down the road for me."
learnpython,3cstn4,dan_RA_,1 point,Fri Jul 10 19:53:40 2015 UTC,"The problem is, I don't want my coworkers to have to go into the program to change the 'prefix' variable for every new situation.   Yea you can do that with command line arguments  Here is the example in LPTHW from chap 13 which is a pretty simple example to follow.  So they can just call the prefix on the command line instead of having to edit a file each time.     I think if they have to run it from the command line with arguments, they'll never really use it.   Fair enough.  Might make your life easier for now, instead of editing the file each time."
learnpython,3cstn4,ummmbacon,1 point,Fri Jul 10 20:05:47 2015 UTC,Good to hear that you've been able to actually use your python skills to do something useful. I was just curious to know after how long people are able to make .py programs like yours that actually solve issues at work or wherever. Thanks!
learnpython,3cstn4,jiujitsudude,2,Fri Jul 10 18:39:48 2015 UTC,"I just started learning python working through a freeware course called 'python for informatics' by Chuck/Charles Severance and am about 11 chapters and ~3-4 weeks in at this point.   I am learning so I can write an addon for an opensource application that I am using for a research study, and at this point I feel like I am close to having the ability to do so.   While that is not complete yet, I am sure I will be able to finish the addon up in the next few weeks. However, at this point I have been able to do simple things like write a program that gathers the email addresses of my study participants from a text file based on surveymonkey responses, and then assigns them to study groups using a pseudo-random balancing method. Could I have figured out a way to do this manually? Sure. But it is definitely satisfying to put these newly learned skills to use!"
learnpython,3cstn4,pepsivanilla93,2,Fri Jul 10 20:53:01 2015 UTC,"Hey, classmate here! Great, easy book and I enjoy Chuck. I'm  reading ""how to think like a computer scientist: learning with python"" on the side to continue with classes and objects. It's the same book he changed up a bit to make his but it goes more in depth on functions and obviously classes."
learnpython,3cstn4,jiujitsudude,1 point,Fri Jul 10 23:58:14 2015 UTC,"Chuck is the best! Love watching his videos. I've been supplementing with whatever I can find related to my projects since I'm on a deadline. If you see anything good on SQLite basics, I'd love to know!"
learnpython,3cstn4,pepsivanilla93,2,Sat Jul 11 01:05:03 2015 UTC,Definitely! I've got SQLite written on my whiteboard so when I get to it I'll try to remember and let you know.
learnpython,3cstn4,The-Mathematician,1 point,Sat Jul 11 01:53:11 2015 UTC,"Depends on how big of a thing will meet your criteria for completely from scratch. I don't remember the exact lesson number (I want to say about ~42) where you make your own text adventure. I spent 16+ hours on mine, making save/load functions and expanding the world and used py2exe to give it to my friends. They each finished in like 15 minutes. After I finished LPTHW I created a sudoku solver (without looking at any help. Embarassingly, I spent a very long time figuring out how to use 2D lists for that one.). Then I went through Professor Craven's YouTube pygame tutorial. That's probably when I got the best introduction to OOP, honestly, and at the end of that course I extended his side scroller to include things like enemies, buttons, portals, text boxes, and a HUD. It was heavily built off of his side-scroller so I don't know if that counts as 'from scratch'.  I can't really say ""it took me 3 weeks to make my own X"", partially because I don't remember and partially because what was important for me at the extremely early stages is where I was through that tutorial. I suspect that after you finish LPTHW and a good Django tutorial then you will be ready to make your own small webapp from scratch."
learnpython,3cstn4,statixsc,1 point,Fri Jul 10 16:09:34 2015 UTC,"If you really REALLY want to have a go at producing something with a bit of purpose, look at the scenarios for GCSE computing and complete them. some of them are pretty good, if you actually do the assessment you take yourself through the planning development implementation and eval and testing. Quite good. Im a teacher and i love it every time there is a new spec out! Im stuck on the current one a bit BUT thats only because ive limited myself to the kind of structures and conditions i can use as time just goes too fast and not everyone in class takes away work and does any at home . . so yea, have a look at old specs from aqa and edexcel"
learnpython,3cstn4,RedXabier,1 point,Fri Jul 10 18:52:55 2015 UTC,"I've got an AQA AS Computer Science textbook, do you think I should start looking at the GCSE version before I look at the AS one? And can you learn from simply the GCSE spec or will you need the GCSE textbook?"
learnpython,3cstn4,statixsc,2,Fri Jul 10 19:34:05 2015 UTC,"they are not that different tbh, the AS goes into a little more machine code but working through either will give you a good run through of most concepts. Like i said above, its just having a clear goal and structure to help you get there is what makes looking at edu stuff good"
learnpython,3cstn4,Iyajenkei,1 point,Sat Jul 11 00:10:06 2015 UTC,I'm on lesson 40 in LPTHW. I think I've been at it for 2 months now.  I've also been reading a lot of other stuff and going through codeacademy here and there. I'm in the process of creating my own script from scratch. It's a lot less complicated than I thought. At first I wasnt sure what to even search for or what I needed that was the hardest part. Once I actually got in there it got easier.  It seems that basically you need to learn syntax and then figure out which libraries you need.  Google is your friend. I'm pretty sure even more experienced programmers rely on searching google and things like stackoverflow.  I would start reading Django stuff now and trying it out a little.
learnpython,3cstn4,5225225,1 point,Fri Jul 10 19:06:56 2015 UTC,"Depends what you mean by ""build something""  If you mean a small script, around 4-5 hours, if that. But that was with prior programming knowledge."
learnpython,3cstn4,tk425,1 point,Fri Jul 10 21:44:42 2015 UTC,You don't really need to learn Python to make a simple Jango web app. If you follow the Django tutorial you'll be ready with very basic Python knowledge
learnpython,3cstn4,ANeonBlueDecember,1 point,Fri Jul 10 21:46:48 2015 UTC,"https://automatetheboringstuff.com  I powered through the first 6 or 7 chapters in one weekend. Started making small projects on my own in a few days. I think the key for me was keeping it simple. What is the smallest, simplest way I can just get this to work. Then start adding features. Been a great way to learn, working on my own projects."
learnpython,3ctzq6,bigdog927,1 point,Fri Jul 10 19:33:23 2015 UTC,"Yeah I had trouble on two different machines, even when I had it fill in the solution and ran that it gave me a blank result. I moved on to codecademy instead."
learnpython,3ctzq6,King_Kydos,1 point,Sat Jul 11 00:22:04 2015 UTC,"The first day I started the tutorials it worked great, ever since when I try to do anything it just sits at ""Executing, please wait.."" forever. I think its just broken."
learnpython,3cu5v6,eiherrera,1 point,Fri Jul 10 20:19:15 2015 UTC,Manually as in without pip?
learnpython,3cu5v6,goodyguts,1 point,Fri Jul 10 21:11:19 2015 UTC,Not quite sure what do you mean. I installed python 3.4.3 in ubuntu and any time I have to use zlib it says that it's not installed. When I check the files it's there but I think it may be that it was installed wrong or something.
learnpython,3cu5v6,Rhomboid,1 point,Sat Jul 11 01:12:30 2015 UTC,yeah it doesn't work. Terminal says: E: Unable to locate package zlib-devel
learnpython,3ctfyf,whereTehPandas,2,Fri Jul 10 17:10:22 2015 UTC,"I see a number of reasons.  The biggest is that you only make .01 seconds of sound but then use clock tick to re-start the sound every 1/60=.01667 seconds.  Another is that you a restarting the sound 60 times per second, and even if the sound continued up until you restarted it, you'd be jumping to a different point in the wave form that often.  60Hz is audible.  Why not make the 440Hz sound play continuously (instead of restarting it every .01667 seconds) using a queue, and also add the beat causing tone to a queue on the other channel.  Give it a duration longer than .01 seconds.  .1 seconds would be perfectly adequate response time from a user perspective.  Also, if you use numpy correctly when creating the buffer, it'll go faster and you'll have more CPU power available for other things that might happen in the script.  edit: how to use numpy:  import numpy as np import math  sample_rate = 44100 duration = .1 n_samples = int(sample_rate*duration) f1 = 440 max_sample = 2*(16-1) - 1   def with_numpy(f,buf):   n_samples = len(buf)   buf[:] = max_sample*.5*np.sin(np.arange(n_samples)*2*np.pi*f/sample_rate)  def with_loop(f,buf):   n_samples = len(buf)   for s in range(n_samples):       t = float(s)/sample_rate       buf[s] = int( round( (max_sample*0.5*math.sin(2*math.pi*f1*t) ) ) )  buf = np.empty(n_samples,dtype=np.int16)   timing from ipython:  In [11]: %timeit with_numpy(f1,buf) 1000 loops, best of 3: 498 µs per loop  In [12]: %timeit with_loop(f1,buf) 100 loops, best of 3: 6.88 ms per loop   So, your current method eats between 1/2 and 1/3 of your total available time before lag kicks in (ie: code runs slower than your preferred frame rate). Using numpy correctly cuts the that time into less than 1/12 of what it was."
learnpython,3ctfyf,elbiot,2,Fri Jul 10 20:16:11 2015 UTC,"Channels should be ""got"" outside the main loop or else a new one is generated each time buf1 should be given its own channel To play a sound in a channel, you have to do channel.play(sound)"
learnpython,3ctfyf,goodyguts,1 point,Fri Jul 10 20:32:29 2015 UTC,"I updated my code with the suggestions below, and I still get the same clicking/popping. At this point, I've got no idea what to do.  sample_rate = 44100 duration = 0.1 pygame.mixer.pre_init(sample_rate,-bits, 44100) pygame.init() _display_surf = pygame.display.set_mode(size, pygame.HWSURFACE | pygame.DOUBLEBUF) pygame.mixer.set_num_channels(2) done = False f1 = 440 n1_samples = int(round(30*sample_rate)) n2_samples = int(round(duration*sample_rate)) max_sample = 2**(bits - 1) - 1 buf1 = np.empty((n1_samples, 2), dtype = np.int16) buf2 = np.empty((n2_samples, 2), dtype = np.int16) chan1 = pygame.mixer.Channel(0) chan2 = pygame.mixer.Channel(1)  def fillWithNumpy(f,buf):     samples = len(buf)     buf[:,0] = max_sample*0.5*np.sin(np.arange(samples)*2*np.pi*f/sample_rate)     buf[:,1] = buf[:,0]  fillWithNumpy(440,buf1) soundbuf1 = pygame.mixer.Sound(buf1) chan1.play(soundbuf1,-1) clk = pygame.time.Clock() x_prev = 0  while not done:     pos = pygame.mouse.get_pos()     x = pos[0]     y = pos[1]          f2 = x - 200.0 + 440.0         fillWithNumpy(f2,buf2)         soundbuf2 = pygame.mixer.Sound(buf2)         chan2.queue(soundbuf2)         clk.tick(10)          for event in pygame.event.get():             if event.type == pygame.QUIT:                 done = True  pygame.quit()"
learnpython,3ct1oo,Lithobilic,2,Fri Jul 10 15:21:28 2015 UTC,"well, down_states[0] is a 52x76 rect, right?  Many of those others don't even look valid.  Maybe this applies to you also: http://stackoverflow.com/questions/14787492/pygame-set-clip-returns-first-value-in-list-instead-of-requested-value"
learnpython,3ct1oo,elbiot,1 point,Fri Jul 10 22:12:01 2015 UTC,"What do you mean by,   Many of those others don't even look valid. The class does function, just isn't cropped properly and I just don't know how to add in collision with other objects ><!"
learnpython,3ct1oo,elbiot,1 point,Fri Jul 10 23:40:07 2015 UTC,"Oops, I misunderstood what a pygame.rect was.  But you set all your width,heights to 52,76 when you set the clip from your states.  So, it's not 60x80 you're seeing, but the 52x76 you are setting it to.  As far as collisions go, it seems like you're starting to put to much into this one class already.  Alice should not handle 'q' for quit to end the game.    You should have an Entity class which handles position, size, and animations.  Alice should derive from this and add key press handeling   You should have a world, that Entities belongs to (ie, have a list of entities that have been added to the world).  The world handles 'q' for quit, passes player specific key presses to Alice to handle and then iterates through a list of your entities to let them update, see if any collide, register any changes such as removing those that died, updating the score, etc.  If they do collide, tell the entity and let it handle it (ie, take damage, mark itself as killed, revert last movement, etc).  It's good learnin' to figure it our on your own, but pymunk kills at handeling collisions and 2d phyiscs (python wrapper for the fast C physics engine chipmunk)."
learnpython,3ctuid,bergenation,2,Fri Jul 10 18:55:40 2015 UTC,"You don't need to check every possible pair. Once you check a == reverse(b), you don't need to check b == reverse(a). But if you are going to do that, use a set instead of a list to check if it's found already. if len(matches) != 0 can be if matches (because). Line 43 drops the last match. You can use enumerate here instead. Not every function needs to explicitly return something (you can get rid of line 50). You can replace line 12 with if line[-1] == '\n', but you can also just use lines = list(f) or lines = f.read().split('\n')."
learnpython,3ctuid,raylu,1 point,Fri Jul 10 19:10:53 2015 UTC,"Hey, thanks for the critique! This is exactly what I wanted to hear!   how does the set function work? It's not in the documentation I'm currently working off offline, I would Google it but I'm abroad with barely any data allowance on my phone, heh good spot with line 43, I forgot range() isn't inclusive with the upper bound nice, if matches is way more elegant. I added return None to null functions as I've heard a couple of developers say that it's good practice to get into the habit of, is this wrong? ahhhh using split is really clever! Thanks!   Thanks again for your help!"
learnpython,3ctuid,raylu,1 point,Fri Jul 10 22:04:54 2015 UTC,"how does the set function work? It's not in the documentation I'm currently working off offline, I would Google it but I'm abroad with barely any data allowance on my phone, heh   https://docs.python.org/3/tutorial/datastructures.html#sets - this is probably less data than reddit, no?   I added return None to null functions as I've heard a couple of developers say that it's good practice to get into the habit of, is this wrong?   If you actually want to return the value None, explicitly doing a return None rather than letting the function implicitly return None is a good idea. In this case, you aren't using the return value anyway and there are no other returned values."
learnpython,3ctuid,hudsonpenner,1 point,Sat Jul 11 00:22:27 2015 UTC,Could you use .strip() or rstrip() instead of having to hand-code the truncate method?  https://docs.python.org/2/library/string.html
learnpython,3cufuh,Edward888,1 point,Fri Jul 10 21:36:59 2015 UTC,"I'm not a python expert but I just started doing projects, got a few really advanced ones (some that involve django and maybe outside help) and a few simple ones. The problem is consistency...just gotta keep at it because the rust seems to settle in fast."
learnpython,3cufuh,atli_gyrd,1 point,Fri Jul 10 23:50:39 2015 UTC,"Thanks, which resource would you recommend for learning Django from scratch? Also, do you know the book Think Python: How to Think Like a Computer Scientist?"
learnpython,3cufuh,pepsivanilla93,1 point,Sat Jul 11 09:15:35 2015 UTC,"I'd suggest programming without a companion book or tutorial, it's really cementing in the concepts for me. Just an end goal and your knowledge. Do look up what you need to though. /r/beginnerprojects is very good as well as googling ""martyr's mega list"". Should be the first result there."
learnpython,3cuew4,mywan,2,Fri Jul 10 21:30:01 2015 UTC,"def make_label(tk, text):     label = Label(tk, text=text, ...)      def m_enter(event):         label.config(bg='blue', cursor=""hand2"", relief=RAISED, width=30)     label.bind('<Enter>', m_enter)      ...      return label   Why does this work? The function m_enter holds a reference to the scope in which it was defined. So even though the function make_label ends, the m_enter defined within it can still access the local variables. Each call to make_label creates a new scope (containing a new version of label) and then creates new functions like m_enter which retain access to that.  Hopefully that made some sense. I don't think that explanation was particularly technically correct, but I think it should give you the right intuition about why it works.    EDIT: If you don't want to do the above suggestion, another good option is to have your functions take the label as a parameter, and then attach that parameter using a partial function. This is probably a little easier for the average person to understand, and it doesn't require defining functions inside of functions.  def m_enter(label, event):     ...  ... for ...:     label = Label(...)     label.bind('<Enter>', functools.partial(m_enter, label))"
learnpython,3cuew4,kalgynirae,1 point,Fri Jul 10 22:32:08 2015 UTC,"Maybe it's not making sense for me right off the bat, but I'll keep breaking it till it does. Thanks :)"
learnpython,3cuew4,kalgynirae,2,Fri Jul 10 22:51:41 2015 UTC,"Looking back at this after 20 minutes, I'm not sure why I made those suggestions in the order I did. The second suggestion is a lot easier for you to implement (and to understand, I think)!"
learnpython,3cuew4,kalgynirae,1 point,Fri Jul 10 22:58:03 2015 UTC,"I understand how it's supposed to work in a theoretical sort of way, and know the difference between an object an and instance of that object. Also the difference passing parameters by reference or value. I've already implemented the program I'm trying to recreate in Python, in multiple forms, in a different scripting language, but want something cross-platform.  However, I lack any familiarity at all with Python itself. So even though I can construct solutions in a pseudo-code sort of way actually getting a language specific syntax to work in can get more than a bit aggravating. The syntactic structure can completely screw up my understanding of what constitutes what in the code. At least until I run enough working snippets through enough transforms that the syntax starts making more sense.  Still struggling."
learnpython,3csfrc,Elthran,3,Fri Jul 10 12:01:02 2015 UTC,"(Got just a piece of code to show, it has several problems like this)  (a(f-d)+c(b-f)+e(d-b))   Here, you're calling the function ""a"" with one parameter which is the result of ""f - d"". I understand that it may look like a math formula, but you need to provide the operation always. For example, that should read:  (a*(f-d)+c*(b-f)+e*(d-b))   (If the multiplication is implicit; I'm not sure about this kind of thing anymore)."
learnpython,3csfrc,juliob,2,Fri Jul 10 12:16:23 2015 UTC,Thanks!! I am a math major and make this mistake a lot when learning to code. I'm an idiot! Thank you!
learnpython,3ctmju,musicomet,3,Fri Jul 10 17:58:02 2015 UTC,"Nice use case for a list comprehension.  my_list = [{key: val} for key, val in my_dict.items()]"
learnpython,3ctmju,Peterotica,3,Fri Jul 10 18:02:26 2015 UTC,"I know it's what OP asked for, but a list of dictionaries that each only have one item is a pretty useless datastructure."
learnpython,3ctmju,elbiot,2,Fri Jul 10 19:45:16 2015 UTC,"There may be a better way to do whatever it is that needs to be done, but learning is a step by step process. Can't expect to tackle everything all at once."
learnpython,3ctmju,Peterotica,1 point,Fri Jul 10 20:18:34 2015 UTC,"Agreed, I used a collections.namedtuple for this kinda thing.  from collections import namedtuple  Pair = namedtuple('Pair', ('object', 'classification')) pairs = [Pair(x, y) for x, y in some_dict.items()]   Also, I'd make pairs a generator expression, but the user asked for a list."
learnpython,3ctmju,ryeguy146,1 point,Fri Jul 10 21:44:20 2015 UTC,Elegant! Thanks :)
learnpython,3ctmju,raylu,3,Fri Jul 10 18:06:29 2015 UTC,my_list.extend(my_dict.items())   or just  my_list = list(my_dict.items())   or just don't create the list and use my_dict.items().
learnpython,3ctmju,elbiot,1 point,Fri Jul 10 19:04:11 2015 UTC,Nice!
learnpython,3ctmju,TagSmile,1 point,Fri Jul 10 19:13:13 2015 UTC,"Note that this is a list of tuples rather than a list of dictionaries, which is a much more useful data structure.  I'd recomend using this rather than a list of dictionaries unless you have a good reason."
learnpython,3ctmju,TagSmile,1 point,Fri Jul 10 19:46:46 2015 UTC,Thanks! I didn't realize that. I definitely need a list of dictionaries because I'm building an api.
learnpython,3cs3gf,04h,4,Fri Jul 10 09:12:51 2015 UTC,javaScript.
learnpython,3cs3gf,mendokusai_yo,2,Fri Jul 10 09:26:36 2015 UTC,"I think it's the norm in languages like Java, so a lot of people who deal with that language probably use it out of habit. Then there's the obvious reason that it takes up fewer spaces than the 'Python preferred' format of lowercase_with_underscore. Personally I'm a stickler for PEP-8 guidelines, so I pretty much never use camelCase.  But that's just talking generally. As far as why (or even if) there is a particular recent trend towards camelCase I have no idea."
learnpython,3cs3gf,callmelucky,1 point,Fri Jul 10 09:28:27 2015 UTC,Isn't CamelCase the PEP8-compliant way to name classes though?
learnpython,3cs3gf,individual_throwaway,3,Fri Jul 10 09:45:51 2015 UTC,"Yep, but not camelCase: https://www.python.org/dev/peps/pep-0008/#id33"
learnpython,3cs3gf,Mekhami,1 point,Fri Jul 10 09:56:05 2015 UTC,that's PascalCase.
learnpython,3cs3gf,olyko20,3,Fri Jul 10 23:12:10 2015 UTC,I definitely prefer camelCase to naming_things_like_this.  edit: not aware of any other options really XD
learnpython,3cs3gf,kalgynirae,2,Fri Jul 10 09:25:31 2015 UTC,"I recently was writing some code for Mercurial, and they nameeverythinglikethis."
learnpython,3cs3gf,Veedrac,2,Fri Jul 10 14:43:40 2015 UTC,"Lisps use dashed-names-like-this. It's quite nice, but you lose out on unspaced subtraction. In F# you can even use spaces."
learnpython,3cs3gf,flying-sheep,2,Fri Jul 10 15:36:07 2015 UTC,"There are a few languages that really allow spaces in identifiers (without quoting characters like backticks as in F# or R).  The only example I can come up with now is TikZ, but there are more..."
learnpython,3cs3gf,flying-sheep,1 point,Sun Jul 12 09:01:06 2015 UTC,Why? That is harder to read fluently.
learnpython,3csyx1,Sgoettschkes,2,Fri Jul 10 15:00:08 2015 UTC,Maybe this: http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-iv-database
learnpython,3csyx1,04h,1 point,Fri Jul 10 18:49:08 2015 UTC,"Thanks. That is really in-depth about flask, so that's very good.  I'd like to dive a little deeper into Python itself, getting to know about the ecosystem (as mentioned above)."
learnpython,3csyx1,04h,2,Fri Jul 10 18:56:13 2015 UTC,Off the top of my head: talks from pycons  P.S. I thought 'migration' was about database migrations :)
learnpython,3cstwq,mri3iguns,3,Fri Jul 10 14:19:26 2015 UTC,"Without seeing your code there is really no way to tell. The interpreter is not just going to skip over your for loop, so you are either doing something wrong, or your for loop is not doing what you expect it to be. However, without seeing a snippet there's really not much advice to give."
learnpython,3cstwq,werpoi,1 point,Fri Jul 10 14:30:13 2015 UTC,hi i edited the the post with code
learnpython,3cstwq,werpoi,2,Fri Jul 10 15:11:30 2015 UTC,"Can you add some print statements? Something like the following:  twplset = wombo.getMboSet(""EXT_TASKWPLABORVIEW"") twplcount = twplset.count() totalhrs = 0.0 System.out.printf(""mri3iguns in createLabTranswithDist() right before loop. twplcount is %d"", twplcount) print type(twplcount) print twplcount print range(twplcount) for i in range(twplcount) :     System.out.println(""mri3iguns in right after the for loop"")   By the way, are you using Jython or something?"
learnpython,3cstwq,novel_yet_trivial,1 point,Fri Jul 10 17:15:01 2015 UTC,Yes it is Jython.
learnpython,3cstwq,novel_yet_trivial,1 point,Fri Jul 10 17:26:45 2015 UTC,Those extra lines did not print anything. I think i have to use a logger to print them but i am not sure how to do that.
learnpython,3cstwq,gengisteve,1 point,Fri Jul 10 19:26:03 2015 UTC,I got rid of range and did just 'for i in twplcount' and got an error stating that the 'int' type is not iterable.
learnpython,3cstwq,04h,2,Fri Jul 10 20:29:57 2015 UTC,"As /u/werpoi said, the only way to know is seeing your code. Otherwise I have to guess that you are trying to range from a big number to a small one, which returns an empty list:  >>> range(3,1) []   Looping over an empty list causes the the for loop innards never to be run:  >>> for i in range(3,1): ...  print i ...  >>>"
learnpython,3crxk1,GirlLunarExplorer,2,Fri Jul 10 07:46:21 2015 UTC,"Wait, does this work?          if choice in menu:             try:                 n = raw_input(""How many posts would you like to grab?\n"")                 n = int(n)             except Exception as e:                 print e             new.print_func(menu[choice], n)   If n is non-intable it prints error message, but then pass undefined n to new.print_func anyway and probably break it"
learnpython,3crxk1,04h,1 point,Fri Jul 10 10:12:16 2015 UTC,"Oh jeez, didn't catch that!"
learnpython,3cskjd,Elthran,2,Fri Jul 10 12:54:14 2015 UTC,"Your code seems to do what you describe. ""newList"" is always the correct size. Although I could suggest a better way:  def chunkify(sequence, partition_number):     length = len(sequence)     if length%partition_number != 0:         length -= partition_number     for i in range(0, length, partition_number):         yield sequence[i:i+partition_number]   Your problem is further down the code. Can you explain what you are trying to do?  Edit: Actually, you don't have to do the modulo check:  def chunkify(sequence, partition_number):     for i in range(0,len(sequence)-partition_number+1, partition_number):         yield sequence[i:i+partition_number]"
learnpython,3cskjd,novel_yet_trivial,3,Fri Jul 10 13:29:39 2015 UTC,"Or using iter:  def grouper(string, n =2):     ''' groups string by n characters, e.g.         grouper('hello', 2) -> 'he', 'll'         Drops final group if not sized to n     '''     its = [iter(string)] * n     for group in zip(*its):         yield ''.join(group)"
learnpython,3cskjd,gengisteve,1 point,Fri Jul 10 14:05:36 2015 UTC,"That's convoluted, difficult to read, and obscure.   I love it."
learnpython,3cskjd,novel_yet_trivial,2,Fri Jul 10 14:11:42 2015 UTC,"I wish I could take credit for it, but its actually from the itertools page, which have lots of these recipes:  https://docs.python.org/2/library/itertools.html"
learnpython,3cskjd,gengisteve,2,Fri Jul 10 14:19:09 2015 UTC,I have come back to this doc so many times (especially for pairwise()) that I ended up just copying that whole block of recipes into a module. Now in my scripts I just have:  from itertools_recipes import pairwise
learnpython,3cskjd,Peterotica,1 point,Fri Jul 10 15:49:22 2015 UTC,You get the credit for teaching me about it.
learnpython,3cskjd,novel_yet_trivial,1 point,Fri Jul 10 14:24:35 2015 UTC,"This makes possible an idiom for clustering a data series into n-length groups using zip(*[iter(s)]*n).   from the docs for zip(). Because it's mentioned there and I've seen it used occasionally in other people's code, I allow myself to use it."
learnpython,3cskjd,kalgynirae,1 point,Fri Jul 10 14:39:40 2015 UTC,I completely rewrote it. It is better but fails on the very last edge case. Any chance you can tell me why? :D  http://pastebin.com/ejNR9zDE
learnpython,3cskjd,gengisteve,2,Fri Jul 10 14:33:43 2015 UTC,"It would help if you provided an explanation of what you are doing.  The code seems to work as it should, assuming that you are:    grouping  Counting an inversion number by some black magic I cannot follow  Recombining by lowest to highest inversion.   I suspect the problem is how the inversion number is calculated."
learnpython,3cskjd,novel_yet_trivial,1 point,Fri Jul 10 14:56:25 2015 UTC,"for i in range(0,len(secondList[0])):         for section in secondList:             if section[-1] == str(i):                 finalList.append(section[:-1])   This should add all of my terms based on the trailing number, and then remove the number as it adds them."
learnpython,3cskjd,novel_yet_trivial,1 point,Fri Jul 10 13:48:38 2015 UTC,"I still have no idea what you are trying to do; but I rewrote your code so that it works. See if you can decipher this:  def chunkify(sequence, partition_number):     for i in range(0, len(sequence)-partition_number+1, partition_number):         yield sequence[i:i+partition_number]  def score(group):     count = 0     for idx, letter in enumerate(group):         for test in group[idx+1:]:             if letter > test:                 count += 1     return count  def golf(sequence, partition_number):     print (""\nQuestion:"",sequence)     score_list = [(score(x),x) for x in chunkify(sequence, partition_number)]     return ''.join(zip(*sorted(score_list))[1])   Edit: improvements  Edit2: Just for fun:  def score(group):     return sum(letter > test for idx, letter in enumerate(group) for test in group[idx+1:])"
learnpython,3cskjd,Peterotica,1 point,Fri Jul 10 14:07:28 2015 UTC,I completely rewrote it. It is better but fails on the very last edge case. Any chance you can tell me why? :D  http://pastebin.com/ejNR9zDE
learnpython,3cskjd,earlandir,1 point,Fri Jul 10 14:33:26 2015 UTC,"Look at my score() function from earlier.  If that does not work, then you need to describe in words what you are trying to do."
learnpython,3cskjd,earlandir,2,Fri Jul 10 16:50:10 2015 UTC,I think there is a problem with the code that calculates the inversion number. It looks like the problem comes from line 16. Note that group.index(letter) will return the index of the first instance of the given letter. 'GCATCTAGCA'.index('G') will always return 0 even though your algorithm seems to sometimes want the index of the later 'G'.
learnpython,3cskjd,NoLemurs,1 point,Fri Jul 10 16:44:15 2015 UTC,You are right!! Thank you!!!!!!!
learnpython,3cqe0o,Bunslow,5,Thu Jul 9 22:58:12 2015 UTC,"I don't think you'll find a tutorial using the async/await syntax, because that syntax requires Python 3.5, which is still in beta.  However, here's a brief tutorial about one of the clearest use cases for asyncio: Fast Scraping in Python with asyncio  Here's one that builds up the gritty details of how async code works, then simplifies it with asyncio: Understanding Asynchronous IO With Python 3.4's Asyncio And Node.js"
learnpython,3cqe0o,rspeer,2,Fri Jul 10 00:55:53 2015 UTC,This is the best 'basic' asyncio tutorial i've been able to find. Otherwise i've been trying to deciphering the Documentation
learnpython,3cqpbx,shakhaki,9,Fri Jul 10 00:29:39 2015 UTC,"You can't take input using input() if you're using Pygame.  That blocks the GUI event loop, which prevents Pygame from being able to repaint the window.  A blocked event loop is also what happens when a program hangs or crashes, so that's why it looks familiar, although it's not crashed at all, it's just waiting for input in a way that prevents the GUI from interacting with the system."
learnpython,3cqpbx,Rhomboid,1 point,Fri Jul 10 01:03:18 2015 UTC,"I am using Pygame. Should I use the ""key"" module in Python?"
learnpython,3cqpbx,Rhomboid,5,Fri Jul 10 01:06:41 2015 UTC,"No, you don't need a module.  You are already receiving key up and key down events in your event loop.  You just have to process them."
learnpython,3cqpbx,TagSmile,3,Fri Jul 10 01:12:34 2015 UTC,"From googling ""Pygame events"":  https://www.pygame.org/docs/ref/event.html  KEYDOWN      (unicode, key, mod) KEYUP            (key, mod)   Looks like there are KEYUP and KEYDOWN events.  Nice KEYDOWN example, from googling ""pygame KEYDOWN example"":  http://stackoverflow.com/questions/25494726/how-to-use-pygame-keydown  I've never used pygame, just wanted to show the type of search you could do to find an anwser"
learnpython,3cqpbx,iminurnamez,1 point,Fri Jul 10 03:04:27 2015 UTC,This worked! I modified line 32's  key = input('wasd')   and I now instead use  if pygame.key.get_pressed()[pygame.K_w]:     y-=5 elif pygame.key.get_pressed()[pygame.K_a]:     x-=5 elif pygame.key.get_pressed()[pygame.K_s]:     y+=5 elif pygame.key.get_pressed()[pygame.K_d]:     x+=5 else:     pass   is there a more OOP way to do this? Such as  movement_keys = pygame.key.get_pressed()[pygame.K_()]:  if movement_keys(w):     y-=5 #and so on through the rest of the movements
learnpython,3cqpbx,hw_t_dstr_ngls,2,Fri Jul 10 16:27:36 2015 UTC,"key.get_pressed returns a dict with boolean values for each key (True meaning the key is currently depressed) so your second example would just be   pressed = pygame.key.get_pressed() if pressed[pygame.K_w]:     y -= 5   However, this doesn't work the same as handling individual events (like /u/hw_t_dstr_ngls's example). Essentially, you'd use get_pressed when you want to respond to the user holding down a key and you'd use individual events like KEYDOWN and KEYUP when you want to respond to a single press. The snippet above, for example, would decrement y by 5 every tick if the ""w"" key is held down. That would be 60 times a second if you're running at 60 FPS. Which brings up the point that you're not currently doing anything to control framerate so your game will just run as fast as the interpreter can execute it. Creating a Clock object by adding this before your game loop  CLOCK = pygame.time.Clock()   and this inside it  CLOCK.tick(60)   will keep the framerate from exceeding 60 frames per second."
learnpython,3cqpbx,shadeofmyheart,1 point,Fri Jul 10 19:16:19 2015 UTC,This was an excellent write up. I'll try this out and come back to the thread for future posts.
learnpython,3cqpbx,Mekire,2,Fri Jul 10 21:31:12 2015 UTC,You should look at this part:  for event in pygame.event.get():     if event.type == QUIT:         pygame.quit()         sys.exit()   There's special even type called KEYDOWN that is triggered when a key is pressed on the keyboard.      elif event.type == KEYDOWN:         if event.key == K_w:             y -= 5         if event.key == K_a:             x -= 5         ... etc
learnpython,3cse1e,Comm4nd0,1 point,Fri Jul 10 11:39:56 2015 UTC,Ah i know why! fixing now...
learnpython,3cse1e,hudsonpenner,1 point,Fri Jul 10 11:55:53 2015 UTC,fixed
learnpython,3cse1e,hudsonpenner,1 point,Fri Jul 10 11:59:28 2015 UTC,The draw_dice() function might be a little bit cleaner if you made one big string using triple quotes instead of separate print statements.
learnpython,3cpffs,guy495,5,Thu Jul 9 18:40:05 2015 UTC,The sidebar has it all: https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_python.3F  Pick one dive into it. Once you think you get the basics start on a project of your own and learn while doing stuff you like. :)
learnpython,3cpffs,FlockOnFire,4,Thu Jul 9 18:49:36 2015 UTC,Think like a computer scientist  Worked for me.
learnpython,3cpffs,MLGsallados,4,Fri Jul 10 01:06:32 2015 UTC,"I'd recommend starting with the codeacademy course. While I didn't learn too much from it, it got me comfortable with the basics and taught me a little about syntax and structure, which were good building blocks for me to continue learning with other resources."
learnpython,3cpffs,Cold_Bagel,1 point,Thu Jul 9 20:31:57 2015 UTC,What resources did you use after Codecademy?
learnpython,3cpffs,RedXabier,1 point,Fri Jul 10 19:24:43 2015 UTC,"I tried finding other courses similar to codeacademy, I never made it longer than an hour on any of them but they were things like codeabby and project euler. The last course I've worked with has been ""Automate the Boring Stuff with Python"" and I've found it so incredibly interesting and helpful. I skipped all of the intro things and went to chapter 7 with the regexes and I've been using that in all of my programs so far. I even bought the book just because it's so cool."
learnpython,3cpffs,Cold_Bagel,2,Fri Jul 10 19:40:02 2015 UTC,Dive Into Python is aimed at experienced programmers. Someone with no coding experience would definitely get lost trying to follow it. I think you should try a few books and see which one works best for you. Or maybe join an online course with so you can find some fellow students to study with you.
learnpython,3cpffs,ruicoder,1 point,Thu Jul 9 21:00:33 2015 UTC,"Thanks everyone!  You are right. I took a look at Dive into Python and it looks too ""heavy"" for someone without programming experience.   I think I will try with Non-Programmer's Tutorial for Python 3 and A byte of Python 3. That seems alright for total beginners."
learnpython,3cpffs,ruicoder,2,Thu Jul 9 21:07:10 2015 UTC,Good luck! Definitely post here or even send me a PM if you get confused.
learnpython,3cpffs,soqets,2,Thu Jul 9 21:14:45 2015 UTC,"Here's another tutorial that you can check out to see if you:    http://www.openbookproject.net/thinkcs/python/english3e/index.html   It's called ""How to Think Like a Computer Scientist,"" and teaches the Python 3 version. I'm currently reading it and just started the 2nd chapter so I can't say whether it's good or not. I've asked a lot of people on IRC for a good tutorial and a couple of them recommended this, then I asked some people if it was a good tutorial for complete beginners and they replied ""yes.""  Try just sticking with one tutorial inside of two. You don't want to be looking all over the place for information. If you have to do that, then it wasn't a good tutorial to begin with. Everything should be in that one place.  If you're just going to stick to ""Byte of Python 3,"" and the Non-Programmer's Tutorial then you'll need this:   Link to the PDF version   Here's an extra:   Dream in Code Python Forum   Dream in Code is probably the most active Python forum I could find online. You can use it and r/learnpython whenever you have questions, or you just stick to one. It's your choice"
learnpython,3cpffs,sepehrhm,1 point,Thu Jul 9 23:25:25 2015 UTC,"I love Dive Into Python, but I feel like it mostly targets people with beginner experience in Python, as well as experienced programmers in other languages.  I find the book very interesting, but also very discontinuous.  Again, I love the book and recommend it to everyone. The author was clearly enthusiastic about programming and Python. IIRC, he used to be a philosophy major, which makes him a lot cooler."
learnpython,3cpffs,jextr,2,Fri Jul 10 00:02:00 2015 UTC,"Python class starting in a day! It's part of a two part course, both free.   https://www.coursera.org/course/interactivepython1"
learnpython,3cpffs,Creatura,3,Fri Jul 10 00:50:56 2015 UTC,"this is fucking amazing, I just dipped my feet in the water yesterday (learn python the hard way) and I am filled with a burning sensation of a career I could actually spend my life on. and then there's a free class starting the next day? thank you so much"
learnpython,3cpffs,azmanz,2,Fri Jul 10 02:48:29 2015 UTC,"Very similar for me, this will be great."
learnpython,3cpffs,hsfrey,2,Sat Jul 11 01:04:01 2015 UTC,"The Quick Python Book by Harms and McDonald.  No fucking supercilious attitude like ""the Hard Way""."
learnpython,3cpffs,cdcformatc,2,Fri Jul 10 06:21:02 2015 UTC,There is a good list of resources in the wiki.  Just pick one they are all good.   I recommend Dive into Python 3.
learnpython,3cpffs,not_perfect_yet,1 point,Thu Jul 9 18:48:31 2015 UTC,"Learn the super basic stuff. Codeacademy style. Variables, loops, functions and that kind of stuff and then go straight away and pick a project to dive into. Doesn't matter what, just small enough in scope that you can finish it and feel good about finishing it. That's what counts. Use google and stackoverflow, ask around, or find tutorials to see how other people did something like your project."
learnpython,3cpffs,Korlyth,1 point,Thu Jul 9 21:48:19 2015 UTC,"I've been doing a similar thing over the last couple of months. I've done 2 of these three courses and they've helped a lot. Note that one of them is not python. But, I think git/github is super handy.  Intro CS: https://www.udacity.com/course/intro-to-computer-science--cs101 (haven't taken this yet.Uses python)  Intro Programming: https://www.udacity.com/course/programming-foundations-with-python--ud036 (taken this one. I liked it)  git/github: https://www.udacity.com/course/how-to-use-git-and-github--ud775 (taken this one and found it super useful for building a portfolio."
learnpython,3cpffs,p_p_r,1 point,Fri Jul 10 00:12:52 2015 UTC,Learning Python by Mark Lutz is also good but too lengthy.
learnpython,3cpffs,manoweng,1 point,Fri Jul 10 04:07:46 2015 UTC,"Wow, thank you guys for your replies! I started with A byte of Python 3 and it's ok, but I found it, content short. But I will continue to learn and after finushing it, try something elss.  Now, I have a question. What do you think, after how many years of learning to code, would you become hiring material? I know, it depends on how fast do you learn, job itself, but generally speaking?  One friend said after a year, other said after 4-5 years.."
learnpython,3cpffs,callmelucky,1 point,Fri Jul 10 23:26:02 2015 UTC,Learn Python The Hard Way is a good starting point for a beginner in the programming world.  http://learnpythonthehardway.org/book/
learnpython,3cqjsb,ilikeyourblackcat,2,Thu Jul 9 23:44:59 2015 UTC,"Interesting idea, but implementation looks overcomplicated:   If I understand, function Word can be easily simplified to:  def Word(inTitle, inGroup):     return any(name.lower() in inTitle.lower().split() for name in inGroup)   (It checks if any name from list inGroup is mentioned in string inTitle?) Enormous if-elif block should be just one loop over list of names Confusing name BlackCatBot.db for just pickle file        with open('blackCatBot.db', 'w') as pickle_out:         pickle.dump(done, pickle_out)   Doesn't this overwriting 'database' of ids every time?"
learnpython,3cqjsb,04h,1 point,Fri Jul 10 09:51:47 2015 UTC,"function Word can be easily simplified to:   TIL, thank you.   Enormous if-elif block should be just one loop over list of names   You're right, but i wanted to make it look simpler to understand, then added that complex thing to remove non alphabet characters anyway. Its a bit messy/lazy.   Confusing name BlackCatBot.db for just pickle file   What would you name it, what is the appropriate file extension?   Doesn't this overwriting 'database' of ids every time?   Its constantly working with a baseline of the last 25 posts, only looking at and reacting to that slice, so it doesnt need to keep more. Every time it overwites its just refreshing the last 25."
learnpython,3cqjsb,_inu,1 point,Fri Jul 10 15:30:45 2015 UTC,"What would you name it, what is the appropriate file extension?   Idk, txt or pickle or something. It's not a crime to call it db, just unexpected to get plain-text intead of real database   Every time it overwites its just refreshing the last 25.   Indeed. My misread"
learnpython,3cqjsb,04h,1 point,Fri Jul 10 18:02:10 2015 UTC,it says the paste has been removed.
learnpython,3cqjsb,iammrinal0,1 point,Fri Jul 10 06:56:32 2015 UTC,Just some garbage at the end of the links: [4]
learnpython,3cqjsb,04h,1 point,Fri Jul 10 09:00:57 2015 UTC,"oops, didn't notice that. thanks."
learnpython,3cqjsb,iammrinal0,1 point,Fri Jul 10 09:23:32 2015 UTC,"I just noticed something looking at the code again, when not testing, and it goes on the correct sub, it needs:          if submission.is_self == True:   on line 98 changing to False, otherwise it will only reply to self posts rather than exclude them."
learnpython,3cqjsb,_inu,1 point,Fri Jul 10 14:53:55 2015 UTC,"And lines 68 through 83 can be replaced with:      def Word(inTitle, inGroup):         return any(name.lower() in inTitle.lower().split() for name in inGroup)   and it seems to work, tested it, but not fully, so its possible theres some edge case it doesnt work with, i haven't looked into what its doing fully yet."
learnpython,3cqrlw,Hober-Mallow,2,Fri Jul 10 00:49:53 2015 UTC,"Didn't I make play_point a global variable when I put it before the main() function?   Yes. But ""main()"" runs in it's own little world (known as 'scope'). You can read global variables outside of a function's scope, but if you want to write to them you have to explicitly tell python to use the global variable. Add this after line 23:  global play_point   I bet you can figure out how to do this without using global variables (in this case it's really easy)."
learnpython,3cqrlw,novel_yet_trivial,2,Fri Jul 10 00:55:00 2015 UTC,"Hello,  I inserted the code that you mentioned and it worked perfectly!  Also, I think I figured out what you meant with not using global variables. I declared play_point and com_point with both equaling 0 inside of main().   Then I made a while loop that worked while play_point and com_point were less than 10.   I moved the if statement that determined the final winner after the while loop. It seems to work fine and it doesn't have global variables!  Thanks you so much for your help!"
learnpython,3cqrlw,olyko20,3,Fri Jul 10 02:33:53 2015 UTC,"Get in the habit of not using global variables (global constants are ok.) Even though they are allowed, a program using global variables with thousands of lines of code can be difficult to debug."
learnpython,3cptjy,maddoc74,8,Thu Jul 9 20:23:36 2015 UTC,"There is a common saying that everything in python is an object, including functions and the like.  This means it is easy to dump them into structures and iterate over them, checking for fits and then applying the functions.  This means you can do something like this:  def phase1(f,s,t):     return sum([f,s,t])/3  def phase2(f,s,t):     return f+s/t  RULES = {         (0,100):phase1,         (101,200):phase2,         }  def apply(f,s,t):     '''     apply appropriate rules to f,s,t items     '''     for (start,stop ), rule in RULES.items():         print(start,stop,rule)         if start<=f<=stop:             return rule(f,s,t)  print(apply(100,2,3)) print(apply(101,2,3))   This can be done with functional programming or objects.  If you provide a bit more context, we could probably provide some more to think about."
learnpython,3cptjy,gengisteve,3,Thu Jul 9 20:48:55 2015 UTC,"I was thinking something like this would be good as well. Breaking apart logic in to separate functions is far better for debugging and allows you to wrap small bits of logic in a method with a meaningful name opposed to a big long mess of conditional statements.  I kind of scanned over the exact use case here so maybe this is not ideal, but a nice pythonic way of simplifying the above would be to use decorators like this:  #!/usr/bin/env python  RULES = []   def rule(func):     RULES.append(func)      return func  @rule def rule_1(conditions):     print ""rule 1 ran""  @rule def rule_2(conditions):     print ""rule 2 ran""  def run_rules():     conditions = {}      # edit: It was bad practice to override the module scope 'rule' with a local variable.     # Renaming to current_rule     for current_rule in RULES:         current_rule(conditions)  if __name__ == '__main__':     run_rules()"
learnpython,3cptjy,xentralesque,1 point,Thu Jul 9 21:51:27 2015 UTC,Nice!  Thanks! (not OP)
learnpython,3cptjy,elbiot,1 point,Thu Jul 9 22:40:07 2015 UTC,That's pretty rad.  Nice!
learnpython,3cptjy,gengisteve,1 point,Fri Jul 10 02:06:48 2015 UTC,"This looks kinda like what I need! What's going on from 'def rule(func)' to 'return wrapper'?  Also, here's a rough sketch of what I want to happen: http://i.imgur.com/9d3JvLj.png"
learnpython,3cptjy,xentralesque,1 point,Fri Jul 10 14:58:30 2015 UTC,"Oh actually, now that I think about it, that's not really necessary. When defining a decorator function, it needs to return a function. What people often do, as I did here is unnecesary (posting it as I'll edit the above code):  def rule(func):     def wrapper(*args, **kwargs):         return func(*args, **kwargs)      RULES.append(func)      return wrapper   That could be simplified by simply returning the function we were passed in like:  def rule(func):     RULES.append(func)      return func   What happens is, when we decorate rule_1 with @rule, the rule() function is passed a reference to the function it is decorating, so if you want to make modifications to the way that function is being called, you can do so there. At my job, we use decorators do simplify some common tasks like this...  from functools import wraps  def objectified(func):     @wraps(func)     def inner(**kwargs):         kwargs['some_object'] = SomeObject.find_by_id(kwargs.pop('some_object_id'))          return func(**kwargs)     return inner   Note: I don't recall what exactly functools.wraps does. Meh. Just some magic that I'll eventually go and RTFM on. We can then declare a function like:  def do_some_shit(some_object):     print some_object.name   and call it like this:  do_some_shit(some_object_id=1)   Get it? So decorators are essentially parsed when the code is loaded (as we do in the original example I provided) and also allow you to modify how functions are called."
learnpython,3cptjy,gengisteve,1 point,Fri Jul 10 15:23:38 2015 UTC,huh. That's pretty neat!
learnpython,3cptjy,gengisteve,2,Fri Jul 10 15:25:12 2015 UTC,"Each rule has assigns a new value to the flows of sub1 and sub2. The flows are either scaled versions of the current flow, or a brand new flow according to the weight of the subject. You can effectively say that each rule has a Boolean value, with only one rule being true at a time. And it also has a new flow value that's either a scaled version of the previous flow ( flownext = .85 * flowcurrent) or an independent function of the weight (5/CONCENTRAION * weight). I'd probably have to hardcore these values to corresponding arrays, but would welcome some other way."
learnpython,3cptjy,gengisteve,3,Thu Jul 9 21:07:23 2015 UTC,"A lot depends on the complexity of the tests and the equations.  If they are simple enough, a list of lambdas will suit:  from collections import namedtuple Flows = namedtuple('Flows', ['a','b'])  SIMPLE_RULES = [         (lambda f: 0<=f.a<=9, lambda f:Flows(f.a+2,f.b)),         (lambda f: 10<=f.a<=50, lambda f:Flows(f.a+5,f.b)),         ]   f = Flows(1,2) for test, rule in SIMPLE_RULES:     if test(f):         f = rule(f)  print(f)   This creates a simple object, called a namedtuple, to handle the two flows (here a and b b/c 1,2 did not work as names).  If flow.a is between 0-9, it adds 2 to flow.a, if it is between 10-50, it adds 5 to flow.a.  The downside is that this could get out of hand quickly if you have really complex rules and tests.    On the other end of the spectrum would be to create a Ruler class, that takes a flow object and has a command that runs a pass through each rule that is defined in the class.  This can be done in interesting ways.  For example:  from collections import namedtuple  CONCENTRATION = 10 WEIGHT = 5  Flows = namedtuple('Flows', ['a','b'])  class Ruler(object):     def __init__(self, flows):         self.flows = flows          self.method_names = [m for m in self.__dir__() if m.startswith('do_')]         self.methods = [getattr(self,m) for m in self.method_names]      def __iter__(self):         return self      def __next__(self):         for m in self.methods:             check = m()             if check:                 return check          raise StopIteration      def do_test1(self):         if 10<self.flows.a<100:             self.flows = Flows(self.flows.a + 10, self.flows.b)             return self.flows         return False      def do_test2(self):         if 0<self.flows.a<=10:             self.flows = Flows(self.flows.a + 3, CONCENTRATION/WEIGHT )             return self.flows  start = Flows(1,2) print(start) r = Ruler(start)  for flow in r:     print(flow)   This creates an iterable class that takes in an initial flow rate.  Each iteration of the class object then runs every do_ method until it finds one that works with the current flow rates, then returns the current flow state.  If no method hits, it stops the iterations.  The advantage here is that you can more easily document the various flow methods, and adding a new one is as simple as defining a basic function that tests the current flow rates and dumps the new one if within the parametres specified."
learnpython,3cptjy,ivosaurus,1 point,Thu Jul 9 21:38:33 2015 UTC,"Ah okay! The ruler class sounds a lot like what I want to do. Interesting. The flows don't determine the new flows, only the 3 most current measurements, although the idea is there. What's going on in the __init__ on the Ruler class? Also, is it okay to just pass in a general object and not something more specific, like a Flows?"
learnpython,3cret8,Querce,2,Fri Jul 10 04:11:27 2015 UTC,"I just discovered curses today, with which you can set a time out.  Not saying you can't do it with raw_input and threading, I just don't know."
learnpython,3cpzsx,auggielife,4,Thu Jul 9 21:08:11 2015 UTC,pywin32 provides access to the windows api which should allow you to resize/move windows.  Next I guess would be to google how to monitor running processes in python.  Then you'll want to set up a while loop (so it runs perpetually) filled with a series of if statements regarding whatever process starts.
learnpython,3cpzsx,tk421whyarentyouatyo,1 point,Thu Jul 9 21:52:13 2015 UTC,"My God, what is this?!"
learnpython,3cpzsx,jabez007,2,Fri Jul 10 00:16:49 2015 UTC,"There is a book called Automate The Boring Stuff, which has a chapter on a lib called pyautogui. It can control mouse clicks and movements, should be able to do what you want pretty easily."
learnpython,3cppj4,montecarlo1,8,Thu Jul 9 19:56:45 2015 UTC,"You have to specify what you want it to return. The way it's written, it'll print three lines of text and return nothing.   Edit: In part 1, you have functions that end with return True or return False. This is the sort of thing you're looking for. You have to use return any time you want a function to return a value. Otherwise, if you try to do something like x = printTrips(t), the function will silently return None and x will equal None."
learnpython,3cppj4,jpfau,2,Thu Jul 9 20:03:26 2015 UTC,How would you return three separate sentences? use a .format?
learnpython,3cppj4,jpfau,10,Thu Jul 9 20:05:40 2015 UTC,"It depends. You can return multiple values like this:  def returnStuff():     a = 1     b = 2     c = 3     return a, b, c   Which you can use to initialize three different variables in one line:     x, y, z = returnStuff()   Which will make x==1, y==2, and z==3.  If you want all three lines returned as one string, build the string first and then return it:  def multiLineString(a, b, c):     result = ""First line contains {}\n"".format(a)     result += ""Second line contains {}\n"".format(b)     result += ""Third line contains {}\n"".format(c)     return result       Or you can build a single multi-line string:  def multiLineString(a,b,c):     result = """"""First line contains {}       Second line contains {}       Third line contains {}"""""".format(a, b, c)     return result   Like /u/JustTurrble suggests in his/her second point, think about why you need them returned. Are you going to do something further with these strings? Or do you just need to display them in the console? If it's the latter, simply printing them is all you need."
learnpython,3cppj4,JustTurrble,2,Thu Jul 9 20:15:13 2015 UTC,Where are you returning them? Why do you need them returned? Why would they need to be 3 separate sentences?
learnpython,3cppj4,jpfau,1 point,Thu Jul 9 20:17:45 2015 UTC,My practice exercise wants me to do print under a method. I know its retarded but i am having a hard time putting it together. I tried /u/jpfau suggestions and it won't work since the function is handling one parameter entry at a time (per the loop).
learnpython,3cppj4,JustTurrble,2,Thu Jul 9 20:41:35 2015 UTC,"If you have to only print, then you don't need to return anything. Instead of assigning the result of a called function to a variable like   x = printTheseLines()   just call the function by itself:  printTheseLines()      it won't work since the function is handling one parameter entry at a time   Does this work? Note that if any of the values are digits instead of strings, you need to use %d instead of %s  def printTrip(t):     result = ""Trip from %s to %s\n"" % (t.departCity, t.arriveCity)     result += ""Departs at %s on %s\n"" % (t.departTime, t.departDay)     result += ""Arrives at %s on %s\n"" % (t.arriveTime, t.arriveDay)     print result   I noticed you have extra commas at the end of your first and second print statements. You need to delete those. The line shouldn't end in a comma followed by another print statement."
learnpython,3cppj4,shandelman,1 point,Thu Jul 9 20:55:07 2015 UTC,I'm gonna try this. I was using place holders {} and it didn't work.
learnpython,3cppj4,pqu,2,Thu Jul 9 21:45:23 2015 UTC,"Well, if what you want is this (copied from your code):  def printTrip(t):     print'Trip from', t.departCity, 'to', t.arriveCity,      print 'Departs at', t.departTime, 'on', t.departDay,      print 'Arrives at', t.arriveTime, 'on', t.arriveDay   ...to simply print out three statements, then it's close to done. Just put some space after the first print and remove the commas at the end of each line.  If you're returning them, the question is what do you need from them?    Do you need to print them all at once from a different method? You can smash them all together with \n (line breaks) in between, making it a single string. .format does make that simpler, I think:  def printTrip(t):     # Neat trick: you can break up long strings onto multiple lines     # by enclosing them in parentheses ().     # This helps you stick to PEP8 for readability:     output = (         'Trip from {depart_city} to {arrival_city}\n'         'Departs at {depart_time} on {depart_day}\n'         'Arrives at {arrival_time} on {arrival_day}'     ).format(         depart_city = t.departCity,         depart_time = t.departTime,         depart_day = t.departDay,         arrival_city = t.arriveCity,         arrival_time = t.arriveTime,         arrival_day = t.arriveDay,     )     # `output` is a single string with everything you need.     return output  for trip in tripList: # use singulars in for-loops: you're working on ONE object at a time     out_something = printTrip(trip)     print out_something     Do you need to work on the individual lines outside the function? Assign them to separate variables within the function, return all of those variables on the same line, then store them in three variables where it's called:  def printTrip(t):     output_one = (         'Trip from {depart_city} to {arrival_city}'     ).format(         depart_city = t.departCity,         arrival_city = t.arriveCity,     )     output_two = (         'Departs at {depart_time} on {depart_day}'     ).format(         depart_time = t.departTime,         depart_day = t.departDay,     )     output_three = (         'Arrives at {arrival_time} on {arrival_day}'     ).format(         arrival_time = t.arriveTime,         arrival_day = t.arriveDay,     )     return output_one, output_two, output_three  for trip in tripList: # use singulars in for-loops: you're working on ONE object at a time     out1, out2, out3 = printTrip(trip)     print out1     print out2     print out3"
learnpython,3cqj8n,awwfishsticks,2,Thu Jul 9 23:40:31 2015 UTC,Where is the data stream is coming from? Another image format/file?  Another library?  Directly from a device?
learnpython,3cqj8n,multiball,1 point,Fri Jul 10 00:41:50 2015 UTC,"If you've ever worked with a DICOM (digital imaging and communication in medicine) file, that's what it is. Pretty much its just a container that contains image information and equipment/setup parameters, as well as patient information. There's an ""attribute"" within that file called ""Pixel Data"" which is the image data. If the file specifies that the image contained is ""JPEG 2000 Compressed"", then that's what I assume the Pixel Data is. There are other uncompressed data types that can be stored in a DICOM file, but those are easy to work with. The problem is that I will be given these files either compressed or uncompressed. They come from many, many sources and there's no way to ensure that they will all be uncompressed."
learnpython,3cqj8n,elbiot,1 point,Fri Jul 10 01:38:15 2015 UTC,You probably need a header and other stuff.  Why not just create the jpg from uncompressed bytes?  I think otherwise you'll have quite a bit of hacking to do.
learnpython,3cqj8n,elbiot,1 point,Thu Jul 9 23:47:35 2015 UTC,"The image data in the files I'm working with can come compressed or uncompressed. Because they will be coming from various sources, there will probably be those with compressed data. I don't know anything about the format of a JPEG 2000 header or the other stuff, and there is no way I can make every source conform to the uncompressed data format. However, I did find a command line tool called gdcm that can convert the files to uncompressed format, so.. problem solved. :)  Although sometime down the line I want to build a python based decompressor for the types of files I'm working with (DICOM). For now I'll have to access the command line from python."
learnpython,3cr9mu,Lucas_WitDa_LidOff,7,Fri Jul 10 03:24:53 2015 UTC,">>> 'this is a test string'.replace(' ', '')"
learnpython,3cr9mu,raylu,3,Fri Jul 10 03:28:27 2015 UTC,Son of a bitch.  EDIT: Wait. Doesn't that wreck the string itself? I need to keep the original. I'm using this to mass-rename files.
learnpython,3cr9mu,jeans_and_a_t-shirt,3,Fri Jul 10 03:29:01 2015 UTC,Python strings are immutable.  The original string is left intact with spaces.  The replace method returns a copy of the string minus the spaces.
learnpython,3cr9mu,WhyCause,1 point,Fri Jul 10 03:59:50 2015 UTC,Got it. Thanks. :)
learnpython,3cpvxa,The_Sten,2,Thu Jul 9 20:39:54 2015 UTC,"Let's see your code. I'm a beginner too, but it seems like you should have a loop that starts with asking the user for input and then navigates to the next room. You could have a special command that breaks the loop with you want to quit.  while True:     input = input(""What room would you like to go to?\n"")         if input = ""Exit"":             break         else:             [move the user to the next room]"
learnpython,3cpvxa,fuzzyfractal42,4,Thu Jul 9 20:46:23 2015 UTC,"Just a tip, you don't actually need to use the else case, because if input = ""Exit"" then it will break out of the loop and never run that code.   So this functions exactly the same way.  while True:     input = input(""What room would you like to go to?\n"")     if input == ""Exit"":         break     [move the user to the next room]   This will keep your code shallow and un-nested, especially if you wanted to add extra cases, like this  while True:     input = input(""What room would you like to go to?\n"")     if input == ""Exit"":         break     if input == ""Restart"":         continue     [move the user to the next room]"
learnpython,3cpvxa,echocage,1 point,Thu Jul 9 21:08:08 2015 UTC,"Ah good point, although I might still do it my way in case I decided later to change the action in the conditional statement to something other than breaking the loop."
learnpython,3cpvxa,fuzzyfractal42,2,Thu Jul 9 21:13:45 2015 UTC,I see your point! I just favor this way of doing it this way because it's less lines :D
learnpython,3cpvxa,echocage,2,Thu Jul 9 21:23:14 2015 UTC,"The other suggestions on here are good, but let me offer mine (I'm a python beginner as well.) You could also use a sentinel value. Not entirely sure how to explain it, so I'll offer an example.  input = input('What room would you like to go to? (or exit to quit)\n') while input != 'exit':     #look around the room or do whatever here      input = input('What room would you like to go to? (or exit to quit)\n')   This leaves out any if/else and break statements."
learnpython,3cpvxa,olyko20,1 point,Thu Jul 9 21:30:20 2015 UTC,I like this idea. It's a good refinement of my suggestion.
learnpython,3cpvxa,fuzzyfractal42,1 point,Fri Jul 10 14:53:32 2015 UTC,"Hard to help without the code.  If it's large, you may want to use Pastebin or Gists."
learnpython,3cpvxa,JustTurrble,1 point,Thu Jul 9 21:17:36 2015 UTC,"Bpaste and vpaste are both better than pastebin IMO. They're not as popular, so just a heads up :)"
learnpython,3cpvxa,__baxx__,1 point,Thu Jul 9 21:36:22 2015 UTC,"To each their own. Hadn't heard of them before, so will check them out. Thanks. :)"
learnpython,3cpvxa,JustTurrble,1 point,Thu Jul 9 21:40:17 2015 UTC,"Yeh I only heard of vpaste from the vim irc channel, and bpaste from the python channel! Vpaste is really clean actually, but bpaste has line numbers... Decisions !"
learnpython,3cpvxa,__baxx__,1 point,Thu Jul 9 21:48:53 2015 UTC,"I checked em. I still kind of prefer Gists. Has line numbers, does languages, allows forking to your Github profile, etc. (not that I've actually done any of those, but still)."
learnpython,3cpvxa,JustTurrble,1 point,Thu Jul 9 22:43:51 2015 UTC,Oh yeah sorry - I can completely get gists being preferred! It was pastebin I was giving the awkward eye :)
learnpython,3cpvxa,__baxx__,1 point,Thu Jul 9 22:55:47 2015 UTC,"Sidebar in this sub has both listed, so I figure follow that convention."
learnpython,3cpvxa,JustTurrble,1 point,Thu Jul 9 22:57:43 2015 UTC,"Cool, pastebin has adds whereas the others don't. But If it's in the sidebar..."
learnpython,3cpvxa,__baxx__,1 point,Thu Jul 9 23:05:24 2015 UTC,Sorry for not responding in a timely manner.  Here is my code: http://pastebin.com/6LfgLsV0 I'm going to edit it a bit now.  Thanks for the responses by the way!
learnpython,3cpwdf,Kaxitaz,1 point,Thu Jul 9 20:42:57 2015 UTC,"For the second one, see if you can affect the process priority while unzipping the file.  I am currently on mobile so won't be able to help any further than ideas sorry."
learnpython,3cpwdf,ElecNinja,1 point,Thu Jul 9 22:55:24 2015 UTC,I found this (https://docs.python.org/3.4/library/heapq.html) but still have to look better at it. I don't know if this is what you talked about.
learnpython,3cpwdf,Justinsaccount,1 point,Thu Jul 9 23:59:06 2015 UTC,"# filter files: only want those having 'wraped'                   if re.search(r'_warped.nii', name2) is None:                              continue"
learnpython,3cpwdf,Justinsaccount,1 point,Thu Jul 9 23:48:21 2015 UTC,"Indeed there's a typo there, but the comment is wrong. Was that your point?"
learnpython,3cqmpa,tbharber,2,Fri Jul 10 00:07:51 2015 UTC,"Are you sure this math even makes sense? The percent difference will depend on what you're taking as the basis of the comparison. For example, what's the percent difference between 5 and 10? Well, relative to 5, 10 is 100% greater; relative to 10, 5 is 50% less.  Maybe what you want is something more like a standard deviation? Or maybe just computing each difference relative to the average or the median or the mode?"
learnpython,3cqmpa,stebrepar,1 point,Fri Jul 10 08:36:56 2015 UTC,"There is no built in way (that I know of). Here is a tiny function that will do that:  def within_percentage(test, target, percent=0.05):     high = target * (1 + percent)     low = target * (1 - percent)     return low < test < high"
learnpython,3cqmpa,novel_yet_trivial,1 point,Fri Jul 10 00:29:46 2015 UTC,Thanks.  I was doing something similar but more complicated.  I was creating a high and low value for each variable so I end up with a total of 6 variables in the IF statement.  It works but is messy and doesn't scale very well as I will need to do this for more variables than just 3.  I was hoping there was a much easier way.
learnpython,3cqmpa,novel_yet_trivial,3,Fri Jul 10 01:34:28 2015 UTC,"If you need to do something with an indeterminate number of variables you need a list. If your data is in a list you may be interested in the built-in all() function:  >>> data = [100,97,96] >>> if all(within_percentage(x, 100) for x in data): ...  print ""yay!"" ...  yay!"
learnpython,3cqkdw,jivanyatra,1 point,Thu Jul 9 23:49:35 2015 UTC,"Yay golf!  variants:  def f(ns, ds):     return [n for n in ns if all(n % d == 0 for d in ds)]   f = lambda ns, ds: [n for n in ns if all(n % d == 0 for d in ds)]  f = lambda ns, ds: [n for n in ns if not any(n % d for d in ds)]   simple loops:  def f(ls, div):     r = []     for n in ls:         for d in div:             if n % d:                 break         else:             r.append(n)      return r   without for..else:  def f(ls, div):     r = []     for n in ls:         all_divisors_good = True         for d in div:             if n % d:                 all_divisors_good = False                 break         if all_divisors_good:             r.append(n)      return r       All and Any for..else"
learnpython,3cqkdw,anossov,1 point,Fri Jul 10 00:04:17 2015 UTC,"Thank you so much! I think the all() was missing in my approach. I definitely didn't even consider for..else, haha. Awesome, I'm on track and it makes sense.  Edit: it's not a direct answer, because it's not two nested list comprehensions, but I think it's enough to work with. Thanks!"
learnpython,3cqkdw,kalgynirae,1 point,Fri Jul 10 00:18:51 2015 UTC,"I feel like if this can be done in a nested list comprehension, then it should be able to be done pretty simply in a nested for loop. Maybe I'm way off track here, or maybe the problem is wrong, or maybe I'm close and just don't see it. Any help at all is appreciated.   If you get stuck like this, you should try to break the problem down further. I like to write out the function as literally as possible using functions that I haven't written yet (but will be simpler to write). For example:  def f(numbers, divisors):     result = []     for number in numbers:         if divisible_by_all_divisors(number, divisors):             result.append(number)     return result   Presumably you can figure out how to write the function divisible_by_all_divisors. Once you've done that, then you can combine them into a single function if you want to."
learnpython,3cp61u,Northstat,2,Thu Jul 9 17:30:27 2015 UTC,I think you might need to throw a sort on there as well to sort by count versus index.
learnpython,3cp61u,Ditaki,1 point,Thu Jul 9 19:00:07 2015 UTC,value_counts() is sorted in descending order by default.  http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.value_counts.html
learnpython,3cp61u,wiiittttt,1 point,Fri Jul 10 05:03:15 2015 UTC,"Yeah, it comes back sorted and I want the sorted view but when I add a .head() or [:10] it doesn't seem to work."
learnpython,3cp61u,wiiittttt,1 point,Fri Jul 10 14:02:32 2015 UTC,This may not be that helpful but it seems to work for me using just pandas with:  df['var'].value_counts()[:10]   I'm not familiar with Seaborn but I downloaded it and tried to run the command with the same data and it doesn't produce the same graph.
learnpython,3cpn7p,gengisteve,1 point,Thu Jul 9 19:41:56 2015 UTC,"Don't run as root.  Seriously.  That said, try changing pythonpath and pythonhome environmental variables to point to the correct version of python."
learnpython,3cpn7p,novel_yet_trivial,1 point,Thu Jul 9 19:46:28 2015 UTC,Gracias senior :D
learnpython,3cpn7p,novel_yet_trivial,1 point,Thu Jul 9 19:51:00 2015 UTC,"I'll assume you have a VERY good reason for running as root. This is usually considered a VERY bad idea.   This has nothing to do with root / normal. This has to do with the directory you start in. When you are logged in as root you are in the /root directory, which contains a script named ""pandas.py"". So python tries to import that. Name your script something else.  I doubt you have 2 installs of python. You listed symbolic links. Use realpath() to see where the executable is.  >>> import os >>> os.path.realpath('/usr/bin/python') '/usr/bin/python2.7"
learnpython,3corxt,galaxyrocker,3,Thu Jul 9 15:48:59 2015 UTC,"PyQt is GPLv3, so your application must by GPLv3 also. (IANAL)"
learnpython,3corxt,TheBlackCat13,3,Thu Jul 9 15:51:34 2015 UTC,"And what all is determined by the GPLv3? That's more of what's confusing me, honestly."
learnpython,3corxt,TheBlackCat13,2,Thu Jul 9 15:55:50 2015 UTC,"It means you have to make your source code available to people who obtain your software and ask for the source code (again, IANAL).  The easiest way is to just put your code on a source-code-hosting site like github or bitbucket and put something on your website linking to it.    However, as long as the people who get your software are also able to get the source code (even if they have to request it directly from you) it is fine.  But since you can have another website handle it for you for free, in most cases it is better to just do it that way."
learnpython,3corxt,Yoghurt42,1 point,Thu Jul 9 16:10:21 2015 UTC,"That's what I needed to know, thank you! The source code is already on Github, and I wasn't planning on taking it off anytime soon, since I use it as a portfolio piece. I was just trying to find a better way to share it to people who don't have experience with Python and all the libraries and such."
learnpython,3corxt,Yoghurt42,1 point,Thu Jul 9 16:17:02 2015 UTC,"Actually, I have another question, regarding PyQt and Qt in general. I made no modifications to those programs, so I don't have to state that I changed anything, correct? And, when I'm telling people how to get the source code, do I just have to tell people where it can be gotten on Github? Like, ""go here and download Qt, then use pip to install PyQt"", etc? Or do I have to include it in a .exe?"
learnpython,3corxt,Yoghurt42,1 point,Thu Jul 9 18:08:50 2015 UTC,"I made no modifications to those programs, so I don't have to state that I changed anything, correct?   From the GPL (emphasis added):   To “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.   So by this definition, you probably modified the library; but I think explicitly stating that you added code would be superfluous, I don't know of any program using GPL Qt that explicitly states it added code because it's obvious.    And, when I'm telling people how to get the source code, do I just have to tell people where it can be gotten on Github?   See section 6, part d)   d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.   tl;dr: Just link to the github page from you project page (where people can download the binary). You only need to make sure that people can access your github page as long as you provide binary downloads.  If you intend to ship a physical copy, you would have provide access to the source for 3 years after shipping (section b)"
learnpython,3corxt,Rubykuby,1 point,Thu Jul 9 22:17:33 2015 UTC,"tl;dr: Just link to the github page from you project page (where people can download the binary). You only need to make sure that people can access your github page as long as you provide binary downloads.   Thanks. I was actually thinking about uploading the binary itself to Github, under the project's repository. That way it'd all be there in one spot, and I don't have a site of my own, yet. Would that cover it all well enough?"
learnpython,3corxt,Rubykuby,1 point,Thu Jul 9 22:24:53 2015 UTC,"Of course. The GPL just wants to ensure that everybody that has access to the binary also has access to the source. Hosting both on github is perfectly acceptable.  BTW: contrary to popular belief, the GPL does not require you to give your program to everyone that asks, you can even sell it. But once you gave the program to somebody, that person must also be allowed access to the source; also, that person is also free to give the program to other people or not.  That's why GPL software is generally free of charge; you could sell it for 100$, but once somebody bought it, they can give it away if they want."
learnpython,3corxt,Rubykuby,1 point,Thu Jul 9 22:36:06 2015 UTC,Thanks so much. That's really a much clearer explanation than trying to read the license itself. You've been a big help. Thanks again.
learnpython,3corxt,juliob,1 point,Thu Jul 9 22:58:52 2015 UTC,You're welcome. Glad I could help.
learnpython,3cnlmk,Comm4nd0,11,Thu Jul 9 08:24:08 2015 UTC,"Not big if you understand what you want, familiar with python syntax and know how to find info. About 10 pages of docs/tutorials/examples, couple hours and basic textbox-button-window app is in your pocket"
learnpython,3cnlmk,04h,7,Thu Jul 9 08:54:22 2015 UTC,"I recently tried to take that step. It seems to me that a lot depends on the choice of the gui framework.  I've tried tk: most things seem to work like I expected them to, but no matter what I do everything looks ugly/dated.  I tried pyqt but got confused. Couldn't really get more than the examples to work. (But it seems to be very powerful once you ""get it"")  At last I gave kivy a go. It felt super intuitive for me and I got slick looking guis with almost no effort... until I tried to do more custom things. The problem for me is that there  are two ways to work with kivy, Python and kv. And from what I found so far not everything is documented twice and I can't convert from one form to the other easily.  TL:DR try a few different frameworks and don't make a final choice quite yet."
learnpython,3cnlmk,finsternacht,3,Thu Jul 9 11:02:23 2015 UTC,i've found kivy to be super intuitive. i've done very complex stuff with it and it hasn't let me down yet.  EDIT: if you have questions about stuff feel free to PM me
learnpython,3cnlmk,grkles,2,Thu Jul 9 14:47:03 2015 UTC,"If you import ttk: from tkinter import ttk  You can do b1 = ttk.Button() , that will make the button lock like a normal windows button"
learnpython,3cnlmk,Tuganazy,1 point,Thu Jul 9 11:57:46 2015 UTC,Thanks I'll definitely give that a try. Albeit Windows is not my focus it's rather a nice bonus that my code might work there aswell ^
learnpython,3cnlmk,finsternacht,3,Thu Jul 9 12:07:22 2015 UTC,"I think it essentially makes them look ""native"" for your platform."
learnpython,3cnlmk,Sean1708,1 point,Thu Jul 9 14:47:55 2015 UTC,"For qt, I've found using the qt designer has helped me build gui apps that look the way I want them to"
learnpython,3cnlmk,ElecNinja,3,Thu Jul 9 22:59:10 2015 UTC,This may be a wild proposal but I'm a noob myself so be gentle with me... How about running a small web server and using a webpage as GUI? I know nothing about the technicalities but it seems to me like webapps are as easy and universal as you can get. I don't know where to start though... So any suggestions from a veteran is appreciated!
learnpython,3cnlmk,avnibu,8,Thu Jul 9 12:34:46 2015 UTC,"Not bad idea. Maybe it's a bit harder, but it's interesting and modern way to make apps. There are excellent tutorial about Flask: http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"
learnpython,3cnlmk,04h,1 point,Thu Jul 9 13:10:49 2015 UTC,This tutorial is amazing.  It was one of the things that had me understanding python and webapps a bit more.  I ended up going with Django due to the django-rest-framework however if I come across a lightweight project I want to do I'm definitely going back to flask.
learnpython,3cnlmk,whoisearth,3,Thu Jul 9 15:33:44 2015 UTC,"If you modularized your code correctly, its only a matter of learning the framework/ event driven paradigm.  If you don't you will face a lot of problems like  Duplication of code - one for GUI and one for CLI, and all the problems which come with it"
learnpython,3cnlmk,wlu56,2,Thu Jul 9 14:02:26 2015 UTC,"For a more nostalgic (and slightly easier) way to create GUIs is with urwid. Technically speaking, it still uses a CLI, but hey, you've got to appreciate it nonetheless."
learnpython,3cnlmk,bookgeek001,2,Thu Jul 9 12:26:21 2015 UTC,I switched from terminal almost immediately after finishing codecademy...  Check zetcode for a short and eyes opening tutorial on pyqt4 or pyqt5...  how 10 lines of code can get you buttons and list or table or some input line...  Qt is also very popular and on the rise... I feel the best choice for gui at the moment.
learnpython,3cnlmk,DoTheEvolution,1 point,Thu Jul 9 15:17:44 2015 UTC,zetcode    That's a great resource I somehow didn't knew about. Thanks for the find!
learnpython,3cnlmk,Rinnve,1 point,Thu Jul 9 15:42:23 2015 UTC,Using EasyGUI is almost as simple as using command line!
learnpython,3cnlmk,Colindapieman,1 point,Thu Jul 9 15:14:19 2015 UTC,"Thanks for all the feedback guys, going to look into Pyqt4. looks good."
learnpython,3cr2b3,xroyyunx,1 point,Fri Jul 10 02:21:26 2015 UTC,"I got started coding python with Invent Your Own Computer Games With Python by Al Sweigart. It's a good introduction to python and to programming in general and the way the book is structured - having you make a working game over the course of each lesson - was a really satisfying way to learn the language. It was great for me, and you can read it in it's entirety online. Just google the title and you should  be able to find the author's website. Good Luck."
learnpython,3cr2b3,at_the_matinee,1 point,Fri Jul 10 02:57:58 2015 UTC,"thank you, ill try this one"
learnpython,3cq6ko,ss3happy1,3,Thu Jul 9 21:59:48 2015 UTC,"You take the set to get rid of duplicates.  Then you get the maximum value of the set by looking at the original list and finding the item that occurs the most, the returning the corresponding value from the set.  The key= bit tells Python how to compare each list item.  By passing it list.count, it sorts them by how often they occur."
learnpython,3cq6ko,Doormatty,3,Thu Jul 9 22:13:24 2015 UTC,"In general, anyList.count(val) counts the number of occurances of val in anyList.     max(anyIter, key=func) means return the item in anyIter which has the largest value returned from func(item).    ALTOGETHER  max(set(myList), key=myList.count)   means from a list of myList elements (with duplicates removed), return the largest item by the number of times it occurs in myList."
learnpython,3cq6ko,goodyguts,1 point,Thu Jul 9 22:15:49 2015 UTC,Thank you so much for the in depth explanation!
learnpython,3cq6ko,goodyguts,1 point,Thu Jul 9 23:19:52 2015 UTC,"Hi there, sorry to bother you again, but is there a way to use this method of returning multiple modes? If there are two modes, this seems to just return one of them."
learnpython,3cq6ko,goodyguts,1 point,Fri Jul 10 14:32:33 2015 UTC,"Instead of max() you will want sorted() which returns the set in the order of frequency, and will fix the problem if there are >1 modes"
learnpython,3cq6ko,Rhomboid,1 point,Fri Jul 10 16:44:13 2015 UTC,"So like this?  sorted(set(list), key=list.count)  I tested this and it just returned a list with the removed duplicates, and the numbers that appear most often have higher indexes.   for list = [1,2,2,3,3]  it still returned [1,2,3], so I am still a little confused at how I can use this to print two modes."
learnpython,3cq6ko,tk421whyarentyouatyo,1 point,Fri Jul 10 23:57:11 2015 UTC,"Yes, like that. I tested it in my python interpreter:  >>> mList = [1, 3, 3, 3, 2, 2, 4, 4] >>> mode = sorted(set(mList), key=mList.count) >>> mode [1, 2, 4, 3]   3 occured the most, then it was 4 and 2, then 1. To get the mode element, do mode[-1]"
learnpython,3cq659,Applecum,8,Thu Jul 9 21:56:27 2015 UTC,"With import math, which is the preferred way, the only name that gets defined for your code is math, so you have to access things from that module by prefixing them with math. (e.g., math.sqrt()).  With from math import *, which is not preferred, all of the names from the module are now defined in your code, so you can just say sqrt() or cos(). The reason this is not preferred is because it makes your code harder to comprehend. (""cos()? Where was that defined? Oh, maybe it came from the math module."")"
learnpython,3cq659,kalgynirae,1 point,Thu Jul 9 22:01:42 2015 UTC,taught me something.
learnpython,3cq659,tk421whyarentyouatyo,1 point,Thu Jul 9 22:05:17 2015 UTC,"The from syntax is fine, though, if you specify:  from math import cos"
learnpython,3cq659,xiongchiamiov,1 point,Fri Jul 10 16:22:37 2015 UTC,"https://docs.python.org/3/reference/simple_stmts.html#from   If the list of identifiers is replaced by a star ('*'), all public names defined in the module are bound in the local namespace for the scope where the import statement occurs.   As /u/kalgynirae said, the first form is heavily preferred since it makes it clear where the names came from later in the code."
learnpython,3cpj5t,Verbais,1 point,Thu Jul 9 19:10:17 2015 UTC,"http://effbot.org/tkinterbook/radiobutton.htm   If you need to get notified when the value changes, attach a command callback to each button."
learnpython,3cpj5t,elbiot,1 point,Thu Jul 9 19:31:28 2015 UTC,"That's just it though, I don't just need to get notified, I need a variable to be assigned to a string specific to that individual radio button. The best I could do was get the IntVar() specific to a button to print, but that's not quite what I need."
learnpython,3cpj5t,elbiot,1 point,Thu Jul 9 19:55:17 2015 UTC,"I don't follow.  Pressing the radio button sets v to the value for that particular button (selecting natural sets v to 2) in your case.  I'm not familiar with tkinter, but I'd assume anywhere you use v, it now has the value of 2 when natural is selected.  What more do you want to happen?"
learnpython,3cpj5t,elbiot,1 point,Thu Jul 9 20:04:08 2015 UTC,"I need it to have a value of ""n"".  Imagine there are three sets of radio buttons, each with the choices Blank, Natural, Sharp, and Flat. The user selects Natural, Blank, Flat, Natural. I am trying to get it so, in this situation, n1-2b3n4 would be printed. That's n1 for natural on the first set, -2 for blank on the second set, b3 for flat on the third set, and n4 for natural on the fourth set."
learnpython,3cp4ke,squeezedfish,2,Thu Jul 9 17:19:52 2015 UTC,"round (elapsed_time, 3)"
learnpython,3cp4ke,RyanTargaryen,1 point,Thu Jul 9 17:38:01 2015 UTC,"Didn't work unfortunately, i got this result back: 1.78999996185"
learnpython,3cp4ke,cdcformatc,3,Thu Jul 9 18:10:16 2015 UTC,"Did you assign the output? Round does not modify the input.   rounded_time = round(elapsed_time, 3)"
learnpython,3cp4ke,RyanTargaryen,1 point,Thu Jul 9 18:40:47 2015 UTC,"That's what it was, thanks for the help."
learnpython,3cobhq,Lithobilic,4,Thu Jul 9 13:41:09 2015 UTC,"What does it mean by ""list index is out of range"".   It means exactly what it says.  0 is not a valid index for the list self.ani.  That means it's an empty list.  And glob.glob() returns an empty list if the pattern did not match anything.  You can't assume it worked; it would be a good idea to get in the habit of putting checks in your code whenever dealing with any kind of system interaction like this.  You need to be mindful of the current working directory (CWD) when the script runs.  A glob like ""walking/walk_down_*.bmp"" is NOT relative to the directory that contains the .py file, it's relative to the CWD.  The CWD is set by whatever invokes this script, which you have not described."
learnpython,3cobhq,Rhomboid,1 point,Thu Jul 9 14:03:21 2015 UTC,"I have changed my CWD to be the same folder as the .bmp images yet they are still not being imported by the glob module, would you please help me understand why this still isn't working.   Thanks."
learnpython,3cobhq,Rhomboid,3,Thu Jul 9 14:52:39 2015 UTC,"I have changed my CWD to be the same folder as the .bmp images   That's not what you want.  The glob is relative to the CWD.  If you write glob.glob(""walking/walk_down_*.bmp"") then walking needs to be a subdirectory of the CWD.  If you want to match bitmap files that are in the CWD, then you want glob.glob(""walk_down_*.bmp"").  You could also locate the resources relative to the script's location, using various techniques such as __file__ or argv[0]."
learnpython,3cobhq,zahlman,1 point,Thu Jul 9 15:23:19 2015 UTC,"Oh I see my mistake, thanks for this I forget that you have to be so literal when programming.  Thank you very much!!"
learnpython,3cobhq,Rhomboid,1 point,Thu Jul 9 15:59:02 2015 UTC,"What does it mean by ""list index is out of range"".   Exactly what it sounds like.  You have a list called self.ani, and you try to access one of its elements with self.ani[0]. Here, 0 is the index you're using. But it's outside of the range of valid indices. Why? Because the list is in fact empty.   In the folder I have 3 .bmp images, named ""walk_down_0"" to ""walk_down_2""   In what folder? Are you sure it's the same folder that glob.glob is looking in? (Hint: what is the current working directory?)"
learnpython,3cobhq,sepehrhm,1 point,Thu Jul 9 13:56:58 2015 UTC,"Thanks for the reply.  I was under the impression that glob was looking in,    B:/#Python/Practice/Test Walking/testwalking* meaning that it would pull in all three images as a list, but you're saying that this isn't the case. If not then why isn't it? (out of curiosity because I was under the impression that this is how the glob module works.   Thanks."
learnpython,3cobhq,Rhomboid,4,Thu Jul 9 14:04:13 2015 UTC,"Any time you specify a filename or path to the operating system, if it's not an absolute path then it's relative to the current working directory.  That might be the same thing as the directory where the .py file lives, or it might not; it all depends on how the script was executed.  The CWD can be set to anything, there's nothing that ties it to the location of the source files."
learnpython,3cobhq,sepehrhm,1 point,Thu Jul 9 14:24:54 2015 UTC,"Any time you specify a filename or path to the operating system, if it's not an absolute path then it's relative to the current working directory.   Is this true of all operating systems? Also, is it a language implementation or OS implementation?"
learnpython,3cobhq,zahlman,1 point,Thu Jul 9 18:40:51 2015 UTC,"I wouldn't say 'all', but it's the case under every common OS you're likely to encounter, including Windows and all Unix-like operating systems (OS X, Linux, FreeBSD, OpenBSD, NetBSD, HP-UX, Solaris, AIX, etc.)  It's not specific to a given language or runtime, it's the behavior of the low level operating system interfaces that all languages build on top of.  Some Unixes have extra versions of syscalls that accept a file descriptor against which relative paths are resolved instead of the CWD.  For instance Linux has openat(), renameat(), mkdirat(), linkat(), etc. which are variations on the usual open(), rename(), mkdir(), etc. syscalls.  See syscalls(2) for more information.  There were added as an optimization to speed up some operations like recursively traversing deep directory hierarchies.  Prior to this, the choices were to constantly change the CWD as you traverse the hierarchy (which does not work well in multi-threaded applications or in library code) or to pass long paths containing lots of directory components to the filesystem syscalls, which resulted in a lot of redundant work, both on the application side as well as in the kernel, which had parse them and stat() each component along the way.  Using the 'at' variants, an application can pass just the filename and the fd of the directory (which it already had open) without having to build a long path or change the CWD.  Newer versions of Python expose these capabilities by adding a dir_fd keyword argument to many os functions."
learnpython,3cobhq,zahlman,1 point,Thu Jul 9 19:02:48 2015 UTC,"Great! Awesome answer, as always :)"
learnpython,3cp9gv,dbakathaillist,2,Thu Jul 9 17:54:15 2015 UTC,"binascii.unhexify(""33436f6d20426173656c696e652053776974636820323932382d53465020506c757320536f6674776172652056657273696f6e20352e32302052656c656173652031313038503031200d0a436f707972696768742028632920323030342d323031312033436f6d20436f72706f726174696f6e2e20416c6c207269676874732072657365727665642e"")  yields  ""3Com Baseline Switch 2928-SFP Plus Software Version 5.20 Release 1108P01 \r\nCopyright (c) 2004-2011 3Com Corporation. All rights reserved."""
learnpython,3cp9gv,marky1991,2,Thu Jul 9 18:11:28 2015 UTC,"I tried doing this in another editor and I received this error: ""TypeError: Non-hexadecimal digit found"" Any ideas?"
learnpython,3cp9gv,marky1991,2,Thu Jul 9 19:00:17 2015 UTC,AHA! I figured out what I was doing wrong. I have to make sure the 0x at the beginning isn't in the hexlify(). Thank you for the help.
learnpython,3cp9gv,marky1991,1 point,Thu Jul 9 19:03:07 2015 UTC,I do wonder what happens when thy try to write text not in ascii though. I guess you can cross that bridge when you get to it...
learnpython,3cp7zb,Terrible_Programming,3,Thu Jul 9 17:44:12 2015 UTC,If the order doesn't matter you can use sets:  list(set(list1).symmetric_difference(list2))
learnpython,3cp7zb,diesch,1 point,Thu Jul 9 18:15:08 2015 UTC,The order does matter. I would also be OK with removing duplicates from both of the lists and working with them separately...I was just figuring there was a far more elegant solution than something like this:  duplicate = [] for i in list1 and list2:     if i in list1:         if i in list2:             duplicate.append(i)     elif i in list2:         if i in list1:             duplicate.append(i) for i in duplicate:     list1.remove(i)     list2.remove(i)
learnpython,3cp7zb,diesch,3,Thu Jul 9 18:21:34 2015 UTC,[i for i in list1 if i not in set(list2)] + [i for i in list2 if i not in set(list1)]
learnpython,3cp7zb,Fourgot,1 point,Thu Jul 9 18:27:40 2015 UTC,Calling set() is an extra step
learnpython,3cp7zb,diesch,1 point,Thu Jul 9 19:42:17 2015 UTC,Usinge sets makes the lookup faster.
learnpython,3cp7zb,elbiot,2,Thu Jul 9 20:21:21 2015 UTC,"Nope! Set creation isn't free.    In [1]: list1 = range(0,100,2)  In [2]: list2 = range(0,100,3)  In [3]: %timeit [i for i in list1 if i not in set(list2)] + [i for i in list2 if i not in set(list1)] 10000 loops, best of 3: 170 µs per loop  In [4]: %timeit [i for i in list1 if i not in list2] + [i for i in list2 if i not in list1] 10000 loops, best of 3: 42.5 µs per loop   As I increased N, the disparity grew larger.  At 100,000, creation was too long for me to wait (minutes) and without set it was 32 seconds."
learnpython,3cp7zb,elbiot,1 point,Thu Jul 9 23:02:07 2015 UTC,why is it BS?
learnpython,3cp7zb,elbiot,0,Thu Jul 9 23:54:52 2015 UTC,"Great, this seems to work. Thank you!"
learnpython,3cp7zb,Fourgot,2,Thu Jul 9 23:58:11 2015 UTC,Don't use set. See my other comment
learnpython,3cp7zb,E-UTRANquility,1 point,Thu Jul 9 18:36:58 2015 UTC,"What output do you want? One list or two?  If two, I'd say:  list1_uniqs = [x for x in list1 if x not in list2] list2_uniqs = [x for x in list2 if x not in list1]   If one, I'd add the line:  uniqs = list1_uniqs + list2_uniqs"
learnpython,3cpomc,Korlyth,5,Thu Jul 9 19:51:16 2015 UTC,"Try to avoid magic numbers (see third definition in the summary up top). 4, 4.5, 5, 5.5, 5.75, etc: these might make sense the moment you write them in, but it can be a pain if those numbers ever change (though unlikely in this case), or if you're trying to show the program to someone else.  You can use constants to better describe these numbers, then replace the instances of those numbers with the constants. Like so:  RC_PART_FLOOD = 4 # feet (as a reminder to yourself) RC_FULL_FLOOD = 4.5 ... rc.kal_under = rc.floodCheck(RC_PART_FLOOD, RC_FULL_FLOOD)   That may look like extra code for nothing, but it aids in readability. Further, if you re-use the same constant value elsewhere, you only have to change it once.  You could refine this by making a dictionary containing these values:  FLOOD_VALS = {     'rc': {         'partial': 4,         'full': 4.5,     },     ... } ... rc.kal_under = rc.floodCheck(FLOOD_VALS['rc']['partial'], FLOOD_VALS['rc']['full'])   Even beyond that, if you define the method using keyword arguments...  def floodCheck(self, partial=None, full=None):     ...   ...you can pass those arguments by unpacking them like so:  rc.kal_under = rc.floodCheck(**FLOOD_VALS['rc']) # which works exactly the same as: rc.kal_under = rc.floodCheck(partial=FLOOD_VALS['rc']['partial'], full=FLOOD_VALS['rc']['full'])     In floodCheck itself, a lot of times teachers like to recommend the style you're using, where a single return statement is called. In practice, when you know you want one value returned at that instant, and you take care not to leave the logic open to missing a return statement, you can use multiple statements:  def floodCheck(self,partFlood,fullFlood):     if self.depth_float > partFlood:         if self.depth_float > fullFlood:             return 'Flooded'         return 'Partially Flooded'     return 'Clear'   Note the missing else statements. Whenever a return is executed, the function immediately ceases. So, if we got to a point after a given return statement, we know that condition wasn't met. We can safely call a return at that point, knowing that the if condition was not met, and therefore the opposite, else, condition is true.    Line 22: self.measurements = self.measurements + a, can be replaced with the simpler self.measurements += a.  There are ways to eliminate those nested for loops above that line, but I won't go into that.    Around Line 72, you're looping over a range(len(addresses)), but you're never using i by itself. You can simply loop over the elements of addresses directly:  for address in addresses:     TO = address     msg['To'] = TO     server.sendmail(FROM, TO, msg.as_string())   Of course, you don't really need to use TO, either:  for address in addresses:     msg['To'] = address     server.sendmail(FROM, address, msg.as_string())     That's all I've got. Hope that makes sense / is helpful. :)"
learnpython,3cpomc,JustTurrble,1 point,Thu Jul 9 20:42:41 2015 UTC,"That's super helpful! Thanks! You mention the nested for loops. How would you get rid of them? Would it be like what /u/04h did in his rewrite? ""timestamp, level = (x.text for x in most_recent)"""
learnpython,3cpomc,Mr_M0jo_Risin,2,Fri Jul 10 00:07:39 2015 UTC,General comment: use 4 spaces for indentation!
learnpython,3cpomc,novel_yet_trivial,0,Thu Jul 9 20:01:40 2015 UTC,TABS 4 LIFE!!!
learnpython,3cpomc,Mr_M0jo_Risin,3,Thu Jul 9 20:16:43 2015 UTC,PEP8   OP: just set your tab to be 4 spaces and all will be forgiven.
learnpython,3cpomc,novel_yet_trivial,1 point,Thu Jul 9 20:36:44 2015 UTC,"I know the recommendations; I choose to break them. Tabs are so much easier (after all this is what tabs were invented to do).   OP: do what you feel. (Although when you collaborate with the outside world you'll eventually be forced to conform, so if you don't have strong feelings it's probably best to follow PEP8.)"
learnpython,3cpomc,Mr_M0jo_Risin,2,Thu Jul 9 20:42:21 2015 UTC,"Setting TAB to equal 4 spaces gives you the ease of tabbing with PEP8-compliant functionality.  I think most people break some aspect of PEP8 regularly, but in my experience, adhering to 4 spaces is widely accepted."
learnpython,3cpomc,04h,2,Thu Jul 9 21:00:06 2015 UTC,"What's the point of Rivers class? I mean, there are just one method and you use only one attribute (depth_text), why it should be class?  I tried to simplify some things. Check out fork: https://gist.github.com/genych/83bdee6cd0994298c52b"
learnpython,3cpomc,04h,1 point,Thu Jul 9 21:50:26 2015 UTC,"Two, reasons. First,  I didn't think of setting up the functions like you did. I actually did write it initially without any classes but it was pretty bad (lots of duplicate code.) The second reason is I wanted a little more practice creating and playing with objects of my own design rather than a tutorial."
learnpython,3coi93,MrDysprosium,3,Thu Jul 9 14:36:18 2015 UTC,Division of an integer can produce a float in Python 3.3. You are potentially producing a float in line in lines 6 or 8 while pow's 3rd argument requires all integers.
learnpython,3coi93,tumbleweed1993sf,1 point,Thu Jul 9 15:07:21 2015 UTC,"Awesome, that was precisely it. You are great!"
learnpython,3coi93,zahlman,1 point,Thu Jul 9 15:14:16 2015 UTC,"BTW: since you want both the quotient and remainder from dividing t by 2 each time through the loop, consider using divmod. (Although I guess that makes the loop structure more complicated, hmm.)"
learnpython,3cp4uc,Xadnem,2,Thu Jul 9 17:21:55 2015 UTC,"First, most Project Euler problems are math problems not necessarily programming problems. The fastest solutions are always going to be ones that exploit some math concept in order to short circuit the algorithm complexity.   You have to try to learn to think mathematically in the first place. After writing a brute force solution, I would research the core idea (in this case fibonnacci) first, make sure I understand it mathematically, and then try again.   Once you solve a Project Euler problem you can go to the forum link they give you where people usually post their answers and the time complexity. I have learned a lot about math by looking at their answers. I would avoid just copying their answers and just saying ""done!"" as it may be tempting to do, actually take the time to understand the concept they are using."
learnpython,3cp4uc,cdcformatc,1 point,Thu Jul 9 18:51:56 2015 UTC,Takahashi Daisuke + fibonacci should help you with on the current problem. Although it might be a bit overkill. Other than that I haven't found a magic trick to success yet.  My algorithm and linalg classes definitely helped me know better what to look for.   oeis.org is a nice place to look for patterns in sequences. wolfram.com and wikipedia are decent places to learn some extra math. (But it didn't save me the occasional trip to the library)
learnpython,3cp4uc,finsternacht,1 point,Thu Jul 9 18:23:40 2015 UTC,"I think you would get a much better response to your answer on /r/programming or /r/mathematics. Optimization and Verification are both quite complex, many people spending a good portion of their career working on these sorts of problems."
learnpython,3cp4uc,tiajuanat,1 point,Thu Jul 9 19:14:10 2015 UTC,"step 1) write code that works  step 2) use it  (optional) step 3) if it is running too slow, profile the code and find the bottle neck.  google and experiment with ways of making that bit faster."
learnpython,3cp4uc,elbiot,2,Thu Jul 9 19:28:29 2015 UTC,This approach unfortunately doesn't really work in later problems. You need the right algorithm. Fixing the naive solution step-by-step won't bring you any closer.
learnpython,3cp4uc,finsternacht,2,Thu Jul 9 19:35:28 2015 UTC,"I'm replying to the general ""how do you make the functions in your program fast"".  My answer is generally, you don't.  Code challenges are a special case.  But if I had a large project that used fib numbers, I wouldn't worry about it until there was a reason to worry about it.  Spending hours optimizing a function in a real program, so that it saves a total of 1 minute of run time over the life of the program, is a waste of time.  ""How do I approach timed code challeneges"" is a different question than ""how do I approach writing a program I and other's will find useful"", and I want to make sure OP gets the answer that applies to most of programming.  Plus, If I needed the fib numbers up to what fits in an unsigned 64 bit integer, I'd use numpy and blow any pure python function out of the water."
learnpython,3cp4uc,elbiot,1 point,Thu Jul 9 19:45:59 2015 UTC,I agree with everything you say. Also benchmarked your numpy claim: I never knew how fast that is. The simple iterative fib algorithm with numpy beats all of my other algorithms for n <= 93.
learnpython,3cp4uc,finsternacht,1 point,Thu Jul 9 23:20:34 2015 UTC,"What was your numpy algo?  In [6]: %%timeit                                                        a = np.empty(90,dtype=np.uint64); a[:2]=1 np.add(a[1:-1],a[:-2],out=a[2:])  100000 loops, best of 3: 9.94 µs per loop"
learnpython,3cp4uc,elbiot,1 point,Thu Jul 9 23:33:01 2015 UTC,"code  I had a major bug in my code before. With the now corrected code the numpy solution is still fast, but not faster anymore. On my machine I get the following results:    F_20, 1000x Time [sec]    iterative 0.001304612000240013   clever_matrix 0.001876067999546649   takahashi 0.002005039999858127   dumb_matrix 0.0021456360000229324   numpy_iter 0.005736778999562375   numpy_array 0.00982047599973157   numpy_matrix 0.04436318299940467   recursive 2.5240721250002025      F_93, 2000x Time [sec]    clever_matrix 0.00697323399981542   takahashi 0.007812787000148091   dumb_matrix 0.007855052000195428   iterative 0.013444176000120933   numpy_array 0.019438600000285078   numpy_iter 0.04357406599956448   numpy_matrix 0.10213421499975084      F_10000, 1000x Time [sec]    takahashi 0.028971815999284445   clever_matrix 0.04738277599972207   dumb_matrix 0.2417613990000973   iterative 2.2382503759999963"
learnpython,3cp4uc,finsternacht,1 point,Fri Jul 10 11:26:21 2015 UTC,"Thanks.  I was suprised that a pure python iterative was faster than numpy_array.  I upgraded to numpy 1.9 with openblas and then the numpy_array was faster than python iterative by a smidge, since array creation is faster in 1.9."
learnpython,3cp4uc,elbiot,1 point,Fri Jul 10 19:41:20 2015 UTC,"Thanks all for the replies, I was just using the fib() function as an example. So most people would usually only spend time on a specific function if it proved to be a bottle neck?   In your personal experience, do you encounter these bottle necks often?"
learnpython,3cofv7,OrvilleSchnauble,10,Thu Jul 9 14:17:00 2015 UTC,"Use return instead of print in your function. Return gives a value back to whatever called the function. Print just prints a value to the console.   Once you have return instead of print inside your function, you can assign the output to a variable like any other assignment.   Like this:  greeting = hello()"
learnpython,3cofv7,bigv13899,2,Thu Jul 9 14:23:44 2015 UTC,Huge smile. Thank you :)
learnpython,3cofv7,bigv13899,1 point,Thu Jul 9 14:25:32 2015 UTC,No problem. I ninja edited to answer your original question too.
learnpython,3cofv7,professorlamp,3,Thu Jul 9 14:26:56 2015 UTC,def give_me_five():     return 5  a = give_me_five() #5 b = give_me_five() + 5 #10 c = a + b #15   :)
learnpython,3cofv7,JustTurrble,1 point,Thu Jul 9 17:04:37 2015 UTC,"def hello():     return 'hello'   Then when you use the function, simply assign it to a variable:  output = hello() print output"
learnpython,3cofv7,RoadieRich,-2,Thu Jul 9 20:19:16 2015 UTC,"Ok, the solution to what you meant has been posted.  To do what you say, you'd need to modify sys.stdout:  >>> import sys >>> import StringIO >>> oldstdout = sys.stdout >>> sys.stdout = mystdout = StringIO.StringIO() >>> >>> def hello(): ...     print ""hello"" ... >>> hello() >>> sys.stdout = oldstdout >>> mystdout.getvalue() 'hello\n'   Another option is to write a decorator:  from functools import wraps  def captureoutput(wrapped):     @wraps(wrapped)     def wrapper(*args, **kwargs):         from StringIO import StringIO         import sys          oldstdout = sys.stdout         sys.stdout = mystdout = StringIO()         returnvalue = wrapped(*args, **kwargs)         sys.stdout = oldstdout          if returnvalue:             return returnvalue, mystdout.getvalue()         else:             return  mystdout.getvalue()     return wrapper   Then you can use it like this:  >>> @captureoutput ... def hello(): ...     print ""hello"" ... >>> hello() 'hello\n'"
learnpython,3cpgf8,cuginhamer,2,Thu Jul 9 18:48:16 2015 UTC,"Why are you saving the representation of the list instead of name[0]?  For the URL, you need to quote the name.  The list's first element is probably being repred as ""this isn't working"", and double quotes aren't valid in NTFS filenames."
learnpython,3cpgf8,raylu,1 point,Thu Jul 9 19:30:05 2015 UTC,"I'm going to bungle this answer, but I'm very grateful for your help and please bear with me.   Why are you saving the representation of the list instead of name[0]?       Only because this was the first way I tried it and it worked. Are you suggesting that I should make a numerical variable to put in and a loop and call the names in order off the name list that way? Total newbie, never tried that, could you tell me the advantages?    For the URL, you need to quote[1] the name.      I think the browser is automatically handling the quoting side of things, it hasn't been a problem to have spaces and crap in the file name--all my images are coming through fine into PIL/pillow even when there are apostrophes. The issue is just the final save of the cropped image after I manipulate it in PIL/pillow.        The list's first element is probably being repred as ""this isn't working"", and double quotes aren't valid in NTFS filenames.       Just so I'm reading you right, you're saying the code automatically converts 'this isn't working' to ""this isn't working"" because it sees the interior single quote and then the double quote makes the save fail?"
learnpython,3cpgf8,novel_yet_trivial,1 point,Thu Jul 9 19:43:17 2015 UTC,novel_yet_trivial helped me see where you were going with name[0] and I tried again and it worked!!! Yay. Thanks for being awesome and giving free help--I feel like I owe you money.
learnpython,3cpgf8,novel_yet_trivial,1 point,Thu Jul 9 19:49:30 2015 UTC,"Python escapes apostrophes automatically:  >>> ""single quote: ' "" + 'double quote:"" ' 'single quote: \' double quote:"" '   I think your problem is elsewhere. Can you show the code that generates the ""name"" variable? Also, the input data and the filenames that you want out?"
learnpython,3cq972,teknic111,1 point,Thu Jul 9 22:20:02 2015 UTC,"I'm on mobile at the moment so I can't investigate further, but what's probably happening is you don't have a token that you would normally receive in-browser, so the CSRF filter on the server returns 500. This is typical with post requests.  See here"
learnpython,3cq5du,eiherrera,2,Thu Jul 9 21:50:28 2015 UTC,"Run a plain Python prompt and type import zlib.  If that fails then it has nothing whatsoever to do with PyPDF2, it's a problem with your homemade Python.  Modules that require dependencies that aren't present are not built, and you probably didn't install the zlib development headers package (zlib1g-dev).  There should have been a message at the end of the build telling you all the modules that were unable to be built.  Don't build Python yourself.  You can install Python 3 in Ubuntu with sudo apt-get install python3."
learnpython,3cq5du,Rhomboid,1 point,Thu Jul 9 22:37:53 2015 UTC,Yeah if I run a plain python with import zlib it throws the same error. Should I reinstall python or there is a way to add zlib manually?
learnpython,3cq5du,tk421whyarentyouatyo,1 point,Thu Jul 9 22:58:26 2015 UTC,"I think the lower traceback is the important one (assuming they were printed to you in that order.)  I can't find a ""system"" module after a quick skim through google.. There's an os.system function..  https://docs.python.org/3/library/os.html#os.system  as well a sys module  https://docs.python.org/3/library/sys.html  but it sounds like a problem with pypdf2/filters.py"
learnpython,3cnw6k,MaxwellSalmon,2,Thu Jul 9 10:56:11 2015 UTC,"The function in bind() receives an event parameter (here is an example without the class).  Because you're using an instance method, it will also receive self; so behind the scenes, bind is calling jump(self, event), and you defined it to only receive self.  So change jump to def jump(self, event) and it should, in theory, work."
learnpython,3cnw6k,juliob,1 point,Thu Jul 9 11:13:14 2015 UTC,Thanks!
learnpython,3cnw6k,zahlman,1 point,Thu Jul 9 12:46:54 2015 UTC,"It's exactly like the error says. Two arguments are being passed: self (because you used a method for the callback), and an object created by tkinter that represents the key-press event. But your method only accepts the first as a parameter."
learnpython,3cq2bd,Omeganx,1 point,Thu Jul 9 21:27:47 2015 UTC,"Did you try running it before freezing it as an exe? The traceback looks like it's referring to a library from a repo. I've never used py2exe, but it may be worth trying cx_Freeze instead.  pip install cx_Freeze"
learnpython,3cq2bd,tk421whyarentyouatyo,1 point,Thu Jul 9 21:46:26 2015 UTC,"Yeah I've tried running it before, and what do you mean by ""a library from a repo""?, Also when i tried to make the executable using cx_freexe I got this following error: http://imgur.com/TMc1AJS"
learnpython,3cq2bd,tk421whyarentyouatyo,1 point,Thu Jul 9 22:13:42 2015 UTC,"repo = repository. Your traceback is blaming the nbt module, that's about as much as I can offer.  edit: yeah the new screenshot is blaming freezer.py. Do you have multiple installations of python?"
learnpython,3cq2bd,tk421whyarentyouatyo,1 point,Thu Jul 9 22:21:15 2015 UTC,"yeah I had, I've just uninstalled the other version. Yeah, do I have to import the module for the executable or does py2exe does it automaticaly?"
learnpython,3cnakr,CookingMamaIsNSFW,12,Thu Jul 9 05:59:12 2015 UTC,"What you want is:  thing[1]()   The parenthesis call the function, you're printing the reference to the function object, but not actually calling it."
learnpython,3cnakr,Rodeopants,5,Thu Jul 9 06:09:09 2015 UTC,Holy shit I'm in love with you  Thank you so much! I have zero idea how I missed trying that earlier
learnpython,3cnakr,Rodeopants,8,Thu Jul 9 06:14:23 2015 UTC,No problem. I'll also add that using a dict instead of a tuple could simplify your code by getting rid of the for loop and relying on indexing. You could do:  myDict[usrinput]()
learnpython,3cnakr,kaiserk13,0,Thu Jul 9 06:24:28 2015 UTC,dispatcher = {} dispatcher.update({'func1': func1})  call with dispatcher['func1'](args)
learnpython,3cotb7,Hypogeum,1 point,Thu Jul 9 15:59:02 2015 UTC,"Wherever you update entry_list, you also need to do the "" "".join(...) and update self.entry again. Try that, and if you're still stuck, please tell us exactly what you've tried, exactly what it's doing, and how that's different from what you want it to be doing, and show us your whole program (put it up on Github or Pastebin)."
learnpython,3cotb7,kalgynirae,1 point,Thu Jul 9 16:16:07 2015 UTC,"Usually you create a string variable, assign it to the entry widget, and update that using the set method.  var = tkinter.StringVar() ent = tkinter.Entry(root,textvariable=var) ent.grid() var.set(display)"
learnpython,3cotb7,Tomarse,1 point,Thu Jul 9 17:48:32 2015 UTC,I got it to work now thank you! I tried this before but I had things in the wrong place.
learnpython,3cpcjx,octaffle,2,Thu Jul 9 18:17:08 2015 UTC,"In general, python code is not compiled*. It is distributed as source code, and the user runs it that way. Is there a reason you want to compile it beforehand?   * well, it's compiled at runtime ... by the machine executing it ... and completely automatically and in the background; not something a programmer generally needs to worry about."
learnpython,3cpcjx,novel_yet_trivial,2,Thu Jul 9 18:32:17 2015 UTC,"I have no idea what I am talking about, honestly.  I want my code to run as an executable.  I want someone who knows even less about Python than I do to install it, open it up, load input files into a GUI, check some boxes, run it, watch its progress in a window that shows all ""print"" commands in my code, and have it spit out an output at a location that the user specifies.  I thought compiling is what you had to do to get it to do all that, but if I am wrong, then that's fine too!  I just need to get my code from running in a Python IDE to a finished product that a monkey could download and use with ease."
learnpython,3cpcjx,novel_yet_trivial,1 point,Thu Jul 9 18:41:02 2015 UTC,"I thought compiling is what you had to do to get it to do all that   That is correct in many programming languages. But not in python (although tools like PyInstaller make it possible if you really want).   The easiest solution for you is to tell your users to install anaconda (includes everything on your list except arcpy), and then instruct them how to install arcpy. Then they can run your script.  Alternatively you can look into making a proper package with setuptools. (I hope someone else will chime in because I know nothing about this.)"
learnpython,3cogr0,Elthran,2,Thu Jul 9 14:24:11 2015 UTC,"0.08 in 3 is an error of almost 3%, wouldn't say it's ""slightly incorrect"".  Also your x0 and y0 are off by similar amounts - 5.92 vs 6 and 5.89 vs 5.83 so the cause is somewhere in the calculations of the center coords.  Too much of huge magical formulas, not enough atomic, testable steps. One typo or a wrong sign in a formula and you are done.  def bisector(p1, p2):     x1, y1 = p1     x2, y2 = p2        a = (x2-x1)/(y1-y2)     b = (y1+y2)/2-a*(x1+x2)/2     return a, b  def intersect(f1, f2):     a1, b1 = f1     a2, b2 = f2        x = (b1-b2)/(a2-a1)     y = a1*x+b1     return x, y  def distance(p1, p2):     x1, y1 = p1     x2, y2 = p2     return ((x1-x2)**2+(y1-y2)**2)**0.5  def circle(p1, p2, p3):     x1, y1 = p1     x2, y2 = p2     x3, y3 = p3      if y1==y2:         p3, p2 = p2, p3     elif y2==y3:         p1, p2 = p2, p1      center = intersect(bisector(p1, p2), bisector(p2, p3))     radius = distance(center, p1)     cx, cy = center     return '(x-{x0:.{w}f})^2 + (y-{y0:.{w}f})^2 = {r:.{w}f}^2'.format(w=2, x0=cx, y0=cy, r=radius)   print(circle((0,0), (0,6), (8,6))) print(circle((2,2), (1,4), (2,5))) print(circle((7,7), (4,3), (1,8))) print(circle((2,2), (4,2), (2,4))) print(circle((2,2), (6,2), (2,6))) print(circle((3,7), (6,9), (9,7))) print(circle((7,3), (9,6), (3,6)))   yields  $ ./circles.py (x-4.00)^2 + (y-3.00)^2 = 5.00^2 (x-2.50)^2 + (y-3.50)^2 = 1.58^2 (x-3.80)^2 + (y-6.28)^2 = 3.28^2 (x-3.00)^2 + (y-3.00)^2 = 1.41^2 (x-4.00)^2 + (y-4.00)^2 = 2.83^2 (x-6.00)^2 + (y-5.75)^2 = 3.25^2 (x-6.00)^2 + (y-5.83)^2 = 3.00^2"
learnpython,3cogr0,Vaphell,1 point,Thu Jul 9 17:22:16 2015 UTC,Thanks! I will split my function up into smaller functions. Your comment is very helpful.
learnpython,3cn7b1,CharredStrings,3,Thu Jul 9 05:24:27 2015 UTC,"Pygame is probably not the easiest thing to start with in Python, but it really depends on the individual.  Try it out and find out for yourself.  I recommend this tutorial.    http://www.programarcadegames.com/"
learnpython,3cn7b1,JonnyFB421,1 point,Thu Jul 9 05:33:16 2015 UTC,"I'll check that out, thanks. I really just want to create some sort of visual app; it doesn't necessarily have to be a game. Perhaps creating an app with Pyqt is a better choice?"
learnpython,3cn7b1,elbiot,1 point,Thu Jul 9 05:59:10 2015 UTC,"Kivy or web apps I'd say.  Opengl/pyglet is cool, but a bit tedious.  Just make whatever will be most satisfying to you.  Scripts for making my job less tedious have always been my biggest wins."
learnpython,3cn7b1,Mekire,2,Thu Jul 9 06:32:34 2015 UTC,If you are already accustomed to OO you might find many of the pygame tutorials around a little wanting. Almost every one of them is for the absolute beginner.  I have a repo of pygame samples that try to utilize OO if you are interested: https://github.com/Mekire/meks-pygame-samples  Come join us at /r/pygame
learnpython,3cjm76,donnemartin,8,Wed Jul 8 12:38:41 2015 UTC,"i'm a beginner and this is very helpful ,just what i need"
learnpython,3cjm76,cool_guy95,1 point,Wed Jul 8 15:21:25 2015 UTC,Great!  Thanks for the feedback.
learnpython,3cjm76,mrstef,4,Wed Jul 8 17:42:52 2015 UTC,"I think this is pretty cool! Beyond the slickness of the setup, it's nice to have a little repository of simple-yet-not-trivial 'problems' to solve."
learnpython,3cjm76,callmelucky,2,Wed Jul 8 14:11:18 2015 UTC,Thanks mrstef!
learnpython,3cjm76,cvak,4,Wed Jul 8 14:54:25 2015 UTC,"This looks really cool, but I am unfamiliar with working with github repos. Can you (or someone) explain how I should download/run this? Linux Mint 14 64bit, prefer to use Python 3. Thanks!"
learnpython,3cjm76,reladric,2,Thu Jul 9 03:38:08 2015 UTC,"install pre-requisities: https://github.com/donnemartin/interactive-coding-challenges#running-challenges ( from what I have seen - python2.7/3.4 - pip install ""ipython[notebook]"", pip install nose) download repo:  either git clone https://github.com/donnemartin/interactive-coding-challenges.git or click on download zip in github page cd to repo/extracted zip ipython notebook ??? profit   EDIT: updated with fix from donnemartin :) , btw wow markdown syntax coool"
learnpython,3cjm76,fefidoh,2,Thu Jul 9 09:43:52 2015 UTC,"Thanks for the instructions cvak!  As cvak noted, these are the links that describe installation:  https://github.com/donnemartin/interactive-coding-challenges#running-challenges  https://github.com/donnemartin/interactive-coding-challenges#notebook-installation  I noticed the instructions to run the following seem to indicate it is optional, although it is required to run the notebooks.  I'll submit a fix shortly.  pip install ""ipython[notebook]"""
learnpython,3cjm76,orlybg,1 point,Thu Jul 9 12:24:22 2015 UTC,Fix described in:  https://github.com/donnemartin/interactive-coding-challenges/issues/8
learnpython,3cjm76,McTooty,2,Thu Jul 9 12:31:01 2015 UTC,If you also want to learn to work with git in general (which you should) try this. Very quick crash course on git: https://try.github.io/levels/1/challenges/1
learnpython,3cjm76,McTooty,2,Thu Jul 9 18:09:07 2015 UTC,"Cheers, I will take a look at this :)"
learnpython,3cjm76,cayne,1 point,Wed Jul 8 18:14:56 2015 UTC,Great :)
learnpython,3cnlt2,GirlLunarExplorer,2,Thu Jul 9 08:26:36 2015 UTC,fix formatting of the example code
learnpython,3cnlt2,04h,1 point,Thu Jul 9 09:04:38 2015 UTC,It might be easier for you to pose the code to gisthub or something.  It is too hard to tell where the breakdown is above.
learnpython,3cnlt2,gengisteve,1 point,Thu Jul 9 13:28:10 2015 UTC,Made a pastebin page: http://pastebin.com/index/TzGyjm31
learnpython,3cnlt2,04h,1 point,Thu Jul 9 17:54:49 2015 UTC,posts += tagged  Looks like you modifying (appending) list while iterating over it.
learnpython,3cnlt2,gengisteve,1 point,Thu Jul 9 18:49:07 2015 UTC,Ah.  There it is:          if tagged:             posts += tagged   You want post += there I think.
learnpython,3cjysz,savvastj,3,Wed Jul 8 14:31:09 2015 UTC,this is awesome!
learnpython,3cjysz,SOLUNAR,1 point,Thu Jul 9 00:09:27 2015 UTC,Thanks glad you enjoyed it!
learnpython,3cjysz,jlink7,2,Thu Jul 9 14:09:18 2015 UTC,"As a fellow newbie (although, it looks like you're familiar with coding in general, perhaps just not python?) this is a good explanation of your process.  My ""project"" would be similar to this, but the data would have to start by putting data in a search box and then executing the search and parsing the results-- the URL wouldn't be useful for me, in this case, and I'd likely have to page through multiple separate HTML files (i.e. page 1, hit next, page 2, hit next, etc.)  Anyway, nice work, I look forward to trying something similar."
learnpython,3cjysz,jlink7,2,Thu Jul 9 13:19:02 2015 UTC,"Thank you! And you're right, I'm not exactly a newbie to programming  (I have taken a couple of compsci courses in Java and C++), but I've been trying to famliarize myself with Python over the summer.  If you want to create a web scraper in order to interact with different parts of a web page (like clicking on buttons and filling out forms) you could try Selenium.  I'd also suggest checking out this chapter from 'Automate the Boring Stuff with Python' it covers both BeautifulSoup and Selenium."
learnpython,3cjysz,azmanz,1 point,Thu Jul 9 14:54:06 2015 UTC,"Thanks, I'll look at both of those!"
learnpython,3cn34y,trayushman,4,Thu Jul 9 04:41:52 2015 UTC,"You can do this, but what you actually want is a dict: letters = {'a': 0, 'b': 1, ...}."
learnpython,3cn34y,raylu,3,Thu Jul 9 04:47:42 2015 UTC,"{i:j for j,i in enumerate('abcde')}   Although based on the use case (the function that converts the number to a letter) I think op might want:  num_to_letter = dict(enumerate('abcde'))"
learnpython,3cn34y,The-Mathematician,-1,Thu Jul 9 04:50:28 2015 UTC,"The first solution is very clever, and is therefore best avoided.  The second seems worse than a list in every way."
learnpython,3cn34y,raylu,2,Thu Jul 9 05:12:18 2015 UTC,"How? To the first at least.  The first does exactly what yours does and is easy to follow if you understand dict comprehensions. Really not that clever.  The second literally just does what OP wants to do  EDIT: I see your point on the second, though a string would be the same as a list as well."
learnpython,3cn34y,The-Mathematician,-2,Thu Jul 9 05:18:20 2015 UTC,"It's the same as mine, but more clever. Yes, it does the same thing, but more cleverly.  Strings are immutable."
learnpython,3cn34y,raylu,2,Thu Jul 9 05:59:03 2015 UTC,"Strongly disagreed. This isn't ""clever"", it's elegant and expressive. Writing it out longhand increases the risk of typos, and fails to express the intended relationship here between the keys and values. Part of the reason enumerate is a function instead of a special syntax hack is exactly so you can do things like this. The only thing I might do differently is more expressive names than i and j."
learnpython,3cn34y,zahlman,1 point,Thu Jul 9 11:12:59 2015 UTC,Strings are immutable.   What does that have to do with anything?
learnpython,3cn34y,elbiot,1 point,Thu Jul 9 16:20:06 2015 UTC,"Lists are mutable, and that seems like something he'll want to do."
learnpython,3cn34y,raylu,0,Thu Jul 9 19:11:35 2015 UTC,"I'm totally not getting what you're talking about.  You don't use a list either.  Both you and /u/the-mathematician are making dictionaries, which are mutable.  You both use strings as the keys to your dicts ('a', 'b', etc), and keys must be immutable.  You both use integers as your values, which are also immutable.  The mutability of strings has nothing to do with this question or response.    Your solution was to hand code the dictionary, which is less flexible than the the-mathematicians example. OP can generate that string however they want, including building it up through concatenation if they so choose.    Also, you assume OP's gender, which is not necessary."
learnpython,3cn34y,elbiot,1 point,Thu Jul 9 19:24:32 2015 UTC,"EDIT: I see your point on the second, though a string would be the same as a list as well."
learnpython,3cn34y,raylu,1 point,Thu Jul 9 19:30:54 2015 UTC,"sure, OP could use a list, string, tuple, array, or any other ordered container type.  But for what OP asked for (ie: ['a','b','c'] as keys in a dictionary*, a string makes more sense)  *OP wanted to modify the globals dict, but a dict variable clearly makes more sense"
learnpython,3cn34y,elbiot,1 point,Thu Jul 9 19:35:26 2015 UTC,"The reason I said I see his point for using a list was that for my second example, the syntax and use case of turning a number into a letter is the same for the list as the dict. i.e num_to_letter[0] == 'a' for both. Though adding large letters and changing letters would be easier with a dict, depending on the use it's not necessary."
learnpython,3cn34y,The-Mathematician,1 point,Thu Jul 9 20:01:42 2015 UTC,"The first solution is a basic python idiom, and not too clever."
learnpython,3cn34y,elbiot,2,Thu Jul 9 16:14:32 2015 UTC,"This may be more of a workaround than the exact answer you're looking for. But I think I get what you're describing - you want something that will generate the names of variables as well as the values of the variables?  I've had need of the same kind of function several times before, and as far as I've been able to figure out the best way to do this is with a dictionary, which would look something like:  names = ['a', 'b', 'c', 'd', 'e'] values = [0, 1, 2, 3, 4] myDict = {}  for i in range(5):     myDict[names[i]] = values[i]  #this should return 3 print(myDict['d'])   Alternatively, if you're specifically looking to assign the numbers 0, 1...n to a list of things n items long, then you already have those values. Lists are ordered, so calling myList[3] will return the 4th item in the list (counting from 0), and so on.  Is that like what you're looking for?"
learnpython,3cn34y,Renaissance8905,1 point,Thu Jul 9 04:54:44 2015 UTC,"This is pretty close....I should have been a little more specific... Lets assume that my list is super long, say 5000 values, created from some kind of text file. I don't want to have to write out 5000 integers. I ended up going with this:  names=['a','b','c','d','e'] myDic={}  for i in range(5):   myDic[names[i]]=i  print (myDic['d']) print type((myDic['d']))   I ran it on terminal and it works. I'm going to plug this into a couple of functions to see if it is what I need. If not, it is damn close.  Thanks for the answer guys! Taking a beginner py course on coursera that has not covered this concept. Enjoying it thoroughly!!"
learnpython,3cn34y,The-Mathematician,2,Thu Jul 9 05:24:02 2015 UTC,Load the values and keys into separate lists then check out dict(zip(...etc
learnpython,3cn34y,cratervanawesome,2,Thu Jul 9 05:34:46 2015 UTC,"Python already had a thing that does that, it's a dictionary."
learnpython,3cn34y,jeans_and_a_t-shirt,1 point,Thu Jul 9 04:58:39 2015 UTC,"If each letter maps to a unique number, as in your example, then a list would work:  letters = list('abcde') letters[2] # => 'c' letters.index('b') # => 1"
learnpython,3cnb8j,Scoutdrago3,2,Thu Jul 9 06:06:49 2015 UTC,Twisted is trying to set up a _SocketWaker which is a utility class that allows other threads to wake up the IO thread by sending a signal over a socket. Your computer is trying to connect to itself. This is intended behaviour and part of the way twisted works. To fix the problem you need to work out why your computer might be refusing this connection. Perhaps you have a firewall?
learnpython,3cnb8j,ingolemo,1 point,Thu Jul 9 10:35:26 2015 UTC,"Ok, thanks, I'll look into it."
learnpython,3cnb8j,ingolemo,1 point,Thu Jul 9 19:52:50 2015 UTC,Turning my firewall off didn't help. Should I also turn off my Gateway firewall? Is there anything else that could be stopping the connection?
learnpython,3ckpjr,Cold_Bagel,5,Wed Jul 8 17:45:20 2015 UTC,Just wait and you'll be dreaming code....
learnpython,3ckpjr,scrabaddict,2,Wed Jul 8 18:11:34 2015 UTC,This has already started for me after 4 months.
learnpython,3ckpjr,MJMarto,1 point,Wed Jul 8 18:17:01 2015 UTC,funny how that happens. :-)  OP welcome to the IT high.  I have been chasing it for 25 years and still love it.
learnpython,3ckpjr,alaudet,1 point,Wed Jul 8 19:49:05 2015 UTC,"Yesterday I went out for dinner with my SO after work, and all I could think about was my code. Which felt awesome because I've been in a ""coder's block"" getting very little accomplished for a month now."
learnpython,3ckpjr,cdcformatc,1 point,Wed Jul 8 21:16:54 2015 UTC,"Yer, it's good stuff!  I recall I was processing some text files, and realised I might have some 'problems' in the future, so I put a bit of extra effort in and made the workflow pluggable. Sure enough, the problems manifested in the future, so I implemented a plugin, and it just worked! It was so gratifying to know that the extra effort I put in at the start payed off at the end."
learnpython,3clg44,williamfrantz,1 point,Wed Jul 8 20:46:07 2015 UTC,"my personal solution  print(*[('{}{}'.format('Fizz' if i%3==0 else '','Buzz' if i%5==0 else '') or str(i)) + '\n' for i in range(1,101)])   so it holds to the requirement of no space between the words ands prints each on a line, instead of as a list"
learnpython,3clg44,jeans_and_a_t-shirt,1 point,Wed Jul 8 21:05:47 2015 UTC,"Yeah, I found something similar to that.  I think my 'ah ha!' moment was realizing (i%3==0) is the same as (i%3<1) which is also 1 character shorter.  [also rewrote my solution to print one value per line instead of the dumping the Python list]"
learnpython,3clg44,Vaphell,1 point,Wed Jul 8 21:31:22 2015 UTC,"you can shave off ==0 if you reverse the expression, ie '' if i%3 else 'Fizz', '' if i%5 else 'Buzz'"
learnpython,3clg44,hw_t_dstr_ngls,1 point,Thu Jul 9 01:43:52 2015 UTC,"How is (i%3/2) supposed to work?  If you want integer division, use // instead of /."
learnpython,3clg44,Ran4,2,Wed Jul 8 22:39:18 2015 UTC,"i | i%3/2 --+------- 1 | 0 (because 0.5 rounds down to 0) 2 | 1 3 | 0 (because 0/2 is 0)   Apparently Python 3 doesn't do integer division using /.  You are probably right that // would fix the problem for Python 3 but that would add 2 characters back.  Still, I guess that's shorter.  for i in range(100):print(i%3//2*""Fizz""+i%5//4*""Buzz""or i+1)   That's 52 characters.  Eliminating the print statement (relying on auto print of the Python interactive shell) would yield:  for i in range(100):i%3//2*""Fizz""+i%5//4*""Buzz""or i+1   46 characters which should work in Python 3 (although I can't test it right now) but again the math is pretty obscure."
learnpython,3clo7t,bendy_straw_ftw,3,Wed Jul 8 21:44:23 2015 UTC,Saw that someone else had the same issue here.  Try updating your modules and see if things work after that.
learnpython,3clo7t,savvastj,3,Thu Jul 9 03:26:44 2015 UTC,Yeah that fixed it thank you so much!
learnpython,3clo7t,savvastj,2,Thu Jul 9 04:37:51 2015 UTC,Your welcome.
learnpython,3clo7t,jackmaney,1 point,Thu Jul 9 17:00:39 2015 UTC,Did you import matplotlib before doing the %matplotlib inline IPython command?
learnpython,3cmaz1,Dragonfliesfoos222,2,Thu Jul 9 00:43:05 2015 UTC,"not too familiar with numpy, that said did you quantify expected time of 2500 function calls and how much worse results you get?  I'd try keeping it simple to confirm it's not some flaw in the structure of the program, eg spin loops by hand and insert elems individually. It's not like the overhead of 2500 iterations is going to be astronomical.  X = np.linspace(1e10, 1e12, num=50) # 50 values Y = np.linspace(1e5, 1e7, num=50)   # 50 values  Z = np.zeros([50,50]) for i, x in enumerate(X):     for j, y in enumerate(Y):         Z[i,j] = f(x, y)"
learnpython,3cmaz1,Vaphell,2,Thu Jul 9 01:25:04 2015 UTC,"OP we need to see your function. It should NOT be operating on single x,y pairs at once, that defeats the purpose of numpy. If possible it needs to be vectorised to get the full power/speed of numpy."
learnpython,3cmaz1,pqu,1 point,Thu Jul 9 04:15:49 2015 UTC,"Agreed. Use numpy ufuncs or cython if necessary.  Numpy.newaxis for broadcasting two (50,) arrays into (50,50) if ufuncs can do it.  Masks instead of conditionals.  Basic numpy paradigm stuff.  Op, it's faster to iterate over lists if iterate you must.  Don't use numpy if you can't actually use numpy."
learnpython,3cmaz1,elbiot,1 point,Thu Jul 9 06:55:44 2015 UTC,Please see my edit above.
learnpython,3cmaz1,elbiot,1 point,Thu Jul 9 08:56:13 2015 UTC,"Your function is already vectorized.  Why are you talking about loops?  Giving func two arrays of shape (50,) will give a matrix1 of (50,4000,4000).  Giving single values of x and y would raise an obvious error.   np.dot(datarr.T,  np.dot(total_matrix, datarr) )   eats many gigabytes of my ram and then complains that the objects are not aligned, so you need to fix that line.  Transposing a 1d array has no affect, btw.  Seems like the idea to to condense a (50,4000,4000) array to a (50,) array (transpose the result of first dot product?).  But I don't know how you expect to get a (50,50) array because making that (50,) array used all of your values.  Maybe you meant for matrix1 and 2 to have a higher dimension?    Anyways (continuing to ramble), there is a limit to what numpy can do when broadcasting things together with newaxis.  If your matrices were all supposed to have an extra dimension of length 50, my computer would not have enough ram to hold the intermediate arrays. 8 bytes * 50 * 50 * 4000 * 4000 is 320 gigabytes.  So it seems you need to both change your algorithm to give a correct result and change it to use an outer loop that computes arrays of (50,) one at a time and inserts them into the final result."
learnpython,3cmaz1,elbiot,1 point,Thu Jul 9 16:04:50 2015 UTC,"Thanks for the comprehensive reply, I appreciate it.   For    np.dot(datarr.T,  np.dot(total_matrix, datarr) )   Yes, I'm thinking in terms of matrix multiplication, i.e. vector^T * Matrix * vector  So, we begin with 50 matrices size (4000,4000), i.e. an array shape (50,4000,4000).   The two dot products with result in one value for each d^T*M*d, i.e. an array (50,).   This is 50 values of the function, func(x1,y1), func(x2,y2), func(x3,y3), etc.   ""But I don't know how you expect to get a (50,50) array because making that (50,) array used all of your values.""  I am trying to figure out how to output a matrix of (50,50), i.e.  First row: func(x1,y1), func(x1,y2), func(x1,y3), etc.  Second row: func(x2,y1), func(x2,y2), func(x2,y3), etc.  Third row: funx(x3, y1), etc.   I'm getting confused by the broadcasting involved though...I think...."
learnpython,3cmaz1,elbiot,1 point,Thu Jul 9 17:15:19 2015 UTC,"To do it in one big numpy swoop, you'd have to expand the dimensions of matrix1 and matrix2 when you add them.  But, this would 1) not come close to fitting in memory and 2) be too hard to understand (newaxis and broadcasting get impossibly confusing very fast)  So, instead, loop over y, making rows that represent f(x1,y1), f(x2,y1), ..., f(x50,y1) one at a time, inserting them into the result array.  In general, you don't want to loop over elements of an array because it is slow.  But in this case, the cost of iteration will be insignificant compared to the cost of computing that dot product.  Not 100% sure, but something like this:  def func(arrx, arry):     result.np.empty((50,50),dtype=arrx.dtype)     matrix1 = arrx [:, None, None] * normalized_matrix[None, :, :] #(50,4000,4000)     for i,y in enumerate(yarr):       matrix2 = y * id_mat #(4000,4000)       total_matrix = matrix1 + matrix2 #(50,4000,4000)       result[i] = np.dot_stuff #something that works, which your previous one didn't for me"
learnpython,3cmaz1,NoLemurs,1 point,Thu Jul 9 19:06:21 2015 UTC,"By the way.  depending on how numpy is set up, you might be using very slow libraries.  Test it by running this:  from time import time import numpy as np n = 1000 a = np.random.random((n,n)) b = np.random.random((n,n)) begin = time(); np.dot(a,b); print ""done in %s"" % (time()-begin)   On my slow laptop, this ran in 7 seconds before configuration and in .3 seconds after."
learnpython,3clbeq,format120,6,Wed Jul 8 20:14:01 2015 UTC,"His biggest argument is that since he's using classes he can put multiple classes in one file and not have to import the whole file, but he's only ever using one class per file.   This is just wrong-headed. First off, from foo import bar works just as well if bar is a function rather than a class. Second, either way, the entire module is loaded just the same as import foo would do - the only difference is that the global name bar becomes assigned the value of whatever is called bar inside that module, and the global name foo is not assigned. But there is an internal cache of loaded modules, accessible as sys.modules, which still stores the module object corresponding to the foo module.  Finally, he's not really coming from a C background if he's thinking in terms of classes, but a C++ background. Although it could conceivably be a very bastardized C++-that-looks-more-like-C-than-it-needs-to background. :)"
learnpython,3clbeq,zahlman,1 point,Wed Jul 8 20:28:17 2015 UTC,"Thank you, this is very helpful."
learnpython,3clbeq,elbiot,4,Wed Jul 8 20:58:54 2015 UTC,"I doubt you'll convince them, but unnecessary classes are inelegant.  Ie:  from utils import StringFormatter formatter = StringFormatter() result = formatter.format_ip(ip_string) result2 = fomatter.format_name(name_string) #result = StringFormatter.format_ip(ip_string) #ewww   is clearly worse than  from string_utils import format_ip, format_name result = format_ip(ip_string) result2 = format_name(name_string)   People expect to instantiate classes to use them, and have them relate to some internal state.  It's confusing when they don't.  And modules make for potentially more readable and intuitive name spaces where classes don't need to be instantiated.  edit: I'd rather see eight files that all handle different aspects than one or two files that have a ton of classes related to different things in them."
learnpython,3clbeq,williamfrantz,1 point,Wed Jul 8 20:33:51 2015 UTC,A perfect example.  Thanks.
learnpython,3clbeq,beertown,3,Wed Jul 8 21:00:03 2015 UTC,"What's ""that one video that you're all thinking about""?  I'd like to see it."
learnpython,3clbeq,jpfau,3,Wed Jul 8 21:36:19 2015 UTC,Stop writing classes
learnpython,3clbeq,tk421whyarentyouatyo,2,Wed Jul 8 21:41:03 2015 UTC,"It all depends on what you are doing. The right choice is mostly matter of experience, and a little bit of personal style, because sometimes both classes and functions are equally good for a part of the project. Going for all-classes rarely is a good call. The same for all-functions (talking about mid-sized projects or bigger).  I use a mix of both. Python lets do this in an incredibly  smooth way. And I love it.  Also, talking about classes: stay away from multiple inheritance."
learnpython,3clbeq,nsfyn55,4,Thu Jul 9 08:20:54 2015 UTC,Who the hell said classes were bad? Never heard that in my life.
learnpython,3clb4e,Pilgrim444,6,Wed Jul 8 20:11:55 2015 UTC,what did you do? what output did you expect? what output did you get instead?
learnpython,3clb4e,raylu,2,Wed Jul 8 20:14:31 2015 UTC,"I would type in Kevin. I would expect to see ""Kevin is great!"" and this is the error i would get.  Traceback (most recent call last):   File ""C:/Users/Kevin/Desktop/learning.py"", line 2, in <module>     myName=input(""what is your name"")   File ""<string>"", line 1, in <module> NameError: name 'Kevin' is not defined"
learnpython,3clb4e,zahlman,2,Wed Jul 8 20:20:11 2015 UTC,"You are using Python 2.x, where the function you want is not input but raw_input.  If you intended to run the program using a 3.x version of Python, and you have both on your machine, then you need to tell us more about how you run the program."
learnpython,3cl707,rm_-rf_slashstar,1 point,Wed Jul 8 19:43:58 2015 UTC,"requests uses urlllib3, which passes None by default to ssl.wrap_socket. The default is set by create_default_context which calls load_default_certs which calls set_default_verify_paths which has the following documentation:   Load a set of default “certification authority” (CA) certificates from a filesystem path defined when building the OpenSSL library. Unfortunately, there’s no easy way to know whether this method succeeds: no error is returned if no certificates are to be found. When the OpenSSL library is provided as part of the operating system, though, it is likely to be configured properly.   In conclusion, I have no idea."
learnpython,3cl707,raylu,1 point,Wed Jul 8 20:00:33 2015 UTC,"Ahh, check this out http://docs.python-requests.org/en/latest/user/advanced/#ca-certificates  This might be the way to do it..."
learnpython,3ckgq4,Lithobilic,2,Wed Jul 8 16:43:44 2015 UTC,Start from something simple. Like card game. You'll find answers for all your questions.
learnpython,3ckgq4,04h,1 point,Wed Jul 8 16:55:51 2015 UTC,"You'll find answers for all your questions.   It's true.  Python can make anything, including 3D open world games with physics.  But it's a long road. Start with something small that you can finish, like a card game without graphics.  Then make that an executable.  Then make a basic 2d graphic ""character can move around"" thing in pygame.  Then make that executable.  Then add features, making sure you are using good OOP (check in here for help).  Then, if you want a performant 3D game, you'll need to learn some opengl and probably use cython a bit too.   source: Ace of Spaces was written in python with pyglet and some opengl."
learnpython,3ckgq4,elbiot,2,Wed Jul 8 18:08:40 2015 UTC,Thanks for the advice.
learnpython,3ckgq4,gengisteve,2,Wed Jul 8 18:35:29 2015 UTC,"As the others said, you are going to need to start simple and get some of the basics down first.  But, for inspiration, check out http://www.pygame.org/news.html  Which has a bunch of python games to see what it looks like when it all comes together."
learnpython,3ckgq4,galamdring,1 point,Wed Jul 8 17:08:43 2015 UTC,"Some of this is basic programming stuff. You can set global variables if that is what you mean. I think you might be misunderstanding how that process works, but using a global variable is the direct answer to problem 1. This would be a variable defined outside any function, and you have to call out that you are using the global variable when you access it inside a function.  For problem 2, you need to write that data to a file. How you go about that is up to you, as there are a ton of ways to do it, and it depends on the data that you need to write out.  Py2exe is one way to create an executeable that contains everything they need to run your program. There are other options but the is the one I've used."
learnpython,3ckgq4,ajayinvictus10,1 point,Wed Jul 8 16:57:59 2015 UTC,Thanks for the advice.
learnpython,3ckgq4,iminurnamez,1 point,Wed Jul 8 18:35:33 2015 UTC,Hey you can also check out making games with python book by al sweigart
learnpython,3clo3b,Comm4nd0,3,Wed Jul 8 21:43:28 2015 UTC,"Looks very good! Here's some notes:  Why do you invoke javascript when you have the power of python to command?    Remember you need to escape the backslashes in windows file names:  receipt = open(""D:\\Python\\Till\\index.html"", ""w"")     You repeat a lot of things. For instance, I suggest this shorter version of ""print_menu()"".   def print_menu():     for key in sorted(menu):         print ""[{}] {} - ${}"".format(key, *menu[key])     print_menu_small()     This line has some issues see this FAQ:      elif item not in menu.keys() and not (""S"" or ""R"" or ""L""):   But moreover, the entire line is not needed since this is really just the else case.    To make the subtotal work, you need to return the subtotal as well in this line:  receipt,price,name,current_list = add_item(subtotal, item)"
learnpython,3clo3b,novel_yet_trivial,1 point,Wed Jul 8 22:10:04 2015 UTC,"Simply because it was in the middle of the HTML so i didn't think to go back to putting python in there. good point though.   2 yep, i see what you mean. from all the feed back i get i get the feeling that if i find my self writing something more than once then i need to make a function for it. and from now on i will do so!   Yes, everyone has commented on that line. the reason i did it like that is because they were originally all IF statements. then i changed them to ELIFs but didn't remove the unnecessary conditions. thanks for finding the solution to the subtotal problem. i'll give it a try!   OH and thank you for your reply! means a lot."
learnpython,3clo3b,calzoneman,2,Thu Jul 9 07:30:23 2015 UTC,"A few notes:   receipt = open(""D:\Python\Till\index.html"", ""w""): Inside of a string, backslashes have special meaning to escape the next character, for example \n becomes a newline character.  Since you want an actual backslash for a Windows path, you need to escape the backslash with another backslash: ""D:\\Python\\Till\\index.html"". If you want to test for the existence of a key in a dictionary, you can just use key in mydict; it's not necessary to use key in mydict.keys(). I see that in most of the program you used ""format string"".format(...) to format strings, but in one place you used the old ""format string"" % argument syntax.  Prefer being consistent and using ""..."".format(...). elif item not in menu.keys() and not (""S"" or ""R"" or ""L""): this probably does not do what you want.  This conditional is being parsed as (item not in menu.keys()) and (not (""S"" or ""R"" or ""L"")).  Because of the way booleans work in Python, not (""S"" or ""R"" or ""L"") is always False, so this elif clause will never execute.  What you probably wanted was elif item not in menu and item not in (""S"", ""R"", ""L""). The reason the subtotal is not working is that the subtotal variable that you are modifying in add_item() is not a global variable, but a local variable for that function.  When you call add_item(subtotal, item), the value of the global variable subtotal is copied into a local variable in add_item()'s scope.  When add_item() modifies subtotal, it is updating its copy of subtotal.  You have a couple of options here.  You could return the updated subtotal and use that return value, or you could declare subtotal as global by adding global subtotal at the top of add_item() and remove the subtotal parameter to the function."
learnpython,3clo3b,calzoneman,1 point,Wed Jul 8 22:00:05 2015 UTC,Thank you for taking the time to reply.   Yes i remember learning that now. however... it does work as it is?? would it be the case that on some systems it wouldn't? tried without the .keys() and its True ever time?! Yeah i used different ways of formatting strings because i was using suggestions from V.1. i'll make sure in the future i'm more consistant. bad elif statement i know! THANK YOU THANK YOU THANK YOU!!!!!!!!!!!! All i had to do was add global subtotal and it's now working. THANK YOU!!!! you don't even know how many hours i spent trying to get that to work...
learnpython,3clo3b,swingking8,1 point,Thu Jul 9 07:49:15 2015 UTC,"In your case, you got lucky that neither \P, \T, nor \i are valid escapes, so they are parsed as-is.  However, this would not be the case in general.  For example, if your path were D:\new-receipt.html this would be parsed as D:(newline)ew-receipt.html.  This is clear if you print the two strings:    >>> print('D:\Python\Till\index.html')   D:\Python\Till\index.html   >>> print('D:\new-receipt.html')   D:   ew-receipt.html   Hence, best practice is to always escape literal backslashes, even if it works without the escape by coincidence. Python 2.7.10 (default, May 26 2015, 04:16:29)  [GCC 5.1.0] on linux2 Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> d = { 'food': 'pizza' } >>> 'food' in d True >>> 'drink' in d False"
learnpython,3clo3b,Justinsaccount,2,Thu Jul 9 17:44:55 2015 UTC,"This line doesn't do what you think it does:  elif item not in menu.keys() and not (""S"" or ""R"" or ""L""):   I would write it like this, but it's the shortest way to make something work:  elif item not in menu.keys() + ['S', 'R', 'L']:   Not sure why your subtotal isn't working.  Your add_item function looks great, btw.  It's obvious you've learned quite a bit in the short time you've been making this."
learnpython,3clo3b,Justinsaccount,1 point,Wed Jul 8 22:07:35 2015 UTC,"S R and L are checked for earlier, that whole condition is pointless."
learnpython,3clo3b,Vaphell,1 point,Thu Jul 9 01:59:12 2015 UTC,"Thank you once again for your suggestion.  Not going to lie, a lot of the add_item function was the code you suggested on V.1 i just added to it to make it how i wanted it. so, i'd love to take the credit for it but...  Here is v.2.1: http://pastebin.com/YPnXwUNs  thanks again for all your help."
learnpython,3clo3b,novel_yet_trivial,2,Thu Jul 9 08:20:37 2015 UTC,"Your conditional statements should be simply  if item == ""P"": elif item == ""S"": elif item == ""R"": elif item == ""L"": elif item in menu: else:     print""You have entered an incorrect key.\nPlease try again.""   also, all of the 'continue' lines do not accomplish anything and can be removed."
learnpython,3cljnf,python_splitter,4,Wed Jul 8 21:11:14 2015 UTC,Your error tells you exactly what is wrong: you have a return statement outside of a function.
learnpython,3cljnf,novel_yet_trivial,3,Wed Jul 8 21:19:34 2015 UTC,It might be helpful if you can post all of the code to a pastebin like https://gist.github.com/
learnpython,3cljnf,commandlineluser,2,Wed Jul 8 21:16:29 2015 UTC,"Note - when you're posting code to reddit, add 4 spaces to the front of every line. This will tell reddit not to mess up the formatting.  Ie - here it is with this applied:  equals_pos = lines[1].find('t=')  if equals_pos != -1:   temp_string = lines[1][equals_pos+2:]   temp_c = float(temp_string) / 1000.0   temp_f = temp_c * 9.0 / 5.0 + 32.0    return temp_c, temp_f  #print out results while true:   print (read_temp())   time.sleep(1)   Your issue is that you're using ""return"" outside a function, which isn't valid.  ""return"" is a statement that only makes sense inside a function, since the purpose of it is to say what the function gives back to the calling code.  I suspect. given your while loop calls ""read_temp()"", that you meant this code to be inside a function called read_temp().  The indentation errors you're getting are likely because you're not indenting your code consistently - python is a language that uses the level of indent to say what statements belong to what command (eg. notice how after the ""while"" or if statement, the following lines are indented a little further, all at the same level - this indicates that those statements are part of that while or if.  The same applies to functions - make sure to indent your code a little further.  Conventionally, 4 spaces are used per indent level (though the code you're using is using 2, which will also work - the most important thing is that they are consistent.  You don't list all your code, and I assume there must be lines above this that are part of this read_temp function that the lines you have posted are meant to be part of.  If so, it's likely just a matter of indenting it correctly (ie. to the same level as the other lines in that function) so python knows those lines belong to that function.  The while True line is likely the line at which the indentation should be dropped, making this the main program part (ie. the bit that calls that function every tenth of a second, and prints the results)"
learnpython,3cljnf,Brian,1 point,Thu Jul 9 04:28:47 2015 UTC,"Ah I see Thank you, it's a copy from a a tutorial that comes with the camjam kit from pihut it's temperature probe section so I been copying the code from a sheet so I will go back and look what's wrong taking account of all the things I've been told on here (Thank you to all ),  sorry I wasn't sure if I should post the whole code or just a snippet but as soon as I'm back on my computer I can update this post, also thank you for the hint on how to put code in Reddit  Thank you for the help chaps this is my first try with python and a raspberry pi so it's all a bit daunting.  Edit: added link if people want to check it out.  https://www.dropbox.com/s/crtabzm3l5mb4zb/CamJam%20EduKit%20Sensors%20Worksheet%203%20-%20Temperature.pdf?dl=0"
learnpython,3clhoc,MaxwellSalmon,3,Wed Jul 8 20:56:54 2015 UTC,"From the error, you can see that calling coords on the canvas didn't like the arguments you gave it.  The error isn't terribly readable, but if you look at the docs, you'll see that it's expecting an item, and then optionally a list of coordinate pairs.  You seem to be giving it an item, but your first step for things like this should be to check what you're actually giving it - often the problem will be that it isn't what you expect.    So, try adding in a print ""box1 = "", self.box1 immediately before this line and rerunning.  That should give you ""box1 = None"", which should clue you in that box1 isn't what you want here.  Next stop is to see where box1 got created (or rather, should have been creaed).  This appears to be in the create method, though it's initialised to ""None"" in the constructor.  This ought to hint to you that maybe that create() method isn't being called before the remove() method, or else that it's not creating the box1 object.  OK, so next step is to look at where create is called, in comparison to the remove().  And there you'll see the problem: create is only called 1 time in 100 each time through the mainloop, but remove is called every time.  In the 99% of the time the box isn't created the very first pass, you're going to get this error.  Here the solution is presumably to do something similar to your move method, and handle the case where the box doesn't actually exist yet."
learnpython,3clhoc,Brian,1 point,Thu Jul 9 04:44:51 2015 UTC,"Oh! Of cause! I created box1 as ""None"". It should of cause be an item on the canvas as the remove() function is looking for.  Thank you :-)"
learnpython,3clhoc,TheKewlStore,1 point,Thu Jul 9 08:43:05 2015 UTC,"your remove method calls the coords method for box1, which is where your error is occurring. Considering this statement doesn't appear to have any effect, i'd suggest just removing it, replacing it with a pass or removing the method entirely."
learnpython,3ckgco,eiherrera,3,Wed Jul 8 16:41:18 2015 UTC,IDLE is not installed by default. You can install it with  sudo apt-get install idle3   Or search the software manager. Remember there is a version for python2 (idle) and a different version for python3 (idle3).
learnpython,3ckgco,novel_yet_trivial,1 point,Wed Jul 8 16:44:13 2015 UTC,Thanks a lot man!!
learnpython,3ckgco,soqets,2,Wed Jul 8 16:47:02 2015 UTC,"You'll have to install it from the software center. When I was trying out Linux, I hated using the terminal, so I searched ""Python 3 IDLE"" in the software center."
learnpython,3cjyc8,Jerryrad,3,Wed Jul 8 14:27:45 2015 UTC,"if milk, eggs, cookies, yogurt is all on one line in the file, Python will read it and save it as one line.   You can either put each item on its own line and keep your code the way it is, or you can change your code to say:  stuff = [] with open('testfile.txt') as f:     for line in f:         stuff.extend(line.split(', '))   This will loop over each line in the file (in this case, there's only one line, but it'll work for multiple lines), and then it creates a list of words that are separated by a comma and a space (line.split(', ')). Then it concatenates that list to the stuff list.  So now your text file could look like:  milk, eggs, yogurt, cheese beef, chicken, turkey, sausage spinach, carrots, onions   and so forth."
learnpython,3cjyc8,jpfau,1 point,Wed Jul 8 14:43:54 2015 UTC,"That's exactly what I was looking for, thanks. Except now the final item in the list has a \n in it.  ['bread', ' candy', ' eggs', ' milk\n']   The original code that I used, was used to fix that problem. Any thoughts on how to remove it?   edit: thought I figured out my error, I was wrong."
learnpython,3cjyc8,Vaphell,2,Wed Jul 8 18:51:40 2015 UTC,"You need to strip the newline char from line, just like you did in your original code. The code you were given doesn't do that.  stuff = [] with open('testfile.txt') as f:     for line in f:        stuff.extend(line.rstrip().split(', '))"
learnpython,3cjyc8,jpfau,1 point,Wed Jul 8 20:14:16 2015 UTC,That's it.. Thank you. I was struggling with the syntax on that.
learnpython,3cjyc8,hudsonpenner,2,Thu Jul 9 12:46:38 2015 UTC,"You can strip the line before you split it, like how /u/Vaphell does it in his/her comment"
learnpython,3cjyc8,jibbly_jibbly,3,Wed Jul 8 21:46:02 2015 UTC,"split will definitely work. However, the data in your file is actually csv data not txt. As a result, I would think that using the csv module to parse the data would be the most pythonic way:  https://docs.python.org/2/library/csv.html"
learnpython,3ckc7t,Sirkk,1 point,Wed Jul 8 16:11:22 2015 UTC,"If I do it without the lambda   What do you mean by that?  Do you mean:  self.ui.start_button.clicked.connect(self.metronome.start())   Think about what that means.  That means call self.metronome.start() now, and pass its return value as a parameter to connect().  That's not what you want at all.  You want to pass self.metronome.start as a function to be called when the event fires:  self.ui.start_button.clicked.connect(self.metronome.start)   But the lambda is just fine, and accomplishes the same thing."
learnpython,3ckc7t,Rhomboid,1 point,Wed Jul 8 16:38:35 2015 UTC,"I actually meant your second version by that, without the function call."
learnpython,3ckc7t,raylu,1 point,Wed Jul 8 17:21:14 2015 UTC,"Create another method and assign that to be the event handler. Put a print in there and see if it's being called without the lambda.  By the way, in python 3, old-style classes are gone, so you no longer need to inherit from object."
learnpython,3ckc7t,raylu,1 point,Wed Jul 8 19:28:45 2015 UTC,"If I create another function with the sole purpose of calling metronome.start() it works just fine, too. Thanks for the heads up about the inheritance! I guess I'll just leave it as it is even though it looks a bit hacky :D"
learnpython,3cl7vu,TanAndBlonde,1 point,Wed Jul 8 19:49:52 2015 UTC,"This is basically using lambda in long form. In general, you want to avoid this, for readability if for nothing else. However, there are some benefits. For instance, you can make custom functions on the fly:  def make_func(tail):     def add_tail(data):         return data + tail     return add_tail  better_fortune = make_func(' ... in bed!')  print better_fortune('you will be lucky')   This is often used to make 'encode()' and 'decode()' functions."
learnpython,3cl7vu,novel_yet_trivial,3,Wed Jul 8 19:55:55 2015 UTC,Avoid? Why?  Also: decorators
learnpython,3cl7vu,04h,3,Wed Jul 8 20:13:17 2015 UTC,"Uh, OP is probably talking about closures (specifically decorators).  Also, the ""lambda in long form"" makes sense if you can't define the function in a lambda (ie, if it consists of multiple statements).  So, I don't know why you'd say one would want to avoid this as it makes a lot of sense compared to alternatives in many, many situations.  edit: downvote wasn't me, btw."
learnpython,3cl5lc,eiherrera,2,Wed Jul 8 19:34:20 2015 UTC,https://pypi.python.org/pypi/PyPDF2/1.25
learnpython,3cl5lc,liam_jm,2,Wed Jul 8 19:55:52 2015 UTC,"using PDFMiner in my latest project, super easy"
learnpython,3cl2je,Omeganx,2,Wed Jul 8 19:12:59 2015 UTC,"py2exe and py2app works quite easily for most things, IIRC they can have issues with python packages that compile C/C++ when installing; such as numpy or scipy maybe?"
learnpython,3cl2je,aqua_scummm,2,Wed Jul 8 19:36:16 2015 UTC,"yeah but how do I install the module with it? (btw the module is an NBT parser). and I've tried with py2exe, it created a dist file with an executable inside but the executable opens the console and the consoles closes just after.."
learnpython,3cl2je,aqua_scummm,1 point,Wed Jul 8 20:08:49 2015 UTC,"The top answer here is how to do it with PyInstaller, and the second answer is how to do it with py2exe (modify your setup.py file)"
learnpython,3cl2je,aqua_scummm,1 point,Wed Jul 8 20:43:59 2015 UTC,"with py2exe, it says 1missing modules : readline; with pyInstaller, I'm having some trouble to find any understandable information."
learnpython,3ck4jr,sethosayher,3,Wed Jul 8 15:16:00 2015 UTC,"In the example of 3.14, would the first integer be for the number 3, and the other integer for .14? Am I understanding this correctly?   No.  The number is represented by an exponent and a significand (or mantissa.)  You can think of it as being like normalized scientific notation: X.XXXXXXeYY, e.g. 142.5 would be represented as 1.425e2.  1.425 is the significand and 2 is the exponent.  These examples are in base 10, but the floating point representation used by a computer uses base 2, so the values stored are not actually 1.425 and 2.   Zelle says that python is better at computing very high numbers than java or other languages.    That's kind of a questionable statement.  Python integers are implemented using arbitrary precision.  This is a technique where the numbers can grow as large as necessary.  It essentially means that if the magnitude exceeds what can be represented by a single 'digit', you just add more digits.  I put digit in quotes because it's not a decimal digit that we're talking about here, but some much larger digit.  (The exact size depends on the platform, but generally 15 or 30 bits.  cf sys.int_info.bits_per_digit.)  This technique can be implemented in any language, and there are certainly arbitrary precision libraries for Java.  It's just that by default Java does not use them, but instead fixed size integers.  These have a lot of advantages over arbitrary precision integers.  Their fixed size means you can create a contiguous array of them.  And they directly model the capabilities of the processor.  For these reasons, among others, they are far more efficient.  Many, many languages choose to use fixed machine-width integers as the primary datatype, not just Java, but C, C++, C#, Fortran, and so on.  But there are arbitrary precision libraries available for all of those languages if you need it.  Python is more centered around being programmer friendly and less concerned with performance, so having arbitrary precision integers be the default type makes more sense, despite them being much slower."
learnpython,3ck4jr,Rhomboid,1 point,Wed Jul 8 15:39:09 2015 UTC,"Thank you for this answer. This also explains why larger numbers are expressed in scientific notation in python, very cool."
learnpython,3ck4jr,04h,1 point,Wed Jul 8 15:45:09 2015 UTC,Thank you for such solid answer! TIL.
learnpython,3ckvyw,abrarisland,1 point,Wed Jul 8 18:28:28 2015 UTC,"http://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script  edit: your result is suprising to me, because a list slice creates a new list, so bin_search has that overhead and I can't see what overhead #2 has that would make it slower.  Except, maybe returning -1 instead of inf makes it jump around more.  That's probably a bug."
learnpython,3ckvyw,elbiot,1 point,Wed Jul 8 18:37:42 2015 UTC,"You're right the results were pretty surprising for me as well. I looked over my test cases, and I realized that I was only checking for the worst-case (x is not in the list). I used cProfile earlier, so I guess that would explain the inconsistency between the results (timeit and cProfile).  I changed the return 'Inf' to return -100, and bin_search changed to the slower one."
learnpython,3ckvyw,elbiot,1 point,Wed Jul 8 19:46:30 2015 UTC,"You should really throw a ValueError like list.index does.  Also, your code assumes the list is sorted, but you weren't clear that you were actually giving it a sorted list.  I can't see why returning Inf or -100 would affect the performance, so it's something else."
learnpython,3ckvyw,novel_yet_trivial,1 point,Wed Jul 8 20:08:55 2015 UTC,"For me, bin_search_two is always faster. Which makes sense since it does not have to remake lists.  In [3]: l = range(100000)  In [4]: %timeit bin_search(l,14) 1000 loops, best of 3: 432 µs per loop  In [5]: %timeit bin_search_two(l,14,0,99999) 100000 loops, best of 3: 3.1 µs per loop"
learnpython,3ckvyw,raylu,1 point,Wed Jul 8 18:44:17 2015 UTC,Some details about how you tested this would be nice.  itertools.islice would probably make the first (even) faster.
learnpython,3ckvyw,KleinerNull,1 point,Wed Jul 8 19:25:23 2015 UTC,"Couldn't it be faster if you use a while-loop instead of recursion? The recursive tree must be produce more overload than a loop, because you needn't manipulate an object you only want to search for something. I only ask, because I don't see any reason for recursion in this task."
learnpython,3cjc84,Phelgo,3,Wed Jul 8 10:43:25 2015 UTC,"Solved it, in-case anyone has similar problems:  def first(n):  return n + 5   def second(n):  return n / 2 #Removed the function-in-function call, as it was unnecessary when the function structure in the loop changed (see below).   while True:  print ('Lets add 5 and divide by 2. Give me a number:') number = int(input()) number = second(first(number)) print (number)   Coded a direct relationship between the function in line 3 above, where number is first put through first(n) then the result becomes ""n"" in the second function. ""number ="" then sets the new value for the variable ""number"" giving Python the correct value to print."
learnpython,3cjc84,Apiphilia,1 point,Wed Jul 8 11:21:28 2015 UTC,"So what you're encountering is the difference between ""global variables"" and ""local variables"". You globally define number as the user input. Let's pretend it was 5. This is a global variable because its outside a function.  Then you going into your first function where you locally define n as equal to number. This is a local assignment because its inside a function and it returns number + 5, but it doesn't change the global value of number. Here's an article on the difference between global and local variables.  So as you suspected, you're functions aren't changing the value of number. They are returning a new value but leaving number intact. When a function returns a value nothing really happens to it until you tell it to. Your comment on line 4 says you're using the returned value from first function, but you're actually inputting the original number again.   Run these lines to try and understand what is happening in your code.  number = 5 print(first(number) print(second(number))   first_number = 15 second_number = first(first_number) third_number = second(second_number) print(second_number) print(third_number)"
learnpython,3cjc84,Apiphilia,2,Wed Jul 8 11:23:19 2015 UTC,"Hey Apiphilia - thank you very much for a great and understandable reply!  I just ran the code and read through it a couple of times.  I will read the article now - cheers!  Having the 'number' function within the loop, I thought would make the variable local. When you write 'number = 5' and 'first_number = 15', are they global variables?  Also, merging the code you gave me with the loop worked flawlessly and gave me the correct answer. I am curious if the input() is now local or global.  while True:  print ('Lets add 5 and divide by 2. Give me a number:') number = int(input()) print(first(number)) print(second(number))   Again, I will read the article and maybe I can answer my own questions above."
learnpython,3cjc84,Justinsaccount,1 point,Wed Jul 8 11:46:52 2015 UTC,"Global variables are ones that are outside a function. So, yes, both 'number' and 'first_number' are global variables. The input is also global because you called it outside of a function. You have 'n' as local variables in both of your functions, but keep in mind they're not the same 'n'. They are different 'n's in each function.  Now your description says that you want to take a number add 5 and then divide by 2. Is that what the loop you posted in your comment is doing? Think about what each of your functions do and try it with some numbers you know the answer to.  Your code:  while True:     print ('Lets add 5 and divide by 2. Give me a number:')     number = int(input())     number = second(first(number))     print (number)"
learnpython,3cjvxm,lordfodi,3,Wed Jul 8 14:08:20 2015 UTC,"There are a number of ways to accomplish what you want. Some simple and others much more complex.  You can crop out one of the dots and save it as a test image. Then run an algorithm that will search your image for things that look like your test image. This may work well depending on how different one spot is from another. This is called template matching and I know Open CV can do it (in python) see this discussion which is somewhat similar to your problem - stack overflow discussion  Another way to do it would be to convert the image to greyscale - then the black pixels will be low valued and the bright blue spots (now greyish white) will be high valued. Then theres a few things you can try. Search your image for the maximum pixels. If all the spots are nearly identical then you should find a maximum inside each of the spots. Or you can create a threshold value for pixel value that registers as being a spot. Then use built in features from Numpy like numpy.where() to find pixels that are higher than your threshold.  You'll want to look up a few libraires to use - PIL (or Pillow) is the python image library. It lets you load images as arrays.  Numpy - makes dealing with arrays easier. I'd suggest loading the images with PIL and then converting them to numpy arrays  Sci-kit image has a lot of built in features for image filtering, image detection, etc  Open CV - a c/c++ framework for dealing with images, cameras, video, etc - There are python bindings for it and a lot of tutorials for using it to do image analysis. I'd bet that this library has what you need if you do some searching. It stands for Open Computer Vision. Computer Vision is the topic you're interested in - you want the computer to 'see' the blue spots and find them within a given image.  hope that helps get you started.  Sorry I can't provide any distinct example code.  edit: found the main link I had in my memory... http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_template_matching/py_template_matching.html"
learnpython,3cjvxm,thrwawyandburn,1 point,Wed Jul 8 15:36:00 2015 UTC,"Another way to do it would be to convert the image to greyscale - then the black pixels will be low valued and the bright blue spots (now greyish white) will be high valued.   This works of course if there are no other colored spots in the image, a red spot will be the same grey value as an equivalently bright blue spot, for example. Same with green, purple, orange, etc. It starts to get complicated when you try to decide ""what is blue and what is purple""."
learnpython,3cjvxm,cdcformatc,1 point,Thu Jul 9 17:38:02 2015 UTC,It wouldn't let me upload a picture but the images are black with a random array bright blue spots. Cheers!
learnpython,3cjvxm,The-Mathematician,1 point,Wed Jul 8 14:09:44 2015 UTC,Here is one approach with the skimage library.  Function here
learnpython,3cjvxm,cdcformatc,1 point,Wed Jul 8 15:35:19 2015 UTC,"I have done basically this exact thing. Use Pillow to load an image as a list and you can iterate over the pixels to find the spots. You can get the RGB value of the pixel and if it is past some threshold flag it as ""blue"". RGB for Black is 0,0,0 and ""blue"" will be 0,0,x where x will vary between 1 and 255. Depends on how blue you want your blue.   Now not all ""blue"" has zero red and green, it could be slightly purple or cyan, or both. The best way around this in my opinion is to average the RGB values and pick a brightness to differentiate between black and "" less black"". But now your algorithm will detect red and green, so you have to figure that out. I would do something like find which of the R,G,or B values is highest, and if B is higher than the others by a large amount, say 2x, then the pixel is sufficiently blue. None of this matters though if your image is just black with blue spots."
learnpython,3ckpeg,basyt,4,Wed Jul 8 17:44:20 2015 UTC,Check your parentheses on the previous line.
learnpython,3ckpeg,zahlman,2,Wed Jul 8 17:52:06 2015 UTC,missing closing parenthesis on the previous line.
learnpython,3ckpeg,novel_yet_trivial,0,Wed Jul 8 17:52:32 2015 UTC,sooo you're computing:  1-alpha: 3 times  C_o*(1-alpha): 2 times  and that's per loop  (1/(C_o*(1-alpha))) does not vary with element...  ((1-alpha)/(1-(C_o*(1-alpha)*v_ts_tick)) does not vary with element..  thing_1 = (1/(C_o*(.... thing_2 = (((1-alpha)/(1-(C_....  for element in q_a_tick:     temp = thing_1 * (element-thing_2)     print(temp)
learnpython,3cjai5,aristotle2600,1 point,Wed Jul 8 10:20:20 2015 UTC,"I don't quite understand your problem - let me restate it and let me know if I'm wrong. You have statistics like dexterity, and a list of Objects that can affect a character's dexterity, like a glove (+1) or a bow (+1). But the glove actually gives +2 if you use it with the bow. How should the glove object know that it's character also has the glove?  Interesting question. I'm not sure if there's a proper way to do this - this is just what I would do. I'd be interested in others answers.  I would make each Item object have a value function, that takes in a Character object and a list of Item objects (not including itself). The thing you have to make sure to do is not to change any of those objects that are passed in - just read. Then you can calculate if an item gets a bonus stat (also return the type of stat, like DEX, HP, ATK, etc).  Each Character should have a list of Item objects, and to calculate a character's stats just go through each item and call value. This solution feels kind of hacky because you have to pass in the Character even though the Character owns the item in the first place, but it should work fine.   Here's another idea, I like this one better: instead of storing value in item objects, store them in Statistic objects - these should be static and never really instantiated. These Statistic objects have a type (DEX, ATK, DEF) can have a static method that takes a Character and a list of adjustment/Item objects and returns what the final statistic is for that player, for that type. This way you can cleanly have objects offer more than one statistic/bonus. So Character objects have a list of Items, and a dictionary of a statistic name to the character's statistic value. To recalculate, go through all the Statistic classes and pass in the Character and the list of Items, update the dict accordingly. The reason I say make an entire class for each statistic is in case you want to store some extra info with each one later (players with the highest value?). Just as easily you could have made it one giant Statistics class with some enums and a bunch of methods for all the stats in one class.  Let us know what you end up going with!"
learnpython,3cjai5,deathofthevirgin,1 point,Wed Jul 8 10:31:01 2015 UTC,"Thanks for the answer; I'm already doing basically that.  There are a LOT more things than just (in-game) physical items that cause stats to change.  Stats have a value function too, which is just a loop that calls each item and adds them up.  But item values are determined by other stats in various ways (sometimes as simple as ""this item's value is equal to this other stat""; if you know D&D/Pathfinder, think of the attribute mod to a skill total as an item, which is dependent on a stat like strength).  To make that work in a robust way, though, each item needs access to every other stat."
learnpython,3cjai5,gengisteve,1 point,Wed Jul 8 10:47:31 2015 UTC,"I just read your edit, and if I'm following you correctly, that's almost exactly what I'm doing, except that I do instantiate stat objects.  You're proposing just have a list of items, and each item knows what stat it modifies.  To calculate a stat value, run through the whole list of items and add up the ones that refer to the stat I want.  Then just record the current values in a separate list.  If that's the case, I did consider that route, in which case I would probably wind up using a formal database of some kind.  I'm leaning away though, because there can be a LOT of items.  I don't want to be searching through a list like that, even if I have the current value recorded elsewhere."
learnpython,3cjai5,ripread,3,Wed Jul 8 10:55:13 2015 UTC,"Cross linking objects so that x is dependent on y, which itself is dependent on x, is frowned upon, and can create real headaches.  A better solution would be to figure out some way to create a top down effect pattern, so you call character.get_attribute('agility'), which checks all items to see if they effect agility, and then calls the appropriate effect to modify the stat.  Like this:  from collections import defaultdict  class Effect(object):     def __init__(self, what, how):         self.what = what         self.how = how      def apply(self, base):         return self.how(base)  class Item(object):     def __init__(self, name, effects = None):         self.name = name         if effects is None:             self.effects = []         else:             self.effects = effects      def apply_effects(self, attribute, value):         for effect in self.effects:             if effect.what != attribute:                 continue             value = effect.apply(value)         return value   class Character(object):     def __init__(self, name, **kwargs):         self.name = name         self.attributes = {k:v for k,v in kwargs.items()}         self.items = []      def get_attribute(self, attribute):         result = self.attributes[attribute]         for item in self.items:             result = item.apply_effects(attribute, result)          return result   pc = Character('smith', agility = 10, strength = 20)  glove = Item('glove of agility', [Effect('agility', lambda x:x+1)])  pc.items.append(glove) print(pc.get_attribute('strength')) print(pc.get_attribute('agility'))  pc.items = [] # reset inventory  glove = Item('glove of agility and strength', [         Effect('strength', lambda x:x+2),         Effect('agility', lambda x:x+1)])  pc.items.append(glove) print(pc.get_attribute('strength')) print(pc.get_attribute('agility'))   The above only applies item based effects, but you could instead modify the code to search through the entire environment.  The advantage of this approach is that it will reduce, but probably not eliminate in the long run, the cross-linking.  edit:  I understand your concern about search time where a character might have a lot of items and spells and environmental factors affecting them.  Some of this could be resolved by caching the get_attribute function, then clearing a part of the cache when you have some new effect enter the scene.  I would hold off on this optimization until needed though."
learnpython,3cjai5,gengisteve,1 point,Wed Jul 8 13:38:17 2015 UTC,"Thanks, I appreciate the time it must have taken to type that all out.  I didn't want to risk talking a lot about parts of my system that weren't going to be relevant, but I will now, to explain the full extent of what I want to do.  The big thing, though, is that I need to be able to have at my fingertips, everything that touches any stat at any time, and that stats affect other stats, which is why the crosslinking is really just necessary; it doesn't seem like an option to me.  The way I'm building it currently is that there are 3 types of objects inside a character: Adjustments, Effects, and Stats.  A Stat is exactly what it sounds like: one of the myriad statistics that makes up a character.  An Effect is a thing that happens to a character, like picking up an item or having a spell cast on them, or getting hit, or leveling up.  An Adjustment is a specific effect (note the lower case to distinguish from the Effect class) on a specific Stat.  But here's the thing; the actual numeric effect of an Adjustment can, and very often does, depend on the value of another Stat.  So when calculating the numeric value of a Stat, you have to calculate the values of all its Adjustments, many of which in turn depend on other Stats, or even the presence or absence of certain Effects.  As an example, in Pathfinder you can wear a headband of intelligence.  That would be an Effect, which creates an Adjustment that says ""+2 to Intelligence.""  It might also create Adjustments to things like encumbrance, slots, or appearance.  If you have previously added intelligence from leveling, the intelligence Stat will also have 1 or more +1 Adjustments.  Now you also have skills, some of which are based on intelligence.  Each of those skills is a Stat, with a permanent Adjustment that says ""+intelligence"".  So If I need to look at one of those skills, I need to know about the whole character, so when the program sees ""+intelligence,"" it knows how to get it.  So When the headband goes on, you actually have kinda a cascading effect, which I'm not sure exactly how I'm going to manage.  Headband creates an Effect on the Intelligence Stat, which alters the value of the Spellcraft Stat (and a whole bunch of others).  One thing I need to do is manage that cascading effect so I don't reevaluate the whole shhet every time a change is made, but only the parts that need it.  Another big point is to make it customizable by someone who doesn't do programming.  To that end, a user can define all the Stats and Effects in a game system.  I don't think this is relevant to the question at hand, but everything ultimately reduces to reading a text file (and don't worry, I'm not executing code that a user writes) and converting that text file to a collection of the aforementioned objects.  Another really big thing I want to do is to allow a player instant access to all the Effects that affect a certain Stat.  Where and how to store Adjustments (the Stats that they affect, or the Effects that created them?) is a design decision that I'm currently puzzling over, and my solution to how to get access to the rest of the character will probably that decision :)  But I'm more or less doing it the way your code is designed, at least I think so."
learnpython,3ch91i,aether_illusion,17,Tue Jul 7 22:06:18 2015 UTC,"It's great that you all are getting started with programming!  For a text editor, I would recommend sublime text as it has little learning curve and is available for both Windows and Mac.    Python actually comes installed by default on Mac—but you need to know the basics of how to use the terminal to use it. These seem like good tutorials:  http://mac.appstorm.net/how-to/utilities-how-to/how-to-use-terminal-the-basics/  http://computers.tutsplus.com/tutorials/navigating-the-terminal-a-gentle-introduction--mac-3855  Really all you need to know is how to move around the filesystem, using  ""ls"" and ""cd"". Once you have learned that, and have navigated in the terminal to where you saved your python script in sublime text, to run a python program, all you have to do is is type ""python <name of program>"" into the terminal."
learnpython,3ch91i,anonymousperson28,1 point,Tue Jul 7 22:21:43 2015 UTC,"We actually downloaded sublime text yesterday, and it looks pretty cool. However, I noticed that it does seem to ""assist"" you, in a way. For example, typing a single "" will automatically produce a """". Not that that is the end of the world if that is the only difference, but it's something I noticed right away.  With sublime, I noticed that there is no ""Run"" button to run the script, at least not that I saw. Is there something additional that we would need to download or activate in order to work with Python in sublime text?"
learnpython,3ch91i,anonymousperson28,7,Tue Jul 7 22:28:54 2015 UTC,"The features you are looking for only exist in IDE's like Pycharm – if a basic text editor had those features it would no longer be a basic text editor :P.   As for making python ""work"", you would have to use the terminal to run your script."
learnpython,3ch91i,C0rinthian,5,Tue Jul 7 22:49:32 2015 UTC,"You can pretty much turn Sublime into an IDE with plugins. Code completion, syntax highlighting, linters, etc.   It's awesome."
learnpython,3ch91i,pnobel,3,Wed Jul 8 00:36:37 2015 UTC,"This may be a silly question, but do you like the fact that when you type in a quotation mark it automatically puts you in the middle of a set of quotes? I personally find it a bit annoying. I can close my own quote!"
learnpython,3ch91i,C0rinthian,2,Wed Jul 8 00:40:09 2015 UTC,"We can all close our on quotes, but if I don't have to close my own quotes, then great. It's much more useful when you're dealing with braces, which Python doesn't have."
learnpython,3ch91i,Davorian,1 point,Wed Jul 8 00:54:09 2015 UTC,Good to know - thank you.
learnpython,3ch91i,anonymousperson28,2,Wed Jul 8 01:28:58 2015 UTC,"Took a bit to get used to. But code completion is awesome when you no longer need the practice of typing everything out. Autoindent is amazing too. Esp in a language like Python where that matters.   Like working with HTML or XML, where it automatically creates the closing tag and puts your cursor in between. Cuts down on mistakes, and saves time.   And with the quote thing, ignore it. Type whatever, type your closing quote. It'll figure it out and not duplicate, so it doesn't get in the way."
learnpython,3ch91i,randommouse,2,Wed Jul 8 01:24:10 2015 UTC,"Ha, wow. I didn't even realize if you type to quote it won't duplicate it."
learnpython,3ch91i,teerre,2,Wed Jul 8 01:29:43 2015 UTC,"You are not alone.  I am a programmer of 20+ years of experience and I still occasionally find that feature annoying.  It's best when it comes with both a ""typeover"" feature (when you try to close the quote it just moves the cursor over the existing quote instead of adding another quote) and a ""terminate line"" shortcut that closes all your remaining brackets and quotes and adds a line break (and a semicolon for languages where this matters).  There is usually an option to turn it off somewhere, although I've never used IDLE or Sublime much so I can't help you here specifically :("
learnpython,3ch91i,teerre,1 point,Wed Jul 8 03:13:19 2015 UTC,Glad to know I'm not the only one!
learnpython,3ch91i,colecf,3,Wed Jul 8 03:16:17 2015 UTC,I think I'm using incorrect terminology. Maybe it's easier to show an image. I just want to have this basic setup on a Mac like I do on the PC.  http://www.w3resource.com/python/images/python-idle-new-window.png
learnpython,3ch91i,smellsmoist,7,Tue Jul 7 23:04:04 2015 UTC,"Ah that's IDLE. To use it, open the terminal and simply type ""idle"". It should pop up, as it is installed by default."
learnpython,3ch91i,hharison,1 point,Tue Jul 7 23:17:00 2015 UTC,"Okay, will try this out later. That's really all we need to follow along with the tutorial at this point.  Thank you very much."
learnpython,3ch91i,timworx,2,Tue Jul 7 23:22:58 2015 UTC,Then use an actual text Editor. If you don't like any of the extra stuff like auto completion and syntax highlighting then use the apple equivalent of text pad.
learnpython,3ch91i,timworx,5,Wed Jul 8 13:28:58 2015 UTC,"What /u/anonymousperson28 said isn't exactly true, Sublime can certainly execute most scripts  After choosing your build, the default shorcut is CMD+B (I think).  There's also SublimeREPL"
learnpython,3ch91i,Mittalmailbox,2,Tue Jul 7 23:27:02 2015 UTC,"Okay, that is interesting. I write the code in Sublime, choose the appropriate build, and then it will run the code."
learnpython,3ch91i,tk421whyarentyouatyo,2,Tue Jul 7 23:40:06 2015 UTC,"You only need to choose the build once, unless you keep coding in different languages   If you mostly uses python you can just open it, write a function, press the shortcut and it will be executed"
learnpython,3ch91i,pfunkmort,3,Tue Jul 7 23:42:50 2015 UTC,"Great, thank you."
learnpython,3ch91i,hw_t_dstr_ngls,2,Wed Jul 8 00:30:27 2015 UTC,"Running stuff in sublime isn't the way you would normally run python. Since it sounds like you're looking for the most bare-bones setup possible, normally you would write your stuff in a text editor like sublime, then run it from the terminal. It's easiest to do this if you save your code to your home directory. Then just open the terminal and type ""python myprogram.py"" and it'll run. If you do it this way you can use whatever text editor you want, even textedit if you use format > make plain text from a new document."
learnpython,3ch91i,hw_t_dstr_ngls,2,Wed Jul 8 04:30:54 2015 UTC,Got it. Thanks for explaining that.
learnpython,3ch91i,pfunkmort,2,Wed Jul 8 04:37:12 2015 UTC,"No, in sublime Text it's just called ""build"""
learnpython,3ch91i,Marimoh,1 point,Tue Jul 7 22:36:13 2015 UTC,"Okay, thank you. Will give this a shot."
learnpython,3ch91i,Davorian,2,Tue Jul 7 22:38:00 2015 UTC,"We actually downloaded sublime text yesterday, and it looks pretty cool. However, I noticed that it does seem to ""assist"" you, in a way. For example, typing a single "" will automatically produce a """". Not that that is the end of the world if that is the only difference, but it's something I noticed right away.   You can turn this off if you want. In fact there are a ton of settings. Go to preferences > settings > default which has descriptions of all the options as comments. Then go to preferences > settings > user and set your own values. I think you want to add ""auto_match_enabled"": false. However I will say that I found it annoying at first but soon got used to it, and now really like it."
learnpython,3ch91i,danielhoherd,1 point,Wed Jul 8 03:25:41 2015 UTC,Awesome. I will see about turning this off for the time-being. Thank you.
learnpython,3ch91i,qudat,2,Wed Jul 8 03:29:55 2015 UTC,"Textwrangler is what I started on. It's just a simple general purpose code editor. Since it's just a normal program there really is no fuss installing it.  You do indeed have a ""Run"" button up top. Which is quite convenient.  For a super simple no frills way to get started, I highly recommend it.   Also, once a file is saved as a python (.py) file it will have the syntax highlighting in place, which IMO is among the only really important things for a brand spanking new programmer to have.   I've switched to vim in the past month, and it's great for efficiency. But you don't need efficiency, what you need is to not worry about how to interact with the tools around you while you're trying to learn programming for the first time ever."
learnpython,3ch91i,ChristianGeek,1 point,Wed Jul 8 04:11:41 2015 UTC,"Hi, just so I'm understanding, Textwrangler maybe gives you a little color highlighting and will run the Python code at the click of a button?   Once you install Textwrangler, you do still need to install Python 3 though, right?"
learnpython,3ch91i,JimBoonie69,2,Wed Jul 8 04:39:48 2015 UTC,"Yup, it's a good general purpose code editor.   Line numbering, autoexpanding of tabs to spaces (just a setting to select), code highlighting, syntax checking, ability to run (and debug) code. It has everything you really need, and in a format that is intuitive, which is particularly useful to someone brand new to programming.   Python 3 is separate from any code editor you use, so yes, you'll have to install it.   If you haven't already, install homebrew and use that for adding things like Python 3. It makes sure things are handled properly."
learnpython,3ch91i,NoLemurs,2,Wed Jul 8 14:19:50 2015 UTC,"There is a Tools ->build button(F7) in sublime, you can create your own build system also check http://docs.sublimetext.info/en/latest/reference/build_systems/basics.html"
learnpython,3ch91i,E-UTRANquility,2,Wed Jul 8 07:25:42 2015 UTC,notepad++  has plugins to run scripts from the editor itself.  edit: npp apparently is not for osx. huh.
learnpython,3ch91i,E-UTRANquility,3,Wed Jul 8 08:38:02 2015 UTC,"I'm taking a python course irl and I have a pc and my teacher has a mac. Pretty sure when you download python from the python site, it comes with IDLE installed, even on mac. That's a pretty basic program.  The latest version of python 3 is a signed installer, so it should install without a hitch on OSX."
learnpython,3ch91i,ordnance1987,1 point,Tue Jul 7 23:18:28 2015 UTC,"Okay, my wife seemed to think she would have to use the terminal, but I'll try to convince her that it's not necessary :)  Thank you!"
learnpython,3ch91i,E-UTRANquility,5,Tue Jul 7 23:22:00 2015 UTC,"Using terminal is not such a bad thing though. Personally, I use Sublime Text to write code and terminal to run it.  You could also try Vim, which comes pre-installed on OS X (type ""vim"" in a terminal window), but it does have a learning curve."
learnpython,3ch91i,_iama_person_ama_,2,Tue Jul 7 23:33:59 2015 UTC,"Okay, so when you write the code in sublime text there is no way to run it there. You need to go into terminal to run the code."
learnpython,3ch91i,Marimoh,2,Tue Jul 7 23:38:49 2015 UTC,"You can run some simpler code in Sublime by pressing ⌘+B (build), but it has a limitation that it can't take user input. It does work just fine for simpler code that doesn't require user input though.  You can always have a terminal window open and quickly swap between sublime text and terminal (⌘+tab) to run your code.  Also, learn some simple bash (terminal) commands and shortcuts:   ls to see contents of the current directory. cd to change directory (you can also type cd and then hold and drag a finder window title to the terminal to quickly get to a folder). cd .. moves one folder up in the file system. To run a Python-script, simply navigate to the folder in which it is located, then type python <name_of_your_script.py>. To stop execution of the script, press 'ctrl + c'.  To execute the previous command, simply press the 'up' arrow and then hit return. Use tab for auto-complete. Works when both using cd and running python scripts.   For example, if you're in a folder with 3 files: main.py, helper.py, other.py, and want to run main.py, you can simply type python m, then hit 'tab' to auto-complete to python main.py then hit return to run it."
learnpython,3ch91i,hw_t_dstr_ngls,1 point,Wed Jul 8 00:19:15 2015 UTC,Thank you for the explanation.
learnpython,3ch91i,keturn,2,Wed Jul 8 00:31:35 2015 UTC,"Sure, sure. Any other questions about IDLE (I'm a novice myself, but I've been using it ad nauseum) feel free to toss me a PM."
learnpython,3ch91i,keturn,1 point,Tue Jul 7 23:36:36 2015 UTC,"I really appreciate that. We are very eager to learn, and I've been frustrated by the difficulties in getting started."
learnpython,3ch91i,vacuu,1 point,Tue Jul 7 23:39:27 2015 UTC,"Don't use IDLE. It is old and crufty. If you want a simple, basic, free IDE check out Wing 101 instead."
learnpython,3ch91i,vacuu,1 point,Wed Jul 8 00:14:36 2015 UTC,"I have a question about Wing 101.  For example, the problem we ran into with Pycharm was that for the following command:  print (""The answer to 10+10 is"" , 10+10)  would produce  'The answer to 10+10 is' 20  However, using IDLE, the correct output is  The answer to 10+10 is 20.  This seems to be because Pycharm treats () differently. Maybe there is some other reason. I just want an IDE on Mac that is basically the same thing as IDLE. Does Wing 101 work like IDLE in this instance or like Pycharm?"
learnpython,3ch91i,Blu_T,2,Wed Jul 8 00:38:29 2015 UTC,"Does the difference look anything like this:  davorian@localhost:~$ python Python 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2] on linux2 Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> print (""The answer to 10+10 is"", 10+10) ('The answer to 10+10 is', 20) >>> davorian@localhost:~$ python3 Python 3.4.0 (default, Jun 19 2015, 14:20:21) [GCC 4.8.2] on linux Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> print (""The answer to 10+10 is"", 10+10) The answer to 10+10 is 20 >>>   This is the difference between using Python 2 and Python 3, which treat print differently.  The fact that both are still around is a historical artefact that confuses a lot of people.  One Day we are moving to Python 3 exclusively, but we aren't there yet.  EDIT: I see this has been addressed below.  Good luck."
learnpython,3ch91i,Blu_T,1 point,Wed Jul 8 03:24:10 2015 UTC,"Yes, you're correct. Now I just need to get Python 3 working."
learnpython,3ch91i,Blu_T,3,Wed Jul 8 03:30:30 2015 UTC,"I've been a fan of https://atom.io/ for about a year, it works good as a lightweight text editor, and it runs on all platforms.  I use it on OS X along with Pycharm, and I mainly use it for those times like you described where Pycharm is too overbearing."
learnpython,3ch91i,thuvh,1 point,Wed Jul 8 00:53:42 2015 UTC,Thanks for the suggestion.
learnpython,3cjzzv,Micotu,4,Wed Jul 8 14:41:00 2015 UTC,"I can't fault you too much for this since it really seems like you did well except that you didn't realize what tools were available to you. Here is string's replace method that will make this problems a lot easier.  Here's a couple examples:  >>> 'Example--of replacement'.replace('-', ' ') 'Example  of replacement' >>> 'This is a string'.replace('is', 'the') 'Ththe the a string' >>> 'This is a string'.replace(' is', ' the') 'This the a string'   This tool is actually used in the python official libraries for almost this exact purpose, in the namedtuple function. I'll edit with that example in a sec.  EDIT: from namedtuple:      field_names = field_names.replace(',', ' ').split()"
learnpython,3cjzzv,The-Mathematician,1 point,Wed Jul 8 14:51:04 2015 UTC,"Ok, that helps.  I don't think .replace() had been taught yet.  I guess I was trying to avoid specifically changing my function to look for ""--"" as I felt this was an odd case to specify for.  I was also assuming by the way the question was set up, that it wanted me to use my clean_word() function that I had just defined, which if I used replace() would cause the words used on that function to have extra spaces.    Edit:  and looking at the question. I think it was wanting me to specifically look for double dashes with the has_dashdash function, but I felt this was a little odd to have to search for that specific combination.  .replace would have definitely made it a lot easier thought if I looked for an replaced ""--"" specifically at the beginning of the function"
learnpython,3cjzzv,The-Mathematician,2,Wed Jul 8 14:59:21 2015 UTC,"Add the optional parameter replace_with to your clean_word function, to have that function kill two birds with one stone."
learnpython,3ch6it,Thumbblaster,17,Tue Jul 7 21:47:54 2015 UTC,"https://pip.pypa.io/en/latest/user_guide.html#requirements-files  Alternatively, if it's a library or binary intended to be just used instead of actively developed on, https://packaging.python.org/en/latest/index.html"
learnpython,3ch6it,raylu,2,Tue Jul 7 21:53:00 2015 UTC,Thank you.  This is perfect.
learnpython,3ch6it,aqua_scummm,4,Tue Jul 7 21:55:49 2015 UTC,"In my humble opinion, ALL your python projects should have their own virtualenv.  Install virtualenvwrapper, read the docs, and from now on, have your initial workflow be:  mkvirtualenv newpythonproject workon newpythonproject [if not already activated] git init pip install [requirements] pip freeze > requirements.txt [add git repo to your github acct, commit, sync/push]   Virtualenvwrapper will put your virtualenvs somewhere else so they don't unnecessarily clutter your git repos.  Virtualenv itself will ensure one project changing which version of a package installed doesn't affect other projects using the same package/module  requirements.txt will inform anyone getting your repo of what they need, and allow them to install it with a single command."
learnpython,3ch6it,phinar,3,Wed Jul 8 01:04:04 2015 UTC,/u/raylu's answer is great: use a requirements.txt file.  Also note that the README.md file you drop in the root directory will be displayed to anyone who visits your project's page on Github. Put build/install instructions in that file; that's where experienced hackers will expect to look.
learnpython,3ch6it,amfarrell,1 point,Wed Jul 8 05:14:44 2015 UTC,Thanks.  I will add the README.md file as well.
learnpython,3cjuoh,Verbais,1 point,Wed Jul 8 13:57:40 2015 UTC,"Here is the corrected version of the code:  from Tkinter import *  root = Tk()  canvas = Canvas(root, width=100, height=100) canvas.pack()  box = canvas.create_rectangle(0, 0, 100, 100, fill=""purple"") boxPresent=1  def whenbuttonclicked():     if boxPresent==1:         deletebox()     else:         redrawbox()  def deletebox():     global boxPresent # ADDED     canvas.delete(box)     boxPresent=0  def redrawbox():     global boxPresent, box # ADDED     box = canvas.create_rectangle(0, 0, 100, 100, fill=""purple"")     boxPresent=1  button = Button(text=""CLICK"", command=whenbuttonclicked) button.pack(anchor=S)  root.mainloop()   What you're stumbling on is something which is somewhat unique to Python, and it can trip up beginners and programmers from other languages alike. I'll try my best to give you an detailed explanation.  When Python sees something like the following:  b = 0 def a():     b = 42   There are two b variables, not one like you (and many others, to be fair) would expect. Python has the following rules about how it decides what particular variable a name like b refers to:   Check and see if the name b is assigned in the current scope. If it is, then it is local to the current scope. Check and see if the name b is assigned in a function outside of this one; if it is, then b is from that outer function's scope. If b can't be resolved via the two methods above, then b is a global variable.   In the case of your above program, you're getting bitten because Python applies rule #1 in these functions:  def deletebox():     canvas.delete(box)     boxPresent=0  def redrawbox():     box = canvas.create_rectangle(0, 0, 100, 100, fill=""purple"")     boxPresent=1   You can use those rules above to reason about why the boxPresent in each of these functions is different from the global scope (and why box isn't the same as the global box in redrawbox()). Rule #1 really is the key.  There's a way around this, though - a sort of ""rule #0"" which applies before any of the other rules - and that is the global keyword. As you might expect, it forces Python to consider the variables listed after it as global. The reason that the following works:  def deletebox():     global boxPresent # ADDED     canvas.delete(box)     boxPresent=0  def redrawbox():     global boxPresent, box # ADDED     box = canvas.create_rectangle(0, 0, 100, 100, fill=""purple"")     boxPresent=1   is because global overrides rule #1.  One other thing:   I thought I had identified why it happens. I figured it was because the  program was sitting at the end of the deletebox() function indefinitely.   The truth is a bit more complicated than that. What happens is that in the core of Tkinter (or really, in the core of Tcl, the language which Python embeds to get Tkinter) is a structure called an event loop - as you might suspect, it sits there, waiting for events, and doing different things as each event comes in.  What happens when your callback returns (and it does return, the program doesn't just sit there) is that it returns to the event loop, letting the event loop handle future events."
learnpython,3cjuoh,adamnew123456,1 point,Wed Jul 8 14:44:47 2015 UTC,"Thanks so much for your answer! You described it in a way that was easy to understand, so that I get why it works, and not just that it does work.  To your last point, this event loop. Where does it run within the code? I ask because, in troubleshooting this issue, I placed an extra line of code right above the root.mainloop() line which just printed 'END', to see if the program was running the function, and then running to the end of the code again. It did not; 'END' only printed on program startup. So, the event loop, it does not reach to the end of the code?"
learnpython,3cjuoh,adamnew123456,1 point,Wed Jul 8 16:02:09 2015 UTC,"To your last point, this event loop. Where does it run within the code? I ask because, in troubleshooting this issue, I placed an extra line of code right above the root.mainloop() line which just printed 'END', to see if the program was running the function, and then running to the end of the code again. It did not; 'END' only printed on program startup. So, the event loop, it does not reach to the end of the code?   The mainloop is invoked when you call the function root.mainloop() - it doesn't do any tricky behaviour like re-running parts of the file, it's just another function call. You can test this by doing something like this:  print 'Start' root.mainloop() print 'End'   As long as you don't cause the program to exit while the event loop is running, it returns to the point at which you started the event loop."
learnpython,3cil93,PDFormat_SFW,6,Wed Jul 8 04:50:58 2015 UTC,"You forgot to pass the argument self in the definition.  It should be this: def insert(self, item, index):"
learnpython,3cil93,Mekire,2,Wed Jul 8 05:02:07 2015 UTC,"Thank you! I've done most of my object-oriented work in Java, so when and where to use Self hasn't been burned into my brain yet."
learnpython,3cil93,Mekire,6,Wed Jul 8 05:20:05 2015 UTC,"Yeah.  When you call a method via: my_class_instance.method(arg1, arg2) What you are actually doing is: MyClass.method(my_class_instance, arg1, arg2) No one does the latter of course, but it is analogous. The instance is the first argument passed to the method."
learnpython,3cjrsr,Northstat,1 point,Wed Jul 8 13:32:15 2015 UTC,"If you have the indices, you have a mask.  They're the same thing."
learnpython,3cjrsr,elbiot,1 point,Wed Jul 8 14:05:50 2015 UTC,"I guess I don't know how to use it then. I want to set the values where these indices are to 0.  G[ test ] = 0   this sets all values in G to 0.  My indices are of the form [[3,1], [1,3], [2,0]....]"
learnpython,3cjrsr,elbiot,1 point,Wed Jul 8 15:25:46 2015 UTC,"In [3]: import numpy as np  In [4]: arr = np.ones((10,10))  In [5]: arr[4:6,2:5] = np.nan  In [6]: idx = np.where(np.isnan(arr))  In [7]: idx Out[7]: (array([4, 4, 4, 5, 5, 5]), array([2, 3, 4, 2, 3, 4]))  In [8]: arr[idx] = 0  In [9]: arr[4,3] Out[9]: 0.0  In [10]: your_idx = zip(*idx)  In [11]: your_idx Out[11]: [(4, 2), (4, 3), (4, 4), (5, 2), (5, 3), (5, 4)]  In [12]: rezipped_idx = zip(*your_idx)  In [15]: arr[rezipped_idx] Out[15]: array([ 0.,  0.,  0.,  0.,  0.,  0.])   A mask is an array of bools the same shape (or something broadcastable to the shape of) your array.  Under the hood, numpy uses where to turn that into a tuple of indices anyway.  So they are equivilant and can be used to construct each other."
learnpython,3cjjmy,OptioMkIX,2,Wed Jul 8 12:12:55 2015 UTC,"no idea what it's about but i noticed that one of these lines is unlike the others          nslope= neg_slope_array[:,j]         pslope= pos_slope_array[:,j]          theta_a = theta[:,i]         theta_b = theta[:i+1]    <---          mu_a = mu[:,i]         mu_b = mu[:,i+1]"
learnpython,3cjjmy,Vaphell,2,Wed Jul 8 12:57:23 2015 UTC,Oh holy hell thats embarrassing. I have Spyder displaying it on a tiny size so it can still display the longest calculations in half my screen size - sure as hell not doing that again!  I'll keep this post up as a reminder of my shame.
learnpython,3chnx6,steelcowboy1,2,Wed Jul 8 00:00:42 2015 UTC,"That seems like a bug.  What OS are you on?  This answer implies that clrtoeol does something, but that adding spaces is a more robust solution.  http://stackoverflow.com/questions/8001299/re-writing-a-line-using-python-curses  If no one else clarifies, maybe you should report this."
learnpython,3chnx6,elbiot,1 point,Wed Jul 8 04:08:13 2015 UTC,I agree that it sounds like a bug. I am on Arch Linux
learnpython,3chnx6,raylu,1 point,Wed Jul 8 04:32:30 2015 UTC,Replace it with spaces.
learnpython,3cgx5m,Northstat,3,Tue Jul 7 20:41:32 2015 UTC,"Try to convert it to an integer, and see whether it fails.  try:     int(...) except ValueError:     non_integer_emails.append(...)"
learnpython,3cgx5m,kalgynirae,2,Tue Jul 7 20:48:11 2015 UTC,"Yeah this works. Is it possible to use a lambda expression? I tried the following but it returned all false.  df['email_local'].map(lambda x: isinstance(x,int))"
learnpython,3cgx5m,blahdom,3,Tue Jul 7 21:00:41 2015 UTC,If the values are in a string - you can do all(x.isdigit() for x in s) This will return true if all the characters in a string are digits and false otherwise.  Edit: you could then use df['email_local'].map(lambda s: all(x.isdigit() for x in s))
learnpython,3cgx5m,kalgynirae,1 point,Tue Jul 7 21:04:05 2015 UTC,"Nice, thanks everyone!"
learnpython,3cgx5m,hharison,3,Tue Jul 7 21:12:29 2015 UTC,Unfortunately you can't use try/except in a lambda. But it's not hard to just use a normal function:  def is_int(s):     try:         int(s)     except ValueError:         return False     return True   and then  df['email_local'].map(is_int)
learnpython,3chmen,pythonhelp123,2,Tue Jul 7 23:48:10 2015 UTC,"The best way to approach this is to iterate through the input list, check if each element is even, and print it out if it is even.    Also theres a mistake in your type annotations; print_even numbers doesn't return anything, so it should by typed like  def print_even_numbers(numbers: lst) -> None"
learnpython,3chmen,anonymousperson28,2,Wed Jul 8 00:12:04 2015 UTC,"Your function doesn't do anything with numbers, does that look right?"
learnpython,3chmen,an_actual_human,1 point,Wed Jul 8 02:01:31 2015 UTC,"how to make list as a function.   I don't understand what you expect that to mean. The assignment says   Implement [a] function... that takes a list... as input and... [does something]   So that's what you're going to do.   Am I supposed to make a list of numbers beforehand   For testing purposes, sure.   and then make something like    Here's a hint: numbers is the name you gave to the list that was passed in as input. If you want to ""print each even number in the list"", you're going to have to look at the numbers in the list - not the ones in some unrelated range."
learnpython,3cgwc2,MaxwellSalmon,3,Tue Jul 7 20:35:48 2015 UTC,Create a list of obstacle objects.
learnpython,3cgwc2,raylu,1 point,Tue Jul 7 20:55:01 2015 UTC,So I can recycle them once they passed the player? Clever!
learnpython,3ciu35,TheHumane,2,Wed Jul 8 06:30:20 2015 UTC,"You should use magic numbers and not file extension. People will mess file extension up. If you don't want to mess your code with magic numbers recognition, and rightfully so, use a library. This is the first thing I came up with, but I never used it."
learnpython,3ciu35,yotama9,1 point,Wed Jul 8 10:26:51 2015 UTC,Magic number (programming):       See https://en.wikipedia.org/w/api.php for API usage     Relevant: Magic constant | Magic (programming) | Syncword   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me
learnpython,3ciu35,autowikibot,1 point,Wed Jul 8 10:27:40 2015 UTC,Thanks. I will try this.
learnpython,3ciu35,raylu,1 point,Thu Jul 9 03:05:50 2015 UTC,"The approach seems fine.  ext = os.path.splitext(myfile)[1] gzipped = (ext == '.gz') if gzipped:     infile = gzip.open(myfile, 'r') else:     infile = open(myfile, 'r')"
learnpython,3chjv7,NitroXSC,6,Tue Jul 7 23:27:30 2015 UTC,"You aren't overwriting anything.  a = 1 means the name a should now refer to the object 1.  Whatever it referred to previously continues to exist.  Variables in Python are like nametags; they give a human readable way of referring to an object.  But objects can exist regardless of whether they have names or not.   But if old variables are not overwritten (or removed) then you would get memory problems.    An object's lifetime ends when there are no more references to it.  The list object in your example continues to live after a = 1 because the generator object holds a reference to it.  When the generator object's life ends, the life of the list object will end too, unless a reference to it has escaped and been stored elsewhere."
learnpython,3chjv7,Rhomboid,1 point,Tue Jul 7 23:41:00 2015 UTC,Thanks for the nice and clear explanation.
learnpython,3chjv7,zahlman,1 point,Tue Jul 7 23:54:36 2015 UTC,"a[1] = 5   a is a name for the same list object that b is iterating over, so this modifies the list that b iterates over.  a = 1   a stops being a name for that list, and starts being a name for 1 instead. This has no effect on the list."
learnpython,3cht5z,olyko20,4,Wed Jul 8 00:42:37 2015 UTC,"Are there actual quotes in the file path, around Chapter 08?  If not, remove them.  Relative paths (based around ..) can be tricky if you're running a script in a directory different than it resides in.  Can you share the error you're getting?"
learnpython,3cht5z,aqua_scummm,2,Wed Jul 8 00:56:22 2015 UTC,"Ok I'll try that out.. I'm using to doing that in terminal due to the directory having a space in the name.  The error was ""FileNotFoundError: [Errno 2] No such file or directory: '../gaddis_python2_sourcecode/""Chapter 08""/charge_accounts.txt'""  Edit: Just tried it without the quotes and it works fine! For some reason, I thought the space in the file would mess it up. Thanks!"
learnpython,3cht5z,aqua_scummm,6,Wed Jul 8 02:25:05 2015 UTC,"Because it's within the single quotes, python handles it fine.  In other scripting languages you might need to deal with it, usually by backslash escaping it, so it would look like Chapter\ 08.  This should also work in the terminal, and saves you a keystroke :-)"
learnpython,3cht5z,aqua_scummm,1 point,Wed Jul 8 02:40:30 2015 UTC,"Interesting, that's very useful. I wasn't aware that you could escape spaces like that. Thanks again!  Edit: no apostrophe"
learnpython,3cht5z,Rhomboid,1 point,Wed Jul 8 05:15:15 2015 UTC,"Yes, it's a general concept you'll come across a lot.  It generally means ""wait computer, don't do what you normally do when you see this character (such as separate a directory path into two separate arguments because there's a space there).  If you had to deal with quotes, you would escape them (so it doesn't close out the string, like if it really was ""Chapter 08"" and you were using double quotes for your string in python, it would be \""Chapter 08\"".  This would tell python ""wait, I know I started with a double quote, and this is a double quote, but don't close the string, just accept it""  It's also why you need two \'s in reddit comments to get one, reddit uses markdown, which thinks a single slash is going to escape something, so you have to escape the escape character to tell markdown ""this second slash isn't escaping anything"".  Other escape sequences: \n is a newline (can be used in print functions), \a is ascii alert (computer chime, haven't used that since computer science 1 class but should work in a python print statement), \t is tab..."
learnpython,3ciing,rgbtap4android,1 point,Wed Jul 8 04:23:59 2015 UTC,"Depends on what you want to do. Logic and discrete math are the core of programming, so they will take you a long way. The series for estimating the square root is generally taught as such - you either know it or you don't. I can't follow that link, but presumably it's just a useful algorithm for demonstrating a technique - the calculus won't be integral (as it were ...) to the exercise.   There are specialty areas that require hardcore maths. But unless you're writing the underlying libraries for AI, or machine vision, or game physics, or robot kinematics, you should still be able to get a fair way standing on the shoulders of those who wrote the libraries.   Edit: If, for example, the square root example says ""write a program to show that using 5 terms is closer than just 3. Choose a particular close approximation and write a program to reach that value and tell you how many terms it needed. Do this both iteratively and recursively"", then you could develop the same technique by showing that the ratio of two adjacent numbers in the Fibonnaci sequence approximate the ""Golden Ratio"", and that the approximation is closer as the sequence increases, and you can pick a certain number of decimal places and go through the sequence until the ratio is close enough."
learnpython,3ciing,tyggerjai,1 point,Wed Jul 8 04:39:07 2015 UTC,I sympathize with the challenge. I have dyscalculia and math-related assignments can be a struggle.  I do seem to get by knowing algebra while coding Python.
learnpython,3ciing,revoltingcasual,1 point,Wed Jul 8 05:23:11 2015 UTC,Here is the problem for those that can't see it easily:
learnpython,3ciing,The-Mathematician,1 point,Wed Jul 8 05:45:06 2015 UTC,"See, you say that...."
learnpython,3ciing,tyggerjai,1 point,Wed Jul 8 06:39:48 2015 UTC,"Oh, I didn't even mean to post this since I was having trouble getting the problem reset.  def sqApprox(num):     i = 0     minsq =                        # set lower bound     maxsq =                       # set upper bound     while i :                       # set 'while' termination condition           if i*i<=num and i minsq:  # complete inequality condition                minsq = i           if i*i>=num and imaxsq:  # complete inequality condition              maxsq = i           i                         # update i so that 'while' will terminate     return (minsq, maxsq)    The goal is to fill it out so that:   Create a function that takes in a positive number and return 2 integers such that the number is between the squares of the 2 integers. It returns the same integer twice if the number is a square of an integer.   Examples    >>> sqApprox(2)   (1, 2)   >>> sqApprox(4)   (2, 2)   >>> sqApprox(5.1)   (2, 3)"
learnpython,3ciing,The-Mathematician,1 point,Wed Jul 8 14:40:32 2015 UTC,"That link asks for a login, can you post a screenshot please"
learnpython,3ciing,__baxx__,1 point,Wed Jul 8 10:44:38 2015 UTC,"It's why I hate the likes of Euler, I can go months and months without ever requiring the A-level maths (done between 16-18 years old) I've got.  I don't think they test programming aptitude particularly effectively.  You need to understand logic, but most of the time a deep understanding of calculus isn't going to help you build an interface with a database or help you understand how to turn a set of business rules and data into a coherent testable system."
learnpython,3ciing,CraigTorso,1 point,Wed Jul 8 12:56:48 2015 UTC,Thanks for all the replies.  I am just going to skip the calculus related challenges and move on.
learnpython,3cfg6s,sepehrhm,3,Tue Jul 7 14:28:34 2015 UTC,"mat = self    This doesn't copy anything. Assignment never copies anything in Python! (If you're confused about this, Ned Batchelder has a really good video explaining this.)  It would make a lot more sense to make a copy, transpose the copy, and return it. That way you don't modify the original object at all.  The typical ways to make copies are to (a) let the constructor do it (but this is a pain if you wanted your constructor to take more than one argument), or (b) implement a __copy__ method so that the copy module can copy your object."
learnpython,3cfg6s,kalgynirae,1 point,Tue Jul 7 15:47:23 2015 UTC,Oh that actually is what I had initially in mind! Thanks!
learnpython,3cfg6s,xiongchiamiov,3,Tue Jul 7 17:41:08 2015 UTC,"Here's another option: do it the opposite way. That is, have all the logic in get_transpose() and the other one just calls it and saves the result as an instance variable."
learnpython,3cfg6s,ripread,2,Tue Jul 7 16:17:43 2015 UTC,"I think the more pythonic way to do this would be  def get_transpose(self):     transposed = self.copy()     transposed.n, transposed.m = transposed.m, transposed.n     transposed.cols = [list(tuple_item) for tuple_item in zip(*self.cols)]     return transposed  def transpose(self):     self = self.get_transposed()"
learnpython,3cfg6s,DJKool14,1 point,Wed Jul 8 13:31:24 2015 UTC,Thanks!  I learned about the copy method yesterday and it was exactly what I had in mind!
learnpython,3cfg6s,DJKool14,1 point,Wed Jul 8 13:39:52 2015 UTC,"No, please don't do this. See above."
learnpython,3cfg6s,The-Mathematician,1 point,Thu Jul 9 18:30:02 2015 UTC,"This way doesn't work at all. self is just an internal label for the object currently being acted on. self = self.get_transposed() only modifies the internal label and not the actual object. Every label outside of this method will still be referring to the old, untransposed matrix and nothing will be changed."
learnpython,3cfg6s,The-Mathematician,1 point,Thu Jul 9 18:29:40 2015 UTC,"You're a little too stuck on self. I think what you want is something like:  def get_transpose(self):     '''return the transpose matrix of this'''     mat = SimpleMatrix(self.m, self.n)     mat.transpose()     return mat   assuming SimpleMatrix(self.m, self.n) makes a copy of the original matrix."
learnpython,3cfg6s,DJKool14,1 point,Tue Jul 7 15:06:39 2015 UTC,"assuming SimpleMatrix(self.m, self.n) makes a copy of the original matrix.   How can one do this? Should I override the __init__() method as well to make a ""copy constructor""?  Right now it just creates a SimpleMatrix with 0s in it."
learnpython,3cibi4,R_Creation,2,Wed Jul 8 03:17:26 2015 UTC,"I'd say that is decoded; you're just not displaying it the way you want to. That's a list of unicode objects, each containing a single character. You can join them together and print the result to see:  >>> column = [u'\u82f9', u'\u679c', u'\u624b', u'\u673a', u'\u7684', u'\u5e78', u'\u798f'] >>> u''.join(column) u'\u82f9\u679c\u624b\u673a\u7684\u5e78\u798f' >>> print u''.join(column) 苹果手机的幸福"
learnpython,3cibi4,kalgynirae,1 point,Wed Jul 8 04:21:16 2015 UTC,"苹果手机的幸福   Google translates this as ""Apple phone happiness."" So... iPhone?"
learnpython,3cibi4,isxek,1 point,Wed Jul 8 04:49:21 2015 UTC,Yeah iphone. Ping guo is literally apple
learnpython,3cibi4,kalgynirae,1 point,Wed Jul 8 05:54:41 2015 UTC,"Yes that works for every json file i have, i can get all the chinese characters in python, but now my problem is that i need to get those words onto a column on the csv file. Well i could just copy and paste but is there a way to do it from python itself?"
learnpython,3cgkxq,leorczhu,5,Tue Jul 7 19:16:24 2015 UTC,w_set = set() for line in fh:     w_set.update(line.split())  print sorted(w_set)   or  print sorted({x for line in fh for x in line.split()})
learnpython,3cgkxq,Vaphell,2,Tue Jul 7 19:32:58 2015 UTC,"with open(fname) as fh:     for line in fh   And, I think you might have meant:  lst.extend(words)   and   newresult = []  for i in result:      if i not in newresult:          newresult.append(i)   is unnecessary if you use a set.  Infact, your program could be reduced down to:  result = set() for line in fh:     result.update(line.split()) return sorted(result)"
learnpython,3cgkxq,elbiot,1 point,Tue Jul 7 19:36:20 2015 UTC,"thanks guys, half way through the beginner course and I haven't learnt the 'update' method yet, but its good to learn more Pythonic ways to solve the problem! =)"
learnpython,3cgkxq,elbiot,1 point,Tue Jul 7 19:49:31 2015 UTC,"I didn't know about set.update either.  But I knew you wanted a set, and I knew lists have both append and extend, so I thought set might also, so I opened ipython and looked at what methods a set has.  update looked good and I looked at set.update.__doc__."
learnpython,3cegoh,Dragonfliesfoos222,9,Tue Jul 7 07:28:16 2015 UTC,Have you asked them about it too?  There are quite a few styles out there. This is a nice one. :)
learnpython,3cegoh,FlockOnFire,1 point,Tue Jul 7 08:07:11 2015 UTC,I love that look. FiveThirtyEight has beautiful plots.
learnpython,3cegoh,dreiter,7,Wed Jul 8 05:25:40 2015 UTC,"You can improve the look of your pyplot plots simply by importing seaborn.   import seaborn as sbs   Alternatively, by using ggplot's stylesheet.  from matplotlib import pyplot as plt plt.style.use('ggplot')   Unfortunately, matplotlib's documentation and general API structuring is horrendous."
learnpython,3cegoh,blackrat47,1 point,Tue Jul 7 14:26:07 2015 UTC,Seaborn changed my matplotlib plots from boring and drab to pretty cool. Give it a shot OP.
learnpython,3cegoh,KingKliffsbury,3,Tue Jul 7 19:32:06 2015 UTC,".tight_layout() goes a long way  edit: More seriously, I do recommend asking specific advice for any situation that cannot be handled with a simple tight layout call. This is a scalable solution that works for me 90% of the time:  fig, (ax1) = plt.subplots(1)  ...  ax1.plot(x, y, label=lbl, color=c, ...)  ... ax1.set_title(title) ax1.legend(prop={'size':figs}, loc=loc)  # Legend size and location ax1.tick_params(axis='both', which='major', labelsize=size)  # Smaller tick marks  plt.tight_layout() plt.savefig(fname)   One major limitation here is that you cannot have a figure title easily (I recommend not trying to get one-- port your image into Paraview or something and put it there manually. Same with figure text.)."
learnpython,3cegoh,loveandkindness,2,Tue Jul 7 13:11:56 2015 UTC,Have you tried prettyplot (uses matplot)? https://github.com/olgabot/prettyplotlib/wiki/Examples-with-code
learnpython,3cegoh,lowbud,7,Tue Jul 7 09:12:05 2015 UTC,"prettyplot is not maintained actively, check this Seaborn"
learnpython,3cegoh,pranabanimesh,2,Tue Jul 7 09:50:09 2015 UTC,Something so simple doesn't need continuous updates to stay functional.  It isn't updated because it doesn't need to be.
learnpython,3cegoh,elbiot,1 point,Tue Jul 7 19:25:04 2015 UTC,"Thanks. Seaborn looks interesting, however, I'm personally already pot committed to use apgui with my own styles, so maybe next time."
learnpython,3cegoh,lowbud,1 point,Tue Jul 7 10:35:45 2015 UTC,"Only one real contributor (ever), last updated 1 year. Looks like a shallow wrapper over matplotlib."
learnpython,3cegoh,loveandkindness,2,Tue Jul 7 13:19:10 2015 UTC,"So I think the question that should be asked first is, is this a graphic design and art issue? as in you don't know how to design a pretty chart regardless of the tool? or is this a programming issues? as in you don't know how to program matplotlib to create a pretty chart?  If it's the first problem, then something like this book would be very useful: http://www.amazon.com/The-Visual-Display-Quantitative-Information/dp/0961392142  If it's the second problem, the links the other posters have posted will help. You can also try asking your peers how they made their graphs."
learnpython,3cegoh,mkdz,1 point,Tue Jul 7 12:37:26 2015 UTC,One of these days I am going to dig into this.  Been in my favorites forever.  Looks promising.  https://github.com/ctokheim/matplotlibrc
learnpython,3cegoh,alaudet,1 point,Tue Jul 7 11:23:31 2015 UTC,http://www.randalolson.com/2014/06/28/how-to-make-beautiful-data-visualizations-in-python-with-matplotlib/  Via /u/rhiever
learnpython,3cegoh,shaggorama,1 point,Tue Jul 7 11:51:56 2015 UTC,The quickest bang for buck you will get is from learning how to use stylesheets in matplotlib: http://matplotlib.org/users/style_sheets.html  You can also make your custom stylesheet based on your preferences.   You can look to use a library like Palettable to get colorbrewer/tableau based color palettes that you can use to set the color cycle for plots in matplotlib: https://jiffyclub.github.io/palettable/
learnpython,3cegoh,Covered_in_bees_,1 point,Tue Jul 7 12:36:40 2015 UTC,Give some of these a go.
learnpython,3cegoh,Sean1708,1 point,Tue Jul 7 14:36:43 2015 UTC,"Check out yhat's ggplot! Works just like ggplot in R, but in Python!"
learnpython,3cflcy,ripread,2,Tue Jul 7 15:08:53 2015 UTC,"eval(""'Normal' == {mode}"".format(**viminfo))    What string gets passed to eval when viminfo['mode'] is 'Normal'?  Hint: Use {mode!r} in the format string."
learnpython,3cflcy,kalgynirae,1 point,Tue Jul 7 15:37:36 2015 UTC,"The string should also just be 'Normal'. Adding the repr() conversion fixed the issue, thanks! I was so focused on the string literal that I didn't think to check the .format"
learnpython,3cflcy,kalgynirae,1 point,Tue Jul 7 15:57:18 2015 UTC,"Yes, but what was being passed to eval as a result of the formatting was 'Normal' == Normal. I just want to make sure you understand why you were getting the NameError and why using !r fixed it."
learnpython,3cflcy,Justinsaccount,2,Tue Jul 7 19:54:33 2015 UTC,http://mywiki.wooledge.org/XyProblem
learnpython,3cflcy,zahlman,1 point,Wed Jul 8 01:46:39 2015 UTC,"I'm reading boolean statements from an input file, so if there's a better way to do this rather than eval I'd like to know   What exactly is the text in the input file, and how do you interpret it?"
learnpython,3cflcy,zahlman,1 point,Tue Jul 7 17:52:58 2015 UTC,The text file is 'Normal' == {mode}  I do:  line = file.readline() eval(line.strip().format(**viminfo))
learnpython,3cg9vt,pixlbreaker,6,Tue Jul 7 18:01:13 2015 UTC,Easily googable questions are not allowed.   Ability to quickly find information is important in learning
learnpython,3cg9vt,04h,7,Tue Jul 7 18:20:04 2015 UTC,"google search term : python raw_input vs input  Top result : SO link    Once the material has been found one can asked further questions based on the found material, this speeds things up for the person asking the questions, it's not just something that people moan about :P  The reason is that people want to help, but when confronted with a clear lack of research it can be frustrating as they may feel their time is being wasted or taken advantage of.   Asking questions properly is good practice though - often one may in fact answer ones own question whilst writing it out."
learnpython,3cg9vt,__baxx__,1 point,Tue Jul 7 18:38:38 2015 UTC,thanks!
learnpython,3cg9vt,66h,3,Tue Jul 7 19:28:08 2015 UTC,"Pay attention to which version of Python you're using and which version any instructional materials you're looking at are intended for. There are some major differences between 3.x and previous versions, and this is one area they affect."
learnpython,3cg9vt,blackrat47,2,Tue Jul 7 18:47:34 2015 UTC,"Have you tried using them both?  input_var = input('Write a number here: ') Write a number here: 5 input_var >>> 5 type(input_var) >>> <type 'int'>  raw_input_var = raw_input('Write a number here: ') Write a number here: 5 raw_input_var >>> '5' type(raw_input_var) >>> <type 'str'>  # Don't do this! input_fn = input('Write a function name here - a nice friendly function which just prints out the path you give it, maybe: ') Write a function name here - a nice friendly function which just prints out the path you give it, maybe: shutil.rmtree input_fn('/')  # I wrote this script hoping the user was nice! How wrong I was!"
learnpython,3cf66d,Comm4nd0,3,Tue Jul 7 13:00:18 2015 UTC,"Your program makes much more sense by just making menu a dictionary:  A = menu.Menu(""Chicken Strips"",3.50) B = menu.Menu(""French Fries"",2.50) C = menu.Menu(""Hamburger"",4.00) D = menu.Menu(""Hotdog"",3.50) E = menu.Menu(""Large Drink"",1.75) F = menu.Menu(""Medium Drink"",1.50) G = menu.Menu(""Milk Shake"",2.25) H = menu.Menu(""Salad"",3.75) I = menu.Menu(""Small Drink"",1.25)   could be:  menu = {'A':('Chicken Strips', 3.50),         'B':('French Fries', 2.50),         ...        }   Then you'd get the data by just calling menu['A'] based on the input you received  I'd personally make a namedtuple out of each dictionary item, but I think it's clear enough without."
learnpython,3cf66d,swingking8,1 point,Tue Jul 7 15:48:00 2015 UTC,Thanks for the feedback I managed to get it working in the end by using a class. i've posted it here: https://www.reddit.com/r/learnpython/comments/3cg3yo/till_or_register_depending_where_youre_from/
learnpython,3cf66d,cdcformatc,2,Tue Jul 7 17:21:51 2015 UTC,"You could fix this by adding a __str__ method to your class. Something like   def __str__:     return self.name   When you call print aMenu Python implicitly calls the __str__ method, the default of which shows the ""menu instance at 0xDEADBEEF"""
learnpython,3cfysc,Lithobilic,5,Tue Jul 7 16:44:42 2015 UTC,"Make x a list. you can check whether a variable is in a list simply with the ""in"" keyword.  if randomNumber() in x:      #dostuff"
learnpython,3cfysc,anonymousperson28,6,Tue Jul 7 16:54:22 2015 UTC,"May be it is faster to test if an element is in a set than in a list (ref : TimeComplexity ) In Py3:  import random x = {2, 4, 6, 8} ch = random.randint(1,10) # From 1 to 10 (included) if ch in x:     print(""Carry on..."")"
learnpython,3cfysc,snarkturne,3,Tue Jul 7 16:55:46 2015 UTC,"So when I make python choose a random number, between 1 and 11 (for 1 and 10)   random.randint(1,10) will give you an integer from 1 to 10 inclusive.  So the result could be a 1 or a 10 or anywhere in between."
learnpython,3cfysc,abcd_z,2,Tue Jul 7 21:20:27 2015 UTC,"It may be simpler to have Python randomly choose from a list of options. Like so:  import random  options = ['option a', 'option b', 'option c'] <br /> random.choice(options)"
learnpython,3cfysc,gameplace123,1 point,Tue Jul 7 22:24:11 2015 UTC,Thanks everyone for the replies I really appreciate it!
learnpython,3cg5xu,p10_user,3,Tue Jul 7 17:33:37 2015 UTC,"result = [list(map(float,item)) for item in zip(*lst)]   you could then change result = to a,b,c = if you want it in separate lists"
learnpython,3cg5xu,RubyPinch,1 point,Tue Jul 7 17:40:16 2015 UTC,What does the star in front of lst do?
learnpython,3cg5xu,Titanium_Expose,3,Tue Jul 7 18:04:51 2015 UTC,"def function(a,b,c):     return a+b+c lst = [1,2,3] function(lst) #error, b and c are missing as the first arg is a list #the solution is to ""unpack"" into the arguments function(*lst) #the same as doing function(lst[0],lst[1],lst[2])   so we effectively have  lst = [[1,2,3],[4,5,6],[7,8,9]] zip(*lst) # AKA zip([1,2,3],[4,5,6],[7,8,9]) # and then zip makes new lists by grabbing the # nth element of each sublist"
learnpython,3cg5xu,RubyPinch,1 point,Tue Jul 7 18:15:44 2015 UTC,"I guess I was asking what the '*' symbol means, in Python."
learnpython,3cg5xu,Titanium_Expose,2,Tue Jul 7 18:18:57 2015 UTC,"unpacking basically, aka splatting (in ruby)  https://docs.python.org/2/tutorial/controlflow.html#unpacking-argument-lists  also multiplication generally, but only in function calls, comprehensions, function definitions, etc, will * mean unpacking, if I remember correctly"
learnpython,3cg5xu,RubyPinch,4,Tue Jul 7 18:20:38 2015 UTC,"zip(*(map(float, triple) for triple in lst))"
learnpython,3cg3yo,Comm4nd0,3,Tue Jul 7 17:20:04 2015 UTC,"Rule of thumb: if you have to type same thing over and over (A = ..., B = ..., C = ... or huge if-elif block) you doing it wrong"
learnpython,3cg3yo,04h,3,Tue Jul 7 18:11:30 2015 UTC,"First off, congratulations on finishing your program!  Diving in, struggling, and figuring things out on your own is the fastest way to learn.  There are a couple obvious things you could do to dramatically improve the size and clarity of your program:   Your Menu class should really be a Menu_Item, because that's what it is (not a big deal, though) If you're looking up something by a keyword, you should consider a dictionary.  A dictionary would be a perfect fit for this:  menu = {'A':('Chicken Strips', 3.50),         'B':('French Fries', 2.50),         ...        }  all of your elifs are repetitive.  If you're repeating something, you're not leveraging a programming language's strengths. Replace while input == True: with while True:, and then use break when you want to exit the loop, or continue when you want to get input again.  Using break and continue seem to follow a more natural thought process than using a sentinel value.  Check for a couple conditions, do something special if they're met, otherwise do our normal thing forever. Using that dictionary I suggested and good code reuse practices, your entire while input == True: loop turns into this:  while input == True:     item = raw_input(""\nEnter item letter: "")      if item == 'P':                 break      if item not in menu.keys():         print ""You have entered an incorrect item.\nPlease try again.""         continue      # This happens if it's a normal item:     menu_item = menu[item]     name, price = menu_item[0], menu_item[1]     receipt.write('{} | {}\n'.format(name, str(price)))     print 'Subtotal = {}'.format(price)     price_total += price  receipt.write('\n\n\tTOTAL | {:.2f}'.format(price_total)) receipt.close()"
learnpython,3cg3yo,swingking8,2,Tue Jul 7 18:31:57 2015 UTC,"Just wanted to post the same points but I have a few more:    In Python 2, classes should inherit from object class C(object): to make them new style classes. If you use a class mainly as a container, it could be better to use a dictionary or list. You have a lot of print statements with parentheses which are not needed. They look like function calls. You could do from __future__ import print_function at the top of your script, if you want to use print as a function.  And you shouldn't overwrite built-in functions like input. BTW, don't use input in Python 2 (or eval(input()) in Python 3), because it could be a security risk."
learnpython,3cg3yo,dunkler_wanderer,2,Tue Jul 7 19:04:35 2015 UTC,"i'll be honest, everything you just said has gone over my head a little. i'll look up what you're saying and see if i can apply it to the next version of the programme."
learnpython,3cg3yo,swingking8,2,Tue Jul 7 21:42:48 2015 UTC,"Use class Menu(object): instead of class Menu():  It gets superpowers that you don't yet know about. Your data object is not complicated, and performs no operations on itself.  You don't need a class at all, really.  Just use a dictionary. Don't worry about this suggestion, imo. You shouldn't name anything input.  input is a keyword.  Just like you can't name an object class, because that means something else entirely."
learnpython,3cg3yo,swingking8,1 point,Tue Jul 7 21:53:21 2015 UTC,"wow thank you so much for giving me all this feedback!  i'm going to make a v.2 tomorrow and work through all your suggestions to make it better.  again, thank you o much for your time."
learnpython,3cg3yo,t90fan,2,Tue Jul 7 21:40:46 2015 UTC,"You're welcome!  There are a couple other things that people haven't yet pointed out, but that are good practice.  Generally speaking, you don't want to put yourself in a position to manually close a file.  You might forget, or the user might break out of the program before the close is reached.  In either case, bad stuff happens.  Python's with statement makes sure a file is always closed.  Instead of:  receipt = open(""D:\Python\Till\Receipt.txt"", ""w"") receipt.write(""MENU RECEIPT\n\n"") ... receipt.close()   Use:  with open(""D:\Python\Till\Receipt.txt"", ""w"") as receipt:     receipt.write(""MENU RECEIPT\n\n"")     ... # No need to .close() after!   I'll save my other recommendations for v2.  You've got a lot of useful input to implement in the meantime."
learnpython,3cg3yo,Vaphell,1 point,Tue Jul 7 21:47:58 2015 UTC,https://www.reddit.com/r/learnpython/comments/3clo3b/till_or_cash_register_v2/  ;)
learnpython,3cf5co,I_jus_lurk_here,3,Tue Jul 7 12:52:10 2015 UTC,For csv you could use the csv module that comes with Python. There are code samples in the docs for reader() and DictReader().   As for dealing with excel files you would need the help of external modules. http://www.python-excel.org/ has a list. (Although if you were able to install additional modules -- you'd just install pandas.)
learnpython,3cf5co,commandlineluser,3,Tue Jul 7 13:04:03 2015 UTC,"Something like this:    q_to_a = {'what time is it?' : ['party time', 'time to play', 'time to die'],       ""Are you the daddy?"" : ['True', 'False']                             }   #note: each value at index[0] of each list the correct answer   import random   def lets_do_this(x):      for elements in x:           print elements          for items in random.sample(x[elements], len(x[elements]) ) :              print items          answer = raw_input()          if answer == x[elements][0]:               print 'correct'          else:               print 'wrong'    lets_do_this(q_to_a)"
learnpython,3cggf0,MrDysprosium,2,Tue Jul 7 18:45:34 2015 UTC,"Please try to demonstrate what about it 'doesnt work' - do you get results, but not what you want, or an error?  When I gin up your example with a string containing numbers it works OK for me inside the function.  Your loop assumes that the string is at least 1001 characters long, if it actually isnt then you might end up getting an empty slice and getting a 'invalid literal for int' error along the way.  You should not be defining a variable named 'list', that is a keyword in python."
learnpython,3cggf0,jibbly_jibbly,1 point,Tue Jul 7 19:00:40 2015 UTC,"This is the error I get:   Traceback (most recent call last):   File ""python"", line 36, in <module>   File ""python"", line 30, in thing ValueError: invalid literal for int() with base 10: '5349194934\n 9'"
learnpython,3cggf0,aziannomness,2,Tue Jul 7 19:02:54 2015 UTC,"I think your problem is that you are pasting the text straight from the web page and getting a new-line character in there as you can see from this line:  invalid literal for int() with base 10: '5349194934\n 9'   EDIT: You need to paste the text in there properly without '\n' characters. That is odd how pasting straight from the web page works outside a function compared to just in the interpreter.  string1 = ""pasted string with newline characters here"" int(string1[:13])   returns 7316717653133. So I'm not entirely sure the difference here, someone more seasoned and knowledgeable would be of great help. I would like to know the answer to this also."
learnpython,3cggf0,aziannomness,1 point,Tue Jul 7 19:39:37 2015 UTC,GET BACK TO WERK
learnpython,3cfd91,ZedsDed,1 point,Tue Jul 7 14:04:13 2015 UTC,There's probably a nicer way to achieve this but perhaps something like this:  >>> words = ['word'] * 3 >>> 'multiple {} {} {} with one '.format(*words)
learnpython,3cfd91,commandlineluser,10,Tue Jul 7 14:27:13 2015 UTC,words = 'words' print('multiple {0} {0} {0} with one '.format(words))
learnpython,3cfd91,dunkler_wanderer,2,Tue Jul 7 15:04:27 2015 UTC,yes this worked great. thank you
learnpython,3cfd91,commandlineluser,1 point,Tue Jul 7 15:48:50 2015 UTC,"A-ha. Very nice, thank you!"
learnpython,3cfqwq,squeezedfish,2,Tue Jul 7 15:49:35 2015 UTC,You don't need to add a space between every character. This should work:  requests.get('https://github.com/search?utf8=✓&q=' + term)
learnpython,3cfqwq,drivfe,1 point,Wed Jul 8 00:41:08 2015 UTC,"Thank you very much, it works as desired now."
learnpython,3cfqwq,kannon17,1 point,Wed Jul 8 14:14:17 2015 UTC,Can you print out all the linkElems to see which five it's grabbing? The last ones? Random ones?
learnpython,3cgd9i,XxStoudemire1xX,3,Tue Jul 7 18:23:57 2015 UTC,"Your iteration for D goes from 2 to N ... say from 2 to 5000.  But you already did a loop, just the time before, from 2 to 4999.  Is there any way you can save iterations by storing previous results? It seems like you are repeating past calculations over and over, every time?  Also, your entire last 5 lines and for loop can be written like this:  isPrime = [isItPrime(i) for i in range(0, 1000001)]"
learnpython,3cgd9i,symmitchry,1 point,Tue Jul 7 18:33:54 2015 UTC,"I tried this code but it still exceeded the time limit. Don't I have to have two loops. One to determine if its prime and the other to go through 1,000,000 numbers? Also thank you for the help.  import math isPrime = [False,False,True]    #program had trouble testing numbers 0-2 for N in range(3, 1000001):     #Each individual number.   for D in range(2, N):        #Each prime test     if (D*D > N):          isPrime.append(True)        break     if N % D == 0:       isPrime.append(False)       break"
learnpython,3cgd9i,scfoothills,2,Tue Jul 7 19:10:21 2015 UTC,"I'll suggest a couple of improvements to your isItPrime function, but really you should take an entirely different approach for a problem like this.  Your algorithm checks all even numbers, even though two is the only prime. Before getting into the for loop, test for evenness. If the number is 2, return True. If it is any other even, return False. Then you can make your loop for D in range(3, N, 2) which will cut your time in half by only testing odd numbers with odd divisors.  Next, the square root is a problem Square roots are expensive operations. Think about how you'd calculate one by hand. You'd guess, then multipy back to check accuracy. Then you'd keep adjusting your guess and remultiplying until you're happy with the precision. Even for the computer, calculating the square root is an iterative process. By including it in the for loop, you're calculating the same square root on every iteration. Move the calcuation of the square root ahead of the for loop and store it in a variable. That way you only calculate once. All comparisons then just require retrieval from memory without any computation. Also, consider making the range(3, [rounded square root of N], 2)  to eliminate the need for the if/break code block.  For testing a single value for primality, an isItPrime function is the way to go. For the problem you have, however, a sieve is the approach to take. A sieve is extremely efficient. If you do it right, it should run in a couple tenths of a second.  Edit: Looking at statement 4, you're not actually breaking when reaching the square root of N either. I think you mean to have if D > math.sqrt(N)."
learnpython,3cgd9i,autowikibot,1 point,Tue Jul 7 18:58:18 2015 UTC,"Sieve of Eratosthenes:       In mathematics, the sieve of Eratosthenes (Ancient Greek: κόσκινον Ἐρατοσθένους, kóskinon Eratosthénous), one of a number of prime number sieves, is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the multiples of 2.   The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime.  This is the sieve's key distinction from using trial division to sequentially test each candidate number for divisibility by each prime.   The sieve of Eratosthenes is one of the most efficient ways to find all of the smaller primes. It is named after Eratosthenes of Cyrene, a Greek mathematician; although none of his works have survived, the sieve was described and attributed to Eratosthenes in the Introduction to Arithmetic by Nicomachus.     Image from article i     Relevant: Lucky number | Sieve of Atkin | Generating primes | Sieve of Sundaram   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3cgd9i,prof_eggburger,2,Tue Jul 7 18:59:14 2015 UTC,Is it worth checking whether 4 is a factor of a possible prime if you already know that 2 isn't a factor?
learnpython,3cgd9i,prof_eggburger,1 point,Tue Jul 7 18:58:37 2015 UTC,True ill change it but i think it will still be over the time limit.
learnpython,3chpg1,elbiot,3,Wed Jul 8 00:12:43 2015 UTC,"After using python for 7 years and becoming very proficient, I'm now learning haskell and can totally relate to you.  I never had this with python though because I didn't set out to ""learn python"".  I set out to solve a boring, repetitive task at work, and then try out some ideas for solar concentrator design, and then make and impossibly long task of photo editing possible, and on and on.  Even with Haskell, I'm immediately trying to do just small things that will be actual accomplishments.  If I tried to use an applicative to apply a data constructor to an IO monad just for it's own sake, I'd have given up already.  Going through exercises in books is one of the few ways to market, or at least mass distribute ""learning programming"", but it's not necessarily a good one."
learnpython,3chpg1,isxek,1 point,Wed Jul 8 00:36:43 2015 UTC,"I never had this with python though because I didn't set out to ""learn python"". I set out to solve a boring, repetitive task at work...   Exactly the same way I learned programming in general. I thought (at the time) that batch files just wouldn't do, so I learned Python."
learnpython,3chpg1,elbiot,1 point,Wed Jul 8 00:51:28 2015 UTC,What would you recommend instead?   How long did it take you with python until you felt proficient?   How do you manage to stay motivated with haskell?
learnpython,3chpg1,elbiot,3,Wed Jul 8 00:52:01 2015 UTC,Pick a project that is interesting and useful to you!  I don't know that I will ultimately become proficient in Haskell.  Asking questions on the irc and getting individual help has been saving me so far.
learnpython,3chpg1,squeezedfish,1 point,Wed Jul 8 01:07:28 2015 UTC,"I felt proficient long ago, even though I look back at that code and cringe.  It was getting stuff done though, so I felt proficient."
learnpython,3chpg1,jpfau,1 point,Wed Jul 8 01:09:07 2015 UTC,"I'm at the same position as you, also on exercise 42, I can read other peoples code and get an idea of what is going on but as soon as I try to build something myself my mind goes blank. I understand what you mean about not ""getting it"", I'm still waiting for it to all suddenly click!  I highly recommend finding a project that someone else has already done that you can play with and get comfortable making changes too.  You could try building a reddit bot with PRAW, there is lots of documentation to aid you.  You could also try a Google searcher with Automate The Boring Stuff With Python.  Both of these enable you to get comfortable writing code whilst forcing you to go outside your comfort zone and learn, they also don't take very long so you get a good sense of achievement."
learnpython,3chpg1,LeonardUnger,1 point,Wed Jul 8 14:49:38 2015 UTC,Yeah I think that's what I'm going to do. I want to power through the rest of this book because I would feel terrible about not finishing it then I'm going to try a project to get a better feel for this.
learnpython,3cgj27,hop_hip,1 point,Tue Jul 7 19:03:18 2015 UTC,"You need a while loop in  player1 = raw_input (""Please choose a spot for x \nType a number between 0 - 8 and hit enter:  "") player1 = int(player1) if BOARD[player1] != 'x' and BOARD[player1] != 'o':     BOARD[player1] = 'x' else :     print "" This space is taken, please choose a new spot!""     time.sleep(2)   there somewhere. The way I would do it would involve having another raw_input line and my while loop condition would look something like the if statement you have there."
learnpython,3cgj27,The-Mathematician,2,Tue Jul 7 19:34:53 2015 UTC,"The-Mathematician,  Thank you for your response.   Is it too irresponsible for me to ask to see how you would write it?   I believe where my edit needs to go is after the else line, after print ""spot is taken"" but still am unsure how to implement any change.."
learnpython,3cgj27,The-Mathematician,1 point,Tue Jul 7 19:41:12 2015 UTC,"player1 = int(raw_input(""Please choose a spot for x \nType a number between 0 - 8 and hit enter:  "")) while BOARD[player1] in {'x','o'}:     player1 = int(raw_input(""This space is taken, please choose a new spot!   "")) BOARD[player1] = 'x'"
learnpython,3cgibk,loveandkindness,1 point,Tue Jul 7 18:58:21 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3cgibk,Justinsaccount,1 point,Tue Jul 7 19:00:09 2015 UTC,"The question isn't very clear.  In your example there's no need to sort anything, because they are already sorted as they are generated by range() in already-sorted order.  I assume that was just for illustration purposes, and that won't be the case in the actual code.  But why can't the actual code hang on to the integer form of the number so that it can be sorted that way?  For example, instead of using a string, you could use a tuple:  >>> items = [('A', 999), ('A', 5), ('A', 42), ('A', 0)] >>> sorted(items) [('A', 0), ('A', 5), ('A', 42), ('A', 999)]   There is no need to worry about padding, they sort in the proper order inherently because they are integers, not strings.  And I don't understand why you feel there's a difference between options B and C.  They both pad the number to two places.  I don't see why one would be any more or less safe than the other.  Both of them will have problems if the integers become greater than 99.  If you know ahead of time the maximum number of items you're going to have, then you can use padding.  If you don't, then you can't.  You could implement a custom sort, or just use a tuple."
learnpython,3cgibk,Rhomboid,1 point,Tue Jul 7 19:11:25 2015 UTC,Thanks for the thoughts!  I think B is unsafe because someone might save the column in a space delimited text file.  I think C is an annoying option because indeed I don't always know the size.  Option A is also annoying because it causes DataFrame objects to initialize in an unsorted state.
learnpython,3cgibk,Rhomboid,1 point,Tue Jul 7 19:37:29 2015 UTC,"I think B is unsafe because someone might save the column in a space delimited text file.   But that also applies equally to C.  There is no difference between B and C in any respect, they're just two different ways of writing the same thing."
learnpython,3cgibk,Rhomboid,1 point,Tue Jul 7 19:44:12 2015 UTC,Thank you for clearing that up!  I thought B was using spaces since they weren't being shown in IPython.  Are you sure that B is being filled with zeros?  This works:  col2 = ['B{}'.format(str(i).zfill(2)) for i in range(npts)]
learnpython,3cgibk,Rhomboid,1 point,Tue Jul 7 19:54:03 2015 UTC,Are you sure that B is being filled with zeros?   What do you think the 'z' in zfill stands for?   col2 = ['B{}'.format(str(i).zfill(2)) for i in range(npts)]    That's no different than 'C%2i' % i or 'C' + str(i).zfill(2).  These are all doing the exact same thing.
learnpython,3cgbxr,SovietChaoz,2,Tue Jul 7 18:14:56 2015 UTC,"I'm not sure what jQuery File Tree, Bottle, and listing directories have to do with each other. Perhaps the answer you're looking for is os.listdir."
learnpython,3cgbxr,raylu,1 point,Tue Jul 7 21:02:51 2015 UTC,"It appears you'll have to write your own custom connector to interact with the Bottle framework.  I would suggest looking at the Django connector provided in the package.  It's a really basic function that uses  os.listdir like raylu suggested, formats it like the jQuery File Tree documentation instructs and then returns it in the response.  Without knowing anything about the Bottle framework, I would still guess you would only have to change a line or two in the provided Django connector to get it to work."
learnpython,3cgbxr,exxy-,1 point,Wed Jul 8 00:23:40 2015 UTC,You'll probably also have to read this.
learnpython,3cgbtt,anonymousperson28,2,Tue Jul 7 18:14:12 2015 UTC,"You have a compilation error in calcRMSD.c, not a linker error. Can we see the relevant parts of that file? How do you normally compile this for C?"
learnpython,3cgbtt,raylu,1 point,Tue Jul 7 21:05:04 2015 UTC,"calcRMSD.c is just the compiled form of calcRMSD.pyx (which I've included). I don't know C, which is why I might be making some fundamental errors. What I did was take the function   double rmsd(int n, double* x, double* y){...   from C code, copy pasted it into a file and called it rmsd.h (and kept the  #include <string.h> #include <stdio.h> #include <stdlib.h> #include <math.h>  extern ""C"" {   // svd from lapack   void dgesvd_(char*,char*,int*,int*,double*,int*,double*,double*,int*,double*,            int*,double*,int*,int*); }   that was originally in the C code. I'm trying  to use this C function (which I did not write) in calcRMSD.pyx."
learnpython,3cgbtt,raylu,2,Tue Jul 7 21:38:02 2015 UTC,"Ah, OK. Where is rsmd.h and what is the   entire command you ran the entire output you got"
learnpython,3cgbtt,raylu,1 point,Tue Jul 7 21:55:11 2015 UTC,"rmsd.h is in the same folder as the rest of my files.    python2.7 setup.py build_ext --inplace  running build_ext building 'calcRMSD' extension cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy/core/include -Irmsd.h -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c calcRMSD.c -o build/temp.macosx-10.10-intel-2.7/calcRMSD.o In file included from calcRMSD.c:267: In file included from /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy/core/include/numpy/arrayobject.h:4: In file included from /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy/core/include/numpy/ndarrayobject.h:17: In file included from /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy/core/include/numpy/ndarraytypes.h:1760: /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2: warning:        ""Using deprecated NumPy API, disable it by ""          ""#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION""       [-W#warnings] #warning ""Using deprecated NumPy API, disable it by "" \  ^ calcRMSD.c:269:10: fatal error: 'rsmd.h' file not found #include ""rsmd.h""          ^ 1 warning and 1 error generated. error: command 'cc' failed with exit status 1"
learnpython,3ce8eb,thinkvitamin,7,Tue Jul 7 05:48:27 2015 UTC,Qt Designer.
learnpython,3ce8eb,K900_,4,Tue Jul 7 12:13:53 2015 UTC,"Does it not seem like you're trying to run before you can walk? i'm new to learning Python my self however, so maybe i'm wrong but i'm sure it's best to start with the basics and slowly add more and more."
learnpython,3ce8eb,Comm4nd0,4,Tue Jul 7 08:59:12 2015 UTC,Glade is a drag and drop GUI builder for GTK.
learnpython,3ce8eb,coderjewel,2,Tue Jul 7 06:15:19 2015 UTC,"was playing with kivy-designer the other day. Very neat, unfortunately i was unable to successfully make an OSx executable, which kinda defeated the purpose."
learnpython,3cdzfx,theorko,2,Tue Jul 7 04:16:08 2015 UTC,"Guido's blog post on the history of comprehensions and gen-exprs also notes this near the end, and that StackOverflow question links it."
learnpython,3cdzfx,adamnew123456,2,Tue Jul 7 12:37:05 2015 UTC,Not list but list comprehension.
learnpython,3cg9qc,ayy_man,3,Tue Jul 7 18:00:15 2015 UTC,"You could make an array that has all zeroes in it or something like that. And when you ""use"" that spot you change the value from 0 to 1.   For example, here is a 5x5 board.   [[0, 0, 0, 0, 0],  [0, 0, 0, 0, 0],  [0, 0, 0, 0, 0],  [0, 0, 0, 0, 0],  [0, 0, 0, 0, 0]]   Once you use the upper left spot you change the value to 1.  [[1, 0, 0, 0, 0],  [0, 0, 0, 0, 0],  [0, 0, 0, 0, 0],  [0, 0, 0, 0, 0],  [0, 0, 0, 0, 0]]   Now, you only need to check wether the spot has 1 in it or 0. If it's a 1, then you need to find another spot."
learnpython,3cg9qc,Zahand,1 point,Tue Jul 7 18:20:18 2015 UTC,"Keep track of which positions have been used.  If you get a position that has already been used, pick another.  This has the nasty flaw of possibly taking forever, but it's very unlikely, even near the end of the game, if you only have a handful of positions in total.  The other possibility is that you could keep a list of positions, and whenever you pick one, remove the position from that list.  When it's time to pick randomly, pick randomly from that list.  This is much more efficient, but how much does it matter?  Let's do some math to find out what this limit is.  Picking random numbers and checking is fast, so a billion picks is probably going to take at most a few seconds.  Let's say that this is too much, so you want there to be less than 1% chance of getting to a billion picks in a given move.  Let's say you have n positions, and, in the worst case scenario, n – 1 of these positions have already been picked and there's just 1 left.  The probability of picking it in any given pick is 1/n, of course, and the probability of not picking it is 1 – 1/n.  So:  The probability of doing it in exactly 1 pick is 1/n.  The probability of doing it in exactly 2 picks is (1 – 1/n)·1/n (you have to miss it the first time).  The probability of doing it in exactly 3 picks is (1 – 1/n)2·1/n (you have to miss it the first two times).  …  The probability of doing it in exactly t picks is (1 – 1/n)t – 1·1/n.  So the probability of doing it in the first t picks is (1 + a + a2 + ... + at – 1)·1/n where a = 1 – 1/n.  This is a geometric series, and the sum is ((1 – at)/(1 – a))·1/n, and since 1 – a = 1/n, the denominator cancels out and the probability is just 1 – at.  So, you want the probability that you do it in the first billion picks to be 99%.  So 1 – abillion = 0.99, or abillion = 0.01.  So a = 0.011/billion.  1/billion is a very small number, so we're going to use some Taylor series trickery to get an approximate value.  0.01 = exp(ln(0.01)) and exp(x) ≈ 1 + x for small x.  So a = 0.011/billion = exp(ln(0.01))1/billion = exp(ln(0.01)/billion) ≈ 1 – 2ln(10)/billion (also, ln(0.01) = –2ln(10)).  a = 1 – 1/n, so 1/n ≈ 2ln(10)/billion, and n ≈ billion/(2ln(10)).  ln(10) ≈ 2.5 so basically n ≈ 200,000,000.  Let this sink in.  If you have to randomly choose the right one out of two hundred million positions, the chance that it'll take more than a few seconds is 1%.  If you're working on a distributed application where you'll have a thousand users doing this at the same time, then yeah, you'll want to cut down on needless guessing.  But, generally, you don't need to!"
learnpython,3cdqmw,seanr700,4,Tue Jul 7 02:57:12 2015 UTC,"Yes, basically.  Use a linter, and check for yourself here: http://pep8online.com"
learnpython,3cdqmw,paste,2,Tue Jul 7 04:41:06 2015 UTC,"Not sure if it is my personal preference or the generally accepted best practice but I would change  if self.generated != True:     print(""Must generate first..."")   to  if not self.generated:     print(""Must generate first..."")"
learnpython,3cdqmw,OCHawkeye14,1 point,Tue Jul 7 14:18:53 2015 UTC,"Ah, that does appear more pythonic!"
learnpython,3cdqmw,novel_yet_trivial,3,Tue Jul 7 19:01:29 2015 UTC,"Learning beautifulsoup is a good thing, sure, but remember not to reinvent the wheel. Remember, a day spent programming can save you 2 minutes of google."
learnpython,3cdw2s,_Techies_,2,Tue Jul 7 03:45:15 2015 UTC,"I'd recommend the book Flask Web Development by Miguel Grinberg. Also, you should read up on the MVC pattern."
learnpython,3cdw2s,coderjewel,1 point,Tue Jul 7 03:50:36 2015 UTC,Ohh I love that book! It's amazing. And so is Flask. It's more simple than Django and so it's easier to get into.
learnpython,3cdw2s,perfecthashbrowns,1 point,Tue Jul 7 04:16:00 2015 UTC,This simple tutorial is a good place to get your feet wet
learnpython,3cdw2s,Acurus_Cow,1 point,Tue Jul 7 10:34:48 2015 UTC,Thanks to all for the advices :)  Flask seems very interesting
learnpython,3ce2x2,midwesternliberal,2,Tue Jul 7 04:50:24 2015 UTC,"Fyi, you can do:  for a1, a2, a3 in alist:     #convert to ints here     for b1, b2, b3 in blist:         #no need for m in k.   It's called unpacking.  Should make your code more readable and easier to debug."
learnpython,3ce2x2,elbiot,1 point,Tue Jul 7 05:11:25 2015 UTC,"I tried this implementation, but get an error for the blist. I believe it tries to unpack the first list which only has 1 object, the tuple within that list has 3 objects...it's so fucked up. I tried parsing a million ways, but this was the best I could get.   ValueError: need more than 1 value to unpack  for a1, a2, a3 in alist:       a1 = int(a1)       a2 = int(a2)       for b1, b2, b3 in blist:            b1 = int(b1)            b2 = int(b2)            if a1 - b1 >= -3 and a1 - b1 &amp;lt;= 3 and a3 == b3:                 five_agree.append(""agree"")            elif a3 != b3 or (math.fabs(a1 - b1) > math.fabs(a1 - a2)):                 five_agree.append("" "")            else:                  five_agree.append(""disagree"")"
learnpython,3ce2x2,elbiot,2,Tue Jul 7 05:25:15 2015 UTC,"Oh, because blist is a list of lists of tuples, where each tuple is in a list by itself.  Weird format.  You could flatten it like  for b1, b2, b3 in [m for k in blist for m in k]:   But I could be confused about what you're going for.  Or do the m in k loop like you did (same thing) but unpack b1 etc there."
learnpython,3ce2x2,fireflash38,1 point,Tue Jul 7 05:41:05 2015 UTC,"I don't know why I didn't think of this, but I ended up just looping through the list (using unpacking!) and creating an entire new one.   Simple solution although I am sure there was a better way to do it from the getgo.  Just typing this out helped me get out of the same thought-patterns, I've been stuck for hours.  Thanks everyone!"
learnpython,3ce2x2,raylu,1 point,Tue Jul 7 05:44:16 2015 UTC,Good way to do it from the get-go is to get your data in a good format as soon as possible after reading it in. Best way would be have your data format in the file be easily readable :)
learnpython,3ce2x2,raylu,1 point,Tue Jul 7 13:28:17 2015 UTC,"It was scraped from a webpage with some random program I had to use (for a class) then I ended up using regex to parse what I needed and then ended up with a cluster fuck lol.  I know there is way simpler ways to do it than what I am doing, but I am already so far down the rabbit hole."
learnpython,3ce2x2,The-Mathematician,2,Tue Jul 7 13:30:44 2015 UTC,We need to know about the format of listA.
learnpython,3cfjq6,kanu192,1 point,Tue Jul 7 14:56:48 2015 UTC,"We'll need to see the code... (use pastebin or gists if it is long, not dropbox)"
learnpython,3cfjq6,anonymousperson28,-1,Tue Jul 7 16:57:03 2015 UTC,"Fixed it, was my fault... :D"
learnpython,3cfjq6,sharpie32,1 point,Tue Jul 7 17:00:27 2015 UTC,Don't have dropbox.  Don't want to download files.  Paste these in pastebin along with the source bruh.
learnpython,3cerf3,coolandsmartrr,2,Tue Jul 7 10:02:34 2015 UTC,The source code is always a good place to look.
learnpython,3cerf3,campenr,2,Tue Jul 7 11:17:52 2015 UTC,There is an awesome 2 part tutorial on building a python web server by Ruslan Spivak...   check it out
learnpython,3cerf3,W1zK1dd,1 point,Tue Jul 7 12:33:35 2015 UTC,did you read the code source ?
learnpython,3ce39z,mistahwhite,4,Tue Jul 7 04:54:11 2015 UTC,Probably requests and beautiful soup.  If stuff is dynamically generated through ajax/javascript you'd use selenium.
learnpython,3ce39z,elbiot,2,Tue Jul 7 05:03:33 2015 UTC,Sorry but could you elaborate on that? How could I use beautiful soup in my program? I already know what the questions are (they are always the same) so I don't think I need to request anything from the site. How would I just submit data to the site?
learnpython,3ce39z,elbiot,4,Tue Jul 7 05:30:37 2015 UTC,Beautiful soup would tell you the form element ids and the submit action.  But if those are always the same there's no need.  Be sure to use a requests session and use the cookies.  Edit: requests is for posting data too.
learnpython,3ce39z,raylu,1 point,Tue Jul 7 05:46:17 2015 UTC,If stuff is dynamically generated through ajax/javascript you'd use selenium.   Or reproduce the AJAX queries.
learnpython,3ce39z,elbiot,1 point,Tue Jul 7 05:23:08 2015 UTC,"Which you can do sometimes, but not always."
learnpython,3ce39z,raylu,1 point,Tue Jul 7 05:25:37 2015 UTC,"If your browser can do it, so can python. Fullstop."
learnpython,3ccolk,sloansta,4,Mon Jul 6 21:51:50 2015 UTC,"I guess it depends on what exactly you are finding confusing or what you mean by ""more advanced"" things. Are you talking about list comprehensions, the MRO, metaclasses? Without knowing specifics it's a bit hard to answer your question other than saying the more you practice, the easier it will get."
learnpython,3ccolk,wiiittttt,1 point,Mon Jul 6 22:31:05 2015 UTC,"Yeah, i suppose haha, i have only been using it for about a week so i guess like anything practice will help :p"
learnpython,3ccolk,Davorian,2,Mon Jul 6 22:32:27 2015 UTC,"The hardest part of the switch, from my perspective, is having to fend without the great static typing in C# that is facilitated by Intellisense.  Python's more dynamic duck typing can be great for some things, but it often feels like it lacks structure compared to the C# approach.  I've found this makes it harder to track relationships in large, unfamiliar, codebases since a lot of things are based on ""convention"" or implicit relationships.  This may or may not be contributing to your sense of ""scrambled"" when you're looking at existing code.  Nothing will fix this other than time and experience; you will come to see many of these conventions and patterns used repeatedly and across different frameworks, and they will be very similar to what you may have used in C#, but just look different.  There are plans for adding ""type hinting"", but I don't know much about it other than the fact that it's caused a lot of controversy, and there isn't much optimism surrounding it in general."
learnpython,3ccolk,Davorian,1 point,Tue Jul 7 04:00:53 2015 UTC,"Yeah, the ""Type hinting"" Is what really threw me off. At first i was like ""Ahh screw it, i don't need it i got this"" Then after about 30mins of looking at and modifying some Python code i realized how much i was dependent on look for those ""Hints""..."
learnpython,3ccolk,chw115,1 point,Tue Jul 7 09:22:08 2015 UTC,"Absolutely.  Intellisense, all by itself, makes dealing with all of Visual Studio's quirks worth the pain.  Combined with the class naming conventions that accompany C#'s (and Java's) static typing can make it much easier to get your head around a framework or application design.  Python can do everything C# does, but you have to expend a lot more effort keeping a mental model of the abstractions lest you unwittingly break them.  I love Python, really I do (especially for web work), but when it comes to serious, testable, enterprise-level software I would much rather stick with C#/Java."
learnpython,3ccolk,This_Is_The_End,2,Tue Jul 7 10:10:12 2015 UTC,"For me, the most confusing thing was the lack of method overloading. And also the fact, that I don't even need a ""var"" to introduce a new variable...  So basically, the dynamic type system :-)"
learnpython,3ccolk,chw115,1 point,Tue Jul 7 05:59:57 2015 UTC,The overloading is existing ;-)
learnpython,3ccolk,kkradical,2,Tue Jul 7 08:15:03 2015 UTC,What do you mean? I cannot declare two methods with the same name. What else would you call overloading?
learnpython,3ccolk,blackrat47,2,Tue Jul 7 08:38:53 2015 UTC,Maybe in the class sense? I can overload the default comparison method to define sorts any way I want or the default str method or any inherited method (iirc)
learnpython,3ccolk,chw115,3,Tue Jul 7 12:26:25 2015 UTC,"That's overriding, not overloading."
learnpython,3ccolk,kkradical,2,Tue Jul 7 12:45:50 2015 UTC,"That's true, although the latter would be overriding, not overloading."
learnpython,3ccolk,Rinnve,2,Tue Jul 7 12:47:28 2015 UTC,"ahhh right, rusty on those terms :D"
learnpython,3ccolk,echocage,2,Tue Jul 7 19:29:06 2015 UTC,"Try to wrap your head around the fact that Python is much more dynamic than any ""traditional"" compiled language can ever be. That every single statement is executable (no, defs and classes are not ""passive"" declarations). That Python is all about hash tables. Namespaces? Hash tables. Objects? Hash tables again. All operations are just syntax sugar for special methods dwelling in this or that object's hash table. (Actually, it's a little more complicated than that, but that's a start.) Try tinkering with the internals of Python's object system, read about special methods, define some simple classes that emulate container or function behaviour, read about decorators and imitate them ""by hand"". Maybe that helps."
learnpython,3ccolk,loneraver,1 point,Tue Jul 7 07:03:17 2015 UTC,"I've found that it's really hard to get the hang of python when you're coming from another language, in comparison to switching from C# to Java, simply because not only do you have to get used to the syntax change, and the whitespace, you really have to change how you think about problems, from mutation to translation, from static to dynamic.   Give it some time, you'll get used to it if you use python enough. When I first started, I hated the language because it was so difficult to grasp how to solve problems for me, eventually it clicked and that was it, I was hooked.   Feel free to PM me if you need any advice, I know how hard it can be, I'd be happy to answer any questions you might have!"
learnpython,3ccolk,gschizas,4,Tue Jul 7 00:35:06 2015 UTC,"When it comes to C# and Java, I can't think of any other two languages that are closer to each other."
learnpython,3ccolk,echocage,1 point,Tue Jul 7 01:54:43 2015 UTC,I can: C# and VB.NET :)
learnpython,3ccolk,This_Is_The_End,2,Tue Jul 7 07:19:57 2015 UTC,"Thanks! Got any tips on how to NOT feel dumb when learning a new language that is difficult? When ever i start a new language or get stuck on a problem i feel really stupid. Maybe that is just lack of confidence, but i really hate the feeling cause it gets me unmotivated :/"
learnpython,3cekr0,St0kka,2,Tue Jul 7 08:26:06 2015 UTC,Refactoring is a skill that can only be gained through experience.  pylint can help with the ugliness.
learnpython,3cekr0,raylu,1 point,Tue Jul 7 09:18:29 2015 UTC,Thank you.
learnpython,3cekr0,echocage,2,Tue Jul 7 09:51:35 2015 UTC,"Check out this video, it really helped me.  https://youtu.be/OSGv2VnC0go"
learnpython,3ce7o6,justinpoiroux,2,Tue Jul 7 05:40:19 2015 UTC,Try MechanicalSoup.
learnpython,3ce7jz,Elthran,1 point,Tue Jul 7 05:39:01 2015 UTC,on finding the logest repeating substring.    The most difficult part here is going to be the construction of the suffix-tree. Soo... errm have fun with that :-)
learnpython,3ce7jz,Nahnja,2,Tue Jul 7 09:10:43 2015 UTC,"In my opinion this is over complicating the problem.  The repeated key in this case is not an arbitrary string.  I would take advantage of the facts that the repeated substring that should be extracted will always be the beginning of the string, and the string will contain nothing but that substring repeated.  I would recommend testing successively longer substrings from the beginning of the key string, and checking if all subsequent substrings in the key string are equal to that word.  (py)(th)(on)(py)(th)(on)(py) (py)(py) <- False  (python)(python)(py) (python)(python)(python)  <- True # string.startswith() could help make sure last cut off string matches"
learnpython,3ce7jz,shadowman1138,1 point,Tue Jul 7 15:11:26 2015 UTC,"Longest repeated substring problem:       In computer science, the longest repeated substring problem is the problem of finding the longest substring of a string that occurs at least twice. This problem can be solved in linear time and space by building a suffix tree for the string, and finding the deepest internal node in the tree. Depth is measured by the number of characters traversed from the root. The string spelled by the edges from the root to such a node is a longest repeated substring. The problem of finding the longest substring with at least  occurrences can be solved by first preprocessing the tree to count the number of leaf descendants for each internal node, and then finding the deepest node with at least  leaf descendants that have no children. In the figure with the string ""ATCGATCGA$"", the longest repeated substring is ""ATCGA"", and repeats twice.    Image i - A suffix tree of the letters ATCGATCGA$     Relevant: LCP array | Suffix tree | Suffix array | List of algorithms   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3ccary,slightlybias,8,Mon Jul 6 20:12:04 2015 UTC,You can use type to find out.  print(type(inF))
learnpython,3ccary,commandlineluser,2,Mon Jul 6 21:11:56 2015 UTC,"There's a built in function called type(). If you print out type(inf) it will tell you.   Also, if you need Web scraping help/ideas, you can check out the Web scraper I've been working on www.github.com/FreddieV4/VScraper"
learnpython,3ccary,Freddie_V4,1 point,Tue Jul 7 01:28:13 2015 UTC,"The short answer is no, it's not a string :)  Further to simply inspecting the exact type of the object by passing it to the type() function as others suggested, it's also a great idea to open a Python interpreter session (bpython and IPython are both great and add lots of features over the base Python interpreter).  Then, run all the lines in that script you've pasted to get the session going and, from within the session, interactively inspect it.  If you're using an interpreter with autocomplete, you can immediately see all the methods/properties it has available. Also, even if it's not a string, it may have a string representation (e.g. a useful result if you do str(inf))."
learnpython,3cdfni,GirlLunarExplorer,2,Tue Jul 7 01:25:38 2015 UTC,"unittest.__main__ is expecting the name of a module or class or test. tests.py is the name of a module or class in the tests module called py, but it obviously has no such thing. You can either run it as tests.MoveTests or just tests."
learnpython,3cdfni,raylu,1 point,Tue Jul 7 01:29:04 2015 UTC,"Ah ok, that makes sense."
learnpython,3cdv6i,luchavilla,1 point,Tue Jul 7 03:36:59 2015 UTC,You need to install numpy (and other modules) as follows before importing them:  Using pip:   pip install numpy   OR using easy_install:   easy_install numpy   There are other methods but these are the most convenient.
learnpython,3cdv6i,pwstraton,1 point,Tue Jul 7 03:52:12 2015 UTC,"I got ""SyntaxError: invalid syntax"", indicating numpy. when I used easy_install.   and   ""SyntaxError: invalid syntax"", indicating install as the incorrect syntax, when using pip."
learnpython,3cdv6i,elbiot,2,Tue Jul 7 04:07:04 2015 UTC,"Type it into your os command line, not the python interpreter.  Cmd is the command line on windows."
learnpython,3cdv6i,pwstraton,1 point,Tue Jul 7 04:40:10 2015 UTC,Jip sorry should have picked up that OP was using IDLE. These are to be entered into the command line.
learnpython,3catvo,cuducos,13,Mon Jul 6 13:37:35 2015 UTC,In setup.py you also need to specify packages=['getgist'].
learnpython,3catvo,kalgynirae,3,Mon Jul 6 14:19:19 2015 UTC,Hell yeah! That solved the issue : )
learnpython,3catvo,Sean1708,4,Mon Jul 6 16:53:32 2015 UTC,"I can't believe nobody's mentioned this yet but scripts is incredibly sub-optimal and I would strongly suggest you use entry_points instead. Basically the way you've done it will only work on *nix with Python2, whereas if you use entry_points it will automatically work on Windows and Python3 as long as your main project  does.  Essentially put a function in getgist.py like this:  def function_to_do_cli_stuff():     gist = Gist()     gist.save()   and replace scripts=['bin/getgist'], with:  entry_points={     'console_scripts': ['getgist = getgist:function_to_do_cli_stuff'] },   and it should work anywhere."
learnpython,3catvo,Sean1708,3,Mon Jul 6 19:43:26 2015 UTC,The newbie here had no idea about it! Gonna study a bit more and implement this enhancement. Thank you very much :)
learnpython,3catvo,SnowdogU77,2,Mon Jul 6 22:05:06 2015 UTC,"Thank you very much, /u/Sean1708  I studied it this morning and already adopted the entry_pointsapproach. Way better indeed!  If you don't mind, I added your username at the thanks part of the README.md at GitHub."
learnpython,3catvo,SnowdogU77,2,Tue Jul 7 17:32:13 2015 UTC,"That's perfectly alright, I personally find that there's not a lot of up-to-date tutorials on python packaging so I try to help out when I can."
learnpython,3catvo,SnowdogU77,4,Tue Jul 7 18:43:47 2015 UTC,"Make sure that pip is installing to the right version of Python. If you have both 2 and 3 installed, it could be that you're using the Python 3 installation of pip. Head on over to your Python 2 sitepackages folder and make sure the getgist wheel is there."
learnpython,3catvo,SnowdogU77,3,Mon Jul 6 13:47:33 2015 UTC,"EDIT  Maybe that's not the case.  $ ls -lh /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ | grep site lrwxr-xr-x    1 cuducos  admin    54B Jun 16 13:17 site-packages -> ../../../../../../../../../lib/python2.7/site-packages   I mean, the second directory listed by site.getsitepackages() seems to be a symbolic link to /usr/local/lib/python2.7/site-packages  Or am I completely wrong here?  ORIGINAL COMMENT  Nailed it! (or not, see edit)  But I don't know how to fix this pip issue. I use a Mac and have the native Python, Python 2.7.10 and Python 3.4.3 installed via brew. Any ideas for this newbie here?  Just in case, how I know that pip is installing the package in another directory:  $ python Python 2.7.10 (default, Jun 10 2015, 19:42:47) [GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import site >>> for dir in site.getsitepackages(): ...     print(dir) ... /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages /usr/local/Cellar/python/2.7.10/Frameworks/Python.framework/Versions/2.7/lib/site-python /Library/Python/2.7/site-packages >>> exit() $ pip install getgist Requirement already satisfied (use --upgrade to upgrade): getgist in /usr/local/lib/python2.7/site-packages $ which python /usr/local/bin/python $ which pip /usr/local/bin/pip"
learnpython,3catvo,campenr,2,Mon Jul 6 14:00:04 2015 UTC,"I'll take a look at your code when I get access to my computer, it looks like there may be an issue with how you're packaging your code."
learnpython,3catvo,campenr,1 point,Mon Jul 6 15:32:38 2015 UTC,"Ok, thank you very much!"
learnpython,3catvo,Samus_,2,Mon Jul 6 15:52:40 2015 UTC,"Disregard my deleted comment. Both the version on GitHub and the version from PyPy work fine in a Windows environment under Python 2.7. I'm not sure what to tell you, it must be an issue with your development environment."
learnpython,3catvo,DoTheEvolution,2,Mon Jul 6 16:31:50 2015 UTC,"Hey, /u/kalgynirae just solved the issue! Thanks"
learnpython,3cd479,Gay_Hat_On_Nun,3,Mon Jul 6 23:51:26 2015 UTC,"Your problem is that dict values are all integers, and inpoot is always a string, so you need to first convert each character to an int before you perform the comparison  Edit: Here's a re-worked version of your code, thought it might be helpful to see how someone else might solve the same problem."
learnpython,3cd479,echocage,2,Tue Jul 7 00:02:54 2015 UTC,"Ohhh, I didnt consciously recognize that my input would be a string, thanks for your explanation. Im always getting tripped up on small, seemingly insignificant things like this, hopefully it'll become less frequent with experience. Also, thanks for showing me the reworked code, although since im pretty new into python so a lot of that went over my head a bit here. I'll definitely take a look at it once again when I'm more experienced with Python and have a firmer grasp. Thanks!!"
learnpython,3cd479,elbiot,2,Tue Jul 7 01:16:58 2015 UTC,"The numbers from input are in a string.  Split the string to get a list and convert each item to an int.   numbers = [int(x) for x in inpoot.split("" "")]   That's a list comprehension.  I assumed your input is delimited by spaces."
learnpython,3cd479,echocage,1 point,Tue Jul 7 00:07:11 2015 UTC,"Just a heads up, str.split splits by whitespace by default, so you can leave it argumentless in this scenario"
learnpython,3cd479,elbiot,1 point,Tue Jul 7 00:21:05 2015 UTC,"Ahh, i didnt realize that. Im always making stupid, small errors like that. Thanks for your help!"
learnpython,3ce7xb,MuchDoctorWho,3,Tue Jul 7 05:43:14 2015 UTC,"Is the game played in a browser or on a command line, how python would interface with each would be fairly different.  If it's done in a browser you could look into selenium or ghost.py to simulate an actual human playing the game, get the element that contains the problem and parse it vs your table of possible answers, then insert the answer into a blank and submit the result.    If it is done in the command line I assume it would be something along the lines of subprocess or pexpect to read things from the command line and compare vs your answer table.  Keep in mind your teacher may want you to actually memorize this table and that is his goal.  While I'm pretty much 100 percent sure you could beat his game with Python it probably falls outside the scope of what he actually wants you to do.  Keep that in mind.  Not saying you shouldn't automate a solution, as that is a good learning exercise too.  It just may not be what your teacher wants you to learn."
learnpython,3ce7xb,Ceryn,1 point,Tue Jul 7 07:45:34 2015 UTC,"Your description is very confusing. Do you enter ""1/2"" or ""0.5"" or does it matter? If you ""press s"" then what? Is ""s3"" sqrt(3)?  There are a limited number of ""nice"" degree measures, you can probably make a pretty simple table to recognize them. This is one of the first images that came up after a quick Bing image search for ""Trig Table""."
learnpython,3ce7xb,unpythonic,1 point,Tue Jul 7 06:06:15 2015 UTC,"its like the trig table but only 15 possible scenarios. It only encompasses sin cos and tan;0,30,45,90. I apologize for the way I framed it. Heres a more full example.  Let's say I want to enter the value for Cos 45. The value of it is Sqrt(2)/2 I would input it as s2/2. I wouldnt be able to use decimal points to shorten it. inputing s merely adds the square root sign, where then you can continue on with the answer. does that help clarify things?"
learnpython,3ce7xb,unpythonic,1 point,Tue Jul 7 06:10:48 2015 UTC,Is this a speed thing? Is your teacher's goal to get you to memorize the trig table and you are trying to game the system by using Python to respond more quickly than a human could?
learnpython,3ccly9,pythonhelp123,2,Mon Jul 6 21:31:59 2015 UTC,print(find_area_square(number))    Did you mean to pass realNumber there?
learnpython,3ccly9,kalgynirae,1 point,Mon Jul 6 21:36:46 2015 UTC,"I tried putting realNumber, but   File ""C:         get_area = number*number     TypeError: can't multiply sequence by non-int of type 'str'"
learnpython,3ccly9,fireantss,1 point,Mon Jul 6 22:30:39 2015 UTC,"Oh, fixed it. I had to to change number to numbers in line 2."
learnpython,3cclbg,Nebucatnetzer,2,Mon Jul 6 21:27:22 2015 UTC,"You are correct; that function does wait 15 seconds between iterations (every time). However in tamagotchi.py on line 13, you can see that the function is being run in a thread. Threads can run simultaneously, so while in each thread the function only decreases the stats every 15 seconds, there are multiple threads running, each decreasing the stats.  edit: Notice a new thread is opened every iteration of the while loop in tamagotchi.py. You may want to move the thread opening to outside the loop."
learnpython,3cclbg,fireantss,2,Mon Jul 6 21:48:48 2015 UTC,Ah yeah of course that's why the values decrease faster the more I look at the stats. Thank you very much :)
learnpython,3cdmpd,wormholer,2,Tue Jul 7 02:23:50 2015 UTC,"Your browser is one of the best tools with which to learn Python. I understand that distractions can be distracting, perhaps it would be more valuable to learn how to block distracting web sites in Linux so that you have fewer distractions which would provide something valuable and teach you about system administration."
learnpython,3cdmpd,unpythonic,1 point,Tue Jul 7 02:39:29 2015 UTC,Thats kind of the flavor I got from the other thread. I'll call that a consensus of experts.
learnpython,3cdmpd,elbiot,1 point,Tue Jul 7 02:48:04 2015 UTC,"Write a script to manage your hosts file to redirect reddit, facebook, etc to localhost during certain times of the week."
learnpython,3cbgno,Strel0k,5,Mon Jul 6 16:41:20 2015 UTC,"Philosophy aside, a class is just a collection of related data and functions (called methods when they are part of a class). As an example, you could do something like this:  class WikipediaPage:     def __init__(self, page_name, lang='en'):         self.lang = lang         self.page_name = page_name         self._soup = None      def _get_soup(self):         url = 'http://{}.wikipedia.org/wiki/{}'         p = requests.get(url.format(self.lang, self.page_name))         self._soup = BeautifulSoup(p.text)      def get_toc(self):         if self._soup is None:             self._get_soup()         # bla bla bla         return toc_level1_list   And then you could do stuff like  en_page = WikipediaPage('coffee') es_page = WikipediaPage('cafe', lang='es') print(en_page.get_toc()) print(es_page.get_toc())   Of course this is a dummy example, it probably doesn't work, and doesn't check for any errors etc which it should.. but it shows the basics of how you could do this using a class. The self._soup part just shows one way you can ""lazily"" make the request when you actually need to get data from wikipedia (you could do self._get_soup() in __init__ instead, for example)."
learnpython,3cbgno,terminak,3,Mon Jul 6 17:26:45 2015 UTC,"It's a little challenging to work with your analogy. Let me try changing it up a little: A class is like a generic business model dedicated to producing a type of product or service. A function is the name of a service that the business provides. An instance of the class is a business that fulfills a marketing niche. So to work with your example a bit:  class MyScraper(object):     def __init__(self, url):         headers = {'User-agent':'Mozilla/5.0'}         page = requests.get(url, headers = headers)         self.soup = BeautifulSoup(page.text)      def get_table_of_contents(self):         toc_elem = self.soup.find('div', id = 'toc')         toc_level1 = toc_elem.find_all('li', class_ = 'toclevel-1')         toc_level1_list = [i.text for i in toc_level1]         return toc_level1_list   In this case:  MyScraper is a generic business model that provides web scraping services.  airplanes_r_us = MyScraper(""https://en.wikipedia.org/wiki/Airplane"") creates a new business that caters to all of your scraping needs for the airplanes wiki page.  get_table_of_contents is a service that this business provides.  Now what if you needed to find a company that scrapes the Bicycle wiki page? In that case you need to found a new business: built_4_two_inc = MyScraper(""https://en.wikipedia.org/wiki/Bicycle""). There you have a brand new company that caters to the Bicycle wikipedia scraping niche market.  Need the table of contents on the airplanes page? No problem: airplanes_r_us.get_table_of_contents(). The key here is that the business airplanes_r_us doesn't need to have soup passed into it; the BeautifulSoup object to parse the wikipage is an integral part of the airplanes_r_us business. Just like you wouldn't go to the gas station and tell them where to get your gas from. You just want your gasoline, you don't want to know how to manage the supply chain to pump crude, refine it, arrange transport, and fill the station's holding tanks. That's all part of their business (and they likely depend on other business to ultimately provide the service)."
learnpython,3cbgno,unpythonic,3,Mon Jul 6 18:10:43 2015 UTC,"example you gave doesn't lend itself to the use of classes (yet). You have something like a straightforward pipeline, url -> soup -> list_of_1st_level_tags which looks like a job for a chain of pure functions. Even if you wrote something similar in a class, you'd have methods doing largely the same stuff and returning/setting largely the same attibutes. In one of talks i've seen on youtube, related to good design practices, the speaker said that if you have a class that has init() and one method, the class is an overkill and nothing but an overdesigned wrapper around a function.  classes are supposed to represent some data that is tightly coupled with a bunch of functions doing various things. Take date/time data type - you could write specialized formatting for it, you could write custom math for it (intervals, today+x days), you could write timezone transformations. If your date was for calendar purposes you could also have a todo creation etc. That is a good candidate for a class because from the central object you can go in multiple directions depending on your need and context."
learnpython,3cbgno,Vaphell,1 point,Mon Jul 6 17:04:23 2015 UTC,Just make annotations to yourself  #like this   and let your future self know what your present self was doing.
learnpython,3cc3l2,Mluka,2,Mon Jul 6 19:23:57 2015 UTC,Give us you code snippet please
learnpython,3cbjf0,Megalolo8,3,Mon Jul 6 17:02:19 2015 UTC,"What music do you listen to, if any, while programming because I haven't found anything that can offer fresh and free low distraction music since grooveshark was shut down :p"
learnpython,3cbjf0,Cold_Bagel,2,Mon Jul 6 19:47:06 2015 UTC,"I use Milk on my phone and listen to the chill (non vocal) station. Basically anything classical or ""chill"" without vocals is nice for me."
learnpython,3cbjf0,kalgynirae,1 point,Mon Jul 6 20:32:13 2015 UTC,I like Nectarine Demoscene Radio.
learnpython,3cbjf0,davidwkaiser,2,Mon Jul 6 22:01:57 2015 UTC,"What is the best IDE for an advanced beginner (basically finished LPTHW, that's it)? PyCharm? Something else?"
learnpython,3cbjf0,StaticFuzz,1 point,Mon Jul 6 23:51:36 2015 UTC,"I would be interested in hearing this as well. I've only used the basic Python IDLE. I tried pycharm once, and didn't like it. I would like to extend your question to: which is a good IDE and why should I use it over any other option."
learnpython,3cbjf0,wub_wub,2,Tue Jul 7 01:43:57 2015 UTC,"It really depends on what features you need. PyCharm is awesome, but if you just need a place where you can write code with basic syntax highlight then pycharm is overkill.  As far as to why it's better, it has a lot of awesome features built in https://www.jetbrains.com/pycharm/features/  But again, it depends on what you need and what you're working on."
learnpython,3cbjf0,Voice_of_Internet,1 point,Tue Jul 7 08:37:45 2015 UTC,"PyCharm is great, but can take a little while to get a handle on. Recently I've found myself gravitating more towards Atom for smaller projects. Check out this tutorial for more info: http://www.marinamele.com/install-and-configure-atom-editor-for-python"
learnpython,3cbjf0,elbiot,1 point,Tue Jul 7 03:25:37 2015 UTC,"Eh, a text editor with syntax highlighting and ipython.  I started with less and this combo rocks it for me."
learnpython,3cbjf0,MLGsallados,1 point,Tue Jul 7 05:15:27 2015 UTC,"I don't think it's an ide, but Sublime Text 2 is fucking awesome."
learnpython,3cbjf0,capone153,1 point,Tue Jul 7 16:35:14 2015 UTC,"Is the time complexity of this function is o(len(x)+(len(y)+1)?  def simple(x,y):     z = filter(set(x).__contains__, y)     return x.index((z[0]))"
learnpython,3cbjf0,Nahnja,1 point,Mon Jul 6 18:36:12 2015 UTC,"o(len(x)+(len(y)+1) is missing a closing paren.    Assuming x and y are python lists:  def simple(x,y):     z = filter(set(x).__contains__, y) # set(x) iterates over x once, filter once over y -> len(x)+len(y)     return x.index((z[0])) # z[0] might not exist; index() has to iterate x until it finds z[0];      # so this adds anywhere between 1 and len(x) steps"
learnpython,3cbjf0,elbiot,2,Mon Jul 6 20:31:36 2015 UTC,"So, O(2x + y)?  Don't you assume worst case for things that might terminate sooner?"
learnpython,3cbjf0,Nahnja,1 point,Tue Jul 7 05:22:50 2015 UTC,"Well, no. I think you'd give a different answer for each case.  In any case, as /u/ingolemo points out, the time complexity grows linearly with the size of the arguments, so it's O(n)."
learnpython,3cbjf0,ingolemo,0,Tue Jul 7 07:01:13 2015 UTC,"I'm going to assume that you meant to use Big-O notation because that makes more sense here than Little-o. ;)  That function is linear in both of it's arguments (usually written O(x+y)).   You don't have to use len in Big-O notation because variables inside the brackets already implicitly refer to the lengths of the lists, and you don't have to add one because you usually only specify the parts that contribute the most time (O(x) and O(x+1) are the same thing)."
learnpython,3cbjf0,capone153,1 point,Tue Jul 7 00:02:45 2015 UTC,"I understand, so the 1 doesn't matter much. How about /u/elbiot's question above, isn't it O(2x+y) or the coefficient is also ignored and it is O(x+y) == linear?"
learnpython,3cbjf0,ingolemo,0,Tue Jul 7 05:49:39 2015 UTC,"Yes, the coefficient isn't needed either; 2x is just as linear with respect to x as just x.  I apologise. I kept the arguments separated for ease of explanation, but never actually got around to combining them. O(x+y) is not fully reduced. If you assume that x and y are equal then x+y would be written 2x. As we've seen above, this can be simplified to just x. In other words, this function is linear with respect to each of its arguments individually and it is also linear with respect to its arguments combined. By convention we call the variable inside the Big-O notation n rather than x, so the true complexity class of this function is O(n)."
learnpython,3cbjf0,capone153,2,Tue Jul 7 10:39:52 2015 UTC,Learned more about Big-O and your explanation makes a lot of sense. Thank you very much
learnpython,3cbjf0,benr_r,1 point,Tue Jul 7 15:50:19 2015 UTC,"I came across this github repo  with a program to control your Roku using python through a command line program. I noticed this does't work on windows due to the ""curses"" library being unavailable. I have been learning git/github lately and thought it would be fun to try to change the code to make a windows or portable version, but had some questions:   What would be the usual way someone would do this? I think it would be ""fork"", fix the code locally, push changes to my branch on github...? I verified this program works using my raspberry pi to run it through remote ssh from windows, but I'm not clear on what curses does or what need it fills that isn't available on windows. Also curious if learning curses is worth learning? My biggest pitfall in learning programming has been time-suck projects that take too much time."
learnpython,3cbjf0,terminak,1 point,Mon Jul 6 19:09:14 2015 UTC,"Yes, but really to your repository on github, which is the thing you fork (it can contain any number of branches). Definitely check out the Pro Git book to learn about this. Curses is a well-established library for making text-based user interfaces (""old-school DOS programs"" in common parlance). It is worth learning if you want to make text-based user interfaces, but there are alternatives (I haven't done this in 10 years or more though, not sure what is best these days).   That said, you could probably just install UniCurses on your windows machine to make it work."
learnpython,3cbjf0,benr_r,1 point,Mon Jul 6 20:21:14 2015 UTC,"Cool, I will check out Pro Git for sure."
learnpython,3cbjf0,Cold_Bagel,1 point,Mon Jul 6 21:02:36 2015 UTC,"How do i split a string within a list?  I want a list that looks like:  ['CP',  '94',  '2014081718',  '   ',  'BEST',  '0']    To look like:  ['CP',  '94',  '2014',  '08',  '17',  '18', '   ', 'BEST',  '0']"
learnpython,3cbjf0,kalgynirae,3,Mon Jul 6 20:36:29 2015 UTC,"You have to be a lot more specific than that. How do you know which string you want to split? Will the string always contain 10 characters? Do you just want the first 4 characters together and then pairs of 2 after that, or is there some other method you're using to decide how to split the string?  In general, the strategy for this sort of thing is to iterate over the list and add items to a new list:  old_list = [...] new_list = [] for item in old_list:     if ...:  # check whether item is something you want to split         split_pieces = ...  # split item into a list of pieces         new_list.extend(split_pieces)     else:         new_list.append(item)"
learnpython,3cbjf0,terminak,1 point,Mon Jul 6 22:10:10 2015 UTC,"Well it breaks down into splitting the desired string, and to insert the result back into the list. Inserting it in can be done using a list slice and you have several options for splitting. For example:  l = ['CP', '94', '2014081718', '   ', 'BEST', '0'] l[2:3] = l[2][0:4], l[2][4:6], l[2][6:8], l[2][8:10]   You could also do this with a regular expression, something like  import re l[2:3] = re.match('(....)(..)(..)(..)', l[2]).groups()   Both these depend on the l[2] contents of course. You could probably improve that regexp to do a repeating group, but I can't remember exactly how that works."
learnpython,3cbjf0,slick8086,1 point,Mon Jul 6 22:32:12 2015 UTC,I want to write a python program that monitors my Google hangouts account for certain messages and then parse those messages. The only python library I found was hangups and that doesn't seem like a library really.  Is there anything else.
learnpython,3cbjf0,elbiot,1 point,Mon Jul 6 23:01:59 2015 UTC,"What doesn't work about it? (No experience, just wondering)"
learnpython,3cbjf0,slick8086,1 point,Tue Jul 7 05:18:23 2015 UTC,Well it is a client program not a library
learnpython,3cbjf0,wub_wub,1 point,Tue Jul 7 06:57:53 2015 UTC,"As far as I know hangouts API is not public, so it's a bit harder to set up."
learnpython,3cbjf0,mack0409,1 point,Tue Jul 7 08:40:09 2015 UTC,"So I have a basic understanding of simple java tasks, I've noticed that in my brief time beginning to learn python that it is surprisingly similar to java in it's syntax. Are there any major differences you'd like to point out to me before I dive in head first?"
learnpython,3cbjf0,iammrinal0,1 point,Tue Jul 7 08:00:36 2015 UTC,"how to check if one of two strings exists in another longer string?  ex: check if ""2D"" or ""3D"" exists in a string.  Right now i am checking like this:  if ""2D"" in movie_name or ""3D"" in movie_name:   is there another way for this?"
learnpython,3cbjf0,Nahnja,2,Tue Jul 7 08:22:45 2015 UTC,"if any(substring in move_name for substring in (""3D"", ""2D"")):"
learnpython,3cbjf0,iammrinal0,2,Tue Jul 7 09:12:26 2015 UTC,thanks. as my set is smaller I think I will stick to my version. yours will help in the future for sure.
learnpython,3cbjf0,SleepyHarry,2,Tue Jul 7 10:32:33 2015 UTC,"If you've only got those two strings (in other words it will always be those two, never an arbitrary amount of them) I would argue that your current way is better than the one /u/Nahnja mentioned, because your way is a lot more readable, and it's far clearer at a glance what you're trying to do.  On the other hand, if there's any dynamism in the substrings, use /u/Nahnja's method."
learnpython,3cbjf0,iammrinal0,1 point,Tue Jul 7 10:10:26 2015 UTC,"yes, i figured. as my set is smaller I would use my version but in the future i will be using the other for sure.  and another query: i am trying to follow PEP8 to keep my code readable and at times i encounter with one issue. when using input()/print(), i often have to split lines and this messes the display.  a = input(""Which device(1,{0}) would you like notification be sent to?"".format(i + 1))   Now the above line exceeds 79 chars so i do this:  a = input(""Which device(1,{0}) would you like \             notification sent to?"".format(i + 1))   But when I run the script there's a tab between the words ""like"" and ""notification"" which I don't want. so how do i solve this?"
learnpython,3cbjf0,ingolemo,2,Tue Jul 7 10:39:50 2015 UTC,"You can break strings up and as long as there's nothing in between them python will automatically join them together:  a = input(""Which device(1,{0}) would you like ""     ""notification sent to?"".format(i + 1))"
learnpython,3cbjf0,iammrinal0,1 point,Tue Jul 7 10:47:27 2015 UTC,thank a lot!
learnpython,3cbjf0,ebbazara,0,Tue Jul 7 10:50:28 2015 UTC,"One or more of these codes writes out 9 words in the list ""namn"". Whish are they?   1. j = 0  *s = """"  *while j <= 9:      ----s += namn[j]      ----*j += 1  *print(s)  2. j = 1  *s = namn[0]  *while j < 9:      ----s += namn[j]      ----*j += 1  *print(s)  3. j = 1  *while j < 9:      ----print(namn[j], end="" "")     ----*j += 1  4. j = 0  *while j < 9:      ----s = namn[j]      ----print(s, end="" "")     ----j += 1  5. j = 0  *s = """"  *while j < 9:      ----s += namn[j]      ----*j += 1  *print(s)  Sorry for the writing. I really dont know how to do this! *= New line, -= Pulled in. Please also explain why thats the answer and how you knew it. :)"
learnpython,3cbjf0,Nahnja,1 point,Mon Jul 6 20:06:53 2015 UTC,"to write code add an empty line before and after each block of code and prepend an extra 4 spaces to each line.    namn = [""one"", ""word"", ""is"", ""just"", ""not"", ""ever"", ""enough"", ""don't"", ""you"", ""agree?""]  j = 0 s = """" while j <= 9:      s += namn[j]      j += 1 print(s)   Now to find out which of the examples produces the desired output, I'd just run them."
learnpython,3cbjf0,ebbazara,1 point,Mon Jul 6 20:24:57 2015 UTC,"I did, but it doesnt work. I might be missing something, but this is all the information i get in the question."
learnpython,3cbjf0,Nahnja,1 point,Mon Jul 6 20:31:58 2015 UTC,"I did, but it doesnt work.   Some of those will throw errors if len(namn) == 9.   I might be missing something   maybe the list namn with 9 words?"
learnpython,3cbjf0,ebbazara,1 point,Mon Jul 6 20:36:37 2015 UTC,"If I add the list, I only know where to put it if there is no: S = """" before while. Where should i put it?"
learnpython,3cbjf0,Nahnja,1 point,Mon Jul 6 20:42:24 2015 UTC,"At the very top of the program. Just like in the example above.    Surely whoever gave you the assignment has spent some time explaining to you how python works. If not, there's links to some tutorials in the sidebar, specifically the wiki."
learnpython,3ccw10,m1lkstar,2,Mon Jul 6 22:47:04 2015 UTC,"You're on the right track. However, I suggest changing your format slightly to make things simpler. Allow only one name per line of text, and don't surround the name with quotes. Then, for each line of text, everything before the first < is the name and everything after is a list of email addresses. str.split() will probably come in handy."
learnpython,3ccw10,kalgynirae,1 point,Mon Jul 6 23:14:55 2015 UTC,"Okay, I'll give that a shot. The reason I was trying to do it the way I was is because the end goal is to be able to do something like this on a large and poorly formatted set of emails and names."
learnpython,3ccw10,isxek,2,Tue Jul 7 01:07:19 2015 UTC,"Don't forget to close the file afterwards. You can add something like  emailFile.close()   at the end, or you can change this:  emailFile = open(""emailTst.txt"", ""r"")   to:  with open(""emailTst.txt"", ""r"") as f:     for line in f:         # search for the names and emails here   so closing the file is handled for you automatically."
learnpython,3cana5,campenr,1 point,Mon Jul 6 12:29:54 2015 UTC,"Sharing, not hi-jacking.  https://github.com/scrooloose/nerdtree"
learnpython,3cana5,inXiL3,1 point,Mon Jul 6 14:13:03 2015 UTC,"Haha, yes I figured something like this would already exist. Thank you for the link. My thought was that seeing as it was a defined problem that I could solve it would be good practice for me.  EDIT: Also the linked program would have limited use to me I believe as I am using my program on windows PC's for the most part. But still very interesting!"
learnpython,3cana5,sudoGaron,1 point,Mon Jul 6 14:21:34 2015 UTC,"Great job in getting something out there independently. Yes there may be other tools that do the exact same thing, but doing something on your own and being proud of your work is the best part.  keep it up."
learnpython,3cana5,adamnew123456,1 point,Mon Jul 6 15:20:14 2015 UTC,Thanks :D
learnpython,3cana5,ksantr,1 point,Mon Jul 6 15:28:41 2015 UTC,"Minor quibble:   [0] ...   The standard parent directory, at least on *nix (and I think Windows picked it up as well) is ...  Also, take a look at the readline module for super-powering your calls to input - you can do history and tab completion in your filters, for example."
learnpython,3cana5,raylu,1 point,Mon Jul 6 15:52:26 2015 UTC,"Ah, I use '...' as I am familiar with dots being used to represent the parent directory, but never bothered counting the number so thank you. Also I will look into the readline module."
learnpython,3cana5,raylu,1 point,Mon Jul 6 15:59:56 2015 UTC,"There are a lot if tools like this (bash tree for linux), but of course this don't mean that you should stop your work. Just do what you like."
learnpython,3cana5,Neceros,1 point,Mon Jul 6 17:37:43 2015 UTC,"http://blog.codinghorror.com/code-tells-you-how-comments-tell-you-why/ The filter_type handling can be refactored to only call os.listdir once. Abstracting filter_file_type seems unnecessary. Also, you should probably use splitext. user_input_file_type is unused. Why turn the file lists into dictionaries, only to get a set of the keys and sort them back into a list to index back into the dictionary? change_dir is... very confusing. Relying on '0' to be true and the other inputs to be converted to ints seems really odd. Converting all numeric inputs to ints and checking dir_number is False (or None) seems much better. (But if you choose to maintain the current behavior, this is the sort of thing that is worth commenting on - ""this function returns the string '0', an int of the index, or False.) Overall, the code style is very consistent, but maybe I missed something that pylint won't.   Some inspiration: ranger"
learnpython,3cana5,Neceros,1 point,Mon Jul 6 21:52:35 2015 UTC,"Thank you for all this! It is very useful and I appreciate you taking the time.  Regarding comment 3, I am unsure what you mean by abstracting? Do you mean it shouldn't be in it's own function? And thank you for the splittext idea, I was doing it the messy manual way so this is much better.  Regarding comment 4, the function isn't used by any other function, but this module is a selection of functions that I will utilize in other scripts so it will find use elsewhere.  Regarding comment 5, I used dictionaries in order to allow the user to select the key (value >0) in order to select the path to change to (the value). I extract the keys and sort them in order to sort the dictionary objects numerically according to the keys in order to display the dictionary in a consistent manner. This was my best solution for this. If you have any other suggestions I am open to them :D.  Regarding comment 6, the issue arises because I am using 0 for the topmost directory. I could change it so that the children are enumerated starting from 1 instead. I will think on this."
learnpython,3ccih1,Megalolo8,2,Mon Jul 6 21:05:57 2015 UTC,"Does the test directory exist? Make sure it exists in the working directory, which on windows is where you've installed python, ie  C:\Program Files\Python3\test   This probably isn't where you want it to be, so you may want to use an absolute path (like I've shown) to specify exactly where you want the directory to be.  You should also change  def addNewQlist(self):     pickle.dump(self.qlist,open(""test/""+self.name,""wb""))     open(""test/""+self.name,""wb"").close()   to use a variable to store the file handle. Even better, use a with block to ensure the file is closed automatically at the end of the with block even if something goes wrong:  def addNewQlist(self):     with open(""C:/Users/theo/Desktop/repeatTrainer/test/"" + self.name, ""wb"") as f:         pickle.dump(self.qlist, f)"
learnpython,3ccih1,fireantss,1 point,Mon Jul 6 21:23:03 2015 UTC,"Sounds like it can't find the file, so inside the same directory as the python file, there's a directory named test, and inside that there's a file named basicMath?"
learnpython,3ccih1,echocage,1 point,Mon Jul 6 21:23:26 2015 UTC,"I concur with other that the problem is that you haven't a test/ folder in the current working directory. (You can check what is your current working directory by using import os;print(os.getcwd()), usually it's where your script is located)  But that I want to add is that you really don't want to use pickle.  There is a big warning on top of pickle documentation  ( https://docs.python.org/3.4/library/pickle.html ):   Warning  The pickle module is not intended to be secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source.   Basically that means that if you unpickle unsafe string you can erase your hard disk.  A far better alternative is to use json.  The only draw back of using json is that you can only serialize json compatible data structure, which means string, int, float, boolean, None, list and dict (with string key) but that shouldn't be a problem for you."
learnpython,3cbk0k,cuducos,2,Mon Jul 6 17:07:10 2015 UTC,"The ""directory where the user types a command in the terminal"" is known as the current working directory (often just working directory). Relative paths are interpreted relative to the current working directory. So as long as you don't specify a full path, the file will be written to that directory by default. You don't need to try to figure out the directory at all."
learnpython,3cbk0k,kalgynirae,1 point,Mon Jul 6 20:42:58 2015 UTC,Thanks! That helped a lot this newbie here!
learnpython,3cbk0k,maxibaby,1 point,Mon Jul 6 21:19:57 2015 UTC,Maybe the problem is how you're downloading the file and where you're saving it.  Also: http://stackoverflow.com/questions/2632199/how-do-i-get-the-path-of-the-current-executed-file-in-python
learnpython,3cbk0k,t90fan,1 point,Mon Jul 6 17:14:10 2015 UTC,os.cwd() ?
learnpython,3cbk0k,babaduv,2,Mon Jul 6 17:17:02 2015 UTC,Do you mean   os.getcwd()   or  os.chdir()   ?
learnpython,3ccfyp,FrostySK,2,Mon Jul 6 20:48:05 2015 UTC,"Well, your program consists of three 'sub programs' executed right after each other (sequentially).  First, if you guess right it will keep outputting you won, because x never changes any more, but you are in a while loop that depends on x to stop.  Then the second while loop, once you entered this your program never goes back to the second. So as soon as you enter an x that is smaller or equal to the answer it will stop this ""sub-program"" (the loop). If the x is bigger, it will indeed ask again.  Once it's done with the second loop it enters the third. But it will never go back to check whether your answer (x) is again greater than the number to be guessed. So if you fill in a number that's bigger or equal to the number it exits this loop. After the third and last loop there's nothing to execute anymore, thus your program stops.  I hope that makes sense. Now can you think of a way to fix this? If not, I can give you a hint. :)"
learnpython,3ccfyp,FlockOnFire,1 point,Mon Jul 6 21:00:28 2015 UTC,yeah I know now whats wrong but Im making loops for the first time so small hint would be nice ... EDIT: just some hint(s). I want to make it work myself :P No Ctrl+C Ctrl+V
learnpython,3ccfyp,FlockOnFire,1 point,Mon Jul 6 21:07:31 2015 UTC,"Hint: you only need one loop and a few if/elif statements. :)  And to make sure you exit the loop once you are finished, you could keep track of a true/false variable (boolean) that changes when you have guessed the right number.   I hope you can fit that in with what you have learned up until now."
learnpython,3ccfyp,FlockOnFire,2,Mon Jul 6 21:11:15 2015 UTC,"wow, Im so proud of myself. Its not a complicated thing or hard to do but I managed to do it without searching on the internet how it should look like. It took me quite some time but I did it just with your hint. and it works !"
learnpython,3ccfyp,ASpeedyTurtle,1 point,Mon Jul 6 21:31:10 2015 UTC,"Awesome! And well searching the internet for clues is part of the job, especially when you dive in deeper. :) But when you start it's good to get a grasp of the basics like this, I guess."
learnpython,3ccfh9,aziannomness,1 point,Mon Jul 6 20:44:30 2015 UTC,"Consider moving some of your comments into docstrings:  def prompt_user(count=0):     """"""Welcome message and gather user input.     We are going to track how many times the user has played already and prompt accordingly.     """"""   thus users of your program can call help(prompt_user) and see something like:   Help on function prompt_user in module __main__:  prompt_user(count=0)     Welcome message and gather user input.     We are going to track how many times the user has played already and prompt accordingly.   prompt_user sometimes returns the user's answer to the question: Rock, Paper, or Scissors? and sometimes to the question: Would you like to play again (Yes or No)?. You have no way of distinquishing what happened. This is at least unusual. That way I can answer Would you like to play again (Yes or No)? with Rock which I would not have assumed.  I very much like your use of user_win_cases.  I lose if I choose the same as the AI. I don't think I should lose."
learnpython,3ccfh9,Nahnja,1 point,Mon Jul 6 21:19:11 2015 UTC,"Thank you so much for your input!  I can't believe that I forgot to handle a tie. I'm also glad you pointed out how a     prompt_user value of rock, paper, or scissor would be valid outside of 'yes' or 'no'."
learnpython,3ccfh9,fireantss,1 point,Mon Jul 6 21:30:58 2015 UTC,"Good work on your first program!  Consider breaking up the print statements (line 45 and line 48) into multiple lines, eg  print(""\n\nUser wins!"") print(""-"" * 10) print() print(""User Choice: ""+user_input.lower()) print(""Random Gen. Choice: ""+rand_input.lower())"
learnpython,3ccfh9,fireantss,1 point,Mon Jul 6 21:33:54 2015 UTC,"I was wondering if I should break those out or not.  Would you be able to explain exactly what benefits that would provide besides readability? I'm not opposed to breaking the print statements out (looking at it now it does kind of look overwhelming), I just want to know if doing so will have some other benefit down the road in future programs."
learnpython,3cazoc,Siiimoon,3,Mon Jul 6 14:29:36 2015 UTC,"More information would be useful. What is the specific error you get, and what are you expecting to get instead?"
learnpython,3cazoc,campenr,1 point,Mon Jul 6 14:33:08 2015 UTC,"I get ""global name 'Player' is not defined"".  I want to to do what the definition of the command the user inputs says. for example:   def Look():     print (Player.name + "" sees"" + scenery)"
learnpython,3cazoc,campenr,3,Mon Jul 6 14:37:07 2015 UTC,"Read the traceback and find out where the actual error is, (what time you mention Player is the error thrown) and work through the logic of your game, are you calling objects before defining them? Are you calling your functions/methods correctly?"
learnpython,3cazoc,maxibaby,3,Mon Jul 6 14:48:17 2015 UTC,"You're creating    Player = player()   inside a function, that makes it a local object. Then, you're calling those ""Actions"", for who doesn't exist the player."
learnpython,3cazoc,Iyajenkei,2,Mon Jul 6 17:26:18 2015 UTC,"I tried playing. I couldnt choose a race. I got no errors but when i typed a,b,c, or d and hit enter it just went right back to it. I even tried capitalizing."
learnpython,3cazoc,dunkler_wanderer,1 point,Mon Jul 6 18:00:37 2015 UTC,"You have to enter 'human' or 'elf'. /u/Siiimoon you should allow the letters as input as well.   BTW, function and variables should be lower case def my_function():, class names should be upper and camel case class MyClass(): and objects/instances lower case as well my_object = MyClass(). It looks pretty confusing at the moment. Take a look at PEP8."
learnpython,3cazoc,dunkler_wanderer,2,Mon Jul 6 19:47:07 2015 UTC,"Alright, will do! thanks for the input"
learnpython,3cbe5g,isnotkosok,1 point,Mon Jul 6 16:22:43 2015 UTC,">>> inventory = {'a': 1, 'b': ['some', 'stuff', 'here'], 'c': ['more','things']} >>> keys = [] >>> for k in inventory: ...     v = inventory[k] ...     if 'some' == v or (isinstance(v, list) and 'some' in v): ...         keys.append(k) ...  >>> keys ['b']   no idea why the 2nd example is supposed to be problematic."
learnpython,3cbe5g,Vaphell,1 point,Mon Jul 6 16:39:51 2015 UTC,"Isn't isinstance(v, list) too restrictive? It'll only work for lists and not for tuples or dictionaries. I'd rather use a try statement:  for key, value in inventory.items():     try:         if 'more' in value:             print(key)     except TypeError:         pass"
learnpython,3cbe5g,dunkler_wanderer,2,Mon Jul 6 16:54:39 2015 UTC,what does the 'try' do? and what does the 'except' portion do?
learnpython,3cbe5g,dunkler_wanderer,2,Mon Jul 6 17:48:22 2015 UTC,"The try will just try to execute the indented lines that follow it. If no error occurs, everything is fine and the program continues after the except clause. If a line causes an error, the program jumps to the next except and if the error type matches the error type specified after the except statement, the except clause is executed. In this case we just pass (do nothing and continue)."
learnpython,3cbe5g,dunkler_wanderer,1 point,Mon Jul 6 18:18:45 2015 UTC,thanks.
learnpython,3cbe5g,Vaphell,2,Tue Jul 7 02:48:28 2015 UTC,"BTW, a rule of thumb is to almost always provide a specific error type after the except like except TypeError:. A bare except: is very hard to debug, because it catches every error not only the one that you expected, even a KeyboardInterrupt. The same goes for except Exception.   And for a nice intro to exceptions visit Program Arcade Games."
learnpython,3cbe5g,kurashu89,1 point,Tue Jul 7 11:09:41 2015 UTC,"Isn't isinstance(v, list) too restrictive?   it is, i didn't try too hard ;-) One could add tuples and dictionaries the the check but i get what you are saying and you are right."
learnpython,3cbe5g,ecgite,1 point,Mon Jul 6 17:11:36 2015 UTC,Just use collections.abc.Container (omit the abc namespace for Python 2) and that'll do it.
learnpython,3cc8uy,SupahNoob,2,Mon Jul 6 19:59:22 2015 UTC,Have you tried either of:  ipCtrl.Hide() ipCtrl.Show()   ?
learnpython,3cc8uy,tripperjack,1 point,Tue Jul 7 21:15:56 2015 UTC,"That works, but I suppose what I don't understand is how to toggle that Hide/Show based on the Checkbox's value."
learnpython,3cc8uy,tripperjack,2,Wed Jul 8 04:37:56 2015 UTC,"Well,   checked_state = secondBridge.GetValue() if checked_state == True:     ip_Ctrl.Show() else:     ip_Ctrl.Hide()   Gets you partly there right? Now you just need a way to run that code whenever the user clicks that checkbox. So, go to the wxPython or wxWidgets docs and find the entry for this widget and look at what event methods it has. There should be a way to bind the widget to an event handler function. Let me give a toy example:  secondBridge.Bind(wx.EVT_WHATEVERTHEEVENT, OnCheckboxClicked)  def OnCheckBoxCkicked(event):      # run the code I gave above here   Helps?"
learnpython,3cc8uy,tripperjack,1 point,Wed Jul 8 14:49:35 2015 UTC,"Oh yes! I saw the bind command in someone else's code a few days ago and was playing around with it, but I never had all the pieces down. I'll try it again and see if I can understand it. Thank you so much for the help!"
learnpython,3cc8uy,tripperjack,1 point,Thu Jul 9 03:57:31 2015 UTC,"Alright, so I think I'm stuck again. This is what I have:  def Configure(self, ip = """", ip2 = """", port = """"):     panel = eg.ConfigPanel()                 ipCtrl = panel.TextCtrl(ip)              portCtrl = panel.SpinIntCtrl(port, min = 1, max = 65535)     secondBridge = panel.CheckBox(0, """")     secondBridgeCtrl = panel.TextCtrl(ip2)      secondBridge.Bind(wx.EVT_CHECKBOX, OnCheckBox())      def OnCheckBox():         checked_state = secondBridge.GetValue()         if checked_state == True:           secondBridgeCtrl.Enable()           print ""Enable""         else:           secondBridgeCtrl.Disable()           print ""Disable""      panel.AddLine(u'          I have a second bridge', secondBridge, u'IP Address:', secondBridgeCtrl)      while panel.Affirmed():                panel.SetResult(                       ipCtrl.GetValue(),          portCtrl.GetValue(),         secondBridge.GetValue(),         secondBridgeCtrl.GetValue()         )   And my problem now is, when I check the box, OnCheckBox() does not run. I've put in the print commands to verify this. Checking the box does not print Enable, and likewise unchecking the box doesn't print Disable. Where am I going wrong?"
learnpython,3cc8uy,tripperjack,2,Fri Jul 10 01:46:41 2015 UTC,"What happens if you change this:  secondBridge.Bind(wx.EVT_CHECKBOX, OnCheckBox())   To  secondBridge.Bind(wx.EVT_CHECKBOX, OnCheckBox)   And then this  def OnCheckBox():   To  def OnCheckBox(event):"
learnpython,3cc834,Hypogeum,1 point,Mon Jul 6 19:54:25 2015 UTC,"When you create the display StringVar, you do this:  entry_list = [] display = tk.StringVar() display.set("" "".join(str(item) for item in entry_list))   I suspect that you incorrectly think that the set call above will keep display in sync with the entry_list. It does not. The operation in the parentheses is performed only once in response to that call. After that if you want the two to remain in sync, you need to do that yourself. If you copy that line into your Calculator.calculate function, you should see it getting updated.  Also, you've got a StringVar called ""display"", confusingly however you also have a class method called ""display"". That class method is never called as near as I can tell. Also you should change this:      elif key in range(10):             entry_list.append(key)   to this:      elif 0 <= key < 10:             entry_list.append(key)   Some of the code you have has kind of a functional programming feel to it. Not sure if that's your background or not but samples like you have above look a lot like lazy evaluation that would be nicely handled in a language like Haskell or Clojure. In some areas of Python you need to be a bit more explicit."
learnpython,3capb8,loveandkindness,2,Mon Jul 6 12:50:16 2015 UTC,try iloc instead of loc.
learnpython,3capb8,manueslapera,1 point,Mon Jul 6 13:22:30 2015 UTC,"I seem to be making the same mistake with both methods. The following does not work nor generates an error,  import numpy as np import pandas as pd from pandas import Series, DataFrame  lvl0 = ['exp%i'%(i) for i in range(3)] lvl1 = ['cond%i'%(i) for i in range(5)] lvl2 = ['A', 'B']  tpts = range(100) cols = pd.MultiIndex.from_product([lvl0, lvl1, lvl2], names=['exp', 'cond', 'species'])  X = DataFrame(index=tpts, columns=cols)  arr = DataFrame(np.random.randn(10, 2), columns=['A', 'B']) X.iloc[:10, [0, 0]] = arr  X"
learnpython,3capb8,wastold2get2,1 point,Mon Jul 6 13:35:35 2015 UTC,"Found the line!  X.loc[:, ('exp0', 'cond0')].update(arr, raise_conflict=True)"
learnpython,3cb0fz,YuntiMcGunti,3,Mon Jul 6 14:35:43 2015 UTC,Try using mkproject.
learnpython,3cb0fz,im_gorideyourbike,2,Mon Jul 6 17:17:07 2015 UTC,"+1 to this. You can specify the base directory for projects by defining the $PROJECT_HOME variable in your shell. As well, mkproject takes any of the arguments of mkvirtualenv, like -p to specify a different version of python than default."
learnpython,3cb0fz,testeddoughnut,1 point,Mon Jul 6 18:11:04 2015 UTC,"Thanks that works brilliantly.  Is there a way to remove the virtualenv and the project at the same time, similar to rmvirtualenv  (rmproject didn't work)."
learnpython,3cb0fz,im_gorideyourbike,1 point,Mon Jul 6 19:15:03 2015 UTC,rmvirtualenv [env name] && rm -rf [project folder]
learnpython,3cbs8p,pvkooten,1 point,Mon Jul 6 18:05:50 2015 UTC,"Seems like it would be easy enough to write.  Enthought traits does this in a way, but probably not what you want."
learnpython,3cakid,Comm4nd0,3,Mon Jul 6 12:00:18 2015 UTC,"Do you want them specifically to be stored as variables? Because another option would be to store the items in a dictionary object e.g.:  gl_dictionary = {1: ""bread"", 2: ""Milk"", etc...}   to do this you can use pythons enumerate function to iterate over a list like so:  gl_dict = dict(enumerate(gl))"
learnpython,3cakid,campenr,1 point,Mon Jul 6 12:14:02 2015 UTC,"Ok i see what you're saying. i think dictionarys would be better idea too.  here is what i've got so far but it's not really outputting what i would expect...  print""Welcome to the MEAN calulator""  numbers = {} count = 1 how_many = input(""how many number do you want to add? "")  for i in range(int(how_many)):      num = raw_input(""Enter Number: "")      numbers[count] = dict(enumerate(numbers))     count += 1  print numbers"
learnpython,3cakid,campenr,2,Mon Jul 6 12:46:55 2015 UTC,"Enumerate takes a sequence as an argument and assigns a numeric value to each item in the list (see here). You then take the enumerated object and create a dictionary from it using the dict() function.  You seem to be trying to do this manually with a for loop and incrementing a counter. This is unnecessary, try:  how_many = input(""how many number do you want to add? "") numbers = dict(enumerate(range(int(how_many))))  print numbers"
learnpython,3cakid,snarkturne,1 point,Mon Jul 6 13:07:43 2015 UTC,hmm that code doesn't seem to have the desired effect.  What i'm trying to do is: ask how many numbers the user wants to add. ask for each number as many times as they said. add each number together and divide by 2.
learnpython,3cakid,thelemonpress,2,Mon Jul 6 16:34:12 2015 UTC,"This ?   n = int(raw_input(""Number of values ? "")) s = 0 for i in range(n):     s += int(raw_input('Value %d : ' % i)) print s/2.0"
learnpython,3cakid,korthrun,1 point,Mon Jul 6 17:17:00 2015 UTC,"perfect, thank you! can you explain how it works?"
learnpython,3cakid,zahlman,1 point,Mon Jul 6 17:27:59 2015 UTC,"actually, no need. i can see how it works.  thanks mate!"
learnpython,3cakid,snarkturne,2,Mon Jul 6 17:29:05 2015 UTC,"When you do  indiv[i] = food  You're trying to access (and write to) an array index that doesn't exist yet. Instead, write  indiv.append(food)  and ignore the counter variable i"
learnpython,3cbr2u,MrDysprosium,2,Mon Jul 6 17:57:53 2015 UTC,"list1[a] =  list1[a]**2   You're using global variables, watch out, that's not good for learning, nor understanding the essence of functions. Correct implementation:  x = input(""What number are we starting with?"") x = int(x)  def getlist(x):     list1 = []     for a in range(1,x+1):         list1.append(a)     return list1  def squarelist(local_list):      for a in range(0,len(local_list)):         local_list[a] = local_list[a]**2     return True      list2 = getlist(x) squarelist(list2)  print (list2)"
learnpython,3cbr2u,maxibaby,1 point,Mon Jul 6 18:01:11 2015 UTC,"updated, still didn't work :/"
learnpython,3cbr2u,maxibaby,1 point,Mon Jul 6 18:02:19 2015 UTC,"Holy smokes, I fixed it. You were right, that was part of the problem. Other part was my range went from 0, list1... when I should have done (0, len(list1))"
learnpython,3cbr2u,StaticFuzz,1 point,Mon Jul 6 18:04:12 2015 UTC,Yea updated my post
learnpython,3cbr2u,novel_yet_trivial,1 point,Mon Jul 6 18:08:21 2015 UTC,"EDIT: this is bad advice. For reference see u/novel_yet_trivial comment below  you don't need to specify 0 for range, it will start at 0 if no start point is added. range(start, stop, step). In this case range(len(list1)) would work."
learnpython,3cbr2u,StaticFuzz,1 point,Mon Jul 6 18:09:33 2015 UTC,Explicit is better than implicit (Especially for beginners).
learnpython,3cbr2u,py_student,1 point,Mon Jul 6 18:38:29 2015 UTC,Thank you for correcting me
learnpython,3cbr2u,py_student,1 point,Mon Jul 6 21:52:53 2015 UTC,"Go back and look at that error message. Some guys I have heard about still see it a pretty often even after a year of pythonning. Yeh, that's the ticket. These are noobs that I heard about. Those poor, clueless bastards.    You could skip the whole reference to the length of the other list, and use just range(x+1), since you already went to the trouble to name it. or just make x one bigger and reduce clutter, so range(x)    People don't seem to use x as a variable much in python. variables naming number values are usually named num, or i or j or int or num or bikes_sold or  daily_interest or something.     I don't think it's a rule, but it's something you'll be seeing.    There's this thing where you'll see people use just an underscore for a throwaway variable. I think that's for some special purpose, though, and is tsk-tsked  when used inappropriately. Since I don't know when it's ok, I just don't do it at all. Cept when nobody is looking. Even then I don't, because holding shift and reaching way up there to the end of the top row is two hard things, and so two more than I am going to do if there's a way around it."
learnpython,3cbr2u,babaduv,1 point,Mon Jul 6 18:43:21 2015 UTC,"You're using global variables, watch out, that's not good for learning, nor understanding the essence of functions. Correct implementation:   I'm not so sure this is exactly right. He is declaring variables in the global namespace, a very normal thing to do. My understanding is that the problems arise when you use the global keyword to allow local values to change the global ones. A thing not to be done lightly in most programs, but something that works just fine under the right conditions.    In this first scrap, a is declared in the global space, but we don't use the global keyword:    a = 'A' def f():     a = 'B'     print('in here a is {}'.format(a)) f() print('out here we think a is {}'.format(a))  #which, if you run it, produces: >>>  in here a is B out here we think a is A   The function can use the variable, but it doesn't change it. I am not aware of any danger in that.    But in this second one, we do use global, and I believe this is what people usually mean by 'using global variables' as a bad thing.    def e():     global a     a = 'C'     print('in e(), a is {}'.format(a)) e() print('hmmm. a seems to be {} out here too.'.format(a))  #when you run this, you get a different result     in e(), a is C hmmm. a seems to be C out here too.     This is often recommended as something to not do, because if you have different functions altering variables in different order and in unpredictable (by humans) order, you get difficult to trace bugs.    -checking my understanding. Python noob here. Corrections welcome."
learnpython,3cbr2u,babaduv,1 point,Mon Jul 6 22:59:53 2015 UTC,"I don't get why you're telling him to write  for a in range(0,len(local_list)):     local_list[a] = local_list[a]**2   It's way simpler to just write  for a in liste:     print(a)     a = a**2   Seems like a very bad habit to me"
learnpython,3cbr2u,kalgynirae,1 point,Mon Jul 6 18:37:27 2015 UTC,"Tried that. Got:  ""IndexError: list index out of range"""
learnpython,3cbr2u,maxibaby,1 point,Mon Jul 6 20:05:28 2015 UTC,"Can you give me your whole code ? Because this means for each element, referred as a, in the list, square it.  Edit:  Just tested it right there :  >>> liste = [1,2,3,4,5,6,7,8,9,10] >>> for a in liste:     a = a**2     print(a)  1 4 9 16 25 36 49 64 81 100   meeeeeeeeeeeeeh  Edit:  did u need something like this ?  def squarelist(liste):     liste2 = []     for a in liste:         a = a**2         liste2.append(a)     return liste2   Edit:  Got what you were looking for. I feel like my post is 100% embarassing :|"
learnpython,3cbr2u,babaduv,1 point,Mon Jul 6 20:42:15 2015 UTC,Because the first modifies local_list while the second doesn't.
learnpython,3cbr2u,Vaphell,1 point,Mon Jul 6 20:48:25 2015 UTC,That's how you would do it in any language. The other is the pythonic way. Not necesarrily better nor worse.
learnpython,3cbgg9,whymitchellwhy,2,Mon Jul 6 16:39:58 2015 UTC,"Check this script: http://kodeando.ga/descomprime-todos-los-zip-en-una-carpeta/  It allows you to recursively unzip all ZIP inside a folder, and in the folders inside. Might help you."
learnpython,3cbgg9,maxibaby,2,Mon Jul 6 17:08:16 2015 UTC,if and elif conditions. instead of item you should check filePath (full path)
learnpython,3cbgg9,04h,2,Mon Jul 6 17:16:24 2015 UTC,"Got it in one, thanks very much!"
learnpython,3cbe7q,warriortux,2,Mon Jul 6 16:23:13 2015 UTC,"Well, the chief problem is that you are replotting the entire figure each time, when you should really just hold the axis and add a new point.  If you really want a fast animation then I would recommend blit (part of matplotlib). See stackoverflow for details, e.g.  here."
learnpython,3cbe7q,burning_hamster,1 point,Mon Jul 6 19:29:39 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3cacrv,Comm4nd0,4,Mon Jul 6 10:13:40 2015 UTC,"p_weapon = input(""choice: "")   don't use input(), always use raw_input() and explicitly convert to int. It was a bad idea to let the input() function be ""smart"" which carries significant security risks because of how it's done. Smartness of input() is gone in python3.  don't use identity to test numbers (if x is 3),. It works sometimes but only because of the implementation details under the hood but there is no guarantee. Use == for value comparison instead.  options could be mapped to weapon choice with dictionary  weapon = { 1: 'rock', 2: 'paper', 3: 'scissors' } choice = int(raw_input()) if choice in [1,2,3]:     print 'weapon of your choice is {}'.format( weapon[choice]) else:     print 'bad choice'"
learnpython,3cacrv,Vaphell,1 point,Mon Jul 6 10:40:45 2015 UTC,"sometimes you put a space between print and "" and sometimes you dont. you spelled compared wrong in your note. I'm very new so thats all I got lol"
learnpython,3cacrv,Iyajenkei,1 point,Mon Jul 6 18:04:50 2015 UTC,"Good Start!  Here's a couple recommendations...  1) Read up on the DRY principle https://en.wikipedia.org/wiki/Don't_repeat_yourself  When you find yourself copy-pasting if statements take a step back and see if you can capture your logic in a single set of rules.  Here's one way to re-write who wins...  def who_wins(p_weapon, c_weapon):      # dictionary formatted as... weapon: weapon_it_beats     win_list = {2:1, 3:2, 1:3}      if win_list[p_weapon] == c_weapon:         winner = 1     elif win_list[c_weapon] == p_weapon:         winner = 2     else:         winner = 0      return winner   Also note that I removed the print statements.  I would put that in it's own function.  Bonus points for figuring out a way to do it using only one print statement.  2)  There's room to throw at least one class in here.  Doing so would greatly improve readability and remove redundancies.  Here's an incomplete example...  class Weapon():      def __init__(self, name, number):         self.name = name         self.number = number      def set_defeats(self, weapon):         self.defeats = weapon      def wins_against(self, weapon):         return self.defeats == weapon  rock = Weapon('rock', 1) paper = Weapon('paper', 2) scissors = Weapon('scissors', 3)  rock.set_defeats(scissors) paper.set_defeats(rock) scissors.set_defeats(paper)  print rock.name print rock.number print rock.defeats.number  p_weapon = rock c_weapon = scissors  if p_weapon.wins_against(c_weapon):     print 'Player wins!'   Now we can return rock's name or number by using rock.name or rock.number.  The code is easier to read because p_weapon isn't 1... p_weapon is a rock.  Also using classes creates a reusable structure of code.  We could extend our code to perhaps play rock paper scissors spock lizard with a few minor revisions instead of practically rewriting the entire program."
learnpython,3cacrv,aball730235,1 point,Mon Jul 6 22:03:21 2015 UTC,"Don't repeat yourself:       In software engineering, don’t repeat yourself (DRY) is a principle of software development, aimed at reducing repetition of information of all kinds, especially useful in multi-tier architectures. The DRY principle is stated as “Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.” The principle has been formulated by Andy Hunt and Dave Thomas in their book The Pragmatic Programmer, coauthored with Dennis Ritchie and Francisco Granados. They apply it quite broadly to include “database schemas, test plans, the build system, even documentation.”  When the DRY principle is applied successfully, a modification of any single element of a system does not require a change in other logically unrelated elements. Additionally, elements that are logically related all change predictably and uniformly, and are thus kept in sync. Besides using methods and subroutines in their code, Thomas and Hunt rely on code generators, automatic build systems, and scripting languages to observe the DRY principle across layers.     Relevant: Ruby on Rails | Django (web framework) | Abstraction principle (computer programming)   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3cbcmp,loveandkindness,1 point,Mon Jul 6 16:11:17 2015 UTC,"The following seems to fix the problem, more details here.  lvl0 = ['exp%3i'%(i) for i in range(30)] lvl1 = ['cond%3i'%(i) for i in range(11)] lvl2 = ['A', 'B']  tpts = range(100) cols = pd.MultiIndex.from_product([lvl0, lvl1, lvl2], names=['exp', 'cond', 'species'])  X = DataFrame(index=tpts, columns=cols)  print X.columns.lexsort_depth  # Prints 3"
learnpython,3cbbj6,Elthran,1 point,Mon Jul 6 16:02:59 2015 UTC,What error do you get?
learnpython,3cbbj6,xiongchiamiov,1 point,Mon Jul 6 16:20:54 2015 UTC,">>> import datetime as dt >>> dt.datetime.now() + dt.timedelta(seconds=5) datetime.datetime(2015, 7, 6, 19, 53, 15, 514911)"
learnpython,3cbbbs,TanAndBlonde,2,Mon Jul 6 16:01:33 2015 UTC,"I don't know the answer,  but I assume you have to handle them within the thread/process that raises them.  Maybe return some value to the main process to indicate that there was an error and what to do about it."
learnpython,3cbbbs,elbiot,1 point,Tue Jul 7 05:29:21 2015 UTC,"I'm curious about this as well, I find it very bad that all errors inside multiprocessing pools are hidden, and extremely hard to handle elegantly"
learnpython,3c95yx,PumaPortal,7,Mon Jul 6 01:43:43 2015 UTC,"Pretty new to Python myself, so I'm right there with you man. Something I noticed, you have the exact same code written in three places:  print""Would you like to play again?"" answer=raw_input(""Yes or no?"") if answer.lower()==""yes"":     os.system('clear')     rps() else:     print ""Thanks for Playing!""     print ""Wins: "", pw     print ""Loses: "", cw     print ""Ties: "", ties   You could define all that code in a function at the top and then call that function in each of those places instead of repeating the code. This way if you want to make any changes you only have to change it in one place."
learnpython,3c95yx,ANeonBlueDecember,4,Mon Jul 6 02:17:17 2015 UTC,"Cool script! I like how you let the user play as many times as they want.  A few thoughts:  -Globals variables like pw and cw aren't the best ideas. It makes it hard for other code to use your code, and makes your code less flexible. Try defining them inside the rps() function and instead of recursion (that is, calling rps()), use a while loop or similar.  -Use more descriptive variable names. pw doesn't mean anything to anyone in the world but you. wins, losses, ties is better - any readers immediately know what it's for - you don't even have to add the ""#Win Totals"" comment! (Note that computer wins is the same as losses).  -It's cool that you accept both rock and ROCK from the player - great idea!  -For the computer guess, you can use random.choice([""rock"", ""paper"", ""scissors""]) instead of dealing with numbers. That way, you won't have to keep track of which is which - the logic is the same between humans and computers. Also, now you can remove that if statement and just say print(""Computer guessed "" + computerguess + ""!"")  -I see what you're assigning pg = playerguess - I guess that's because pg is just shorter to type? Variable name brevity is a good thing, but not at the expense of losing readability. If you find yourself typing the same thing over and over, you probably have some functionality that can be extracted into a function (like /uANeonBlueDecember) said.  -Your logic to determine if it's a win/loss/tie is pretty confusing. You can use a dictionary to make it easier to read (and write!), like this  wins_over = {     ""rock"": ""scissors"",     ""paper"": ""rock"",     ""scissors"": ""paper"" }   If you don't know what a dictionary is yet, basically it's a mapping from a set of values to another set of values. If you do wins_over[""rock""], you get ""scissors"". You can think of it like a huge if/elif/elif statement but cleaner (also much much faster). Also, it would be helpful to have playerguess exactly one value, even if you accept more than that. What I mean is set player_guess = input(""What's your move?"").lower(). Now you don't have to call lower() every time, just use the variable player_guess. So now you can do something like   if wins_over[player_guess] == computer_guess:      print(""You win!"")  elif wins_over[what goes here?] == what goes here?      print(""You lose!"")  else:      print(""Tie!"")   Much better!  -Finally, notice that no matter if the player wins, loses, or ties, you ask them if they want to play again. That's a sign that logic shouldn't be within if/else/elif clause, but after it entirely. Might be confusing since I told you to switch to a while block - I'll outlay the function here.  def rps():      # define win total variables here      keep_playing = True      while keep_playing:          # clear the screen          [The code to play here]          [Print out You win, You lose, or Tie]          play_again = raw_input(""Do you want to play again? (yes/no)"")          if play_again == ""no"":              keep_playing = False      [print out total wins/losses/ties]   Some more things you can do:   what if the player enters ""ijfwef""? Do you want to throw an error, count it as a loss for the player, or ask the player again?  Try to implement a few variants (http://www.samkass.com/theories/RPSSL.html). What's the least code you need to change to do each variant (hint: what data structure decides whether a move is a win or not)? Can you give the option to the player to decide which variant the player wants to play?    Good luck! Let me know if you need more clarification."
learnpython,3c95yx,deathofthevirgin,1 point,Mon Jul 6 03:53:29 2015 UTC,"I appreciate the comments and help! My question back is what do i do if a player enters and incorrect string. Maybe I haven't gotten to it yet, but it feels like it would be and neverending loop of if/else inside and if"
learnpython,3c95yx,KronenR,1 point,Mon Jul 6 07:37:42 2015 UTC,"You could do something like this:  while not answer in wins_over.keys():     answer = input(""get input"").lower()      Same for yes and no:  while not answer in ['yes', 'no']:"
learnpython,3c95yx,deathofthevirgin,1 point,Mon Jul 6 08:23:46 2015 UTC,"Pretty much this - you said the word ""loop"" in your comment - so you probably want a while or for (loop). while is more appropriate here. Just one thing - that solution will NameError if you don't define answer beforehand, so you can set something like answer = None beforehand so it will go through the loop at least once. This is like a do-while if you come from Java."
learnpython,3c95yx,__skrap__,1 point,Mon Jul 6 08:38:18 2015 UTC,"Instead of global variables and recursion I prefer a while loop.  You should stick with more descriptive variable names (player_guess not pg).  Python is not a static typed language.  By using descriptive names it helps when reading the code (later by you, or by someone else).  Using .lower() is a good idea, but if you do player_guess = player_guess.lower() before your if block you will not have to type player_guess.lower() each time.  I'm assuming that is why you are using pg instead of player_guess.  Instead of random.randint use random.choice:  rock_paper_scissors = ('rock', 'paper', 'scissors') computer_guess = random.choice(rock_paper_scissors)  # simplifies your computer guessed print out section alsl print 'Computer Guessed {}'.format(computer_guess)   If you want to stick with random.randint use a dict:  rock_paper_scissors = {     1: 'rock',     2: 'paper',     3: 'scissors', } random_number = random.randint(1, 3) computer_guess = rock_paper_scissors[randome_number]   edit - also, most python programmers write their code adhering to a style code found here - https://www.python.org/dev/peps/pep-0008/"
learnpython,3c95yx,jeans_and_a_t-shirt,1 point,Mon Jul 6 03:34:22 2015 UTC,"ties=+1 should be ties += 1.  Otherwise your max wins, losses, and ties are never more than 1.  Put spaces on each side of ='s and =='s when setting variables and when checking in if/elif/else.  That big if/elif/else can be shrunk to:  if (player_guess.lower(), computer_guess) in [ ('rock', 1), ('paper', 2), ('scissors', 3) ]:     ties+=1     print ""Its a tie!"" # numbers here were 2,1,2.  should be 3,1,2 if (player_guess.lower(), computer_guess) in [ ('rock', 3), ('paper', 1), ('scissors', 2) ]:     pw+=1     print ""You WIN!"" else:     cw+=1     print ""You LOSE!"""
learnpython,3c95yx,campenr,1 point,Mon Jul 6 03:55:19 2015 UTC,"First note is that I am guessing you don't mean to have  And Paper Cuts Rock!   My other thing (and I am coming from a beginner background myself) is that functions should do one thing well. Almost your entire program is defined within one large function. I would split your rps() function into smaller functions. For example I would put the while loop in its own function and loop over rps(), e.g.  def rps(): # Game logic, what combination wins, loses, ties. def play(): # Run the game     while True         # clear the screen, prompt user for input         rps()         # Prompt user if they want to play again, if they don't return False to exit the loop  # Display first time message play()   Something else to consider is how you will eventually deal with incorrect user input, whether it's a typo or intentional. Python encourages easier to ask for permission than forgiveness (EAPF), which is something you should read up on. In your program this would involve wrapping your input calls in try/except statements to catch predicted invalid inputs, without breaking the game."
learnpython,3cb741,fuzzyfractal42,2,Mon Jul 6 15:28:30 2015 UTC,The csv module comes with Python. If you're getting that error it suggests that you have created a file named csv.py and Python is importing that ahead of the actual csv module.  If this is the case -- you'll have to delete that csv.py file along with the csv.pyc file too.
learnpython,3cb741,commandlineluser,1 point,Mon Jul 6 15:52:49 2015 UTC,Indeed I did! That was the issue. Thanks!
learnpython,3cb741,campenr,2,Mon Jul 6 15:55:03 2015 UTC,"Try running pip3 with the verbose option(-v). This will provide more information, and may indicate what's wrong.  EDIT: Now that I think about it, CSV is a core python3 module... does importing it not work? Why are you trying to install it?"
learnpython,3cb68f,degaussing,1 point,Mon Jul 6 15:21:23 2015 UTC,"Try out this. Its free and gives you a lot of info: http://www.pythonlearn.com/book.php Download it on you smartphone and use it, or you can order it in amazon. There is free MOOC course using this book, and professor ""Chuck"" in my opinion is the best in teaching python for the beginners. Try it out."
learnpython,3cb68f,Bunyod,1 point,Mon Jul 6 15:38:00 2015 UTC,I like the Head First books. They have as well one for Python. http://www.headfirstlabs.com  However they are a bit special and if you're already quite experienced in programming then you probably need to look for something else.
learnpython,3cc993,MrCocaCola,1 point,Mon Jul 6 20:02:02 2015 UTC,What os ? What do you enter exactly (copy paste) ?
learnpython,3cc993,snarkturne,1 point,Mon Jul 6 20:10:02 2015 UTC,"Windows 8.1  here: PS C:\Users\zeinab> pip install pyglet Traceback (most recent call last):   File ""C:\Python27\Scripts\pip-script.py"", line 9, in <module>     loadentry_point('pip==1.5.6', 'console_scripts', 'pip')()   File ""C:\Python27\lib\site-packages\distribute-0.6.49-py2.7.egg\pkg_resources.py"", line 345, in load_entry_point     return get_distribution(dist).load_entry_point(group, name)   File ""C:\Python27\lib\site-packages\distribute-0.6.49-py2.7.egg\pkg_resources.py"", line 2381, in load_entry_point     return ep.load()   File ""C:\Python27\lib\site-packages\distribute-0.6.49-py2.7.egg\pkg_resources.py"", line 2087, in load     entry = __import(self.module_name, globals(),globals(), ['name'])   File ""C:\Python27\lib\site-packages\pip\init_.py"", line 11, in <module>     from pip.vcs import git, mercurial, subversion, bazaar  # noqa ImportError: cannot import name git"
learnpython,3cc993,snarkturne,2,Mon Jul 6 20:15:18 2015 UTC,"The directory : C:\Python27\lib\site-packages\pip\vcs should contain several files : git.py mercurial.py ... ..  line 11, in <module> from pip.vcs import git  tries to import git.py which should be in pip\vcs but it fails : ImportError: cannot import name git  Please, double check... didn't you delete files in this directory ? My pip/vcs directory contains : bazaar.py   git.py   _init_.py  mercurial.py   subversion.py  and .pyc file..."
learnpython,3c9qnq,Scholes_SC2,3,Mon Jul 6 05:08:01 2015 UTC,"This is just an over simplified, fairly poor example. In practice you would not be creating a generator with this behaviour. I'm guessing that the point of the example is more about syntax/structure and to illustrate to you the way a value is ""yielded"" instead of ""returned""."
learnpython,3c9qnq,korthrun,4,Mon Jul 6 05:23:15 2015 UTC,"You are right. In python2 you should use xrange() instead. In python2 it's generally a good idea to use xrange() wherever possible.   python3 range() returns a generator instead of a list    This is correctish. The xrange() function from python2 was renamed range() in python3 (and the old range() was depreciated). However, it's not a pure generator, since it's indexable and has a length. It's a generator with flair. Don't be fooled, this is a lie(ish):  Python 3.4.0 (default, Jun 19 2015, 14:20:21)  >>> from types import GeneratorType >>> isinstance(range(10), GeneratorType) False"
learnpython,3c9qnq,novel_yet_trivial,2,Mon Jul 6 05:21:44 2015 UTC,"I'm pretty sure the 2.x xrange did return a generator, and that 3.x range is thus not a simple renaming, but an enhancement. I don't have 2.x installed to check, though."
learnpython,3c9qnq,zahlman,1 point,Mon Jul 6 13:16:36 2015 UTC,"We can argue technicalities, but xrange() definitely does not return a 'generator' class.  Python 2.7.9 (default, Mar  1 2015, 12:57:24)  >>> a = xrange(10) >>> type(a) <type 'xrange'> >>> a.next() Traceback (most recent call last):   File ""<stdin>"", line 1, in <module> AttributeError: 'xrange' object has no attribute 'next' >>> len(a) 10 >>> a[2] 2   A true generator has a next() method, has no len and is not subscriptable. xrange() is a generator from a mechanistic point of view, but that's it."
learnpython,3c9qnq,novel_yet_trivial,1 point,Mon Jul 6 13:27:50 2015 UTC,Does xrange have .index and .count methods?
learnpython,3c9qnq,zahlman,2,Mon Jul 6 13:35:29 2015 UTC,"I don't believe so:      Python 2.7.9 (default, Dec 10 2014, 12:24:55) [MSC v.1500 32 bit (Intel)] on win32     Type ""copyright"", ""credits"" or ""license()"" for more information.     >>> xrange.index      Traceback (most recent call last):       File ""<pyshell#0>"", line 1, in <module>         xrange.index     AttributeError: type object 'xrange' has no attribute 'index'     >>> xrange.count      Traceback (most recent call last):       File ""<pyshell#1>"", line 1, in <module>         xrange.count     AttributeError: type object 'xrange' has no attribute 'count'"
learnpython,3c9qnq,SleepyHarry,1 point,Mon Jul 6 15:26:46 2015 UTC,"Okay, so I guess that's all that was enhanced then."
learnpython,3c9qnq,zahlman,1 point,Mon Jul 6 16:15:52 2015 UTC,"def count(self):     return 1   Edit: ok on further thought it would have to be (slightly) more complex:  def count(self, num):     return int(num in self)"
learnpython,3c9qnq,novel_yet_trivial,1 point,Mon Jul 6 18:42:45 2015 UTC,"Yes, but it means conforming to the sequence protocol, which allows for using it in more places without unexpected hiccups."
learnpython,3c9qnq,zahlman,1 point,Tue Jul 7 04:05:16 2015 UTC,"Python 3 does indeed use a generator for range, as described in the docs:   The advantage of the range type over a regular list or tuple is that a range object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the start, stop and step values, calculating individual items and subranges as needed).   And not every generator needs a range of integers to be defined. For example, you could also read something from a file and use a generator to only get the next few bytes/lines when needed."
learnpython,3c9qnq,FlockOnFire,3,Mon Jul 6 05:15:57 2015 UTC,"Python 3 does indeed use a generator for range, as described in the docs[1] :   This is incorrect. range in Python 3 is a ""Sequence type"", as described in the docs here and here  The relevant part for those who don't want to click through is:   Range objects implement the collections.abc.Sequence ABC, and provide features such as containment tests, element index lookup, slicing and support for negative indices"
learnpython,3caara,Elthran,2,Mon Jul 6 09:43:04 2015 UTC,What is the error that you get?  You're doing quite a lot of unnecessary work here. You only need to loop through the list once to do this and you won't be needing a try/except. You might be interested to know that lists have an extend method that is useful here.
learnpython,3caara,ingolemo,1 point,Mon Jul 6 11:13:21 2015 UTC,"I read the extend method and it made zero sense to me. I will try to mess around with it, thanks!"
learnpython,3caara,ingolemo,0,Mon Jul 6 15:18:15 2015 UTC,"You give it a list and it adds the contents of that list onto the end of the current one.  >>> my_list = [1, 2] >>> my_list.extend([3, 4]) >>> my_list [1, 2, 3, 4]"
learnpython,3caara,ingolemo,1 point,Mon Jul 6 15:45:40 2015 UTC,Thanks! Extend seems super useful.
learnpython,3caara,ingolemo,1 point,Mon Jul 6 16:04:15 2015 UTC,"Thank you very much! It makes a lot of sense and I think I learned a lot by doing it with extend. My code seems neater. I'm still 100 characters too long, no idea how I could possibly dream of shortening it.  http://pastebin.com/Qnf8W9Nj"
learnpython,3caara,xcombelle,0,Mon Jul 6 16:25:11 2015 UTC,"If i is a list then you don't want to extend n by i, you want to extend it by the flattened version of i (flat_list(i)). Do that and you can get rid of the c variable entirely.  You might want to use variables names longer than one letter that actually convey what you're doing. For example; a could be nested_list, n could be result, and i could be item."
learnpython,3caara,ingolemo,1 point,Mon Jul 6 16:46:46 2015 UTC,"Yes! But for this puzzle, they count characters. So I need to use as short as possible variable names and even minimize white-space. :'("
learnpython,3caara,Justinsaccount,1 point,Mon Jul 6 17:04:28 2015 UTC,"Here is the best I can do, but I need to make it 6 characters shorter (4 if I use 2.7 and change flat_list to flatten):  def flat_list(a):     n = []     for i in a:         try:             n.extend(flat_list(i))         except:             n.append(i)     return n"
learnpython,3caara,deathofthevirgin,0,Mon Jul 6 17:09:00 2015 UTC,"I see.  The simplest way to save those characters would be to rename the function to f.  There's a whole bunch of techniques you can use to make this code shorter but, past this point, doing so goes against the principles of good coding style so I don't really want to explain them to you. You very quickly end up with unreadable messes like this:  f=lambda a:[b for i in a for b in(f(i)if type(i)==list else[i])]"
learnpython,3caara,rawrnnn,1 point,Mon Jul 6 17:44:13 2015 UTC,"The only problem is that the function name can't change because I need to submit it and it gets called by this name. And I'm a math teacher learning coding as a hobby, so I wouldn't bother abusing any shortcuts. I prefer writing it long and clearly (not the best way, but easiest for me). I just want to figure out how to pass this Checkio course because I'm completely stumped how to make it 6 characters shorter considering I can't change the function's name."
learnpython,3casfe,MrDysprosium,6,Mon Jul 6 13:22:42 2015 UTC,Write a function if you want somehow reuse your code later
learnpython,3casfe,04h,1 point,Mon Jul 6 13:25:36 2015 UTC,Is that really it? I appreciate your answer!
learnpython,3casfe,04h,2,Mon Jul 6 13:36:31 2015 UTC,I think so
learnpython,3casfe,TankorSmash,1 point,Mon Jul 6 14:25:32 2015 UTC,"Yup, that's all you need. If you think you're going to use it more than once, and both places won't change functionality, a function's the perfect tool for the job.  There's nothing special about functions at all, so use em liberally until you get a feel for what's right."
learnpython,3casfe,campenr,3,Mon Jul 6 13:53:28 2015 UTC,"To add my 2 cents, I put things in functions because I like modularising my code. Not only because I can reuse bits, but because if I want to replace a part, or improve it I can simply rewrite a specific function. If the input and output of the new function remains the same as the old function, just the insides rewritten, then it will not break the rest of my code."
learnpython,3casfe,p10_user,1 point,Mon Jul 6 14:31:48 2015 UTC,"Good to hear others do this as well. I've been doing this recently, and have a whole second file full of functions I import for use in my main script."
learnpython,3casfe,EqualsEqualsTrue,1 point,Mon Jul 6 14:42:35 2015 UTC,Do you usually embed all your functions in one .py file or use a separate file for functions and import it in your main program?
learnpython,3casfe,campenr,2,Mon Jul 6 15:17:00 2015 UTC,I haven't written much python so I would instead direct you to this about project structure in python.
learnpython,3casfe,tyggerjai,1 point,Mon Jul 6 15:28:18 2015 UTC,I like this explanation. Thank you.
learnpython,3casfe,80sKid,2,Mon Jul 6 17:41:10 2015 UTC,"Keeping it clear is not a bad reason. But later, you'll probably want to do the same thing more than once in separate parts of your code. If you find yourself writing the same chunk more than once, or cut-and-pasting a few lines to duplicate functionality, that should be a function.   But even before repetition, a discrete chunk that does one thing should get its own function. It's not uncommon to have functions to initialise various things - data, or peripherals, or pieces on a chess board, or whatever. You can split that out into a function, even if it happens only once, because that's a discrete thing. A single piece of functionality, again, is a function."
learnpython,3ca6fs,Elthran,1 point,Mon Jul 6 08:37:47 2015 UTC,"To clarify, I'm adding 0.5 seconds each loop to the clock and extraTime (which is our time difference multiplied by 0.5) each loop to the broken clock."
learnpython,3ca6fs,WisherBG,1 point,Mon Jul 6 08:38:34 2015 UTC,"Why don't you try using datetime (probably especially timedelta) since that is what the mission description actually suggests? I know this doesn't really answer your question, but it could be better for your learning process."
learnpython,3c9ep6,nhsb1,2,Mon Jul 6 03:06:10 2015 UTC,"Do you really need all these functions that just return something immediately? Also, huge if-else block. And Java-style naming. Keep it simple and you'll get a nice clean script. Some examples here: https://github.com/genych/getstockinfo/commit/7da8e227c7c2d2f6d2a1900f76bb50291bbd44c4"
learnpython,3c9ep6,04h,1 point,Mon Jul 6 12:45:29 2015 UTC,"Thank you for taking the time to look through it and provide the examples and explanation.    Regarding the functions - I was taking what was in the Learn Python the Hardway examples, as well as the  Yahoo-Finance module code as kind of my basis for the functions.  Would the guideline be something more like, ""Don't put it in a function if it's not reused, and is short?""   Requiring the file name really cuts down the if-else block, and cleans thing up.  Thanks!  Regarding the Java-style naming - could you elaborate?  Are you referring to the camelcase, or what is there something Pythonic I'm overlooking?"
learnpython,3c9ep6,04h,2,Mon Jul 6 21:46:29 2015 UTC,"About functions. There are big difference between  def get_days_high(self):     return self.data_set['DaysHigh']  def get_days_low(self):     return self.data_set['DaysLow']   Example from https://github.com/lukaszbanasiak/yahoo-finance/blob/master/yahoo_finance/__init__.py  and  def getDayHigh(self):     return self.get_days_high()  def getDayLow(self):     return self.get_days_low()   Example from your code  In first case it's user-friendly interface to some json data. User can call mystock.get_days_high() and get result.  In second case it's interface to… interface? Now user (or you, programmer) should write getDayHigh(mystock) to get same result.  That's why I think most of the functions in your code are unnecessary wrappers around wrappers. And that's why I removed timeStamp, marketClosedReport, runtimers and others  About naming. Yeah, there are (almost) no place for camelCase in python: https://www.python.org/dev/peps/pep-0008/#prescriptive-naming-conventions"
learnpython,3c9ep6,elbiot,1 point,Tue Jul 7 12:10:58 2015 UTC,I think you meant to make this a class.  Your functions all take self and should be methods instead.  You can use self instead of global too.  class StockInfo(object):      def __init__(self):         self.start_time = time.time()      def elapsed_time(self):         return time.time() - self.start_time   use it like:  stock_info = StockInfo() time.sleep(1) print stock_info.elapsed_time()
learnpython,3c7fpj,GenericHbomb,5,Sun Jul 5 16:22:48 2015 UTC,"The next time you come across a big elif chain like that, consider using a dictionary instead:  months_dict = {'01': 'Jan', '02': 'Feb', ..., '12': 'Dec'}  # this can be defined once, before the for loop month = months_dict[split[1]]   In this case, as the keys are just numbers, you could build the dictionary with enumerate instead:  months_list = ['Jan', 'Feb', ..., 'Dec'] months_dict = dict(enumerate(months_list, 1))  # the 1 tells it to start numbering from 1 instead of 0 month = months_dict[int(split[1])]  # you need the int() so that it interprets the string '01' etc. as a number   Hybrid approach which complicates the creation of the dict a little bit:  months_list = ['Jan', 'Feb', ..., 'Dec'] months_dict = {str(n).zfill(2): month for n, month in enumerate(months_list, 1)}  # dict comprehensions are fun! month = months_dict[split[1]]    Cunning use of generators like enumerate, and comprehensions, are some of the cornerstones of idiomatic python."
learnpython,3c7fpj,blackrat47,1 point,Sun Jul 5 21:10:49 2015 UTC,"It took me a while to make it through the last one. I'm starting to see the flexibility of them, just waiting for that ah-ha moment I think"
learnpython,3c7fpj,commandlineluser,4,Sun Jul 5 23:54:58 2015 UTC,"To convert month number to name you could use the datetime module instead of the if/elif chain.  >>> from datetime import datetime >>> datetime.strptime('04', '%m').strftime('%b') 'Apr'   https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior  For building paths you can use os.path.join().  >>> import os >>> os.path.join('foo', 'bar', 'baz') 'foo/bar/baz'   https://docs.python.org/3.3/library/os.path.html#os.path.join  The final value of the count variable you have will be the same as len(fileNames).  Not sure what exactly your filenames look like but there may be a nicer way to extract the parts you want instead of using re.findall(r""[\w']+"", f)."
learnpython,3c7fpj,commandlineluser,2,Sun Jul 5 16:52:45 2015 UTC,Thanks for the tips! One of the big things I didn't like was the size of the elif chain  Yea the filenames are all structured this way 2015-01-01 23.18.42.jpeg  I haven't made to the part of my book that works will files so there was a lot of googling for the parts that work with filenames
learnpython,3c7fpj,RobinL,2,Sun Jul 5 17:19:54 2015 UTC,"2015-01-01 23.18.42.jpeg   Ah okay. There are a couple of ways you could approach it, you could do it with manual split() calls.  >>> f = '2015-01-01 23.18.42.jpeg' >>> f.split() ['2015-01-01', '23.18.42.jpeg'] >>> f.split()[0] '2015-01-01' >>> f.split()[0].split('-') ['2015', '01', '01']   Then use datetime to get the month name. It probably makes more sense though to just parse the whole thing with with datetime. Something like:  >>> f = '2015-01-01 23.18.42.jpeg' >>> date = datetime.strptime(f.split()[0], '%Y-%m-%d') >>> year, month = date.strftime('%Y %b').split() >>> year '2015' >>> month 'Jan' >>> os.path.join('source', year, month) 'source/2015/Jan'"
learnpython,3ca6hh,Verbais,2,Mon Jul 6 08:38:35 2015 UTC,"To get the value of a tkinter var, you need to use the .get() method."
learnpython,3c8om1,Iyajenkei,5,Sun Jul 5 23:02:54 2015 UTC,"Screen scraping tpb is doable, but other sites already do that and sort of provide an api.  You would be better just reading json from something like  http://metasearch.torrentproject.com/torrenttojson4.php?site=thepiratebay.se&search=python&output=json"
learnpython,3c8om1,Justinsaccount,1 point,Mon Jul 6 00:34:46 2015 UTC,where did you get that? :o
learnpython,3c8om1,Tuganazy,1 point,Mon Jul 6 00:37:25 2015 UTC,developer tools when doing a search on that site. They have json views for a ton of sites.  Don't feel too bad.. I wrote something a while back to scrape TPB and THEN found that site. would have saved me bunch of time.  All you need after that is to run transmission-daemon and use http://pythonhosted.org/transmissionrpc/  You just need to generate a magnet link from the hash and call add_torrent
learnpython,3c8om1,Justinsaccount,2,Mon Jul 6 00:52:59 2015 UTC,"You showld be looking for BeautifulSoup documentation, it's really makes things easy on what comes to searching html, that showld set you up with doing the search on piratebay and getting the link to the .avi  Don't forget to post the code when you start so people can advice from there to"
learnpython,3c8om1,Tuganazy,1 point,Mon Jul 6 00:12:33 2015 UTC,Thanks guys I've already learned some new things by looking into what you've given me.
learnpython,3c8om1,gameplace123,1 point,Mon Jul 6 16:21:29 2015 UTC,"FWIW, I don't like the idea of scraping sites that have RSS feeds. thepiratebay's RSS feeds seem to not be working."
learnpython,3c8om1,Semj,1 point,Mon Jul 6 20:51:21 2015 UTC,"So if I was going to do this I would use the selenium webdriver module. Basically it lets you take the browser if your choice (Firefox, chrome, Safari, etc.) and automate behavior. So like go to the pirate bay, enter whatever text is in a variable in a search bar, and then click the links and read results. It's really cool and not that hard to use. You also want to look into passing in command line arguments (using sys.argv) so that you can do   ./script.py ""movie name"""
learnpython,3c8om1,deathofthevirgin,3,Mon Jul 6 00:08:31 2015 UTC,Don't use selenium for this - it'll be way too slow/unnecessary complex compared to an API.
learnpython,3c8jmh,HouseofTea,3,Sun Jul 5 22:17:35 2015 UTC,Remove all the time.sleep.
learnpython,3c8jmh,Justinsaccount,1 point,Mon Jul 6 00:36:46 2015 UTC,The reason I put all those in was because without them the whole thing seemed very jerky.  I guess its better not to be slow and jaggy though
learnpython,3c8jmh,Scoutdrago3,2,Mon Jul 6 00:39:50 2015 UTC,"If you wanted to, you could use raw_input where you have those pauses with questions, you wouldn't need to import anything. But then you would have to find a way that if they enter a negative, the program skips whatever they said no to, whether it would be the whole game or just a piece. It may add quite a bit of code, but it's a good lesson on usability and functionality, even if it's on such a small scale, such as your dice rolling game."
learnpython,3c8jmh,Ran4,2,Mon Jul 6 02:16:34 2015 UTC,"That's a very good start!   Do put everything into a function (either one main() or multiple smaller functions), and call it using if __name__ == ""__main__"": main() or similar. Why shorten ""you"" in umoney instead of just ""yourMoney"" or ""playerMoney""? Same thing applies to mlose, that's a terrible variable name. I'm assuming it means moneyLose (the fact that I can't be certain of this is a flaw in your code): that would be a much better name. Though moneyLost makes more sense. choice = -1 works fine, of course, but choice = None would be more Pythonic. Your code is already fairly well formatted, consider reading the PEP-8 and following it at least semi-religiously. What if choice is not ""0"" or ""1""? While not really needed, it might be a good idea to make this more explicit. Even if you don't want anything special to happen, I would have added something like  else:     pass   just to make it explicit that you're not doing anything. Explicit is better than implicit. In fact, do read through The Zen of Python."
learnpython,3c8jmh,uttamo,1 point,Sun Jul 5 23:08:18 2015 UTC,What's the reason behind this?
learnpython,3c8jmh,Scoutdrago3,1 point,Sun Jul 5 23:12:09 2015 UTC,Behind which point?
learnpython,3c8jmh,uttamo,1 point,Mon Jul 6 02:18:03 2015 UTC,The first point about putting it under main() and the if statement of name = main
learnpython,3c8jmh,Scoutdrago3,4,Mon Jul 6 02:19:44 2015 UTC,"Because if you were to import it on another program, then it would just run the imported program rather than only allowing the programmer to use functions and classes in the imported program. Basically, it just makes sure that at run time, you're running the main program, and not just some other imported programs. So unless you plan to run the imported program with the main program, then make sure you use if ""__name__"" == ""__main__""."
learnpython,3c8jmh,status_quo69,2,Mon Jul 6 02:29:53 2015 UTC,"Because python runs all code at the global level at parse time. So by adding the name=='main' part, you restrict the execution of the code if you import the module elsewhere. It's good practice."
learnpython,3c8jmh,xcombelle,1 point,Mon Jul 6 02:22:40 2015 UTC,Thanks for all the good advice and links!  I will make sure to take them to heart and change the code accordingly
learnpython,3c8jmh,Vinniesusername,2,Mon Jul 6 00:40:36 2015 UTC,"Not bad at all for a first day  instead of using variables such as umoney, utotal, ugain use ttotal, tdie1 use two dict you initialize before you use it like this user={} and bank={} and use after initialization like this user[""money""]=100, user[""money""] += user[""gain""]  dict are a great way to group related variables"
learnpython,3c6ypp,saabr,9,Sun Jul 5 13:09:16 2015 UTC,"When you preface a value with ' or "", the Python interpreter assumes that everything that follows until the next occurrence of the same character is part of a string. So If you were to execute print('doesn't'), Python would assume that 'doesn' is a string, but it wouldn't understand the t', and return an error.  There are two standard ways around this.  Firstly, you could use the fact that ' and "" are entirely interchangeable operationally in Python, so you could make the expression print(""doesn't""), which would output doesn't. Once it reads the "", it considers everything that follows (including ') to be part of the string until it encounters the "" character again.  Alternatively, you can use a \ immediately before the ' that occurs between the n and the t, to tell the interpreter to accept the ' in question as part of the string, and carry on until it meets a ' which isn't escaped. Hence print('doesn\'t') also displays doesn't.  Understanding these ideas should clarify what is happening in each of the cases you presented.  But, this then raises the question of how one would include a \ as part of string. The answer is simple: just escape the escape character! Two \ in a row tells the interpreter that the second \ is simply part of the string. So print('slash\\ed') will print slash\ed.  Finally worth noting is that the 'escape' character can be used before certain 'normal' characters to indicate a special character. Probably the most obvious example would be \n, which indicates a newline character (basically like hitting the enter key). So print('new\nline') will display: new line  Edit: I used the term 'return' incorrectly like an idiot, have corrected. Incidental PSA: return and print are absolutely NOT the same thing!!!"
learnpython,3c6ypp,callmelucky,1 point,Sun Jul 5 13:51:34 2015 UTC,"So \n doesn't mean escaping n, it means new line. How to escape n?"
learnpython,3c6ypp,callmelucky,7,Sun Jul 5 14:07:05 2015 UTC,"Well, you don't need to escape n; if an n is encountered between quotation marks it will be assumed to be part of the string. To escape \n, however, you would of course just throw a \ in front of it. So print('\\n') would return \n.  Sorry, while I'm at it I should just correct myself on a side note; I have been using the term 'return' to mean 'display a string to the console', when 'return' actually means something very specifically different from that in programming, and I feel like a jackass for possibly leading people towards confusion, I will edit my post now to fix this..."
learnpython,3c6ypp,Miner_Guyer,1 point,Sun Jul 5 14:19:13 2015 UTC,"I don't think there would be a need to escape n, because unlike other symbols, (', "", \) it doesn't mean anything on its own. It's just a letter."
learnpython,3c6ypp,BenjaminGeiger,1 point,Sun Jul 5 14:20:13 2015 UTC,"""Escape"" is unfortunate terminology. Instead of ""escape"", think ""flag"". You're flagging the next character to tell Python that it means something different.  Unflagged quote means the end of the string. Flagged quote means a literal quote.  Unflagged n means a literal n. Flagged n means newline."
learnpython,3c6ypp,nspectre,3,Sun Jul 5 20:33:32 2015 UTC,"[\Ramble Mode: ON]  ""Escape"" simply means to escape out of normal logic/processing flow. It's an old-school computing and telecommunications term with a specific meaning.  It's a notification to whatever is doing the processing to NOT process the following information as it normally would, but to instead ""escape"" out of normal processing and handle things differently.    For example, here in this comment, if I want to surround a word with four asterisks, I can't. Because Reddit's interpreter will process the asterisks as the symbols for Bold,  **WORD**   prints as, WORD  So I have to ""escape"" out of normal processing with the back-slash Escape character.  \*\*WORD\*\*   Which prints out as, **WORD**    An early familiar ""escape sequence"" to many folks may be +++ sent to a modem as a notification to the modem to escape out of normal processing, stop transmitting characters, enter ""Command State"" and interpret any subsequent characters as instructions to the modem, itself.  +++ATH0   for example, would hang up the phone line instead of sending those seven characters out to the other modem.  [\Ramble Mode: OFF]"
learnpython,3c6ypp,adamnew123456,3,Sun Jul 5 21:30:18 2015 UTC,"Adding onto /u/A_TROUBLED_WALRUS, you can also use escapes to encode special characters in addition to escaping quote marks:  >>> print('One line\nAnother line') One line Another line >>> print('Unicode Pi: \u03c0') Unicode Pi: π >>> print('Unicode Lambda: \N{GREEK SMALL LETTER LAMDA}') Unicode Lambda: λ"
learnpython,3c6ypp,adamnew123456,1 point,Sun Jul 5 13:54:43 2015 UTC,"Unicode Lambda: λ   How did you do that? If I specify a symbol in caps, will it print for me?"
learnpython,3c6ypp,A_TROUBLED_WALRUS,3,Sun Jul 5 14:08:44 2015 UTC,"It's a part of the Unicode database - you can look up a list of Greek Unicode symbols, for example, and each has a ""Character Name."" If you give Python this character name (escaped properly), then it will translate it for you.  But it is very specific - for example, I tried \N{GREEK SMALL LETTER LAMBDA} only for Python to throw an exception - it turns out that \N{GREEK SMALL LETTER LAMDA} is the correct form. It is very picky, but it is a very nice way to specify a character."
learnpython,3c6ypp,cdcformatc,2,Sun Jul 5 14:29:38 2015 UTC,"It just means that next character should be treated as part of the string. If you just wrote  print('doesn't') The string would only include the 'doesn' part. So all the \ does is say that ""the next character is not marking the end of the string, keep reading""."
learnpython,3c6ypp,FrostySK,1 point,Sun Jul 5 13:28:15 2015 UTC,"Let's just take a look at the string 'doesn't'  'doesn't' ^start of string 'doesn't'       ^end of string 'doesn't'        ^??   If you just type this without the escape, python starts the string at the first ' and ends it at the second ' the rest of the word is cut off. The escape character changes the meaning of the next character to not mean ""end of string"" but just another printed character.   You can use either single or double quotes to start strings in Python so you can avoid having to escape most of the time but you will need to watch out.   When you start a string with ' you need to escape any 's that are in the string, and if you use "" you need to escape the ""s.  print('""Isn\'t,"" she said.') print(""\""Isn't,\"" she said."")   Now this causes a problem, what if you want to put a \ in the string? It us used to modify the next character, how can I print it? That's easy, just escape it!  print('He\\She said yes.')"
learnpython,3c6ypp,cdcformatc,1 point,Sun Jul 5 19:29:38 2015 UTC,whats the Alt code for single quotes ??
learnpython,3c6ypp,FrostySK,1 point,Sun Jul 5 20:45:15 2015 UTC,Single quote is an apostrophe ' the alt code is ALT 39.
learnpython,3c6ypp,lc929,1 point,Sun Jul 5 21:16:47 2015 UTC,thanks
learnpython,3c6nhw,vmsmith,10,Sun Jul 5 09:56:38 2015 UTC,"Why is that, when in each case I specify the same errMsg?   logging.exception() is specifically designed to be used in an exception handler, and it retrieves the current exception information by calling sys.exc_info() and uses that to add the stack trace to the log.  print() only converts the exception object into a string.   Is there some sort of mapping or description of the various error numbers?   The mapping is platform-specific.  The numbers could vary from system to system.  You can see a list here of the numbers for FreeBSD.  The mapping will probably be the same for the first dozen or so errors across various Unix-like systems.  You shouldn't be using IOError at all.  Starting around Python 3.3, IOError was subsumed by OSError, and OSError grew subclasses for each specific type of error.  Look at the exception hierarchy — see how OSError has subclasses like FileNotFoundError?  FileNotFoundError corresponds to ENOENT, so if you want to handle the case that corresponds to ENOENT, you should write except FileNotFoundError as e: not except IOError.  IOError was kept around as an alias for OSError, but you should not use it.  Catch the specific subclass of error that you're prepared to handle.  They did this precisely because IOError is so useless in that it covers a huge swath of potential error conditions and only gives you this unfriendly error number which might vary from system to system."
learnpython,3c6nhw,Rhomboid,1 point,Sun Jul 5 10:22:40 2015 UTC,"Ah...so the number 2 does not imply it is the second error (of some number n)  related to FileNotFoundError...it's that FileNotFoundError is the second error in the entire list of errors. Got it. That makes much more sense. Thanks!  Actually I know OSError has replaced IOError. I'm relatively new to exceptions, and that was just sloppiness on my part. Thanks for making an issue of it. I will be sure to use correct and current terminology from here on. Thanks again."
learnpython,3c6nhw,deathofthevirgin,4,Sun Jul 5 11:00:20 2015 UTC,"1 - Let's say you have a class, Person, and the only attribute is a first name. Try entering this into a REPL or interactive mode.  class Person(object):     def __init__(self, name):         self.name = name  person = Person(""Roger"") print(person) # outputs  <__main__.Person at 0x7fa6507ea5c0>   Well, that's not very helpful. One thing that can help is implementing the str interface - that is, a way to tell the program ""Hey, this is how to turn me into a string, if you want to."" In the Person class, define     def __str__(self):         return '<Person ' + self.name + '>'   Now print(Person('Roger')) prints <Person Roger>. Much better.  In Python, when you do except Exception as error, error is an object, an instance of the Exception class - and the Exception class implements the str interface - and whoever wrote the class decided that the message should be what's printed out when you call print(). But you're handing the entire object to logging.exception, and presumably that method doesn't call str - and it probably uses the traceback module or similar sys.exc_info to get the error's full stacktrace.  2 - According to https://docs.python.org/3.5/library/exceptions.html#OSError, it comes from the C error code. At https://docs.python.org/3.5/library/errno.html#module-errno it gives you a list of all the errors and a dictionary (errno.errorcode) for lookup."
learnpython,3c6nhw,deathofthevirgin,1 point,Sun Jul 5 10:17:32 2015 UTC,Incredibly helpful. Thanks!
learnpython,3c8zom,capone153,2,Mon Jul 6 00:45:25 2015 UTC,"As /u/Justinsaccount said, the complexity is O(N2) (coefficients are dropped in big-O notation).  If you want to make this faster, you can try using sets. Sets are unordered, have no duplicate elements, but are very fast to look up/do set operations. Since a string is just a list of characters, you can turn it into a set of characters with the set function.  To lookup, use the in statement: if letter in x_set: print(""Found!"")  Note that building the set from a list (a string counts as a list, kind of) takes O(len(y)) time, since you have to add each letter to the set, lookups are O(1) time amortized (see https://en.wikipedia.org/wiki/Hash_table).  You should be able to get this down to O(len(x) + len(y)) (or assuming they're the same, O(N))."
learnpython,3c8zom,deathofthevirgin,1 point,Mon Jul 6 03:12:25 2015 UTC,"Ah, right. For some reason I was thinking a full set creation was log2n, but that is a tree.  One still has to be use a dictionary in order to get the indexes, or  flip the problem around and check if any of the x chars are in y and use enumerate over x ( but then you have to handle duplicates by removing the char from the set the first time it is found)"
learnpython,3c8zom,Justinsaccount,2,Mon Jul 6 03:51:10 2015 UTC,"i think this original solution is best, using a dict instead of a set, same complexity to build but I can look up the index with o(1) in a dict. With a set, I have to go back to the original string to look up the index with o(n)."
learnpython,3c8zom,deathofthevirgin,1 point,Mon Jul 6 18:57:47 2015 UTC,"Not really. Once you found a letter in y that's also in x, you can issue a find() on x - that's O(len(x)), so it won't increase the complexity. Creating the dictionary is O(len(x)) as well, but  you're only using it once - so it will likely be slightly less efficient than just doing a find."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 04:07:13 2015 UTC,But calling the O(Len(x)) find for each letter in y means the result is back to O(Len(y)*Len(x))  Imagine if x was 'a' * 10000000 + 'bcdefghijk' and y was 'abcdefghijk'
learnpython,3c8zom,deathofthevirgin,1 point,Mon Jul 6 04:50:39 2015 UTC,"If you look at the original example, the OP just wants the first index of the first character that matches. If you wanted all of them (or anything more than just one), your way makes more sense then. Both ways are almost exactly the same for this case."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 04:54:44 2015 UTC,"Ooooh, I misread that.  Yeah, if you only need the first one then the one extra linear search wouldn't hurt."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 05:22:21 2015 UTC,"def simple(x,y):     z = filter(x.__contains__, y)     print x.index((z[0]))   How about this?  The filter checks x against y (y times) so => o(len(y)). Then i search x for index which is o(1) or o(len(x)). Can someone verify which one? Either way the final result is o(x+y) or less.   If I used a set, it would take o(len(y)) to build, o(1)*x times to lookup and then o(1) to find the index where they match. So it would be worst case O(len(x) + (len(y) + 1), is that correct?   /u/Justinsaccount"
learnpython,3c8zom,deathofthevirgin,1 point,Mon Jul 6 06:33:50 2015 UTC,"Contains on a string is O(N) that puts you right back in N2  Also, you've been changing the requirements between only needing the first match, and needing all of them.  'They match' implies more than one match."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 06:47:16 2015 UTC,"No I just need the first match, filter finds all but I thought it was quicker so I was going to use it anyway."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 17:26:03 2015 UTC,"That's still O(N2).  The problem is that you're searching x for every letter in y, and searching x (that is, a list of characters) takes O(len(x)) time.  By the way (+/u/Justinsaccount), turns out I was wrong about find being slightly faster since enumerate will greedily evaluate everything after the first index - I believe it's actually lazy (+ more Pythonic than a find).   OP - what you want to do is to turn x into a set and then for each letter in y, search the x set and if it's in there, return the index. Try using enumerate in the for loop instead of find to get the index when you find the correct letter."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 07:03:59 2015 UTC,"I've been trying what you suggested but => turn x into set = o(len(x)) + for each letter in y = o(len(y)) + search the x set = o(1)*y   So that is o(len(x)) + 2 len(y))?  The closest I get is:  for z in (y):      if z in set(x):     print x.index(z)     break   another way of doing the above is  def simple(x,y):     z = filter(set(x).__contains__, y)     print x.index((z[0]))"
learnpython,3c8zom,fazzzm,1 point,Mon Jul 6 17:25:24 2015 UTC,if z in set(x):   rebuilds the set every time. you need to do this outside of the loop.
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 17:41:59 2015 UTC,"Yes, so if I did   m = set(x) for z in (y):      if z in m:         print x.index(z)         break   or   def simple(x,y):     z = filter(set(x).__contains__, y)     print x.index((z[0]))   Isn't the latter faster because it is o(len(x)+len(y)+1) while the top one is o(len(x)) + 2 len(y))?"
learnpython,3c8zom,novel_yet_trivial,1 point,Mon Jul 6 18:25:36 2015 UTC,do it by hand with 5 letter strings and see which one takes longer.
learnpython,3c8zom,novel_yet_trivial,1 point,Mon Jul 6 18:34:50 2015 UTC,"Ok trying that now, is x.index() take o(1) or o(n)? Not able to find any information about that online."
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 18:40:16 2015 UTC,This has been covered in this thread already....
learnpython,3c8zom,Justinsaccount,1 point,Mon Jul 6 18:43:55 2015 UTC,"when /u/deathofthevirgin says 'and searching x (that is, a list of characters) takes O(len(x)) time.'  That could be where, though I'm not sure if he was referring to searching x for index or searching x for something else."
learnpython,3c8zom,elbiot,1 point,Mon Jul 6 18:50:02 2015 UTC,"Nevertheless, you still have to iterate over the z value  def simple(x, y):     z = filter(x.__contains__, y)     print (list(x.index(i) for i in z))"
learnpython,3c75pp,MorrisCasper,1 point,Sun Jul 5 14:37:56 2015 UTC,"have you tried using numpy arrays instead? the scipy stack works better that way.   Also, i assume this is a toy example, but using a regression in this case might not be the best approach. It looks like you are using time as a unique variable to predict the number of signatures. Time series approach or a simple stats model implementation would work best imho."
learnpython,3c75pp,manueslapera,2,Sun Jul 5 16:36:00 2015 UTC,How would I use a numpy array with Scikit-learn? Do I just replace the [] with np.array?
learnpython,3c75pp,manueslapera,1 point,Sun Jul 5 16:39:22 2015 UTC,"it might be easier for you if on line 21 you do  import numpy as np y = np.array(y) x = np.array(x)   print(y.shape)    print(x.shape)  sklearn expects arrays of the shape (sample_size, n_features), so in your case the x.shape and y.shape should be (sample_size, 1) to work.  But seriously, this is a very bad idea (unless you are using it to get used to sklearn api)."
learnpython,3c75pp,manueslapera,1 point,Sun Jul 5 16:56:03 2015 UTC,"Still doesn't work, but why would this be a bad idea? You can see here it's pretty linear. My shape is (sample_size,)"
learnpython,3c75pp,unruly_mattress,1 point,Sun Jul 5 17:05:50 2015 UTC,"so you are using a list, or 1-d numpy array into a model that takes 2-d arrays (or list of lists).  So instead of passing the x,y as [timestamp1,timestamp2, timestamp3,...], try out passing an array with the shape [[timestamp1],[timestamp2], [timestamp3],[...]] so each element is its own list."
learnpython,3c75pp,Justinsaccount,1 point,Mon Jul 6 00:49:19 2015 UTC,"The problem is that sklearn expects X to be a matrix, in which every row is one sample. You supplied a list of size 62, which gets converted by sklearn to a matrix of one row with 62 columns instead of a matrix with 1 column and 62 rows. So if I normally have X = [1,2,3,4,5], if I needed to use it in sklearn is to transform it into 5 rows of size 1:  X = [[1],[2],[3],[4],[5]]   Now that's totally inconvenient. I'd probably do X = np.array([[1,2,3,4,5]]).T. Numpy arrays know how to transpose themselves, which is nice. In your case, it means:  X = np.array([X]).T   before the sklearn calls, and it should work.  By the way, I know all this must probably be new to you, but many things you've done in this script can be done more easily otherwise. Here's very simple example code that does similar things to what you're doing:  db = sqlite3.connect(':memory:') c = db.cursor() c.execute('create table example (X, y)') for i in range(10):     c.execute('insert into example values (?, ?)', (i, i+7))  c.execute('select X, y from example') data = np.array(list(c)) X = data[:, 0:1] y = data[:, 1]  model = LinearRegression() model.fit(X, y)  print(model.coef_, model.intercept_)"
learnpython,3c7pzv,Terrible_Programming,1 point,Sun Jul 5 18:00:03 2015 UTC,"Just noticed I'm using ""mean"" instead of ""mode"" in the code, but that doesn't affect the result..."
learnpython,3c7pzv,scfoothills,1 point,Sun Jul 5 18:01:48 2015 UTC,"You're problem is that you are only modifying one instance of the low and the high each time. I'll show you a trace of the list [1, 6, 6, 6] using your method and an alternative.  Your method...  [1, 6, 6, 6] (start/sorted) [2, 6, 6, 5] (+/-) [2, 5, 6, 6] (sort again) [ 3, 5, 6, 5] (+/-) [3, 5, 5, 6] (sort) [4, 5, 5, 5] <--- mode = 5   Instead devise an algorithm that increases all values equal to the min/max in one iteration of the while loop by nesting a for loop inside.  [1, 6, 6, 6] [2, 5, 5, 5] [3, 4, 4, 4] <--- mode = 4   I won't post code so you can have the pleasure of figuring this out, but here is a hint:   Your new algorithm shouldn't involve sorting. Instead, find both the min and max ahead of the loop. The while loop condition should be max - min > 1 almost like you have. It will be useful to store max and min as separate values rather than use maxmin, however. Inside the loop, write a for loop which traverses the list and increases all values equal to the min by 1 and decreases those equal to the max by 1. Then recalculate the min and max as the last statements in your while loop.  The use of Counter is good for finding the mode. Keep that the way it is.  One more observation is that your code could be cleaner. The use of len(x) - 1 isn't really necessary. You can use the shortcut list_name[-1] to refer to the last item in a list. (There is no reason to refer to the first or last item in the list specifically, however, using the new algorithm. Just trying to clean up your code a bit.)"
learnpython,3c7pzv,scfoothills,2,Sun Jul 5 18:41:11 2015 UTC,Thanks a lot for taking the time to respond and for allowing me to figure this out myself. Your notes make sense. Let's see if I can implement it.
learnpython,3c7pzv,Justinsaccount,1 point,Sun Jul 5 18:54:10 2015 UTC,"You're welcome. I want to add one more thing. You really should avoid sorting unless the problem specs actually call for it.   For one, sorting is an expensive task. That is, it takes a lot of operations to complete. A simple sorting algorithm might traverse the loop swapping out of order values if necessary and then keep repeating this until no more values need to be swapped. There are some clever algorithms to minimize the amount of looping and swapping, but regardless of the algorithm used, time will increase exponentially with the length of the list. For short lists like in your code you'll never notice, but with large data sets the slowdown will be quite noticable.   You should also be aware that sorting a list in a function actually alters the list as it was created outside the function. You are not working with a copy of the list in your answer function. You should always look to preserve the original data. As a little test, try this...  def do_something(nums):     nums.sort()     print(""The lowest number is"" + str(nums[0]))  my_list = [5, 8, 3, 2] print(my_list) do_something(my_list) print(my_list)   Notice how the order of my_list isn't preserved."
learnpython,3c6lfv,statixsc,6,Sun Jul 5 09:17:38 2015 UTC,"Good job so far! First, you can replace most of that code with some multiplication-overloading syntax:  (removed previous code example, see /u/Rhomboid's comment below)   or if list comprehensions are more your style,   [[0 for _ in range(10)] for _ in range(10)]   Now, moving the character with the arrow keys entails a lot of functionality. (1) First, we have to listen to what the player is typing. (2) Then, we have to figure out which key the player pressed - (3) then make sure that it's one of the arrow keys. (4) Then based on which one, we change something in our internal grid structure. (5) Then, we print it out again and ask for more input. And (6), you have to tie it all together.  I don't want to give away too much code directly, so let me know if you need clarification on any of these parts. You will probably find it easier to work if you deal with functions instead of having everything clutter the global space (that is, not in a function - like your grid variable is defined currently). So, something like  def make_default_grid(value = 0, size = 10):     return [[value for _ in range(size)] for _ in range(size)]  def print_grid(grid):     pp.pprint(grid)   (1-3) Now you want a way to ask for player input - specifically an arrow key, and more generally a keypress. To be honest I'm not really sure of a good way to do this without using something like Pygame or Tkinter, which you probably don't want for your first console game. I would recommend just sticking with user text input for now (as in ""L"", ""U"", ""R"", ""D""), and you can change it later. If anyone has any ideas on keypress events, I'd be interested too(). Make a function like  def get_move():     direction = input(...)     ...   I got you started. Here are some things you also need to do: figure out what exactly input(...) does and what to put in the blank. What do you need to do after you get the player's text? Do you want to accept 'R' and 'r' and 'RIGHT' and 'RiGhT', etc. to mean going right? Or just 'right'? Will players get tired if you make them type too much? How will your decision change your code? What happens if the user types in ""fewiofewf""? Do you want to ask again or just skip the turn? Should you display a nice message saying that ""only these words are allowed: ...""? Now, this function should return something standardized, which means that no matter how many different userinputs you accept, you only output 4 - one for each direction. Probably a string will work well, ""right"", ""left"", etc. Notice how our functions are really small - this is usually good.  (4) All right, so we have our move - let's say the player chose ""right"". What changes in our grid structure to reflect this? How do we know where our player currently is? Maybe their cell gets a special character, like ""X"", and we look for that. Or maybe we have a specific coordinate (that is, row and col, such that grid[row][col] is where the player is) of where the player is right now? How would that coordinate change if the player were to move right? What happens if the user is at the left edge and goes left? Do you want to go back and ask for another direction or just do nothing? If the second, should you print something explaining to the player why nothing happened? All the info you need to calculate the next grid should be passed in as parameters - and make sure to return the new grid!  def make_move(grid, player_input, OTHER_PARAMETERS)   (5) Now you can write a function to clear the screen in preparation for the next step.  (6) But all these are just functions - nothing is calling them. Finally, you can write a play(maybe, some, parameters, here) function that combines all of this for you - first it prints, then it asks, then it changes the grid, then it clears the screen, prints, then it asks, and again and again until some condition is satisfied (then you can say whether the player wins or loses and exit). This is often called ""the game loop,"" and you'll likely use the while statement. And when you actually want to play, you can call play(maybe, some, parameters, here) in main.  Good luck! Let me know if you need any help."
learnpython,3c6lfv,deathofthevirgin,9,Sun Jul 5 09:41:59 2015 UTC,"grid = [[0] * 10] * 10    Don't encourage this.  It doesn't do what you think it does.  >>> grid = [[0] * 10] * 10 >>> grid[1][2] = 'X' >>> grid [[0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0],  [0, 0, 'X', 0, 0, 0, 0, 0, 0, 0]]   Every row is a reference to the same list, because * copies the reference to the list, not the contents of the list."
learnpython,3c6lfv,Rhomboid,1 point,Sun Jul 5 10:26:53 2015 UTC,Oh wow - didn't know that. Thanks for the fix.
learnpython,3c6lfv,deathofthevirgin,1 point,Sun Jul 5 10:36:33 2015 UTC,But grid = [[0] * 10 for _ in range(10)] works.
learnpython,3c6lfv,dunkler_wanderer,6,Sun Jul 5 12:34:58 2015 UTC,The gamer in me says to use 'WASD' instead of 'LURD' for directional input. Plus 'LURD' just doesn't sound right ;).
learnpython,3c6lfv,StaticFuzz,2,Sun Jul 5 09:49:10 2015 UTC,"This is a good opportunity to learn about the graph data structure. Lets say later on you want to make certain adjacent spots blocked off in your game, or you decide a hex grid would be better for your game. This would become somewhat convoluted to implement with arrays, this is where graphs come in. A graph is a collection of 'nodes' connected by 'edges' (good pictures with a much more rigorous/correct definition here: https://en.wikipedia.org/wiki/Graph_theory), which makes them a very intuitive way to represent maps. You can store information in these nodes and edges. Items, enemies, and traps would could be contained in nodes. Edges can have direction (can only be traversed from node A to B, not B to A) and optionally a 'weight' which can represent distance or travel toll or whatever makes sense.  Again, this is just an aside. Depending on what you want to do this might just add unnecessary complexity to your code. If you want to play around with graphs, here is a good Python implementation of the graph data structure: http://networkx.github.io/"
learnpython,3c6lfv,hotsingledad,1 point,Sun Jul 5 13:00:52 2015 UTC,"Graph theory:       In mathematics and computer science, graph theory is the study of graphs, which are mathematical structures used to model pairwise relations between objects. A ""graph"" in this context is made up of ""vertices"" or ""nodes"" and lines called edges that connect them. A graph may be undirected, meaning that there is no distinction between the two vertices associated with each edge, or its edges may be directed from one vertex to another; see graph (mathematics) for more detailed definitions and for other variations in the types of graph that are commonly considered. Graphs are one of the prime objects of study in discrete mathematics.    Image i - A drawing of a graph     Relevant: Distance (graph theory) | Vertex (graph theory) | Graph (mathematics) | Tree (graph theory)   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3c6lfv,autowikibot,1 point,Sun Jul 5 13:01:18 2015 UTC,this is pretty good dudes thanks for the tips here! Not been fully looking at reddit last couple of days only on mob and my reception fells like 56k modem!  Thanks for any help and any further help!
learnpython,3c8k7u,Pekyman,7,Sun Jul 5 22:22:35 2015 UTC,Try those separately and print the results of each.  hint: you don't need nor want sort in the for loop.
learnpython,3c8k7u,elbiot,2,Sun Jul 5 22:31:57 2015 UTC,"Yes, unfortunately I learned this the (slightly) hard way."
learnpython,3c8k7u,isxek,1 point,Mon Jul 6 02:29:36 2015 UTC,"Yea, if you sort the list you're iterating over, it's gunna be bad."
learnpython,3c8k7u,elbiot,1 point,Mon Jul 6 02:37:29 2015 UTC,also if you append to the list you're iterating over
learnpython,3c8k7u,xcombelle,2,Tue Jul 7 08:21:56 2015 UTC,"While the other answers in here are not incorrect, I think maybe you might not have a solid understanding of how functions work.  .append() is a function that takes a value, and as the name suggests, appends it to the list. However, the expression inside the parenthesis is evaluated first. This means that number ** 2 turns into number2 before it is sent to the function.  Then, the sort() function (or method, as most will say) just sorts the values in the list.  Neither function return any values, and both of them directly change the object that calls them."
learnpython,3c8k7u,fizzygalacticus,1 point,Mon Jul 6 01:57:29 2015 UTC,Append() adds the square of number (a value in start_list) to square_list. Sort() takes all elements of square_list and sorts them in increasing order.  Refer to the official documentation for these methods here: https://docs.python.org/2/tutorial/datastructures.html
learnpython,3c8k7u,icset,1 point,Sun Jul 5 22:36:14 2015 UTC,"The important thing to remember about some_list.sort() is that this sorts the list some_sort in place. This means that the list some_list is changed, with the original order being lost.  This is different from using say some_string.lower() (which will return a lowercased version of the string, ""PyThoN"".lower() == ""python""), which will return a new version of the object without changing it.  Most methods (that's the name of things you access using the . operator) in Python aren't in-place, so be wary of this.  If you want a sorted list without losing the original order, use the built-in function sorted. E.g. sorted([3,1,4]) == [1,3,4].  Also, when posting code on reddit, prepend (add-to-the-beginning-of-line(s)) four spaces to all lines of code. This will format your code properly."
learnpython,3c8k7u,Ran4,1 point,Sun Jul 5 23:02:06 2015 UTC,The append function populates the empty list named square_list with the variable 'number' squared.    sort sorts the list.
learnpython,3c8bq8,Zahand,1 point,Sun Jul 5 21:10:00 2015 UTC,"When sorting a list of tuples as you are doing, Python sorts by the order in the tuple. So if the first item in the tuple is the manufacturer, then python sorts that alphabetically. If the first item is the same, python compares the second. Etc. So you can just build your tuple in the order you want the sorting to happen.  Combine that with namedtuples to make the printing easier:  from collections import namedtuple def printer(dic, dsc=True):     Source = namedtuple(""Source"", ""Manu Price URL"")     d_view = [Source(key, value[""Price""], value[""URL""]) for key, value in dic.items()]     d_view.sort(reverse=dsc)     for item in d_view:         print ""{0.Price:04d} {0.Manu} {0.URL}"".format(item)   Edit: I didn't include it because it may be getting too complicated, but for the joy of learning, the 4th line could be condensed a little with this sorcery:  d_view = [Source(key, **value) for key, value in dic.items()]"
learnpython,3c8bq8,novel_yet_trivial,1 point,Sun Jul 5 21:22:49 2015 UTC,"When sorting a list of tuples as you are doing, Python sorts by the order in the tuple.     Oh I didn't know that. Thanks!  But could you explain this please?  Source = namedtuple(""Source"", ""Manu Price URL"") d_view = [Source(key, value[""Price""], value[""URL""]) for key, value in dic.items()]"
learnpython,3c8bq8,novel_yet_trivial,1 point,Sun Jul 5 21:30:34 2015 UTC,"That's a named tuple. This probably makes sense to you:  tuple_ = (""asus"", 5000) print ""manufactuer: {}, price: {}"".format(*tuple_)   That works, but can get confusing. Especially if you need to re-arrange the order in the tuple later. Then you have to resort to the ugly code you had earlier  tuple_ = (5000, ""asus"") print ""manufactuer: {}, price: {}"".format(tuple_[1], tuple_[0])   Wouldn't it be nice if you could call the tuple items by name? Kinda like a dictionary, but with the sorting and space advantages of a tuple? A named tuple assigns names to the locations.  from collections import namedtuple Source = namedtuple(""Source"", ""Manu Price"") #set up the order namedtuple_ = Source(""asus"", 5000) #make an instance # ... print ""manufactuer: {0.Manu}, price: {0.Price}"".format(namedtuple_)   Now you can rearrange your tuple order and it will not affect your printing. Or rearrange the printed order and not worry about indexes. Life becomes easier.  Python is all about moving away from ugly and confusing indexing. If you are typing index values into your code, you should probably rethink something."
learnpython,3c8bq8,novel_yet_trivial,1 point,Sun Jul 5 21:45:09 2015 UTC,"Oh I understand. That makes things a lot easier :)  But on last thing. Why write ""Source"" as the first parameter and does python automatically split the second parameter between spaces?   And what is the differecne between line 2 and 3?   In line two you make a variable ""Source"" of the type namedtuple. On the next line you make a variable ""namedtuple_"" of the type ""Source"". I don't really understand that... :/ (sorry, I'm not good at these kind of things. I'm mostly self-thought in python and don't really know the technical parts about programming)"
learnpython,3c8bq8,Justinsaccount,1 point,Sun Jul 5 21:59:28 2015 UTC,"does python automatically split the second parameter between spaces?    Yep. Read the documentation I linked.   In line two you make a variable ""Source"" of the type namedtuple. On the next line you make a variable ""namedtuple_"" of the type ""Source"".   Yep. In line 2 I make a class with the type ""Source"" (first argument) and assign it to the variable ""Source"". Giving these the same name allows repr() to work as it should.  In line 3 I make an instance of the ""Source"" class, and assign it to the variable ""namedtuple_"". To keep the speed and space advantages of tuples, you make the class once, and then as many instances as you need.  When you get comfortable with classes this will make a lot more sense."
learnpython,3c6u5t,TickleMeBumhole,5,Sun Jul 5 11:57:11 2015 UTC,"My function should find the average from the list (which is the classSort variable)   Then why is arraysorted the only argument to the function?  Where is classSort coming from and why are you modifying it?  Your function currently looks like  def double(x):     """"""Double x""""""     y * 2 # what the hell is y?     return x * 2   You're also using awkward while loops instead of simpler for loops and list comprehensions.  Also, harcoding the 3 as the number of entries makes things more complicated and less flexible.  def average(values):     """"""Return average of values""""""     # ...  def averagesort(arraysorted):     for runner_results in arraysorted:         scores = [score for (runner, score) in runner_results]         average_score = average(scores)         # ..."
learnpython,3c6u5t,Justinsaccount,5,Sun Jul 5 14:35:50 2015 UTC,"I'm having a hard time following your code, but it looks like your calling newArray.sort() without using reverse = True (on line 23)"
learnpython,3c6u5t,StaticFuzz,1 point,Sun Jul 5 13:08:21 2015 UTC,"This works, thank you a ton! You have saved me a heck ton of research."
learnpython,3c6u5t,Mekhami,0,Sun Jul 5 13:32:53 2015 UTC,"You could have figured it out with a debugger in 30 seconds, just fyi."
learnpython,3c6u5t,rhgrant10,2,Mon Jul 6 04:59:21 2015 UTC,"Python is well suited to this task and has handy built in functions. If you're trying to sort a list of several trials by their average, try:  def avg(nums):     if not nums:         return None     return sum(nums) / len(nums)  def avg_sort(trials):     return sorted(trials, key=avg, reverse=True)"
learnpython,3c6u5t,NewbornMuse,1 point,Sun Jul 5 16:19:57 2015 UTC,"If you sacrifice zero-length error checking, you can even rewrite as  def avg_sort(trials):   return sorted(trials, key = lambda x: sum(x) / len(x), reverse = True)   Come to think of it, the ternary operator lets us accomplish the code golf hole-in-one:  def avg_sort(trials):   return sorted(trials, key = lambda x: sum(x)/len(x) if x else None, reverse = True)   PSA: Your version is probably more sane, but I like reducing 24 lines of code to one."
learnpython,3c6u5t,Justinsaccount,1 point,Sun Jul 5 21:00:06 2015 UTC,"it looks like their data is stored as something like [(id, score1), (id, score2)]"
learnpython,3c7z8d,Thomassaurus,1 point,Sun Jul 5 19:21:15 2015 UTC,Did you run the installer?
learnpython,3c7z8d,adamnew123456,1 point,Sun Jul 5 19:31:07 2015 UTC,"Yes, to make sure I did I ran it again to make sure just now and it only prompted me to repair it."
learnpython,3c7z8d,adamnew123456,1 point,Sun Jul 5 19:34:12 2015 UTC,"After a bit of Googling, I found this question on StackOverflow - the distribution for 3.2 won't work for 3.4, you'll have to install via pip."
learnpython,3c7z8d,adamnew123456,1 point,Sun Jul 5 19:39:40 2015 UTC,"Thanks, I also came across that post but it all seemed very foreign to me with all the talk of things like pip and wheel."
learnpython,3c6p4m,nitvit610,2,Sun Jul 5 10:26:59 2015 UTC,"I think the problem was with your var variable. I couldn't get it to work the way you were using it, but I change a few things around and got it working: code here  I'll try and mess around with the code a little more to figure out what specifically was causing your code not to execute.  edit: I did a little digging and it appears buttons don't accept more than one command, so   command=var.set(""evernote"") and apps   wasn't actually calling apps(). Here is a stackoverflow post pertaining to the topic."
learnpython,3c6p4m,StaticFuzz,1 point,Sun Jul 5 11:54:19 2015 UTC,"Ahh thank you very much. From my limited knowledge and quick google search, my understanding of the use of lambda is that it effectively calls a function, but you can set that function to be within a variable? I can't find much simple material on it so yeah, if you could ELI5 lambda that would be great. :)"
learnpython,3c6p4m,StaticFuzz,2,Sun Jul 5 15:03:35 2015 UTC,"I'll write up a short explanation but Here is a much more thorough and well thought out explanation.    lambdas and functions are very similar, but how they are used is where they differ. Lambdas are generally used in place of small functions. Here's the syntax:  my_lamb = lambda x: x + 1  def my_func(x):     return x + 1   In both cases we declare what we are defining. def for functions, and lamda for lambda. The parameters for each are the same x, and anything after the colon : is what the function/lambda will do. The syntax to call either is the same:  my_lambda(3) 4  my_func(3) 4   The one notable difference you can see is that the 'return' statement is implied for lambdas, meaning it does the return statement for you.  The lambda I used in my earlier post is essentially just wrapping a function in a function:  lambda : apps('chrome')  def my_func():      apps('chrome')   So command = lambda : apps('chrome') could be switched out for command = my_func if the my_func() function was added into your code.  Though in this case lambda is the better option. If you were to use functions you would need one my_func() type function for every button."
learnpython,3c6p4m,zahlman,1 point,Sun Jul 5 16:26:59 2015 UTC,Thanks very much for the writeup. I understand it now (I think) :P
learnpython,3c6p4m,kalgynirae,2,Sun Jul 5 17:01:33 2015 UTC,"command=var.set(""evernote"") and apps   I don't quite understand what you expect this to do, but at least make sure you understand that with what you've written, var.set will be called immediately, and not when the button is clicked."
learnpython,3c72jp,Hallelujah10,2,Sun Jul 5 14:01:22 2015 UTC,Hm about the code style it's up to you but for  if os.path.isdir(SourcePath)==False:   I tend to use  if not os.path.isdir(SourcePath):
learnpython,3c72jp,babaduv,1 point,Sun Jul 5 14:29:45 2015 UTC,"I was curious about this task and spent some time learning os and shutil. It wasn't easy but fun enough: https://github.com/genych/Playground/blob/master/snippets/uberunzipper.py   Please suggest me any way to do this. And also please suggest if there are blatant mistakes(code style, efficiency etc.) in my program that I cannot see.   My approach is:   find all zips in the source folder extract somewhere temporary and delete them search for zips again (now source is new temporary folder) and extract. and delete do it untill no more zips move all this junk to destination folder and delete temp   About your code. 3 minor things:    camel case usually for classes in python + booleans /u/babaduv's suggestion not enough spaces, like here fileName = '%s\%s'%(SourcePath,m)   All other looks good"
learnpython,3c72jp,04h,1 point,Sun Jul 5 21:39:51 2015 UTC,"os.walk already returns all subfiles in all subdirectories. You just need to replace line 9 to extend every file in every subdirectory, like so:    for dirpath,dirnames,filenames in os.walk(SourcePath):     h.extend(os.path.join(dirpath, fname) for fname in filenames)   edit: Sorry, realised you wanted to unzip folders inside the zipfiles"
learnpython,3c7n21,Cosaquee,1 point,Sun Jul 5 17:33:02 2015 UTC,Not really python related.  But for email you're going to need a css inliner like ink.
learnpython,3c5v2e,Hypogeum,9,Sun Jul 5 02:48:22 2015 UTC,"BTW you shouldn't use built-in types as variable names.  When you created your list variable, you made the built-in list type disappear."
learnpython,3c5v2e,shuttup_meg,4,Sun Jul 5 05:21:53 2015 UTC,"To extend upon this answer, to restore the default behaviour of lists, you'd have to type in:  from builtins import list   But this will overwrite any variable with the name of list."
learnpython,3c5v2e,kaliumex,2,Sun Jul 5 06:21:56 2015 UTC,Or you can del list
learnpython,3c5v2e,XtremeGoose,1 point,Sun Jul 5 08:33:35 2015 UTC,Thanks for that.  I didn't realize there was an easy way to fix things when you've messed it up.  I can see this being a handy thing to know about if you're in an involved interactive session and you don't want to lose results by starting over.
learnpython,3c5v2e,shuttup_meg,15,Sun Jul 5 06:31:05 2015 UTC,"convert each item in the list to a string using a comprehension  (str(item) for item in list)   and then join  "" "".join((str(item) for item in list))"
learnpython,3c5v2e,RubyPinch,13,Sun Jul 5 02:51:36 2015 UTC,"It's worth noting that you don't need the double parenthesis when using it as an argument:  "" "".join(str(item) for item in list)"
learnpython,3c5v2e,Lucretiel,2,Sun Jul 5 03:09:42 2015 UTC,"Didn't know this, thanks."
learnpython,3c5v2e,bpovs,8,Sun Jul 5 05:29:14 2015 UTC,"It's not because it's an argument, it's because string.join expects an iterable, which a generator is. In case it wasn't clear:  def print_arg(arg):   print arg  def print_iter(arg_it):   for el in arg_it:      print el  print_arg(n for n in [1,2,3]) >>> <generator 'XYZ'>  print_iter(n for n in [1,2,3]) >>> 1 >>> 2 >>> 3"
learnpython,3c5v2e,TankorSmash,1 point,Sun Jul 5 06:00:19 2015 UTC,Thank you very much!
learnpython,3c5v2e,Lucretiel,13,Sun Jul 5 02:54:59 2015 UTC,""" "".join(map(str, my_list))"
learnpython,3c5v2e,ydepth,0,Sun Jul 5 03:09:07 2015 UTC,"""{} + {}"". format(a,  b)"
learnpython,3c5v2e,ingolemo,0,Sun Jul 5 11:42:04 2015 UTC,"Lots of people have already given you good answers, but it's worth noting that you really shouldn't have a list like that in the first place. When making a list you should usually try hard to make sure that the list contains only one type of data. A list that contains multiple different types of data (like here you have a mix of strings and integers) is often difficult to manipulate, as you're finding out. The real fix here is to go back to the piece of code that's generating this list and see if you can tweak it so it produces a pure list of strings."
learnpython,3c7gha,Titanium_Expose,3,Sun Jul 5 16:30:24 2015 UTC,">>> my_list = [['ape bat cat'], ['dog elk fish']] >>> [ sublist[0].split() for sublist in my_list ] [['ape', 'bat', 'cat'], ['dog', 'elk', 'fish']]"
learnpython,3c7gha,commandlineluser,1 point,Sun Jul 5 16:38:25 2015 UTC,"On line 2, sublist[0]...that's just where the new list will start adding items, and it will grow as big as needed? I haven't seen this syntax before."
learnpython,3c7gha,commandlineluser,3,Sun Jul 5 19:29:16 2015 UTC,"Sorry -- perhaps my example wasn't entirely clear. That syntax is called a list comprehension.  >>> my_list = [['ape bat cat'], ['dog elk fish']] >>> new_list = [ sublist[0].split() for sublist in my_list ] >>> new_list[0] ['ape', 'bat', 'cat']   It's shorthand for the following:  >>> my_list = [['ape bat cat'], ['dog elk fish']] >>> new_list = [] >>> for sublist in my_list: ...     new_list.append(sublist[0].split()) ...  >>> new_list[0] ['ape', 'bat', 'cat']"
learnpython,3c7gha,blackrat47,2,Sun Jul 5 19:39:31 2015 UTC,"You have a top-level list, which has 2 elements. Each of those elements is a list (which we're referring to as a sublist).  You have 2 sublists. Each one has a single element, which is a string.  sublist[0] is getting the string from the sublist - just picking the first element as I'm sure you're familiar with. str.split() means split the string wherever there's a space,, turning it into a list of strings.  [do_something(arg) for arg in my_list] is a list comprehension: it makes a new list whose elements are the results of applying the function do_something() to each element of my_list.  Put that together, and you get:  [ sublist[0].split() for sublist in my_list ]  For each element in my_list (which we're referring to as sublist), get the first element of sublist and split it. Whack all the return values together in a list."
learnpython,3c5w7u,Scoutdrago3,3,Sun Jul 5 03:02:00 2015 UTC,"It really depends on the project, language, build system, and however the developer is feeling that day I guess. There are a few really common things (like the .gitignore and .gitattributes), but for everything else you would need to learn more about that specific software stack. Since this is /r/learnpython I can tell you that package names (and the directories they live in) are up to the developer. You may see Django projects with similar structure, or learn to recognize a Flask project when you see it. There are so many different frameworks for testing, deployment, web, graphics, games, etc., that it may be better to figure out what the project is built with and then google information for that specific stack."
learnpython,3c5w7u,cjwelborn,1 point,Sun Jul 5 05:01:28 2015 UTC,"OK, thanks for the input (and links)."
learnpython,3c5w7u,cjwelborn,1 point,Sun Jul 5 21:58:07 2015 UTC,"You're welcome. I didn't want to guess what a 'util' directory might mean to any given project. I know you weren't asking, but I thought I would mention this too since it came to mind.  It's actually sort of an anti-pattern to use package-names/directories like 'util' or 'utilities'  (with some exceptions of course). When you don't know where to stick stuff, or how to properly name it, it gets shoved in the 'util' package until that package holds everything including the kitchen sink. I'm guilty of it too. It's actually on my todo list to refactor one of mine into better named sub-packages. It was fine in the beginning when it was small, but now it's turned into the ""catch-all"" package because I was lazy."
learnpython,3c5w7u,Rubykuby,1 point,Mon Jul 6 00:18:31 2015 UTC,"Haha, thanks for the followup, much appreciated."
learnpython,3c5hmq,audtherat,5,Sun Jul 5 00:06:52 2015 UTC,"So, pig latin? I'm going to break up this code to add comments, but it's all one method.  def pig_latinize(word): # descriptive method name     first_letter = word[0] # variable name explains more than just ""letter"" (which letter?)   Now I noticed you calculated the case where the word starts with a consonant  and the case in which it starts with a vowel, and you figured out what to do later. That works. But what if one of those  operations took a long time, and you ended up not needing the result anyway?  Try checking to see which calculation you should do first, like this.      vowels = set(['a', 'e', 'i', 'o', 'u'])   Note: we made vowels a set instead of a list because there should only be one of each vowel in vowels, and ""is-in?"" lookup is very fast in a set, compared to a list. This matters more if you deal with bigger lists. You can read more on the difference online - note that sets are unordered, so it would be a bad idea to store a list of President last names in a set, for example - if you wanted to keep them in order.      if first_letter in vowels: # Vowel case!         print(word + 'yay')     else: # Otherwise, consonant case         print(word[1:] + first_letter + 'ay')   Done! One addendum: it's often better to just return something from a function instead of printing it. That way, you can use it in other code. Consider:  def pig_latinize_excitedly(word):     return pig_latinize(word) + '!'   You couldn't do something like this if you're just printing. Of course, that means when you call your function you have to do the print then.  print(pig_latinize(""Hello"")) print(pig_latinize_excitedly(""Hello""))"
learnpython,3c5hmq,deathofthevirgin,2,Sun Jul 5 01:16:20 2015 UTC,wait can you iterate more i don't quite understand what you're saying?  edit a) okay i get now. so basically we don't even need the for loop?
learnpython,3c5hmq,deathofthevirgin,3,Sun Jul 5 01:20:35 2015 UTC,"Sorry, I forgot to explain the ""in"" statement.  Basically when you do element in collection, Python automatically checks if the element is in a collection (so a list, a set, a dictionary, a string, etc.) and returns True or False for you. This is nice because checking to see if something is in a collection is a really common task. Behind the scenes, Python is doing the for loop, but it's not in your code. Try writing your own ""is_in(element, collection)"" function and using it in your code. It should be nicer to read.  Let me know if you have more questions."
learnpython,3c5hmq,deathofthevirgin,4,Sun Jul 5 01:27:07 2015 UTC,wow very helpful replies from you. you were in the other thread about 'detecting sarcasm in humans' so i suppose it makes sense.   i will implement the better readability into my code. thank.
learnpython,3c5hmq,tk425,2,Sun Jul 5 01:33:24 2015 UTC,"Well, don't actually do it in real programs, just as a learning exercise :) - the in statement already exists.  Python already has a lot of nice helper functions/statements like in, enumerate, map. It's interesting to figure out how these work and try to duplicate them yourself, but in the end you should use the built-in Python ones unless you have have a good reason not to.  Also, something I forgot: the code doesn't work correctly if the first letter is capitalized, for example on ""Apple"". To get around this you could 1) add A, E, I, O, U to the set or 2) change your if statement to if first_letter.lower() in vowels. I like the second one better, myself - but it's up to you."
learnpython,3c5hmq,deathofthevirgin,2,Sun Jul 5 01:37:45 2015 UTC,"how does this perform better than x = (1,2,3,4)? why go to the trouble of creating a list then converting it to a set?"
learnpython,3c5hmq,pudgycaveman,1 point,Sun Jul 5 06:07:58 2015 UTC,"Do you mean x = {1, 2, 3, 4}? That works too. The important part is the O(1) lookup time, but you're right - your way is clearer and more concise."
learnpython,3c5hmq,TheRobLangford,1 point,Sun Jul 5 06:28:27 2015 UTC,"You lined up the 'else' with the 'for'. Python's for statement has an else-clause too, not sure if you knew that. Read up the docs to understand what 'else' does in the context of 'for' and you should get a clue as to what's going on in your code."
learnpython,3c5hmq,kalgynirae,1 point,Sun Jul 5 00:27:51 2015 UTC,yes it works that way to where it prints either the vowelated or the translated. when it was lined up with the 'if' it would print both even if vowelated condition was met. basically i was wondering why else lined up with 'if' would print both without breaking out when the vowelated was triggered?   the way the code is now works i just want to understand what happened there i spent thirty minutes trying to fix the bug to which i accidently discovered the fix by lining else with for. i posted this in the programmingprompt where the challenge was so the question is there too!  edit a) wow i learned something way new thanks!
learnpython,3c5m9i,melfinastarwind,5,Sun Jul 5 01:00:09 2015 UTC,"/u/pvc's course is in Python 3.  It is geared toward beginners. http://programarcadegames.com/index.php?lang=en    I have some issues with some of his approaches (which he has been fairly receptive to), but it might be what you are looking for."
learnpython,3c5m9i,Mekire,1 point,Sun Jul 5 01:55:19 2015 UTC,Seems straight forward. At this point I think I'm going to do Codecademy anyway to sort out the basics and then revisit the resources for 3. Thanks!
learnpython,3c5m9i,callmelucky,5,Sun Jul 5 02:44:06 2015 UTC,"Seconding Mekire's recommendation for programarcadegames; I honestly believe it is the best beginner instructional around.  Codeacademy is fine, but everything is kind of bite-sized without much depth. Also the interface can bug out and be kind of difficult to 'fix' when it does, particularly with indentation errors (to be fair it was several months ago that I used it, they may have fixed it since then). Also it's probably a good idea to get used to using an IDE and writing scripts on your computer; codeacademy doesn't require you to do that.  But PAG has the perfect mix of everything. All lessons are presented in both text and video format in entirety, so you can choose according to your preference, or mix and match at your whim. Assessment is offered in a wide range of depth from multiple choice quizzes to mini-projects, so you will really consolidate your knowledge if you work through them all. The structure is logical. The presentation is interesting. And the content is fun (who doesn't like making pictures/animations/games?). Signing up is entirely optional.  Not trying to talk you out of codeacademy, but if you find it a little light-on for detail or that the concepts aren't 'sticking' firmly, don't hesitate to switch. By the way, Automate the Boring Stuff is excellent as well."
learnpython,3c5m9i,callmelucky,1 point,Sun Jul 5 06:04:30 2015 UTC,I plan on programarcadegames to be my 2nd stop for sure. It looks fairly straight forward and coding a game sounds fun! Even the most basic instructions were going over my head though. I suppose I could input the same code from Codecademy into PyCharm just to get a feel for using an IDE before moving on?
learnpython,3c5m9i,icset,1 point,Sun Jul 5 07:27:46 2015 UTC,"I suppose I could input the same code from Codecademy into PyCharm just to get a feel for using an IDE before moving on?    Yeah definitely, not a bad idea at all.   Even the most basic instructions were going over my head though.   I get the impression that (like me) you like to fully understand something before charging forward with it (there is a rather silly word for this: to 'grok' something). That being the case, the best resource for this type of learning IMO is Udacity's CS101. It seems like you have to sign up these days, though there is a free trial period. This was the first tutorial I found that really established the base units of what goes into a program and how they connect together to build something functional in a perfectly clear way. The downside is that it uses Python 2; that being the case, if you're keen to get into Python 3 (a path I wholeheartedly endorse), I'd suggest just working through the first unit and then moving on to PAG or Automate.  Good luck anyway. Python is very rewarding :)"
learnpython,3c5m9i,deathofthevirgin,1 point,Sun Jul 5 08:51:28 2015 UTC,Thanks again :) and yes I'm kind of stubborn in the sense I want to know everything and the reasons behind it all... Funny to know there's a word for it!
learnpython,3c5m9i,desrtfx,6,Sun Jul 5 19:10:23 2015 UTC,"Hear me out: do the codecademy course first to learn basic syntax. Honestly, python 3 and python 2 are pretty similar syntactically and most of the concepts are the same... Most of the changes are behind the scenes (such as the range or print functions). IMO codecademy is best for intro to syntax. It was pretty easy for me to transition to python 3 after codecademy.  After that, there are plenty of learning resources you can search for in this sub that use python 3.x  Hope this helps!"
learnpython,3c5m9i,soqets,2,Sun Jul 5 01:40:12 2015 UTC,"I've been considering just doing Codecademy to get some kind of basic foundation. Maybe by the time I finish it the PyCharm wouldn't be so over my head for 3? I appreciate your response. The searches I've done on here always seem to have recommendations for 2, hence my title. :P"
learnpython,3c5m9i,Micotu,3,Sun Jul 5 01:47:00 2015 UTC,"/u/icset is spot on - for a beginner, the difference is almost entirely syntactic and superficial(print vs print(), etc.). By the time you're advanced enough to notice the more complicated differences (asyncio, functools.lru_cache, etc.) you won't be learning from tutorials anymore. The only thing that might be confusing is unicode encoding differences - but you probably won't run into that that often either."
learnpython,3c5m9i,lestermacgurdy,1 point,Sun Jul 5 01:57:28 2015 UTC,"I'm going to do the Codecademy course and then revisit the resouces for 3 and see how it goes. I guess it's just overwhelming as a beginner but as you said, by the time I know what the differences are I should know enough to be able to figure it out."
learnpython,3c5m9i,Trebalor,2,Sun Jul 5 02:46:06 2015 UTC,"Take a look at /u/AlSweigart's books (which are free to read online):   Automate the Boring Stuff with Python Invent Your Own Computer Games with Python (this site has many more resources and books)   Both books give you tangible, practical examples of which you can easily see the results. Also, the examples in the books are derived from real-world applications."
learnpython,3c5m9i,Exodus111,1 point,Sun Jul 5 12:44:36 2015 UTC,Here's what I'm going to be using to learn Python 3:  How to Think Like a Computer Scientist
learnpython,3c5m9i,Sean1708,2,Sun Jul 5 06:25:01 2015 UTC,"Im halfway through this and have enjoyed it.  It is more of a course type approach imo, but thats how ive learned things my whole life so it works."
learnpython,3c5ecu,harshsrinivas,3,Sat Jul 4 23:31:25 2015 UTC,"your url_parse is somewhat fixated on str.find and cheeky math  you could easily check validity of the url base with any() and .startswith() eg  tests = ( 'aaa',            'xhttps://github.com/harshasrinivas/cli-github/blob/master/',           'http://github.com/harshasrinivas/cli-github/blob/master',           'www.github.com/harshasrinivas/cli-github/',           'www.github.com/' )  valid = ['www.github.com', 'http://github.com', 'https://github.com'] for url in tests:     if any(url.startswith(pattern) for pattern in valid):         print( url, 'is valid',  url.split('github.com/')[-1] )   alternatively you could use re  for url in tests:     m = re.match(r'^(https?://)?(www.)?github.com/(.*[^/])/?$', url )     if m is None:         print('{} => FAIL!!!'.format(url))     else:         print('{} => ""{}""'.format( url, m.groups()[-1]))   also you would be better off constructing urls with format strings instead of concatenation.  url = GITHUB_API + 'repos/' + name + '/readme' url = '{api}/repos/{name}/readme'.format(api=GITHUB_API, name=name)"
learnpython,3c5ecu,Vaphell,1 point,Sun Jul 5 01:36:12 2015 UTC,wow! That's awesome. And it sounds really new to me :) Will make the necessary changes soon
learnpython,3c5ecu,echocage,1 point,Sun Jul 5 01:52:27 2015 UTC,"message = '{} => FAIL!!!'.format(url) if m is None else '{} => ""{}""'.format(url, m.groups()[-1])  print(message)"
learnpython,3c5ecu,Vaphell,2,Sun Jul 5 09:42:38 2015 UTC,"if we are code golfing i counter with this  message = '{} => {}'.format(url, '""'+m.groups()[-1]+'""' if m else 'FAIL!!!')"
learnpython,3c5ecu,echocage,1 point,Sun Jul 5 13:54:30 2015 UTC,Ooo neat trick!
learnpython,3c5ecu,__skrap__,2,Sun Jul 5 17:35:05 2015 UTC,"I'd recommend the requests library - http://docs.python-requests.org/en/latest/.  It can handle custom headers, json, get parameters, etc.  I'd use os.path.join to construct your urls:  url = os.path.join(GITHUB_API, 'users', name, 'repos')"
learnpython,3c8coh,J123uk,2,Sun Jul 5 21:17:47 2015 UTC,"/u/elbiot said it much nicer than I would have. OP please take some deep breaths and read through this: http://www.catb.org/~esr/faqs/smart-questions.html#intro  If you're really interested in learning Python I would suggest going through some online courses and try this again once you have some of the very basics down.   If you're more interested in having something built than learning Python, try something like something like /r/forhire or https://www.upwork.com/ because this subreddit is for learning python, not ""do python for me""."
learnpython,3c8coh,cscanlin,1 point,Sun Jul 5 22:00:37 2015 UTC,You could also try /r/GoForGold. For something small like this you may find someone willing to do it for a year or two of gold.
learnpython,3c8coh,novel_yet_trivial,0,Sun Jul 5 22:21:11 2015 UTC,what do i do help me
learnpython,3c8coh,elbiot,3,Sun Jul 5 21:21:02 2015 UTC,"Step 0. Calm down.  You do not need to make this work and no one needs to do it for you.  Step one.  Reformat your post to reddit formatting for code.  Step 2, state specifically what your problem is, what you expect to happen vs what is happening, including the exact trace back of your error, if any."
learnpython,3c8coh,elbiot,1 point,Sun Jul 5 21:46:56 2015 UTC,"step 0. im gonna calm it  step 1. how? im not good at that sort of thing  step 2. i want to know if the code is fine and how to get praw on it,"
learnpython,3c8coh,elbiot,2,Sun Jul 5 21:57:39 2015 UTC,"So your first question is ""how do I install praw"".  Did you check a search engine for an answer first?  If so, explain what you tried and how it didn;t work, or what is confusing about the instructions.  To format your code, click edit under your post.  Click formatting help.  Read it.  Also, read the links on the side bar about posting questions in this forum."
learnpython,3c8coh,elbiot,1 point,Sun Jul 5 22:11:00 2015 UTC,"i did search how to, it won't work im not sure if i have pip installed either i did what the searchs all told me with no sucess"
learnpython,3c8coh,elbiot,1 point,Sun Jul 5 22:13:45 2015 UTC,"Well, how would you find out if pip is installed?  If not, how would you install it?  You haven't said what Os you are on or what python version you are using."
learnpython,3c8coh,novel_yet_trivial,1 point,Sun Jul 5 22:19:30 2015 UTC,my OS is windows my python is 2.7.9 i also don't know how how i would find out if its installed or not do i put the files you download in the thing or do i take the files out the zip and put them in? i don't know i just picked this up a few hours ago
learnpython,3c3nda,RestlessPistaccio,28,Sat Jul 4 13:23:26 2015 UTC,"Try to build something. Working through a project will help you much more than going through multiple walkthroughs. You have to spend time stumbling to really cement the knowledge. My reason for learning python was to do data analysis so I just grabbed a data set and worked through reading the data, analyzing it and modeling it. I had initially spent hours just going through codecademy and various things from sliderule but when I started in on a project it immediately became clear what I did and didn't know. If you don't have a specific project in mind, try out a popular API like Amazon's or Twitter's."
learnpython,3c3nda,Northstat,3,Sat Jul 4 14:08:57 2015 UTC,I second this.  I got through CodeAcademy and was at the same point you were.  I decided to put together a python script and make a little application to do something on reddit.  Maybe make a bot?
learnpython,3c3nda,rx7raven,3,Sat Jul 4 15:08:08 2015 UTC,I am curious to know how CodeAcademy's Python primer broad enough to prepare someone to build a reddit bot. I am in the same position as the OP and i would find it quite daunting.
learnpython,3c3nda,montecarlo1,6,Sat Jul 4 20:39:28 2015 UTC,"Simple, you just build it one piece at a time. A reddit bot needs to, connect to reddit, maybe read comments, maybe process what it read from the comments (ex. Linking to wikipedia), maybe respond to comments, etc.  When you find something you want to build you break it down into small components, then search to figure out how to make each of those components.  A real life example is a car, it is designed to get you from one place to another, it has tons of parts but you wouldn't start off just ""building a car"" you'd figure out how to take all the pieces that make a car and put them all together.   But then building a car is hard right? I mean just an engine alone is hundreds of intricate parts that need to handle a lot of energy. No one person builds a car, you go to one place and get the engine, another for the steering column, etc. Then you tweak these base pieces as you desire.  Programming has the same thing, most of it you're searching for libraries that accomplish most of your goal, then you use them. If a part of it doesn't work how you want you make that piece yourself, maybe later you improve the library with your addition and now everyone can use that piece.  Programming is building just like anything else with the incredible benefit of having unlimited copies of the building blocks at your disposal, most of the time for free."
learnpython,3c3nda,pyskell,2,Sat Jul 4 22:30:17 2015 UTC,Very good explanation.  Do you happen to know of a good source for finding (or learning to find) libraries?
learnpython,3c3nda,pyskell,2,Sat Jul 4 22:55:18 2015 UTC,"Yup, Google (or your search engine of choice). Basically I'd search like ""general_area language library"" So for example if I wanted to do ""web development python library"" I'd find a bunch of full featured libraries like Django and Flask. Then to get used to them I might Google ""Django tutorial"" or beginners, or something like that.  Another helpful place if Google isn't turning up answers is to find an IRC channel (which is a large chatroom) for the programming language you're starting with and asking them ""what's a good place to start for x"". At the very least, you can then read up on what they told you and get used to some of the terminology in the domain you're interested in. And once you're familiar with the domain it becomes a lot easier to find what you're looking for."
learnpython,3c3nda,montecarlo1,1 point,Sat Jul 4 23:02:37 2015 UTC,Many thanks.
learnpython,3c3nda,Neceros,1 point,Sat Jul 4 23:20:02 2015 UTC,Very good information indeed.
learnpython,3c3nda,joshgrib,1 point,Sun Jul 5 06:09:13 2015 UTC,"This may help  Edit: Meant to reply to /u/montecarlo1. Oops. Also, /u/RestlessPistaccio"
learnpython,3c3nda,RisingStar,3,Sun Jul 5 02:16:31 2015 UTC,"I agree that making something cool with an API can be an awesome project. I used an API my school had for scheduling classes, then used python to make an app to show you all your possible schedules. I ended up learning urllib, xml parsing, and pickle(python libraries). Then I wanted to make it a web app so I'm working on flask(web framework) and the whole thing has been really fun and incredibly informational. People say it all the time but you really never learn as much by ""studying"" CS stuff as you do from making stuff using them."
learnpython,3c3nda,EnterpriseNCC1701D,1 point,Sat Jul 4 17:28:19 2015 UTC,Interesting suggestion.  It hadn't occurred to me that I would be able to do that already.  I guess I should try one of the API course on Coursecademy.
learnpython,3c3nda,timworx,2,Sat Jul 4 17:18:35 2015 UTC,Have not looked at the API course but if you do decide to do something like this be sure to look into existing libraries.  For reddit there is praw for example. There is no need to reinvent the wheel when someone else has done a really good job already. The main objective should be to complete some kind of project. Going through the motions of that will teach you a lot and help focus what you learn around what you want to do.
learnpython,3c3nda,FlockOnFire,1 point,Sat Jul 4 21:56:13 2015 UTC,What do you mean by try out an api?
learnpython,3c3nda,RovingAtom,1 point,Sun Jul 5 00:51:25 2015 UTC,"+1 for this,  exactly what I did when I was probably around halfway through.  Figure out something interesting to do,  a problem to solve for even just yourself.   A side note, where did you get into data analysis,  any good resources. I'd like to learn how to better and more deeply analyze data."
learnpython,3c3nda,veruus,1 point,Sun Jul 5 01:59:33 2015 UTC,This. It's also much more interesting and rewarding to be working on a self chosen goal.
learnpython,3c3nda,RovingAtom,8,Sat Jul 4 14:25:27 2015 UTC,"I came across the course/book Automate the Boring Stuff with Python from a thread on here which delves into projects that use Python to scrape web pages, process data and that sort of thing. I intend to try this out after the Codecademy course."
learnpython,3c3nda,veruus,3,Sat Jul 4 16:19:46 2015 UTC,This looks amazing.  Thanks so much for this link!
learnpython,3c3nda,RovingAtom,2,Sat Jul 4 17:16:51 2015 UTC,"Sonofawhore. I just bought that book—didn't realize it was free. Oh well. Enjoy that blip on your royalty check, Al."
learnpython,3c3nda,IAmAmbitious,1 point,Sat Jul 4 19:00:24 2015 UTC,It's free in web page form so I guess you pay for the value of it being packaged up into a book.
learnpython,3c3nda,p10_user,3,Sat Jul 4 19:25:28 2015 UTC,No ragrets.
learnpython,3c3nda,rkkid9,2,Sat Jul 4 20:30:51 2015 UTC,Here you go
learnpython,3c3nda,bionikspoon,9,Sat Jul 4 17:58:13 2015 UTC,"Hi! I started with Codecademy as well and after that I transitioned to LPTHW. I worked with this tutorial up until the classes/objects section. I didn't feel like the author's explanation of objects and classes was clear enough so I just started searching for ""ELI5 Classes/Objects"" to learn more about them. From there I started working on problems from HackerRank. Very good website with tons of problems!   I'm also taking the MIT Intro to Computer Science course on edX. The instructor does a great job of explaining concepts you have already learned from Codecademy and LPTHW. After 2 tutorials and working on your own problems, the MIT course helps to solidify your understanding of the concepts and material."
learnpython,3c3nda,malice8691,5,Sat Jul 4 18:17:17 2015 UTC,I recommend checkio.
learnpython,3c3nda,alaudet,5,Sat Jul 4 17:26:47 2015 UTC,I started doing codewars problems after I finished code academy. I've learned a lot because I spent a lot of time looking at the docs and stackoverflow to solve problems as well as reading other people's solutions.
learnpython,3c3nda,flamesflight,4,Sat Jul 4 14:14:37 2015 UTC,"Should I work through [insert beginner learning resource here] next?   No! Build something.  You're not done learning obviously. But your learning can become more focused on solving specific problems.  You learn more proficiently when you can connect what your learning with how you can use it.  For example, maybe you want to build a cash register or something just for practice, you start, and realize ""damn, I thought I understood functions but now they're confusing me"".  Go read specifically about functions in python and try again. ""Now whats all this int vs string conversion stuff""  Go read specifically about that and try again.  Rinse and repeat.  To summarize, by the time your done codeacademy or lpthw or w/e, your toolbox should be full enough that you can start solving your own problems--even if it means googling for a solution or a focused learning resource (ie articles/chapters specifically on functions or unicode or objects, etc).  Resources like LPTHW and codecademy are good high level intros but they don't do a good job at forcing you to think about the material and how you can reuse the concepts in your own projects."
learnpython,3c3nda,MJMarto,4,Sat Jul 4 14:52:17 2015 UTC,Its time to build something. You will learn more that way too
learnpython,3c3nda,i_dreddit,2,Sat Jul 4 19:19:29 2015 UTC,Non programming related but I would take time to start setting up my coding environment.  What editor or IDE are you going to use.  Learn about skeleton templates and getting a project up and running.  Learn how to use git asap.  Version control is indispensable.
learnpython,3c3nda,REE93,2,Sat Jul 4 20:49:38 2015 UTC,I am working my way through LPTHW and Programming for Everyone through Coursera. Try working through the projects at in python https://projecteuler.net/ and when you become stuck research what you need to finish.
learnpython,3c3nda,dxkillr,2,Sat Jul 4 17:24:00 2015 UTC,"In addition to the practice sites mentioned in the other comments (codewards, projecteular, codeabby, check.io etc.) I HIGHLY recommend this course from MIT. Your Codecademy foundation will help you understand how to actually write code, this course will help you understand the why. It dives into theory and provides a great foundation for understanding what and why you're actually doing when coding."
learnpython,3c3nda,hisox,2,Sat Jul 4 17:29:58 2015 UTC,i went the other way.. i got to the classes part in LPTHW and had to go to codecademy to learn coz LPTHW was not set out the right way for me to learn.  i will go back to lpthw to continue
learnpython,3c3nda,darockerj,4,Sat Jul 4 18:26:17 2015 UTC,"My advice is go straight to LPTHW. Codecademy is great for HTML/CSS and other language's syntax but it doesn't teach you how to think like a programmer. LPTHW is a good primer to that. If you really want to excel, you should read up on Algorithms and Data Structure in Python.   Good luck! :)  Edit: Oh and if you feel that you're ready, go to coderbyte.com and see if you can do their problems there. It'll also prepare you for any job interviews should you decide to make a career out of this."
learnpython,3c6e2n,xrobotx,1 point,Sun Jul 5 07:05:58 2015 UTC,what urls are you using? It maybe that the site or sites don't like your user-agent.
learnpython,3c6e2n,StaticFuzz,1 point,Sun Jul 5 08:31:14 2015 UTC,I can't reveal the url. I tried with many url and I don't get this error. What I can do ?
learnpython,3c6e2n,StaticFuzz,1 point,Sun Jul 5 09:15:17 2015 UTC,"so if your not getting the error with other urls then it is site specific. Without knowing the url that's causing the error, options are limited. I'd recommend trying a few different things:  try a different user-agent, or not specifying one  I've never used a custom opener object for scraping data, and it doesn't look like your doing anything customized with it. Try using the default urllib2.urlopen().    Check if the site has an API, or any information about how to handle scraping their site."
learnpython,3c6e2n,StaticFuzz,1 point,Sun Jul 5 09:34:57 2015 UTC,I just tried different user-agents and not specifying one I just tried the default opener   But I get the same error. On the site there is not docs about API or scraping.  I just sent you a PM with the url.
learnpython,3c6e2n,StaticFuzz,1 point,Sun Jul 5 15:05:20 2015 UTC,"The site doesn't like robots. I was unable to get any of the webcrawler  user-agents accepted by there server. It did however send me data if I was masquerading as a browser. Here is a site where you can find a list of user-agents. I tested the most recent 'mozilla' and 'chrome', both worked.  That said, it's clear the site doesn't want people crawling or scraping the site. Pretending to be a browser while sucking up there bandwith with a crawler/scraper is considered a dick move. If you plan on heavily scraping the site I would recommend contacting the sites owners about it, otherwise they might just block your IP."
learnpython,3c6e2n,StaticFuzz,1 point,Sun Jul 5 18:16:45 2015 UTC,I need to crawl only 100 pages. I contacted them but they didn't respond. I have just tried 20 user agent from that list but don't work. How have you masquerated as a browser ?
learnpython,3c5d64,Megalolo8,2,Sat Jul 4 23:18:39 2015 UTC,"You specify the relative path in terms of the current working directory, so  with open(""path/to/my/file.txt"", 'w') as output_file:     output_file.write(""hey!"")   In the directory you call it in, you will go down the path automatically. I don't believe Python creates the directory structure for you but there's probably a flag/function for that in the file class or open function."
learnpython,3c5d64,deathofthevirgin,1 point,Sat Jul 4 23:20:25 2015 UTC,"thank you, problem solved!"
learnpython,3c5d64,strechyballs,2,Sat Jul 4 23:45:29 2015 UTC,"If you just specified a file name, it will end up going to the current working directory (usually where the script you are running is in, but not always the case).   Find out the current working directory :  print os.getcwd()"
learnpython,3c5d64,deathofthevirgin,1 point,Sat Jul 4 23:46:25 2015 UTC,"Are you sure? For me it's the place you're calling it from:  ~/testing λ mkdir subdir ~/testing λ cd subdir ~/testing/subdir λ echo ""import os; print(os.getcwd())"" > cwd.py ~/testing/subdir λ python3 cwd.py  /home/myname/testing/subdir ~/testing/subdir λ .. ~/testing λ python3 subdir/cwd.py  /home/myname/testing"
learnpython,3c5d64,strechyballs,3,Sat Jul 4 23:52:44 2015 UTC,"Right. Where you are calling from is your ""current working directory"". For me, most of the times is the same folder where the script is saved."
learnpython,3c4a4y,dmv1975,4,Sat Jul 4 17:11:59 2015 UTC,"So close :)  print('{:>{n}}'.format('string goes here',n=30))"
learnpython,3c4a4y,novel_yet_trivial,1 point,Sat Jul 4 17:15:13 2015 UTC,"Or ...  print('{:>{x}}'.format(string goes here', x=n))   amirite?"
learnpython,3c4a4y,novel_yet_trivial,3,Sat Jul 4 17:27:37 2015 UTC,"That's right; although I usually see people do it like this:  print('{:>{n}}'.format('string goes here',n=n))   So that's it's easier for humans to read."
learnpython,3c4a4y,novel_yet_trivial,1 point,Sat Jul 4 17:33:52 2015 UTC,"I also just tried  print('{:>{}}'.format('string goes here', n))   and that also worked, so I think that's the easiest to read."
learnpython,3c4a4y,Rhomboid,2,Sat Jul 4 18:15:00 2015 UTC,"Yes, that's automatic field numbering. You can also do this:  print('{0:>{1}}'.format('string goes here', n)) #manual field numbering   Lots of options. But IMO keywords are the easiest for humans to read.  print('{string:>{fill_amt}}'.format(     string='string goes here',      fill_amt=n))"
learnpython,3c6268,isnotkosok,2,Sun Jul 5 04:14:37 2015 UTC,"You should check out PythonTutor (https://duckduckgo.com/?q=pythontutor&t=canonical). It'll explain program flow and what variables are assigned to  what.  Here's the link for your snippet:  http://pythontutor.com/visualize.html#code=a+%3D+range(10%29%0Ab+%3D+iter(a%29%0A%0Ac+%3D+b.next(%29+%23+So+I+did+this%0Ad+%3D+b.next(%29%0A%0Aprint+c%0Aprint+c%0A%0Aprint+b.next(%29%0Aprint+b.next(%29%0A%0Aprint+d&mode=display&origin=opt-frontend.js&cumulative=false&heapPrimitives=false&textReferences=false&py=2&rawInputLstJSON=%5B%5D&curInstr=0  It doesn't actually end up working too well in this case because the iterator object doesn't say what's in it in it's string representation, but it might be useful for other cases."
learnpython,3c6268,deathofthevirgin,1 point,Sun Jul 5 06:48:55 2015 UTC,"This is entirely as expected. The first call to b.next() returns 0, which is saved as c. The second call to b.next() returns 1, which is saved as d. Then c (0) is printed twice. The third call to b.next() returns 2, which is printed. The fourth call to b.next() returns 3, which is printed. Then d (1) is printed.  Also, it's preferable to use next(b) instead of b.next() because the latter no longer works in Python 3.  Why exactly did you want to reduce your need to repeatedly type .next()? It's likely that there's another way to fix your code, but you have to show/tell us what you are actually doing first."
learnpython,3c6268,kalgynirae,1 point,Sun Jul 5 04:55:54 2015 UTC,"You created an iterator for range(10). You assigned its first next, which is 0, to c. The value of b.next() is evaluated and then assigned to c, so c isn't b.next(), it's 0. Same for evaluating it again and assigning 1 to d. Then you call b.next() twice, incrementing it to 2 and 3 and printing those values. Then you print d, which was assigned a value of 1.  Does that answer your question? I assume your confusion stems from you expecting that printing c and d would increment the iterator again, but the reason they don't is because they only hold the numerical value that was returned from b.next() on that particular call."
learnpython,3c546b,Scoutdrago3,2,Sat Jul 4 21:45:59 2015 UTC,The fact that no-one replies to your posts regarding the Module could says something about its importance.
learnpython,3c546b,Megalolo8,1 point,Sat Jul 4 23:04:40 2015 UTC,"Haha, thanks for the input."
learnpython,3c546b,StaticFuzz,2,Sun Jul 5 01:58:43 2015 UTC,"I've never used this module, but i can assure you there's nothing this module does that you couldn't do with sockets on your own.  As for the source code you can find it here. you can usually find a link on the documentation page, just below the title."
learnpython,3c3vay,_tec9,4,Sat Jul 4 14:50:42 2015 UTC,"Your modifying the list while iterating over it, which is massively bad to do in python.  This article explains why: https://unspecified.wordpress.com/2009/02/12/thou-shalt-not-modify-a-list-during-iteration/  The TL;DR important part:   > elems = ['a','b','c'] > for e in elems: >     print e >     elems.remove(e) > This prints: >  > a > c    The author of this code snippet probably expected it to iterate over each element of the list, print it out, then remove it so that the list ends up empty (this may be desirable if, for example, you are removing items conditionally). Hence, he is probably surprised that 'b' was skipped, and furthermore, remains in the list:  > >>> elems > ['b']   We can see why only 'a' and 'c' were touched by imagining that Python translates the loop into the following equivalent lower-level code:  > elems = ['a','b','c'] > i = 0 > while i < len(elems): >     e = elems[i] >     print e >     elems.remove(e) >     i += 1"
learnpython,3c3vay,henny_mac,2,Sat Jul 4 17:00:35 2015 UTC,"Looks like you have your primary issues sorted, just felt like mentioning a few form/syntax things about this.  You can convert a string to a list of characters by using list('string'). So you can save a lot of space by doing az = list('abcde[...]'). Alternatively, you could call import string, and then call string.ascii_lowercase to return the complete lowercase alphabet as a single string. So having imported string, you could do az = list(string.ascii_lowercase)  Don't be stingy with your variable names, and don't use capitals for variables whose value might change (let alone ones which you intend to change). I would suggest az and AZ would be better named as something like az_list_orig and az_list_copy. This might seem tedious, but it will make your code much easier for others to help you with, and quite a bit easier when troubleshooting yourself. As far as countering the tediousness, if you're not already, you should use an IDE with autocomplete capability. For Windows, PyCharm seems to be the favoured free one available now. If you happen to be on a Linux distro, I love the Eric IDE, though it can be troublesome to get running...  Generally the use of i as the temporary variable in a for loop is reserved for indicating that you are iterating through indices. If you are iterating over whatever the iterable happens to contain, use x, or (even better) use something which describes the objects you are iterating over. In this case I would use letter. So you would end up with: for letter in az_list_orig: which, again, is much clearer for others reading your code, as well as for yourself.  Don't be too keen to cram as many operations into each line as possible. Python can do incredible 'one-liners', but good programmers don't consider this good practice generally. While it isn't a case that good programmers would have an issue with, the main source of your confusion here was in the AZ.append(az.pop(az.index(i))) line. For a beginner, there is a fair bit going on here. If I were in your situation, the first thing I would do to debug would be to break that line up, something like:  for letter in az:     ind = az.index(letter)     p = az.pop(ind)     AZ.append(p)   If that didn't clarify things for me, I would add print statement in there so the relevant values were displayed. Something like:  for letter in az:     print(""loop start:"", az, AZ) # show the state of the lists at the start of the loop     ind = az.index(letter)     p = az.pop(ind)     print(""letter, ind, p:"", letter, ind, p) # show the current values of the variables     AZ.append(p)     print(""loop end:"", az, AZ) # show the state of the lists at the end of the loop"
learnpython,3c3vay,callmelucky,4,Sun Jul 5 08:04:56 2015 UTC,"The way .pop(i) works is by pulling the i-th item out of the list, ie removing it from the original while returning the value. It doesn't just access it. The list is getting shorter every time you loop through it, so the .index(i) part doesn't return what you want it to.  This is a really convoluted way of copying lists. You could what you want a couple ways:  for index, item in enumerate(az):     AZ.append(az[index])  for item in az:     AZ.append(az.pop()) # this will pop the top item of the list, no need for indexes   or even better yet:  for item in az:     AZ.append(item)   or even:  AZ = list(az) # clones the list; you need list() so they don't point to the same list   EDIT: if you want to see what pop is doing, add this to your code:  for i in az:     print(i, az.index(i))     AZ.append(az.pop(az.index(i)))"
learnpython,3c3vay,TimRedd13,1 point,Sat Jul 4 15:07:20 2015 UTC,AZ = [i for i in az] AZ = az[:]
learnpython,3c3vay,The-Mathematician,1 point,Sat Jul 4 15:31:14 2015 UTC,"This is a really convoluted way of copying lists.   Absolutely, it was curiosity more than practicality.   if you want to see what pop is doing, add this to your code:   I understood this part.   The way .pop(i) works is by pulling the i-th item out of the list, ie removing it from the original while returning the value. It doesn't just access it.   Mutable action, yes.   The list is getting shorter every time you loop through it, so the .index(i) part doesn't return what you want it to.   Why? When i look at this line:  AZ.append(az.pop(az.index(i)))   As i see it it evaluates the thing its doing all at once on the same line, append the product of az.pop(at the index of i), then and only then does it move on to another step in the sequence, it doesnt mute the list during the sequence, it records the sequence, executes the action (muting the list), then moves on to the next thing in the sequence.  If anything i see it as messing with a predetermined sequence in the for loops iterable sequence, like a tag has been put on every item in the list, before it is worked on, and then it goes off the tags, not what actually comes next in the real actual list (rather than the mapped out sequence it drew up at the time the for loop began).  Does that make sense?  This is how i figured it was working, and wanted clarification on that. If that was the case and what exactly is ""for"" doing with that sequencing/tagging.  I may be completely wrong."
learnpython,3c3vay,swingtheory,2,Sat Jul 4 15:41:26 2015 UTC,"If you work it out on paper, tracing the iterations, you will see the behavior. For example:  ns = [1,2,3,4,5,6] newNs = [] for i in ns:      newNs.append(ns.pop(ns.index(i)))  # the first iteration would append '1' to newNs: newNs = [1] ns       = [2,3,4,5,6]   however, the next iteration of the for loop is looking at the 2nd element in the list 'ns'. The second element happens to b '3'.  # next iteration newNs = [1,3] ns       = [2,4,5,6]   now, the for loop 'i' is pointing to the third element in the list ns.  # 3rd iteration newNs = [1,3,5] ns       = [2,4,6]   and now since the for loop 'i' is looking for the element at the 4th position and there is none the loop is terminated.  Hopefully this makes it a bit more clear. Generally, it's bad practice to modify the list that you are looping through during the iterations because it causes funky behavior like you see in this example."
learnpython,3c3vay,ingolemo,1 point,Sat Jul 4 16:53:58 2015 UTC,"however, the next iteration of the for loop is looking at the 2nd element in the list 'ns'.   This was very well explained, i understand it now.  The for loop looks for 1st then 2nd then 3rd, not thing, then thing, then thing, it not tagging/predetermining things, this is the only way it could work.   Generally, it's bad practice to modify the list that you are looping through   I can see that, its just perhaps a way to mark things as done, to remove them from the list (of things to do), but there are other, less funky, ways to do that im sure.  Really appreciate your explanation, very clear."
learnpython,3c3vay,REDandBLUElights,1 point,Sat Jul 4 17:05:11 2015 UTC,There's a FAQ item for this.
learnpython,3c5nty,de-sine,2,Sun Jul 5 01:18:19 2015 UTC,It turns out that Constants section of the docs is a sub-section of Windows Popen helpers. So those are only available on Windows.
learnpython,3c5nty,kalgynirae,1 point,Sun Jul 5 01:44:03 2015 UTC,"Hm, thanks.  The docs say you need that flag to be able to send a control-c event.  Any idea if that's windows only?  Edit: CTRL_C_EVENT is a Windows only signal.  I'll see if I can get SIGINT to work"
learnpython,3c3pjv,zunjae,19,Sat Jul 4 13:49:12 2015 UTC,https://www.sqlite.org/
learnpython,3c3pjv,cerealbh,3,Sat Jul 4 13:51:54 2015 UTC,"^  this is the answer. ""import sqlite3"""
learnpython,3c3pjv,REDandBLUElights,1 point,Sat Jul 4 14:53:47 2015 UTC,"alright, thank you!"
learnpython,3c3pjv,frikk,1 point,Sat Jul 4 15:12:16 2015 UTC,"Sqlite rocks because it is file based, really lightweight. No server needed"
learnpython,3c3pjv,marc_poulin,2,Sat Jul 4 16:25:53 2015 UTC,Use the standard sqlite module. https://docs.python.org/2/library/sqlite3.html
learnpython,3c3pjv,SleepyHarry,2,Sat Jul 4 14:55:04 2015 UTC,"There's a sqlite3 command line util you can download as well, but it's easy enough within Python itself."
learnpython,3c3pjv,kurashu89,1 point,Sat Jul 4 16:07:04 2015 UTC,"You can run Postgres locally. The same with MySQL. Sqlite works in a pinch to prototype ideas, but once you move into actual application development, you'll want to test against the actual database you're using (if possible, I understand using Oracle or SQLServer locally would probably cause license issues).  Sqlite is great for quickly banging out an idea or schema or if you're working with data too big to fit in memory (maybe you have a 1.5Tb file of every public comment object reddit).   But it's not what you'd use in production, so you may as well test against what you're running on production (not running the tests on prod, but a prod like environment)."
learnpython,3c3pjv,frikk,1 point,Sat Jul 4 15:22:24 2015 UTC,"True. I'd you are doing web Dev, sqlite will bog down under heavy load. But for desktop apps or low volume web stuff, its fine.  Use sqlalchemy if you would like a nice layer so that you can change db without changing much code"
learnpython,3c3pjv,kurashu89,1 point,Sat Jul 4 16:27:50 2015 UTC,"That's true. It all depends on what is the end goal.  I will say that SQLAlchemy does go a long way to normalizing database interaction, even at the pseudo-SQL level (the core layer). But there's still things you need to guard against (UUIDs come to mind, PostGres and MySQL handle them differently) and that's without getting into database specific things (like PostGres's hstore or JSON support)."
learnpython,3c3pjv,egisspegis,1 point,Sat Jul 4 16:43:34 2015 UTC,Actually Sqlite is quite performant. I would say it could easily handle 80% of websites out there.
learnpython,3c3pjv,kamori,1 point,Sat Jul 4 18:24:45 2015 UTC,Depends. Mainly on how much file io. Also not a good choice on network based storage that sees any decent amount of load
learnpython,3c3pjv,frikk,0,Sat Jul 4 22:28:48 2015 UTC,"Problem is with threads and file io, but yes it can stand up on its own"
learnpython,3c3pjv,rheajr86,1 point,Sat Jul 4 23:08:52 2015 UTC,"I just finished watching this video, it says python 3 but it worked for me in python 2."
learnpython,3c4w9l,anonymousperson28,1 point,Sat Jul 4 20:33:28 2015 UTC,Update! Figured it out; you have to set the unraisable_tracebacks directive to True. (or use it as a decorator if you only want it to apply to specific functions)  #cython: unraisable_tracebacks=True
learnpython,3c3sct,Linuxthekid,3,Sat Jul 4 14:20:47 2015 UTC,"I can't figure out how to get it to recognize only 3 letters out of an entire word   What? Do you mean searching a string for ""/r/""? E.g. you want it to connect to some IRC server, check each message it receives for ""/r/"" followed by some alpha-numeric characters, then send a message back with a full Reddit URL to that subreddit?"
learnpython,3c3sct,2pac_chopra,2,Sat Jul 4 14:30:33 2015 UTC,Exactly that.
learnpython,3c3sct,2pac_chopra,2,Sat Jul 4 14:40:31 2015 UTC,"rhgrant10's response says how to test for the existence of some letters, but you might want to look at the re (regular expressions) module, and the string.find function.  import re  for m in re.findall(r""\B(/r/\w+)"", ""/r/abcdef abc /r/learnpython a/r/f C:/r/t""):     print(m)   Outputs:  /r/abcdef /r/learnpython /r/t"
learnpython,3c3sct,rhgrant10,3,Sat Jul 4 15:01:09 2015 UTC,"Is always best to state:  1) your goal 2) your problem 3) what you've tried (your code ideally)  Having said that, if you simply want determine whether some string (3 chars or otherwise) is within another:  target = 'bcd' print(target in 'abcdef') # True print(target in 'xyzpdq') # False print(target in 'axbycz') # False print(target in '') # False"
learnpython,3c3sct,Micotu,1 point,Sat Jul 4 14:38:39 2015 UTC,"Search for "" /r/"" with the space in front of it so it doesnt find already completer urls.  Then find the next "" "" after the "" /r/"" and add the stuff in between the spaces to www.reddit.com.  or you could .split().  Find which strings start with /r/ andd add those to www.reddit.com.  /r/ in word == true and word(0) == ""/"" or something like that."
learnpython,3c4j68,MJMarto,1 point,Sat Jul 4 18:33:51 2015 UTC,"Try inserting something like print(self.viruses) and print(virus) before and after line 232 respectively, what does it say?  I imagine one of the reproducex calls ends up not returning anything and when you do child_v_pop.append(virus.reproducex(self.popDensity, self.drugs)) (line 249) the value None gets appended. For some reason you catch NoChildException inside reproducex instead of letting it propagate."
learnpython,3c4j68,an_actual_human,1 point,Sat Jul 4 19:01:34 2015 UTC,"/u/an_actual_human - thanks! This worked. Unfortunately, I'm now getting another mysterious key error:  in isResistantTo     return self.resistances[drug] KeyError: 'guttagonol'   updated code - This is weird b/c if I print the resistances dict that key comes up inside of it....  EDIT: Figured this out - I had an error with the resistance inheritance in child viruses. Fixed it."
learnpython,3c4j68,an_actual_human,1 point,Sat Jul 4 19:40:11 2015 UTC,"What does it say if you print self.resistances before line 64?  By the way, you still catch NoChildException inside reproducex. That's not what you are supposed to do (see lines 106-107)! The way it is written it the exception is useless. I think you are supposed to catch it in update."
learnpython,3c4j68,an_actual_human,1 point,Sat Jul 4 19:46:59 2015 UTC,"You are right! I think that was the underlying problem of why I was getting the NoneType error. If I use the exception in update, it won't populate the final virus list with None.  Thank you! Here is the final code FYI"
learnpython,3c4j68,monstimal,1 point,Sat Jul 4 19:56:40 2015 UTC,"Well, yeah, if foo doesn't return anything, foo() is None."
learnpython,3c4j68,an_actual_human,1 point,Sat Jul 4 20:03:26 2015 UTC,"I might be misunderstanding something but is it because you create ""viruses"" containing ResistantVirus objects inside of:def runSimulation_rez... and then try to call doesClear() outside of that function?"
learnpython,3c4j68,monstimal,1 point,Sat Jul 4 19:21:36 2015 UTC,doesClear is called inside patient.update which is called inside runSimulation_rez.
learnpython,3c4j68,an_actual_human,1 point,Sat Jul 4 19:27:11 2015 UTC,"Looks to me like the first time through it works but child_v_pop puts a bunch of ""None"" in the list."
learnpython,3c4j68,monstimal,1 point,Sat Jul 4 19:49:16 2015 UTC,"Yes, but it has nothing to do with your initial comment."
learnpython,3c4j68,an_actual_human,1 point,Sat Jul 4 19:50:02 2015 UTC,"Yeah sorry, I kept looking. Here I'll cross it out for you."
learnpython,3c4hwn,xRitz,3,Sat Jul 4 18:22:32 2015 UTC,"It would be much easier to use the youtube-dl python package. Here's a quick example.  If you really want to use youtube-mp3.org the trick is to think of what the clicking the submit button does, and then replicating that."
learnpython,3c4hwn,novel_yet_trivial,0,Sat Jul 4 18:41:30 2015 UTC,This would be a simple task with mechanize or splinter instead of requests.
learnpython,3c3l65,came_on_my_own_face,2,Sat Jul 4 12:53:44 2015 UTC,You can store the data to a text file and then load your text file in your script for your graph.  To avoid opening a window use savefig('filename') instead of show().  matplotlib and numpy will work for this.    Is it only one column of data?  Is it a date with a value?
learnpython,3c3l65,alaudet,1 point,Sat Jul 4 13:02:26 2015 UTC,A date with value should suffice. I have 4 datapoints so I suppose I'll need to find a way to store 4 different things in a textfile. Or just use a separate text file for each datapoint.
learnpython,3c3l65,alaudet,2,Sat Jul 4 13:15:53 2015 UTC,"in that case (as an example) you would probably have something that looks like this in your text file..depending how you create it;  2015-07-04 9:00:00, 1, 2, 3, 4 2015-07-04 9:01:00, 5, 6, 7, 8   Check numpy.loadtxt for getting the data into your graph.  You will also need to handle the date part.  Look into matplotlib.dates for this.  EDIT:  Correction it is numpy.loadtxt not loadtext"
learnpython,3c3l65,marc_poulin,2,Sat Jul 4 13:37:45 2015 UTC,"For saving your data, a simple CSV file should work. Look at the standard ""csv"" module. https://docs.python.org/2/library/csv.html"
learnpython,3c3l65,p10_user,1 point,Sat Jul 4 14:52:56 2015 UTC,"Alternatively you could check out pandas, though it might be more than you need right now."
learnpython,3c4s7n,shakhaki,3,Sat Jul 4 19:56:05 2015 UTC,"I haven't used pygame in awhile, but I believe you have to update the display after you make any changes like .fill(). Try adding screen.display.flip() after the first screen.fill() and at the end of your while loop.  edit: screen.display.flip() not screen.flip(). Sorry if this caused you confusion OP."
learnpython,3c4s7n,StaticFuzz,1 point,Sat Jul 4 21:13:53 2015 UTC,"I tried that and now the console window crashes with this error. I put screen.display.update() and screen.display.flip() after each instance as you mentioned to do.  C:\Python34\python.exe ""C:/Python34/Test File.py"" Traceback (most recent call last):   File ""C:/Python34/Test File.py"", line 12, in <module>     screen.display.update() AttributeError: 'pygame.Surface' object has no attribute 'display'"
learnpython,3c4s7n,StaticFuzz,2,Sun Jul 5 01:49:06 2015 UTC,I'm an idiot. Try pygame.display.flip() or pygame.display.update().
learnpython,3c4s7n,IStoleYourHeart,1 point,Sun Jul 5 08:04:41 2015 UTC,That did it! I should've known myself that I needed to plug that.
learnpython,3c3zpo,p5eudo_nimh,3,Sat Jul 4 15:34:47 2015 UTC,"So, the problem with having functions like this is that they're thin functions - they don't really do anything on top of what sqlite gives you natively, and just add clutter.  What would be more useful is to build a data access layer, something which interacts with the database but offers a higher level interface. You're starting to get towards this idea with tableDisplay, but you could push it a bit farther. I can't give very many concretes, not having your database schema, but here's a an idea:  class WineStore:     """"""     Stores information about various wines.     """"""     def __init__(self, connection):         self.db = connection         self.cursor = self.db.cursor()      def get_wines(self):         """"""         Returns a list of all wines.         """"""         self.cursor.execute('SELECT wine FROM wines')         return [wine for (wine,) in self.cursor]      def get_price(self, wine):         """"""         Gets the price of a wine.         """"""         self.cursor.execute('SELECT price FROM wines WHERE wine == ?', (wine,))         return next(self.cursor)"
learnpython,3c3zpo,adamnew123456,1 point,Sat Jul 4 16:17:12 2015 UTC,"That is overdoing it a bit.  For the first three functions what you're essentially doing is just aliasing the functions, in other words renaming. Unless you're writing an adapter, you don't really need to alias, imo."
learnpython,3c4kzf,BasicDesignAdvice,2,Sat Jul 4 18:50:33 2015 UTC,"the on-screen output is double spaced because each line of the file contains a newline character on the end, and the print statement adds a newline as well. You can can get rid of the included newline like this:  print(line.replace('Hostname','Hostname ""Whatever""').rstrip())   In this code, the file is not being modified at all. If you want to modify, you need to reassign ""line"":  if line.startswith('Hostname'):     line = line.replace('Hostname','Hostname ""Whatever""')   Edit: if this is a standard .ini file, look into the ConfigParser module."
learnpython,3c4k8q,zunjae,3,Sat Jul 4 18:43:41 2015 UTC,"Yes.  try:     blah() except Exception as e:     print(e)   edit: formatting. late as hell, but OCD."
learnpython,3c4k8q,p5eudo_nimh,3,Sat Jul 4 18:51:25 2015 UTC,try:     blah() except ExceptionName as e:     print(e)
learnpython,3c4k8q,novel_yet_trivial,3,Sat Jul 4 19:07:08 2015 UTC,"Yes there is.  try:     something() except Exception as e:     print(e)   This is broad and will capture and print most exceptions. You can also change it up to capture a specific exception.  try:     something() except KeyboardInterupt:     print(""caught interupt"")   In this example, if something() was say a loop you could safely interupt the loop by pressing Ctrl+c and catch the exception. More can be found here http://docs.python.org/library/exceptions"
learnpython,3c4k8q,Nodocify,1 point,Sat Jul 4 19:08:08 2015 UTC,thanks!  I tried reading the Python Docs but it's such a mess compared to the Java doc... ):
learnpython,3c4k8q,Nodocify,1 point,Sat Jul 4 19:10:37 2015 UTC,You're welcome and I agree. I come from a C++ background and it's sad that python is the first language where reading the docs is a skill that you need to learn along with the language.
learnpython,3c4k8q,TeamSpen210,1 point,Sat Jul 4 19:24:46 2015 UTC,"In addition to printing the exeption object itself, you can use the traceback module to print the traceback. Inside the except block use traceback.print_exc() to print the exception directly, or traceback.format_exc() to get it as a string."
learnpython,3c4k6s,mpm360,3,Sat Jul 4 18:43:11 2015 UTC,Difference between 2 and 3 is tiny. Just learn python
learnpython,3c4k6s,04h,1 point,Sat Jul 4 19:09:52 2015 UTC,"By the time I get really good at it, Python 2 will have been bypassed by the Python user base.   No way. I'd bet Python 2 will be the primary Python for another 4-5 years.  Just work through codeacademy and Learn Python the Hard Way, and rewrite the code in python 3 on your local computer. You'll quickly see that the differences are tiny."
learnpython,3c4k6s,novel_yet_trivial,1 point,Sat Jul 4 19:05:18 2015 UTC,It will depend though. New projects not dependent on any 2 libs will probably be written using 3 (unless the author hates 3). But I agree with it for older projects dependent on 2 code. So depends what OP wanna do with his python.
learnpython,3c4k6s,Smartare,1 point,Sat Jul 4 19:20:03 2015 UTC,"What OP writes is dependent on what OP wants to do with his python. But being a programmer is often more reading code than writing it. As long as Python2 is widely used, OP will have big benefits from being able to read, understand, and translate it."
learnpython,3c4k6s,novel_yet_trivial,1 point,Sat Jul 4 19:25:17 2015 UTC,That is true.
learnpython,3c4k6s,Smartare,1 point,Sat Jul 4 20:38:19 2015 UTC,The actual python devs have slated no more updates to 2.7 after 2015. This in no way means that Python 2 is dead.   RedHat Enterprise Linux also guarantees updates to all software shipped with their distro and they still ship with Python 2.7. RHEL 7 was released March 2015 and comes with 13 years of support and updates. This does mean that RedHat will be offering updates for Python 2.7 but they are not required to share those updates outside of their customers. That being said RedHat has a reputation of giving alot to the open source world. So it's probably safe to say that we might still be seeing some Python 2.7 updates being released for some time to come.  Also every Python 3 install comes with a handy script known as 2to3.py which will convert most Python 2 scripts to being Python 3 compatible.
learnpython,3c4k6s,Nodocify,1 point,Sat Jul 4 19:21:25 2015 UTC,"slated no more updates to 2.7 after 2015   Python 2.7 will update with bigfixes and security patches until 2020, at least."
learnpython,3c4k6s,novel_yet_trivial,1 point,Sat Jul 4 19:28:58 2015 UTC,"Thanks for this! I did not hear about this announcement.   This declaration does not guarantee that bugfix releases will be made on a regular basis, but it should enable volunteers who want to contribute bugfixes for Python 2.7 and it should satisfy vendors who still have to support Python 2 for years to come.   Just something to keep in mind."
learnpython,3c4k6s,Nodocify,1 point,Sat Jul 4 19:32:19 2015 UTC,"You're right to start with the modern major version. It's an ongoing embarrassment that a large fraction of our community remain stuck in the past: be past of the solution. :)  I learned via ""Dive into Python 3"", but once you can read and write a bit the best learning material there is is other people's code, and the iPython shell.  Go and pip install ipython and just start using Python for daily tasks, and reading the code for interesting projects. Write your own, and don't be afraid to publish it and get feedback. Contribute to some public repositories (learning git is worthwhile!).  It takes time, like any skill. With that early adopter attitude of yours, you'll get there! :)"
learnpython,3c4k6s,cathalgarvey,1 point,Sat Jul 4 22:38:28 2015 UTC,I'm having trouble withe installing via pip
learnpython,3c4k6s,TDuffin,1 point,Sun Jul 5 02:03:56 2015 UTC,"I'm using http://inventwithpython.com/, Not sure if this is the sort of thing you're looking for."
learnpython,3c3qcq,Northstat,2,Sat Jul 4 13:59:07 2015 UTC,"np.argwhere can do it, but you make a couple passes over the array  http://docs.scipy.org/doc/numpy/reference/generated/numpy.argwhere.html"
learnpython,3c3qcq,gengisteve,1 point,Sat Jul 4 15:16:30 2015 UTC,"oh nice, this should work well. I'll give it a try later. Thank You!"
learnpython,3c3qcq,elbiot,1 point,Sat Jul 4 16:46:55 2015 UTC,Also masking:  arr[np.isnan(arr)] = 5  #replace all nan values with 5.   read up on masking.
learnpython,3c50q6,FrostySK,3,Sat Jul 4 21:13:57 2015 UTC,"Welcome to programming but, ask questions until it comes clear to you"
learnpython,3c50q6,Krizzu,1 point,Sat Jul 4 21:18:50 2015 UTC,"Do you have any specific examples? The nice thing about programming languages is that if you understand the language enough, everything will make sense (barring hardware complications...) - whereas in English you can never be sure if someone is being sarcastic. Post a few examples that you're stuck on - it's generally dangerous to copy/paste code without knowing how it works, if only because you're not actually programming."
learnpython,3c50q6,deathofthevirgin,1 point,Sat Jul 4 23:24:51 2015 UTC,"Im not stuck on something yet, because I do very simple things. But sometimes theres a code that I just dont understand, then after a while I realize some things and it sudenly makes sense. But it happens just from time to time ..."
learnpython,3c2muu,Lachlantula,2,Sat Jul 4 04:39:10 2015 UTC,This was recently asked in /r/python and there were some great suggestions in the comments.  https://www.reddit.com/r/Python/comments/3blwko/peoples_preference_for_python_gui/
learnpython,3c2muu,rx7raven,2,Sat Jul 4 04:52:16 2015 UTC,"Oh wow, I never saw that. Thank you!"
learnpython,3c2muu,rx7raven,2,Sat Jul 4 04:52:43 2015 UTC,"Yea great list, seems that Qt is the most popular but a lot of people had a list of others."
learnpython,3c45ll,Identimental,1 point,Sat Jul 4 16:29:43 2015 UTC,The installer added it for you. Everything about your setup as you described it is fine.
learnpython,3c45ll,K900_,1 point,Sat Jul 4 16:55:06 2015 UTC,"Okay, thanks :) That's what I assumed, but I just wanted to check. Is that a new(er) feature then compared to older versions of 2.7? From what I read it seemed like it was only automated in Python 3, and you had to do it manually for 2.7.  Anyway, thanks!"
learnpython,3c45ll,K900_,1 point,Sat Jul 4 16:57:09 2015 UTC,"Yes, it was added around 2.7.8 I think."
learnpython,3c45ll,novel_yet_trivial,1 point,Sat Jul 4 17:06:16 2015 UTC,"Ah okay, thanks :)"
learnpython,3c45ll,novel_yet_trivial,1 point,Sat Jul 4 17:10:47 2015 UTC,"I installed Python 2.7.1 (the latest version) x86 ,   You are running Windows 8.1 on a 32-bit computer? If so, :). If you have a 64-bit computer you should have installed the x86-64 version. For most learning tasks you will never know the difference, but if you will use python for heavy computing you need the version that matches your architecture."
learnpython,3c45ll,FlockOnFire,1 point,Sat Jul 4 17:02:55 2015 UTC,"I actually asked about this once before, and it was suggested that I install the 32-bit version because it's typically more compatible with other resources, despite having a 64-bit computer. The guide I linked to in the original post said something similar, too."
learnpython,3c43ry,Iskandar11,2,Sat Jul 4 16:12:46 2015 UTC,"What exactly do you mean by ""download wikipedia""?  You can make HTTP requests with the standard library (urllib2 / urllib.request) or with third party modules (requests) but that's not specific to Wikipedia."
learnpython,3c43ry,Rhomboid,1 point,Sat Jul 4 16:26:10 2015 UTC,What would the beginning of the program look like? Sorry I'm new to Python.
learnpython,3c43ry,Rhomboid,3,Sat Jul 4 16:42:01 2015 UTC,"You didn't specify what version of Python you're using, so I'm going to assume it's 3.x.  from urllib.request import urlopen  url = 'https://en.wikipedia.org/wiki/Python_(programming_language)' html = urlopen(url).read().decode('utf-8')   html is now a string containing the HTML of the page.  If your goal is to extract some of the information, you will want to use a parser, such as BeautifulSoup.  (BeautifulSoup isn't technically a parser, but a front-end for other parser modules, but that distinction doesn't really matter.)"
learnpython,3c43ry,novel_yet_trivial,2,Sat Jul 4 16:53:15 2015 UTC,There is a python module that can get most information from wikipedia pages. If you explain a bit more what you want to do we could help you further.
learnpython,3c43ry,deathofthevirgin,1 point,Sat Jul 4 16:57:10 2015 UTC,"Not sure if you're doing this to learn Python or to download pages from Wikipedia - but there's a cool feature where you can select certain pages from Wikipedia and download them as a PDF/ODF. It's called Book Creator, you can click ""Create a book"" next to a page."
learnpython,3c43ry,elbiot,1 point,Sat Jul 4 20:38:01 2015 UTC,also:https://en.wikipedia.org/wiki/Wikipedia:Database_download
learnpython,3c43ry,elbiot,1 point,Sun Jul 5 22:14:15 2015 UTC,"OP, it is against wikipedia's TOS to scrape their pages due to the significant overhead they have of having to generate each page dynamically from the way they store it.  Please read about how wikipedia suggests you get a dump of their database"
learnpython,3c3zrs,Megalolo8,5,Sat Jul 4 15:35:19 2015 UTC,"I think you need to slap some parentheses on your call to the ask method ;-)   Edit: also, the type error happens because you're passing in a list of questions and answers to the test constructor but it expects a list of just questions.  Edit2: nevermind that last edit, haha - didn't see the ""[0]"""
learnpython,3c3zrs,rhgrant10,1 point,Sat Jul 4 15:39:02 2015 UTC,"omg im an idiot, thanks."
learnpython,3c3zrs,Vaphell,3,Sat Jul 4 15:47:08 2015 UTC,"def doTest(self):         for i in range(0, len(self.qList)):             question(self.qList[i][0],self.qList[i][1]).ask()   iterating indices is considered unpythonic, especially when index is just a mean to a goal. You are after contents here so just get them directly.  def doTest(self):     for qa in self.qList:         question(qa[0], qa[1]).ask()   or even better  def doTest(self):     for q, a in self.qList:         question(q, a).ask()   unpacking allows you to reach individual fields."
learnpython,3c2t2k,graaahh,2,Sat Jul 4 05:51:14 2015 UTC,"This is a pretty funny error. Note that in Python 3, print is a function, which means you have to do print(""Hello"") and not print ""Hello"". I noticed you're adding a space after the print when you're calling it in other places - this might be the source of confusion, you shouldn't have any spaces - like print(""You missed my battleship!"").  The print() function always evaluates to None (the printing is a side-effect - you can check this for yourself by doing a = print(""Hello"") and then print(a)). Also note that Python is slightly lax about where you put whitespaces, and the way code is lexed is confusing sometimes.  print ("" "").join(row) # is read as (print("" "")).join(row) # evaluates to None.join(row)   and None doesn't have any methods. What you want is print("" "".join(row)).  This is (probably) also the case with your other question. Sequences like 2, 3 or ""hello"", ""world"" (try this in an interpreter) evaluate to tuples.   print (""Turn: ""), turn # is read as print(""Turn:""), turn # evaluates to the tuple (None, turn) # while printing just Turn: , and you don't do anything with this tuple, so it's lost   Try print(""Turn:"", turn). Good luck! Hope this helped - let me know if you have more questions."
learnpython,3c2t2k,deathofthevirgin,3,Sat Jul 4 06:16:00 2015 UTC,Also note that Python is slightly lax about where you put whitespaces   I am going to take this out of context and quote you on it :P Happy cake day!
learnpython,3c2t2k,terminak,2,Sat Jul 4 06:26:04 2015 UTC,"After the line starts, anyway :)"
learnpython,3c2t2k,deathofthevirgin,1 point,Sat Jul 4 06:28:44 2015 UTC,"That fixed it, thank you! Yeah, I have some spaces left over from trying to convert all my print "" ""s into print ("" "")s. Thanks for your help!"
learnpython,3c2lnx,Hypogeum,3,Sat Jul 4 04:26:10 2015 UTC,"It's working for me - I tried 2, xn, -, 1, then =. What input sequence are you using that gives an error?  Some thoughts about your code: Your program flow is overcomplicated - this is probably why it's difficult to debug. I think you're making strings of what to eval and then calling ""eval""? Use lists instead, like [3, add, 4, add, [3, minus, 6]], where add/minus are functions or strings - and maybe split up your calculate function :) You should assign something like exponent_key = ""x"" + u""\u207F"" - it took me a while to figure out where the exponent was."
learnpython,3c2lnx,deathofthevirgin,2,Sat Jul 4 05:46:34 2015 UTC,I really like your GUI. It looks so good I may steal it.
learnpython,3c2lnx,novel_yet_trivial,1 point,Sat Jul 4 19:47:18 2015 UTC,"Please do, thank you very much!"
learnpython,3c3w17,AussieCryptoCurrency,2,Sat Jul 4 14:57:58 2015 UTC,"Double list comprehensions are baffling.    On your first example, you are a bit off:   To flatten a list we use [item for sublist in L for item in sublist].   So your first example is correctly written as, in long form:  new_list = [] for sublist in L: # outer     for item in sublist: # inner           new_list.append(item)   To make a comprehension for your second, it would be:     >>> l = [9,8,7] >>> [j for i in range(12) for j in l] [9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7, 9, 8, 7]"
learnpython,3c3w17,gengisteve,1 point,Sat Jul 4 15:21:27 2015 UTC,"On your first example, you are a bit off:   You're right. It should read [item for sublist in l for item in sublist]  I can't understand the logic, tbh. I'm going off this SO answer to the question How To Flatten A List.  So:  l = [[1,2,3],[4,5,6]] flattened_l = [] for sublist in l:     for item in sublist:         flattened_l.append(item)   is [item for sublist in l for item in sublist].  EDIT: I think I get!!  so it's essentially reading the list from inner loop inwards, but the first word is the variable that's appended?   ie [item for sublist in l for item in sublist]   (because this reads EXACTLY as the loops do as it goes in!)?"
learnpython,3c3w17,Sambiino,1 point,Tue Jul 7 04:12:59 2015 UTC,"I'm not quite sure I understand your question? What exactly are you looking to understand?  In your second example, the outer loop  for i in range(12):   iterates through the range provided (0-11). Then for each iteration of the outer loop, it also iterates through the second loop, which goes through each 'j' in the 'L' list.   for j in L:   So for example, if your ""#do something"" code was changed to ""print(j)"", you'd end up with 12 lists  of each j in L."
learnpython,3c3w17,Vaphell,1 point,Sat Jul 4 15:20:06 2015 UTC,"for i in range(12):                                     for j in L:   do_something = [ do_something  for i in range(12)  for j in L ]   loops are in order, it's just the ""result"" is in front, not at the end."
learnpython,3c1wxz,Northstat,1 point,Sat Jul 4 00:20:58 2015 UTC,"It's often a good idea to include ""missing"" as a predictor in your model.  There can be some systematic reason that the data is missing.  If you do want to impute, a model to fill those gaps is a good option.  Random forest is used to impute pretty often, but you can use just about anything."
learnpython,3bzoam,hw_t_dstr_ngls,11,Fri Jul 3 13:21:50 2015 UTC,"You could add that the or operator (or boolean operators in general) in Python short-circuit. Briefly explained for or in particular this means that if the first argument evaluates to True, Python won't even bother checking the second one since the end result will be True no matter what. This speeds up the evaluation. But there's also the (in some cases) useful implication that the right side can even be something that would normally raise an error, and it will still work:  >>> nonexisting or True Traceback (most recent call last):   ... NameError: name 'nonexisting' is not defined  >>> True or nonexisting True   The first one raises an error, because the variable nonexisting doesn't exist. Makes sense. However, the second one doesn't raise an error, even though the  same variable on the right side still doesn't exist. Why? because the left side of the or is already True so Python doesn't even look at the right side."
learnpython,3bzoam,Ultimate_Timmeh,2,Fri Jul 3 21:30:28 2015 UTC,"As an aside, and does the same thing (but in reverse of course).  >>> nonexisting and True Traceback yadda yadda  >>> True and nonexisting Traceback yadda yadda  >>> False and nonexisting False     In both cases, be aware of whether or not side-effects occur as a result of this. See  def paf():   print(""Foo"")   return False  print(""1:"") print(True and paf()) print(""2:"") print(False and paf())   Output:  1: Foo False 2: False   Whether that's a smart way to program is a different debate (you have to be really careful because of this)."
learnpython,3bzoam,NewbornMuse,6,Sat Jul 4 11:07:47 2015 UTC,"I think there is a small mistake in the Our initial problem section:   So now we're left with:  False or 2 or 3.   Now False or (2 or 3) is examined by Python   As I understand it, Python examins (False or 2) or 3. The final result remains the same since this boils down to 2 or 3 (False or 2 = 2 since 2 is the first value evaluating to True), which yields 2."
learnpython,3bzoam,Heinibal,1 point,Fri Jul 3 14:32:57 2015 UTC,Thanks for pointing out this inconsistency. I've corrected the original post now.
learnpython,3bzoam,xcombelle,5,Fri Jul 3 14:45:26 2015 UTC,Splendid!  A separate web site would be useful to collect such useful and well written answers.
learnpython,3bzoam,keturn,2,Fri Jul 3 16:01:40 2015 UTC,"Good explanation of the concepts involved.  I think the confusion here is mostly about understanding order of operations, although Python comparisons are different than some languages, like when you got to this example:   if 5 <= a <= 200:   which means (5 <= a) and (a <= 200) instead of a standard order-of-operations breakdown which would suggest (5 <= a) <= 200  the other thing that I trip over as an exception to the rule is ""is not"" is a special phrase, not binary ""is"" followed by unary ""not"", i.e. a is not None does not mean a is (not None)"
learnpython,3bzoam,rkkid9,2,Fri Jul 3 19:10:49 2015 UTC,"Thanks for this, very informative. I ran into this problem a couple times and figured out how to write it correctly, but I only had a loose understanding of what exactly went on."
learnpython,3bzoam,enesimo,2,Fri Jul 3 19:45:08 2015 UTC,In your example 5 [] == ''  Why does it return the empty string of its false?
learnpython,3bzoam,enesimo,2,Sat Jul 4 10:23:48 2015 UTC,"As I mentioned in my post, or returns the first element that is True, but if neither are True, then the last (right-side) element is returned.  If your question is 'How is it implemented in Python and why?', then I can only speculate :)  My guess would be that it checks first element and returns it if it's True and then returns the second element regardless of if it's True or not.  EDIT: The more I think about it, the more it makes sense. If you wanted to return the first element if both were False, then you would have to make an extra check to see if the second element is True or False first, but by simply returning the second element if the first one is False, you cut down on the number of operations required. Guess it's just an optimisation thing."
learnpython,3bzoam,enesimo,2,Sat Jul 4 11:27:13 2015 UTC,"but if neither are True, then the last (right-side) element is returned.   I totally missed that sentence. Sorry about that and thanks for the clarification!"
learnpython,3bzoam,Nu11u5,1 point,Sat Jul 4 11:48:19 2015 UTC,"No problem! It made me try to understand why it is actually like that, and I do believe I'm onto something there. :)"
learnpython,3bzoam,Busby10,2,Sat Jul 4 12:26:34 2015 UTC,You should totally do a weekly post like this one on a single python subject. I would definitely eat that up every time.
learnpython,3bzoam,itspartofthetrade,1 point,Sat Jul 4 11:49:30 2015 UTC,"Thanks! I'm not that advanced in Python though, so I might make a post here and there as I move along in my own learning process. :)"
learnpython,3bzoam,furmanman,1 point,Sat Jul 4 12:25:12 2015 UTC,"Coming from a C programing background this makes perfect sense, since I was taught that and will return after evaluating the entire boolean statement and or will return after encountering the first 'true' value (or rather && and || as it is for C).  Being that optimization tricks were always brought up we would sometimes use logical inversion to turn 'and's into 'or's so the boolean statement would have a chance to evaluate faster."
learnpython,3bzoam,AutonomouSystem,1 point,Fri Jul 3 22:45:01 2015 UTC,"Thanks for the write up, really well written and clearly explained. I'm just learning python at the moment, so was a great read as I've already been caught out by some of this."
learnpython,3bzoam,Renaissance8905,1 point,Sat Jul 4 02:19:32 2015 UTC,"If Hamlet were using Python when he asked the question, he'd have just acted."
learnpython,3bzoam,Smartare,1 point,Sat Jul 4 02:25:27 2015 UTC,"Wow, that was an excellent explanation. Well done and thanks!"
learnpython,3bzoam,Justinsaccount,1 point,Sat Jul 4 03:09:45 2015 UTC,">>> a = 4 >>> if a in [1, 2, 3]: ...    print('a is %d out of 1, 2, and 3' % a) ... else: ...    print('a is not 1, 2, or 3') ...  a is not 1, 2, or 3 >>> a = 3 >>> if a in [1, 2, 3]: ...    print('a is %d out of 1, 2, and 3' % a) ... else: ...    print('a is not 1, 2, or 3') ...  a is 3 out of 1, 2, and 3 >>>    I don't want to discount the importance of understanding how Python will evaluate and, or, and not but this is my work around without being too redundant."
learnpython,3bzoam,Justinsaccount,1 point,Sat Jul 4 16:15:02 2015 UTC,"It was helpful for me to understand this with a while loop:  myList = [1, 2, 3, 4]  while myList:     myList.pop()  print(""My list is now empty"")   Because in this case, the plain-english translation would be something like ""While my list exists, pop one item off the list. Then state that the list is empty"". It seems like a straightforward way to illustrate that without an '==' or other comparator sign, a boolean operator functions like ""exists"" as opposed to ""is equal to"" or whatever."
learnpython,3bzoam,Vaphell,1 point,Sat Jul 4 21:46:03 2015 UTC,Wow =) Thanks I had no idea about this since I haven't run into this problem yet
learnpython,3bzoam,Justinsaccount,0,Fri Jul 3 14:14:58 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using the or construct with a constant string  instead of doing something like:  if color == 'red' or 'blue':   Which is the same as   if (color == 'red') or ('blue'):   and 'blue' by itself is always True  You need to do  if color == 'red' or color == 'blue':   or  if color in ('red', 'blue'):   or, a special case if they are all single letters you can do  if letter in 'aeiou':   You can also make it case insensitive by using soething like  if color.lower() in ('red', 'blue'):   If there were a large number of choices and inputs (as in, 10000+) you could use a set() to speed things up.  Also refer to The FAQ Entry for more information."
learnpython,3c314a,Yarvaxea,3,Sat Jul 4 07:36:51 2015 UTC,Sounds like you have multiple versions of Python installed and in your PATH.  You'll need to do some basic debugging to find out what's being run when you type python.  What is your PATH set to?   What directory did you install Python 3.4 into?  Where is that directory in the PATH?  What directories come before that one in the PATH?  Do any of them have a python executable in them?  If you open Powershell and type gcm python | format-table path what is the result?
learnpython,3c314a,Rhomboid,1 point,Sat Jul 4 10:40:35 2015 UTC,"I looked in the programs and features list and I can see Python 3.4.3 and Pythong 3.4.3 (Anaconda3 2.2.0 64-bit). Anaconda makes the IDE I'm using, Spyder, however I can't find Spyder in the list even though I'm using it all the time. I can also see Notepad++ and Sublime Text Build 3059, neither of which I've used for over a year now, I think I wanted to use them to code Java or something, but I never really got into it. That is about everything programming related I have installed.   Python is installed into c:\Python34. My path is set to:   C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files (x86)\AMD\ATI.ACE\Core-Static;C:\Program Files (x86)\Skype\Phone\;C:\Anaconda3;C:\Anaconda3\Scripts;C:\Python34;C:\Python34\Scripts;  I don't know a lot about how the path works though.  The command in Powershell gives me   Path ---- C:\Windows\system32\python.exe C:\Anaconda3\python.exe C:\Python34\python.exe   Hope that information helps, and thank you for helping me!"
learnpython,3c314a,Rhomboid,2,Sat Jul 4 11:51:17 2015 UTC,"Yikes.  What did you install that resulted in a python.exe under C:\Windows\system32?  That seems bad.  You should uninstall that.  The normal Python installer won't put a python.exe there, so it must be some other installer.  That Python (which is apparently version 3.3 and is broken) is shadowing the other Pythons you have installed.  You might want to uninstall everything Python related and completely clean out your PATH of anything Python related and take this one step at a time.  The PATH is simply a list of places to look for an executable when you type a command.  The directories are searched in the order listed, and the search stops when a match is found.  Because you have C:\Windows\System32 ahead of C:\Python34 in the PATH, that means that that mysterious python.exe is the one being executed when you type python, not the ones you care about (and which are not broken.)  And once you have pip installed, the PATH will determine which pip is executed when you run pip to install the Pygame .whl file, which will determine which Python will be able to use Pygame.  You need to be aware of how many Pythons you have installed and which ones you care about.  If you're going to be using Spyder and Spyder uses the Python under C:\Anaconda3, then you also need to install Pygame to that Python.  If you install Pygame to the Python under C:\Python34 it will not be visible to the Python under C:\Anaconda3.  And likewise if you plan to use the Python under C:\Python34 then it will do no good to install Pygame to the Python under C:\Anaconda3.  I would strongly consider having only a single Python and not three, at least until you get a little more experience.  Having multiple Python is fine — I have perhaps half a dozen of them installed at any given moment, but none of them are in my PATH as I always want to be explicit about which one I'm running at any given time, which prevents confusion."
learnpython,3c314a,Rhomboid,1 point,Sat Jul 4 14:37:08 2015 UTC,"I have absolutely no idea. I deleted the python.exe, also found one in syswow64 and deleted that. I uninstalled everything that has to do with programming and then reinstalled Python 3 and Spyder. Now I'm not sure what to do with the PATH. Should I just leave it as it is? I'm guessing I want to use the python in Anaconda as it's the one Spyder uses, I think.   I tried running the command that I listed in my post and it works. However I'm not sure how to install pygame into the correct folder.   Thank you again for the help, much appreciated!"
learnpython,3c3hsv,Jammyj2o,4,Sat Jul 4 12:08:53 2015 UTC,http://catb.org/~esr/faqs/smart-questions.html  see 'posting code' from here https://www.reddit.com/r/learnprogramming/wiki/index#toc_1
learnpython,3c3hsv,__baxx__,1 point,Sat Jul 4 12:16:01 2015 UTC,Thank you. I'll check it out!
learnpython,3c3hsv,__baxx__,1 point,Sat Jul 4 12:19:22 2015 UTC,"asking questions is a big one - often whilst writing out full questions with proper evidence the answer will appear to you half way through (similar to rubber duck debugging.   Good code pastes (for when code is long and unsuitable for reddit post) are bpaste and vpaste, much better than pastebin"
learnpython,3c3hsv,autowikibot,1 point,Sat Jul 4 12:26:05 2015 UTC,"Rubber duck debugging:       Rubber duck debugging is an informal term used in software engineering for a method of debugging code. The name is a reference to a story in the book The Pragmatic Programmer in which a programmer would carry around a rubber duck and debug their code by forcing themselves to explain it, line-by-line, to the duck.  Many other terms exist for this technique, often involving different inanimate objects.  Many programmers have had the experience of explaining a programming problem to someone else, possibly even to someone who knows nothing about programming, and then hitting upon the solution in the process of explaining the problem. In describing what the code is supposed to do and observing what it actually does, any incongruity between these two becomes apparent.  More generally, teaching a subject forces its evaluation from different perspectives and can provide a deeper understanding.  By using an inanimate object, the programmer can try to accomplish this without having to involve another person.    Image i - A rubber duck in use by a developer to aid code review     Relevant: Hydro Thunder Hurricane | List of Amstrad CPC games   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3c3hsv,K900_,1 point,Sat Jul 4 12:26:59 2015 UTC,Ok thank you! :D
learnpython,3c3hsv,StaticFuzz,4,Sat Jul 4 12:42:09 2015 UTC,"or has a very low operator precedence. So when you write time is '2' or '1', Python actually reads it as (time is '2') or '1'. Since any non-empty string is considered true, the entire condition is true. Also, when comparing strings, you should use ==, not is. While is works for short strings, it's an implementation detail and shouldn't be relied on."
learnpython,3c3hsv,K900_,-1,Sat Jul 4 12:16:59 2015 UTC,Cheers for that. Great help. All hail Reddit community
learnpython,3c2e8l,Edrios,4,Sat Jul 4 03:10:12 2015 UTC,"1: You could do y = x = x + 1 but you'll probably rarely see that in anyone's code.  The reason y = (x = x + 1) doesn't work is because the statement x = x + 1 doesn't resolve to an expression to be evaluated for it to be set to y.  2: it seems to handle true div and exponents fine:  >>> (2j + 3)/(3j + 1) (0.8999999999999999-0.7000000000000001j) >>> (2j + 3)**(3j + 1) (-0.16893784584344762-0.5942900283096889j)   3: All ascii characters are also in unicode.  Ascii can only store 128 characters, while unicode can store up to 1,114,112, with about 10% of that space currently allocated  The code points from ascii from 0 to 127 are the same in unicode.  4: Arrays are stored contiguously in memory and can offer faster read and write speeds."
learnpython,3c2e8l,jeans_and_a_t-shirt,1 point,Sat Jul 4 03:45:27 2015 UTC,"Thank you for your response.   When you say it doesn't resolve into an expression to be evaluated, what do you mean? That's the part that I do not follow. I can see that it works. I'd like to know more of how it works. How does Python handle operations like true division and exponents with complex variables? What does Python do when it notices these situations? Make sense. Thanks! Okay. So if I were parsing through a large document or log files looking for certain things, the array module would be exceedingly useful to use, right?"
learnpython,3c2e8l,Rhomboid,4,Sat Jul 4 04:58:55 2015 UTC,"When you say it doesn't resolve into an expression to be evaluated, what do you mean? That's the part that I do not follow.   Very roughly speaking, language grammars define expressions and statements.  A statement is like a complete sentence, whereas an expression is like a clause.  Expressions are formed by combining literals, names, and operators.  A literal is a plain value, like 42 or ""foobar"".  An operator is something like +, -, or the parentheses of a function call.  The documentation has a list of operators.  It also has a list of the different kinds of statements.  Statements are generally much more rigidly defined than expressions, in that they involve the parts of the language dealing with keywords, like the for statement, the if statement, and so on.  So for example these are all expressions:  42                       # a literal x                        # a name 2 + 5                    # two literals and an operator foo()                    # a name and an operator bar.baz()                # two names and two operators quux['spleen']           # a name, an operator, and a literal   One type of statement is the expression statement, which means that any expression is also a valid statement.  The expression is evaluated, but the result is discarded.  So  42   ...is a valid line of code.  It doesn't do anything of value.  You may think this seems useless, but consider:  print('hello, world')   This too is an expression statement, in the same way that 42 or 2 + 5 is an expression statement.  But in this case evaluating the expression has side effects, and those are what matter in this case, not the return value.  Expressions slot into the other kind of statements in fixed ways:  for NAME in EXPR:     <statements>  while EXPR:     <statements>  if EXPR:     <statements> elif EXPR:     <statements> else:     <statements>   ...and so on.  The key point to all of this is that assignment in Python is a statement, not an expression like in other langauges:  NAME = EXPR   (In all of these examples, NAME can be either a single name or a tuple of names, which triggers tuple unpacking.)  A statement is something that must stand alone, it cannot be embedded in something else like an expression.  You can't write something like  foo = 'bar is ' + (if bar < 10:                        'small'                    else:                        'large')   This is possible in some languages where the distinction between statements and expressions doesn't exist, i.e. the language is said to have statement expressions (not to be confused with expression statements.)  But that's the not the case in Python.  [Side derail: the above type of construction where you embed an if statement in some expression is so popular that most languages like Python that don't have statement expressions implement an operator that works similar to an if statement for this very reason.  It's generally called the ternary conditional operator.  It's ternary because it takes three operands.  In Python, it looks like EXPR if EXPR else EXPR, and the above could be written as:  foo = 'bar is ' + 'small' if bar < 10 else 'large'   Note that this form is much weaker than the generalized if statement, since its operands are all expressions.  In other words, the body of an if statement can contain multiple statements, whereas the body of the ternary conditional operator can only be a single expression.  You see this same tradeoff being made with the def:' statement vs. thelambda` expression.  The reason is to keep the grammar simple; bodies that can accept multiple statements would get complicated when you factor in the required indentation, whereas by only allowing a single expression the grammar stays simple.  In Python, a similar thing has been done with comprehensions.  A list comprehension is like a little for statement that has been restricted and turned into an expression.  For example, the following two snippets are identical:  values = [] for n in range(5):     values.append(n * 2)   vs  values = [n * 2 for n in range(5)]   The for in the first example is a statement, whereas the for in the second example is part of an expression.  (In the chart above listing all the operators, this falls under the category of ""list display"".)  It's a similar idea as before: statements are rigid in that they can't be combined or embedded, but there are certain situations where it would be really handy if that were possible, so limited-functionality versions were created that are expressions and not statements.  End derail.]  Anyway, the main point is that assignment is a statement, not an expression.  You can't embed an assignment statement in some larger expression, like  x = (y = 32) + 10   It's simply forbidden.  The language could have been designed to allow this, but it's a conscious decision not to.  In languages where assignment is an expression, there's always a temptation to write code that's overly 'cute' that combines too many things at once for the sake of brevity.  Python has always been designed to be clear and readable, and it very much does not want to encourage 'tricks'.  The above can be written in a more clear and direct manner as  y = 32 x = y + 10    How does Python handle operations like true division and exponents with complex variables? What does Python do when it notices these situations?   These are things that have mathematical definitions.  Python isn't inventing any behavior here, it's implementing the mathematical definition of what it means to divide two complex numbers.  For example, (a + bi) divided by (c + di) is by definition ((ac + bd) + i(bc - ac)) / (c2 + d2).  You can find a derivation of that here, but it's really just writing it out as a fraction and then simplifying it by multiplying both the numerator and denominator by the conjugate of the denominator.  Complex exponentiation is a little more tricky.  The definition can be found here.  I'm not entirely sure of the derivation, but I believe you can arrive there by rewriting bx using the log identities as exp(x * ln(b)) and then applying Euler's formula.  The wikipedia article on exponentiation goes into more detail.  Edit: Oh and:   So if I were parsing through a large document or log files looking for certain things   No, not really.  You would use strings for that.  Strings are already contiguous, so using an array for that would not make your life any easier.  Arrays are really not used that often in Python.  Their primary use is efficient access to contiguous numbers of fixed width, but Numpy is usually used for that as it's much more capable and complete.  You might find a use for them when parsing binary formats, but the struct module is probably better for that."
learnpython,3c2e8l,deathofthevirgin,1 point,Sat Jul 4 06:53:12 2015 UTC,Thank you so much for this through and comprehensive explanation. This makes a lot more sense now. I appreciate it!!!
learnpython,3c1kaf,xRitz,2,Fri Jul 3 22:28:29 2015 UTC,This may help.
learnpython,3c1kaf,novel_yet_trivial,1 point,Fri Jul 3 23:12:38 2015 UTC,"If you're on OS X you can make a wrapper around AppleScript using osascript or just write it all in AppleScript/JavaScript for Automation.  As another posters suggested, moving the content to your iTunes Media Library is helpful, but with if you're able to go under File → Add Folder to Library you would be able to have them added cleanly.  iTunes doesn't have a proper API to work with, but high level UI automation would be able to help, on Windows it would be with AutoIT Probably."
learnpython,3c1czg,Siiimoon,1 point,Fri Jul 3 21:29:25 2015 UTC,Post your Player class source code to a pastebin and link it here. It's hard to guess exactly what you're doing wrong based on just this description.
learnpython,3c1czg,NoLemurs,1 point,Fri Jul 3 21:40:37 2015 UTC,http://pastebin.com/GJg2venv
learnpython,3c1czg,novel_yet_trivial,1 point,Fri Jul 3 21:53:28 2015 UTC,"I imagine you need to call the getname() method. Also, don't give the instance and the class the same name.  p1 = Player() p1.getName() print( p1.name + "" sees ........."")"
learnpython,3c1czg,novel_yet_trivial,1 point,Fri Jul 3 21:44:23 2015 UTC,here is the class source: http://pastebin.com/GJg2venv
learnpython,3c1czg,novel_yet_trivial,1 point,Fri Jul 3 21:53:38 2015 UTC,"OK... Did you try my earlier advice?  As a side note, we usually name our classes in CamelCase, and variables and methods with lowercase_with_underscores."
learnpython,3c1czg,novel_yet_trivial,1 point,Fri Jul 3 22:25:49 2015 UTC,"The print ( p1.name + ""sees"") is in another definition. Idk why but i was thinking having one definition each ""room"" in the game was a clever thing. cant seem to access the user inputted value from inside another definition"
learnpython,3c1czg,novel_yet_trivial,1 point,Fri Jul 3 22:29:20 2015 UTC,"By ""definition"" I assume you mean a function or a method (starts with def). Can you show us the entire code, or at least the part that you are having problems with?"
learnpython,3c12d5,jarantfos,5,Fri Jul 3 20:05:05 2015 UTC,Could it be that cell.rect.x and cell.rect.y only accept integer value and are therefore automatically being floored by pygame?
learnpython,3c12d5,herminator,3,Fri Jul 3 21:14:50 2015 UTC,"That sounds very feasible! Let me test something out.  Edit: That was the issue, thanks so much!"
learnpython,3c1sc6,just_me__,3,Fri Jul 3 23:37:55 2015 UTC,"Sorry, but I can't understand what your problem is from the incomplete example, but if start_segments_list.pop(0) (and start_segments_list[0]) gives you [None, None], it is a pretty safe bet that [None, None] was returned by method2() (unless you manipulate that list in a way that's not shown).  I will answer this though:   Doesn't python think that is a local variable with scope only into the while loop, so it would definitely be destroyed at the end of this loop?   Scope in python is module, class or function; it cannot exist only within a loop."
learnpython,3c1sc6,terminak,1 point,Sat Jul 4 00:38:58 2015 UTC,"Sorry about this, it turned out to be really obvious. You were correct! I should be working for a lot of hours and expecting to write correct code!   Scope in python is module, class or function; it cannot exist only within a loop.     Thank you very much for this!  edit: add clarification at start"
learnpython,3bzebq,Elthran,4,Fri Jul 3 11:29:15 2015 UTC,"First, you algorithm is calculating the position at which they meet, but the problem says you should be calculating the time.  If you want to do an iterative algorithm, I think the simplest approach would be to calculate how long it would take for Achilles to reach the tortoise, then calculate how far the tortoise would move in that time, reset the turtle's distance to the new offset, and repeat until they are close enough.  Here is my version (calculating time, not position, and having a test to make sure the two will meet):  def chase2(aSpeed, tSpeed, advantage, npts=8):     if aSpeed <= tSpeed:         raise ValueError('Achilles is not faster, race will never end')      t_tot = 0     while round(advantage, npts) > 0:         t = advantage/aSpeed         advantage = t*tSpeed         t_tot += t     return t_tot   But, as I said, the best approach would just be:  def chase3(aSpeed, tSpeed, advantage, npts=8):     return round(advantage/(aSpeed-tSpeed), npts)"
learnpython,3bzebq,TheBlackCat13,1 point,Fri Jul 3 12:36:23 2015 UTC,Thank you! That's an interesting way to look at it.
learnpython,3bzebq,Vakieh,3,Sun Jul 5 05:50:37 2015 UTC,"How much information/limitations were you given for the question? What you are (kind of) doing is simulating their movement. If that is what the question asked, you are on the right track. If the question just asks for the answer, then your head is not currently 'thinking like a computer'.  The computer doesn't care if you skip steps 1 through 10000000, if you have the maths available to do so. The maths in question is simultaneous equations, which can give you the answer pretty quickly even just using pen and paper."
learnpython,3bzebq,Vakieh,1 point,Fri Jul 3 13:01:20 2015 UTC,Here is the question: http://www.checkio.org/mission/achilles-tortoise/
learnpython,3bzebq,py_student,1 point,Sun Jul 5 05:49:04 2015 UTC,"In that case no, it isn't asking you to simulate the activity, merely use mathematics to arrive at the result (which is good, because simulations are hard). Simultaneous equations are where you will find the answer."
learnpython,3bzebq,coderjewel,2,Sun Jul 5 07:50:02 2015 UTC,"I doubt any of the above was intended in the question. A is faster than T, say 10 times as fast or 2 times or whatever. ratio of speeds R = 10 or 2 or whatever the problem asks you to recognize that you are being asked for the sum zero to infinity of  the series     n * (1/(R**n)  time for A to catch T is    (I didn't remember what this is, but Google to the rescue:)  R + 1 + 1/(R-1)    I do not think we need an algorithms specialist to do arithmetic like that with Python. For our example, let's say Achilles is 8 times faster than the Tortoise.  We get:    ans = 8 + 1 + 1/7 ans = format(ans, '.8f') print(ans)  and it will print 9.14285714  At first I messed up on this because at first I tried to do print('{}'.format(ans, '.8f') which does not work because it thinks the '.8f' is an argument to a second set of {}."
learnpython,3bzasq,Titanium_Expose,7,Fri Jul 3 10:45:23 2015 UTC,"I think the problem you're seeing is an Order of Operations problem.  You're dividing the second value by 2 then adding it to the first.  Try putting a parenthesis around the addition parts to make sure that is done prior to the division, e.g.  answer = ((sorted_numbers[list_length/2] + sorted_numbers[(list_length/2) - 1]) / 2.0)   https://en.wikipedia.org/wiki/Order_of_operations"
learnpython,3bzasq,tokennrg,1 point,Fri Jul 3 12:58:32 2015 UTC,"Order of operations:       In mathematics and computer programming, the order of operations (sometimes called operator precedence) is a rule used to clarify which procedures should be performed first in a given mathematical expression.  For example, in mathematics and most computer languages, multiplication is done before addition; in the expression 2 + 3 × 4, the answer is 14. Brackets, ""( and ), { and }, or [ and ]"", which have their own rules, may be used to avoid confusion, thus the preceding expression may also be rendered 2 + (3 × 4), but the brackets are unnecessary as multiplication still has precedence without them.  Since the introduction of modern algebraic notation, multiplication has taken precedence over addition.  Thus 3 + 4 × 5 = 4 × 5 + 3 = 23. When exponents were first introduced in the 16th and 17th centuries, exponents took precedence over both addition and multiplication and could be placed only as a superscript to the right of their base. Thus 3 + 52 = 28 and 3 × 52 = 75. To change the order of operations, originally a vinculum (an overline or underline) was used. Today, parentheses or brackets are used to explicitly denote precedence by grouping parts of an expression that should be evaluated first. Thus, to force addition to precede multiplication, we write (2 + 3) × 4 = 20, and to force addition to precede exponentiation, we write (3 + 5)2 = 64.     Relevant: Infix notation | TI-7 MathMate | Operand   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3bzasq,autowikibot,3,Fri Jul 3 12:59:35 2015 UTC,"The error you are probably getting is:   TypeError: list indices must be integers, not float   This tells you that you are trying to access an element at position 3.5 for example. And obviously a list only has position 0, 1, 2, 3, 4...  To solve this try to use floor division (//) or wrap your calculations in int().  Edit: although, you probably don't want floor division. You want to round this up. Simple fix: (list_length + 1) // 2"
learnpython,3bzasq,FlockOnFire,1 point,Fri Jul 3 10:49:45 2015 UTC,"Actually, the error I'm getting is this - Oops, try again. median([4, 5, 5, 4]) returned 7.0 instead of 4.5  (I did get a TypeError on earlier versions.) I get this error even if I try using floor division in place of regular division."
learnpython,3bzasq,__skrap__,3,Fri Jul 3 12:19:16 2015 UTC,Order of operations when the length of the list is even (division comes before addition).
learnpython,3bzasq,Justinsaccount,2,Fri Jul 3 12:58:03 2015 UTC,Writing something on one line and using long variable names in a function that has one argument does not make things easier to understand.  Compare:  answer = (sorted_numbers[list_length/2] + sorted_numbers[(list_length/2) - 1] / 2.0)  mid = list_length/2 answer = (sn[mid] + sn[mid-1] / 2.0)
learnpython,3bzasq,scrabaddict,2,Fri Jul 3 15:33:22 2015 UTC,"This took a lot longer than I thought!  Is this easy to read?  def findMedian(numbers):     # list copied in ascending order     nums_sorted = sorted(numbers)      # If the list is even, determine the pair of numbers that need to be averaged; slice syntax on sorted list     first_num = nums_sorted[(len(numbers) // 2) - 1]     second_num = nums_sorted[(len(numbers) // 2)]       if len(numbers) % 2 == 0:     median = float((first_num + second_num) / 2.0)      if len(numbers) % 2 == 1:     median = nums_sorted[(len(numbers) // 2)]     print median   def main():     print 'median'      findMedian([7,3,1,4])     findMedian([1,3,6,7,12])  # Standard boilerplate to call the main() function. if __name__ == '__main__':     main()"
learnpython,3bzasq,isnotkosok,1 point,Fri Jul 3 21:31:59 2015 UTC,Here you go:  z = range(8) y = range(7)  def stuffy(x):     if len(x)%2 == 1:         print x[len(x)/2]      if len(x)%2 == 0:         print float(x[len(x)/2 - 1] + x[len(x)/2]) / 2  print z stuffy(z)  print y stuffy(y)
learnpython,3bzasq,jkudria,1 point,Fri Jul 3 14:47:50 2015 UTC,"While this is a nice solution, I'd recommend not spoon-feeding OP a perfect solution but rather helping him get there on his own. There's no point in actually learning if you can always get someone to do it for you. Guide him to find the solution and fix the problems rather than just outright giving him a working one."
learnpython,3c14ee,sshnn,1 point,Fri Jul 3 20:21:27 2015 UTC,"A few things I noticed:   Several of your functions are quite long. Try splitting your code up into more of them. A blank line inside a function is a good indication that that function is trying to do two different tasks inside it's body and that you should try splitting it up somewhere around that line. As a rough guideline functions should rarely be longer than 10 lines and never more that 20. There's a few places where you write something like my_item in my_dict.keys() when it would be better to write my_item in my_dict. For that matter, you constantly check if a key is in a dictionary immediately before getting it. Just access the key and catch the exception, or better still, use dict.get. As a general principle, it's easier to ask for forgiveness than permission (EAFP). Rather than checking if something is true and then trying it out, instead try it out and then catch the excpetion when it fails to work. It can make your code shorter and easier to understand and it helps avoid race-conditions. type(expected) is str is better written isinstance(expected, str) because it allows your users to pass you subclasses. if len(parsers) is 0: is better written as if not parsers:. You shouldn't use is with integers as it won't necessarily do what you expect, and empty containers are falsey anyway. Write actual docstrings, or don't write them at all. Look into the collections module; namedtuple, defaultdict, and ChainMap could certainly be useful for many of the things you're doing. Your import try/except doesn't handle the case where there's an error with a module, but the user is running an up-to-date version.   I'm being pretty nitpicky here; overall the code quality is quite good. Well done."
learnpython,3c14ee,ingolemo,1 point,Sat Jul 4 13:35:16 2015 UTC,Thank you very much for your feedback. It's very useful :)
learnpython,3c1182,fuckfacez,1 point,Fri Jul 3 19:56:05 2015 UTC,"When I checked it out it looks like all the movies are listed in the div class=""ddrrl"". They all appear to be showing for me in PhantomJS.   <div id=""cmbMovie"" class=""cmbBox"" style=""width:278px;"">     <div class=""ddrbg"" style=""width: 278px;"">         <input type=""text"" style=""border: medium none; width: 233px;""></input>         <span class=""insarr""></span>     </div>     <div class=""ddrrl"" style=""display: none; padding-bottom: 0px; width: 910px; left: 217.5px; top: 342px; overflow-x: scroll;"">         <div class=""wrap"" style=""width: 947px;"">             <ul style=""width: 202px;""></ul>             <ul style=""width: 254px;"">                 <li data-value=""ET00014415"">                     Despicable Me 2 (U)                 </li>                 <li data-value=""ET00031543"">                     Hermitage Revealed (U)                 </li>                 <li data-value=""ET00031715"">                     Inside Out (2D) (U)                 </li>   What are you using to parse your HTML? Because you seem to be filtering out the movie titles."
learnpython,3c1182,Nodocify,1 point,Sat Jul 4 18:24:44 2015 UTC,"right now i have just a few lines of code where i load phantomjs in selenium then get the webpage and filter by ""cmbMovie"" as that is the parent div. so i think i should send a key event to the list box then filter for ""ddrrl""?"
learnpython,3c1182,Nodocify,1 point,Sat Jul 4 20:10:29 2015 UTC,"The list box is there in the html from the start. It's just marked to not show until a key event happens, you can still read all of the movie titles from it.  As far as parsing the HTML, I highly recommend BeautifulSoup. It is a library specifically for parsing HTML. I love it's search functionality, saving that div to a variable, and then referencing that variable to send a key event. It's really worth checking out. It will also really help you to find the div's and then the text within them.  EDIT: a typo"
learnpython,3c1182,Nodocify,1 point,Sat Jul 4 23:34:33 2015 UTC,i actually tried beautifulSoup before but it seemed to return the empty list box hence I started learning selenium so that i could get the list box. can you share the snippet of code to get the movies? i can take it from there and read on further so i have no confusions as to what i need to use right now. thanks for the help.
learnpython,3c0o5d,hellothere4556,5,Fri Jul 3 18:15:35 2015 UTC,"Use a set.  >>> items = ['abc','azy','agh'] >>> set(items[0]) & set(items[1]) & set(items[2]) {'a'}   For an arbitrary number of elements, the last line can be written as  >>> set(items[0]).intersection(*items[1:]) {'a'}"
learnpython,3c0o5d,Rhomboid,3,Fri Jul 3 18:25:24 2015 UTC,Look into sets.  >>> set('abc') & set('azy') set(['a'])
learnpython,3by8e6,Chocolate_Mustache,4,Fri Jul 3 03:34:21 2015 UTC,"Here's a thorough critique: http://pastebin.com/9bJ3F0rd. One more thing: notice that I used player_id as an arbitrary string instead of an identifier for the class, and generated my own ""player_id"" (self.current_player_index) in the Game class. That's better because the player shouldn't know how the Game keeps track of players. I also just realized you might have wanted a player to take his turn again if there was an input_error. In that case, you should make a new method in the Player class that does something like   def ask_player(self):      is_valid_input = False      while not is_valid_input:          try:              player_input = int(input('Enter'))              is_valid_input = True          except ValueError:              pass      return player_input   Note that this doesn't check if it's within the right ranges, just checks that the player entered an integer.  It's a bit harsh - don't take this personally. Seriously, you did a great job!  Feel free to reply/message if you have any questions!"
learnpython,3by8e6,deathofthevirgin,3,Fri Jul 3 07:45:35 2015 UTC,"I miss only if __name__ == ""main"":"
learnpython,3by8e6,xcombelle,2,Fri Jul 3 09:21:08 2015 UTC,"Good write-up. OP, also take a look at PEP8, the Python style guide, and add docstrings to your modules, classes and functions."
learnpython,3by8e6,dunkler_wanderer,1 point,Fri Jul 3 08:16:33 2015 UTC,Thanks a ton for this! When I get some time I'll implemented the improvements and I'm sure I'll be back with questions.
learnpython,3by8e6,deathofthevirgin,2,Fri Jul 3 15:57:56 2015 UTC,"No problem! One thing you should try that's less programming and more logic - Nim is a solved game. That is, you can tell at the beginning of the game, that if both players play perfectly, who will win. Then instead of a random AI you can make the AI do the optimal move - such that it always wins when it can, and will always win if the Player screws up even once. It's a bit tricky - try considering for small cases like 2, 3, 4, 5 total starting tokens."
learnpython,3by8e6,deathofthevirgin,2,Fri Jul 3 23:28:37 2015 UTC,"Just wanted to follow up on this. Thanks again for your comments, everything was very clear. I think the biggest tip for me, I think, was that I should have a game class. I always thought of classes being used just for things you would have multiples of, but I see how adding a game class helps organization, even if I am only going to have one game instance. Thanks!"
learnpython,3by8e6,Justinsaccount,2,Tue Jul 7 03:37:24 2015 UTC,"Glad to hear it! If you want to learn more about classes and objects, look up ""object-oriented programming (in Python)"" - some of it is pretty theory-heavy and boring, but when used correctly, classes can really make your code easier to reason about. On the flip side, there's also functional programming - and while it's not completely orthagonal to OOP, FP code tends to use functions and raw data structures over classes and methods (a method is just a function inside of a class). Python is nice because it lets you combine both, so you can experiment easily."
learnpython,3by8e6,pacific_plywood,2,Tue Jul 7 03:47:50 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3by8e6,Flagauster,2,Fri Jul 3 03:40:48 2015 UTC,"Thanks for the tip. If you don't mind (and if you even get the replies to this bot), what is the benefit to the second method over the first?"
learnpython,3byepx,isnotkosok,5,Fri Jul 3 04:32:27 2015 UTC,Python2 'str' object has no attribute 'isnumeric'. Python3 'str' has isnumeric method. Use proper documentation for python version you use.
learnpython,3byepx,Porcela,-3,Fri Jul 3 05:04:37 2015 UTC,is python3 completely new? does python2 code work on it. I don't want to upgrade if mean my old code doesn't work anymore.
learnpython,3byepx,fazzah,11,Fri Jul 3 06:27:42 2015 UTC,"No, Python3 is present for years now and there are some parts that are not backwards-compatible (the most glaring example is that  print    is now a function whereas in python2 it was a statement)  python2.x:  print ""Hello World!""   vs python3.x:  print(""Hello World"")   Also there are things with strings (as in type) which are Unicode now, instead of byte-strings.  Simpler scripts should work out of the box, more complex should be rewritten by hand or using scripts like py2to3, but this is out of the scope of this comment."
learnpython,3byepx,deathofthevirgin,-26,Fri Jul 3 06:41:53 2015 UTC,lame.
learnpython,3byepx,LarryPete,3,Fri Jul 3 09:34:26 2015 UTC,"You can use both on the same computer, so for old versions you can still run $ python2 old_app.py. It's good practice to use Python3 for new projects - there's a lot more features and bugfixes (even more in the upcoming 3.5)."
learnpython,3byepx,deathofthevirgin,-2,Fri Jul 3 08:00:49 2015 UTC,is python3 an update or am I downloading a completely new program?
learnpython,3byepx,Vaphell,5,Fri Jul 3 09:35:37 2015 UTC,python3 does NOT replace your python2 installation. you can install them in parallel.
learnpython,3bzxth,ADreamByAnyOtherName,1 point,Fri Jul 3 14:50:08 2015 UTC,http://www.reddit.com/r/dailyprogrammer  I am going through that myself :)
learnpython,3bzxth,Robotronic777,2,Fri Jul 3 15:29:17 2015 UTC,Thanks. :)
learnpython,3bzxth,shitcock55,1 point,Fri Jul 3 15:34:47 2015 UTC,why are the only place i EVER see PC's favored is vfx and stuff here).
learnpython,3bzxth,hw_t_dstr_ngls,1 point,Sat Jul 4 00:20:24 2015 UTC,http://codewars.com is quite fun if you want to work on small problems and learn how to apply your Python knowledge.
learnpython,3bzxth,theinevitable,1 point,Fri Jul 3 16:55:21 2015 UTC,"I fiddled around with a lot of different online courses, books from the library, etc. But now I'm working through Berkeley's cs61 on Composing Programs and I really like it. The videos are super helpful, and I really like the approach the textbook SICP (structure and interpretation of computer programs) takes to explaining things. It also explained some stuff in the very first chapter that none of the other books even touched-- how to test your programs! Running a program interactively! Great stuff."
learnpython,3bzxr1,Robotronic777,3,Fri Jul 3 14:49:33 2015 UTC,"You are modifying the list over which you're interating, which is a classic python no-no and is likely the source of the odd behavior."
learnpython,3bzxr1,rhgrant10,2,Fri Jul 3 15:41:21 2015 UTC,"To expand on this a little, under the hood python iterates over lists by iterating over an index. If you change the length of the list you're iterating over, that changes what the index means.  Here's an example that might make it clear:  >>> for num in my_list: ...     print(my_list) ...     print(num) ...     if num == 2: ...             my_list.remove(num) ...  [1, 2, 3, 4] 1 [1, 2, 3, 4] 2 [1, 3, 4] 4   After you remove 2 from my_list the loop goes on to the third item in the list (since it's already processed the second item), which is now 4 and 3 gets skipped altogether."
learnpython,3bzxr1,NoLemurs,1 point,Fri Jul 3 15:53:13 2015 UTC,"Aaaa.... ok, i got it. List index keeps the same and the list itself shortens. Thanks."
learnpython,3bzxr1,hw_t_dstr_ngls,1 point,Fri Jul 3 18:02:26 2015 UTC,BTW Is there any smarter way to adjust a list without changing it while looping throught it? Findall? Replace?
learnpython,3bzxr1,NoLemurs,1 point,Fri Jul 3 18:18:24 2015 UTC,"Instead of adjusting your input list (which may result in unexpected behaviour down the line), you can make a new empty list and populate it.  inpLst = [1, 2, 3, 4] outLst = [] for i in inpLst:     if i % 2 == 0:         outLst.append(i)   And if it's a function, you can then return the outLst."
learnpython,3bzxr1,NoLemurs,1 point,Fri Jul 3 19:20:18 2015 UTC,"Except in rare instances, it's better to make a new list rather than modifying a list in place. There's just a lot less to keep track of that way, and your code will be cleaner and more readable.   In real code, of course I'd juse use the str.replace method, but that's obviously not in the spirit of this challenge. I would choose to build the new list on the spot rather than make a copy and then remove elements though. Removing is a relatively slow operation, and more fidgity - it's easier and more efficient to just build the list from scratch.  I might write this something like:  def remove(s, chars):     return ''.join(c for c in s if not c in chars)   strings are iterable in python, so there's not actually a need to make lists from them."
learnpython,3bzxr1,novel_yet_trivial,1 point,Fri Jul 3 19:27:51 2015 UTC,"NoLemurs, you've just touched another part of code which i dont' really understand. I've seen it, but it doesn't compute. If its not too much to ask could you please explain:  C for c in s if not c in chars   I've seen different kinds of this line but the first half of it is just ???. As i understand the last half (correct me if am wrong) if c (list item) is not in chars(list) but c for c in s? Is s another list?"
learnpython,3bwc9u,JonnyFB421,19,Thu Jul 2 18:11:01 2015 UTC,"A lot here so hard to narrow down some points to hit without rewriting it. So, here are some random thoughts in no particular order:   Don't define your constants or classes inside a function.  Your Block class definition does not belong in main. Most of those constants don't need to be defined at all.  The colors can be accessed with pygame.Color(""white"") for example and pi is defined in the math module. You need to convert your surfaces for faster blitting E.G self.image = pygame.Surface([width, height]).convert(). This might not matter so much here but as your programs get more complex it will be essential to maintain performance. If you are using a with statement (which is good) for IO, you don't need to explicitly close the file handle. If your Blocks always needs its position set then these should be arguments the block is passed and set in __init__.  If your Blocks are always the same size, use a Constant you define once rather than passing extra superfluous arguments to the __init__. pygame.sprite.Sprite.__init__ takes any number of optional pygame.sprite.Group instances.  You can leverage this to avoid extra lines where you create a sprite then add it to multiple groups.  EG: pygame.sprite.Sprite(red_blocks, all_blocks) Instead of:    mysprite = pygame.sprite.Sprite() red_blocks.add(mysprite) all_blocks.add(mysprite)   You will need to change your Block __init__ and super call to accept *groups to use this. Blocks should probably have a function that is called on collision so as not to crowd your main loop with conditional blocks.  Objects should encapsulate functionality that applies to them. Your main loop itself is very chaotic and disorganized.  Consider abstracting it into its own class with simple methods main_loop, event_loop, update, and render. For a basic example of this structure see this example: https://github.com/Mekire/meks-pygame-samples/blob/master/color_change.py Or any other part of that repo for slightly more complex examples.   Realize that the problems associated with global variables are not solved by wrapping your entire module in a main() function.  Functions should be short, concise, and clear.  Lengthy multipage functions suffer from all the same global issue that writing directly in the global namespace does.   Guess I'll leave it at that for now;  I'll add more if anything jumps out at me. Come join us at /r/pygame.  Cheers, -Mek"
learnpython,3bwc9u,Mekire,1 point,Thu Jul 2 19:48:29 2015 UTC,Thanks very much for all the help.  I've refactored my code based on your comments along with wololongong's.
learnpython,3bwc9u,wololongong,12,Sun Jul 5 05:30:45 2015 UTC,"I don't know pygame details but I can give you a general code review.  In general your style is very good! Your comments are descriptive, you follow PEP8, and it's easy to understand what's going on.    Don't define classes or constants in your main() function. main() should be a trivial function with just enough lines to kick off your program. class definitions, constants, and other functions belong at the top-level (not indented inside anything else). Move some of the logic inside your main into separate functions too, because there's a lot happening in the 'while not done:' loop. E.g. you should have a function to play music, and in the function are lines 123-129. You don't need a finally: block to close a file when you use a context manager ('with'). The point of a context manager is that it's guaranteed to clean up its context even if there's an error. Don't redefine things like pi that are already defined for you in modules (in this case, math.pi). I wouldn't be surprised if colour tuples were defined in a module too. Prefer 'import random ... random.randrange(bla)' over 'from random import randrange ... randrange(bla)'. The former is less likely to have a name conflict and is a bit clearer. This is partly a matter of preference though. So-called 'magic numbers' like 6, 3, 2 that appear in lines 153-170 should be avoided in favour of constants with descriptive names e.g. ""SIZE_OF_X_STEP"" or ""PLAYER_HEIGHT"". SCREEN_WIDTH and SCREEN_HEIGHT should be constants. Don't say ""if bla == True"" or ""if bla == False"", say ""if bla"" or ""if not bla"" (respectively) instead. ""if score > high_score: high_score = score"" can be replaced with ""high_score = max(high_score, score)"". In my opinion the second is clearer and more concise. ""if score >= 3: score -= 3; else: score = 0"" can be replaced with ""score = score - 3 if score >= 3 else 0"". Again in my opinion this is clearer, since it's obvious that the purpose of the statement is only to modify score and it doesn't have any other side effects. You have a lot of local variables in main() that should be attributes in a class like Game. For example, score, high_score, speed, starting_block_amount, etc. Generally try to avoid having large numbers of local variables building up in the same scope.   Rather than using indices to iterate over red_block_list, it's preferable to iterate over the list using something like  for sprite in red_block_list.sprites():      ...   If you only want to iterate over the first n elements, you can take an iterator slice using itertools.slice in the itertools module."
learnpython,3bwc9u,__baxx__,2,Thu Jul 2 19:42:51 2015 UTC,"This was exactly the kind of response I was looking for, thank you."
learnpython,3bwc9u,DoTheEvolution,3,Thu Jul 2 19:53:26 2015 UTC,"how do - can't say anything about the code but what would be interesting is screenshots (for curiosities sake I guess!)  Also - how hard was pyGame? I've never tried it but have read bit's here and there about it not working properly for python 3, or being hassle to get working on 64 bit machines and other things. Just wondering what it was like to use."
learnpython,3bwc9u,DoTheEvolution,7,Thu Jul 2 22:03:01 2015 UTC,I run it...  heres how the gameplay looks
learnpython,3bwc9u,aroberge,1 point,Fri Jul 3 01:10:13 2015 UTC,"Pygame works fine with Python 3, but I did have problems installing it I recall.  I think Pygame's download page wasn't working and using pip resulted in errors.  I followed some instructions from Stack Overflow to get it working using wheels.  I kept trying to install the wrong wheel.  It was a hassle; partly due to my stupidity.  Getting Django working on Windows was a bigger challenge.    So far pygame been the most fun thing I've done in Python.  Getting pygame games to compile to an exe isn't so nice, but doable.  I followed this tutorial to familiarize myself with the framework."
learnpython,3bwc9u,xcombelle,1 point,Sun Jul 5 05:48:00 2015 UTC,"decide if you want to use  """" or ''"
learnpython,3bz4hb,drLagrangian,4,Fri Jul 3 09:19:36 2015 UTC,"The best general datetime module is arrow. Chronyk is an awesome library for parsing human readable dates and times, which if I'm understanding you correctly, is what you want to do."
learnpython,3bz4hb,coderjewel,1 point,Fri Jul 3 09:50:40 2015 UTC,"+1 for arrow. We've been using it in production for years.  A nice perk is that an Arrow object is a datetime-like object, so you can pass it around wherever you might use a datetime object."
learnpython,3bz4hb,searchingfortao,1 point,Fri Jul 3 12:19:03 2015 UTC,"I didn't know that, so I used Arrow.naive wherever I needed a datetime object. This is going to make stuff so much simpler, thanks :)."
learnpython,3bzifp,Rammetin,2,Fri Jul 3 12:18:33 2015 UTC,"I'm not entirely sure what this constant is, but just by looking at your code...  You don't need to include ""if number == 6174"".. Because if the number is 6174, then the while loop is never entered, and a is defaulted to 0 which is printed immediately after the while loop.   Make sure you variables are consistent throughout. At some places you have number, and some have nummer. Be careful of these small syntax errors. (Also in your mainline, while try_again == ""ye"")"
learnpython,3bzifp,olyko20,2,Fri Jul 3 13:10:45 2015 UTC,"oh yeh thats because i quickly translated the code to english from swedish, should have paid more attention to it, sorry!"
learnpython,3bzifp,Vaphell,1 point,Fri Jul 3 13:15:25 2015 UTC,hint  >>> '{:04d}'.format(1000-0001) '0999'
learnpython,3bzifp,Vaphell,1 point,Fri Jul 3 13:06:32 2015 UTC,"thanks, i will look up what .format does and what {:04d} means!"
learnpython,3bzp3n,Jhooma,3,Fri Jul 3 13:30:27 2015 UTC,"Is this the paperclip you are talking about? If yes, then it is a Django app, so no, you can't use it without setting up django."
learnpython,3bzp3n,coderjewel,1 point,Fri Jul 3 14:02:17 2015 UTC,That's definitely the module you'd get from pip install paperclip in any case.
learnpython,3bzp3n,NoLemurs,1 point,Fri Jul 3 15:58:11 2015 UTC,Yes. I was talking about that.  Thanks a lot
learnpython,3bxcjs,bigv13899,5,Thu Jul 2 22:48:39 2015 UTC,"That's a fine approach. Do note that you'll need to save the board in an instance attribute so that you can access it from the other methods.  class Player(object):     def __init__(self, board, player_number):         self.board = board         ...     def draw(self):         ... self.board ..."
learnpython,3bxcjs,kalgynirae,1 point,Thu Jul 2 23:04:44 2015 UTC,Cool! Yeah that's actually how I have it implemented. I just forgot to put that in the init of my example. Thank you!
learnpython,3bz49q,tiipiik,1 point,Fri Jul 3 09:16:49 2015 UTC,"What exactly do you need help with? Some simple google searches like ""python sftp"" or ""monitoring a file for changes python"" give pretty good results"
learnpython,3bz49q,teerre,0,Fri Jul 3 09:28:09 2015 UTC,"Well [I just can hide myself]. As I'm not a Python developer even if I already played with it I wheren't knowing where to start, but you give me a good way to start !  Also, what would be the best way to launch this script when user log in is computer ? I've seen making a cron job, add the script to launchd, even making the script as an app ?  Thanks"
learnpython,3bz49q,teerre,1 point,Fri Jul 3 09:40:36 2015 UTC,For now I think I will separate jobs like this : - push file to server via sftp - detect file changes to push only when file has changed - add script to computer boot up.
learnpython,3bz49q,novel_yet_trivial,1 point,Fri Jul 3 09:48:21 2015 UTC,"I never used a mac in my life, so I have no idea, but I would imagine mac has something similar to Windows Task Scheduler (apparently there's something called automator)"
learnpython,3bz49q,novel_yet_trivial,1 point,Fri Jul 3 10:09:16 2015 UTC,"Yes it's automator, I'll check that, I've already made part 1 and 2, and will probably put the code here as it take a small amount of lines."
learnpython,3bz49q,novel_yet_trivial,1 point,Fri Jul 3 14:45:29 2015 UTC,"Your mac has a program installed by default called ""sftp"" (I think, it's been a while since I used a mac). This program can process a batch file. This would be the easiest solution.  Alternatively, rsync is a great command line program to synchronize files, and supports ssh.  In this case, I don't think Python is the best answer."
learnpython,3bysi1,Aeliens,5,Fri Jul 3 06:51:17 2015 UTC,"Like /u/Rhombold stated, this is because 'word' and 'word2' are unicode strings, instead of byte strings. Before storing this data somewhere or transmitting it over the network, you would have to encode the string, which if you are unfamiliar with, I recommend you have a look at this video."
learnpython,3bysi1,coderjewel,3,Fri Jul 3 09:56:51 2015 UTC,"That means they are unicode strings instead of byte strings.  There is nothing to get rid of.  It's working as designed.  If you're working with text you want character semantics, not byte semantics, so unicode strings are the proper type to be using.  You could switch to Python 3 where unicode strings are the default and don't have a prefix if it's really bothering you that much.  If you just want to view the contents of the list, then don't rely on the representation of the object, use something explicit, e.g.  >>> foo = [u'manner', u'as', u'to', u'engage', u'the', u'general', u'good', u'opinion', u'of', u'their'] >>> print(' '.join(foo)) manner as to engage the general good opinion of their"
learnpython,3bysi1,Rhomboid,1 point,Fri Jul 3 07:05:15 2015 UTC,"Oh, okay! I'm new to python and realized something was different jumping from python 3 on windows cmd to terminal on my mac.   Thanks for the info."
learnpython,3bws5q,89vision,4,Thu Jul 2 20:08:12 2015 UTC,"It depends on the specific situation. If you can provide a better explanation of what went wrong, then you should definitely do so. (That might mean catching the exception and throwing your own, or maybe throwing the same exception type but with an improved message.) Either way, you should make it clear in the documentation what exceptions might be thrown."
learnpython,3bws5q,kalgynirae,2,Thu Jul 2 20:45:02 2015 UTC,"PRAW recently changed this. It used to throw the requests.exceptions.HTTPError when a server returned a 503 for a example. Now it throws a praw.errors.HTTPError instead (without any additional information compared to the requests error).  If you know the package uses the requests module, it seems odd that it throws its own error. However, I can imagine that for new users it might seem odd to need to catch an exception from a module imported by the module you are using. Almost as if they should have taken care of it, which in a way they are doing now.  I think it just creates more unnecessary code in your own codebase. That is, unless you can provide more information."
learnpython,3bykxi,sordnax,1 point,Fri Jul 3 05:31:23 2015 UTC,"I don't see you actually use any of the global variables in a local (function) context. But still, I'd advise to put all that is under if __name__ == '__main__' in a function in case anyone wants to import the module later.   If you do need to access the ids in other places without wanting to pass them around, create a config.py and import that. Then you can use config.user_ids for example.  Edit: apparently it's still too early in the morning for me. Of course if you import this file, it won't add the ids to the global scope be a use of that if statement."
learnpython,3bykxi,FlockOnFire,1 point,Fri Jul 3 05:52:22 2015 UTC,I thought user_id (used in post function) is considered a global variable. Is that correct? And thanks for the suggestion as well! :)
learnpython,3bykxi,FlockOnFire,1 point,Fri Jul 3 06:09:35 2015 UTC,"Yes, however the request.get is also in the global scope. So you aren't doing any ""dangerous"" things (manipulating globals inside functions makes for nasty debugging -> side effects, but you aren't doing that)."
learnpython,3bykxi,Justinsaccount,3,Fri Jul 3 06:18:59 2015 UTC,If they are using user_id inside post then they are relying on global variables and should not be doing that.  It only works since user_id is defined in the global scope under if __name__ == '__main__': and not in an actual main() type function
learnpython,3bykxi,FlockOnFire,1 point,Fri Jul 3 15:37:51 2015 UTC,"Ah, I misunderstood what he was saying. You're right."
learnpython,3bykxi,Justinsaccount,1 point,Fri Jul 3 16:01:29 2015 UTC,Ahh! Thanks for this! So if I had defined global user_id inside a main() function and then used this in post() then it is a bad idea.
learnpython,3bykxi,StaticFuzz,1 point,Fri Jul 3 23:19:28 2015 UTC,What you are doing is already a bad idea. user_id is already a global variable because you defined it in the global scope.
learnpython,3bykxi,StaticFuzz,1 point,Sat Jul 4 01:19:06 2015 UTC,"You currently aren't using global variables, you're passing objects to the functions in the parameters, which is good.  Are you asking if you should use global variables? No you should try to avoid it."
learnpython,3bykxi,Justinsaccount,1 point,Fri Jul 3 05:59:19 2015 UTC,"I thought user_id (used in post function) is considered a global variable. Is that correct? And yeah, I'm trying to avoid the use of them"
learnpython,3bxh9r,Stealthless,3,Thu Jul 2 23:29:13 2015 UTC,"You don't really have a multi-line string.  You have a single-line string with a few newline characters thrown in.    You have the right idea with your first line:  for letter in str:   That will loop through all the characters in str.  So the first iteration, letter will be W.  The second iteration, letter will be e.  the third, l.  And so on.    Eventually, letter will be \n.   At that point, you need a way to tell your loop that on the next iteration, you want to save off the value of letter (probably in a list)."
learnpython,3bxh9r,Wargazm,1 point,Fri Jul 3 00:08:30 2015 UTC,"I see what you mean, thanks!"
learnpython,3bxh9r,Wargazm,1 point,Fri Jul 3 02:27:00 2015 UTC,"As a further exercise, do you see why what you originally wrote:  for letter in str:     first_char = str[0]   is silly?"
learnpython,3bxh9r,Wargazm,1 point,Fri Jul 3 04:42:58 2015 UTC,"Yes, it grabs the first character only and nothing more. Lol"
learnpython,3bxh9r,Wargazm,1 point,Fri Jul 3 13:33:20 2015 UTC,"Not only that!    Remember, you wrote a loop.  for letter in str: will execute the body of the loop once for each character in str.  str has 26 characters.  So you're grabbing the first character of str and assigning it to first_char 26 times! :-)"
learnpython,3bxh9r,gengisteve,1 point,Fri Jul 3 13:40:59 2015 UTC,"Snap, that's brutal!"
learnpython,3bwtmd,harshsrinivas,2,Thu Jul 2 20:19:08 2015 UTC,"Lines 53-56 where you try to find the URL are pretty odd. Instead of using multiplication on indices, consider searching through a list of those URL fragments. There is a lot of duplicated code - lines 53-60 and 95-104, for example. Some refactoring is needed. Why does line 274 use unicode literals? You mix double and single quotes throughout the code. Bonus points: run the code through pylint."
learnpython,3bwtmd,raylu,1 point,Fri Jul 3 00:34:49 2015 UTC,"Iterating through the list of strings definitely sounds like a better option. Will make the necessary changes for sure Sure, will create separate functions for executing those parts of the code. That is just a typo/bug that has to be removed, will be done very soon I just installed pylint and it is awesome!! .    Thanks a lot raylu! I will look into all of this and make the necessary changes!"
learnpython,3bwtmd,BasicBitcoiner,1 point,Fri Jul 3 05:27:43 2015 UTC,"Line 22:  I wouldn't line break mid-string.  Move the whole string description='Github within the Command Line' to line 23 and indent it.  PEP 0008    The preferred way of wrapping long lines is by using Python's implied line continuation inside parentheses, brackets and braces. Long lines can be broken over multiple lines by wrapping expressions in parentheses. These should be used in preference to using a backslash for line continuation.     Throughout: I would definitely add functions.  You should have each block of code in its own function.  Instead of having your if block with a bunch of code under it, it would be much cleaner to use code like:    if(args.username):     ParseUsername(args.username)     I would also turn your giant ""find the URL"" block in every single code block into a helper function.  You've got the exact same code copied in something like seven places.   Read up on DRY Don't repeat yourself.    That's my thoughts on a quick lookover."
learnpython,3bwtmd,raylu,1 point,Fri Jul 3 02:52:52 2015 UTC,"I get the point BasicBitcoiner , will create separate functions to avoid redundancy. :)  Thanks a lot for taking your time to analyse my code! The next time i make an update, you can surely expect a much better piece of code. Thanks!"
learnpython,3bww4k,SirSkelton,2,Thu Jul 2 20:37:45 2015 UTC,"Most values can be converted to booleans (True or False). Such conversions usually happen automatically, but you can also do them manually using the bool() function. Each type is a little different regarding how it gets converted. For integers, 0 turns into False and anything else turns into True. So if you write something like if number: print ""hi"", where number is an integer, then ""hi"" will be printed if number is anything other than 0.  power == 2 or 3 gets interpreted like (power == 2) or (3), because or has a very low operator precedence. 3 is a non-zero integer, so it counts as true, so this expression will always be true.  To accomplish what you intended, you need to write power == 2 or power == 3 or power in [2, 3]."
learnpython,3bww4k,kalgynirae,1 point,Thu Jul 2 20:51:06 2015 UTC,"Thanks for the help!  So, would would parenthesis be able to fix it?  Would I want to do something like if (power == 2 or 3)  or would it be if power == (2 or 3)?  Also, I can't figure out how to make text look like code in the comments, how did you do that?"
learnpython,3bww4k,kalgynirae,1 point,Thu Jul 2 20:55:41 2015 UTC,"(I ninja-edited this into my original post, but I guess I wasn't fast enough. No worries.) No, you can't fix it just with parentheses. (power == 2 or 3) doesn't change anything, and (2 or 3) actually evaluates to just 2 (I actually just explained this to someone else, so look at my recent comments if you want to learn why).  For inline code formatting, surround the code with backticks. For example:  blah blah blah `power == 2 or 3` blah blah"
learnpython,3bww4k,novel_yet_trivial,1 point,Thu Jul 2 21:13:22 2015 UTC,Use backticks (`) to show inline code. So `code` becomes code. The backtick key is usually above Tab on your keyboard.
learnpython,3bww4k,uhkhu,1 point,Thu Jul 2 21:13:52 2015 UTC,blocks of code have 4 spaces before and new line before previous non-code line  like this and this etc...   inline comments are wrapped in `` like this
learnpython,3bww4k,uhkhu,1 point,Thu Jul 2 21:19:19 2015 UTC,"if power == 2 or 3 will always print because 3 is 3. This would read True/False or 3, so even if you're in a 'reduce die' situation, keep die trips because of the statement below:  in: if 3:       print 'three' out: 'three'   you need to write it like this:  if power == 2 or power == 3:     print 'Keep Die'   But a better way to do it is with if/elif statements  if power == 1: print 'Reduce Die' elif power == 2 or power == 3: print 'Keep Die' elif power == 4: print 'Increse Die'   This way python continues after it enters one of the if lines, otherwise python goes ""if this, if this, if this"" each time when  only one statement can be True.  edit: clarified first statement"
learnpython,3bww4k,uhkhu,1 point,Thu Jul 2 20:57:30 2015 UTC,"on your last code chunk, the only difference between what you wrote and writing them with ""if"" is that yours won't check the remaining lines if it finds a true statement, correct?  I haven't really learned much about the elif function, so I want to make sure I know the difference.    Thanks for the help."
learnpython,3bww4k,know_worra_mean,1 point,Thu Jul 2 21:03:51 2015 UTC,"Yeah, once it finds a True statement, it leaves the if/elif section. In a large program, or many iterations this would save time and it's unnecessary to check the other lines when only one can be True.   if/elif/else is read like this in Python  # enter if/else if this:  # check this condition     do thing elif this:  # otherwise, check this condition     do this instead elif  this:  # otherwise, check this condition     do this instead else:  # no previous conditions satisfied     do this if none of the other conditions are met  continue code   If/elif/else needs at least 1 if, 0 or more of elif ( no limit on these) and 0 or 1 else statements (no more than one). Once a line evaluates to True and the underlying code is executed, Python will jump out and continue with the next statement outside of the if/else (continue code)"
learnpython,3bww4k,tk425,1 point,Thu Jul 2 21:16:03 2015 UTC,"It's a simple one but very easy to trip up on too. You have to remember computers are dumb and only do exactly what you tell them. When you say ""if power is equal to 2 OR..."" you are comparing two separate unrelated questions. Your second question isn't inferred from the first like how a human would do. When you say or 3, the computer thinks ""or 3 what?"". You have to be explicit. If power is equal to 2 OR if power is equal to 3!"
learnpython,3bww4k,tk425,1 point,Thu Jul 2 21:45:47 2015 UTC,"everyone told you why e this line works but here is a quick fix to make it work like you want.       if power in (2, 3)"
learnpython,3by11x,SirSkelton,3,Fri Jul 3 02:29:20 2015 UTC,"You are using the wrong string presentation type. %d is for integers, what you want to use is %f.   This might help: https://docs.python.org/3.3/library/string.html#format-specification-mini-language"
learnpython,3by11x,coderjewel,1 point,Fri Jul 3 02:40:47 2015 UTC,"awesome, thanks.  I tried getting it to then round to 2 decimal places to look a bit cleaner.  I tried both         x = round(-b/(2*a), 2)     y = round(a * x**2 + b * x + c, 2) and then print ""Your vertex is (%f, %f)"" % (round(x,2), round(y,2)) and neither changed the accuracy.  Is there a way to do this or do I need to define the float earlier?"
learnpython,3by11x,Vaphell,2,Fri Jul 3 02:55:02 2015 UTC,"Don't round your floats because it's a formatting problem, not a value problem. You should leave your results true and only use format modifiers to customize the presentation of data. Truncating your variable will only introduce inaccuracy which will compound if you stack a lot of such calculations.  %f supports modifiers for width, here you want let's say %.2f for 2 decimal places.  btw, id expect that function called vertex(a, b, c) gives me actual vertex via return so i can use it further, not merely show me some numbers i can do nothing with via side effect (printing to screen), eg  p1 = vertex(1,0,1) p2 = vertex(3,5,11) print distance(p1, p2)"
learnpython,3by11x,coderjewel,1 point,Fri Jul 3 03:11:45 2015 UTC,Thanks for the advice.  This is only my second day coding so I'm not really looking to do anything super fancy right now.  Just getting the basics down
learnpython,3bxb95,spicyboldbbq,4,Thu Jul 2 22:38:08 2015 UTC,"People often base their advice about learning programming on their own experience.  Thus those who learned before IDE will often say that is the best way to learn.  IDEs do make things easier, however just remember that using one you are now learning three things at once, how to program, how to using Python and how to use your IDE.  If all this gets confuses sometimes, then revert back to using simple tools.  When I am teaching beginners I use a very simple IDE (Wing) which I can explain in 5 minutes and then I stress to the students that I will not explain any more about the IDE,  I want to spend my time teaching programming and Python.  PyCharm is an excellent tool, and it would be a good idea to explore it fully AFTER you know how to program first, otherwise many of its strengths won't make much sense to you."
learnpython,3bxb95,nwilliams36,1 point,Fri Jul 3 00:34:02 2015 UTC,"Thats the plan. I got it and only looked up how to enable a few things I really wanted off the top of my head like the vertical indentation lines and the terminal view at the bottom, I'll leave the rest for later."
learnpython,3bxb95,p10_user,2,Fri Jul 3 00:46:49 2015 UTC,"Personally I don't see a reason to not use one if you want to. I actually got really excited about trying python once I heard about spyder, since I come from using matlab and spyder is very similar to what I was used to. But now I actually do what you describe; I use a text editor to write my scripts and have a command window open beside it to test snippets of code. Though my text editor does give me indentation guides, which is nice.  I say just use whatever makes you feel most comfortable as long as you are efficient."
learnpython,3bxb95,TwiSparklePony,1 point,Thu Jul 2 22:42:14 2015 UTC,"I couldn't see a reason not to either, besides what I've already listed and those things definitely don't take that long to become an automatic habit. There's only advantages as far as I can see."
learnpython,3bxb95,dunkler_wanderer,2,Thu Jul 2 22:47:35 2015 UTC,"I believe most distributions come with IDLE pre-installed. This is a basic IDE that has stuff like syntax checking and a nifty feature that shows the docstrings of functions when you begin to write them. Since it comes packaged with the main Python distribution, my college uses it teach programming. As far as IDEs go, it lacks customization and functionality (compared to others) and I personally dislike it, but it is probably a good learning tool."
learnpython,3bxb95,uhkhu,1 point,Fri Jul 3 06:10:51 2015 UTC,"I'd recommend IdleX for beginners. It fixes some issues with IDLE and is a bit more comfortable to use. However, its IPython module doesn't work with the newest IPython versions anymore and it has a few bugs (in Python 3 the search menu doesn't go away when you click somewhere else). Unfortunately the projects seems to be inactive.  Also, they should move away from Sourceforge."
learnpython,3bvw4j,Siiimoon,5,Thu Jul 2 16:07:40 2015 UTC,"I think that you will end up having to use if else statements but in order to minimize this you could split a fight into turns and have a while loop in your fight function something similar to:  def Fight(player, enemy):     while player.currenthealth > 0 and enemy.currenthealth > 0:         Turn(player, enemy)  def Turn(player, enemy):     # take player option     # calculate outcome     # display outcome   it will still involve if else's in the turn function but if you do it per turn it will be a lot less! I also STRONGLY recommend you look into classes, you could say something like:  class player():    def __init__(self, agility, gender, hp):         self.gender = gender         self.maxhealth = hp         self.currenthealth = self.maxhealth # character starts with max health         self.agility = agility         #etc.          def attack():             Odds = random.randrange(1, 100, 1) + Agility             if Odds >= 60:                 print(""You hit!"")   and then say:  playerA = player(10, 'male', 100) # gives the current player 10 agility, male gender and 100 hp this allows you to customize character creation easily! orcA = player(3, 'ORCISHHHH', 45) # gives the orc some stats!  Fight(playerA, orcA)   inside of turn you could have:     def Turn(player, enemy):         # get user input         if input == 'b':             player.attack()  and then add your own functions to the player class! you could have block or parry or whatever you like!   edit: completely ignore the class stuff if it doesn't help at all, I'm just trying to help! definitely try the while loop with a turn function inside though :)"
learnpython,3bvw4j,kkradical,2,Thu Jul 2 17:41:17 2015 UTC,"I've tried for a very long time to understand classes and objects, i just cant get it. I also have the attributes and stuff from another .py file that i want to include in the example fight. Thanks for taking your time though"
learnpython,3bvw4j,kkradical,3,Thu Jul 2 17:47:32 2015 UTC,"I'm going to try and explain please bear with me!   Whenever you are representing things in code a class/object is super useful! You have players that you need to represent so you should make a player class. A player class is basically just a factory that cranks out player objects.  class player():     def __init__(self):         self.strength = 10   oh small point, in python the   __init__    is what happens when you create a new player object! self just refers to ""whatever object I am currently""  so right now we have a player factory that creates players with strength 10!  playerA = player() playerB = player() print(playerA.strength) print(playerB.strength)   both times it will print out 10 because both of our players were created with 10 strength! But what if we want to spawn players with different strength :(?  class player():     def __init__(self, inputStrength):         self.strength = inputStrength  playerA = player(2) # so weak playerB = player(100) # much strength wow print(playerA.strength) # prints 2 print(playerB.strength) # prints 100   okay so now we can create players with different strengths! perfect! but what if a player has something like health that we want to change and wont always stay the same?  class player():     def __init__(self, inputStrength, inputHealth):         self.strength = inputStrength         self.health = inputHealth  playerA = player(2, 100) # so weak playerB = player(100, 1000) # much strength wow print(playerA.health) # prints 100 print(playerB.health) # prints 1000  # say playerA attacks playerB and player B loses 2 health playerB.health = playerB.health - playerA.strength print(playerB.health) # now prints 998 instead!   so as you can see you can do operations to an objects attributes just like any regular variable! Now the last important thing to become familiar with would be class functions or methods. They are EXACTLY THE SAME as regular functions with some extra helpfulness (yes i lied about them being exactly the same ;)  class player():     def __init__(self, inputStrength, inputHealth):         self.strength = inputStrength         self.health = inputHealth      def attack(self, target):         target.health = target.health - self.strength   OK! we have a basic attack function/method! so the code above for playerA to attack playerB now looks like:  playerA = player(2, 100) # so weak playerB = player(100, 1000) # much strength wow print(playerA.health) # prints 100 print(playerB.health) # prints 1000  # say playerA attacks playerB and player B loses 2 health playerA.attack(playerB) print(playerB.health) # now prints 998 instead!   Sweet, we now have defined a way for players to interact with eachother! There are a couple subtleties I ignored, any time you make a class method you need to have self as one of the arguments and self just refers to the object that called the function/method. So in our example self is playerA.  Saying playerA.attack(someTarget) means playerA calls its attack method/function.  Okay that is a lot to take in, I totally understand if it still doesn't make sense but it is super useful to learn and if you spend an appreciable amount of time programming it will organize your code and save time!  Parting note: Classes aren't some super amazing solution to everything. Never make a class just for the sake of ""this guy on the internet said classes are good"". The more you code and learn the more you'll develop your intuition : ^ )  EDIT: ohhh also I'm not sure how familiar you are with coding in general but the code inside classes is like functions it that it wont get executed until it is called from the program below"
learnpython,3bvw4j,kkradical,2,Thu Jul 2 18:24:41 2015 UTC,I actually think i got it!   one last question:  How do I give the character the player is playing attributes from the Create Character file?
learnpython,3bvw4j,kkradical,1 point,Thu Jul 2 18:51:45 2015 UTC,what does the create character file look like? is it text or python? can you copy/paste some example from it?
learnpython,3bvw4j,kkradical,1 point,Thu Jul 2 18:56:38 2015 UTC,"import random import time import os  enter = (""Press enter to continue..."")  Strength = 1 Agility = 1 Inteligence = 1 Luck = 1 Skillpoints = 10      def Start4():      global heroName     global Strength     global Agility     global Inteligence     global Luck     global Skillpoints     global raceChoice     global genderChoice      raceBonus = ""unknown""        print (""These are your total stats: "")     time.sleep(4)     os.system('CLS')      if genderChoice == ""female"" :         Inteligence = Inteligence + 1         genderBonus = ""+1 Inteligence""      else :         Strength = Strength + 1         genderBonus = ""+1 Strength""      if raceChoice.lower() == ""human"" :         Strength = Strength + 1         Inteligence = Inteligence + 1         Agiltiy = Agility + 1         Luck = Luck + 1         raceBonus = ""+1 Strength, +1 Inteligence, +1 Agility, +1 Luck""      elif raceChoice.lower() == ""elf"" :         Inteligence = Inteligence + 2         Agiltiy = Agility + 2         raceBonus = ""+2 Inteligence, +2 Agility""      elif raceChoice.lower() == ""dwarf"" :         Strength = Strength + 2         Luck = Luck + 2         raceBonus = ""+2 Strength, +2 Luck""      else :         raceBonus = ""+2 Luck, +2 Agility""         Agility = Agility + 1         Luck = Luck + 1      os.system(""cls"")     print (""Name: "" + heroName)     print (""Gender: "" + genderChoice)     print (""Race: "" + raceChoice)     print (""Strength: "" + str(Strength))     print (""Agility: "" + str(Agility))     print (""Inteligence: "" + str(Inteligence))     print (""Luck: "" + str(Luck))     print (""Racial bonus: "" + raceBonus)     print (""Gender bonus: "" + genderBonus)      raw_input()            def Start3():      global raceChoice     global genderChoice      genderChoice = ""unknown""      while genderChoice.lower() != ""male"" and genderChoice.lower() != ""female"" :         print (""Please choose a gender"")         time.sleep(2)          print (""A) Female"")         print (""B) Male"")          genderChoice = raw_input(""My gender is: "")          if genderChoice.lower() == ""female"" :             genderChoice = ""female""             Start4()          elif genderChoice.lower() == ""male"" :             genderChoice = ""male""             Start4()          else:             print(""I dont understand"")             raw_input()        def Start2():      global raceChoice     global genderChoice      raceChoice = ""unknown""      while raceChoice.lower() != ""human"" and raceChoice.lower() != ""elf"" and raceChoice.lower() != ""dwarf"" and raceChoice.lower() != ""gnome"" :         os.system('CLS')         print (""Please choose a race"")         time.sleep(2)          print (""A) Human"")         print (""B) Elf"")         print (""C) Dwarf"")         print (""D) Gnome"")          raceChoice = raw_input(""My race is: "")          if raceChoice.lower() == ""human"" :             Start3()          elif raceChoice.lower() == ""elf"" :             Start3()          elif raceChoice.lower() == ""dwarf"" :             Start3()          elif raceChoice.lower() == ""gnome"" :             Start3()       def Start1():     global heroName     global Strength     global Agility     global Inteligence     global Luck     global Skillpoints       while Strength + Agility + Inteligence + Luck < 14 :         os.system('CLS')         print(heroName + "" has "" + str(Skillpoints) + "" attribute points to distribute"")         time.sleep(1)         print (""Strength: "" + str(Strength))         print (""Agility: "" + str(Agility))         print (""Inteligence: "" + str(Inteligence))         print (""Luck: "" + str(Luck))          choice = raw_input(""Place point in: "")          if choice.lower() == ""strength"" :             Strength = Strength + 1             Skillpoints = Skillpoints - 1          elif choice.lower() == ""agility"" :             Agility = Agility + 1             Skillpoints = Skillpoints - 1          elif choice.lower() == ""inteligence"" :             Inteligence = Inteligence + 1             Skillpoints = Skillpoints - 1          elif choice.lower() == ""luck"" :             Luck = Luck + 1             Skillpoints = Skillpoints - 1          else :             print (""I dont unterstand"")             time.sleep(1)      os.system('CLS')     print(""These are your attributes: "")     print (""Strength: "" + str(Strength))     print (""Agility: "" + str(Agility))     print (""Inteligence: "" + str(Inteligence))     print (""Luck: "" + str(Luck))     time.sleep(3)     Start2()       def Start():     global heroName      nameChoice = ""no""     while nameChoice.lower() != ""yes"" :          heroName = raw_input(""Please choose a name for your hero: "")         print (""Your name is: "" + str(heroName))         time.sleep(1)         nameChoice = raw_input(""Are you happy with your name? "")      print (""Great!"")     time.sleep(1)     os.system(""cls"")     Start1()      Start()"
learnpython,3bvw4j,SeryaphFR,1 point,Thu Jul 2 19:02:26 2015 UTC,"okay so basically you have to make a decision, do you want to have all your code in one file or separate it out?   in order to stay organized you probably want to separate it out!  In my opinion you'll want a file for all your classes, and a file for your adventure/game logic. so right now what you have posted would be your game logic file, with everything there being all the initial game/setup!  at the top of your game logic file youll need a  import otherfilename   say you have players.py and game.py as your 2 files then at the top of game.py youd have  import players.py   now you can use all the class declarations from your other file! so instead of having   global heroName   you would have just:  heroName = raw_input(""......"")  playerA = player(heroName)   and add a heroName attribute to your class in the other file! i would highly recommend organizing your character creation into functions like this:  def Start():     heroName = getName()     race = getRace()     gender = getGender()     (strength, agility, intelligence, luck, skillpoints) = getStats(race, gender)     playerA = player(heroName, race, gender, strength, agility, intelligence, luck, skillpoints)  Start()   And then in each of those functions define the loop to get user input like you have and then instead of assigning it to a global variable, return it!  def getName():     nameChoice = ""no""     while nameChoice.lower() != ""yes"" :          heroName = raw_input(""Please choose a name for your hero: "")         print (""Your name is: "" + str(heroName))         time.sleep(1)         nameChoice = raw_input(""Are you happy with your name? (yes/no) "")     print (""Great!"")     time.sleep(1)     os.system(""cls"")     return heroName   The more complicated one would be the skills one because you take in a race and gender and return a bunch of values! one way of returning lots of stuff in python is in a tuple. a tuple looks like (onething, anotherthing, anotherthing) so for the stats one you might have something like:  def getStats(race, gender):     strength = 10     luck = 12     if gender == ""female"":         strength = strength + 2     return (strength, luck)   obviously simplified a lot! but you can take care of the character creation logic!"
learnpython,3bvw4j,kkradical,1 point,Thu Jul 2 19:33:35 2015 UTC,"Yeah, the code i sendt now is a different file from the example fight im working on. should i just put Import Charactercreate (which is the .py file with the creating of the character) on the top? and include   class Player():     def __init__(self, heroName):         self.name = heroName         self.strength = strength         self.agility = agility         self.inteligence = inteligence         self.luck = luck         self.maxHP = healthPoints         self.currentHP = 100      def attack(self, target):         target.health = target.health - random.randrange(1,3,1) + self.strength   in the example fight? All the variables in the attributes are set by the character creating file"
learnpython,3bwa96,jam3sn,1 point,Thu Jul 2 17:56:04 2015 UTC,A pygame application requires the event loop in order to stay alive.  Without it the program can lockup.  Your event loop is not currently in your infinite loop.  You don't process any events and the program locks.
learnpython,3bwa96,Mekire,1 point,Thu Jul 2 18:04:23 2015 UTC,"Ok, so I've moved it into the event loop and updated the link above. However i'm still having the same problem... :/"
learnpython,3bwa96,DJKool14,1 point,Thu Jul 2 18:31:46 2015 UTC,Make sure you are doing a pygame.display.update() for each frame as well.
learnpython,3bwa96,Mekire,1 point,Thu Jul 2 19:28:51 2015 UTC,"I am now, still no luck."
learnpython,3bwa96,alienith,1 point,Thu Jul 2 20:13:19 2015 UTC,"Ok so I tried to fix this by moving the sockets part into a function, however now it's not updating the data... Above i've linked the latest version."
learnpython,3bwa96,alienith,3,Thu Jul 2 20:36:07 2015 UTC,Looks like a misunderstanding of how scopes work.  The variables set in getStats are not global (nor should they be).  The variables accessed in hud refer to the global ones.  Consider returning a dictionary from get_stats and passing a dictionary with them to hud.
learnpython,3bx361,voider1,1 point,Thu Jul 2 21:33:06 2015 UTC,"Not 100% sure what you mean by inputs and not forms, but what libraries are you using? I'd probably try selenium first."
learnpython,3bx361,The-Mathematician,1 point,Fri Jul 3 02:54:19 2015 UTC,"I second this recommendation. For example, you can do inputElement = driver.find_element_by_name(""q"") and then inputElement.send_keys(""cheese!"") to enter your data into the input boxes, and driver.find_element_by_id(""submit"").click() to click the login button.   Docs"
learnpython,3bx361,coderjewel,1 point,Fri Jul 3 03:34:02 2015 UTC,Does this work with clickable labels which are powered by JS?
learnpython,3bx361,coderjewel,1 point,Fri Jul 3 12:11:56 2015 UTC,"I don't know the specifics of your situation, but Selenium can handle JS just fine."
learnpython,3bx361,The-Mathematician,1 point,Fri Jul 3 12:19:24 2015 UTC,Or you could send a return right into the box.
learnpython,3bx361,coderjewel,1 point,Fri Jul 3 12:46:43 2015 UTC,How could I further browse the page when I'm logged in?
learnpython,3bx361,coderjewel,1 point,Sat Jul 4 19:40:27 2015 UTC,"You will have to look at how the page looks like once you're looked in, look for the DOM elements that you are interested in, and then select them and do what you want with them. You can find more information about how exactly you'd do that here."
learnpython,3bx361,coderjewel,1 point,Sat Jul 4 19:49:19 2015 UTC,"I did that, and I've succesfully logged into my router, but now I've stumbled onto another problem. I want to open the forwarding page, but the problem here is when I click on it, it doesn't open.     driver.find_element_by_name('a35').click() I also tried the switch Window switch Frame one, with no avail. The button's HTML looks like this:     <a id=""a35"" href=""../userRpm/VirtualServerRpm.htm"" target=""mainFrame"" class=""L1"" onclick=""doClick(35);"">Forwarding</a>"
learnpython,3bx361,coderjewel,1 point,Sat Jul 4 20:29:26 2015 UTC,What router do you have?
learnpython,3bx361,tk425,1 point,Sat Jul 4 20:37:49 2015 UTC,TP-Link TL-WDR4300
learnpython,3bx361,will_code,1 point,Sat Jul 4 20:49:00 2015 UTC,Have you tried just switching to the page that it forwards you to instead? Selenium should persist your login.
learnpython,3bxnww,Precautionary,4,Fri Jul 3 00:27:28 2015 UTC,"I might be off base here but if you have a function defined it doesn't do anything, you have to call it in the script below. so maybe have something like:  def abbreviate(months : str) ->str     abbreviated_string = ......dostuff     return abbreviated_string  user_input = input('Enter the month : ') print(abbreviate(user_input))"
learnpython,3bxnww,kkradical,4,Fri Jul 3 00:50:27 2015 UTC,what bizzaroworld am I in here? the fuck is this syntax?
learnpython,3bxnww,tk425,0,Fri Jul 3 03:36:29 2015 UTC,"Type hinting, introduced in PEP484 (created on September 2014 and accepted)."
learnpython,3bxnww,FlockOnFire,3,Fri Jul 3 05:37:27 2015 UTC,"PEP484 only defined a set of semantics for function annotations, but the feature has existed long before that.  It's been available in every version of Python 3, from December 2008 on.  You can use any arbitrary Python expression to annotate any parameter or return type."
learnpython,3bxnww,Rhomboid,2,Fri Jul 3 06:36:39 2015 UTC,"Ah alright, thanks for the clarification."
learnpython,3bxnww,FlockOnFire,2,Fri Jul 3 08:17:34 2015 UTC,Oh. Got it to work. Thanks.
learnpython,3bxnww,deathofthevirgin,2,Fri Jul 3 01:02:47 2015 UTC,"Quick tip - You can do list slicing with strings (since they're just lists of characters). So, return month[:3] will get the first 3 letters :)"
learnpython,3bxnww,joyrida12,1 point,Fri Jul 3 08:05:30 2015 UTC,Random late reply to your suggesting but... Thank you kind sir/ma'am. Don't do much with in python but have a project in working on that this solves a problem I was having. My Google foo must suck lol
learnpython,3bxnww,raylu,1 point,Sun Jul 5 23:53:17 2015 UTC,"You don't need to take a string from stdin with input since months is passed to your function as an argument.  I'm not sure what resource you're using to learn python, but you should tell us which it is and consult it for how functions and arguments work."
learnpython,3bxme6,losdospedro,4,Fri Jul 3 00:13:45 2015 UTC,"calling iterable.sort() sorts the iterable in place and returns none.  try printing the_list and see what you see.  edit:  also if you use sets you can get rid of a bunch of your code, since sets automatically de-dupe."
learnpython,3bxme6,gengisteve,1 point,Fri Jul 3 00:21:17 2015 UTC,"Thanks! So, I'm reading the documentation and sorted() returns a modified string [edit: list], but as you have said, .sort() returns none. The doc says this is to avoid confusion, but I'm unclear on why."
learnpython,3bxme6,raylu,3,Fri Jul 3 00:32:18 2015 UTC,"If both sorted and list.sort returned the sorted list, you may forget which is in-place. Since there's no need to re-assign after an in-place sort, a = a.sort() is considered a mistake and gives you None, which alerts you to the issue."
learnpython,3bxme6,Justinsaccount,1 point,Fri Jul 3 00:45:00 2015 UTC,"Alright, that makes sense, thanks."
learnpython,3bxme6,raylu,3,Fri Jul 3 00:50:48 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3bw4j3,dli511,2,Thu Jul 2 17:12:25 2015 UTC,"Look for repeating elements. For instance, you call check_remainder(num, 3) twice in every loop. Also look for elements that are not variable. The first if, for instance, will ALWAYS be the last condition. Knowing that, you don't have to test for it.  for num in range(1, 100):     out = ''     if check_remainder(num, 3):         out += ""Fizz""     if check_remainder(num, 5):         out += ""Buzz""     print out print ""Victory"""
learnpython,3bw4j3,novel_yet_trivial,0,Thu Jul 2 17:21:42 2015 UTC,"Thanks, I never thought of leaving the victory statement outside the for loop or concatenating the string to check like that."
learnpython,3bw4j3,hw_t_dstr_ngls,2,Thu Jul 2 18:38:19 2015 UTC,"If you look around, you can find python one-liners for FizzBuzz that exploit the fact that you can ""multiply"" a string by a boolean. Something like:  for i in range(1, 101):     print 'Fizz' * (i % 3 == 0) + 'Buzz' * (i % 5 == 0) or i   And as a single line:  for i in range(1, 101): print 'Fizz'*(i%3==0) + 'Buzz'*(i%5==0) or i"
learnpython,3bw4j3,JustTurrble,2,Thu Jul 2 18:51:07 2015 UTC,"# Python 2: print ['Fizz' * (i % 3 == 0) + 'Buzz' * (i % 5 == 0) or i for i in range(1,101)] # Python 3: print(['Fizz' * (i % 3 == 0) + 'Buzz' * (i % 5 == 0) or i for i in range(1,101)])   :)"
learnpython,3bw4j3,hw_t_dstr_ngls,1 point,Thu Jul 2 21:08:08 2015 UTC,"The difference here is that my code (that starts with for i in range...) prints every element of the list on a new line (which is one of the criteria of the original FizzBuzz problem), while yours prints the whole list at once."
learnpython,3bw4j3,benlippincott,1 point,Thu Jul 2 22:20:25 2015 UTC,\n
learnpython,3bw4j3,hw_t_dstr_ngls,1 point,Fri Jul 3 00:40:12 2015 UTC,What about it?
learnpython,3bw4j3,The-Mathematician,2,Fri Jul 3 01:23:33 2015 UTC,"You could change to:  print('\n'.join('Fizz' * (i % 3 == 0) + 'Buzz' * (i % 5 == 0) or str(i) for i in range(1,101)))"
learnpython,3bw4j3,hw_t_dstr_ngls,1 point,Fri Jul 3 01:39:49 2015 UTC,"Sure, that works too. :)"
learnpython,3bw4j3,hw_t_dstr_ngls,-1,Fri Jul 3 01:55:12 2015 UTC,"Not looking for GOLF CODE, clean refactored code..."
learnpython,3bw4j3,thomascgalvin,3,Thu Jul 2 21:16:40 2015 UTC,"What do you mean by ""golf code""? The example I provided gives correct output, doesn't it? It's fairly easy to understand if you look at list comprehensions.  Yes, it may seem a bit ""hacky"", but it simply takes advantage of how Python works. Pretty sure this (or similar) approach is the only way to avoid elifs."
learnpython,3bw4j3,hw_t_dstr_ngls,5,Thu Jul 2 22:18:08 2015 UTC,"In real golf, you try to complete the course in the fewest strokes possible. In code golf, you try to solve a problem in the fewest characters possible."
learnpython,3bw4j3,thomascgalvin,1 point,Fri Jul 3 02:20:21 2015 UTC,"Well, it might look like it, but you don't necessary -have- to write it in one line. It can also be written as:  for i in range(1, 101):     outStr = ''     if i % 3 == 0: outStr += 'Fizz'     if i % 5 == 0: outStr += 'Buzz'     print outStr or i   The basic idea behind it is exactly the same. We start with empty string, add ""Fizz"" if i is divisible by 3, add ""Buzz"" if it's divisible by 5 and in the end it either contains ""Fizz""(and/or)""Buzz"" or is empty. So we print out or i and since an empty string evaluates to False, we get expected results. I'd call this pretty clean and well-refactored. And it does what OP wanted: refactoring elif-statements.  I think what throws some people off-guard with this approach is the way or operator works. It doesn't just return True or False, it returns the first element that evaluates to True (after type casting).  True or False  # True False or 'apple'  # 'apple' 'Hello!' or (33 / 3 == 11)  # 'Hello!' (33/3 == 11) or 'Hello!'  # True '' or 'non-empty string'  # 'non-empty string' 'f' in 'abcde' or [33, 12, 5]  # [33, 12, 5] etc..."
learnpython,3bw4j3,hw_t_dstr_ngls,1 point,Fri Jul 3 11:08:26 2015 UTC,I ... I know what FizzBuzz is. I was explaining code golf.
learnpython,3bw4j3,herminator,1 point,Fri Jul 3 21:52:51 2015 UTC,"Oh, I never questioned that :) This was aimed more at OP..."
learnpython,3bw4j3,novel_yet_trivial,1 point,Fri Jul 3 22:04:22 2015 UTC,"check_remainder is a bad function name. Rename it to something like divisible_by to make its purpose clear  Abstract away the fizzbuzz check into a function which returns the proper string, then reduce the code to one print statement. Like:  for num in range(1,100):     print(fizzbuzz(num))   To check if something is divisible by both 3 and 5, you can just check if it is divisible by 15.  if/elif/else is pythonic, python has no case/switch statement.  Python does have a ternary operator you could use, but nesting it four time will not make your code very readable. At best you'll get something like:  def fizzbuzz(num):     return('FizzBuzz' if num % 15 == 0       else 'Fizz'     if num % 3  == 0       else 'Buzz'     if num % 5  == 0       else num)   But that's quite unpythonic :)"
learnpython,3bw4j3,herminator,0,Thu Jul 2 17:37:18 2015 UTC,"Besides renaming the function, I did not find this of help in eliminating  ifelse statements. The other post was more of what I was looking for. Thanks though"
learnpython,3bwkul,MJMarto,1 point,Thu Jul 2 19:13:59 2015 UTC,str.translate only takes one argument. Check out the docs to see how it works. ;)
learnpython,3bwkul,FlockOnFire,1 point,Thu Jul 2 19:18:46 2015 UTC,So how come the first code block in my OP works with 2?
learnpython,3bwkul,FlockOnFire,1 point,Thu Jul 2 19:24:03 2015 UTC,"Ah, seems to be a matter of Python 2 versus 3.  I just assumed you were already using 3, because of your flair."
learnpython,3bwkul,04h,1 point,Thu Jul 2 19:59:10 2015 UTC,python 2/3 difference
learnpython,3bwkul,04h,1 point,Thu Jul 2 19:24:48 2015 UTC,"I see, thank you!   How would I make this work in Python3? Would I need to use maketrans first?"
learnpython,3bwkul,novel_yet_trivial,1 point,Thu Jul 2 19:26:39 2015 UTC,Yep
learnpython,3bwg0r,pok1natcha,2,Thu Jul 2 18:38:00 2015 UTC,"Step 1. Open your text editor and write some python code. Save the file. Step 2. Open your terminal and type ""python my_program_file.py"" Step 3. Congratulations, you have now done what the tutorials with online editors/interpreters do.  But in all seriousness, that's all there is to it.  In terms of your python environment, you should maybe look into virtual environments so that you can properly experiment with things without going too far down a rabbit whole that you can't get out.  I'd say things you'd want to understand regarding using python at the terminal is understanding a little about the python sys.path variable, a little about modules and packages, and maybe a little about writing command line scripts (so that you can pass some arguments into your program at the command line).  If you run into issues, google, stackoverflow, this subreddit are all your friends."
learnpython,3bwg0r,FoolofGod,1 point,Fri Jul 3 04:11:42 2015 UTC,"I've found so much great information from this subreddit, but I can't seem to find a beginner's tutorial for a python program that isn't ""hello world"" and isn't super advanced."
learnpython,3bwg0r,ripread,3,Thu Jul 2 18:39:39 2015 UTC,"I'd highly recommend the python challenge  FYI, to go to the first level (level 0) to the second level (level 1), use this URL:  http://www.pythonchallenge.com/pc/def/274877906944.html  I'm only saying this because I couldn't figure out how to get to the next level, not because I want you to skip level 0"
learnpython,3bx9fw,nitvit610,2,Thu Jul 2 22:23:31 2015 UTC,"Does not look like praw has any method for doing this, so you're gonna have to do it manually. Something like:  x = list(gen)  # Convert the generator object to a list y = sorted(x, key=lambda x: x.score)"
learnpython,3bv7mw,This_Is_The_End,3,Thu Jul 2 12:37:22 2015 UTC,Qt Quick Enterprise Controls should have everything you need.  Edit: available in the open source version since 5.5.
learnpython,3bv7mw,K900_,1 point,Thu Jul 2 16:35:41 2015 UTC,this ^
learnpython,3bv7mw,Mechkro,1 point,Thu Jul 2 16:57:59 2015 UTC,"Python might not be the right choice. It's extremely poor practice in Unix to provide a program's dependencies together with the program. You use a package manager for that. So if your clients are using Linux, provide a package that depends on PyQt5 (Qt4 is EOL).  If that's not possible... Create a Makefile that copies a version of PyQt5 into your program's dist folder. It's really fucking ugly, but that's the Windows way for you. Then once you have everything in your dist folder, find a way to package that up.  C++ is probably much better suited for this."
learnpython,3bv7mw,Rubykuby,1 point,Thu Jul 2 13:18:00 2015 UTC,"Sadly, I have to use Windows, which is fucking up Python on all aspects. I have a library for access of PLCs in Python which is working well and C++ is therefore not a solution. All is streamlined until I have to display something and the cause is windows.   I will try to write some widgets for QT in Python. Since the incoming data has an update rate of 1s, it should be no problem."
learnpython,3bv7mw,Route75,1 point,Thu Jul 2 13:57:09 2015 UTC,"When you say 'writing' widgets, are you literally typing up the code to build your UI template? Because if so, using the designer will make your life so much easier."
learnpython,3bv7mw,Rubykuby,1 point,Thu Jul 2 14:04:33 2015 UTC,no I need some gauges and a realtime plot
learnpython,3bv7mw,AlternativeHistorian,1 point,Thu Jul 2 14:26:11 2015 UTC,"Qt Quick might be able to do that. Qt5 is the only real option for Qt Quick, though.  But it takes a while to get used to Qt Quick, and I've found it a little limited, especially on the desktop.  edit: You can embed Qt Quick into regular widgets, though. That's kind of cool. The other way around is impossible."
learnpython,3bv7mw,fazzah,1 point,Thu Jul 2 14:35:57 2015 UTC,"It's extremely poor practice in Unix to provide a program's dependencies together with the program.    It really depends.   While that might be true for OSS applications or libraries, if you're selling closed-source commercial software on Linux or distributing it to non-technical users it's very common to bundle all dependencies with the application.   The application that I work on professionally does exactly this for a number of reasons. It's a native application that embeds a python interpreter and we also link against PyQt, Python, Qt, and about 20 or so other libraries which we distribute all as precompiled binaries local to the application distribution and only link against the system versions of common low-level libraries.   A few reasons why this scheme can be preferable:   If you allow the user to link in any version of any library against your application maintenance and support becomes much more difficult. If you can lock your application against specific versions of every library, testing, diagnosing issues, reproducing bugs, etc. becomes much more tractable. Many commercial applications also lock themselves to a supported set of Linux distributions for this reason. Yes I know there are other ways to do this, but distributing local copies of the libraries is dead simple, and has the least chance of impacting the rest of the system.  If you distribute on Windows as well the packaging between the two systems becomes more or less identical which reduces complexity. In mission-critical applications clients often value application stability over disk bloat or . System changes should not disrupt the correct functioning of your application. Ensuring that your application links against its own private instances of its dependencies is a good step towards achieving this. You have custom patches to libraries to fix bugs that are not part of the mainline release so you need to compile and distribute them yourself.  The libraries are not likely to be readily available through the user's package manager, or you need them compiled with special flags which are unlikely to be set in the version included from their package manager. There's really no conceptual difference between packaging dynamic libraries in a private distribution and statically linking those libraries. Except private local dynamic libraries have the added benefit that if your distribution consists of multiple executables they can all share the dynamic libraries.  Installation becomes painless as it can usually be accomplished by just unzipping a distribution to the desired installation directory   These are just a few of the valid cases off the top of my head.   While not packaging an application's dependencies may be the common (even preferred) case, I'm just saying it's not so cut and dry that you can make a statement like ""It's extremely poor practice in Unix to provide a program's dependencies together with the program."" It depends on your use-case, your goals, and what is important to your end users."
learnpython,3bx5jd,Velohcity,3,Thu Jul 2 21:52:50 2015 UTC,Post what you have and show us where you're stuck :)
learnpython,3bvp22,cabarkapa,2,Thu Jul 2 15:13:58 2015 UTC,"You ask a very general question, so we can only give very general answers. What you've read/watched are also very general answers.  If you have a question about a specific instance, it's much easier to offer specific advice. Watch the SQLAlchemy debug output and look for queries you don't expect to happen.  A better mantra is ""don't prematurely optimize"". You can always restructure your queries later - make your code work now and worry about performance after it becomes an issue."
learnpython,3bvp22,raylu,1 point,Fri Jul 3 00:37:35 2015 UTC,"I can't upvote you enough for agreeing w/ premature optimization. And sorry the question isn't more specific. Specifically, to what Bayer wrote, perhaps you can answer these?  a) ""However, the total number of rows fetched will be equal to the sum of the size of all the collections, plus one extra row for each parent object that has an empty collection.""  That's a result of the left outer join giving blank columns, correct? Which in subquery loading, that doesn't happen because it matches both sides, due to innerjoin?  b) ""If you know that each parent definitely has a child (i.e. the foreign key reference is NOT NULL), the joined load can be configured with innerjoin set to True, which is usually specified within the relationship(). For a load of objects where there are many possible target references which may have not been loaded already, joined loading with an INNER JOIN is extremely efficient.""  Meaning that use innerjoin in cases where they will always match, otherwise just let left outer join do it's job and return the 100 objects?  c) ""except perhaps that subquery loading can use an INNER JOIN in all cases whereas joined loading requires that the foreign key is NOT NULL.""  Probably the one that confuses me the most, didn't the previous paragraph say that joined loading works by returning all 100 rows, regardless of foreign key? Why NOT NULL?"
learnpython,3bvp22,raylu,2,Fri Jul 3 01:54:56 2015 UTC,"a) Yes.  b) Yes. I'm not exactly sure why the INNER JOIN would be more efficient. Perhaps the efficiency gain only applies when compared against having many of the joined objects loaded in the session already. In that case, a LEFT OUTER JOIN would have to do the same number of loads. Perhaps ""target references"" refers to things on the ""one"" side of the relationship and loading useless NULL rows in a LEFT OUTER JOIN is the inefficiency.  c) ""joined loading requires that the foreign key is NOT NULL [to use an INNER JOIN]."""
learnpython,3bw67w,loveandkindness,2,Thu Jul 2 17:25:32 2015 UTC,You can just type %reset
learnpython,3bw67w,XtremeGoose,1 point,Thu Jul 2 19:46:52 2015 UTC,thanks
learnpython,3bwx4b,Petealot,3,Thu Jul 2 20:45:18 2015 UTC,"change all your lines like this:  if player == ('Rock') or player == ('rock') and ai == 3:   to this:  if player.lower() == 'rock' and ai == 3: # or this if the input could be completely different: if player in ['rock', 'Rock']:   And what's with the parentheses around strings?  Alot of repetitious code:  if player == ('Rock') or player == ('rock') and ai == 3:     print('You win!')     winCounter += 1 elif player == ('Scissors') or player == ('scissors') and ai == 2:     print('You win!')     winCounter += 1 elif player == ('Paper') or player == ('paper') and ai == 1:     print('You win!')     winCounter += 1   becomes:  if (ai, player.lower()) in [(3, 'rock'), (2, 'scissors'), (1, 'paper')]:     print('You win!')     winCounter += 1"
learnpython,3bwx4b,jeans_and_a_t-shirt,1 point,Thu Jul 2 21:31:26 2015 UTC,"Thanks, I'd struggled with finding a good way to do that and had ended up just using an example from some forum."
learnpython,3bwx4b,gengisteve,2,Fri Jul 3 06:15:31 2015 UTC,"More functions!  Try and break your code up a bit.  With rock, paper, scissors, try and use a dictionary to pick the winner instead of all those if/else checks."
learnpython,3bwx4b,raylu,1 point,Thu Jul 2 21:00:03 2015 UTC,"Run pylint or similar on your code. Version control it (put it on GitHub). In fibonacci, defining the function inside the loop and running int inside that function is really odd. Advanced maneuver: write fib recursively and use memoization."
learnpython,3bwx4b,FlockOnFire,1 point,Thu Jul 2 20:52:08 2015 UTC,"Thanks, this will be very useful in the future, especially the pylint."
learnpython,3bwwpi,n8henrie,2,Thu Jul 2 20:42:09 2015 UTC,"You can use natural language processing to interpret the queries.   Or you can search the query for the object (e.g. lamp) and matching state (e.g. on).   The latter seems easier to me. If you find a question mark you don't change the state, but instead return the current.   You have to be careful with ambiguous queries though. Like would the lamp turn on if you send: ""The lamp fell on the floor"". (no idea why you would send that, but you get the idea)"
learnpython,3bwwpi,FlockOnFire,1 point,Thu Jul 2 21:03:36 2015 UTC,"I agree, the latter is easier for simple queries, but I'm wondering how best to handle 10+ objects, some with necessary adjectives, others with optional adjectives, most with synonyms and all with multiple actions.  For example, ""turn on the living room light"" -> switch1, ""turn on the light"" -> switch1, ""turn on the lamp"" -> switch1, ""turn on switch one"" -> switch1, ""please turn on switch 1"" -> switch1.  Repeat all of these for 9 more switches, and you end up with a lot of regex, which is why I'm considering a way to break it down into pattern."
learnpython,3bwwpi,maxibaby,1 point,Thu Jul 2 22:04:04 2015 UTC,"I think I would implement as this:  There are places and there are objects. Objects have properties : Actions and states Places have objects.  Firstly you clean up your input, and try to match a place. After you matched a place, match the object, son of that place.  To add ""Synonyms"" I think I would have a dictionary, that points for example,  lamp -> lamp light -> lamp switch -> lamp  And if no exact match was found for initial word: example ""Light"", try searching by his other meaning ""Lamp"" inside the room.  Dunno if this makes sense http://i.imgur.com/kerYq12.png  Would love to know about more suggestions!"
learnpython,3bwwpi,maxibaby,1 point,Thu Jul 2 22:19:35 2015 UTC,"This is something along the lines of what I was thinking. I started building up a little sqlite database that would accept a synonym and return a proper target, but I wan't sure how to deal with adjectives. While it would be a little redundant but easy to just put both in the lookup table (e.g. light and dining room light), I'm less sure how to identify / distinguish / match so many variations and recognize them as ""objects"" (e.g. light, living room light, dining room light, fan).  Perhaps it's finally time to start learning some NLTK."
learnpython,3bv95r,Elthran,9,Thu Jul 2 12:53:31 2015 UTC,"This advice will help you greatly in the future: learn how to title your questions properly. Just by posting here, everyone is assuming that a) you have a question, and b) it is related to python.  The fact that it's  going to be ""quick"" (which is arguable by sheer word count) doesn't imply what your question is specific to. You can imagine how much fun it would be to navigate a subreddit with no titles for any of the content and your post effectively has no title."
learnpython,3bv95r,czech1,3,Thu Jul 2 16:01:52 2015 UTC,"What you want is the powerset recipe from the Python itertools recipes documentation:  powerset([1,2,3]) --> () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)   So if you had the powerset function defined, you could just do:  import numpy as np  myfact = next(x for x in powerset(factors) if np.prod(x) == number)   This would get you the first sequence of factors that multiplies together to get you the target, starting with 1 number, then 2, then 3, and so on until something works.  If you want to limit it only to 3 numbers you can do:  import numpy as np  try:     myfact = next(x for x in powerset(factors) if len(x) <= 3 and np.prod(x) == number) except StopIteration:     myfact = 0"
learnpython,3bv95r,TheBlackCat13,2,Thu Jul 2 13:27:50 2015 UTC,"Have you looked into using itertools to generate the pairs and triplets? It might be easier if things are getting confusing with all the loops  For example   itertools.combinations([2,4,5], 2)   will give all pairs (2, 4) (2, 5) (4, 5)"
learnpython,3bv95r,duddles,1 point,Thu Jul 2 13:08:59 2015 UTC,THANK YOU
learnpython,3bwg6u,vo1dwalk3r,2,Thu Jul 2 18:39:17 2015 UTC,"if (odd and small) == ""true"":   This code does not do what you think it does. It needs to be:  if (odd == ""true"") and (small == ""true"")   See this FAQ"
learnpython,3bwg6u,novel_yet_trivial,1 point,Thu Jul 2 18:44:31 2015 UTC,"Ah, thank you. This is exactly what I wanted."
learnpython,3bwg6u,kalgynirae,1 point,Thu Jul 2 19:23:14 2015 UTC,"There are several things combining to produce the results you're seeing.   You're using strings instead of the booleans True and False. Any non-empty string is considered ""truthy"", so ""false"" and ""true"" is true because both operands are non-empty strings, as opposed to False and True which would be false. The and operator actually returns one of its operands rather than returning a boolean as you might expect. It returns whichever operand decides the outcome. For example, if the first operand is false, then it is returned (because the first operand determined that the whole expression will be false). But if the first operand is true, then the second operand will be returned.   If you were using the actual boolean values True and False instead of strings, you would get the results you are expecting."
learnpython,3bwg6u,novel_yet_trivial,1 point,Thu Jul 2 18:49:49 2015 UTC,"This is a very good point. Try this in the interpreter to see it in action:  >>> ""true"" and ""false"" 'false' >>> ""false"" and ""true"" 'true' >>> ""any non-empty string"" and ""string that gets returned"" 'string that gets returned' >>> True and False False >>> False and True False   As a nitpicky point, ""false"" and ""true"" is true because the first operand is a non-empty string."
learnpython,3bwg6u,Justinsaccount,1 point,Thu Jul 2 18:55:52 2015 UTC,"""false"" and ""true"" is true because both strings are non-empty,not the first one"
learnpython,3bwg6u,novel_yet_trivial,1 point,Thu Jul 2 19:15:20 2015 UTC,"I think we agree, but the misunderstanding is that both of us are using true, which is not valid python.  ""false"" and ""true"" returns ""true"" (a string) because the first operand is a non-empty string.  bool(""false"" and ""true"") returns True (a boolean) because both operands are non-empty strings. Therefore ""false"" and ""true"" is truthy."
learnpython,3bwg6u,hw_t_dstr_ngls,1 point,Thu Jul 2 20:00:02 2015 UTC,"Furthermore, if you need to check if a boolean variable is True or False, you don't need to compare them using ==.  if odd and small:   ...is sufficient."
learnpython,3bwg6u,TheBlackCat13,1 point,Thu Jul 2 19:05:05 2015 UTC,"Okay, thanks for the help."
learnpython,3bwae4,Aiph,2,Thu Jul 2 17:57:15 2015 UTC,"Here's a one-liner for you to try and break down:  print sum([int(digit) for digit in raw_input('Enter a 4 digit number: ')])   Some issues in your code:   the num%1 and similar lines don't actually do anything. You need to set something to this num = num // some_number is better written num //= some_number the 'dig' variables aren't define.  the line dig1+dig10... doesn't do anything. You need to set something to this to store it in memory.    Here's what I suspect you're trying to accomplish (this is not the best implementation, but emulates your process):  num = raw_input('Enter a 4 digit number: ')  # get user input  # capture and convert each digit to integer dig1 = int(num[0])  dig10 = int(num[1]) dig100 = int(num[2]) dig1000 = int(num[3])  result = dig1 + dig10 + dig100 + dig1000  # store the result in a variable print result  # print result"
learnpython,3bwae4,uhkhu,1 point,Thu Jul 2 18:58:58 2015 UTC,"I think, he is using python3. Your one liner don't work in my cmd. @OP: Make instead:  num = input('Enter a 4 digit number: ') print(sum([int(digit) for digit in num]))"
learnpython,3bwae4,BOTzzz,1 point,Thu Jul 2 22:37:12 2015 UTC,print(sum([int(digit) for digit in input('Enter a 4 digit number: ')]))   should work for Pyhton 3
learnpython,3bwae4,uhkhu,1 point,Thu Jul 2 22:41:34 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using eval + input like so:  var = eval(input(""...""))   This should be avoided.  Instead, the desired conversion should be performed explicitly, like so:  var = int(input(""..."")) var = float(input(""...""))"
learnpython,3bu8hh,audtherat,6,Thu Jul 2 04:55:28 2015 UTC,"okay wow i found solution:      def loop():     s = 0     l = [1,2,3,4,5]      for i in (l):             s = s + i     print (s)   i was printing inside the for loop instead of outside of it. i guess whitespace is vitally important :p"
learnpython,3bu8hh,DarkMio,2,Thu Jul 2 05:03:09 2015 UTC,"And now in the smallest nominator:  y = 0 for x in range(6):     y += x print(y)   Or, as someone above pointed out:  print(sum(range(6)))"
learnpython,3bu8hh,TheBlackCat13,3,Thu Jul 2 06:47:03 2015 UTC,Or  just sum(l).
learnpython,3bu8hh,DarkMio,1 point,Thu Jul 2 09:31:06 2015 UTC,"Oh right, totally forgot that."
learnpython,3bu8hh,The_Drosophilist,1 point,Thu Jul 2 09:48:45 2015 UTC,Just a side note:  you can write:  s = s + i   like this in python:  s += i   It evaluates as the value of s + i.
learnpython,3bu8hh,Psy-Kosh,1 point,Thu Jul 2 12:23:02 2015 UTC,"Oh, minor note:  you don't need l in parenthesis in the for loop.  for i in l:   would work just as well as  for i in (l):"
learnpython,3bu8hh,chesszz,0,Thu Jul 2 15:48:47 2015 UTC,Just use  print sum(l)
learnpython,3bvy4i,Hypogeum,7,Thu Jul 2 16:22:52 2015 UTC,"A string literal is a string that you write in your source code.  foo = 'some string'   'some string' is a string literal.  Inside string literals, the backslash character is a meta-character.  That means that using a backslash in a string literal does not give you the actual backslash character.  For example, \n in a string literal is the newline character, not the two characters \ and n.  The same thing applies to the tab character (\t), backspace (\b), carriage return (\r) and so on.  If you want an actual backslash in a string literal, you need to write \\.  Similarly, the backslash is a meta-character in regular expressions.  \d matches a digit character, \s matches whitespace, and so on.  If you want to match a literal backslash character in a regular expression, you need to use \\.  These two things are completely separate.  They only come together because usually you specify a regular expression using a string literal.  \\\\d in a string literal is really the string \\d.  And the string \\d interpreted as a regex is a regex that will match the two characters backslash-d, rather than any digit character.  Fortunately, Python has a special kind of string literal called a raw string literal in which backslashes are not meta-characters.  This simplifies things so that you only need one layer of quoting.  >>> print('\\x') \x >>> print(r'\x') \x   So if you wanted to write a regular expression that matches \section, you could write either  m = re.match(r'\\section', text)   or  m = re.match('\\\\section', text)   These are exactly equivalent."
learnpython,3bvy4i,Rhomboid,1 point,Thu Jul 2 16:33:34 2015 UTC,"Some characters in RE are special characters; a . for instance does not match an actual period, but any character. A string literal means you want to literally match a period. In this case the special character you are trying to match is \, a single backslash. You need to escape it once for RE (\\), and then again for python (\\\\). This is confusing, so I would not do that.   Python allows you to enter ""raw"" strings that do not need to be escaped. So you can get the same end result like this:  >>> r'\\section' '\\\\section'   re includes a method to escape strings. Combined with python raw strings, you can type exactly what you want and the backslashes are added in the background:  >>> re.escape(r'\section') '\\\\section'   Of course it's good to know whats going on, even if you don't use it."
learnpython,3buyxr,OptioMkIX,2,Thu Jul 2 10:52:13 2015 UTC,"When you do this line:      for [i, j] in np.argwhere(np.isnan(initial_x_coords)):   You are setting i and j to coordinates where the conditions are met:  >>> y = [[np.log(-1.),1.,np.log(0)],[np.log(-1.),1.,np.log(0)]] >>> for [i,j] in np.argwhere(np.isnan(y)):     print(i,j)   0 0 1 0   So when you address things as i +/- 1 you will find yourself looking at indexes below 0 (which is probably not what you want) and over the size of the array (which is generating the error you are seeing)."
learnpython,3buyxr,gengisteve,0,Thu Jul 2 13:29:10 2015 UTC,"I understand that, but like I said as far as I can tell with the constraints I've placed dont allow the indexing to go out of bounds of the range of the array in either i or j for the last (and longest) calculation.  If its set to iterate over indexes 1-3 in i(rows) and 0-4 in j (columns) then at no point does it exceed 4 in j as all the j terms are -1; and at no point does it exceed 4 in i as there are no i+2 terms.  For negative indices, again, the terms are i-1 and j-1 in varying combinations - because of the indexing limits are 1-3 in i and 0-4 in j, the limits of the array are not exceeded in i. They could be in j (if j = 0 then obvious j-1 goes out of the array)- but because the first column is prescribed elsewhere it skips this problematic index.  So with the apparent problematic index skipped, and with the first column & top and bottom rows of the array already accounted for in the function, I dont understand why this function shudders to a halt when it doesnt try to call an index outside the limits of the array or range."
learnpython,3buyxr,gengisteve,3,Thu Jul 2 14:08:04 2015 UTC,"I understand that, but like I said as far as I can tell with the constraints I've placed dont allow the indexing to go out of bounds of the range of the array in either i or j for the last (and longest) calculation.   the thing is that your loops do not set constraints because you are resetting the values of i and j in the loops, so in this bit:  for j in range(mesh_size-1):     for i in range(mesh_size-1):         for [i, j] in np.argwhere(np.isnan(initial_x_coords)):                 initial_x_coords[0,j] = (initial_y_coords[1,j-1]+(initial_x_coords[1,j-1]*ini_dist_pos[0,j-1]))/ini_dist_pos[0,j-1]   you are just looping j*i times over the np.argwhere loop.  The actual i,j values that you then set in the penultimate line above are the ones that are derived from np.argwhere and used to set the initial_x_coords.  I.e. your code is the same as this:  for not_used in range(mesh_size-1):     for not_used in range(mesh_size-1):         for [i, j] in np.argwhere(np.isnan(initial_x_coords)):                 initial_x_coords[0,j] = (initial_y_coords[1,j-1]+(initial_x_coords[1,j-1]*ini_dist_pos[0,j-1]))/ini_dist_pos[0,j-1]   So the error you see happens because np.argwhere finds nans at the boundaries."
learnpython,3buyxr,gengisteve,1 point,Thu Jul 2 14:21:27 2015 UTC,"Ok, that makes both a certain amount of sense and is also confusing at the same time.   I've previously used this kind of scheme to iteratively fill an array in a similar manner in the same script, so I dont know why it works in that previous array and not for this one. Also, at the moment for some reason it calculates the first two columns fine and then stops.  How would I go about modifying the function to overcome this? Modifying the expression to calculate upper and lower boundaries to:  for j in range(mesh_size-1):    for [i, j] in np.argwhere(np.isnan(initial_x_coords)):        x_coords[0,j] = (initial_y_coords[1,j-1]+(initial_x_coords[1,j-1]*ini_dist_pos[0,j-1]))/ini_dist_pos[0,j-1]        x_coords[-1,j] = (-initial_y_coords[i-1,j-1]+(initial_x_coords[i-1,j-1]*ini_dist_neg[i-1,j-1]))/ini_dist_neg[i-1,j-1]"
learnpython,3buyxr,gengisteve,1 point,Thu Jul 2 15:19:20 2015 UTC,The reason it might have worked before is that you did not have any NaN's on the boundaries.  What exactly are you trying to do?
learnpython,3bsr9t,Neds_Severed_Head,27,Wed Jul 1 21:10:31 2015 UTC,"The magic is that the or operator returns the first thing that evaluates to true, so to explain:  1st line: parsed as (1 == 1) or 2. The next step of evaluation is True or 2 and this evaluates to True, due to the behavior of or.  2nd line: Again, parsed as (1 == 2) or 1 but then evaluated to False or 1 and finally 1, since 1 is the first ""truthy"" value  3rd line: (1 or 2) evaluates to 1 and the whole expression to 1 == 1 and thus to True  4th line: (2 or 1) evaluates to 2 and the whole expression to 1 == 2 and thus False"
learnpython,3bsr9t,Dunj3,6,Wed Jul 1 21:42:06 2015 UTC,"That's a great explanation, thanks :)"
learnpython,3bsr9t,deathofthevirgin,6,Wed Jul 1 21:47:18 2015 UTC,"Well, kind of. the or operator returns the first thing that, when cast to a boolean, evaluates to true. In other words, the first ""truthy"" value as in, 1, ""hello"", and [6, 1, 2] are truthy (in Python), but None, False, and [] are falsy.  This is useful in many cases, for example:  items = ... if items:     print(""You have at least one item!"")   The alternative to if items: is if len(items) > 0, but the first is more Pythonic - and more readable (to someone familiar with Python).  One cool thing is that since or returns the first truthy value, it won't even evaluate the rest. At all. So whereas 1/0 or ""hi"" throws a ZeroDivisionError,  ""hi"" or 1/0 returns ""hi"".  Here's a scenario in which you might want to use that fact (called shortcircuiting). Let's say you want to print out every item in a list such that item after that element is even, or it's the last element. So for  [1, 2, 3, 4, 5, 6, 7, 8], you would print out 1, 3, 5, 7, 8. You could do it like this:  def is_even(n):   return n % 2 == 0  items = [1, 2, 3, 4, 5, 6, 7, 8] for index, item in enumerate(items):     is_last_element = index == len(items) - 1     if is_last_element or is_even(items[index + 1])        print(item)   enumerate just gives a tuple of the element's index and the element itself cleanly. Imagine there was no shortcircuiting. Then, whenever you get to the end, the if statement will try to evaluate items[index + 1] and throw an IndexError. But because of how the order of the statements here, if we're at the last element, it skips the rest and prints the item."
learnpython,3bsr9t,callmelucky,1 point,Thu Jul 2 06:03:58 2015 UTC,"No offense, but I don't see anything in there which contradicts or better clarifies what /u/Dunj3 wrote. Am I missing something?"
learnpython,3bsr9t,deathofthevirgin,3,Thu Jul 2 06:40:28 2015 UTC,"evaluates to true   It's a small thing, but the True/truthy difference is important."
learnpython,3bsr9t,XtremeGoose,1 point,Thu Jul 2 06:45:09 2015 UTC,Is if items more pythonic than if len(items) > 0. Not sure I would agree with that. The latter is more readable and it wouldn't be an unreasonable mistake to expect bool(['']) to be False.
learnpython,3bsr9t,deathofthevirgin,1 point,Thu Jul 2 09:32:56 2015 UTC,"I'm not a Python expert but I've seen if items: in most places over the other one. There  aren't too many values that are falsy - [], (), False, """", 0 are the big ones. You're right though, someone from JavaScript might be confused, but it comes with the language I think."
learnpython,3bsr9t,This_Is_The_End,4,Thu Jul 2 17:29:58 2015 UTC,"The ""and"" operator has a similar implementation and stops at the first false."
learnpython,3bsr9t,py_student,1 point,Thu Jul 2 07:37:08 2015 UTC,"Learning to get or statements right is one thing. And it takes a little practice to start seeing things correctly.    But there is another thing here. As a choice, in the language design, there was a decision to allow the int 1 to substitute for True and 0 to substitute for False. Notice in the code below that this is separate from, even though coincident with, their boolean values.   This is a good idea, but purely arbitrary, I think, like letting the addition operator also perform concatenation of strings.     >>> 1 == True True >>> 2 == True False >>> bool(1)  True >>> bool(2) True >>> int(True) 1 >>> int(False) 0 >>> True * 3 3 >>> True + 3 4 >>>    So to restate that, all numbers except 0 evaluate to the boolean True, but True also has the property of substituting for 1. And False for 0.    If you asked the instructors why they would spring this on students with no programming background with no explanation, I have little doubt they would say something like ""all they have to do is look in the docs."""
learnpython,3bv395,smakururu,7,Thu Jul 2 11:50:44 2015 UTC,https://docs.python.org/3/reference/datamodel.html#object.__str__
learnpython,3bv395,davidbuxton,3,Thu Jul 2 12:31:57 2015 UTC,"/u/davidbuxton is spot on. When you print a class object, it will search for that object's __repr__ or __str__ (if it can't find __repr__) method.  Use one of these methods to format and return the output you want. You've done a great job setting up a method that works, just rename it."
learnpython,3bv395,swingking8,3,Thu Jul 2 12:53:06 2015 UTC,"Well his method won't work exactly. There's nothing named warrior in the context of that method and rage() doesn't return anything, it only assigns a value to the attack_limit instance variable.  As this looks like a homework exercise, I'll leave it to /u/smakururu to solve it or come back to us with more info. :)"
learnpython,3bv395,FlockOnFire,1 point,Thu Jul 2 14:57:47 2015 UTC,I can't tell the formatting exactly (on mobile) but it looks like rage should be returning a value and not just setting it.
learnpython,3bqnef,freakzilla149,12,Wed Jul 1 10:50:06 2015 UTC,"Same thing happens to me. I never had to think so abstract as I need to now. I am a beginner coder and sometimes my mind is so foggy that i need to use python tutor. I think that as coding becomes ubiquitous (from simple to complex scripts/programs), your mind will start to adapt and it will become second nature. Some people take more time than others. My ADD does not help analyze different pieces of code at once, but i am improving."
learnpython,3bqnef,montecarlo1,2,Wed Jul 1 10:56:10 2015 UTC,"I too am rather new to the concepts of code. Been doing python for about a year now. I find that simply running through techniques helps solidify the building blocks of code a lot.  Example: Sometimes I'll pop open my editor and just start tinkering with loops, functions, new ways to use data structures, etc, etc. Make a program that simply prints the string ""Dickbutt"" but run that string though some manipulation functions. See what comes out the other end and then modify.  I usually create a file called scratch_paper.py and just start filling it up with different stuff. Practice makes perfect and with code, it is most certainly true."
learnpython,3bqnef,24cal,10,Wed Jul 1 17:14:05 2015 UTC,"It's a matter of experience. I can read Python code fast. Now that I'm working with C the whole day, I can read C code extremely fast. On the other hand, when I try to read Rust code -- which I'm trying to learn -- it's painfully slow.  Python has a great ""feature"" that most of us adhere to PEP8. This means we write code in a similar fashion so once you get used to it, you'll read things faster and things will ""click"" faster.  Another suggestion I can give is reading ""Code Clean"" by Robert C Martin. It will give you some hints on how to write code that it is easier to read (although I'd recommend reading when you're used to code, otherwise things may not make much sense at first.)"
learnpython,3bqnef,juliob,3,Wed Jul 1 11:04:03 2015 UTC,"It's a matter of experience. I can read Python code fast... On the other hand, when I try to read Rust code -- which I'm trying to learn -- it's painfully slow.   Same happens to me, except it's C# instead of Rust. More specifically, the slowness happens when I have to follow fairly nested loops. It helps me to see, especially in languages like Python, to use print() statements so you can follow what happens.  (This is usually how the folks in the Python Tutor mailing list explain how recursion works. Printing the values really does help.)"
learnpython,3bqnef,isxek,4,Wed Jul 1 11:46:03 2015 UTC,"Yes! I use print statements A LOT, and they're very helpful.   Sounds retarded, but even then I feel slow. I take ages to decide where the print statement should be, whether I'm even printing the right thing, if the output is not what I expected I very slowly work out what my next step should be.  I suppose I will get better though, just wish it would happen soon."
learnpython,3bqnef,isxek,5,Wed Jul 1 12:09:27 2015 UTC,"I suppose I will get better though, just wish it would happen soon.   You and me both."
learnpython,3bqnef,v3nturetheworld,1 point,Wed Jul 1 12:13:52 2015 UTC,"Print statements are the way to go! I mean there's other ways but those are boring when you can add funny comments to what you want printed. My strategy for seeing if things work is making sure you first know what you want output, come up with some base case or simple example you know should be returned. If your high level test of the function fails, throw some print statements all over the place in your functions, but you have to know what the output should be to check it.  Another tip. If it takes you a while to figure out what to do next, come up with an outline at the start. Write on a whiteboard or paper what you want each function to do in simple psuedo-code (or more detailed if you wish, it'll speed up the programming part). This way you don't waste time on trying to figure out whats next, and can write the whole function at once then test.   Finally, practice will eventually cause you to speed up. When you program enough stuff, solve various problems, you start seeing similarities. In an interview, given some challenge, you can solve it faster if you have more coding under your belt because you can think ""Oh, I did x when I was programming y, this is pretty similar! I'll try solving it that way!""."
learnpython,3bqnef,nevus_bock,2,Thu Jul 2 02:29:09 2015 UTC,"I do follow PEP8, although my course doesn't for some reason. Python is the only language I'm really familiar with, I feel comfortable with it so far.   If I read a single line I know exactly what the line is doing. E.g. The first line of my simple recursive function is the base case, the last line is calling the function itself with an argument that is slightly closer to the base case to return to the function that called it etc etc.   When taking the thing as a whole, or ""paying computer"" it takes an eternity to say ""Ok, I know what the output of that function should be.""  It sort of feels independent of the language, like... I know 2 + 2 = 4 but I need to slowly, manually take two pebbles, and then two more pebbles, count them one by one and only then I'm sure of my answer."
learnpython,3bqnef,juliob,1 point,Wed Jul 1 11:59:12 2015 UTC,"Regarding PEP 8, not everything that's PEP 8 compliant is pythonic and/or a good idea. There must be a better way :)"
learnpython,3bqnef,Hari___Seldon,1 point,Thu Jul 2 14:15:21 2015 UTC,"Yup. I watched that presentation a few days ago and it's freaking awesome.  Thing is, PEP8 is not silver-bullet and doesn't make things pythonic by just following it. But it does create a standard way of coding that everybody follows, which makes the learning curve to understand what the other person is trying to say a lot easier."
learnpython,3bqnef,agamnon,4,Thu Jul 2 14:30:09 2015 UTC,"Guys, I think this is what I really meant in my long ass post: holding a program in one's head.  I just can't hold my own program in my head well enough to really think about it properly. I always have to write everything down."
learnpython,3bqnef,Hari___Seldon,3,Wed Jul 1 12:22:39 2015 UTC,"As a cognitive science guy who does a lot of programming, I can tell you definitively that this is a good thing. Many people are under the mistaken impression that being able to do such things in one's head is a form of mastery.   When you are learning, it is actually counterproductive. You will develop better retention by engaging more of your senses and relying less keeping it in your head as you learn. When you right things down, you end up engaging visual, kinesthetic/motor,  and auditory regions in your brain. This makes long term retention easier and more complete. Furthermore, by not having to spend energy on trying to keep it all in short term memory, you are freed up to examine your program more effectively at an abstract level.  Peronsally, I'd suggest seeing this as a good habit to develop. You'll learn to retain more structure in your head (in the sense that Paul Graham describes in your link) more quickly if you keep following your current method."
learnpython,3bqnef,Hari___Seldon,1 point,Wed Jul 1 15:00:26 2015 UTC,yes but being able to hold complex ideas in your mind does mean you have a high working memory and that is the major difference between prodigies and everyone else
learnpython,3bqnef,DoTheEvolution,3,Wed Jul 1 20:48:41 2015 UTC,"The point of my comment was just that the cart might be before the horse a bit. Lots of people learning new content try to learn it as if they already had basic mastery of it.   The cognitive science part of what I've done for twenty five years has focused on teaching peak performance and learning skills to people in high stakes professions. In the process, I've found consistently that the ones who do what you're describing, taking just a bit of extra time to write their work down initially and explore it fully when they are starting out, ultimately end up with huge payoffs by the end of the process.   Like anything else, it's a matter of practice. If you're into sports of any sort, perhaps think of each application as a new event where you'll be competing. Before each new opponent or venue, successful competitors adjust their training for the specifics for the challenge. Using your process does the same. It doesn't have to take a ton of time to be effective thankfully.  If you're more of a gamer, think of it like running the stages of a new game. Writing things down and dealing with it on paper is the same as the process of taking a run at each new stage or level of a game. Sometimes you'll nail it on the first pass, but usually you'll attempt it several times before you get through completely. If you hit a bottleneck, hitting the manuals or hitting the game guide becomes a lot easier when you can hit pause, which is what your approach allows. Good luck!"
learnpython,3bqnef,Doxin,1 point,Wed Jul 1 21:57:15 2015 UTC,"And as for how a prodigy would do it, that's a good comparison if one is a prodigy looking to find out how prodigies can learn best. Outside of that circumstance, trying to start out like a prodigy would is more like putting a new driver in place of a race car driver. They'll probably get somewhere if they have the basics down, but it usually won't be very far or stress-free lol"
learnpython,3bqnef,road_laya,1 point,Wed Jul 1 22:00:16 2015 UTC,"I lose track of variable values etc. It takes me ages just to convert a problem into a plan with all the expected inputs, outputs etc.   Somewhere here on reddit I read good description of programming, or advice or whatever it was... paraphrasing:   You have a problem, specific thing you are trying to do. You separate it in to few steps, what steps you need to make to get it done. Then you separate those steps in to smaller steps... and more...  until you are get to a steps so small that you can do it.   Reading that stuff about holding it all in ones head... well I thought you are a beginner, that stuff reads like for 9-5 codemonkeys that been doing it for years..."
learnpython,3bqnef,Raannndy,1 point,Wed Jul 1 21:30:57 2015 UTC,"I just can't hold my own program in my head   no one can. this is why you split a program into functions and modules. it means you can ignore most of the stuff you're not directly touching that moment. if you have a function called frobnize_widgets you can stop caring about how it frobnizes widgets and just know that it will frobnize widgets when called.  the trick is to ignore as much as you possibly can, instead of trying to grasp all of it at the same time. the skill of ignoring unimportant information is probably more important than the skill of remembering important information.  don't worry too much about feeling like an utter retard when programming right now, everyone has that when they first start programming. you'll get better at it, I promise."
learnpython,3bqnef,CD_reflected_rainbow,3,Thu Jul 2 00:59:15 2015 UTC,"There's a saying in programming, that ""every problem can be solved by adding another layer of abstraction"". Maybe you could benefit from making flow-charts? Or maybe try to replace each line with a human-readable sentence? One of the tutors in my college said that ""I can tell this is a student project, because it has more comments than code"". Comments like ""increase variable a by five"" are not so useful, but if that is what you need to quickly parse the code, do it. But abstract, higher-level descriptions are usually better. Example: ""Switch to the next five objects to process"".  Maybe you could try to split that function with a couple dozen lines into blocks of 3-5 lines? Add a comment line above each block, as a summary of what it does. When writing code, these blocks can be turned into functions (subprocesses) for increasing the readability.  Example:  while exists_data_to_process():     data = fetch_data()     output = process(data)     write_output(output)   That way you have taken a bigger task and divided it into smaller tasks. Now you only have to write those subprocesses, one by one."
learnpython,3bqnef,LawofRa,3,Wed Jul 1 12:27:17 2015 UTC,"So going through 4 years of a CS degree, I would say the first year or two I felt like you do: very slow, constantly thinking through each algorithm, etc... Year three I started to write faster and by year four (lets be honest, it was 5!) I was able to just sit down and start banging out code.   So your path to learning python is going to be a lot like that. Probably not as slow, since I had everything else thrown in there, but the general concept is the same. You'll get faster the more you work at it. You'll stop wondering what data structure to use and eventually just know what you want to do. Just takes practice."
learnpython,3bqnef,jburb,3,Wed Jul 1 13:03:45 2015 UTC,"(lets be honest, it was 5!)    120?"
learnpython,3bqnef,depakoitvs,6,Wed Jul 1 16:13:07 2015 UTC,This may be way off subject but have you ever meditated? Meditation can increase IQ by 20 points. It also calms the white noise our brain goes through and stops wasting energy on fleeting moment to moment thought by directing the brains attention to a single focus concentration. Many people have reported their grades going up due to meditation. There is a lot of science behind meditation now.  I would check out /r/meditation for techniques and current research in the field. Meditation may give you the boost you need.
learnpython,3bqnef,dat_ninja,4,Wed Jul 1 11:24:56 2015 UTC,"In all seriousness though, it can really improve your concentration, and once that happens you will likely realize that much of what is considered intelligence is underpinned by, or even equivalent to the ability to pay attention.  By extension your memory will probably seem to improve as well, even if it is just a perception stemming from less distracted thinking. That can help complex tasks like coding considerably!"
learnpython,3bqnef,jburb,2,Wed Jul 1 12:07:47 2015 UTC,"Teach me? I only follow this sub because it is interesting, but I don't even try to learn programming again. I try to study mathematics (my major), but it is exactly like this. Foggy. I can't retain information. I can't pay attention. So I frustrate myself, and usually, to avoid frustration, I avoid everything else."
learnpython,3bqnef,depakoitvs,2,Wed Jul 1 15:14:14 2015 UTC,"Try this: http://www.samharris.org/blog/item/mindfulness-meditation/  It helps you focus your ability to recognize distractions, acknowledge them, and move on without allowing them to become disruptive."
learnpython,3bqnef,symmitchry,2,Wed Jul 1 17:11:36 2015 UTC,"I don't know that I'm qualified to teach, but I could point you to some resources and tell you what it was like for me back when I was doing it consistently"
learnpython,3bqnef,ksantr,1 point,Thu Jul 2 07:16:21 2015 UTC,Should I pm you?
learnpython,3bqnef,jburb,5,Thu Jul 2 23:45:46 2015 UTC,"Interesting comment. I often think that my ability to concentrate and think has been greatly, greatly reduced... is that old age? Being out of school? Or just this inundation of non-stop internet and fleeting thoughts? All three?  I definitely need to start meditating though..."
learnpython,3bqnef,swingking8,1 point,Wed Jul 1 12:26:45 2015 UTC,"Your age is no matter, but be aware, active, forced meditation for 3+ days can reduce speed and activity of your brain for short time."
learnpython,3bqnef,El_Glenn,1 point,Wed Jul 1 23:48:31 2015 UTC,"This. I used to meditate on the regular. I can't vouch for IQ, but I'm sure I'm 20 points less attentive than ooo wtf is that outside?"
learnpython,3bqnef,mcowger,1 point,Wed Jul 1 12:04:21 2015 UTC,"It's been my experience that intelligence is really just the ability to make a lot of good small decisions, instead of the good large decisions we perceive it to be.  Keep doing what you're doing, and you'll be fine."
learnpython,3bqnef,Technonick,1 point,Wed Jul 1 14:34:36 2015 UTC,Were you fast the first time you spoke English? Were you fast the first time you thought about chemistry????  EFFORT. Stick to it and focus on getting better.
learnpython,3bqnef,not_perfect_yet,1 point,Wed Jul 1 15:45:48 2015 UTC,"Of course not. That isn't what I mean. I've struggled with complex problems that took crazy number of hours to solve, I can live with that.  What I mean is that if your 25 year old friend had to pause before answering 2+2 = 4 you'd be concerned. I feel like that, as a noob programmer the things I have to do are barely a dozen lines most of the time. I should be able to do them a lot faster.  When I'm asked to write a path-complete set of inputs for a simple function that calculates the max of three integers I should really be able to do that without a huge amount of note taking."
learnpython,3bqnef,nsharms,1 point,Wed Jul 1 16:02:33 2015 UTC,How long have you been learning?  if less than ~2 years - you seem right on track :)
learnpython,3bqnef,sound_puppy,1 point,Wed Jul 1 16:24:25 2015 UTC,I would agree with the meditation comment. Another techniques that I use are:   Take two fish oil pills once per day. I find that it improves my brain's ability to make fast associations better. If I had to use the computer metaphor it would be like improving bus-speed. Cardio type Exercise. A good 15-30 minute run per day keeps my mental facilities fresh. A complete change of environment. Putting myself outside my comfort zone in a new environment often stimulate ideas and helps push my brain into a different way of thinking.
learnpython,3bqnef,3lephant3ars,1 point,Wed Jul 1 17:31:14 2015 UTC,"Do not worry. This is normal. Logical thinking takes lots of practice and is difficult to get into if you're not used to it.  I'm not sure Python Tutor is a big help if you're confused by your own code. I just tried it and it's not really showing how I think of my code so idk.  Anyway back to the point:  You are at a very nice point to appreciate commenting, reusabillity and splitting your code up into segments. Which is very very good, because nobody can read code that is badly commented or badly named or too long. You might be worse than others (which I don't think) but everyone has a limit.  So comment, give meaningful names to your variables and functions and split it up every time you can.  like this:  loopcounter=0 loopmaximum=10  while loopcounter < loopmaximum:     print(loopcounter)     square_of_loopcounter = loopcounter**2     print(square_of_loopcounter)     loopcounter += 1 #this increases the loopcounter by one   instead of  c=0 l=10 while c < 0:     print(c)     b=c**2     print(b)     c+=1   if all you want this code to do is do exactly this and nothing else name it ""myloopingfunction"" and define it as a function.  If you're having trouble understanding your own code, write your code so explicitly that you can almost read it like sentences. (and fill in the gaps with comments where you can't read them as sentences straight away)"
learnpython,3bqnef,PrometheanVR,1 point,Wed Jul 1 19:44:21 2015 UTC,"Hey there! Kinda understand what you mean, I feel I labour over stuff more than I should but I'm pretty comfortable with this myself. Only been learning python for a few months.   One thing that really helped me recently is a a serious of videos by a guy called Simon Allardice. He speaks really well, concisely, and always has a point.  He has a great set of videos on Linda.com called foundations of programming. Whilst you probably know most (if not all) of what he talks about, his approach... I don't know, the content really helped me, certainly but when he speaks about abstraction, work flows and other things none code specific it kinda changed the way I think about things.   Definitely worth checking out. There's probably more advanced content that'd be a greater help to you but it's worth a go I think."
learnpython,3buhu7,iiNovaR,1 point,Thu Jul 2 06:45:44 2015 UTC,"Have you tried the following:  sort = sorted(tuples) sort = sorted(tuples, reversed=True)   An example in the python shell:  >>> tuples = (""Name"", ""Score1"", ""Score2"") >>> print(sorted(tuples)) ['Name', 'Score1', 'Score2'] >>> print(sorted(tuples, reverse=True)) ['Score2', 'Score1', 'Name']   In general, are you aware that tupled are immutable (good to prevent data modification) and list are mutable and therefore optimal to sort / modify as you like them? Lists have a method called reverse:  >>> lists = [""Name"", ""Score1"", ""Score2""] >>> print(lists) ['Name', 'Score1', 'Score2'] >>> lists.reverse() >>> print(lists) ['Score2', 'Score1', 'Name'] >>> tuples.reverse() Traceback (most recent call last):   File ""<stdin>"", line 1, in <module> AttributeError: 'tuple' object has no attribute 'reverse'"
learnpython,3buhu7,DarkMio,1 point,Thu Jul 2 06:50:47 2015 UTC,"Thanks I'll try that out! , It was recommended by another user on here that's why I chose to use it , but thanks for the heads up!"
learnpython,3buhu7,DarkMio,1 point,Thu Jul 2 06:55:53 2015 UTC,Got the error saying tuples cant be reversed and I also tried it with lists .
learnpython,3bu9o6,ANGRYLEFTIST,4,Thu Jul 2 05:08:03 2015 UTC,where do you get Stack from? is it defined in your program or via import some_module?
learnpython,3bu9o6,Vaphell,1 point,Thu Jul 2 05:18:35 2015 UTC,I thought it was built-in.  Where do I import it from?
learnpython,3bu9o6,jtaysom,1 point,Thu Jul 2 05:35:19 2015 UTC,"Ah, nevermind, a Stack implementation was provided for me."
learnpython,3bu9o6,FlockOnFire,1 point,Thu Jul 2 05:55:36 2015 UTC,Are you looking for something like deque from the collections library?  Edit: or are you needing a list?
learnpython,3bs4va,AlphaNerd80,1 point,Wed Jul 1 18:30:51 2015 UTC,"I'm not sure exactly what you mean by ""deploy mode"", but I think you might be looking for pip freeze.  Also I don't know why you're talking about linking. Venvs have their own local install of python as far as I remember. The whole point is to be independent of what's outside the venv."
learnpython,3bs4va,HighRelevancy,1 point,Thu Jul 2 01:10:06 2015 UTC,"Isn't that how I generate my requirements? Perhaps, I'll give it a shot when I'm at the office tomorrow.  Thank you  But for the sake of explanation, in my mind, when I work in a virtual environment, that would be deve mode.  Deploy mode is when I take all that which I have developed and deploy to the server.  I was wondering if pip could facilitate that process.  Also, regarding the linking, that was my understanding, but that error was given to me (amongst many many more of different libraries and files)  when I was trying to push to the PaaS"
learnpython,3bs4va,HighRelevancy,1 point,Thu Jul 2 01:20:51 2015 UTC,"Isn't that how I generate my requirements?   Exactly. That's essentially everything the venv is.   when I work in a virtual environment, that would be deve mode. Deploy mode is when I take all that which I have developed and deploy to the server.    What's the difference? My ""deployments"" (mostly Flask apps) have always been making a venv, activating it, dropping in the code and reqs file, loading the reqs and running it. I don't understand what you mean by ""deploy mode"".   but that error was given to me (amongst many many more of different libraries and files) when I was trying to push to the PaaS   You definitely remembered to activate the venv? I've forgotten about that sometimes... whoops."
learnpython,3bs4va,HighRelevancy,1 point,Thu Jul 2 02:52:15 2015 UTC,"I've not tried venv on the PaaS... I honestly have no idea how that would work. I'll give it a try tomorrow at work.  +10 for Flask, I'm loving it"
learnpython,3bs4va,AutoBiological,1 point,Thu Jul 2 04:48:19 2015 UTC,I couldn't say without knowing more about your PaaS. I know some that are literally just venvs (consuming a requirements file from pip and that sort of thing).  If you can install and execute the venv tools it should be fine. If it's sandboxed and toy essentially have a system to yourself you should be able to use pip to mimic your venv over the whole system.
learnpython,3bs4va,max_daddio,1 point,Thu Jul 2 07:46:26 2015 UTC,"Not really sure what you're asking, but you can just run your environment by calling your /env/project/bin/python since it links to all the libraries in the virtual environment, don't have to activate it or anything, it's self contained."
learnpython,3brg27,Hypogeum,8,Wed Jul 1 15:32:21 2015 UTC,Check out https://regex101.com/#python  It has saved me a lot of headaches and I almost feel like I'm starting to under stand regular expressions.
learnpython,3brg27,class8,2,Wed Jul 1 15:53:40 2015 UTC,I user that too when something is not working :P  /u/Hypogeum you could also just try to manually parse websites to learn more about regex.
learnpython,3brg27,maxibaby,1 point,Wed Jul 1 17:11:49 2015 UTC,This looks really helpful! Thanks a lot for the input!
learnpython,3brg27,Mekire,3,Wed Jul 1 15:56:15 2015 UTC,I found this a fun site for getting accustomed to regex: http://regexcrossword.com/  Not python related.
learnpython,3brg27,Vaphell,3,Wed Jul 1 17:29:31 2015 UTC,"don't understand how this works. Don't you need a string to do the RE on?   you do and when you read the source more closely...  ""step-by-step example will make this more obvious. Let’s consider the expression a[bcd]*b. This matches the letter 'a', zero or more letters from the class [bcd], and finally ends with a 'b'. Now imagine matching this RE against the string abcbd.""  That said, the algo is not important, I know my way around regexes and never bothered with it. All you need to know is that by default *, + are greedy, * = 0-or-more, + = 1-or-more, ? = 0-or-1"
learnpython,3brg27,Vector919,1 point,Wed Jul 1 15:39:15 2015 UTC,"Ahhhh, zero or more characters that clarifies some things, I forgot that theres the * which does that and a + which matches one or more characters. And I apparently skipped the last part about matching against the string? I don't know how I didn't see that."
learnpython,3brg27,gnomoretears,3,Wed Jul 1 15:42:17 2015 UTC,"This isn't directly python related, but how I learned was through a combination of these two resources (they're actually related, so you can do them together)  Regex Playground (Visually Test a bunch of stuff): http://leaverou.github.io/regexplained/  and THIS (which supplements the above link) https://www.youtube.com/watch?v=EkluES9Rvak"
learnpython,3bt884,babaduv,1 point,Wed Jul 1 23:19:55 2015 UTC,"Because .index returns the index of the first element that is equal to what you pass in.  If you want to know the corresponding index when you're iterating over something, that is what enumerate is for."
learnpython,3bt884,zahlman,1 point,Wed Jul 1 23:31:11 2015 UTC,"Why does it find the first AND the second BUT not the third one then I don't get it.  If what you're saying is true, no doubt about it, shouldn't it find the first one only then, and not the second and third one ?"
learnpython,3bt884,zahlman,1 point,Wed Jul 1 23:42:19 2015 UTC,"Because the second and third rows are equal to each other; the first is not equal to the other two. When you ""look for"" the third row, you find the second row, because it is equal to thing you searched for."
learnpython,3bt884,LackOfIntolerance,1 point,Wed Jul 1 23:58:24 2015 UTC,"list.index will find the first occurence of the specified argument in the list.  and the last both items are equal. Maybe not the same but equal, and as far as I know, python doesn't complain about it like Java for example.  EDIT: You might use enumerate()"
learnpython,3bt884,LackOfIntolerance,1 point,Wed Jul 1 23:34:49 2015 UTC,"Why does it find the first AND the second BUT not the third one then I don't get it.  If what you're saying is true, no doubt about it, shouldn't it find the first one only then, and not the second and third one ?"
learnpython,3bt7dy,mitchellkhan,3,Wed Jul 1 23:13:09 2015 UTC,This is hard to read. Please indent the shell output by a few spaces to get it formatted correctly. (See the formatting help text.)
learnpython,3bt7dy,isxek,3,Wed Jul 1 23:18:50 2015 UTC,"Quickly fixed it for him. :)  Mitchells-MacBook-Pro:~ MitchellKhan$ pdw -bash: pdw: command not found Mitchells-MacBook-Pro:~ MitchellKhan$ pwd /Users/MitchellKhan Mitchells-MacBook-Pro:~ MitchellKhan$ ls Applications        Downloads       Pictures Creative Cloud Files    Library         Public Desktop         Movies Documents       Music Mitchells-MacBook-Pro:~ MitchellKhan$ Documents/Terminal_Directory/ex1.py -bash: Documents/Terminal_Directory/ex1.py: Permission denied Mitchells-MacBook-Pro:~ MitchellKhan$ ""sudo"" usage: sudo -h | -K | -k | -L | -V usage: sudo -v [-AknS] [-g groupname|#gid] [-p prompt] [-u user name|#uid] usage: sudo -l[l] [-AknS] [-g groupname|#gid] [-p prompt] [-U user name] [-u             user name|#uid] [-g groupname|#gid] [command] usage: sudo [-AbEHknPS] [-C fd] [-g groupname|#gid] [-p prompt] [-u user             name|#uid] [-g groupname|#gid] [VAR=value] [-i|-s] [&lt;command&gt;] usage: sudo -e [-AknS] [-C fd] [-g groupname|#gid] [-p prompt] [-u user             name|#uid] file ... Mitchells-MacBook-Pro:~ MitchellKhan$ ""cd"" Mitchells-MacBook-Pro:~ MitchellKhan$ ""cd Terminal_Directory"" -bash: cd Terminal_Directory: command not found Mitchells-MacBook-Pro:~ MitchellKhan$    Looks like your permissions are messed up, /u/mitchellkhan.   Can you do the following for us please:  ls -l ~/Documents/Terminal_Directory   (that's a lowercase L after the dash)  Edit: It's likely the issue that /u/megadert and /u/commandlineluser point out. Using ls -l allows you to see the permissions of the file(s) so that could help you out the next time maybe. :)"
learnpython,3bt7dy,FlockOnFire,1 point,Wed Jul 1 23:29:21 2015 UTC,"Thanks! Yeah, what /u/FlockOnFire said. :)"
learnpython,3bt7dy,isxek,2,Wed Jul 1 23:38:53 2015 UTC,"Apologies for the formatting issues, I'll be sure to take my time in the future and post properly."
learnpython,3bt7dy,isxek,1 point,Wed Jul 1 23:43:59 2015 UTC,"No worries. :) It's just easier to read output when it's formatted better, that's all."
learnpython,3bt7dy,commandlineluser,2,Wed Jul 1 23:48:25 2015 UTC,"Mitchells-MacBook-Pro:~ MitchellKhan$ Documents/Terminal_Directory/ex1.py -bash: Documents/Terminal_Directory/ex1.py: Permission denied    You're trying to execute ex1.py directly, in order to do this it needs to have execute permissions. You can give it those using the chmod command. e.g. chmod +x Documents/Terminal_Directory/ex1.py.   However, I don't bother doing that and just invoke python myself, e.g.  python Documents/Terminal_Directory/ex1.py"
learnpython,3bt7dy,Vaphell,0,Wed Jul 1 23:32:07 2015 UTC,This was the one that instantly worked for me. Could you possibly explain the reasoning behind the Ladder solution?
learnpython,3bt7dy,tw_f,6,Wed Jul 1 23:58:28 2015 UTC,"are you asking why python Documents/Terminal_Directory/ex1.py works? python is a legit program recognized by the system and it accepts parameters. When you provide a py file as param, you are saying ""yo, python, run this ex1.py file for me plz"". When you promote your .py file to the program status with chmod +x, from now on you can tell it ""yo, ex1.py file, run"" and then behind the curtains the file goes ""i am just a plaintext file with no magic powers, so i need python help... python, pretty plz, run me"""
learnpython,3bt7dy,Vaphell,-1,Thu Jul 2 02:20:57 2015 UTC,"Though I've kept myself off of this website for years in an attempt to uphold my social skills and life, I have finally given in to help my coding journey improve quickly. That doesn't mean that my understanding of reddit or lack thereof makes me unintelligent. So next time you answer a first time users first question regarding a foreign program, perhaps you could not imply stupidity .. Or, it may just be that you needed that type of explanation when you first started. Regardless, I wouldn't resort to that colloquialism.  That being said, I appreciate the answer but it didn't answer my question. Why is it that what I did was not working as opposed to the given solution."
learnpython,3bt7dy,commandlineluser,3,Thu Jul 2 06:35:18 2015 UTC,Are you sure /u/vaphell was trying to be offensive or condescending?   Seems to me he was just trying to give the ELI5 version of the answer.
learnpython,3bt7dy,megadert,1 point,Thu Jul 2 07:12:08 2015 UTC,There are no hard feelings. I was just letting him know that to some it may seem that way. I was sitting in 100 degree weather at a firework stand in sunny California trying to earn some money before returning to college in the fall. I wasn't in the best of conditions to really take my time so I was conscious of the fact I rushed my post. But I really just wanted the help right then and there.
learnpython,3bsnvq,thecity2,2,Wed Jul 1 20:45:43 2015 UTC,http://www.dabeaz.com/generators/
learnpython,3bsnvq,davidbuxton,1 point,Thu Jul 2 12:35:25 2015 UTC,"I feel like you could show someone everything they need to know about comprehensions and generators (you mean with yield, right?) in under 10 minutes. Why not just show them real quick?"
learnpython,3bsnvq,elbiot,1 point,Thu Jul 2 04:14:08 2015 UTC,"My favorite introduction to decorators is this by Bruce Eckel. For some reason the class based approach made it easier to understand for me, and printing all the time helped, too.   Part 2."
learnpython,3bt1j5,MrDysprosium,3,Wed Jul 1 22:26:49 2015 UTC,"Ok, so I'm still learning python but I have experience in other languages. Bearing that in mind...  Are you using python 2 or 3?  As far as I know, in python2, range(1,f) will create a list of items (f items long) to iterate over. This will create a list factorial(20) long. Presumably you're using python3 or it would break. An alternative that only generates numbers as needed is xrange(2,f). In python3, range() and xrange() behave the same.  So why are programs slow?  Usually they are trying to process too much data.  You start counting from 2 but clearly any minimum number must be a multiple of all primes smaller than 20, so the minimum possible solution must start at 2*3*5*7*11*13*17*19 which turns out to be about 10 million. There you go. At least 10 million fewer iteration around the outer loop removed.  What about the top end? In a sense, we don't care. We just increase from the minimum until we find it. So maybe a for loop and a range is not appropriate at all. Maybe we should be using a while loop.  Now to the inner loop...  For every x between 2 and 20!, you check if there is a remainder for every number in your list... even if it gives a non zero remainder for a previous number in the list. It would be better if you ""break""ed when you received a non-zero remainder.  But all of that is just window dressing.  In fact, the answer can be determined without brute force by thinking about the factors. Your list (l[] ) should give you a hint as to how. How did you come up with the contents of l? [20,19,18,17,16,15,14,13,12,11]. Why are you not dividing by 10, 9, 8...? Presumably because if it's divisible by 20 (which is 225) , then it's also divisible by 10, 5, 4 and 2...  Maybe this gives us a route into a shortcut. Let's look at the prime factors of the numbers (excluding the primes)  4=2*2 6=3*2 8=2*2*2 9=3*3 10=2*5 12=2*2*3 14=2*7 15=3*5 16=2*2*2*2 18=2*3*3 20=2*2*5   So, the longest string of 2s is 4 for 16, longest string of 3s is 2 for 9. Everything else appears once.  so the smallest number divisible by everything must have four 2s, two 3s and one of every other prime   (2*2*2*2) * (3*3) * 5 * 7 * 9 * 11 * 13 * 17 * 19 = 232,792,560  Brute forcing the prime factors of the number between1 to 20 and counting the max number of repeated factors  for each number would be a snap (time wise) compared to a few hundred million iterations for your brute force method.  edit: reddit formatting and multiplication"
learnpython,3bt1j5,ghostsarememories,2,Thu Jul 2 00:01:51 2015 UTC,"Wow.... this was an amazing explanation.  Holy crap, I'm going to re-read this a few times. I cannot thank you enough."
learnpython,3bt1j5,ghostsarememories,1 point,Thu Jul 2 00:44:14 2015 UTC,"One extra optimisation on the brute force method...  if the number must be a multiple of 20, then the number must end in ...00, ...20, ...40, ...60 or ...80. So, as long as we start on a multiple of 20, we can skip 20 numbers every iteration and (because we're only choosing to check multiples of 20) we don't need to divide by it to check for remainder...  """""" Find smallest n divisible by 1-20. """""" check_remainder_list = [19, 18, 17, 16, 15, 14, 13, 12, 11] cur_num = (2*3*5*7*11*13*17*19 / 20) * 20  # start on a multiple of 20, use // integer division for python 3 while True:     found = True     for check_num in check_remainder_list:         if cur_num % check_num:             found = False             break      if found:         print cur_num         break     cur_num += 20  # we start on a multiple of 20 and only check multiples of 20   edit: OK, I can't resist on further alternative...  The solution must be a multiple of the product of the primes (2*3*5*7*11*13*17*19) so if we iterate through the multiples of the primes (i.e. jumping by ~10,000,000 every, we should fly through them). Also, since we're choosing multiples of the prime-product, we don't need to check the remainder of any of the primes or simple multiples (15 or 14)  """""" Find smallest n divisible by 1-20. """""" remainder_list = [18, 16, 12] prime_product = 2*3*5*7*11*13*17*19 cur_num = prime_product iterations = 0 while True:     found = True     for r in remainder_list:         iterations += 1         if cur_num % r:             found = False             break      if found:         print cur_num, ""(iterations "", iterations, "")""         break     cur_num += prime_product   This loop takes 33 iterations (i.e. essentially instant) compared to 11,154,644 iterations for the vastly speeded up (jumping by 20) loop above or a whopping 223,092,870 iterations for my original suggestions."
learnpython,3bt1j5,ghostsarememories,2,Thu Jul 2 15:59:48 2015 UTC,(2357111317*19 / 20) * 20     Isn't this just:  (2*3*5*7*11*13*17*19)   ?
learnpython,3bt1j5,Doormatty,2,Thu Jul 2 21:31:42 2015 UTC,"Isn't this just: ...   Your spidey-sense should be tingling. In python2 ""/"" does integer division, truncating the result to an integer.  (2*3*5*7*11*13*17*19) == 9,699,690   notably, not a multiple of 20.     with integer division (notice the comment at the end of the line)  (9699690 / 20) == 484984   484984 * 20 = 9699680   this is a multiple of 20.     Python 3 uses ""//"" for integer division. I even made a comment to that effect."
learnpython,3bt1j5,Doormatty,1 point,Thu Jul 2 22:11:18 2015 UTC,You are a great teacher.... many thanks. Re-doing my code.
learnpython,3bt1j5,zahlman,2,Thu Jul 2 22:39:04 2015 UTC,http://stackoverflow.com/questions/22711505/smallest-positive-number-that-is-evenly-divisible-by-all-of-the-numbers-from-1-t
learnpython,3bt1j5,zahlman,-2,Wed Jul 1 22:42:40 2015 UTC,"Not to be snotty, but I do know how to google the answer...  What I'm looking for is how to think about making my code more efficient. If someone could look at what I wrote, understand what I was trying to do, and guide me to the path of writing more efficiently... that's what I'm looking for."
learnpython,3bt1j5,zahlman,4,Wed Jul 1 22:54:17 2015 UTC,"If you know how to google the answer, then you would have found that, and could instead be asking questions about the code you found that IS more efficient.  Your code is a pure brute force solution, and without a total re-write, it will not be much faster.  Look at the link I sent you, and start figuring out why ondra's code runs in less than a second on my machine."
learnpython,3bt1j5,ghostsarememories,0,Wed Jul 1 22:56:21 2015 UTC,"Holy crap, what is the purpose of this?:  primes_needed = primes_needed | primes  he says it returns the max value of both values... but.... wut? ELI5?"
learnpython,3bt1j5,thegreattriscuit,2,Wed Jul 1 23:15:17 2015 UTC,"It's behaviour built in to the Counter class being used. It goes through the keys of both Counters, and selects the larger value for each key (if only one of the Counters has the value, its key is used. Remember that conceptually, a counter represents how many copies of each key are present in the thing being counted up; so for any missing key, the ""value"" is zero even though it isn't actually stored.)"
learnpython,3bt1j5,pqu,0,Wed Jul 1 23:28:18 2015 UTC,"Hmmm, nope. Haven't grasped it yet.  What does ""key"" mean in this context? While we're at it, counters? Do you just mean x+=1?"
learnpython,3bt1j5,ghostsarememories,1 point,Wed Jul 1 23:34:26 2015 UTC,"No; it means the Counter class that is referred to in the code. It comes from the collections standard library. ""key"" means the same thing for a Counter that it would for a dict."
learnpython,3bt1j5,ghostsarememories,-1,Wed Jul 1 23:57:28 2015 UTC,"Oh, right. And a dict is a list of lists, right?"
learnpython,3bt1j5,ghostsarememories,7,Thu Jul 2 00:41:41 2015 UTC,"... No. You need to study the fundamentals more before you attempt something like Project Euler. It would help to have some more mathematical background, too. (Hint: if the best way you can think of solving the problem by hand is to keep trying numbers one at a time until you find one that meets the requirement, you're out of your depth.)"
learnpython,3bt1j5,ghostsarememories,1 point,Thu Jul 2 02:10:21 2015 UTC,"You need to study the fundamentals more before you attempt something like Project Euler   I'm inclined to agree. I'm learning python but without the experience in other languages, and a familiarity with algorithms some of the problems would be extremely difficult.  The mathematical thing is important too. I'm not too far in but there are problems that result in a combinatorial explosion if you just try to brute force them.  There is usually some insight (like loop bounds being ln(number) or sqrt(number) rather than ""number"") or the thing I explained with the prime factors in my other post or some transformation that changes the problem from impossible to trivial.   It's as much an exercise in algorithms as pure language knowledge. However, some problems, it's the other way around. They are a real chore in (say) c but trivial in python because of the builtin stuff.  The most interesting thing is other people's solutions. APL is fucked up but awesome."
learnpython,3bt1j5,autowikibot,-2,Thu Jul 2 11:56:02 2015 UTC,"Eh, I don't agree with you 100%. I can learn mathematical concepts whilst learning Python... I've learned a TON this past week, and I'm loving it."
learnpython,3bsy3w,graaahh,2,Wed Jul 1 22:00:38 2015 UTC,"By definition a number is prime if is divisible by 1 and by himself. Eg, exactly 2 divisors. In range [1,number] and 1 divisior in range [1, number).  By theorem you can prove that if a number doesnt have a divisor from [1, sqrt(number)] it won't have a divisor from  [sqrt(number),number).  By all this you can make a simple script that: Goes from 2 to 1000, since 1 is not prime. and check for divisors from 2 to sqrt(number).  If you want more advanced / efficient ways you can check for example: https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"
learnpython,3bsy3w,maxibaby,1 point,Wed Jul 1 22:09:24 2015 UTC,"More accurately, a number is prime if it is divisible by only 1 and itself, or if its prime factorization only includes 1 and itself. This second definition, I realized, could be simplified to ""not divisible by any prime numbers between 1 and itself"", and then simplified even further to ""not divisible by any prime numbers between 1 and half of itself"", which makes the testing process much more efficient - but I don't know how to turn that into code. The Sieve of Eratosthenes is great but I think my system is faster to compute."
learnpython,3bsy3w,maxibaby,2,Wed Jul 1 22:26:30 2015 UTC,"You're right, what I'm waying is, instead of checking  ""not divisible by any prime numbers between 1 and half of itself"" can be switched to ""not divisible by any prime numbers between 1 and sqrt of itself"""
learnpython,3bsy3w,zahlman,1 point,Wed Jul 1 22:45:49 2015 UTC,"Yep, someone else pointed out that I should be using sqrt(x) as well, which I can't believe I didn't think of."
learnpython,3bsy3w,Seventytvvo,1 point,Wed Jul 1 23:25:03 2015 UTC,"The Sieve of Eratosthenes is great but I think my system is faster to compute.   This is a common thought. It is almost always wrong, and in particular will be wrong for any trial division algorithm such as this.  http://stackoverflow.com/questions/5649068/why-is-sieve-of-eratosthenes-more-efficient-than-the-simple-dumb-algorithm"
learnpython,3bsy3w,gnomoretears,1 point,Wed Jul 1 23:40:56 2015 UTC,"Yeah, the sieve is super fast. Here's what the Euler project says about it (since you're already working on the problem...)  def isPrime(n):     if n == 1:          #1 is not a prime number         return(False)     elif n < 4:         #2, 3 are prime         return(True)     elif n%2 == 0:      #if divisible by 2, its not prime         return(False)     elif n < 9:         #have already excluded 4,6,8         return(True)     elif n%3 == 0:      #if divisible by 3, its not prime         return(False)     else:         r = int(n**0.5)         #root of n (largest possible)         f = 5         # all primes 3< can be written as (6k +/- 1)                           while f <= r:             if n%f == 0:                 return(False)                 break             elif n%(f+2) == 0:                 return(False)                 break             else:                 f += 6         return(True)  # This loop finds the first x-number of primes, defined # by ""limit"". It can handle up to about the first 500,000 # primes before it starts really slowing down.         limit = 10002 primes = [] p = 0 #counter for len(primes) l = 1 #increments the number that's being checked while p != limit:     if isPrime(l+1) == True:         primes.append(l+1)         p += 1         l += 1     else:         l += 1"
learnpython,3bsy3w,gnomoretears,2,Thu Jul 2 02:59:49 2015 UTC,"I don't understand how you pretty much came up with the pseudeo-code but unable to turn it into real code.   Create an empty set a (to contain all found primes)   a = []    Create a while loop to check all numbers x from 1 - 1000   Why do you need a while loop when your iteration is finite?  for x in range(1, 1001):    test whether each x is divisible by each item in set a that is smaller than x/2   If you need to check if x is prime then call the function you have.  if is_prime(x):     a.append(x)"
learnpython,3bsy3w,Vaphell,1 point,Wed Jul 1 22:09:48 2015 UTC,"The while loop is leftover from when I was originally thinking 1-infinity, then realized my function should end at some point before the heat death of the universe, and forgot to change it back to a for loop.  The ""each item in set a that is smaller than x/2"" is to make the test process more efficient, but I don't know how to tell the code to do that."
learnpython,3bsy3w,PurpleMonkie,1 point,Wed Jul 1 22:23:05 2015 UTC,"The highest factor you should test against should be square root of x. Any factor higher than that will have a counterpart between 1 to x ** .5.  (EDIT) Your for loop inside the is_prime function could be changed to for n in range(2, int(x ** .5) + 1)."
learnpython,3bsy3w,aaron__ireland,1 point,Wed Jul 1 22:57:17 2015 UTC,Good point! I ought to have caught that no prime factor could be larger than sqrt(x). Thank you!
learnpython,3bsy3w,net_nomad,1 point,Wed Jul 1 23:22:52 2015 UTC,"and if you move 2 to its own case, range(3, int(x**0.5)+1, 2) will halve the search space (only odd numbers are relevant once you account for 2)"
learnpython,3bs5dr,TickleMeBumhole,4,Wed Jul 1 18:34:35 2015 UTC,"Not really important, but it's much better to write  repeat = True while repeat:     #something somthing   And since we never write the same line more than once as programmers:  print(""Hello!"") for i in range(1,4):     print(""{nr}. Class {nr}"".format(nr=i)) print (""4. End_program"")"
learnpython,3bs5dr,LackOfIntolerance,1 point,Wed Jul 1 19:19:18 2015 UTC,thanks!
learnpython,3bs5dr,Doormatty,1 point,Wed Jul 1 19:45:35 2015 UTC,repeat = True  while repeat:     #something somthing    Why?    while True:     #stuff     break
learnpython,3bs5dr,LackOfIntolerance,1 point,Wed Jul 1 22:49:41 2015 UTC,I was mostly referring to repeat = 'yes'   Boolean instead of a String.
learnpython,3bs5dr,Doormatty,1 point,Wed Jul 1 22:59:53 2015 UTC,My apologies - I totally missed that part of the OP's code.  You're completely correct!
learnpython,3bs5dr,jkudria,2,Wed Jul 1 23:00:45 2015 UTC,"Why are you using len(userChoice)? At this point userChoice is an int, which doesn't have a length. You can compare just userChoice - without the len() - with the range you need (i.e. something like if 0 < userChoice < 4)"
learnpython,3bs5dr,dairypharmer,2,Wed Jul 1 18:40:05 2015 UTC,"I think this is a great use of a dictionary.  Say you set up a dict so that you have the keys as 1, 2, 3, and 4, and the values as their descriptions.  This is handy for a number of reasons, including the fact that you don't have to adjust your integer (userChoice > 4) if you add more choices, for example.  Then the way I would go about it (after creating a dictionary called classes) is look up the value in the dict and do what you want to do.  So classes[1] would return ""Class 1"", etc.  classes[5] will throw a KeyError exception, so you can catch it using something like:  try:     # ask the user     # look it up in the dictionary     # do something with it     break except KeyError:     # this is invalid     continue   Think you can make it work from there?"
learnpython,3brhzb,CaptainBroccoli,2,Wed Jul 1 15:46:31 2015 UTC,"There are several good links to blogs if you Google something like ""python blogs"" - I don't want to link anything here because I'm not sure what sort of stuff exactly you're looking for.  Also you might want to subscribe to PyCoder's Weekly - there's a lot of nice stuff in each issue, including articles, Github projects, frameworks, etc. Might be exactly what you're looking for."
learnpython,3brhzb,jkudria,2,Wed Jul 1 18:36:32 2015 UTC,PyCoder's Weekly sounds EXACTLY like what I need. Thank you!
learnpython,3brhzb,jkudria,2,Wed Jul 1 18:44:02 2015 UTC,"No problem! It's basically an collection of all the buzz of the past week, at least as far as I've seen."
learnpython,3brhzb,kader14,2,Wed Jul 1 18:50:17 2015 UTC,There's also Python Weekly
learnpython,3bt4n6,anonymousperson28,2,Wed Jul 1 22:50:59 2015 UTC,"this was the first google result for numpy memoryview gil. Search for nogil on that page.  Numpy ufuncs release the gil even in python code, so you could do your numpy cruncing within the GIL and still get the speed, but I'm sure anything you can get with cimport numpy in cython is nogil safe.  Don't you get an error if you try to nogil something you can't?  So just start small, and try things."
learnpython,3bt4n6,elbiot,1 point,Thu Jul 2 03:56:39 2015 UTC,"Thanks for your answer. It turns out that memoryviews don't need the GIL, but numpy functions such as np.sqrt need the gil and should be replaced with functions from libc.math"
learnpython,3bsrgn,sanguine8082,1 point,Wed Jul 1 21:11:46 2015 UTC,>>> import binascii >>> binascii.unhexlify('1e1e1e1e') b'\x1e\x1e\x1e\x1e'   https://docs.python.org/3/library/binascii.html
learnpython,3bsrgn,anossov,1 point,Wed Jul 1 21:13:50 2015 UTC,unhexlify()  I wonder where they got the idea for that method name.
learnpython,3bsrgn,isxek,1 point,Wed Jul 1 22:16:10 2015 UTC,"Barry Warsaw authored on Aug 15, 2000:   After a brief conversation and code review with TP, adding two very commonly used functions to convert an arbitrary binary string into a hexadecimal digit representation and back again.  These are often (and often differently) implemented in Python.  Best to have one common fast implementation.  Specifically,         binascii_hexlify(): a.k.a. b2a_hex() to return the hex representation of binary data.         binascii_unhexlify(): a.k.a. a2b_hex() to do the inverse conversion (hex digits to binary data).  The argument must have an even length, and must contain only hex digits, otherwise a TypeError is raised.   TP thinks «hexlify» is «absurdist»:  http://article.gmane.org/gmane.comp.python.devel/26586/match=hexlify   Note that as of 2.0, a far quicker way is to use binascii.b2a_hex(), or its absurdist (read ""Barry"" <wink>) synonym binascii.hexlify().   Trying to find earlier mentions"
learnpython,3bsrgn,anossov,1 point,Wed Jul 1 22:38:46 2015 UTC,"Thanks! The method name's not that bad, just...a tad too funky, I guess.  (I would've named hexlify() as to_hex() myself, but it's hard to come up with something that does the opposite. to_bin() perhaps?)"
learnpython,3bsrgn,isxek,1 point,Wed Jul 1 22:48:38 2015 UTC,"unhexlify is also available under the name a2b_hex, and hexlify is b2a_hex. There are many more a2b_*—b2a_* pairs in binascii."
learnpython,3bsrgn,anossov,1 point,Wed Jul 1 22:52:40 2015 UTC,"That was mentioned in the post you quoted, yes."
learnpython,3bsrgn,isxek,1 point,Wed Jul 1 23:05:35 2015 UTC,thank you much!
learnpython,3bsknz,SovietChaoz,1 point,Wed Jul 1 20:22:32 2015 UTC,"Next I would like it to return another page such as displayCSV but it will not do that. I know that the method using the json is POST so I think that is the issue.  Is there a way to be able to render the next page after submitting that form?   No idea what you are asking.  ""return another page"" and ""render the next page"" are rather generic statements.  No idea what 'displayCSV' is supposed to be.  In any case, POST vs. GET has nothing to do with it."
learnpython,3bsknz,Justinsaccount,1 point,Wed Jul 1 21:02:19 2015 UTC,"index.html -> displayCSV.html  In bottle and flask, when you want to display an html page you have to return a template('(webpage name)'). In that case, displayCSV is the webpage."
learnpython,3bsknz,Justinsaccount,1 point,Thu Jul 2 13:22:58 2015 UTC,"What you are describing does not really mesh with your use of jquery.  Remove the jquery stuff you are using, just POST to /submitTeamsusing a regular form, and have submitTeams just redirect to /displaycsv"
learnpython,3bsknz,Doormatty,1 point,Thu Jul 2 13:40:13 2015 UTC,"Okay. My other question is, when I submit my form, it has to return some values to the app.py. Is that still possible that way?"
learnpython,3bsknz,aaron__ireland,1 point,Thu Jul 2 13:48:54 2015 UTC,"Thanks for your help, for some reason, my button was behaving like a class (because i mistakenly did so lol)  <a class=""btn btn-success"" id=""btnCreateTeams"" type=""button"">Play Ball!</a>"
learnpython,3bsknz,aaron__ireland,1 point,Thu Jul 2 14:36:21 2015 UTC,"After submitting the form, have the javascript load whatever page you want next."
learnpython,3bsknz,Justinsaccount,1 point,Wed Jul 1 22:24:26 2015 UTC,"you need to return the page from the POST method:  @route('/submitTeams', method='POST') def submit_teams():     home_team = request.json['myDict']['selectHomeTeam']     away_team = request.json['myDict']['selectAwayTeam']     return template('foo')   and then receive the response in your ajax and update the element's html.  I think it's probably something like:  success: function(response) {     $(""div"").html(response); }"
learnpython,3bscnw,apocryphos,2,Wed Jul 1 19:26:11 2015 UTC,"Sorry if this is too much, but Numpy would do this lightning fast (probably 30x faster than yours, assuming you get rid of the print statements in both cases, and really even more since you are doing a ton of unnecessary expensive appends that would reduce to something much faster using the below)  quazars is an array of all the (x,y,z) coordinates of quazars and galaxies is (x,y,z) for galaxies.  then you'd find the distance from every galaxy to every quazar with:  distances = np.linalg.norm(quazars[np.newaxis,:]-galaxies[:,np.newaxis],axis=2)   distances is now a (n_quazars,n_galaxies) shaped array of the distances.  ie: distance[:,0] would be the distances from the first galaxy to every quazar, and distance[0,:] the distances from the first quazar to every galaxy.  Then you'd use np.argmin (with the axis key word argument) to get an array of ""for every galaxy, what is the index to the nearest quazar"" or ""for every quazar, what is the index to the nearest galaxy"".  Note, since the intermediate matrix is the size of the square of the two arrays, you might run into memory problems.  In which case, iterate through slices of the galaxies array and record the index to the quazar they are closest to, and not the other way around.  edit, if you don't want the nearest quazar, but all quazars within x distance (which I assume would be one or zero) then you would get an array of bools like close_enough = distances<x and wrestle your information out of np.where. ie (discalimer, I may have dimensions mixed up in the following):   index_pairs = np.array(np.where(distances<x)).T for quazar_index, galaxy_index in index_pairs:    #do stuff, but hopefully you can do stuff without actually iterating"
learnpython,3bscnw,elbiot,2,Wed Jul 1 20:58:04 2015 UTC,"I assume printing is disabled in real code (kinda expensive operation)  You can try to pre-filter very far pairs of galaxies and quasars, like if abs(xg - xq) > 0.0046775: skip it (for each dimension)"
learnpython,3bscnw,04h,2,Wed Jul 1 20:18:12 2015 UTC,"Small improvement, but there is no reason to calculate the square root. Square the constant and compare to that.  if (x[k]-xg[i])**2+(y[k]-yg[i])**2+(z[k]-zg[i])**2 <= 2.187900625e-05:"
learnpython,3bscnw,novel_yet_trivial,2,Wed Jul 1 20:28:47 2015 UTC,"You're finding the distance from every galaxy to every quasar when you already know where all of them are. Break it down so that you are only comparing galaxies to relatively nearby quasars. Right off the back by comparing signs on the coordinates, you can break your lists into 8 octrants (+x,+y,+z; +x,+y,-z; ...) and as long as there aren't quasars within 20Mpc (or at least not enough to make a difference for your purposes) of the boundaries of these octrants, you only need to check the distances between stars and quasars within the same octrant (and do a quick check of boundary cases if there are a significant number of them). The more you break it down, the bigger your savings, though there will be some point where the added time of figuring out these cells will outweigh the savings from running fewer distance calculations. Also, if there are a sufficiently low number of quasars within 40 mpc of one another, you can probably add any matched galaxies to a list of ""skip overs"" to prevent redundant distance comparisons."
learnpython,3brfwp,jibbly_jibbly,1 point,Wed Jul 1 15:31:10 2015 UTC,"Just in case anyone comes round looking for info on this - I ended up deciding that I had to re-implement the PEP0263 check myself, by applying the regex from the PEP on py files and then doing a codecs.open() check with the found encodings and attempting a read() action."
learnpython,3brfwp,oldpythonbestpython,1 point,Tue Jul 7 02:25:16 2015 UTC,FYI for any future curiosities: https://github.com/texturacorp/Python-PEP0263-Checker
learnpython,3bs6bw,librariant,4,Wed Jul 1 18:41:14 2015 UTC,And what's the easiest way to play around with HTML elements like that?   BeautifulSoup
learnpython,3bs6bw,novel_yet_trivial,1 point,Wed Jul 1 19:03:35 2015 UTC,"I think I'd either use substrings (Pretty ugly), or try string format.  Find <a href=""blah blah"" class=""title"">14th Deadly Sin</a> substitute for {newSpan}  Find span, substitute for {newA} and then format."
learnpython,3bs6bw,maxibaby,1 point,Wed Jul 1 18:58:34 2015 UTC,"Sorry, to clarify I want to swap a lot of these tags with different titles and authors inside.  That was just an example."
learnpython,3bs594,BarrelRoll1996,1 point,Wed Jul 1 18:33:33 2015 UTC,This may help  Edit: fixed link
learnpython,3bs594,novel_yet_trivial,1 point,Wed Jul 1 18:42:07 2015 UTC,"It sort of did, thanks!   I gave up on it and just used the elegant and much simpler panda dataframe"
learnpython,3bs594,Warlord_Zap,1 point,Wed Jul 1 19:46:24 2015 UTC,If you REALLY want it as an array (hint: you don't) you can do         np.array(dataframe)
learnpython,3bra39,Turin_Martell,2,Wed Jul 1 14:46:45 2015 UTC,"One use case would be to integrate operators (+, -, *, /, <, >, ==, etc.) into your class. So for example, instead of doing:  class A:     def add(self, another):         return self.value + another.value  # Usage: a, b = A(), A() print a.add(b)   You would be doing:  class A:     def __add__(self, another):         return self.value + another.value  # Usage: a, b = A(), A() print a+b   For more ""magic methods"", check this out."
learnpython,3bra39,chucksys,1 point,Wed Jul 1 15:18:21 2015 UTC,So kinda like overloading then. Thanks for clearling that up.
learnpython,3bra39,RyanTargaryen,2,Wed Jul 1 19:42:47 2015 UTC,"The _ insertwhateveryouneedhere _ _  in Python have a variety of uses. However, the most common ones that I have seen personally are __init_ and (not a function, but still very useful)      if name == 'main' What this does is check to see if that file is the one being run, or if it is only imported into another file. If it is the file being run, it will execute the code in the if block, otherwise it will not. This is useful because you don't always necessarily want the file to run upon importing, but rather when you call it to run yourself.  Hope this answered at least the general idea of the _ importantnamehere _ features in Python. For very very basic stuff you don't have to worry about them, but they are just an extra layer of features that we can use.  Edit : broke up the double underscores to stop it from holding the text between them."
learnpython,3bs4o3,MaxwellSalmon,1 point,Wed Jul 1 18:29:30 2015 UTC,Is that the whole code ?  I miss tk.mainloop()  also you need global v in submit (not affecting the window to freeze)
learnpython,3bs4o3,LackOfIntolerance,1 point,Wed Jul 1 18:43:47 2015 UTC,I've never learned about those... :-I
learnpython,3bs4o3,LackOfIntolerance,1 point,Wed Jul 1 18:53:18 2015 UTC,"Ok.  put tk.mainloop() at the end of your code.  And if you have the time, please explain what your code is supposed to do. Since, at the moment I'm not sure what you want to do with def setup() also submit() is returning v.get() into ""nothing""."
learnpython,3bs4o3,LackOfIntolerance,1 point,Wed Jul 1 19:08:55 2015 UTC,"Putting tk.mainloop at the end didn't help.  I'll use this for a text adventure. Very simple. Instead of using the Python shell itself, I would use a tkinter window instead.   There's no real-time gameplay. It shows some text, waits for input and gives output."
learnpython,3bs4o3,LackOfIntolerance,2,Wed Jul 1 19:25:12 2015 UTC,Hm..  What OS and which python version do you use?  I run it on Ubuntu in python 2.7.6  and if  I change the first line to from Tkinter import * (You would get an import error if yours were wrong) it runs perfectly.  EDIT: Did you write tk.mainloop or tk.mainloop() ?  The brackets are important.
learnpython,3bs4o3,04h,1 point,Wed Jul 1 19:32:57 2015 UTC,"I run Windows 7 with Python 3.4  And yes, I wrote tk.mainloop()"
learnpython,3brzng,Panda_Muffins,2,Wed Jul 1 17:53:57 2015 UTC,"In your main.py  import a  a.call_me() print(a.variable) a.variable = 10 print(a.variable)   In a.py  def call_me():     print(""Hey"")  variable = 5"
learnpython,3brzng,maxibaby,1 point,Wed Jul 1 17:58:35 2015 UTC,"I'm not sure if this does what I want. I want to be able to run a.py from main.py, but I want my_variable to be freely changed from within main.py before running a.py  Does that make sense? I have updated my original question to make it clearer."
learnpython,3brzng,maxibaby,4,Wed Jul 1 18:05:37 2015 UTC,"It does what you want. function [output] = a(my_variable)  Let's say your a.py has a function called SUM. In matlab: function [output] = sum(x,y) In python: def sum(x,y)  You simply have that function in a.py, so a.py looks like this:  def sum(x,y):     return x+y   now in your main.py, you import the other script with  import a #Since is a.py   And finally in main.py you can call the function sum with your own variables, example: main.py  import a  p = 5 q = 7 print(a.sum(p,q))"
learnpython,3brzng,eqo314,1 point,Wed Jul 1 18:11:20 2015 UTC,"Ah, okay. Thank you! I appreciate you explaining that to me. I get it now, and I just tried it out and it worked as planned. Thanks a million!"
learnpython,3brzng,TheBlackCat13,2,Wed Jul 1 18:19:48 2015 UTC,"If I may answer this question as a python noob and as longtime user of matlab.  In matlab when you create a function and save it some where in its ""path"" directort, the matlab environment automatically recognizes this function and you can call it immediately.  In python after you define your function you have to let your script know to include it with the ""import"" command.  Coming from matlab, I prefer pythons import system. You don't have to worry about naming collisions, the python interpreter starts up in an instant compared to a matlab system that has had a ton of paths added to its startup over the years."
learnpython,3bq7wy,DarkPhalanx,3,Wed Jul 1 07:06:47 2015 UTC,"You don't even need spyder.    Open Notepad++. On the menu go to: Run -> Run.. (F5). Type in: C:\Python26\python.exe ""$(FULL_CURRENT_PATH)"" Note: If you have Python 3.1: type in Python31 instead of Python26 Note: Add -i if you want the command line window to stay open after the script has finished Now, instead of pressing run, press save to create a shortcut for it."
learnpython,3bq7wy,UpBoatDownBoy,3,Wed Jul 1 07:53:38 2015 UTC,"The reason I want Spyder is because I come from a MATLAB background, and it provides an interface to view variables and their contents. This is really useful especially when I'm looking at arrays and numpy functions."
learnpython,3bq7wy,ies7,4,Wed Jul 1 07:58:21 2015 UTC,how about changing spyder's theme to solarized? https://github.com/pshchelo/spyder-color-solarized
learnpython,3brwnp,maxibaby,2,Wed Jul 1 17:31:42 2015 UTC,What i tought was having a dictionary and maybe use Levenshtein distance.   That's exactly what I was going to suggest.
learnpython,3brvt6,dannyboy775,1 point,Wed Jul 1 17:25:39 2015 UTC,OpenCV probably. Just look for the text or the character pictures.
learnpython,3brpfu,MasterPabu,3,Wed Jul 1 16:39:58 2015 UTC,"raw_input() returns a string, always. You need to convert it to an int before you can do math with it. Try  digit_sum_finder(int(n))   Also you have some indentation issues but I assume that from the copy-paste.  Also, remember that an int divided by an int always returns an int in python2 (floor division). So   >>> 5/10 0   An int divided by a float returns a float:  >>> 5/10. 0.5"
learnpython,3brpfu,novel_yet_trivial,1 point,Wed Jul 1 16:43:37 2015 UTC,"Thank you! Would it be fine to use just input() then? When is it preferable to use raw_input()?  Yes, I'm familiar with floor division though.   EDIT: Just tried input(). Works like a charm!"
learnpython,3brpfu,novel_yet_trivial,2,Wed Jul 1 16:54:32 2015 UTC,"When is it preferable to use raw_input()?   Always.  input() (in python2) is just aliased to eval(raw_input()). This can open up some serious security problems since the user can type nearly any code in and it will run. Additionally, you never know what data type you will get returned, so you need to put type checks in. It's much easier to just directly convert to the type you need."
learnpython,3brpfu,novel_yet_trivial,1 point,Wed Jul 1 17:01:11 2015 UTC,"Great, so to input using raw_input(), it goes var=raw_input(type()) then?"
learnpython,3brpfu,BenjaminGeiger,1 point,Wed Jul 1 17:03:07 2015 UTC,"No. Other way around.  type(raw_input(""Prompt text: ""))"
learnpython,3brpfu,Vaphell,1 point,Wed Jul 1 17:06:03 2015 UTC,Got it!
learnpython,3brpfu,novel_yet_trivial,1 point,Wed Jul 1 17:07:17 2015 UTC,"input() is somewhat dangerous. It evaluates whatever the user enters.  Try typing raise Exception(""security fail"") at the prompt and you'll see what I mean.  For a toy program it'll suffice, but be aware."
learnpython,3brpfu,Vaphell,1 point,Wed Jul 1 17:03:14 2015 UTC,"string version of the number may actually be more convenient.  >>> sum(int(ch) for ch in '31254245624634357') 66   also you could test your input with try/except, according to ""better to ask for forgiveness than permission"", eg  n = raw_input()  try:     int(n)    # test if the string is actually int'able     s = sum(int(ch) for ch in n)     print 'The total is: {}'.format(s) except ValueError:     print 'Not a valid number, dumbass'"
learnpython,3brpfu,novel_yet_trivial,1 point,Wed Jul 1 17:15:32 2015 UTC,"Slightly neater:  >>> sum(map(int,'31254245624634357')) 66"
learnpython,3brpfu,Vaphell,1 point,Wed Jul 1 17:20:07 2015 UTC,de gustibus... i actually prefer comprehensions (because they make it crystal clear that it's f(x) for x in X) over terse toys with a synthetic flavor for FP brainiacs.
learnpython,3brpfu,Vaphell,1 point,Wed Jul 1 17:30:43 2015 UTC,de gustibus etc :)
learnpython,3brpfu,Vaphell,1 point,Wed Jul 1 17:36:24 2015 UTC,you sure perl is not right up your alley? ;-)
learnpython,3brpfu,novel_yet_trivial,1 point,Wed Jul 1 18:10:45 2015 UTC,How do I use try? What is it for?
learnpython,3brnue,357951,2,Wed Jul 1 16:27:56 2015 UTC,"from multiprocessing import Pool pool = Pool(processes=max_num_processes) pool.map(function, list_of_arguments) pool.close() #necessary to prevent zombies pool.join() #wait for all processes to finish"
learnpython,3brnue,novel_yet_trivial,1 point,Wed Jul 1 17:50:15 2015 UTC,"Thanks for the snippet. Another thing you might know - when running time.sleep (from import time) function, does it affect current process only or the whole script, if its single-threaded?"
learnpython,3brnue,novel_yet_trivial,1 point,Thu Jul 2 10:23:08 2015 UTC,I've never tried but I assume the current process only.
learnpython,3bqwcb,MrDysprosium,6,Wed Jul 1 12:40:24 2015 UTC,"You don't need the if. The while does what you want, and you can just have the c = ... anyway.  while b < 1000:     while a < 1000:         c = a*b         (do whatever to c)         a+=1     a = 100     b+=1   (or, of course, you could use ""for"" instead of while:  for a in range(100, 1000):     for b in range(100,1000):         c = a*b   (edit: actually, I think you can have   for b in range(a,1000)    for the second number, you don't need to re-do numbers you've done)"
learnpython,3bqwcb,tyggerjai,1 point,Wed Jul 1 12:56:42 2015 UTC,"And as generator: (a*b for a in range(100,1000) for b in range(a,1000)).  If it were a list comprehension it would make a list with 405,450 elements."
learnpython,3bqwcb,jeans_and_a_t-shirt,2,Wed Jul 1 13:50:10 2015 UTC,"Out of interest, what do you think that code does, and what do you think python does at the ""end"" of a while loop? Have you run it?"
learnpython,3bqwcb,tyggerjai,1 point,Wed Jul 1 12:46:54 2015 UTC,"Yeah, I could see in my head what it would do. I'm doing project euler, next step is to parse ""a*b"" to another if statement to see if it's a palindrome, in which case I'll only print palindromes. I'm looking for the largest palindrome which is a result of two three digit factors.  https://projecteuler.net/problem=4"
learnpython,3bqwcb,tyggerjai,2,Wed Jul 1 12:50:05 2015 UTC,Can I also recommend working backwards?
learnpython,3bqwcb,tyggerjai,1 point,Wed Jul 1 13:31:01 2015 UTC,How do you mean?
learnpython,3bqwcb,ScM_5argan,1 point,Wed Jul 1 14:08:58 2015 UTC,"I'm confused, then. That code does what you say you want. Why do you need a goto?  The next step, I would say, is to store a.b in a variable each time you have a new result, and then do whatever tests you need."
learnpython,3bqwcb,ripread,1 point,Wed Jul 1 12:51:22 2015 UTC,"It will? Maybe try to explain what exactly the problem is in other words,  apparently I don't understand what you are asking. Also I suggest looking at for loops"
learnpython,3bqwcb,tyggerjai,1 point,Wed Jul 1 12:47:15 2015 UTC,Your first example does exactly what you want. You shouldn't have to change it from that.
learnpython,3bqwcb,jeans_and_a_t-shirt,1 point,Wed Jul 1 13:20:47 2015 UTC,"I'm really bad at explaining myself, it seems. Here's my finished code if it makes sense.  A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.  Find the largest palindrome made from the product of two 3-digit numbers.  a = 100 b = 100 answer = []   while b < 1000:     while a < 1000:         c=a*b         d=c         d=str(d)         d = d[::-1]         d=int(d)         if c == d:             answer.append(c)          a+=1      else:         a = 100         b+=1    print (max(answer))"
learnpython,3bqwcb,tyggerjai,1 point,Wed Jul 1 14:11:22 2015 UTC,"We knew what you were trying to do. We're just confused because the first thing you posted would do it, without a goto.  The ""while"" construct should work, but is slightly less elegant than the ""for"" construct - ""for"" will take care of the +1, and resetting the a term. But that should work.  Have a think, though, about the implication of finding the highest palindrome. At the moment, that's the last one you find. If you could somehow rearrange the code so you found the highest one first, then you could stop. You wouldn't have to keep looking."
learnpython,3brl7q,rm_-rf_slashstar,1 point,Wed Jul 1 16:09:57 2015 UTC,It's a problem with your payload. Can you show us that code?
learnpython,3brl7q,novel_yet_trivial,1 point,Wed Jul 1 16:13:31 2015 UTC,if 'body' in kwargs:     kwargs['headers']['Content-Type'] = 'application/json'     kwargs['body'] = json.dumps(kwargs['body'])     payload = kwargs['body'] else:     payload = None
learnpython,3brl7q,novel_yet_trivial,1 point,Wed Jul 1 16:20:21 2015 UTC,Huh. I'm stumped. Server error maybe?
learnpython,3brl7q,novel_yet_trivial,1 point,Wed Jul 1 16:34:02 2015 UTC,"It works just fine with Python 2.7, which is weird. Python 3.4 on the other hand does not...I'm not sure either."
learnpython,3brl7q,Justinsaccount,2,Wed Jul 1 16:47:13 2015 UTC,"As a shot in the dark, you could try  r = requests.request(http_method, http_url, data=payload.encode('ascii'), headers=kwargs['headers'])"
learnpython,3brl7q,novel_yet_trivial,1 point,Wed Jul 1 16:51:39 2015 UTC,"Tried working with encoding, no luck"
learnpython,3bmmgr,monstersofmetal,9,Tue Jun 30 13:13:59 2015 UTC,congratulations @harshasrinivas. useful app.
learnpython,3bmmgr,Nicksil,0,Tue Jun 30 16:45:44 2015 UTC,thanks monstersofmetal :)
learnpython,3bmmgr,questdark,4,Tue Jun 30 16:48:18 2015 UTC,"Hey, good for you, pal!   Congratulations :)"
learnpython,3bmmgr,Thunder_54,1 point,Tue Jun 30 17:09:28 2015 UTC,thanks Nicksil :)
learnpython,3bmmgr,Vohlenzer,3,Tue Jun 30 17:16:43 2015 UTC,"Holy shit, tight!"
learnpython,3bmmgr,Vohlenzer,0,Tue Jun 30 23:00:39 2015 UTC,:)
learnpython,3bmmgr,Lazy-Programmer,2,Wed Jul 1 02:09:42 2015 UTC,Pretty table is awesome! I thought I recognized it in the screenshots
learnpython,3bmmgr,terrifiedbyvajayjays,1 point,Tue Jun 30 23:07:00 2015 UTC,Might be pretty but I'd hate to try and work out how to parse the output.
learnpython,3bmmgr,CaptainRoth,1 point,Wed Jul 1 07:44:30 2015 UTC,"Yes of course, Vohlenzer :) I too feel the same now.  I'm learning things, and in the further updates, i'll be coming up with a better interface for my app. Thanks :)"
learnpython,3bmmgr,wub_wub,1 point,Wed Jul 1 08:01:44 2015 UTC,I end up using;  writer = csv.writer(sys.stdout) for line in results:     writer.writeline(line)   On my phone so can't check but you get the idea.
learnpython,3bmmgr,CaptainRoth,0,Wed Jul 1 11:13:34 2015 UTC,oh. cool. yeah i do get it! thanks again Vohlenzer :)
learnpython,3bmmgr,OctagonClock,0,Wed Jul 1 13:39:42 2015 UTC,Yes it is :)
learnpython,3bmmgr,ksantr,2,Wed Jul 1 02:09:54 2015 UTC,This is really cool! I'm going to install it tomorrow c: I really see myself using this
learnpython,3bmmgr,OctagonClock,0,Wed Jul 1 04:38:09 2015 UTC,Thanks! You're most welcome :)
learnpython,3bmmgr,Mekire,4,Wed Jul 1 04:55:04 2015 UTC,"Congrats!    Small question. Noob here, don't know how to run it. To me 'command line' means windows and pip install whatever , I thought that was windows but then I see all this linux stuff. Do I need to be in linux to use this? Or maybe just put in the environment variable? The instructions here on the env var look like linux. Thanks for any help on this."
learnpython,3bmmgr,OctagonClock,2,Tue Jun 30 15:42:56 2015 UTC,"for windows, you first need to download pip as said here :)  And then learn installation from here :)  Setting environment variables need to be done a little differently in windows. And yes, my app has been tested for only POSIX ( Mac OS X and Linux ) based systems. :)   Stack Overflow is your best friend :) Happy coding"
learnpython,3bmmgr,elbiot,4,Tue Jun 30 15:56:38 2015 UTC,"Pip is also included in the 3.4 download, but you will probably have to set up the path"
learnpython,3bmmgr,KZISME,1 point,Tue Jun 30 16:15:15 2015 UTC,And in 2.7.9 and 2.7.10 I think.
learnpython,3br8nt,Troge,3,Wed Jul 1 14:34:47 2015 UTC,"Why do you have the methods at different indent levels?  You aren't defining get_events as a method of the class, you're defining it as a local variable inside __init__.  EventbriteClient only has the one method __init__ the way you've written this.  When you fix that, you're going to run into the next problem, which is          return requests.get(                 '{server}/v3/events/search/{url}',                 params=params,                 headers=self.headers                 ).format(server=self.server)   That needs to be          return requests.get(             '{server}/v3/events/search/{url}'.format(server=self.server, url=url),             params=params,             headers=self.headers)   (Or however you want to handle the whitespace.)"
learnpython,3br8nt,Rhomboid,1 point,Wed Jul 1 14:45:04 2015 UTC,"I figured out my problem. My two functions were indented over one too many, they were being declared as part of the _init_  @mods If there is a way to mark this solved let me know and I'll do it"
learnpython,3br8l6,no_no-notorious,1 point,Wed Jul 1 14:34:10 2015 UTC,"but my main question is, would I benefit from a numpy array in this situation.   Maybe.  I'd expect a 30x speed improvement if you use numpy.arrays, broadcasting and ufuncs as opposed to python objects and for loops.  Are you doing anything to the bytes objects?  Caveats   I don't know how you could put a bytes object into an efficient array since they are variable length.  If you had a maximum length of a bytes object, say 10 bytes, then you could make a (10000000,11) array of int8, or a (10000000,6) array of int16. (see edit1)  20GB won't fit in memory.  If you had the data as a numpy array in a binary file already, you could use a memmap.  But converting from some other file type to numpy and back again would probably be a big performance loss (see edit2)  You probably just want to iterate over the file in python to keep memory usage down, and do your math with python objects instead of numpy, as type conversion can be expensive and not worth it for just a sum.   edit: if you know the max length of the bytes you can make a custom dtype like dtype('S10','u8') so arr[:,0] would be your array of 10 length byte sequences and arr[:,1] would be an array of 8 bit unsigned integers.  edit2: see numpy.fromfile and use a custom datatype to laod it assuming all the byte arrays are the same length (which I imagine they would be in a binary file.  Also, I think you could load it in chunks for big files with the count keyword.  Since it is an open file object, I assume the filepointer is advanced and the next read would get the next chunk"
learnpython,3br8l6,elbiot,1 point,Wed Jul 1 16:12:55 2015 UTC,"would I benefit from a numpy array   Depends on the conversion you want to do, but probably, yes. Also look into pandas."
learnpython,3br6ez,montecarlo1,1 point,Wed Jul 1 14:16:19 2015 UTC,"Firstly, those are instance methods, not class methods.  A class method is one defined with the @classmethod decorator, and which is implicitly passed a reference to the class as the first parameter, rather than a reference to the instance (self).  If that doesn't make any sense, then just know that most methods you write should be instance methods.  Secondly, Customers and Bike_Shop should not inherit from Bicycle.  Inheritance represents an IS-A relationship.  You are saying that every customer IS A bike, and that every bike shop IS A bicycle.  That's nonsense.  You don't need inheritance here at all.  Third, you should not expect users of a class to have to manually stuff items into an instance attribute, like you're doing with:  for bikes in bike_list:      store.bike_inventory[bikes.model]=bikes.retail_cost   Modify the constructor to take the list of bikes as a parameter:  store = BikeShop('name', bikes)   Finally, to your actual question: there's nothing special about what you can put in an instance method.  If you can write store.bikes_under(customers_1.budget) in main() then you can write the same thing in a method:  class BikeShop:     ...     def affordable_bikes(self, customer):         return self.bikes_under(customer.budget)   However, you may not want to do that.  It ties the design of the BikeShop class to the design of the Customer class, by requiring that a BikeShop knows that a Customer has an attribute budget.  Maybe that's okay, maybe not.  This could just as well be a free function:  def affordable_bikes(store, customer):     return store.bikes_under(customer.budget)   That eliminates the coupling between the two (or at least, it factors out the coupling to a place where it can be managed explicitly.)"
learnpython,3br6ez,Rhomboid,1 point,Wed Jul 1 14:36:26 2015 UTC,"Definitely changed the inheritance as its now obvious that there is no inheritance needed/required.   I don't know if I completely understand your modification of the instance method. If your suggesting that i could build it on the main(), then why go through the effort of building the method? Remember, I would like to create a unique affordable_list for every customer.   Also, how would you go about modifying the bike shop class to eliminate the inventory with the bike_list. I tried but i keep getting Object references."
learnpython,3br40z,vmsmith,1 point,Wed Jul 1 13:55:19 2015 UTC,"validate_recv_mgen_line(mgen_line, count) could be half as long if you use a for loop (for offset in (5,6)), and you don't use the count parameter.  Is that an accident?  ""mgen."" + node_name[0] + ""-"" + node_name[1] + ""-"" + node_name[2] + ""-"" + node_name[3]   could be   ""mgen.""+'-'.join(nodename[:4]   or ignore the slice if nodename is always exactly 4 elements  convert_mgen_to_json is nested way too deep in trys.  why not just check the file existance and size with an if statement at the begining.  ""ask for fogiveness rather than permission"" is usually more pythonic than ""look before you leap"", but it's also best practice to put as little code as possible in a try clause and to not unnecessarily indent your code heavily.  Like, what line(s) would raise the unicode error?  I have no idea from looking at your code. Just wrap that one error raising line with the try/except"
learnpython,3br40z,elbiot,1 point,Wed Jul 1 16:47:11 2015 UTC,"Great comments. I'll incorporate both of them. Thanks so much.  Regarding the count parameter, I do use it if the exceptions get raised. Count identifies the line in the file that raised the exception."
learnpython,3br40z,elbiot,1 point,Wed Jul 1 16:54:04 2015 UTC,"Okay.  I would also raise a value error rather than an index error, put all that validation in one function that will return an actual result (rather than a look before you leap validation), and call it in your convert_mgen_to_json like this:  try:     src_node, dst_node = mgen2addresses(mgen, count) except ValueError:     #whatever   That gets rid of two unnecessary validation functions and three validation check conditionals.  also, instead of incrementing a count variable, use   for i, mgen in enumerate(f):   and finally, do:  if mgen != '\n':   rather than the if/else with a continue"
learnpython,3br40z,gengisteve,1 point,Wed Jul 1 17:09:42 2015 UTC,Makes perfect sense. I'm on it. Thank you!
learnpython,3br40z,gengisteve,1 point,Wed Jul 1 17:18:52 2015 UTC,"Awesome job.  Great documenting of functions.  My big comment is to break up def convert_mgen_to_json(input_file, output_file=None): into separate functions, maybe using generators to allow you to get rid of all the overly complex indentations.  You might also use the convert functions to throw exceptions rather than running a separate validation, but this is more a maybe better, rather than a probably better."
learnpython,3br40z,elbiot,1 point,Wed Jul 1 16:59:08 2015 UTC,"Thanks. I was thinking I should break up the primary function a bit more.  I'm not exactly sure what you mean by ""convert functions to throw exceptions rather than running a separate validation"". Could you elaborate just a bit more?"
learnpython,3br40z,Nahnja,1 point,Wed Jul 1 17:20:18 2015 UTC,"Sure.  This is probably similar to elbiot, but something along the lines of:  def parse(fields):     '''     return parsed items x,y from fields     '''     name = field[1][2:3]     if not(name.startswith('apple'):         raise Exception(""that's no apple"")     node = field [6][5:]     if not(node.startswithd('dst')):         raise Exception('where are you going?')      return name, node  def generate_addresses(fn):     with open(fn) as fh:         for idx, line in enumerate(fh):             fields = line.strip().split()             if not fields:                 continue             if fields[1] = 'blah':                 continue             try:                 yield parse(fields)             except:                 # log line based exceptions                 log.exception  def build_dict(fn):     result = {}     for name, node in generate_addresses(fn):         result[name] = node # or whatever"
learnpython,3br40z,elbiot,1 point,Wed Jul 1 17:43:31 2015 UTC,OK. Thanks.
learnpython,3br40z,Nahnja,1 point,Wed Jul 1 18:36:02 2015 UTC,"# Create the first dict if the json_dicts list is empty if not json_dicts:     size = 1     json_dicts.append({""name"": srcnode, ""size"": size, ""imports"": [dstnode]}) # Append a new dict to the json_dicts list if the srcnode has not been processed yet elif srcnode not in [json_dict[""name""] for json_dict in json_dicts]:     size = 1     json_dicts.append({""name"": srcnode, ""size"": size, ""imports"": [dstnode]}) # Append dstnodes to ""imports"" if the srcnode has already been processed elif srcnode in [json_dict[""name""] for json_dict in json_dicts]:     for json_dict in json_dicts:         if json_dict[""name""] == srcnode:             if dstnode not in json_dict[""imports""]:                 json_dict[""size""] += 1                 json_dict[""imports""].append(dstnode)   could be   #update relevant json_dict or create it if it doesn't exist. relevant_dict = [jdict for jdict in json_dicts if (             srcnode == jdict[""name""]) and (dstnode not in jdict[""imports"")]  if relevant_dict:   relevant_dict[0][""size""]+=1   relevant_dict[0][""imports""].append(dstnode) else:   json_dicts.append({""name"": srcnode, ""size"": 1, ""imports"": [dstnode]}"
learnpython,3br40z,elbiot,1 point,Wed Jul 1 17:58:11 2015 UTC,I see that. Thanks!
learnpython,3bqypl,Robotronic777,2,Wed Jul 1 13:04:23 2015 UTC,https://docs.python.org/2/library/re.html https://docs.python.org/2.0/ref/strings.html http://stackoverflow.com/questions/509211/explain-pythons-slice-notation
learnpython,3bqypl,shaggorama,2,Wed Jul 1 14:57:33 2015 UTC,Best answer.  ^ ^   Also if you don't want to dig in to the strings link. the 'r' in front of string like r'c:\dfjalfjdla\fdasfda' means that it's a RAW string. That means that it ignores special characters (in this case the '\' character). This is because the '\' has a different function when it's in strings normally.
learnpython,3bqypl,Thunder_54,1 point,Wed Jul 1 15:18:00 2015 UTC,uuuu. Nice piece of information! Thanks
learnpython,3bqypl,mr-slappy,1 point,Wed Jul 1 15:37:29 2015 UTC,Thanks. Somehow i haven't found these links! Sweet
learnpython,3bqypl,vindolin,1 point,Wed Jul 1 15:37:49 2015 UTC,"I can only offer a partial explanation unfortunately the main thing that your examples cover are regular expressions, I'd suggest having a read into that & have a play around with it on - https://regex101.com/"
learnpython,3bpklo,chucrutcito,2,Wed Jul 1 03:07:54 2015 UTC,"Based on the docs for:   camera.capture_sequence(outputs(), 'jpeg', use_video_port=True)   it's taking a 'file-like' object (in this case an  io.BytesIO() object, I think) and using it's write method to add to it. So what I would do is wrap/subclass a numpy array object/python list and give it a write method as an alias to sticking the image where it belongs, and passing that in instead."
learnpython,3bpklo,The-Mathematician,2,Wed Jul 1 09:03:39 2015 UTC,"Do not subclass a numpy array!  It is very messy and error prone.  Make an object that has a numpy array as an attribute instead.  I'm thinking that code writes successively to a BytesIO stream, so instead, output should be an object that appends numpy arrays of the bytes to a list, and uses np.extend at the end to create a final array.  Or, if you know how many frames you want, just create an overprovisioned 3D numpy array (as an attribute of the output object) with np.empty which adds each successive frame to the next 2D slice when write is called on it."
learnpython,3bpklo,elbiot,1 point,Wed Jul 1 17:23:39 2015 UTC,Hi elbiot. Can you be more specific about making an object that has a numpy array as attribute?
learnpython,3bpklo,elbiot,2,Thu Jul 2 00:27:07 2015 UTC,"Well, I don't know your details, but:  class VideoSaver(object):      def __init__(self, size):         '''Size is the dimensions of a frame, like (600,800)         self.size = size+(3,) #(600,800,3) for RGB         self.n_bytes = size[0]*size[1]*3         self.frames = []      def write(self,data):         arr = np.fromfile(data,dtype=np.int8,count=self.n_bytes)         arr.shape=self.size  #reshape array to be a frame         self.frames.append(arr)      def compile(self):         return np.dstack(self.frames) #build 3d array from 2d frames   frames = VideoSaver(size=(600,800)) for i in range(40)     camera.capture_sequence(frames, 'bmp', use_video_port=True) three_d_array = frames.compile()   or with your example, replace the write function above with:     def saver(self):         stream = io.BytesIO()         for i in range(40):             # This returns the stream for the camera to capture to             yield stream              #process stream             arr = np.fromfile(stream,dtype=np.int8,count=n_bytes)             arr.shape=self.size  #reshape array to be a frame             frames.append(arr)              # Finally, reset the stream for the next capture             stream.seek(0)             stream.truncate()  frames = VideoSaver(size=(600,800)) camera.capture_sequence(frames.saver(), 'bmp', use_video_port=True) three_d_array = frames.compile()   Of course, totally untested and I don't know enough details.  The second is probably faster.  But it's saving all this stuff in memory so using a thread to write it out like I said in another comment would be just as fast, adn wouldn't hog your memory.  But I don't know how RasPis work, so I can't say for sure the thread would be fast.  edit: one frame of 600x800 uncompresed RGB is 1.44 megabytes.  So taking video as fast as you can, your 512MB will fill up fast.  using comporessed jpeg would be better for memory efficiency and write speed (to file), but I used RGB because I know how to make a numpy array for that."
learnpython,3bpklo,elbiot,2,Thu Jul 2 03:16:46 2015 UTC,"File IO is non-blocking, so you could use threads to do the writing while the camera keeps taking images as fast as possible.  That is, output.write increments a counter, creates a filename, and passes the filename and bytes off to a thread that writes to the file.  Then output.write is ready for another frame while the thread does the fileIO.  I think."
learnpython,3bpj0y,EruIlluvatar,4,Wed Jul 1 02:54:20 2015 UTC,"my main question is how to automate this for all 1000 files, because I obviously can't type it all out.   something like this?  x = {} for i in range(1,1001):     x[i] = pl.loadtxt('out{}.txt'.format(i))[:,1]   and if you use numpy, you could use it also for mean and stdev instead of reinventing the wheel."
learnpython,3bpj0y,Vaphell,1 point,Wed Jul 1 04:04:04 2015 UTC,"Thank you, this looks very simple, I will test it as soon as my files finish being generated.  So for np.std, would I just feed it np.std(x[i])?"
learnpython,3bpj0y,Vaphell,2,Wed Jul 1 04:21:58 2015 UTC,"not if you want to do it on a per row basis. x[i] is per file basis.   it's not hard though, zip()/izip() can slice across analogous, parallel data structures. Code below has smaller number of files/rows for visualization purposes, it better showcases the principle because you can easily track individual values to confirm it works.  #!/usr/bin/env python  import itertools as it import numpy as np  x = []  for i in range(1,4):     x.append( np.loadtxt('out{}.txt'.format(i))[:,1] )  for i, row in enumerate(it.izip(*x), 1):     print 'row #{}: {}\nmean={}, std={}\n'.format(i, row, np.mean(row), np.std(row))   test:  $ for f in out{1..3}.txt; do echo ""-- $f --""; cat ""$f""; done -- out1.txt -- 1 5 2 5 3 5 -- out2.txt -- 1 2 2 3 3 5 -- out3.txt -- 1 10 2 3 3 5 $ ./mean_stdev.py row #1: (5.0, 2.0, 10.0) mean=5.66666666667, std=3.29983164554  row #2: (5.0, 3.0, 3.0) mean=3.66666666667, std=0.942809041582  row #3: (5.0, 5.0, 5.0) mean=5.0, std=0.0"
learnpython,3bpj0y,Vaphell,1 point,Wed Jul 1 12:23:42 2015 UTC,"Thank you very much again, you have been incredibly helpful!   I am still waiting on my damn simulation to finish so that I can test this properly, but you have made things very clear and I don't anticipate any problems! Only thing left to do is output it to a txt file. I've used np.savetxt a bit in the past, if I define the mean and stdev before then I could just use mean.ravel and stdev.ravel I assume."
learnpython,3bpj0y,dunkler_wanderer,2,Wed Jul 1 15:45:44 2015 UTC,"if you used linux like a boss (or mac... like a smaller boss) you'd get dumping output to file out of the box as a basic feature of the terminal, eg ./my_prog.py > summary.txt while having run of the mill prints in the code ;-) Almost never i have to account for the destination in my code because easily i can switch between ""print to screen"" and ""print to file"".  That said it's not rocket science to do that from within python  with open('summary.txt','w') as out:     for i, row in enumerate(it.izip(*x), 1):         out.write( '{}\t{}\t{}\n'.format(i, np.mean(row), np.std(row)) )   i never used numpy so have no idea about numpy's convenience toys - there might be something easier (not that 2 lines of standard python code are a disaster)"
learnpython,3bpj0y,novel_yet_trivial,1 point,Wed Jul 1 16:06:44 2015 UTC,Finally got some output today and just wanted to stop by and tell you that it all works like a dream! Cheers mate!
learnpython,3bpj0y,novel_yet_trivial,2,Thu Jul 2 10:13:29 2015 UTC,Just a little side note: Python3 has a statistics module in the standard library.
learnpython,3bpj0y,stebrepar,1 point,Wed Jul 1 12:44:43 2015 UTC,"I saw that when I was trying to Google a solution. I downloaded a 3.4 iPython environment for my PC, but since there have been some great answers here I might just stick with 2.7 for now because some of my other stuff doesn't work on 3."
learnpython,3bq1uy,mr-anony,3,Wed Jul 1 05:54:33 2015 UTC,"You have to call a method from a variable.   Second isn't a variable, its the name of the class, so Second.second_level() doesn't work. game is a variable of type First(), but it's a variable, so game.first_level() does work.  Now I don't know your game, but you probably shouldn't be calling second_level() from first_level(), as a style rule more than anything. When a function ends you return to the line that calls it, so unless you want to return to level 1 when you beat level 2, you might want to do something like this:  game = First() game.first_level() game = Second() game.second_level()   You could also use static methods and do something like this:  First.first_level() Second.second_level()   I'm going to let you research static methods and see if that's something you want to do."
learnpython,3bq1uy,ripread,1 point,Wed Jul 1 13:38:30 2015 UTC,"Thank you for explaining better, i call second_level from first_level and throughout because later in the game different choices lead to different levels and returning to the line that called it wouldn't work? And for static methods, i need to read up on them properly but i did try using them and it worked up until the point i couldn't access my methods from Base...which i need in every level of the game."
learnpython,3bq1uy,ripread,2,Wed Jul 1 14:50:03 2015 UTC,"You could do something like:  def first_level():     #do stuff     return Second()  game = First() while game is not None:     game = game.level()   You'd need to make sure each class had a function called level, instead of first_level, second_level, etc. You should put level in Base, and have the inheriting classes overwrite it if you do this."
learnpython,3bq1uy,zahlman,1 point,Wed Jul 1 15:18:34 2015 UTC,"Thanks man, i'll have a mess about with it later when i get a chance hopefully it works"
learnpython,3bq1uy,zahlman,4,Wed Jul 1 15:29:20 2015 UTC,"It means exactly what it says.  Second.second_level()   How exactly do you expect this to work?  game = First() game.first_level()   Do you see the fundamental difference between the portion of the code that works and the portion of the code that doesn't?  Where the error message says ""must be called with   Second instance"", in your own words, what is a ""Second instance""? (If you don't know, look again at the working portion of the code, and see if you can make an educated guess.) Do you have such an instance anywhere in your code, as it stands? (Hint: no.)"
learnpython,3bqgbn,deucex403,1 point,Wed Jul 1 09:06:21 2015 UTC,"Note, you only need that .whl if you're using 64 bit. If you're on 32bit, you can just  pip install pygame   and life is muccccccccchhhh easier :)"
learnpython,3bqgbn,sentdex,0,Wed Jul 1 13:48:03 2015 UTC,Googling is not a supported wheel on this platform gave me this thread which seems to have a solution for numpy. I think that you could do a similar thing to solve your problem.
learnpython,3bp6hl,YouAreSalty,1 point,Wed Jul 1 01:02:18 2015 UTC,"A couple of thoughts - I'm currently writing primarily in 3.4, albeit on a Linux system right now. I can offer answers to a few of these:  a) I assume it's some kind of de facto standard - Debian, for example, has both a pip and a pip3, and a python (which points to 2.7), python3 and python3.4.  b) pyvenv is the name of the wrapper script, while venv is the name of the Python module.  You could probably write your own wrapper script - Ubuntu ships with this as /usr/bin/pyvenv, I imagine it would work.  #!/usr/bin/python3.4 if __name__ == '__main__':     import sys     rc = 1     try:         import venv         venv.main()         rc = 0     except Exception as e:         print('Error: %s' % e, file=sys.stderr)     sys.exit(rc)"
learnpython,3bp6hl,adamnew123456,1 point,Wed Jul 1 14:01:26 2015 UTC,"a) I assume it's some kind of de facto standard - Debian, for example, has both a pip and a pip3, and a python (which points to 2.7), python3 and python3.4.   Ah, so it is a relic from linux. It makes sense as they have issues moving to python 3.x from 2.x to keep the versions separate.  One of the most frustrating things about Python is the little oddities done for some reason that will make sense if you know why, but if you just start out it is like wtf? :D   b) pyvenv is the name of the wrapper script, while venv is the name of the Python module.   The wrapper script will start venv.main(), but how does the function get the arguments?  I don't see that being passed in?  On linux, python is installed natively and everything just works. A script isn't special, and you can often execute a script without starting the interpreter.  On Windows, you have to give the interpreter the script from the command line (as far as I know). It seems reasonable to make pyvenv an executable just like pip since it is used so much. I suppose I can make a batch file, but....  I appreciate the help! ;)"
learnpython,3bplq9,son_of_badger,1 point,Wed Jul 1 03:17:28 2015 UTC,Does it work if you enter 0 into the sag field rather than leaving it blank?
learnpython,3bplq9,tnvol88,1 point,Wed Jul 1 03:33:08 2015 UTC,"Yes it does, but I'm unsure if my users will know to do that. They will likely be tradesmen and construction workers who will give up if it doesn't work intuitively."
learnpython,3bplq9,tnvol88,2,Wed Jul 1 03:42:13 2015 UTC,"You could populate the fields with zeros by default but there are probably better solutions.   Instead of using three conditions in your if and elif statements,  why not just test for the missing value instead?   If sag == None (syntax may not be right, perhaps False?)do stuff with the other the variables.  Elif do the formula which requires sag   Else print error message and reset fields to try again.  Right now your code isn't running past the if statement because it's trying to float a value that doesn't exist."
learnpython,3bplq9,tnvol88,1 point,Wed Jul 1 03:58:13 2015 UTC,"My problem is I don't know the syntax for a lot of stuff. I'll try ""If sag == False.   The Else is just for my testing. The final result will be 1 if, 2 elif, and one else. One for every variable.  edit: It worked!!! str(self.tensionLine.text()) == """": Double quotes worked. Thank you!!!!!"
learnpython,3bplq9,lamecode,1 point,Wed Jul 1 04:01:46 2015 UTC,Just remember as you're creating the condition statements that you only need to know what value is missing in order to know which formula to use. That's easier than testing for which the values are present.    The missing value will match either None or False I'm pretty sure.  Bear in mind that I'm very much a python novice.  You could have it print the empty values to see how they're being evaluated as a test.
learnpython,3bplq9,lamecode,1 point,Wed Jul 1 04:13:09 2015 UTC,"It's like text boxes and floats don't get along. I could use a spinbox but that always says ""0"" and I want it blank."
learnpython,3bplq9,tnvol88,1 point,Wed Jul 1 03:57:13 2015 UTC,What if you use default values when the form loads - including 0.0 for sag?
learnpython,3bplq9,scoutyx,1 point,Wed Jul 1 03:45:43 2015 UTC,"Where would that go? I want the function to work every time click the button. So if I make a default it will work only once. Then when I enter new values then click again it will error. I would need some way to reset, then read the textbox. Correct me if I'm wrong, I'm a noob."
learnpython,3bplq9,tnvol88,2,Wed Jul 1 03:50:53 2015 UTC,"I can't actually view your code as github is blocked where I am right now, but I think input validation is the solution here most likely. If someone accidentally enters a letter rather than integer in one of the boxes, you want it to pop up with a msg box - ""Invalid character in Span - Please use only full numbers"", etc. to prevent an exception being thrown, and you could do the same for the sag field with a Try/Except condition - test that you can make the field a float, and throw a msg box if not, before progressing to the stage of your code where the exception will be generated."
learnpython,3bod3l,CaptainBroccoli,3,Tue Jun 30 20:54:02 2015 UTC,"I recommend Lynda.com's Python GUI Development with Tkinter.  I created an account just for it and I'm very happy about it. Granted, I only plan to use it during the 10 days trial."
learnpython,3bod3l,marcovirtual,2,Tue Jun 30 21:36:23 2015 UTC,"I found the official Tk tutorial pretty good for getting started. All of the examples are demonstrated in multiple languages, including python.  http://www.tkdocs.com/tutorial/"
learnpython,3bod3l,le_Dandy_Boatswain,1 point,Tue Jun 30 23:07:50 2015 UTC,I'll try reading this again..  Thanks!
learnpython,3bod3l,zibethela,1 point,Wed Jul 1 00:08:31 2015 UTC,"I used this: http://effbot.org/tkinterbook/  It is a bit outdated, but many of the concepts are still relevant. Kivy is another module that can be used to create user interfaces in Python if you are not enjoying tkinter."
learnpython,3bod3l,UpBoatDownBoy,1 point,Wed Jul 1 07:10:15 2015 UTC,Try sharing your code so others can take a stab at it and point out what's wrong.
learnpython,3bouv9,sdrawkcaBmI,2,Tue Jun 30 23:06:04 2015 UTC,"The easiest by far is to use the built-in pickle module (here is the documentation and here are some examples of how to use it). It allows you to save a python object to file and read it back again.  Secondly, you could try writing functions that write and read your data to a text file.  Thirdly, you could check out using a database such as sqlite3. This is definitely not what you should do first though, as it requires you to use a completely new language with it's own syntax (sql). Yes, this is the way to go if you have five thousand records, but you don't. Go for the easier routes first, there's no reason to overcomplicate it as a beginner. You could always try to use all three methods."
learnpython,3bouv9,Ran4,1 point,Wed Jul 1 11:03:57 2015 UTC,"Thanks for the reply! I like the look of the pickle method, but is there a way of using pickle to let the user create an instance of a class? Like if the user wanted to create a new account, could the pickle method create an instance of the bank account class and fill in the account name, pin, and initial balance?"
learnpython,3bouv9,echocage,1 point,Thu Jul 2 01:42:40 2015 UTC,"I'd recommend looking into somekind of datastore, sqlite's the easiest choice, this will allow you to save data to a database so you can keep track of balances and accounts even when the program restarts."
learnpython,3bouv9,jkudria,1 point,Tue Jun 30 23:19:15 2015 UTC,"This. You can store it all in memory, and that might be a viable solution for (very) small scale, but any bigger and it becomes a real hassle. Look into databases or json. It's nice to learn how to handle json anyways - it's quite useful and may very well come in handy some time in the future."
learnpython,3bouv9,Ran4,1 point,Wed Jul 1 04:03:34 2015 UTC,"That is completely overkill for a beginner, and not the right choice at the moment."
learnpython,3bouv9,Zahand,1 point,Wed Jul 1 11:06:48 2015 UTC,you could save the values to a txt file.
learnpython,3bnh31,imdbbot2,2,Tue Jun 30 17:06:37 2015 UTC,"Just after a quick overview I gotta wonder, is there any specific reason you're indenting 8 spaces rather than 4 as dictated by the PEP-8?  Otherwise, except for some excessive spacing in some places, generally it looks good."
learnpython,3bnh31,jkudria,2,Wed Jul 1 04:14:26 2015 UTC,I really like the movie Nightcrawler starring Jake Gyllenhaal.   This is a sample demonstration for the IMDb bot.
learnpython,3bnh31,crm7290,2,Wed Jul 1 05:08:27 2015 UTC,"Movie Details:   Title: Nightcrawler  IMDb Rating:  7.9   Director(s): Dan Gilroy  Writer(s): Dan Gilroy  Genre(s): Crime, Thriller  Runtime(s): 117 min  Description:  When Louis Bloom, a driven man desperate for work, muscles into the world of L.A. crime journalism, he blurs the line between observer and participant to become the star of his own story. Aiding him in his effort is Nina, a TV-news veteran.    This is a bot post. Message for suggestions/feedback."
learnpython,3bpcfl,Nachozombie,4,Wed Jul 1 01:56:17 2015 UTC,"print('Well, ' + myname ' + ', I am thinking of a number between 1 and 20.')]    Concatenation operator and opening quote missing (in bold above)."
learnpython,3bpcfl,ludonarrator,1 point,Wed Jul 1 02:01:22 2015 UTC,thanks for your help
learnpython,3bpcfl,ludonarrator,2,Wed Jul 1 02:06:40 2015 UTC,No worries. :)
learnpython,3bpcfl,Strattonshrugged,3,Wed Jul 1 02:09:59 2015 UTC,"I noticed the book uses ""myName"" and you entered ""myname"", difference of a capitalized letter N. Might this be it? Is it throwing you an error or just doing something weird?"
learnpython,3bpcfl,Tomarse,1 point,Wed Jul 1 02:13:53 2015 UTC,"Since you have Python, try this next time...  >>> ""[print('Well, ' + myname ', I am thinking of a number between 1 and 20.')]"" == ""[print('Well, ' + myName + ', I am thinking of a number between 1 and 20.')]"" False >>> len(""[print('Well, ' + myname ', I am thinking of a number between 1 and 20.')]"") 74 >>> len(""[print('Well, ' + myName + ', I am thinking of a number between 1 and 20.')]"") 76   So the book has two extra characters."
learnpython,3bpcco,MrCyprus,3,Wed Jul 1 01:55:42 2015 UTC,"class Monster(object):           def __init__(self, round_number):         ...         dfn = round_number[name]['dfn']   your monster stats are merely local variables inside init() and get discarded as soon as init() finishes. No wonder they are not accessible, they don't belong to the object because they are not bound to it via self.X"
learnpython,3bpcco,Vaphell,1 point,Wed Jul 1 02:44:17 2015 UTC,"Thank you sir.  I had tried adding the self. prefix to just about every variable on the right side of the '=' multiple times each.  I never thought to put it on the left side.  Clearly my understanding of .self is lacking.  Nevertheless, I got the code running again and the random function is running as intended and I now have a better undertanding of .self  Now to add a shop, incorporate a 'flee' function and and make some abilities."
learnpython,3bpcco,ripread,2,Wed Jul 1 04:22:01 2015 UTC,"Just a tip, Fight probably shouldn't be a class, just a function. It has no class variables, no methods, and it's only called for it's _init_ function."
learnpython,3bohp1,Nebucatnetzer,2,Tue Jun 30 21:26:25 2015 UTC,"Sry for not having a proper answer but just wanted to say:  ""Choose the decired activity:""   it's desired  But hey gl seems fun"
learnpython,3bohp1,babaduv,1 point,Tue Jun 30 21:34:29 2015 UTC,Thanks I'll correct it :).
learnpython,3bohp1,JayTh3King,1 point,Wed Jul 1 05:02:10 2015 UTC,"t =threading.Thread(target=pet_functions.decrease_hunger) t.start()   your function decrease_hunger() has no return value, you also don't have a callback to check the state of hunger. So you are basically running a thread with the pet decrease hunger function and returning nothing into your while loop to change the state of the program."
learnpython,3bp3pv,bulba5aur,1 point,Wed Jul 1 00:21:44 2015 UTC,To get a more complete answer post web source And your code
learnpython,3bo9ho,MrCyprus,5,Tue Jun 30 20:27:00 2015 UTC,"When you access an element of a dict, you use its key inside square brackets: dict['key']. The object that this returns could be anything, including another dict.  Well, how do you get an element of that dict? Add a key in square brackets to the end:  dict['key1']['key2']['key3']   The error you're getting is a simple syntax error. Move the square brackets so that it reads master_list['MrCyprus']['name'].  Easy peasy. :)"
learnpython,3bo9ho,JustTurrble,1 point,Tue Jun 30 20:33:23 2015 UTC,Thanks man!
learnpython,3bo9ho,novel_yet_trivial,5,Tue Jun 30 20:37:57 2015 UTC,You were very close.  print master_list['MrCyprus']['name']
learnpython,3bo9ho,LackOfIntolerance,1 point,Tue Jun 30 20:31:34 2015 UTC,Thanks!
learnpython,3bo9ho,JustTurrble,3,Tue Jun 30 20:37:44 2015 UTC,"Use  print master_list['MrCyprus']['name']   instead of  print master_list['MrCyprus'['name']]   this is practically the inline version of   mrCyprus = master_list['MrCyprus'] print mrCyprus['name']   And the next line will do nothing since there is no dictionary item with the key 0  you could use something like this  master_list['MrCyprus'].get(key, some_default_value)   then it will try to return the value for the dicitonary item with the key and if this key is not in the dictionary it will return some_default_value.  EDIT:  Python handles your String as a List  >>>'foo'[0] 'f'   will return the letter with index 0 in the String. In your case it's 'M'. And if you write   'MrCyprus'['name']   python thinks you want to have a specific charakter in the String, but then it doesn't discover any Integer that could be used as index and throws an exception."
learnpython,3bo9ho,LackOfIntolerance,1 point,Tue Jun 30 20:35:11 2015 UTC,"A little bit over my head, but I appreciate the intel!"
learnpython,3bo9ho,JustTurrble,4,Tue Jun 30 20:38:18 2015 UTC,"His last point is that trying master_list['MrCyprus'][0] will cause a KeyError: in the dict for 'MyCyprus', there is no key 0.  If you want to check for a key, avoid the error if it doesn't exist, and have a default value handy in that case, you would use .get(key, default), where key is in this case 0, and the default could be ""potato"", for all we know. :)  EDIT: and the point in his edit says that, since strings can be indexed, 'MyCyprus'[0] returns the character ""M"", since it's at the start of the string. 'MyCyprus'[1] would be ""y"", and so on.  Little nuance to be aware of. :)"
learnpython,3bo9ho,LackOfIntolerance,2,Tue Jun 30 20:41:08 2015 UTC,Sorry I read it again and I see that it's somewhat poorly explained. But luckily /u/JustTurrble understood.
learnpython,3bo9ho,JustTurrble,2,Tue Jun 30 20:51:50 2015 UTC,;)
learnpython,3bo9ho,Justinsaccount,1 point,Tue Jun 30 20:54:20 2015 UTC,"Could you explain to me why this doesn't work?  http://pastebin.com/RFN3gwZ7  In line 37 I assign active_enemy to a random dict in monsters{} and then in line 38 I attempt to call specific key within that random dict now assigned to active_enemy, but I am once again getting the same error.  I assume it is syntax again but I can't seem to get it right.  EDIT:  Ignore the Monster() class.  I should have taken it out before pasting because it isn't relevant to my question at all, as I'm sure you can see.  EDIT 2:  Hey nevermind, I actually got it.  I figured out that the proper syntax is self.monsters[active_enemy]['atk']  Thanks again for your help!"
learnpython,3bo9ho,JustTurrble,1 point,Tue Jun 30 21:14:26 2015 UTC,In line 37 you just choose one random key  so line 38 would have to be  active_enemy_atk = self.monsters[active_enemy]['atk']
learnpython,3bo9ho,zahlman,1 point,Tue Jun 30 21:19:27 2015 UTC,"dict.keys() returns a sequence of keys from the dictionary. Python 2 returns a list of strings, which are the key values; Python 3 returns a ""dict_keys"" object, which serves roughly the same purpose in most cases, but creates a problem here, since it cannot be indexed (random.choice gets a random item by its index from the sequence).  The important thing is that you're selecting a random choice from those keys, and not getting back one of the objects they represent. So when you try active_enemy['atk'], you're trying to get some index 'atk' from the string of that key you've chosen.  This can still work in Py2 by changing line 38 to read:  active_enemy_atk = self.monsters[active_enemy]['atk']   Since Python 3 uses the dict_keys object that can't be indexed, it is somewhat more complex:  active_enemy_key = random.choice(list(self.monsters.keys())) active_enemy_atk = self.monsters[active_enemy_key]['atk']   list(self.monsters.keys()) will explicitly convert the dict_keys object to a list, which can then be indexed, and random.choice can use it. It makes no real change in Python 2, but it ensures the code can be used in both versions. :)  EDIT: words and me stupidly using a list comprehension when list() will do. light facepalm"
learnpython,3bo2wz,Sirkk,3,Tue Jun 30 19:39:34 2015 UTC,"Is the issue inconsistency, or just lag? If it's lag, this fix might help:  pygame.mixer.pre_init(44100, - 16, 2, 1024)  I put this directly before pygame.init()  Disclaimer: I have no idea what this does, all I know it's it fixed the lag issue I had with pygame when getting sound effects to work with a game/exercise I did once.  If you can't figure it out maybe try posting to r/pygame, it's reasonably active. Good luck."
learnpython,3bo2wz,callmelucky,2,Wed Jul 1 08:32:18 2015 UTC,"Thanks dude, this worked! :)"
learnpython,3bo2wz,callmelucky,2,Wed Jul 1 10:33:44 2015 UTC,"Oh really? Haha, great! I almost didn't bother posting, it seemed to me like the chances of it being the same issue were slim..."
learnpython,3bo2wz,novel_yet_trivial,1 point,Wed Jul 1 11:23:42 2015 UTC,"time.sleep() and threading.Timer() are both very accurate. I guess the delay is in the mixer. I have never used pygame, so forgive me if this does not work, but try this:  tick = pygame.mixer.Sound(""\\sounds\\woodblock.mid"")  while True:     tick.play()     time.sleep(0.2)   Edit: also, are you sure the mid file does not have some silence on the end? The time between ticks is probably the sleep time plus the length of the sound clip."
learnpython,3bo2wz,novel_yet_trivial,1 point,Tue Jun 30 20:13:11 2015 UTC,"sadly this gives me the following error:  Traceback (most recent call last):   File ""C:/Users/Leo/PycharmProjects/PyMetronome/main.py"",     line 11, in <module>     tick = pygame.mixer.Sound(os.getcwd()+""\\sounds\\woodblock.mid"") pygame.error: Unable to open file 'C:\\Users\\Leo\\PycharmProjects\\PyMetronome\\sounds\\woodblock.mid'   I had already tried this, don't know what's up with this :/  Edit:  Fixed the path, still getting the error.  Also about the silence at the end: That would still lead to consistency, which I don't get at all. The delay is seemingly random."
learnpython,3bmlii,shaun252,3,Tue Jun 30 13:04:52 2015 UTC,"Numpy and scipy: specifically, for example, Brent's algorithm, if it's the same: http://docs.scipy.org/doc/scipy/reference/tutorial/optimize.html  Edit: this may be more what you're after - towards the end there's a brief discussion of integrating C: http://docs.scipy.org/doc/scipy/reference/tutorial/integrate.html"
learnpython,3bmlii,tyggerjai,1 point,Tue Jun 30 13:07:52 2015 UTC,Thank you
learnpython,3bogd8,montecarlo1,4,Tue Jun 30 21:17:05 2015 UTC,"customers.budget =- abs(bikes.retail_cost)   This is setting the budget to negative the absolute value of the retail cost each time, rather than subtracting as you might intend. So, if the cost of the bike is 24, this assigns -24 to the customer's budget, no matter what it was before.  -= would subtract that cost from the budget and then set the budget to that value, instead."
learnpython,3bogd8,JustTurrble,2,Tue Jun 30 21:34:39 2015 UTC,"Maybe:  for customers in cust_list:     for bikes in bike_list:         if customers.budget > bikes.retail_cost:             # not real sure I understand what you want to do here.  Unless             # you really needed it set up this way, I would make             # shopping_cart a list, and just add the entire bike object             customers.shopping_cart[bikes.model]= bikes.retail_cost             # your problem is likely the =-, rather than -=             # but I have not checked the math             customers.budget =- abs(bikes.retail_cost)             print customers.budget"
learnpython,3bogd8,gengisteve,1 point,Tue Jun 30 21:32:56 2015 UTC,I really suck at meshing the instances of different classes to work together. Any suggestions on that regard?
learnpython,3bogd8,gengisteve,2,Tue Jun 30 21:40:34 2015 UTC,"Nah.  You are doing fine.  You might try abstracting out a bit further, and write a method like customer.afford(bike) that returns true/false if the customer can afford a bike.  Those can help, even if they are of marginal utility.  Maybe also a customer.add_shopping_cart(bike) that appends it to the shopping cart and reduces the customer's budget.  Then this code becomes:  for customer:     post_inventory = []     for bike in shop.inventory:         if customer.can_afford(bike):             customer.add_shopping_cart(bike)         else:             post_inventory.append(bike)      # so you don't get the looping confused by removing bikes as you go     store.inventory = post_inventory    This is both the good and bad of OOP.  You get a more cluttered interface (by adding things like afford to do simple logic), but it reads more easily."
learnpython,3bogd8,gengisteve,1 point,Tue Jun 30 21:49:28 2015 UTC,"This is a pretty good suggestion. In fact its not that far away from one of my specifications to the practice problem. Its asking for me provide a list of affordable bikes for each customer. I would have to update list, print out customer.name plus list then reset to 0 before it moves to the next customer."
learnpython,3bogd8,gengisteve,1 point,Tue Jun 30 21:54:54 2015 UTC,"Cool.  Conceptually some of these things might be best as methods of the store.  (One hard thing about OOP is figuring out where things go.)  So maybe you need store.affordable_bikes(customer) that returns a list of bikes in inventory that the customer can afford.  Or maybe make it more general, so store has less dependencies on customer by making it store.bikes_under(budget).  (I'd probably lean this way, since you otherwise don't need the method to care about the customer.  The answer might be different if it also wanted to know the sex of the customer, riding preference, size, etc.)  ShoppingCart is another head-scratcher, since carts belong to the store (just try and take one home), but are also associated with customers (except when they are sitting out in the parking lot blocking traffic)."
learnpython,3bogd8,gengisteve,1 point,Tue Jun 30 22:23:52 2015 UTC,I made a class method under Bike Shop. Can you please tell me what is wrong with it? Here is where I would need interaction from both Bike and Shop classes.   def bikes_under(budget):         affordable_bikes = []         if budget > Bicycle.retail_cost:             affordable_bikes.append(Bicycle.model)      return affordable_bikes
learnpython,3bogd8,JustTurrble,1 point,Wed Jul 1 09:39:25 2015 UTC,"notes = ''' Getting there.  A couple points:      1.  Your BikeShop instance should probably store the actual bike instances     in inventory, and not just a dictionary of different attributes of the     bikes, since the BikeShop, in effect, owns the bikes.      2.  You probably should not use class methods until you get the hang of     instance methods.  (They are useful, but not yet to you -- basically they are     good for alternative constructors and methods that references one another,     but are instance agnostic.)  Remember that instance methods take as the     first argument self.  Also, since bike_inventory will have each bike     instance in it, you can probably figure out the rest  '''  class BikeShop(object):     def __init__(self, store_name):         '''         initialize a BikeShop object with name = store_name,         create an empty inventory list         '''         self.store_name = store_name         self.bike_inventory = [] # a list of bike objects        def bikes_under(self, budget):         '''         return a list of all bikes in self.bike_inventory cheaper than budget         '''"
learnpython,3bogd8,JustTurrble,1 point,Wed Jul 1 16:25:22 2015 UTC,How do you get customer.budget into the BikeShop class?
learnpython,3boab7,warriortux,1 point,Tue Jun 30 20:32:48 2015 UTC,"I use threading.  python 2 https://docs.python.org/2/library/threading.html  python 3 https://docs.python.org/3/library/threading.html  Example:  import threading  data = #datagoeshere myDict = #some items to fill it myThreads = [] for key, val in myDict.iteritems():     myThreads.append(threading.Thread(target=val,args=data))     myThreads[-1].start()   Multiprocessing can get quite complex for starters.  EDIT:  Sometimes if more than one Thread accesses a specific line of code simultaneously it cann cause problems and your programm might turn crazy or just terminate. To prevent this take a look at the threading.Lockand/or threading.RLock classes."
learnpython,3boab7,LackOfIntolerance,1 point,Tue Jun 30 21:04:03 2015 UTC,"Threading is not great for ""calculations"", it is much better for IO bound activity, especially if the hold up is occurring in another system.  The paradigmatic use case for threads is scraping webpages.  If you have a processor bound calculation, you are not going to get much from threads.  OP:  It might help to give us more specifics about the problem you are trying to solve."
learnpython,3boab7,gengisteve,2,Tue Jun 30 21:28:39 2015 UTC,"you are not going to get much from threads.   Well, to be precise, you'll get a big hit in performance if you have processor bound application.  I know you know this, but I think it's important to plainly state to beginners that, with most Python interpreters, threads are detrimental to performance for CPU bound threads due to the GIL (includes some benchmarks showing slow downs)."
learnpython,3boab7,TagSmile,1 point,Tue Jun 30 21:53:23 2015 UTC,Very nice link!
learnpython,3boab7,gengisteve,1 point,Tue Jun 30 22:15:15 2015 UTC,^^This. Watch out for Python's Global Interpreter Lock—it prevents the CPU from running multiple threads at the same time.
learnpython,3boab7,anonymousperson28,1 point,Tue Jun 30 22:11:21 2015 UTC,"Thank you for your message.  I am trying to implement clustering (machine learning), I placed all these clusters in a dictionary with the key being the cluster-id. For each cluster, I need to call a complex function, that gets various properties of the cluster (involves time taking calculations). So I am trying to user multiprocessing, to trigger the same function on all the cluster objects in the dictionary."
learnpython,3boab7,gengisteve,1 point,Wed Jul 1 01:06:34 2015 UTC,"Threading is probably right out, for the reasons mentioned above.  Multiprocessing (https://docs.python.org/2/library/multiprocessing.html) might work, but there are a lot of details that need to be sorted out before we can provide much advice.  Basically, a good multiprocessing task is one in which you could conceive having  three or four people working independently to a result, on a set of materials that are not particularly onerous to transmit back and forth to one another.    For example, say you wanted to count from a number n to n + 100, by ones, returning only the result, but for 100, 200, 300, and 400, and you had four friends.  Each friend could count n + 100 independently.  Coordination costs are minimal, just shout start and they shout what they finish at.  This is an excellent multiprocessing task.  But if you wanted to count n + 100, starting at 100, and continuing four times from the result, really only one guy could be working at a time.  Here multiprocessing would not be much use.  Further, say you had the fixed start points (i.e. 100, 200, etc.), but wanted not just the end result, but to see the work as well (i.e. 101, 102, etc.).  Then it still is probably better to have your four friends divide the task into four parts, and give you back all the numbers.  (i.e. good multiprocessing task.)  But if you just wanted to go to n+2, the whole getting your friends together, explaining the task, and getting back the result would probably take longer than you just doing it yourself.  (i.e bad multiprocessing task -- too much set-up/tear-down cost.)  All these problems plague any sort of parallel processing task.  How much does it cost to set-up, how much can truly be done independently, and how much trouble is it going to be to integrate the various results.  (Finally, as an aside, the GIL from threading is basically the same as the last example, except that there is only one pen, so no matter how many people you had counting up to n+100, they would probably spend their time fighting over the one pen and you would have just been better off doing the whole thing yourself.)  With those obstacles in mind, I am sure people here would be happy to offer some advice, if you provided a more concrete example of what you are trying to do."
learnpython,3ble8t,TempixTL,2,Tue Jun 30 04:09:17 2015 UTC,"Impressive for beginner's project!  How checktime works? I don't get it:  >>> checktime(10, 13) Currrent time is 12:28 sleeping for 0 hours and 32 minutes (1920 seconds) >>> checktime(10, 12) Currrent time is 12:28 sleeping for 13 hours and 32 minutes (48720 seconds) >>> checktime(12, 10) Currrent time is 12:29 sleeping for -3 hours and 31 minutes (-8940 seconds)   upd: made some comments on github  Overall, naming and formatting are kinda bad (but I'm pep8-nazi); module for every function is a questionable idea (at least tweet and dms should be in one module); inconsistent use of string formatting; too much logging and obvious comments; overcomplicated checktime logic.  Still, this is a great complex project, way above halfway-through-codecademy level. If feedback sounds harsh and muddy, it's because my english is kinda bad. Feel free to ask and I'll try to explain what I mean"
learnpython,3ble8t,04h,1 point,Tue Jun 30 09:32:46 2015 UTC,"Thanks for the praise (and for helping)!   Regarding checktime, I agree it is a mess, it's supposed to take 2 integers (0-24, inclusive), where the former int is smaller than the latter. These integers represent 2 different times in a 24-hour format and the function will calculate the time it needs to sleep until it reaches that exact hour, but I realize it's shortcomings looking back on it haha. Regarding naming and formatting, I just googled pep8 and found this, which I will definitely be taking a good read through, thanks! For all the separate modules, I just finished my first Computer Science course in high school (learning Java) and my teacher always stressed that you can never have too many different classes. I applied that to Python not really knowing wether or not it was correct, I wouldn't be surprised if that's unconventional in Python. Sorry, but I'm not exactly sure what string formatting refers to, but for the logging and comments, I just discovered the logging module at the end of the project and kind of went crazy lol, and I do comment a ton, I figure it's better than not commenting at all but I understand some of it was pretty obvious.   (And I got the notifications for the ""Pull Request"" on Github, but I'm not entirely sure what to do about that, I did take a quick read through your changes though)"
learnpython,3ble8t,04h,1 point,Tue Jun 30 13:56:26 2015 UTC,"About modules. There are good example in your own code: tweetretriever. 4 related functions combined in one module. Nice and simple. No reason to separate them. I think tweet and dms should be in one module because they are related: post message - get message. Easy to find, easy to use.  String formatting: minor thing. Sometimes you use it logger.debug(""Sending annual email to %s..."" % emailrecipient), sometimes not logger.debug(""The tweet \'""+statusupdate+""\' was added to pasttweets.txt""). Sometimes there are mix of them:  emailbody = ""@youraccount has %s new DMs.\n\n"" % (len(newDMs)) for x in newDMs:     emailbody += x + ""\n""  emailbody += ""\n""   Last one can be simplified to:  messages = '\n'.join(newDMs) emailbody = '@youraccount has %s new DMs:%s\n' % (len(newDMs), messages)   Or even emailbody = '@youraccount has {} new DMs:{}\n'.format(len(newDMs), '\n'.join(newDMs))  (.format is a modern version of % string formatting)   And I got the notifications for the ""Pull Request"" on Github, but I'm not entirely sure what to do about that, I did take a quick read through your changes though   Yep, it's just some changes in one file and a few comments in other. Somehow you can merge it with your code (I'm not familiar with github, still learning how to do things), but changes are not well tested."
learnpython,3ble8t,04h,1 point,Tue Jun 30 16:50:27 2015 UTC,"I see what you mean about modules and string formatting, thanks for the clarification and tips! I really like your simplified version of the email body (although the .format one is new to me).  I will definitely be fixing up my code in the next few days with tips you and the other people here have suggested to me. And I actually just finished re-writing checktime.py (which I will also rename) so it's simpler, shorter, and easier to use. It now takes a list of integers in any order as opposed to only 2 integers in order of least to greatest (if you're interested)!"
learnpython,3ble8t,04h,1 point,Tue Jun 30 17:26:49 2015 UTC,"New version of checktime is much simpler and logical!  I was curious about this task (scheduler) and dig some documentation about time-related modules (I thought there must be a really simple way to do it coz it's python :) and come up with something like this:  from datetime import datetime from time import time, ctime  # wake up hours. integers [0-23] alarms = [12, 0, 22, 9]  def sleepy(alarms):     now = datetime.now()     epoch = time()     for _ in range(16):         # alarms converted to datetime objects         dt_alarms = [now.replace(hour=x, minute=0, second=0) for x in alarms]         # timedeltas (in seconds) between now and wakeup times         difference = [(x - now).seconds for x in dt_alarms if x != now]         # in case of single alarm         closest = 24 * 60 * 60 if not difference else min(difference)           epoch += closest         print('Now {}.\nI will be sleeping {} seconds and wake up on {}\n'.format(             ctime(epoch - closest), closest, ctime(epoch)))         now = datetime.fromtimestamp(epoch)  if __name__ == '__main__':     sleepy(alarms)   Demo version doesn't really sleep. Instead it fast-forwarding time, grab another alarm and so on. Still a bit messy, but real scheduler will be cleaner without duct-taped time-machine"
learnpython,3ble8t,manueslapera,1 point,Wed Jul 1 07:06:59 2015 UTC,"Interesting! I will have to look into this further to figure out how exactly it works, but thank you so much for all your help! You have really helped my improve my project as well as my Python skills!!"
learnpython,3ble8t,manueslapera,1 point,Wed Jul 1 18:37:20 2015 UTC,"You are welcome  Benefit of this solution: all math is done by datetime lib (that's the point of converting original integers to datetime objects)  It heavily based on list comprehensions: basically, funny formatted for-each loops, accumulating results in list (not sure about similar thing in Java)"
learnpython,3ble8t,VanNostrumMD,2,Wed Jul 1 19:19:49 2015 UTC,"minor quirk, in here , i always recommend using environment variables versus writing the user password on the file.  If not, there are chances that you will forget and push your personal information to a public github (cmon guys, dont pretend like it never happened to any of you)."
learnpython,3bo6rn,SovietChaoz,3,Tue Jun 30 20:07:29 2015 UTC,"The easiest way is to stick all of the lines in a list and then use ""\n"".join():  lines = [] for x in batting_output:     print x     lines.append(""{} {} {} {} {} ..."".format(...)) team_text.write(""\n"".join(lines))   Similarly, you can replace your long ""{} {} ..."".format(x[0], x[1], ...) with "" "".join(x), as long as all of the items of x are str objects. If they aren't all str objects, you can change that to "" "".join(str(item) for item in x).  Lastly, note that it's generally a Windows thing to consider a newline to be a line delimiter. If you're working with the traditional Unix command-line programs (and really most command-line programs on Linux/Mac, in my experience), a newline is usually considered to be a line terminator (so ending with a newline character is expected)."
learnpython,3bo6rn,kalgynirae,2,Tue Jun 30 20:18:58 2015 UTC,""" "".join(str(item) for item in x)   or "" "".join(map(str, x))"
learnpython,3bo6rn,novel_yet_trivial,1 point,Tue Jun 30 20:24:51 2015 UTC,Yeah I'm working in Linux and Mac at the moment. I'm just trying to cover an issue that could arise when I process the text files im making. I am going to try your solution and see how it goes. It makes sense to me. Thanks!  Additionally: what does that join method do? Join all the lines together on every new line character or join all the lines to gather with a new line character?
learnpython,3bo6rn,JustTurrble,3,Tue Jun 30 20:22:05 2015 UTC,"Quick tip: you can use unpacking to write all the contents of a sequence without explicitly writing them out. This changes:  ""{} {} {} {} {} {} {} {} {} {} {} {} {}\n"".format(x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12])   into:  ""{} {} {} {} {} {} {} {} {} {} {} {} {}\n"".format(*x)     Refining that more, you can make a single string with the elements of a list easily using .join():  "" "".join(x)   This creates a string with each element of x joined by the contents of the original "" "" (a space). The result only puts the original string between each element, and avoids the possibility of adding an extra space at the end.    Going further than that, you can do this twice and use a list comprehension to get the same result in one line:  team_text.write(""\n"".join(["" "".join(map(str, x)) for x in batting_output]))   Note the map(str, x). Since join expects strings, they have to be converted first. Using map is the simplest method for that, mapping each instance of x to a string.    That's a bit more complex than you wanted, maybe, but that's the way of it. A simpler way is to enumerate the original list, and only write ""\n"" if you're not on the last index:  for i, x in enumerate(batting_output):     print x     team_text.write(""{} {} {} {} {} {} {} {} {} {} {} {} {}"".format(x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12]))     if (i < (len(batting_output)-1)):         team_text.write(""\n"") team_text.close"
learnpython,3bo6rn,JustTurrble,1 point,Tue Jun 30 20:24:25 2015 UTC,"I like this suggestion, it's pretty clean and simple. I will probably use this later when I get back to it. I may just write it a little more long hand so it's a little easier for me to read. I have to study some of the Python syntax bc I didn't know I can do loops within a function as such."
learnpython,3bo6rn,JustTurrble,1 point,Tue Jun 30 22:57:28 2015 UTC,"Loops are still loops. This, however, uses list comprehensions."
learnpython,3bo6rn,novel_yet_trivial,1 point,Wed Jul 1 14:18:18 2015 UTC,"For your one liner, why do you have square brackets?"
learnpython,3bny5f,Hypogeum,2,Tue Jun 30 19:05:46 2015 UTC,"Something like:  before, after = re.match(""(.*)([0-9])$"", s).groups() if before.strip().endswith('-'):     new = '+'.join((before.rstrip(""- ""), after)) elif before.strip().endswith('+'):     new = '-'.join((before.rstrip(""+ ""), after)) else:     new = '-'.join((before, after))   Probably should wrap the whole thing in a try block.    Here's a better way to calculate the row and column:  for idx, b in enumerate(button_list):     row, col = divmod(idx+10, 5) # 5 buttons per row, offset by 2 rows (2*5 = 10)"
learnpython,3bny5f,novel_yet_trivial,1 point,Tue Jun 30 19:51:52 2015 UTC,Thanks for the help! Can you explain your code on the rows and columns?
learnpython,3bnva9,markelonn,1 point,Tue Jun 30 18:47:09 2015 UTC,"Great start.  A few comments:   Try and follow pep8 a bit more closely for naming. More functions!  Break your code up into things like sanitize_url, valid_path, get_comic_url, etc. Try moving the inputs into sys.args.  Try argparse out or docopt or something.  Only get user input if nothing passed through args. Use if __name__ == 'main': to kick off the main program so you can re-use your code as a module. Check out beautifulsoup and requests, instead of the regex and urllib (although it is a good idea to know how urllib works, requests really is more elegant, and BS4 is much better suited to parsing web pages). Instead of while x<5 and x+=1 use a for loop. Explore generators.  Not necessary here, but could be sort of fun to learn and it will help you out when you have to worry about rate limiting and big data sets. Maybe try out threading.   I might try and fit your program into something like:  def scrape_comics(year, month):     ''' yield all comics from URL for year/month '''     text = get_page(year,month)     for found in text:         yield sanitize(found)  def download(save_path, comic_url):     '''     download comic_url to save_path     '''  def download_all(year,month):     path = make_path(year,month)     for comic in scrape_comics(year, month):         download(path, comic)  def main():     year, month = parse_input()     download_all(year, month)  if __name__ == '__main__':     main()   (Mind you I did not actually go through your code to actually figure out all the steps, this is more conceptual.  The goal is two-fold:  first, you will want to expand it, having it broken into pieces makes this vastly easier.  Second, in a couple months you will come back and forget all about how it works.  Having it in pieces lets you figure out what exactly its doing.)"
learnpython,3bmdy1,krippler_,1 point,Tue Jun 30 11:42:06 2015 UTC,"Well, I know this is off topic... But clearButt has officially become the best variable name I've seen :D"
learnpython,3bmdy1,Ewildawe,1 point,Tue Jun 30 12:23:17 2015 UTC,pep8 says variable names showld be like:  variable_name functions to   3. this:  import tkinter as tk from tkinter import * import random from random import randint   showld be:  import tkinter as tk from random import randint   there is no point in importing all the module and then saying to import just a function.   Can't you just do a function that is a pop up window that shows the randint?
learnpython,3bmdy1,Tuganazy,1 point,Tue Jun 30 13:35:19 2015 UTC,"thank you for the guideline info! and yes I first tried importing all of random, but when I tried to use randint it threw an error, so I added that without removing, as well something didn't work for tkinter so I tried importing all and then found the error elsewhere without removing it -_-  I would prefer the main window to display everything, but a separate pop up window may wok, I'll play around with that thank you."
learnpython,3bmdy1,Tuganazy,1 point,Wed Jul 1 03:24:45 2015 UTC,"When you do  import random and you want to use randint you need to do random.randint() , but if you do   From random import * you can just do randint() because it imports everything like it was all part of the same  .py and you don't need to reference the module. I'm also a beginner but I think that's why it's advised that we do -import random, because that way we have to reference the module and we get used to it and know what module has what function. Hope that helps and sorry for English :)"
learnpython,3bmdy1,Thunder_54,1 point,Wed Jul 1 05:52:00 2015 UTC,"That does help, thank you!   Also your English seems better than mine, and it's my first language."
learnpython,3bnhfv,DJ_Mission,2,Tue Jun 30 17:09:16 2015 UTC,Head on over to github and search for python repos
learnpython,3bnhfv,dixieStates,2,Tue Jun 30 17:16:14 2015 UTC,Check out the python cookbook.
learnpython,3bkurb,Freddie_V4,2,Tue Jun 30 01:21:43 2015 UTC,"Hi there,  I am not experienced enough to give in depth commentary on your scrape (at least not with absolute certainty) but let me at least ask you this:  Why do you use:   print(""File"", ""'"" + csvfilename + ""'"", ""exists\n"")   over  print(""File '%s' exists\n"" %(csvfilename))   I generally prefer using parameters for creating dynamic strings because it is easy to read (less "" and ') and easier to see which variable is being used. This is especially true when a string uses multiple variables."
learnpython,3bkurb,MinimalDamage,2,Tue Jun 30 09:56:22 2015 UTC,"Isn't it now recommended to use the string formatter for these type of things?  As in:  print ""{file} exists.\n"".format(file = csvfilename)   or  print ""{0} exists.\n"".format(csvfilename)   I am genuinely asking by the way, I have no idea which is better."
learnpython,3bkurb,sepehrhm,2,Tue Jun 30 12:46:59 2015 UTC,"It is best to use .format for interpolation rather than using %, but I dont think its preferred over addition (which is what OP has)."
learnpython,3bkurb,AltoidNerd,1 point,Tue Jun 30 13:02:51 2015 UTC,Ah I see. It doesn't make much difference in terms of readability either.  What would be difference between interpolation and addition though?  Isn't interpolation the general case of addition?
learnpython,3bkurb,sepehrhm,1 point,Tue Jun 30 14:44:22 2015 UTC,"Interpolation is unpacking a tuple into slots.  Its more obvious when you have more strings to unpack  ""This is {0}: {1} of the {2} {3}!!"".format(""2015"", ""Year"",  ""Linux"", ""Desktop"")   This is really the same as using % interpolation:  ""This is %s: %s of the %s %s!!"" % (""2015"", ""Year"",  ""Linux"", ""Desktop"")   With different, perhaps weirder syntax.  Its a personal choice.  The former has better visible indexing, and no awkward whitespace - since this is just a string, it make sense to write it as a method on a string, with no confusing white space.  Addition is very different.  Though I could contruct the string with addition,I entirely lose indexing."
learnpython,3bkurb,AltoidNerd,1 point,Tue Jun 30 15:01:46 2015 UTC,Oh. Right. I was thinking of doing that but it just slipped my mind! I knew I had missed something. Thanks!
learnpython,3bkurb,AltoidNerd,2,Tue Jun 30 13:39:24 2015 UTC,"Nice work. Here are my comments, or see Pull request    if not url.startswith('http://') and not url.startswith('https://'):                     url += 'http://'   This breaks ... it appends ""http://"" to the url.  You could perhaps try  url = 'http://' + url     Style guide -   csvfilename    should be  csv_file_name     It would be nice if I could run the script right away with command line args.  When I read the doc, I was thrown off for a second about the csv file for input.  I was hoping for something like  ./VScraper.py https://stallman.org/ jpg   ... or -  at least  ./Vscraper.py testcsv.csv jpg   The prompt is a little clunky.  For an anecdote, this happened to me:  altoidnerd@pion:~/vscraper $ python3 VScraper.py Enter the CSV file name you want to read from: testcsv.csv  File 'testcsv.csv.csv' does not exist in the current directory.   Doh!  Going further, the testcsv.csv isnt a nice csv template.  Maybe demostrate how multiple targets can be specified in readme.md?  Why not use a newline delimited file?  I tried to change the single target url deleting your test url and adding a different one and the program wont run.  I guess I don't know how to format csv?    You may want to include a shebang line    #!/usr/bin/env python3   and recommend users to run  ./VScraper.py testcsv.csv audio"
learnpython,3bkurb,AltoidNerd,1 point,Tue Jun 30 11:05:45 2015 UTC,"Whoa. OK. Awesome! So I'm just reading through your comments right now and have some questions (because a lot of this is new to me, what you're mentioning).   The a += b vs a = a + b thing is new to me. I suppose this is a problem with mutability? Interesting stuff here."
learnpython,3bkurb,AltoidNerd,1 point,Tue Jun 30 13:38:01 2015 UTC,>>>my_string = 'a' >>>my_string += 'b' >>>print(my_string) 'ab' >>>my_string += 'this part goes to the end' >>>print(my_string) 'ab this part goes to the end'   Mutability is part of part of it.  As you know strings arent mutable so you'd use addition to form a new string  >>> new_string = 'prepend this ' + my_string >>> print(new_string) 'prepend this ab this part goes to the end'   of course you can recycle the name so it feels more like mutation.
learnpython,3bkurb,AltoidNerd,2,Tue Jun 30 14:03:14 2015 UTC,"Ooooooooohhhh. Sorry. I just re-read your comment. I know what you meant now (half asleep when I read it). += results in appending the string. I meant to prepend it because http:// is the start of the URL. I understand, and it's a silly mistake on my end. Thanks for pointing that out!  Edit: Also, the shebang line is used to specify what python interpreter is needed to run the program, right?"
learnpython,3bkurb,AltoidNerd,1 point,Tue Jun 30 14:19:24 2015 UTC,"Yes, so that the file can be made executable and run directly as  ./VScraper.py"
learnpython,3bn9bk,habitrail1,2,Tue Jun 30 16:12:37 2015 UTC,You might have luck using Pillow along with Libtiff.  See the documentation for TIFF files in Pillow here.
learnpython,3bmhm6,fuckfacez,1 point,Tue Jun 30 12:24:22 2015 UTC,Caveat: this is my experience so experiences may differ by region.   What you are asking can't be done directly because when the movie is selected the application changes state to list all show times for all theaters by that movie. From that page you have everything you need. You just need to think about the logistics of your data aggregation process a little more. You may be able to avoid 'scraping' all together. It seems that their internal endpoint only needs valid cookies to make GET requests. I didn't look too much into that but it'd be worth exploring for you
learnpython,3bmhm6,interactionjackson,1 point,Tue Jun 30 16:44:48 2015 UTC,"thanks for the insight. maybe i will give just some info of what i am doing and you could guide on how to proceed?  i am trying to extract the movies in a particular city and check if a movie of my choice is playing there. say i want to check ""terminator genisys,"" i check the city movies list and if it is playing i can extract the date based on that then the show times.  that's the train of thought i currently have. what do you think?"
learnpython,3bmhm6,interactionjackson,1 point,Tue Jun 30 18:25:27 2015 UTC,"sounds like a good approach. You need to asses the different ways that the data is presented. 1. in the DOM, 2. in the URL 3. in the ajax request response cycle... You can use that knowledge to your advantage. At first glance it looked like the site gave a unique url to each venue. You can skip using the search box as your first step all together."
learnpython,3bmhm6,interactionjackson,1 point,Tue Jun 30 23:10:38 2015 UTC,"ya i figured each venue has different url so i am concentrating for a particular place then scale as i go. i have used beautiful soup and was able to scrap the HTML parts but the list box just returns empty hence was wondering what to use, because if selenium is the way then i would dive in right on. thanks for the explanation, hope you got my point."
learnpython,3bn4av,RoyBattyV2,2,Tue Jun 30 15:36:46 2015 UTC,"Start with something like tick-tac-toe or checkers, so you don't have to program so many basic rules things before getting to the AI."
learnpython,3bn4av,gengisteve,1 point,Tue Jun 30 15:39:37 2015 UTC,"Good idea, thanks!"
learnpython,3bn4av,reckscene,2,Tue Jun 30 15:40:42 2015 UTC,"do a search on google using the below. read some publications on what algorithm, rules and what the author have implemented etc. i did one ai on tetris and was able to break millions of rows cleared  filetype:pdf site:edu ai checkers"
learnpython,3bn1kr,sw33t1rony,3,Tue Jun 30 15:17:01 2015 UTC,"#iterate dictionary - key and tuple values   Do you know how to do this? As in, how would you write one or more lines of code that does this? Do you know about iteration, about dictionaries, how to get a loop using keys and values at the same time?      #initialize list   Do you know how to do this? What is a list? How do you start one?  So on and so forth."
learnpython,3bn1kr,JustTurrble,1 point,Tue Jun 30 15:38:12 2015 UTC,I think I need to use for loops to iterate the dictionary.  I just don't know exactly how to write it.  I know a dictionary has a key and a value but I don't know how to write a loop with keys and values.  I really feel lost.
learnpython,3bn1kr,dunkler_wanderer,2,Tue Jun 30 15:50:06 2015 UTC,"To get the keys and values at the same time you can use the items() method of the dictionary and a for loop with two variables:  for key, value in dictionary.items():     print(key, value)   If you only need the keys:  for key in dictionary:     print(key)   And if you only want the values:  for value in dictionary.values():     print(value)"
learnpython,3bn1kr,JustTurrble,2,Tue Jun 30 16:22:03 2015 UTC,"You're not lost: you're at the beginning. :)   Often, we like to iterate over the contents of a sequence using for. For a simple list - a sequence with just values, but no keys - we would use something like:  for item in our_list:     # do something with item   In this case, the list object is our_list. Inside the for loop, each element of that list is represented by the variable item.  If we wanted to iterate over the same list but also use the index of each value, we use enumerate, like so:  for idx, item in enumerate(our_list):     # do stuff with idx (index) and item   This can be useful when you want to know where an item is in the list, particularly if you want to access a similar item in another list at the same location. You'd do that with another_list[idx], for instance.    Specific to dictionaries, when we iterate over all the keys and values of a ""dict"", we do something similar to enumerate. However, we use a built-in method of dictionaries called .items():  for key, value in dict.items()     # do stuff with the keys and values   Say you have a dictionary defined as {'key_name1': 'value_thing1', 'key_name2': 'value_thing2'}. Each time through the loop, key and value will contain those corresponding elements. The first time through, key = 'key_name1' and value = 'value_thing1'; on the second, key = 'key_name2' and value = 'value_thing2'. And so on.  You can also iterate just over the keys like so:  for key in dict:     # do stuff with key, possibly using dict['key']   and over the values:  for value in dict.values():     # values with no key information     As for lists, I'd start here, which can give you a good sense of what they are and how to get started working with them.  EDIT: words"
learnpython,3blw63,ectobiologist7,7,Tue Jun 30 07:32:19 2015 UTC,"If you're creating a new list, just use []. Using list() is good for converting strings and other iterables into lists, but it's not necessary in this case.  I just did a quick test, and it looks like [] is faster for creating empty lists:  >py -m timeit ""[]"" 10000000 loops, best of 3: 0.0503 usec per loop  >py -m timeit ""list()"" 1000000 loops, best of 3: 0.213 usec per loop"
learnpython,3blw63,GoldenSights,3,Tue Jun 30 07:58:41 2015 UTC,"I'll throw in that while that's not nothing (it is technically a 4x speedup) this is not the sort of thing that's worth optimizing over for most use cases.   I'm blanking on the the name of the package (presumably what you used to make your post?) that gives you a full profile of how much time you're spending in the various chunks of your code. But basically unless the profiler says you're spending a fuckton of time hitting list() over and over again...this is almost never going to actually matter. If you care that much about even a few extra seconds of runtime, you're probably not using Python (or at least, straight base Python). Unless, again, it's a case where you've unwittingly managed to do something in the most inefficient way possible and some minor refactoring can get you a huge performance gain."
learnpython,3blw63,Eurynom0s,2,Tue Jun 30 09:02:45 2015 UTC,"I agree with you, the time savings are negligible. I do enjoy comparing the speeds of different python processes though. Seeing how one thing takes 4x longer than another makes me think about what the behind-the-scenes might look like, and what the function is doing. Of course I could just read the Python source code, but hey."
learnpython,3blw63,GoldenSights,1 point,Tue Jun 30 09:15:17 2015 UTC,"I would imagine that in most cases the most significant time difference is that between typing [] compared to typing list() ;)  [] is markedly quicker however you slice it, so I think it really should be the default. But it clearly isn't a big deal.  This question was asked a month or so ago, and someone chimed in saying they always used list() because the syntax style was more consistent with other syntax in Python. That seemed like very silly reasoning to me, but I guess you can do what you like if you end up with code that works for you."
learnpython,3blw63,callmelucky,1 point,Tue Jun 30 09:53:15 2015 UTC,I think the package you are thinking of is line_profiler.
learnpython,3blw63,TheBlackCat13,1 point,Tue Jun 30 09:43:33 2015 UTC,"You can use dis module see snippet from pymotw to check the faster one.   In reality, there almost no noticable difference in speed. By the time you hit/feel the speed limit, you should already use something like numpy array"
learnpython,3blw63,ies7,2,Tue Jun 30 08:04:39 2015 UTC,"I had to put in an extra pair of brackets   No, you didn't. Python has a special syntax rule for this case. Try it :) This is an expected and common use case for several builtins (max/min/any/all, in particular)."
learnpython,3blw63,zahlman,1 point,Tue Jun 30 12:30:14 2015 UTC,"Not true. x = list( n**2 for n in range(0,100) ) will execute properly (I'm using Python 3.4.3, if that matters)."
learnpython,3bihhm,MrDysprosium,10,Mon Jun 29 14:29:00 2015 UTC,"I used cx_Freeze as well.  You'll probably want a GUI library as well: try tkinter, instructions here."
learnpython,3bihhm,not_perfect_yet,4,Mon Jun 29 17:21:51 2015 UTC,How does it compare to py2exe?
learnpython,3bihhm,TagSmile,1 point,Tue Jun 30 02:06:56 2015 UTC,"Uh I looked up the thing to make an exe, and it worked flawlessly. You just point a prepared script to the main function of your application and it does the rest.   I wrote my code on linux and compiled it on the 64 bit windows I wanted to distribute it on though, so I don't know how elaborate the process is for compiling for different system .  I haven't used py2exe but I think that's a bit old and not updated? cx_Freeze is up to date."
learnpython,3bihhm,not_perfect_yet,1 point,Tue Jun 30 07:57:29 2015 UTC,Would cx_freeze work with a non-bundled GUI toolkit like PyQt?
learnpython,3bihhm,Route75,2,Tue Jun 30 08:59:22 2015 UTC,"It compiled everything that was necessary for my application to work into portable libraries, so I would assume that if your application can import the module it would also get compiled the same way.  This is just a guess though, you should ask somewhere/spmeone else or try it out to confirm it."
learnpython,3bihhm,not_perfect_yet,23,Tue Jun 30 14:43:00 2015 UTC,"Install cx_Freeze: https://pypi.python.org/pypi?:action=display&name=cx_Freeze&version=4.3.4; make a setup.py file to run cx_Freeze, and make a basic python script named what ever:  from cx_Freeze import setup, Executable  setup(name='Name',       version='0.0',       description='Description of what i do',       executables=[Executable(""name_of_python_file.py"")])   This is going to create a build folder, with binary files in it and an executable, making it possible to only require the executable not requiring any libraries nor python to run the program."
learnpython,3bihhm,SimonWoodburyForget,4,Mon Jun 29 15:28:06 2015 UTC,Does this have any advantaged over py2exe?
learnpython,3bihhm,TagSmile,1 point,Tue Jun 30 02:06:13 2015 UTC,"No, I only use cx_freeze because it supported python 3 when py2exe did not (which is for a very long time). So for all i see, just use which ever you actually get to work/do what you need it to do first."
learnpython,3bihhm,SimonWoodburyForget,1 point,Tue Jun 30 08:03:18 2015 UTC,Do you know if it'll suck up additional libraries.  I have some stuff that requires paramiko.
learnpython,3bihhm,stillalone,1 point,Mon Jun 29 17:34:33 2015 UTC,"It will include libraries, however cx_freeze includes all the libraries as individual files, instead of bundling them right into the .exe, which makes for a messy directory and requires to .zip up the whole folder for redistribution."
learnpython,3bihhm,grumbel,1 point,Mon Jun 29 18:12:45 2015 UTC,"Yes, it works like a compiler and tries to go threw all of it. Thought do note it has issues with graphical libraries sometimes like matplotlib. So make sure you freeze and test your code has you build it up to not be lost in having to debug 1000 lines at once. (this is the same for all freezers thought, freezing source code isn't the most elegant thing ever, but there are lots of ways to fix separate issues so rest comes down to google searching)"
learnpython,3bihhm,SimonWoodburyForget,0,Mon Jun 29 17:59:42 2015 UTC,"It will use any libraries automatically. If the libraries require external files, such as Requests and the cert file, it gets more complicated."
learnpython,3bihhm,Colindapieman,1 point,Mon Jun 29 17:42:18 2015 UTC,Can't recommend cx-freeze enough. Fifteen minutes of fiddling and I had a shiny exe ready to be distributed.
learnpython,3bihhm,MLGsallados,7,Tue Jun 30 00:22:04 2015 UTC,I'd suggest using the py2exe package from http://www.py2exe.org/ This allows you to turn a specific file into an executable by running the setup.py file through the command line. (i.e. 'cmd' on windows) ~ Although I suggest you read the read-me file attached :D  Hope I was of some use!
learnpython,3bihhm,Ewildawe,5,Mon Jun 29 15:01:33 2015 UTC,"I'll give it a look soon! Thanks for the info.  BTW, what's with the dowvotes on this sub?"
learnpython,3bihhm,99AFCC,3,Mon Jun 29 15:10:32 2015 UTC,"BTW, what's with the dowvotes on this sub?   I'm seeing a bunch all over the programming subs today. I think it's a bot or something.   It's unusual. Probably go back to normal soon.    As for distributing Python apps, I've found it to be so much a headache that I actually will see if I can make it a webapp first."
learnpython,3bihhm,Colindapieman,2,Mon Jun 29 16:49:20 2015 UTC,"BTW, py2exe is only for python 2.7 in a stable version.  EDIT: Looks like they have recently updated to python3"
learnpython,3bihhm,kaliumex,2,Mon Jun 29 17:42:52 2015 UTC,It seem like the latest version of py2exe (0.9.2.2) is a Python 3 compatible version. (PyPI)
learnpython,3bihhm,TDuffin,1 point,Mon Jun 29 19:31:02 2015 UTC,"Downvotes seem to be rampant for new comments on all subs- I see this comment on any small subreddit where a downvote is noticeable for longer (before regular votes mask the original downvote).  It's probably a bot, ever since reddit changed their vote-counting stuff to hide the real numbers to ""prevent vote manipulation"" it seems as if it only encouraged it."
learnpython,3bihhm,thedesolatesoul,4,Wed Jul 1 10:06:17 2015 UTC,There is also pyInstaller that worked for me pretty well.
learnpython,3bihhm,Tomarse,2,Mon Jun 29 18:48:05 2015 UTC,"What I'm doing at the moment is using nuitka to turn my modules into pyd files (which makes it harder to reverse engineer), and then cx_freezing them into an exe with supporting files, then creating an msi (my clients only use windows) that puts the whole lot in their program files, and shortcuts the exe on their desktop and start menu."
learnpython,3bihhm,jkudria,2,Mon Jun 29 16:50:23 2015 UTC,"There are several good resources and links here, although most of them are similar to the ones people mentioned here.  I'd like to mention though that in this day and age, making a web app is usually much less of a hassle and more useful. There's a lot more resources on it and it's generally probably a good idea to have at least some sort of web skills nowadays. Plus its fun :)"
learnpython,3bihhm,__baxx__,1 point,Mon Jun 29 18:14:26 2015 UTC,Once ones for something functioning CLI wise with a python script/ programme what's needed to convert it into a webapp? Does much need to be done to the python code in general or is it bolstering things atop of it?
learnpython,3bihhm,jkudria,1 point,Tue Jun 30 00:26:53 2015 UTC,"Kind of hard to answer. If you write your functions in a contained, plug-n-play sort of manner, than yes, it's not TOO hard to add web functionality.  Look into Flask or Django."
learnpython,3bihhm,__baxx__,2,Tue Jun 30 00:47:07 2015 UTC,"cheers - can these be tested locally or do they need to be run from a server?   Say something basic like a stopwatch was written in Python, once that was done at the CLI would it then be a case of writing HTML, CSS and JS a top of that?   Heard of flask and django - never looked into them though. I'll have to have a gander. Cheers"
learnpython,3bihhm,SimonWoodburyForget,2,Tue Jun 30 12:01:58 2015 UTC,"Basic pointers to search for to setup a online web app(this is in order of probable dependencies):   You need a machine to actually run it:   the easiest way is buy one of the many hosting services(which will be remote servers, usually linux box's): but the easiest no additional cost way, is to setup a linux server(Ubuntu in a virtual box for example):   Port forwards to machine from your routers; Set static IP on system, (it has to be unique); Now works like the host (but its hosted by you).  Get a domain name(this is optional, you can connect only by typing in your public IP address), read up on 'DNS'.  Then you'll want to setup the machine from the terminal to not have to be in the machines terminal:   Install server software, (nginx, or apache2):   Test your server, default nginx install setups a static html server, type in your local IP of your server; Setup reverse proxy, this will let multiple people connect to the server; Redirect traffic coming from port 80(http default) to go to where ever you want.   Setup the machine for your favorite webapp(python),   Setup WSGI to send the request information to your python framework of choice; Setup python frame work with the WSGI you chose.  And get to programming, flask tutorials, django, pyamid... ect, script any python, put it into flask somewhere, generate some html or generate some javascript.... anything..     There are lots of ways of setting that all up, but i like, NGINX, uWSGI & Flask. Its a headache to setup, but if you google search properly and know that web apps interact with Internet/clients -> Web Server(NGINX) -> server interface(WSGI) -> Web Framework(Flask), then the rest is pretty easy.  Note: You can skip down to 3 and setup a 'dev server' locally instead, but read up on it to understand what that means.  Edit: Some edits, also there's this: https://www.digitalocean.com/community/tutorials/a-comparison-of-web-servers-for-python-based-web-applications; great short introduction, with a bunch of details on specific frameworks and stuff: https://www.digitalocean.com/community/tutorials/how-to-set-up-ubuntu-cloud-servers-for-python-web-applications;"
learnpython,3bihhm,billcrystals,1 point,Tue Jun 30 12:51:02 2015 UTC,"cx_Freeze -> Inno Setup (for a nice installer program) is how I'm currently doing things.  It's not that big of a hassle, I imagine it's similar to working with compiled languages.  There's a lot to account for at first but it becomes pretty second nature."
learnpython,3bihhm,TagSmile,2,Mon Jun 29 20:22:23 2015 UTC,"+1 for Inno setup. Bit of a learning curve though, last I used it, but I was going all out, feature wise."
learnpython,3bmahv,AltoidNerd,4,Tue Jun 30 10:57:24 2015 UTC,PyPy has a completely separate environment. Anything you do to PyPy will be isolated to that environment and won't be able to affect your CPython in any way.
learnpython,3bmahv,K900_,1 point,Tue Jun 30 11:04:56 2015 UTC,"Well it failed anyway.  In OSX, it began to install but exited with errors, and in ubuntu I got something odd:  altoidnerd:~ $ pypy -m pip install numpy /usr/bin/pypy: No module named pip   I definitely do have pip:   altoidnerd:~ $ which pip  /usr/bin/pip"
learnpython,3bmahv,K900_,2,Tue Jun 30 15:34:06 2015 UTC,PyPy also has(/needs) a separate pip. There's absolutely nothing shared between PyPy and CPython. At all. Ever
learnpython,3bmw8i,babaduv,2,Tue Jun 30 14:37:14 2015 UTC,"This is my first time looking into that module, but the potential usage is writing data to the filesystem so that other processes can read it.  Say you have multiple processes running different programs with functions meant to work on similar data. One process generally cannot see data from another, unless that data is stored somewhere in the filesystem. That's where tempfile comes in: it stores data in temporary files so that other processes can pick it up, allowing the processes to share data.  Doing this using tempfile instead of just writing files is a bit more secure, since the files can be given arbitrary names in hard-to-guess locations, making it difficult for someone to snoop on that data while it's in-process.  See here for some examples: http://pymotw.com/2/tempfile/"
learnpython,3bmw8i,JustTurrble,1 point,Tue Jun 30 14:50:01 2015 UTC,"Omg thank you I understand it well better now.  So my thoughts were like ""I'm coding a little test program which implies only one process, what's would be the purpose of temps ?'  So it's basically useful when you're managing several processes and in specific cases I guess ?  I don't know then if that'd be useful to remember.  Any thought on this ?"
learnpython,3bmw8i,JustTurrble,2,Tue Jun 30 14:56:31 2015 UTC,"Using an unnamed temp file can be useful for a single process in specific instances. The best I can figure is that you're handling a very large set of data, want to write that data temporarily to the filesystem, and remove the data from memory. This frees up memory so you can work on other large sets of data at the same time.  By writing a tempfile and then using .seek(0), you can return to the start of that file in order to read back from it later. Thus, you write your data, seek to the start of the file, and work on some other data while reading in from the tempfile at the same time.  Hope that makes sense. I can see a few limited-resource scenarios where that might be the optimal solution, particularly in scientific computations and big data sets."
learnpython,3bmw8i,JustTurrble,1 point,Tue Jun 30 15:03:19 2015 UTC,"You're an absolute genius.  I added you as my first reddit friend, because you seem to know way more than me and the thing is you can explain it perfectly, which is what I'm looking for. I'm really into Python, and I'm slowly learning a various set of things that could help me out in order to build programs.  You're really the one I'm looking for so I hope you don't mind that I friended you.  Truly awesome, +1 everywhere for you ;D"
learnpython,3bmw8i,JustTurrble,1 point,Tue Jun 30 15:11:21 2015 UTC,"I'm no expert. I just write a lot. :)  More importantly, Google is your friend"
learnpython,3bmugg,JohnnyBeggod,1 point,Tue Jun 30 14:22:56 2015 UTC,"Small part that can be cleaned up:  resultadoreal = resultadoreal + ... resultadoimaginario = resultadoimaginario + ...   are the same as:  resultadoreal += ... resultadoimaginario += ...   There's a possibility that this introduces odd behavior when using complex arithmetic in a single statement, but it appears to work as intended on my end.    Beyond that, what's an example of input you give the program, and what is the output you expect?"
learnpython,3bmugg,JustTurrble,1 point,Tue Jun 30 14:43:20 2015 UTC,"For example, you want to know how much is (2+3i)4, You put in 2,3 and 4"
learnpython,3bmugg,JustTurrble,1 point,Tue Jun 30 15:11:53 2015 UTC,"And your result of this is (-119 - 120i), correct?  Additionally, the result of (2+3i)7 is (6554+8823i)?  EDIT 119, not 199"
learnpython,3bmugg,JustTurrble,1 point,Tue Jun 30 15:15:26 2015 UTC,"Yes, but i get 119 instead of 199"
learnpython,3bmugg,JustTurrble,1 point,Tue Jun 30 15:17:20 2015 UTC,"My mistake, copied incorrectly from my screen. 119 is what I get, too."
learnpython,3bmugg,JustTurrble,1 point,Tue Jun 30 15:28:32 2015 UTC,"But when i try (2+3)7, i get 6554( which is right) and 8823i which is almost double the result"
learnpython,3bmo1v,scrubben,1 point,Tue Jun 30 13:29:03 2015 UTC,"Please format your code properly so others can read it and provide you with some answers:  Add four spaces before each line of code in order for it to be spaced properly.   Otherwise each line of code gets jumbled up, like this:  for i, val in enumerate(stuff): do something with this line  this is the third line  if fourth_line=True: this = 'doesn't make sense' print(""Does it?"")"
learnpython,3bmo1v,JustTurrble,1 point,Tue Jun 30 14:55:20 2015 UTC,Problem is I can't use for as I haven't learnt it yet.
learnpython,3bmo1v,JustTurrble,1 point,Tue Jun 30 15:27:28 2015 UTC,"I was making an example in regards to formatting your code on Reddit. I cannot read this:  import turtle from turtle import * def snowflake(sidelength, levels): """""" fractal snowflake function sidelength: pixels in the largest-scale triangle side levels: the number of recursive levels in each side """""" if levels == 0: forward(sidelength * 3) left(120) snowflake(sidelength*3,levels+1) else: forward(sidelength/3) right(60) forward(sidelength/3) left(120) forward(sidelength/3) right(60) forward(sidelength/3) left(120) snowflake(sidelength/3,levels-1) print snowflake(100,2)  But I can read this (guessing):  import turtle from turtle import *  def snowflake(sidelength, levels):     """""" fractal snowflake function     sidelength: pixels in the largest-scale triangle side     levels: the number of recursive levels in each side     """"""     if levels == 0:         forward(sidelength * 3)         left(120)         snowflake(sidelength*3,levels+1)     else:         forward(sidelength/3)         right(60)         forward(sidelength/3)         left(120)         forward(sidelength/3)         right(60)         forward(sidelength/3)         left(120)         snowflake(sidelength/3,levels-1) print snowflake(100,2)   Does this match your code? Including indentation? (indentation is important!)"
learnpython,3bmo1v,JustTurrble,1 point,Tue Jun 30 15:30:13 2015 UTC,"ah sorry. Didn't check afterwards, my bad."
learnpython,3bmh51,pradeepkrlko,0,Tue Jun 30 12:19:34 2015 UTC,Python help
learnpython,3bltvi,subduedLion,3,Tue Jun 30 07:01:55 2015 UTC,"Instead of splitting the name into parts and summing them separately, why not sum the fullname string all at once? Just ignore any non alphabetic characters."
learnpython,3bltvi,GoldenSights,2,Tue Jun 30 07:09:58 2015 UTC,"I'm unsure how to ignore the non-alphabetic characters (the spaces between the letters). When I don't split the input, the values for the spaces are mixed in."
learnpython,3bltvi,GoldenSights,2,Tue Jun 30 07:19:42 2015 UTC,"Well, there's any number of ways to do it. Since you're subtracting 96 from the ascii value, anything below 1 or above 122 is not a-z, so just don't add it to the sum.     You could also have a string with all the letters from a to z (or you can import string and use string.ascii_lowercase), then do this after you lowercase the string:  name = [character for character in name if character in string.ascii_lowercase]   Then start adding the ord values."
learnpython,3bltvi,GoldenSights,2,Tue Jun 30 07:24:35 2015 UTC,Those are amazing. Is there an encyclopedia for those codes? That made things immensely easier. Thanks a lot!
learnpython,3bltvi,ErasableInk,2,Tue Jun 30 07:30:58 2015 UTC,"Well, here's the python 3 standard library, but I'm not sure if there's something in particular you're looking for. Normally I just google everything, like ""Python alphabet""."
learnpython,3bltvi,Pvt_Haggard_610,1 point,Tue Jun 30 07:34:52 2015 UTC,"Hey, man.   Thanks for all the help!  I ended up with this ugly mess -   def main():  import re  name = input(""What's your full name: "") name = re.sub(""[^a-zA-Z]+"", """", name).lower()      print(sum([ord(c) - 96 for c in name.lower()]))   main()  But it works. :)"
learnpython,3bltvi,TheBlackCat13,2,Tue Jun 30 08:10:16 2015 UTC,"assuming you're not converting the number back into something meaningful, why bother splitting the input? just remove the spaces and be done with it."
learnpython,3bltvi,od_9,1 point,Tue Jun 30 07:10:10 2015 UTC,How do I go about removing the spaces from a user's input? - I haven't covered that yet. The space is definitely the issue (because it's also an ASCII code). That's why I decided to split them.
learnpython,3blwpi,MrCyprus,2,Tue Jun 30 07:40:21 2015 UTC,"I'm assuming it's line 32, yes? Try putting parentheses around your bindings, like this:  % (Monster.monsters[randint(0, len(self.monsters)-1)], character.name)   Without the parentheses, Python considers the randint to be your only binding, and character.name is a second argument going into print().  examples:  >>> print('a', 'b') a b >>> print('%s' % 'a', 'b') a b >>> print('%s %s' % 'a', 'b') Traceback (most recent call last):   File ""<stdin>"", line 1, in <module> TypeError: not enough arguments for format string >>> >>> print('%s %s' % ('a', 'b')) a b >>>"
learnpython,3blwpi,GoldenSights,2,Tue Jun 30 07:48:30 2015 UTC,Hey thanks man!  I knew it was something simple and stupid I was forgetting.  Cheers to you!
learnpython,3blwpi,zahlman,2,Tue Jun 30 07:50:34 2015 UTC,"As an aside, to make a random choice from a list (or other sequence), use random.choice. :)"
learnpython,3blwpi,JustTurrble,1 point,Tue Jun 30 14:41:14 2015 UTC,Clarifying for OP:  import random random.choice(Monster.monsters)
learnpython,3bl7xf,thecollegeme,3,Tue Jun 30 03:12:22 2015 UTC,"You could just make a cron job.  Or, if you're looking for a pure python solution, check out the sched module in the stdlib."
learnpython,3bl7xf,alpacafarming,2,Tue Jun 30 03:25:07 2015 UTC,"I have imported the schedule and it will run every 8 hours, but wont this still require me to use my laptop? what would happen if I turn it off for the night or something? Is there anyway to hvae it all online?"
learnpython,3bl7xf,Deathnerd,2,Tue Jun 30 03:42:23 2015 UTC,"Run it on a server, not laptop"
learnpython,3bl7xf,malice8691,1 point,Tue Jun 30 04:11:52 2015 UTC,im pretty new at this. could you point me in the direction how to do this please? thank you
learnpython,3bkl36,HeroWeNeed,2,Mon Jun 29 23:59:41 2015 UTC,"I don't really understand your question. To import modules that are installed to the system you can just use import module, no matter the directory you are in or if it's in the interpreter or in a text file."
learnpython,3bkl36,novel_yet_trivial,1 point,Tue Jun 30 01:24:28 2015 UTC,"But if I put the import statement in the text file, how would python know where my file is when I run the program?"
learnpython,3bkl36,kalgynirae,4,Tue Jun 30 01:29:46 2015 UTC,"It searches for modules in the directories listed in sys.path. When you execute a script from the command line, Python automatically adds the directory which contains that script to the beginning of sys.path (so it will be searched first). So, things you want to import need to be either (a) in the same directory as the script you're running or (b) in one of the directories normally in sys.path. You can also cause directories to be added to sys.path by setting the PYTHONPATH environment variable."
learnpython,3bifya,amu05,5,Mon Jun 29 14:15:52 2015 UTC,If you want to use switches with fall through you could use this recipe:  http://code.activestate.com/recipes/410692/  Although it might be a bit of an overkill
learnpython,3bifya,Shrine_Builder,3,Mon Jun 29 14:51:12 2015 UTC,"I prefer using a dictionary with either whatever in switch_dict or get(whatever, default) depending on what my exact needs are (I prefer the in check when I want to toss an error that's not KeyError -- InvalidAction or something for example)"
learnpython,3bifya,kurashu89,4,Mon Jun 29 16:49:15 2015 UTC,"You can use different construct for behaving as switch, one if already mentioned by /u/Doormatty another one is when you need to return a value based on some input.  You can see this question on Stack Overflow which will help you.    Replacements for switch statement in Python?    It mentions to use this:-  def f(x): return {     'a': 1,     'b': 2, }.get(x, 9)    # 9 is default if x not found"
learnpython,3bifya,archerimagine,2,Mon Jun 29 14:45:37 2015 UTC,"The difference between that and switch and if/elif/else is that you can't put code their.  You either need to make a named function before this or use a lambda.  ie:  def swicth(condition, x):     def fun(x):         return 'You've got $s!' % (x, )      return {         'a':fun         }.get(condition, lambda x: pass)(x)  #call function with x   So, it's a good replacement for some things, but can get ugly.  I use it plenty though."
learnpython,3bifya,elbiot,6,Mon Jun 29 20:16:19 2015 UTC,If/elif/else
learnpython,3bifya,Doormatty,1 point,Mon Jun 29 14:24:02 2015 UTC,this is the official answer.
learnpython,3bifya,astroFizzics,4,Mon Jun 29 15:38:54 2015 UTC,"Not really... There are if/else if/else statements in C++ as well as switch statements. I believe that the ""official"" answer would be that there are no switch structures in Python (without the use of external libraries at least).  Quick edit: I say this because a switch statement in C++ allows ""fall through"" conditions, where you can perform the same operations on multiple cases, whereas using only if/else if/else blocks, you would have to carefully manipulate your checks to get the same results."
learnpython,3bifya,fizzygalacticus,1 point,Mon Jun 29 20:50:13 2015 UTC,"Use a dict. a,b,c can be anything, even functions  d={ ""a"":a, ""b"":b, ""c"":c }  val=d[case]  #if it's a function you can even execute it from here like this: d[case]()"
learnpython,3bifya,not_perfect_yet,1 point,Mon Jun 29 21:45:07 2015 UTC,Article that has some information on the topic - http://www.pydanny.com/why-doesnt-python-have-switch-case.html
learnpython,3bl41u,pythonhelp123,2,Tue Jun 30 02:38:42 2015 UTC,"it gives me the list of the 3rd one, but how do I get the restaurant?   You mean the name?   print(RC[2].name)   That should help you solve the first 3 questions...   The list of restaurants, arranged alphabetically   If you want only the names sorted alphabetically, then you should make a new list of only the names, and sort that."
learnpython,3bl41u,novel_yet_trivial,1 point,Tue Jun 30 02:46:04 2015 UTC,If I go print(RC[2].name) it gives me Nonna instead of Stratacco.
learnpython,3bl41u,novel_yet_trivial,2,Tue Jun 30 02:59:24 2015 UTC,I thought you wanted the name. If you want the dish just change it.
learnpython,3bl41u,novel_yet_trivial,1 point,Tue Jun 30 03:05:11 2015 UTC,"Oh yeah, I read it wrong. Is there a different approach to the .name? We haven't learned that part yet so I don't want points off. I tried the method elbiot gave but it says invalid syntax."
learnpython,3bl41u,elbiot,2,Tue Jun 30 03:09:35 2015 UTC,"You could use the index (first index for the restaurant, second index for the field in the namedtuple):  >>> RC[2][0] 'Nonna'   But that really ruins the point of a namedtuple, so I doubt your prof wants you to do that."
learnpython,3bkyjr,Aeliens,1 point,Tue Jun 30 01:53:16 2015 UTC,"Sounds like you don't have nltk installed, have you tried using pip to install it? Importing it in dreampie won't be different than importing it normally"
learnpython,3bkyjr,echocage,1 point,Tue Jun 30 02:14:12 2015 UTC,I'm currently on Windows and nltk works fine on command prompt and IDLE. It just won't load in dreampie. I'm new to all of this so I might not be providing enough information.
learnpython,3bkyjr,echocage,1 point,Tue Jun 30 02:25:46 2015 UTC,"Gotcha, no worries! It's possible that dreampie is using a different version of python than idle. Maybe one is using python 2 and one is using python 3?"
learnpython,3bkyjr,echocage,1 point,Tue Jun 30 02:32:59 2015 UTC,"Same version. On Dreampie the sys.path is     sys.path 0: ['',  'C:\Program Files\DreamPie\data',  'C:\Windows\SYSTEM32\python34.zip',  'C:\Python34\DLLs',  'C:\Python34\lib',  'C:\Python34']     and on command prompt it's:     sys.path 0: ['',  'C:\Program Files\DreamPie\data',  'C:\Windows\SYSTEM32\python34.zip',  'C:\Python34\DLLs',  'C:\Python34\lib',  'C:\Python34', 'C:\Python34\lib\site-packages']     would there be any way to add the site-packages to dreampie?"
learnpython,3bkyen,mpm360,1 point,Tue Jun 30 01:52:08 2015 UTC,"Well if you want to create a site, I'd look into python web frameworks, django, flask, pyramid. If you want to create say a desktop application with a fancy GUI, I'd look into PyQT.   Honestly, if you want to learn how to do something, go do it and figure out what it takes along the way."
learnpython,3bkyen,echocage,1 point,Tue Jun 30 02:13:04 2015 UTC,"Sounds simple, but someone with experience telling me the right approach is valuable. For that, I thank you."
learnpython,3bkyen,echocage,1 point,Tue Jun 30 23:13:22 2015 UTC,"You are very right. Feel free to PM me with any questions you have in the future, I'm happy to help if there's anything I can do, we were all new once."
learnpython,3bj1co,kmossco,3,Mon Jun 29 17:02:21 2015 UTC,"I feel ready to dive into Flask/Django after a few weeks of dabbling with Python. Was looking for a tutorial for this, where I could create something quickly and keep the motivational levels going strong. Do you recommend getting a book like Hello Web App, or save the money and go for a tutorial like DjangoGirls?      Edit: added links"
learnpython,3bj1co,jkudria,2,Mon Jun 29 18:30:39 2015 UTC,"I'd go with Flask using the official Flask tutorial/docs (they're quite good). Frankly I prefer Flask because unless you plan on going into web dev as a main focus, Flask is more useful than Django when you need to throw something up real quick. Django is MUCH larger and is 'batteries included' which means that it probably has a lot of stuff that you won't need. Flask is just quick and relatively simple as a tool in your toolbox for when you need to throw something up quickly."
learnpython,3bj1co,kmossco,1 point,Mon Jun 29 19:27:27 2015 UTC,"Thanks! I plan going full web dev soon, but Flask does seem quite nice to get the hang of. I will check the tutorial out then."
learnpython,3bj1co,jkudria,1 point,Tue Jun 30 06:52:41 2015 UTC,"No problem.  Really it's just a matter of preference. Django is larger and more unwieldy - plus (as far as I'm aware), it requires a deeper understanding of Python at times. It can get complicated.  Flask is small but powerful, and can be used for a lot of stuff. It's less 'batteries included' so you sort of choose what you need and use that with Flask, rather than having everything available even if you don't need it, as in Django."
learnpython,3bj1co,Thunder_54,1 point,Tue Jun 30 14:02:14 2015 UTC,What are some of the best uses you've gotten out of python that weren't for a job or were unconventional? I'm sort of looking for project ideas.
learnpython,3bj1co,tnvol88,1 point,Mon Jun 29 17:14:49 2015 UTC,I've got a super simple program I run which fetches cfs river flows so I can find out the water levels quickly and with one click before going kayaking.
learnpython,3bj1co,crm7290,1 point,Mon Jun 29 17:29:49 2015 UTC,Can you share this?!
learnpython,3bj1co,elbiot,1 point,Mon Jun 29 23:04:44 2015 UTC,"I once had to crop 1000 images based on human selection and resize them.  I wrote a script in pygame that let me blow through it at like 10 images a minute.  Selecting, cropping, resizing, save as, undo undo undo to get bcak to the unedited picture, repeat, open a new file (by searching for the next one sequentially) would have not only been 10 times slower, but extreemly agravating.  Also, plotting GIS data on maps is awesome.  I'd really like a script that helps me search my own reddit comments (and those of others) better.  I know I posted something like what I want 5 or so months ago... Pagination sucks."
learnpython,3bj1co,tnvol88,1 point,Tue Jun 30 02:35:23 2015 UTC,Is there a way to post to a friend's Facebook page? I would like to automate birthday messages for certain friends.  I've looked around the interwebs for solutions but it looks like Facebook removed this functionality from the api.
learnpython,3bj1co,jkudria,2,Mon Jun 29 17:27:38 2015 UTC,"This looks like it might have what you need. If you take a look at the api.rst file in the docs folder there are functions to post to a wall.  I didn't take too much of a detailed look, but I'm sure there's a way to find birthdays and the such - if not, you could possibly scrape that data off of FB (not sure how viable of a solution this is given that scraping stuff can be risky since page structures can change). In a pinch you could just hard-code birthdays of specific people."
learnpython,3bj1co,Thunder_54,2,Mon Jun 29 18:23:09 2015 UTC,"Just had a fiasco trying to get that facebook-sdk to work with python 3.4. It says that it's compatible, but it's really not (facebook.py is written in python 2.x). I even tried converting the necessary things to python 3 with the 2to3.py script, but still no luck. I wish this would work with python 3.4. It looks like a great module. I'm not downgrading just to use it though."
learnpython,3bj1co,jkudria,2,Mon Jun 29 20:03:29 2015 UTC,I'm not downgrading just to use it though.   Why not? Downgrading really isn't hard...
learnpython,3bj1co,elbiot,1 point,Mon Jun 29 20:13:45 2015 UTC,Downgrading?  I believe many systems have both installed.  I have to type python3 to run python3.x as opposed to 2.7
learnpython,3bj1co,jkudria,1 point,Tue Jun 30 02:19:22 2015 UTC,Or just use something like virtualenv or pyenv
learnpython,3bj1co,tnvol88,1 point,Tue Jun 30 04:37:35 2015 UTC,"Thanks, it seems possible from the docs but i also found this on stack overflow:   https://developers.facebook.com/docs/apps/migrations/completed-changes  It sounds like a post can be made to a wall with the right access tokens but I dont want my friends to have to use an app to get my birthday wishes. I would like to allow access tokens from myself to post on my behalf directly to friends but I'm mot sure that will happen. Too much opportunity for spam if used wrong I suppose."
learnpython,3bj1co,jkudria,1 point,Mon Jun 29 19:15:01 2015 UTC,"...this maybe? Taking a (not very detailed) look at the code from that github project, it seems that it's doing exactly what I linked (at the beginning of this post). Why not give it a shot and see how it works?"
learnpython,3bj1co,bbshot,1 point,Mon Jun 29 19:34:03 2015 UTC,"I'm learning python right now, so I made this simple code to calculate the number of wins and the win-rate for the champion based on the information you input. I have it pretty much finished, I just have one problem. This is my code- http://pastebin.com/YD81KQdq  If I don't convert the run into a function, and just have it run, then it works fine. But if I have it like I uploaded, and then call the run function, then it gives me this error: http://i.imgur.com/e4InWOb.png  Essentially it says that the 'write' descriptor requires a  'file' object but received a 'str' object. I would understand this error if I also received it whenever I just ran the program without the run function. If you guys could help, it'd be a lot better if you told me why this was happening in addition to telling me how to fix it."
learnpython,3bj1co,elbiot,1 point,Mon Jun 29 20:45:23 2015 UTC,"Ech, I'm not downloading nothing from that site.  use pastebin please.  My guess, you are using the keyword ""file"" to refer to your file pointer, and also don't know about variable scoping.  When your file pointer is out of scope (outside the function), the keyword means what it did originally.  You aren't getting an error that makes sense to you because file already means something when you haven't (properly) defined it yourself.  Rename file to f and debug from there.  with open('myfile.txt','w') as f:     f.write(""stuff"")    Also, don't name things list, 'int,dir` or anything else that turns a keyword color in your syntax highlighter.  That's just my guess, I didn't look at your code."
learnpython,3bj1co,bbshot,1 point,Tue Jun 30 02:28:47 2015 UTC,"http://pastebin.com/YD81KQdq  Here's the code in pastebin, and I'll try that and see if it works. Thanks a ton!"
learnpython,3bj1co,Busby10,1 point,Tue Jun 30 02:51:07 2015 UTC,"How'd you go with this? I'm just learning python as well so thought I'd have a go at resolving the errors for some practice. Here's what I got:  http://pastebin.com/0Cqita2p  I worked off what elbiot said, renamed the open file to 'f' instead of file. The issue is that when you call the file again in the export function it hasn't been defined inside that function, or passed to it in the argument, so there is nothing in that object to write to.  To fix this I just passed the file object to each function along the way. There is probably a better way, but I manged to get the code to run and write to the file. Let me know if you found another way of doing it."
learnpython,3bhxc4,dempseye,5,Mon Jun 29 10:51:18 2015 UTC,I'ma n00b that didn't know about pydoc.  Thanks for sharing.
learnpython,3bhxc4,jdmarino,4,Mon Jun 29 14:17:53 2015 UTC,"Nice article. However, I just use iPython.    os?   To see the docstring and other notes.    os??   To see the source code.    os. (tab key to try and complete)   To see all public methods and attributes."
learnpython,3bhxc4,ianepperson,1 point,Mon Jun 29 18:15:56 2015 UTC,"Some nice tricks, not all of which I knew about. May come in handy in the future. Thanks!"
learnpython,3bksqu,agent_ochre,3,Tue Jun 30 01:05:06 2015 UTC,"You can't modify a list while you are looping over it. Try it like this:  temp_list = [] for item in results:     if item not in lines:         temp_list.append(item)         #yadda yadda  results = temp_list   Also, use .splitlines() instead of split('\n'). It's exactly the same on most systems, but it's neater (and may save you a headache eventually when you run into an obscure case).  Edit, alternatively, loop over a copy of your list:  for item in list(results):"
learnpython,3bksqu,novel_yet_trivial,1 point,Tue Jun 30 01:12:26 2015 UTC,"Thanks, I didn't know about splitlines(), that's much nicer!  But, I was overzealous in simplifying the code for this post. I should have mentioned that I was using a copy of the initial 'results' list - created by:  results_copy = results   However, I was trying to remove() items from results_copy. Your solution makes more sense - start with an empty list and append() as needed. And by golly, it worked!  I still don't understand why it was failing to complete the loop, when all I did was change remove() from an already populated list, to append() to an empty one. If I change it back to remove(), it only goes halfway.  But thanks to your help, at least I have a working script!"
learnpython,3bksqu,novel_yet_trivial,3,Tue Jun 30 01:27:37 2015 UTC,"results_copy = results   That's not a copy; that's an alias.   >>> results = ['string1', 'string2', 'string3'] >>> results_copy = results >>> results_copy.remove('string1') >>> results ['string2', 'string3'] >>> results_copy ['string2', 'string3']   A copy is what I made with list():  >>> results = ['string1', 'string2', 'string3'] >>> results_copy = list(results) >>> results_copy.remove('string1') >>> results ['string1', 'string2', 'string3'] >>> results_copy ['string2', 'string3']"
learnpython,3bksqu,novel_yet_trivial,1 point,Tue Jun 30 02:09:54 2015 UTC,"I see. So I didn't create a new list, I just 'created' another way to reference the same one. Thanks for pointing that out.  I'll admit I was still scratching my head for a while. Below is code following your examples, but more closely aligned to what I was attempting to do:  >>> list3 = ['item5', 'item6', 'item7', 'item8'] >>> for item in list3: ...     list3.remove(item) >>> >>> list3 ['item6', 'item8']   Correct me if I'm wrong here, but I think I see what's happening.    The loop starts at the beginning of the list, index 0, which is 'item5.' 'item5' is removed Index 0 is now 'item6' The loop moves over one spot to index 1, which is now 'item7' because the list was modified - essentially skipping over 'item6' 'item7' is removed index 1 is now 'item8' The loop tries to move over another spot but cannot, it has reached the end of the list even though it appears to have only gone through two iterations   I had no idea how to interpret this behavior until you pointed me in the right direction. Thanks for setting me straight!"
learnpython,3bkq8j,alpacafarming,1 point,Tue Jun 30 00:43:37 2015 UTC,Doesnt your camera thread need to be non-blocking?
learnpython,3bkq8j,elbiot,1 point,Tue Jun 30 01:28:20 2015 UTC,Can you be a little more specific?  The reason I'm running it in a separate thread is because it blocks while recording.
learnpython,3bkq8j,elbiot,1 point,Tue Jun 30 01:44:00 2015 UTC,So does your web interface stop working while it's recoding?
learnpython,3bkq8j,elbiot,1 point,Tue Jun 30 01:47:13 2015 UTC,"No, the web server, sensor scanner, and camera all run in different threads for the sole purpose of concurrency."
learnpython,3bj2ea,denialerror,3,Mon Jun 29 17:10:12 2015 UTC,"re.sub(pattern, repl, string, count=0, flags=0)¶  repl can be a string or a function; If repl is a function, it is called for every non-overlapping occurrence of pattern. The function takes a single match object argument, and returns the replacement string.   re.sub allows you to plug in a function that is supposed to transform the old value to the new one. Arguments are plugged in by the re.sub itself so you need to pass only the function object itself, without params.  >>> def fun(x): return '{}'.format( int(x.group(0))**2 ) ...  >>> re.sub( '[0-9]+', fun, 'x1x2x3 5' ) 'x1x4x9 25'   in this example i wrote a function that extracts the value from re.match object and transforms it to something else, in this case number -> number2 Each found number gets passed to the function, where the substitution is generated.   maybe the same written with lambda (anonymous, inlined function) will make it more clear  >>> re.sub( '[0-9]+', lambda x: '{}'.format( int(x.group(0))**2 ), 'x1x2x3 5' ) 'x1x4x9 25'"
learnpython,3bj2ea,Vaphell,2,Mon Jun 29 17:28:45 2015 UTC,"From the docs   Return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl. If repl is a function, it is called for every non-overlapping occurrence of pattern. The function takes a single match object argument, and returns the replacement string.   So this replace just refers to the function replace(match) which finds the first match in the regex search."
learnpython,3bj2ea,SanketDG,2,Mon Jun 29 17:21:01 2015 UTC,"The function is defined with a parameter but it is not called with one   This code doesn't call the function at all. re.sub itself will call the function.  In Python, everything is an object. That includes functions. That means you can pass a function as a parameter to another function, which is what happens here. Writing re.sub(..., replace, ...) tells re.sub to use the replace function in order to determine the substitution for each match it finds."
learnpython,3bj2ea,zahlman,1 point,Mon Jun 29 22:22:34 2015 UTC,"You can use functions like you use any other object.  Consider this (useless) function:  def call_func(some_func):     return some_func()   You can pass any function as an argument into call_func.  For example  def my_func():     print(""Hello, world!"") call_func(my_func) # => Hello, world!   This is basically what re.sub does.  It calls the function you pass it to determine what to replace things with so you can replace things however you want."
learnpython,3bkj3u,0x6fERRORBUFFEROVERF,2,Mon Jun 29 23:42:16 2015 UTC,"input_array.append(user_input.split())   This does not create a list of words.  It creates a list containing a single item, which is itself a list of words.  That means that in your loop, new_word is not a word but a list of words, and calling sorted() on that sorts the list of words.  The list() in there isn't doing anything.  There are a lot of things you can improve here.  First of all, try not to write functions like split_string() that mutate one of the objects passed to it.  Write functions that return new values.  In fact you don't even need a function for that, because str.split() already does exactly what you want: it returns a new list.  The same applies for sort_word().  def sort_each_word(words):     output = []     for word in words:         ... # sort 'word', append to 'output'     return output  users_input = input('Please enter a string: ') word_list = users_input.split() sorted_word_list = sort_each_word(word_list) print(' '.join(sorted_word_list))   See how much easier that is?  Also, you don't need to do any of this input_array[-1] / input_array.pop() stuff.  You're already iterating over each word in the list by having this in a for loop.  You don't need to modify that list at all.  Final side note: these are lists, not arrays.  You might want to change your variable names.  Python does have a data structure called an array, but it's very different than the list and can only be used with fixed-size numbers."
learnpython,3bkj3u,Rhomboid,1 point,Tue Jun 30 00:20:16 2015 UTC,"Thank you so much! That also explains why for a while I was getting output like below for some time.   [['hello', 'world']]   I'm still used to Java so it's been a difficult transition, but thank-you for all advise I'll give it a shot!"
learnpython,3bkj3u,Skillossus,1 point,Tue Jun 30 00:34:44 2015 UTC,"user_input_array = [] sorted_input_array = []  def sort_word(input_array, output_array):     for word in input_array:         # get word from input_array         new_word = input_array[-1]         input_array.pop()      # doesn't work         word_list = list(new_word)         b = sorted(word_list)         print(b)      # works     word_list = 'llamas'     b = sorted(word_list)         print(b)  def split_string(user_input, input_array=[]):     input_array.append(user_input.split())   string = input('Please enter a string: ') split_string(string, user_input_array) sort_word(user_input_array, sorted_input_array)   Ok, so a couple of things. Strings have a build in method split() so string_split isn't a necessary function.  You also want to use raw_input() instead of just input()  Python doesn't have arrays, what you're using are called lists. You can read more about python data types here.  Here is how I would probably go about writing this script  words = raw_input('Please enter a string:').split(' ') for word in words:     print ''.join(sorted(word, key=str.lower))   Oops I was a little hasty, I didn't initially realize it all had to be on one line.  words = raw_input('Please enter a string:').split(' ') sorted_words = []  for word in words:     sorted_words.append(''.join(sorted(word, key=str.lower)))  print ' '.join(sorted_words)"
learnpython,3bkj3u,neptunDK,1 point,Tue Jun 30 00:30:45 2015 UTC,"For people looking for the sub, its /r/DailyProgrammer"
learnpython,3bibsv,chucky_z,1 point,Mon Jun 29 13:37:30 2015 UTC,"One thing: avoid overwriting keywords in your code. list is a function that converts an object to a list, and is quite handy in certain cases. Overwriting it using list = ""blah"" can cause issues later.  When in doubt, run a shell and use the keyword module to see if your variable name is a keyword.    As for the main question, I'm unfamiliar with this API in particular. But, more generally, the best way to figure out if it works is to try it and see what happens. :)  Note that your linked documentation contains a link to more comprehensive documentation on the bulk command itself, here: https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html"
learnpython,3bibsv,JustTurrble,1 point,Mon Jun 29 18:42:48 2015 UTC,"So interestingly enough, I found a way to get this to do something, however, it appears to only return a single result!  It's not loading data like I expect.  What I'm doing something is (I changed from using the word list to using the word bulk_data, is doing something like...  bulk_data.append(operation)  bulk_data.append(data)  If I run this outside a function, it seems to work.  But, in trying to clean up my code, putting it in a function, and passing in a list...  It seems to not actually load anything!  I'm a bit stumped.  Does passing a list to a function (e.g.: def someFunction ( mylist )) do some magic to convert the list into... something else?"
learnpython,3biuf1,WeierstrassP,1 point,Mon Jun 29 16:11:53 2015 UTC,"A small critique  in your def check_solution(temp_board):  Instead of checking the condition of the if error_found ==  False, why not return False instead of setting error_found = True  Also.  in your return statement you are returning the temp_board parameter, but it is unmodified, so why include it in the return?"
learnpython,3biuf1,koderpat,1 point,Mon Jun 29 16:19:25 2015 UTC,Good question. I haven't really thought about that. Going to implement that in the next version.
learnpython,3biuf1,novel_yet_trivial,1 point,Tue Jun 30 19:05:13 2015 UTC,"line 62    print(""| %d %d %d | %d %d %d | %d %d %d |"" % (*row))   The * unpacks a tuple or list.   whether I should use condition == False or condition != True   if not condition:"
learnpython,3biuf1,uhkhu,1 point,Mon Jun 29 16:22:22 2015 UTC,"Nice, I'll keep that first tip in mind.  I guess the second one makes it more readable? EDIT: Wait, uhkhu explained that one quite well."
learnpython,3biuf1,novel_yet_trivial,1 point,Tue Jun 30 19:07:15 2015 UTC,"Just one quick thing I can see, when checking Boolean, you want to check identity and not equality. In general use == when checking for value equality (if two objects have the same value), and is for reference equality (if two references refer to the same object).   From your code:  if error_found == False:   Here you're checking if the error_found variable is referring to the same object definition as Python's built-in False and not the string 'False', so you want reference equality.   In this comparison:  if error_found is False:   is will return True if error_found and False point to the same Python object definition. Searching around reddit or stackoverflow for Boolean comparison will get you a bunch of answered questions regarding this issue. It's something that took me a while to understand due to Python's 'everything is an object' structure.   Side note: you can also evaluate for Boolean like this:  if error_found:  # enters if True   or   if not error_found:  # enters if False   Which is handy because the values None, False, [], zero of numeric types, empty mapping {}, and empty sequence [] are considered False in Python.  So if you're checking to see if a variable has been tripped/filled or whatever, it makes more sense to ask ""is this pointing to a value?"" instead of asking ""is this variable/list False?"", when it's intended to be filled at some point of the program and not act as a Boolean variable."
learnpython,3biuf1,uhkhu,1 point,Mon Jun 29 16:39:05 2015 UTC,"It is important to stress that you should only use is for None, True, or False. Beginners often have this problem:  >>> s = 5 >>> s is int(raw_input()) 5 True   However,  >>> s = 'uhkhu' >>> s is raw_input() uhkhu False   Since beginners are often confused enough, and since the only advantage to is is a slight speed improvement, I always recommend they stick with == for everything."
learnpython,3biuf1,gengisteve,1 point,Mon Jun 29 19:36:21 2015 UTC,"I disagree with using == for everything and would argue that the most Pythonic way to check if a sequence is not empty is through the inherent Falseness of an empty sequence:  if not seq:     print 'seq is empty'   Your example fails for the same reason this would:  >>> j = 'uhkhu' >>> k = ''.join(['u', 'h', 'k', 'h', 'u']) >>> k 'uhkhu' >>> j == k True >>> j is k False   The values of j and k are the equal, but the identity of j and k are not.   is essentially checks:  >>> id(j) == id(k) False   I think understanding these relationships is crucial for beginners to start thinking Pythonically in the beginning."
learnpython,3bjb7s,bubblepoper,2,Mon Jun 29 18:13:27 2015 UTC,As others have said: Python 2 and Python 3 are very similar.   Then you can try out http://www.diveintopython3.net/ and you'll see that there are very much alike.
learnpython,3bjb7s,Zahand,1 point,Mon Jun 29 19:28:29 2015 UTC,"You need to know both. Since most python code is written in python 2, you need to be able to read it and understand what it does. However, the future is python 3. Why don't you work through codecademy in python 2 and rewrite all the exercises in python 3 on the side? You will see that the differences are tiny; for most things it will just mean changing the print statement to a function."
learnpython,3bjb7s,novel_yet_trivial,2,Mon Jun 29 19:01:59 2015 UTC,Python 2 and python 3 are very very similar. Python 2 is also more widely used and accepted in the professional world.  I'd stick with Python 2.
learnpython,3bjb7s,guthran,6,Mon Jun 29 18:16:24 2015 UTC,"Not wanting to get into a Python 2 vs 3 argument at this time, but I'd personally warn against giving this advice to newcomers. Particularly one who states they would prefer to use Python 3."
learnpython,3bjb7s,JustTurrble,3,Mon Jun 29 18:29:45 2015 UTC,"I understand. What I truly meant was that because of the very few differences between versions, python 2/3 tutorials are interchangeable."
learnpython,3bjb7s,guthran,1 point,Mon Jun 29 18:52:02 2015 UTC,True enough. As long as that part's clear. :)
learnpython,3bjb7s,JustTurrble,1 point,Mon Jun 29 18:58:56 2015 UTC,"Why not go with a book or a video course of some sort (MIT OCW Intro to Comp. Sci. comes to mind...)? There are plenty of links in the sidebar, many of which are Python 3 oriented."
learnpython,3bjb7s,jkudria,1 point,Mon Jun 29 18:18:20 2015 UTC,"forgot to mention that i'm also currently reading ""think like a computer scientist"" which is actually what started the confusion. Because it uses python 3 and codeacademy uses 2. i was looking for something as interactive as codeacademy to supplement the book."
learnpython,3bjb7s,jkudria,1 point,Mon Jun 29 18:57:46 2015 UTC,"Well as /u/guthran mentioned above, the two are VERY similar (i.e. once you learn 2, learning 3 will take 15 min - or however long it takes you to read the page detailing the differences). I'd choose a good Python 2 book (again, sidebar) and stick with it.  Alternatively, ditch Codecademy and stick with Think Like a Computer Scientist. It's a damn good book that'll get you further than Codecademy (in my humble opinion). To make it interactive, just do ALL the code examples in the book. Don't just read it, code up all of the examples. That'll make it almost interactive."
learnpython,3bjb7s,jkudria,2,Mon Jun 29 19:23:40 2015 UTC,"thanks for the help, ive found an interactive version of the book! so excited!!"
learnpython,3bk5da,speccy88,2,Mon Jun 29 21:50:29 2015 UTC,"Not sure what you're trying to do or what the answer is, but some suggestions:  To avoid circular imports perhaps this arrangement would work:  you run my_main.py which imports and runs SPP-loopback.py  SPP-loopback.py is edited so that you add a call to function_one in my_functions.py:  import my_functions.py try:     while True:         my_functions.function_one() ....   A more elegant approach might be to sub-class the bluetooth library - but I don't know how you would access inside the while loop  Would it make sense to create a separate thread for the bluetooth process (subprocess module)?"
learnpython,3bk5da,maulynvia,1 point,Mon Jun 29 22:22:17 2015 UTC,"Good idea, instead of running the main.py, I run the SPP-loopback.py but the file now import a my_functions.py, so all I have to do is edit that file to change the code."
learnpython,3bhpjn,kruppy,10,Mon Jun 29 08:55:16 2015 UTC,"It's much simpler to use pandas.  import pandas as pd  df1 = pd.read_csv('master.csv',  delimiter=';') df2 = pd.read_csv('success.csv', delimiter=';')  with open('filtered.csv', 'w') as output:     pd.merge(df1, df2, on='ID').to_csv(output, sep=';', index=False)   It's well worth learning, there are many great resources out there for it.   http://www.gregreda.com/2013/10/26/working-with-pandas-dataframes/  Lots of videos from PyCon on youtube, etc."
learnpython,3bhpjn,commandlineluser,1 point,Mon Jun 29 09:09:59 2015 UTC,*edit:fixed
learnpython,3bhpjn,vacuu,1 point,Mon Jun 29 14:58:04 2015 UTC,"Thank you, that worked for me :)"
learnpython,3bhpjn,NoLemurs,3,Mon Jun 29 15:11:30 2015 UTC,"This is a basic programming operation and I think pandas is way overkill for it. If you will be doing a lot of this type of stuff consistently in the future, then in that case it might be a good investment to learn, but here imo.  To do this, I would the following:   open the csv files and read them into memory build up a list of all the matching rows write the final list into a new csv file   Step 1:   import csv  import sys   master = []  with open(""master.csv"",""rb"") as fi:       reader = csv.reader(fi, delimiter="";"")       for row in reader:            master.append(row)   success = []  with open(""success.csv"",""rb"") as fo:       reader = csv.reader(fo, delimiter="";"")       for row in reader:            success.append(row)   Ok, now step 1 is done. It's simple and dumb. There are two lists of rows now. Each row inside the list is itself a list of each element in the csv file. You can do ""print(master)"" or ""print(master[0])"" or ""print(master[0][0])"" to see this.  Now for step 2.   combined = []  for mrow in master:       for srow in success:            if mrow[0] == srow[0]:                 combined.append(mrow + srow[1:end])   Now you can print(combined) to verify it.   Step 3, write it to a csv file if it is correct so far.   open(""combined.csv"",""wb"") as fu:       writer = csv.writer(fu, delimiter="";"")       writer.writerow(combined)   I didn't test this code, so it probably won't completely run bug free."
learnpython,3bhpjn,ies7,1 point,Mon Jun 29 09:51:49 2015 UTC,"It would be much better to read the first file into a dictionary with 'ID' as the key. That way, id checks are fast, and you can skip the intermediate step:  import csv  master = {} with open(""master.csv"") as master_file:     reader = csv.reader(master_file, delimeter="";"")     for row in reader:         master[row[0]] = row  results = [] with open(""success.csv"") as success_file:     reader = csv.reader(success_file, delimeter="";"")     for row in reader:         if row[0] in master:             results.append(master[row[0]] + row[1:])"
learnpython,3bhpjn,TheBlackCat13,1 point,Mon Jun 29 13:32:11 2015 UTC,"if you're sql person, inner join with q can do the job.  https://github.com/harelba/q  https://github.com/harelba/q/tree/expose-as-python-api"
learnpython,3bjybs,joerod,1 point,Mon Jun 29 20:56:53 2015 UTC,"What is usersClient?  A class, instance, module?  Where did it come from?"
learnpython,3bjybs,TheBlackCat13,0,Mon Jun 29 21:13:12 2015 UTC,"from okta import UsersClient  usersClient = UsersClient(""https://example.okta.com"", ""EXAMPLE_KEY"")"
learnpython,3bjybs,Zahand,1 point,Mon Jun 29 21:15:23 2015 UTC,I assume what you returned is a generator. http://stackoverflow.com/questions/1756096/understanding-generators-in-python
learnpython,3bjxjw,iiThom,1 point,Mon Jun 29 20:51:15 2015 UTC,"This is one resource: http://www.greenteapress.com/thinkpython/html/index.html  A game such as that will definitely be doable, but you'll need to know the basics of programming and that can take some time to learn. You just gotta be persistent and try many resources that explain things in different ways."
learnpython,3bj13n,metal-over-plastic,3,Mon Jun 29 17:00:26 2015 UTC,"Python is more for the backend. What you're looking for is a frontend solution, such as AJAX."
learnpython,3bj13n,JustTurrble,1 point,Mon Jun 29 18:33:05 2015 UTC,"Ok, thank you!"
learnpython,3bj13n,elbiot,0,Tue Jun 30 00:31:18 2015 UTC,"Question unclear.  With django and I'm sure flask, bottle, whatever you can accept user uploads through a form, validate them (scale them too) and save them, making note in a database.  Then you can serve them with an html file or raw from a url based on the form data, file name, or uniquely generated id.  User pressing upload could redirect them to the display url.  Is that what you're asking about?"
learnpython,3bj13n,elbiot,1 point,Mon Jun 29 20:24:11 2015 UTC,What I meant by the question was I am making a website where you can upload a picture. Instead of hard coding in each picture I wanted a way to have the pictures indexed and then returned from the server so they can be displayed on the website.
learnpython,3bij8s,muddydoubletrouble,3,Mon Jun 29 14:44:03 2015 UTC,"simultaneously, function(n) gets called   No, the function is not called simultaneously.    5 is not equal to 0, so the else clause is invoked. 5 needs to be multiplied by the result from factorial(4), so python puts this function on hold to call it. 4 is not equal to 0, so the else clause is invoked. 4 needs to be multiplied by the result from factorial(3), so python puts this function on hold to call it. Etc ... etc  0 IS equal to 0, so 1 is returned. At this point there are 5 functions on hold in the system.  The function is unpaused, the returned value used in the multiplication, and the result returned to the paused function above it. All the way up the chain.   Edit: you also should note your program returns the result from (5 * 4 * 3 * 2 * 1 * 1). Can you see why? Can you make it return (5 * 4 * 3 * 2)?"
learnpython,3bij8s,novel_yet_trivial,1 point,Mon Jun 29 15:19:25 2015 UTC,"Oooh I get it:  n * factorial(n-1) when n==1 ==  1*1 == 1   n * factorial(n-1) when n==2  == 2*1 ==  2  n * factorial(n-1) when n==3  == 3*2 ==  6  n * factorial(n-1) when n==4  == 6*4 ==  24  n * factorial(n-1) when n==5  == 24*5 == 120  Thank you so much for that, it completely slipped my mind that factorial(n-1) means the returned value of factorial(n-1)"
learnpython,3bij8s,Ewildawe,2,Mon Jun 29 15:45:17 2015 UTC,"Well, I always like to think of it using the stack. What happens is when the program reaches line 5 - i.e.  return n * factorial(n-1)   It has to calculate factorial(n-1)... Which means the calculations get added to a waiting list of sorts until n-1=0 at which point all the unknowns are known. At this point it calculated 1 * 2 * 3 * 4 * 5 - IN THAT ORDER, cause it starts at the top of the stack... It needs the 2 to multiply with the 3 etcetera..   Hope I was of some use :)"
learnpython,3bij8s,Vaphell,1 point,Mon Jun 29 15:10:23 2015 UTC,"Thank you :) , both yours and /u/novel_yet_trivial's explanation helped me realize the mistake I was making."
learnpython,3bij8s,MykaB,2,Mon Jun 29 15:48:33 2015 UTC,"fac(5) depends on fac(4) so it hangs and waits for fac(4) spawned fac(4) depends on fac(3) so it hangs and waits for fac(3) fac(3) does the same with fac(2) fac(2) waits for fac(1) fac(1) depends on fac(0)    here you hit the recursion stopping condition (n==0) and with conclusive return value, the chain starts propagating the information in the opposite direction. fac(1) now can give the answer so it returns and closes, fac(2) having relevant information returns and closes, then fac(3), then fac(4) and then fac(5) which is what you were after."
learnpython,3bjsfl,anonymousperson28,2,Mon Jun 29 20:14:34 2015 UTC,I think you can just release the GIL in cython and use threads: http://lbolla.info/blog/2013/12/23/python-threads-cython-gil  Obviously you want to do as much as you can without coming back up into the GIL.
learnpython,3bjsfl,elbiot,2,Tue Jun 30 03:48:25 2015 UTC,"The only problem would be if spawning the processes is itself too expensive. This means the number of threads should be kept low (<100). If you need tens of thousands of threads, this might be a bit painful.  If you're only using ~1 core/thread, this is fine. If you're spawning lots of short tasks, a process pool might work."
learnpython,3bjsfl,Veedrac,1 point,Tue Jun 30 10:49:50 2015 UTC,great—I'm only using 1 core/thread. Thanks!
learnpython,3bjsfl,echocage,1 point,Tue Jun 30 21:40:21 2015 UTC,"What I would do, is use multiprocessing's ProcessPoolExecutor, and first try to run your code in parallel using ProcessPoolExecutor within Cython, and time it. I'm willing to be it's going to be nearly as fast, or faster than running it using a separate python script"
learnpython,3bjrpy,MarkTheSecond,3,Mon Jun 29 20:09:12 2015 UTC,"Sure.  There is one in the docs, referenced here:  http://stackoverflow.com/questions/6822725/rolling-or-sliding-window-iterator-in-python"
learnpython,3bjrpy,gengisteve,2,Mon Jun 29 20:19:15 2015 UTC,I assume you mean this answer in particular.
learnpython,3bjrpy,novel_yet_trivial,1 point,Mon Jun 29 20:24:31 2015 UTC,Yep.  The deque one is solid too.
learnpython,3bjrpy,gengisteve,1 point,Mon Jun 29 20:34:27 2015 UTC,"I was hoping it could be done with a more direct and simple aproach, but this is perfect, thankyou."
learnpython,3bjrpy,novel_yet_trivial,2,Mon Jun 29 20:48:27 2015 UTC,"There is always the simple but time-consuming method of creating a while-loop which manually produces each list by indenting the start and end point,   Not sure what you mean by this. The only way (that I know of) is to make a generator that returns a slice of the list based on the index.   def running_slice(list_, length=3):     for idx in range(len(list_)-length+1):         yield list_[idx:idx+length]   You could easily reduce that to a single line if you wanted.  Edit: /u/gengisteve's answer is better, because it will work with iterators of unknown length, like files, while mine only works with lists or tuples."
learnpython,3bjrpy,TheBlackCat13,1 point,Mon Jun 29 20:22:05 2015 UTC,"I know very little about list comprehension, so the best idea I could have thought of was to create a function that would find the length of the list and then iterate over it, creating the different splices and returning them.  This was better than what I could have done before, thanks for your help."
learnpython,3bjrpy,blackrat47,2,Mon Jun 29 20:52:24 2015 UTC,"The toolz package provides a lot of functions for manipulating iterators like this.  Specifically the sliding_window function does exactly what you want.  If you care about performance, cytoolz is a drop-in replacement that is faster thanks to Cython."
learnpython,3bjrpy,TheBlackCat13,1 point,Mon Jun 29 21:30:05 2015 UTC,"I'll take a look at this, thankyou."
learnpython,3bjrpy,blackrat47,1 point,Tue Jun 30 20:01:05 2015 UTC,"Zip.  mylist = [1,2,3,4,5] out = [list(triple) for triple in zip(mylist, mylist[1:], mylist[2:])] >>> [[1,2,3],[2,3,4],[3,4,5]]   Gets a bit tricky if you want to take more than 3ish elements at a time, though. Although I guess you could do  zipargs = [mylist[n:] for n in range(3)] out = [list(triple) for triple in zip(*zipargs)]"
learnpython,3bjo7h,fostejam,1 point,Mon Jun 29 19:45:19 2015 UTC,"First, you need to understand that (for most intents and purposes) a string is a list of characters. It is not a function. From the computer's point of view, the string 'fostejam' is a list ['f', 'o', 's', 't', 'e', 'j', 'a', 'm'].   A list can be indexed with square brackets. That means elements in a certain position in the list can be retrieved. Same goes for a string.   >>> 'fostejam'[2] #get the character at index 2 's' >>> ['f', 'o', 's', 't', 'e', 'j', 'a', 'm'][2] 's'   Empty quotes (double or single) represent an empty string, just like [] is an empty list."
learnpython,3bjo7h,novel_yet_trivial,1 point,Mon Jun 29 19:54:32 2015 UTC,So are the [] and () interchangeable? At least in context of string?
learnpython,3bjo7h,novel_yet_trivial,1 point,Mon Jun 29 20:34:38 2015 UTC,"No, () is used after a function name to return the result of the function. A string is not a function. [] is used after a strong name to return a section of the string.   Using () after a string is illegal syntax, as is using [] after a function (nearly always)."
learnpython,3birjt,rodogo,2,Mon Jun 29 15:49:51 2015 UTC,"You have to explain what you mean by ""in hex"".  int is a number.  hexadecimal, octal, decimal, and binary are just ways we can look at that number."
learnpython,3birjt,stillalone,1 point,Mon Jun 29 16:52:11 2015 UTC,"Multiply, divide, etc two hexadecimal numbers and get a hexadecimal answer.   The only way I can do it so far is convert the numbers from hex to dec, do the operation, then convert back"
learnpython,3birjt,Veedrac,2,Mon Jun 29 16:57:24 2015 UTC,"You don't convert from hex to decimal. You convert from a representation of a number to the number itself.  When you write  a = 1234   You're not assigning a to the ""decimal number"" 1234. The compiler converts the representation ""1234"" at compile-time to the number it represents and stores that in a.  You can then convert back to a decimal representation by doing str(a), repr(a) or print(a).  So what you want to ask is probably   ""How can I convert hexadecimal representations to numbers at compile-time?"" (A: use 0x123ABC), or ""How can I convert hexadecimal representations to numbers at run-time?"" (A: use int(""123ABC"", 16))"
learnpython,3birjt,KronktheKronk,1 point,Mon Jun 29 17:20:21 2015 UTC,"hexadecimal is a number system, it's just in base 16.  You can do all the operations on hex numbers that you can do on base ten numbers, be they ints or floats."
learnpython,3birjt,Vaphell,2,Mon Jun 29 19:14:51 2015 UTC,">>> 0xf24a 62026 >>> 0xf24a/0x62d 39.23213156230234 >>> '0x{:x}'.format( int(0xf24a/0x62d) ) '0x27'   0x means integer in hex format, but the result is going to be a plain int/float, so format is in order."
learnpython,3birjt,Vaphell,1 point,Mon Jun 29 17:03:15 2015 UTC,Thank you kindly.   I'm not at my computer but is that answer rounded or is that the actual division?
learnpython,3birjt,novel_yet_trivial,3,Mon Jun 29 17:08:22 2015 UTC,"in python2 / of 2 ints yields plain int. In python3 it's float as evidenced by the result of 39.23213156230234 (unless you explicitly use integer division //). I used py3 so i had to int() to truncate the result in order to make it hex-able.  >>> '0x{:x}'.format(255) '0xff' >>> '0x{:x}'.format(255.2) Traceback (most recent call last):   File ""<stdin>"", line 1, in <module> ValueError: Unknown format code 'x' for object of type 'float' >>> hex(255.2) Traceback (most recent call last):   File ""<stdin>"", line 1, in <module> TypeError: 'float' object cannot be interpreted as an integer   in python2 with integer result it would be straightforward, like this  >>> 0xf24a/0x62d 39 >>> '0x{:x}'.format( 0xf24a/0x62d ) '0x27'"
learnpython,3birjt,status_quo69,1 point,Mon Jun 29 17:12:15 2015 UTC,Interesting.  Thanks for doing that.
learnpython,3bjhw2,mkudzia,1 point,Mon Jun 29 19:01:03 2015 UTC,"That means that root.getiterator(""</dcvalue>"") is returning an empty list, so with nothing to iterate over the contents of the for loop are skipped. Does ""root"" have a seek() method?  Why don't you use BeautifulSoup?  Also, your import should be outside of the method and class.  If you provide some example data and what you want from it we could probably help you further."
learnpython,3bjhw2,novel_yet_trivial,1 point,Mon Jun 29 19:10:34 2015 UTC,"Hi there -- thanks! BeautifulSoup does actually seem like it might be a better direction, but I'm having problems getting it to play nice with my IDE (unless I'm just radically misunderstanding the docs, which is possible).  Here's the beginning of my re-vamped attempt using BeautifulSoup:  from bs4 import BeautifulSoup  soup = BeautifulSoup(open(""/path/to/my/file.xml"")) print(soup.get_text())   When I try to do this (as I thought I was supposed to from the BeautifulSoup docs) it throws an error:  soup = BeautifulSoup(open(""/path/to/my/file.xml"")) soup = BeautifulSoup(markup, ""xml"")   I'm trying to reformat the tags in a series of xml files. Currently they look like this:  <?xml version=”1.0” encoding=”UTF-8” standalone=”no”?> <dublin_core schema=”dc”>     <dcvalue element=”title” qualifier=”none”>1/7/1994</dcvalue>     <dcvalue element=”date” qualifier=”created”>1/7/1994</dcvalue>     <dcvalue element=”rights” qualifier=”none”>Rights Holder</dcvalue> </dublin_core>   What I want the files to look like is:  <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>  <dublin_core schema=""dc"">     <dc:title>1/7/1994</dc>     <dc:date.created>1/7/1994</dc>     <dc:rights>Rights Holder</dc>   My end goal is to write something which will iterate through a a set of files and re-write the XML tags so that they match the second format."
learnpython,3bhuve,daveWaveV,7,Mon Jun 29 10:14:31 2015 UTC,That's old style string formatting equivalent to the new style 'http://ichart.yahoo.com/table.csv?{}'.format(params). It inserts params into the string at the position of the %s.
learnpython,3bhuve,dunkler_wanderer,7,Mon Jun 29 10:26:46 2015 UTC,"It's just simple string formatting (old-style), not anything specific to URLs or urllib or url-encoding.  Like most operators, the % operator behaves differently depending on the types of operands.  When both operands are numbers, it performs modulus, but when the left hand operand is a string or unicode object, it turns into the formatting operator.  >>> 'pick up some %s at the store' % 'milk' 'pick up some milk at the store' >>> 'can I have $%d?' % 20 'can I have $20?' >>> 'did you put the %s in the %s yet?' % ('cake', 'oven') 'did you put the cake in the oven yet?'"
learnpython,3bhuve,Rhomboid,1 point,Mon Jun 29 11:03:19 2015 UTC,"Did you print url to see what it looked like?  As others have stated, % used in this way is a string formatting operator; it's always a good idea, IMHO, to use print to review all strings before you ""do something"" with them, whether that means using them as part of a db operation, sending and retrieving data to / from other scripts / websites / whatever.  Note that ""{}"".format() is the currently recommended way to format strings, but % still works. Review the documentation, and as an exercise, see if you can replace the % formatting and use .format() instead."
learnpython,3bhuve,forwardbiased,2,Mon Jun 29 17:38:24 2015 UTC,"yes, I did. But I was a bit overwhelmed with what would happen if I changed the code.  Using % felt like it would blow up in my face if I handled it wrong. It's modulus after all, I thought.   Well, I understand now."
learnpython,3bjdk2,buffalodiarrhea,2,Mon Jun 29 18:30:07 2015 UTC,Why is the file full of lists and not a serialized format such as JSON? What have you tried?
learnpython,3bjdk2,JustTurrble,1 point,Mon Jun 29 18:31:16 2015 UTC,"You don't want a dictionary of dictionaries (besides, your example is a set of dictionaries, which is impossible), you want a list of namedtuples.   >>> data = [['foo', 'value1', 'value2'], ['bar', 'value1', 'value2'], ['baz', 'value1', 'value2']] >>> from collections import namedtuple >>> Item = namedtuple(""Item"", 'Name something1 something2') >>> new_data = [Item(*x) for x in data] >>> new_data [Item(Name='foo', something1='value1', something2='value2'), Item(Name='bar', something1='value1', something2='value2'), Item(Name='baz', something1='value1', something2='value2')] >>> new_data[0].Name 'foo' >>> for thing in new_data: ...     ""{0.Name} has a something of {0.something1}"".format(thing) ...  'foo has a something of value1' 'bar has a something of value1' 'baz has a something of value1'"
learnpython,3bj83n,frootloops47,1 point,Mon Jun 29 17:51:27 2015 UTC,Sure you can use the csv module to read a CSV file instead of pandas. The csv module ships with Python.  Or just copy from excel into a text file and read the text file.
learnpython,3bj83n,novel_yet_trivial,1 point,Mon Jun 29 18:17:34 2015 UTC,"So how would I read this csv file?   This is the code that reads the file correct? How would I modify this to use the csv module?  read in videos CSV with pandas  df = pd.read_csv(CSV, sep="";"", skipinitialspace=True) df.Link = df.Link.map(str.strip)  # strip space from URLs"
learnpython,3bj83n,novel_yet_trivial,2,Mon Jun 29 18:20:05 2015 UTC,"We can help if you are stuck somewhere, but we will not write code for you. Here's a starting point: https://docs.python.org/2/library/csv.html"
learnpython,3bg2ue,b4ux1t3,3,Sun Jun 28 22:28:49 2015 UTC,Holy crap. I don't think I've ever wanted to integrate anything people have posted on /r/learnprogramming into my daily workflow. That has now changed.
learnpython,3bg2ue,SleepyHarry,1 point,Sun Jun 28 22:42:49 2015 UTC,"it still hasn't, you're on /r/learnpython ;)"
learnpython,3bg2ue,b4ux1t3,1 point,Mon Jun 29 13:14:12 2015 UTC,Hot damn. My streak continues!   I need to rename my multi.
learnpython,3bg2ue,terremoto,2,Mon Jun 29 13:30:39 2015 UTC,"echo ""export GITHUB_TOKEN = <your-token-with-quotes>"" | sudo tee -a /etc/environment   That, as written, will not work. Variable definitions cannot have space before or after the equal sign:  $ export X = Y bash: export: `=': not a valid identifier"
learnpython,3bg2ue,SleepyHarry,0,Mon Jun 29 05:52:26 2015 UTC,wow. thanks! :)
learnpython,3bg2ue,marksist,2,Mon Jun 29 05:59:59 2015 UTC,"Pretty cool, thanks for sharing!  You said that you want people to look for bugs - are you also taking constructive criticism/code pointers?  Regarding actual bugs though: line 6 of main.py:  import urllib2, urllib   will throw an ImportError in Python 3.x  edit: In fact, this won't run on Python 3 at all (print statements if nothing else) - yet you have a python3 shebang..."
learnpython,3bg2ue,LarryPete,0,Mon Jun 29 13:28:10 2015 UTC,the bugs have been fixed. :) thanks a lot for pointing it out SleepyHarry :) Do report an issue incase of any more bugs. Thanks again :)
learnpython,3bg2ue,LarryPete,1 point,Tue Jun 30 09:17:36 2015 UTC,"If you have not already, I think that you should cross post this to /r/github also."
learnpython,3bgm77,echocage,22,Mon Jun 29 01:26:10 2015 UTC,When you can convince a company to give you one.
learnpython,3bgm77,hharison,3,Mon Jun 29 02:54:44 2015 UTC,"I agree with this. An internship will (hopefully) never leave you worse off than you were before. So as long as you are honest during hiring, if the company thinks they want an intern of your skill level, go for it!"
learnpython,3bgm77,frozenbobo,4,Mon Jun 29 03:36:33 2015 UTC,"So probably looking toward the ""fake it till you make it"" slogan wouldn't be the right direction huh? I'm just worried I'll walk into an interview and completely be obliterated. Something like being asked to whiteboard a function to invert a binary tree or something..."
learnpython,3bgm77,Dranthe,6,Mon Jun 29 08:53:55 2015 UTC,So what if you do get obliterated? It's interview practice and everyone who has ever interviewed has bombed at least one. It doesn't really reflect bad on you. I've gotten some really great responses from saying something like 'you know that question I completely bombed? I figured it out on the way home' in my follow up email.
learnpython,3bgm77,thegreattriscuit,2,Mon Jun 29 10:01:15 2015 UTC,"Second /u/Dranthe:  If you're honest in your resume and communication before an interview, and they give you an interview, then it's not a waste of anyone's time.  It's possible that they aren't honest (with themselves, you, eachother, the rest of their organization) about what they are really looking for, and maybe they'll be looking for someone far beyond your skill level... but that's their problem, not yours.  Go in there with an honest representation of what you know, and what you're willing to do to improve.  If they ask you something you don't know, say ""I don't know that"".  If they ask you for something you're not sure about, but you've got enough context-clues that you think you kinda get what they're asking and would like to try it anyway, then say that's what you're doing, take a crack at it, and solicit some feedback when you're done."
learnpython,3bgm77,KronktheKronk,1 point,Mon Jun 29 15:18:48 2015 UTC,People don't hire interns who are already professional software engineering masters.  People hire interns who have a solid understanding of the basics and show an aptitude for learning and some form of non-douchey personality and then the people teach the interns on the job.
learnpython,3bgm77,useryourname,3,Mon Jun 29 15:00:23 2015 UTC,"Yeah, that's what I assumed. I was just wondering if there are any general signposts, if not, that's fine!"
learnpython,3bgm77,Darel001,2,Mon Jun 29 08:49:15 2015 UTC,Exactly. An internship is suppose to be a learning opportunity.
learnpython,3bgm77,skpkzk2,-2,Mon Jun 29 04:40:29 2015 UTC,I wad gonna say: When you get one.
learnpython,3bgm77,haptiK,2,Mon Jun 29 03:35:08 2015 UTC,"for an unpaid internship, you're ready the moment you feel like you can learn from watching people work  for a paid internship, look at the posted job responsibilities and ask yourself if you think you could handle those tasks. If you know you can't, don't waste your time, but if you think you can do it then apply and the company will decide if you're ready or not."
learnpython,3bgm77,jesseaknight,2,Mon Jun 29 06:48:14 2015 UTC,This was very helpful. Thank you.
learnpython,3bgm77,thegreattriscuit,1 point,Mon Jun 29 07:10:17 2015 UTC,"I'm not entirely sure I agree with that statement of ""if you know you can't, don't waste your time."" you are applying for a very very junior role and employers often look at the potential of applicants. if you can do at least one task in the job description apply anyway you never know what might happen. be positive and sell your enthusiasm to learn."
learnpython,3bgm77,frstwrldprblm,1 point,Mon Jun 29 09:47:26 2015 UTC,"Well I've been contracting out some projects on websites like odesk, but the workload isn't enough to pay all my bills, it was for a while but it's not steady enough. And it's hard to learn good practices while having no feedback from a more experienced developer, the code I write belongs to my clients, and I do all my work alone.  I'm honestly looking for a place were I can grow and hone my skills, and that can provide some steady income"
learnpython,3bgm77,haptiK,1 point,Mon Jun 29 09:53:03 2015 UTC,You're not ready. No one in school is ready to enter the workplace. Do it anyway - it's the only way you'll learn.
learnpython,3bgm77,hharison,1 point,Mon Jun 29 13:47:09 2015 UTC,I've been constantly employed since 2002 (it sounds better/worse than it really was)  I am consistently unready to enter the workplace.
learnpython,3bg1el,Oops_TryAgain,4,Sun Jun 28 22:16:38 2015 UTC,"Now, I am a beginner myself but doesn't from tkinter import * import everything from the tkinter module? Thus makingfrom tkinter import ttk, simpledialog, messagebox unnecessary?"
learnpython,3bg1el,thecode-,10,Mon Jun 29 00:59:12 2015 UTC,"Technically, yes, however what he's done is setup shortcuts by doing that. He can simply call ttk.Entry instead of tkinter.ttk.Entry. Both are perfectly fine to do. Good question!"
learnpython,3bg1el,Neceros,3,Mon Jun 29 02:03:55 2015 UTC,Thanks for clearing that up for me!!
learnpython,3bg1el,thecode-,2,Mon Jun 29 03:03:33 2015 UTC,How about that gif so I can run this sweet program?
learnpython,3bg1el,dahveed311,2,Mon Jun 29 03:18:45 2015 UTC,"Oh, right. Well, it's just a background image, so just comment out those lines to run it."
learnpython,3bg1el,MrDysprosium,1 point,Mon Jun 29 06:48:19 2015 UTC,"Question! How do I run this script? I have only thusfar been using ""repl.it"" to run my code..."
learnpython,3bi0vk,SmartestGuyOnReddit,1 point,Mon Jun 29 11:40:18 2015 UTC,Are you aware that you need to start from zero?
learnpython,3bi0vk,dempseye,1 point,Mon Jun 29 20:50:07 2015 UTC,I know the tuple is zero indexed yes.
learnpython,3bi0vk,adamnew123456,1 point,Mon Jun 29 22:46:27 2015 UTC,"It isn't that the element beyond the end is empty - it doesn't exist yet. Are you coming from Lua by chance?   You can test if an index is valid by checking if index < len(lst). Dictionaries have their own key in dictionary - it works for other containers, but it does something different."
learnpython,3bi0vk,SleepyHarry,3,Mon Jun 29 12:23:05 2015 UTC,index <= len(lst)  should have a strict inequality.
learnpython,3bi0vk,adamnew123456,1 point,Mon Jun 29 13:11:07 2015 UTC,"Indeed it should - I fixed it before you posted, but you must have gotten the old version of the page."
learnpython,3bi0vk,bpovs,1 point,Mon Jun 29 13:24:24 2015 UTC,"No I've never used Lua.  the solution ive chosen to use looks like this   try:     if list[counter + 3]:         print ""yes"" except IndexError:     print 'bye'"
learnpython,3bh7zq,fafyryas622,3,Mon Jun 29 04:59:47 2015 UTC,what have you at least done so far
learnpython,3bh7zq,reckscene,1 point,Mon Jun 29 05:08:32 2015 UTC,have a player class and a class tree class and when the player is in collision with the tree and presses space it adds 1 to the log object that comes from a items class the takes a name and number of that item
learnpython,3bh7zq,SleepyHarry,2,Mon Jun 29 05:14:17 2015 UTC,"So by the sound of it you have some kind of inventory system already in the backend, but you need a way to consistently display it? If this is the case, really you just need to find a way to display it to the console that approximates how you want it to appear within your game, then simply change every occurrence of print with show_text or whatever function you have set up to show stuff to the screen.  Regarding how to print it to console from a dictionary to a ""vertical list"" as you put it - for loops are your friend."
learnpython,3bh7zq,dunkler_wanderer,1 point,Mon Jun 29 08:49:43 2015 UTC,"i have displayed the inventory with pygame.font but the symbols also get blited on to screen with it like this      {'log':1,'rock':2} it displays all the symbols with it i want to know how i can get rid of those and then make the list go vertical"
learnpython,3bh7zq,SleepyHarry,1 point,Mon Jun 29 10:20:13 2015 UTC,"You can use a for loop to get the items of the dict:   inventory = {'log':1,'rock':2}  for key, value in inventory.items():     print(key, value)"
learnpython,3bh7zq,dunkler_wanderer,1 point,Mon Jun 29 10:39:10 2015 UTC,"Regarding how to print it to console from a dictionary to a ""vertical list"" as you put it - for loops are your friend."
learnpython,3bh7zq,dunkler_wanderer,1 point,Mon Jun 29 11:23:33 2015 UTC,how would i use a for loop to make the list vertical? sorry if im asking too much questions
learnpython,3bh7zq,dunkler_wanderer,1 point,Mon Jun 29 11:55:41 2015 UTC,"You need an offset for the y-position of your text.   pos_y = 100 for k, v in inv.items():     text = font.render(""{0}: {1}"".format(k, v), True, WHITE)     screen.blit(text, (30, pos_y))     pos_y += 40  # That's the offset."
learnpython,3bh7zq,dunkler_wanderer,1 point,Mon Jun 29 12:08:12 2015 UTC,i used that and it just makes the text move of screen
learnpython,3bfpt5,kickthebug,2,Sun Jun 28 20:39:23 2015 UTC,http://flask.pocoo.org/docs/0.10/tutorial/ http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world https://www.airpair.com/python/posts/buildredditapi
learnpython,3bfpt5,__skrap__,1 point,Sun Jun 28 21:06:45 2015 UTC,If you prefer printed material.  http://flaskbook.com
learnpython,3bfpt5,alaudet,1 point,Mon Jun 29 00:32:03 2015 UTC,"There is a Microsoft Virtual Academy course on using flask, it's a pretty good introduction."
learnpython,3bhiq1,2hands10fingers,1 point,Mon Jun 29 07:09:25 2015 UTC,print (sourceCode) is what you're after in Python 3.x. print was changed from a statement (example in your code) to a function from Python 2.x to 3.x.  You'll need to amend all of print calls in that example to prevent this error. :)
learnpython,3bhiq1,caineohfelix,1 point,Mon Jun 29 07:19:56 2015 UTC,"Regarding the inconsistent whitespace, this sometimes happens if you copy code verbatim. I have two suggestions:   when following a tutorial, I suggest copying as much code by hand as is reasonably possible. By typing it out manually you tend to (in my experience) get a much clearer idea of what's going on. A side benefit of this is consistent whitespace. see if your IDE of choice has anything in it's options to ""untabify"" regions for you. I believe IDLE has this (under Format along the top, or by hitting Alt + 6 on Windows)"
learnpython,3bhfo8,JayTh3King,0,Mon Jun 29 06:30:26 2015 UTC,"The syslog format is actually a standard, documented in RFC 5424, built on top of UDP. You can either check out the (long) linked RFC, or you can check out some of the syslog protocol libraries, like loggerglue, provided on the PyPI.  You'll have to do a bit of work with the socket sever, to actually get the messages from the server. The people at Python Module of the Week did an overview of getting UDP up and running, if you're looking for how to start socket-side."
learnpython,3bhfo8,adamnew123456,1 point,Mon Jun 29 13:22:18 2015 UTC,"thanks dude, this looks like exactly what im after."
learnpython,3be4my,Jorunkun,36,Sun Jun 28 10:49:45 2015 UTC,import numpy
learnpython,3be4my,LeftyDave,7,Sun Jun 28 11:08:21 2015 UTC,"Definitely. It's more natural to work with NumPy arrays than a list of lists. The array methods are very useful, and arrays support fancy indexing: a[i, j]."
learnpython,3be4my,interspellar,9,Sun Jun 28 12:27:53 2015 UTC,import numpy as np
learnpython,3be4my,Exodus111,1 point,Sun Jun 28 13:26:20 2015 UTC,import numpy as python_module_for_matricies_and_stuff   Get on my level.
learnpython,3be4my,SleepyHarry,1 point,Mon Jun 29 16:34:37 2015 UTC,Because Typing is fun.   I'm picking up what your are putting down.
learnpython,3be4my,Exodus111,21,Mon Jun 29 18:28:28 2015 UTC,"Use numpy  # create empty array array = np.zeros((128, 128))  # assign a value array[20, 5] = 10"
learnpython,3be4my,TheBlackCat13,2,Sun Jun 28 14:13:32 2015 UTC,Ugh that's good gorgeous
learnpython,3be4my,longooglite,1 point,Sun Jun 28 14:43:58 2015 UTC,"This. Numpy is invaluable, and fast, for matrices.   FWIW op, most import numpy as np (see above comments)."
learnpython,3be4my,Keyboard_Frenzy,14,Sun Jun 28 21:28:15 2015 UTC,arr = [[0 for x in range(128)] for x in range(128)]   creates a 128x128 array and initalizes to 0. (its actually a list containing lists) you can then for example  arr[64][64] = 1
learnpython,3be4my,IsSuEat,2,Sun Jun 28 11:11:41 2015 UTC,Thanks!
learnpython,3be4my,Mekire,3,Sun Jun 28 11:24:09 2015 UTC,"This creates 128 copies of the same list.  Not good.  >>> lst = [[0] * 4] * 4 >>> lst [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]] >>> lst[0][0] = 10 >>> lst [[10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0], [10, 0, 0, 0]] >>>"
learnpython,3be4my,dunkler_wanderer,2,Sun Jun 28 11:41:13 2015 UTC,"Oops, you're right. Deleted the post.  Edit: But [[0] * 4 for _ in range(4)] works."
learnpython,3be4my,liorX_O,1 point,Sun Jun 28 11:46:22 2015 UTC,thx for the info!
learnpython,3bf5nh,pylund,3,Sun Jun 28 17:51:34 2015 UTC,Maybe a restful API might be an option - here is a tutorial I ran across - https://www.airpair.com/python/posts/buildredditapi
learnpython,3bf5nh,__skrap__,1 point,Sun Jun 28 21:12:34 2015 UTC,"Hey, that tutorial is neat! It might help me a lot. Thanks for sharing"
learnpython,3bf5nh,FlockOnFire,2,Sun Jun 28 23:36:45 2015 UTC,"Python is purely a language running on the server side. So the best way is indeed to use asynchronous calls via javascript -> ajax (or any other client side language, but js is the obvious solution).   For us to help you better, enable debugging on Flask and check what error you are actually getting. :)"
learnpython,3bh1da,MrDysprosium,3,Mon Jun 29 03:50:28 2015 UTC,"By ""locks up"" do you just mean taking a long time? You're using an O(n2 ) algorithm, which basically means the running time is about the square of the length of the input. If you enter 1 million, the program will have to do about a trillion operations. That's going to be slow!  As for your actual question, yes you can install Python. How to do it exactly will depend on your operating system. I don't know which you're using, so my best advice is to google ""How to install Python on (insert OS here)""."
learnpython,3bfv5g,itoolovejuice,3,Sun Jun 28 21:24:08 2015 UTC,"I kept playing around with it till I got it to work. Seems like you have to send all of the data, that means even the fields you are not filling. Using inspect element you can see what to send: http://i.imgur.com/ltHjEN3.png  This is what I came up with:   import requests  session = requests.Session() session.headers.update({'Referer': 'http://jobs.spb.ca.gov/wvpos/adv_search.cfm'})  payload = {     'title':'',     'dept':'',     'location':'',     'order':'title1',     'daterange':'0',     'dept2':'',     'location2':'',     'tenure':'',     'tbase':'',     'class2':'5393',     'sal1a':'',     'sal1b':'' }  r = session.post(""http://jobs.spb.ca.gov/wvpos/search_p.cfm"", data=payload)   For some reason it only works if you send a referer (also seen via inspect element)"
learnpython,3bfv5g,drivfe,1 point,Tue Jun 30 16:53:13 2015 UTC,"Thank you for your time and effort to help! I now realize I need to take a deep dive into the session object documentation.. A couple quick follow ups..   I'm using Safari inspect and it shows the following fields (see imgur link) which is very close to what you have there.. I suspected it might have wanted me to send all the fields, so I replicated what my inspect showed me, but I'm not quite understanding why yours and mine would be different?  Imgur  Lastly, could you please explain the function of the headers.update change of ""Referer""?  I have not seen it before, does it have something to do with preserving ""state""?  Once again, thank you for your help and I look forward to improving and contributing back in the near future!"
learnpython,3bfv5g,drivfe,2,Tue Jun 30 22:26:58 2015 UTC,You need to check what the actual request is in inspect element. What you're looking at is the HTML of the form. I've never used Safari and I'm not on a PC right now so I can't really help you with that right now.  IIRC the referer header just tells the server from where the request was made. For example if you click on a link posted on reddit.com/r/pics/... then the referer would be set to that reddit link. I don't know why this website requires the referer header to be set.
learnpython,3bfv5g,theheat715,2,Tue Jun 30 23:07:43 2015 UTC,Is there any reason you have to use the requests library? I would think using Selenium to just fill in the form and submitting it might be easier.
learnpython,3bfxc6,Moby69,2,Sun Jun 28 21:42:07 2015 UTC,I think what you're looking for is templating. Check out jinja!   http://jinja.pocoo.org/
learnpython,3bfxc6,echocage,1 point,Sun Jun 28 21:44:54 2015 UTC,"and, by extension, flask.  http://flask.pocoo.org"
learnpython,3bfxc6,me-the-monkey,1 point,Sun Jun 28 22:13:58 2015 UTC,Can Bottle be used for that too? Or do I also need to learn jinja and flask as well?
learnpython,3bfxc6,me-the-monkey,1 point,Sun Jun 28 22:24:08 2015 UTC,Bottle is analogous to flask and has it's own templating mechanisms.
learnpython,3bfxc6,me-the-monkey,1 point,Sun Jun 28 22:30:19 2015 UTC,Got it.   So let's say I go with Bottle (and Python) and HTML/CSS.  Do I upload 2 separate files to godaddy or just 1 big file that has both the Bottle/Python code and the HTML/CSS code interweaved with templates?
learnpython,3bfxc6,me-the-monkey,1 point,Sun Jun 28 22:51:18 2015 UTC,You'd have probably one bottle file and then the template file.
learnpython,3bgfhg,pythonScrub,2,Mon Jun 29 00:23:00 2015 UTC,"This is not working quite the way decorator classes are meant to work, the final class is meant to include the cost from the base classes.  I have fixed this and made the Beverage class abstract so that it can never be initialised.  I have also created just one base class since the only difference was in the actual values so you don't need a different class.  I would probably not create something like this in a real world application, I actually had to look up how to create an abstract class.  I would just use a base class and various instances, much simpler to keep track of.  Also the idea of getters and setters is from the C and Java world of OO, Python takes the view that you just access the variable directly (We are all adults here).  from abc import ABCMeta, abstractmethod class Beverage(object): #Base class     __metaclass__ = ABCMeta     @abstractmethod     def get_description(self):        return(self.desc)     @abstractmethod     def get_cost(self):         return(self.cost) #################################### # Base Beverages #################################### class Baseblend(Beverage):     def __init__(self, desc, cost):         self.desc = desc         self.cost = cost  #################################### # Decorators for beverages #################################### class MilkDecorator(Beverage):     '''Adds milk to your beverage!'''     def __init__(self, decoratee):         self.desc = decoratee.desc + "" Milk""         self.cost =  decoratee.cost + 10  class MochaDecorator(Beverage):     '''Adds mocha to your beverage!'''     def __init__(self, decoratee):         self.desc = decoratee.desc + "" Mocha""         self.cost = decoratee.cost + 30  u = Baseblend('House Blend', 130) v = MilkDecorator(u) #Milk added w = MochaDecorator(v) #Mocha added print(w.get_description(), w.get_cost()) #print result print(w.desc, w.cost) #print result the Python way"
learnpython,3bgfhg,nwilliams36,1 point,Mon Jun 29 04:31:07 2015 UTC,Thanks that is fantastic! It was exactly what I was concerned about that I was achieving the outcome without actually using the pattern properly. Java and python are very different and I'm having a bit of trouble wrapping my head round it (following a Head First Design Pattern Book). Cheers!
learnpython,3bgffc,Moby69,3,Mon Jun 29 00:22:28 2015 UTC,"localhost is exactly what is sounds like.  Whatever computer you are using (or have ever used) has an internal network interface called the loopback interface that resides at 127.0.0.1 .  localhost is the name of 127.0.0.1  If you are on windows go to a command prompt and type; ipconfig /all This will give you a listing of all network interfaces on your computer. You will see an IP address for your wifi interface or lan connected interface if connected with a cat 5 wire. You should also see a loopback interface called localhost with ip address 127.0.0.1  I can't recommend a good entry level networking course enough, it will serve you so well for so long.  Learn about TCP/IP and DNS.  This stuff has been around forever and will be for a very long time."
learnpython,3bgffc,alaudet,1 point,Mon Jun 29 00:40:34 2015 UTC,"Thanks alaudet. Is there a specific entry level networking course that you would recommend? I do feel that I am really limited in my ability to create websites and programs because I don't understand how all these things relate. I've done all the codeacademy tutorials so I get the coding syntax, but when it comes to putting it all together and actually create a real website I'm totally lost."
learnpython,3bgffc,alaudet,2,Mon Jun 29 00:48:13 2015 UTC,"It's hard to recommend any specific resource as it depends on your learning style.  I think you can find enough stuff online with a google search like ""networking for beginners"".  See what comes up, there will be some web tutorials, youtube videos, all kinds of stuff.  Try and find something that will ease you in, give you the big picture.  It really is very interesting when you get into it.  Depending on your learning style maybe an in class offering at your local college.  I have been into networking for well over 20 years and I can tell you that it is cumulative knowledge.  Once you understand it, it will make all other areas of IT make more sense.  There are other people that could probably give you better advice.  Maybe /r/networking have some ideas.  If people give you a hard time just nevermind them.  They were asking the same questions once upon a time themselves, and they are not geniuses I can assure you."
learnpython,3bgffc,xiipaoc,1 point,Mon Jun 29 01:04:19 2015 UTC,Harvard's CS75.
learnpython,3bgffc,metl_lord,2,Mon Jun 29 02:07:03 2015 UTC,"localhost is the host name for 127.0.0.1, which is your computer. When doing local development, the web server is running on your computer and you access it through localhost.   When you move to a remote server (production), you will change the references to localhost to the domain name you are using. This is where it's helpful to use a framework that will do this for you."
learnpython,3bgffc,Intrexa,2,Mon Jun 29 00:31:04 2015 UTC,"'localhost' is the loopback to your machine. What that means, is that when you try and resolve the DNS name of 'localhost', you always get your computer, so when the browser attempts to go to the server/website 'localhost', it ends up attempting to connect to the computer the browser is on, your computer.  Normally when you go to http://google.com, the browser does a DNS lookup to find out the IP address of google.com, and gets back 216.58.219.206, and then attempts to connect to the server at that IP address. You could just as easily type in http://216.58.219.206 and end up at Google instead of typing in Google.  Your computer has a name that you gave it when you first installed it. You could just as easily get to your own website on your own computer by going to http://Moby69Computer:8080, but the tutorial doesn't know the name of your computer, and 'localhost' was given as a shortcut that will always work.  The '8080' part is the port your browser is supposed to connect on. The standard port for http traffic is port 80, so when you go to http://reddit.com, you're connect to reddit on port 80. It's the same as if you typed http://reddit.com:80. Port 8080 is often used for developmental purposes.  So, to get your website on a real url (mywebsite.com), you need to get those files from your computer onto whichever computer the dns name of mywebsite.com resolves to. For the most part, that means buying a domain name, and registering an IP to that domain name, so when people go to mywebsite.com, DNS will give them the IP you really want them to go to, which is your computer.  To actually get the files onto that computer, that's easy. You can just copy them anyway possible, thumb drive, ssh, email them to yourself, log onto that computer, download them, ftp, any way.   To get the website actually running, it looks like you need to get Bottle onto that computer, along with the website you wrote, and run it, and bottle should handle it.  I realize I just threw a ton of information at you, so feel free to ask for clarification."
learnpython,3bgffc,Intrexa,1 point,Mon Jun 29 00:49:51 2015 UTC,"Thanks for your input. I bought a domain name and hosting on godaddy.com. But I got confused when you wrote ""registering an IP to that domain name, so when people go to mywebsite.com, DNS will give them the IP you really want them to go to, which is your computer"". I'm doing all my coding out of my laptop - so are you saying that when people get on my website, I would want them to connect to the IP address of my computer?  Also, when you talk about ""getting the files onto that computer (via ftp etc)"", aren't these files already on my computer? Similarly when you talk about getting Bottle ""onto that computer"", is this another computer you are talking about?  Thanks"
learnpython,3bgffc,xiipaoc,2,Mon Jun 29 01:06:46 2015 UTC,"So, the big thing here is that even though you are doing all your coding on your laptop, that is just for development purposes. It's meant just for you to work on closely, without worrying that the world is going to see what you're doing. When you are ready, and think the sites good enough, you are going to deploy it for production purposes. That means taking all the code you have been working on, and getting it off your laptop, and getting it onto the server that will actually be running your website 24/7.  So yes, the computers are on your computer that you are physically in front of, but the computer you want to actually run the website is in a goddady datacenter, so you need to get the files from your computer, to the godaddy datacenter.   I bought a domain name and hosting on godaddy.com.   So, you bought 2 separate things from goddady: A domain name registration, and a server to run your website. For the actual server that is going to run the website, godaddy gave you an IP and said ""Hey, point your domain here!"", as well as some other info.   For the domain name registration, Godaddy gave you a log in credential to manage your account, and when you log in, there's going to be a box asking ""What IP do you want this domain name to point to"". You want to point to the IP of the server you're renting. Godaddy probably has a really good tutorial of how to do it, since you bought both the domain name, and the server share from 1 company.  Once you follow that tutorial from Godaddy so that when people type in 'mywebsite.com', and end up at the server you are renting from godaddy, that is when you want to take the website you have been developing on your laptop, and get it onto the godaddy server you are renting."
learnpython,3bep0x,AlexKingstonsGigolo,3,Sun Jun 28 15:16:27 2015 UTC,"Should be pretty simple really. What do you think of this?  def sum_dict(d):     if isinstance(d, int):         return d     return sum(map(sum_dict, d.values()))"
learnpython,3bep0x,liam_jm,1 point,Sun Jun 28 15:42:23 2015 UTC,"This can definitely be done pretty compactly with a recursive algorithm. Whether that counts as simple depends on how you feel about recursion.  Have a go and post your attempt, and you'll probably get more useful feedback."
learnpython,3bep0x,NoLemurs,1 point,Sun Jun 28 15:42:01 2015 UTC,"Thanks, I've edited the post to reflect my thinking."
learnpython,3bep0x,NoLemurs,2,Sun Jun 28 15:45:48 2015 UTC,"Your pseudo-code looks like the right idea.  Actually, if you look at /u/liam_jm's code, that's more or less what it does. If you want to work it out for youself, try not to look at his code!"
learnpython,3bep0x,adamnew123456,-1,Sun Jun 28 15:53:42 2015 UTC,There's nothing in the standard library that I know of for iterating recursive dictionaries - are you running into any issues writing the code yourself?
learnpython,3bep0x,kalgynirae,2,Sun Jun 28 15:25:37 2015 UTC,"No, I was just wondering if there was a more ""pythonic"" way than recursively calling a function which checks if the value is a dictionary or an integer."
learnpython,3bep0x,hharison,2,Sun Jun 28 15:42:08 2015 UTC,"This is very subjective, but perhaps it might feel more Pythonic to write a general-purpose recursive dictionary iterator. Something like this...  def nested_values(d):     for value in d.values():         try:             yield from nested_values(value)         except AttributeError:  # oh, that wasn't a dict             yield value   Then you can just pass that to a normal sum call:  sum(nested_values(foo))"
learnpython,3bep0x,SleepyHarry,1 point,Sun Jun 28 22:06:58 2015 UTC,This is exactly what I was going to write.
learnpython,3bep0x,kalgynirae,1 point,Mon Jun 29 02:59:19 2015 UTC,"You need the try block outside the for loop, but otherwise perfick.  Although it's worth noting yield from needs Python >= 3.3  edit: I wonder if we need to deal with the possibility that we want to flatten a dictionary of a custom class that has a method (or even attribute!) called values? Is that going too far? Or is it fine to defend against this and write something like:  def nested_values(d):     if isinstance(d, dict):         for x in d.values():             yield from nested_values(x)     else:         yield d"
learnpython,3bep0x,SleepyHarry,1 point,Mon Jun 29 15:33:53 2015 UTC,"I put the try block there intentionally. Yes, it would work with the try block on the outside, but then it wouldn't throw an exception if you passed in a non-dictionary; and I think it's better if it does throw an exception in that case."
learnpython,3bep0x,kalgynirae,2,Mon Jun 29 15:44:52 2015 UTC,"Fair enough, that's my mistake reading it, I had assumed it went a level lower.  My question about having a dictionary of custom classes with a values attribute/method still stands though. Is that too much of an edge case to worry about?"
learnpython,3bg1t5,kruppy,1 point,Sun Jun 28 22:20:04 2015 UTC,"Look into try/except blocks: whichever line it's failing at, just surround it in  try:     # line except ValueError:     pass  # or do something more clever - logging, at least   Otherwise, try to fix your data. I'm questioning the backslashes and extra quote marks... or there might be a spare tab somewhere else in the line. Not a fan of tsvs myself, tabs get messed around too much between file systems."
learnpython,3bg1t5,blackrat47,1 point,Sun Jun 28 22:50:21 2015 UTC,"filename, text = prev_row[0], ' '.join(prev_row[1:])   You can use the join method to just join whatever elements in the list are left."
learnpython,3bg005,profesorfrink42,2,Sun Jun 28 22:05:05 2015 UTC,"Brute force seems fine, unless it's taking too long to run.  For the labs, why not just consider class_a+lab_a1, class_a+lab_a2 and class_a+lab_a3 as items in and of themselves?  So two lecture possibilities with three lab possibilities each are six possibilities total.  There's also itertools.permutations.  So you could just write a function that returns True if the permutation is valid and False otherwise and just filter the results of the permutations in one line:  possibilities = filter(is_valid, itertools.permutations(classes,4))   I'm assuming you want to take four classes in the above example."
learnpython,3bg005,elbiot,1 point,Sun Jun 28 23:24:14 2015 UTC,"Consider greedy algorithms. Iterate through all the classes as a first choice. However for the second, third, and fourth choices, simply take whatever fits into your schedule. The greedy approach takes whatever it can to satisfy your restrictions (no overlapping) but without any sense of optimality."
learnpython,3beigt,Oli_Picard,2,Sun Jun 28 14:09:56 2015 UTC,"Have you checked that you're receiving data from your request? ie, that the ""for row in csv_reader:"" loop is actually seeing any rows to work with?"
learnpython,3beigt,jibbly_jibbly,1 point,Sun Jun 28 14:23:01 2015 UTC,"Hey jibbly_jibbly, I can confirm I'm seeing row data from the URL in question. If i do a direct write to binary everything loads ok. If i attempt to manaully add the rows in the loop statement they do not appear. Have considered using stringIO to decode the data then encode it back."
learnpython,3be2un,DoTheEvolution,1 point,Sun Jun 28 10:15:40 2015 UTC,"thanks...  well, your comment made me think why do I really need sudo...  originally it was essential, but now I think I can do without it if its ok to store a changing ~300MB database in ~/.cache/ or somewhere where sudo is not needed.  The database is not really that important and can be recreated whenever...  so I guess you right to avoid using sudo    Anyway, I am not 100% sure on the code thats there   it checks user, it not running as a root then it prepares loads of system paths and stats and shit as arguments and then calls os.execlpe sudo with those arguments.   os.execlpe is replacing process or something, is this suppose to elevate current process from running as an user to run as root? Seems handy. But I am doing PyQt, so it would need some frontend for that I think."
learnpython,3be2un,5225225,1 point,Sun Jun 28 12:20:03 2015 UTC,"Actually, it may be more secure to not run the entire thing as root.  (for a lot of things) 90% of the code doesn't need it, so why should it be given root? It's better to split the code in such a way that it has root for as little time as possible, or not at all."
learnpython,3be2un,in_the_bilboes,2,Sun Jun 28 12:54:11 2015 UTC,"...a changing ~300MB database   What kind of database is it?  AFAIK most databases have their own auth mechanism and, in agreement with u/thaweatherman, I think calling sudo in your code is not a good idea.  If your database doesn't have authentication, maybe you should look into one that does. and handle things that way."
learnpython,3be2un,in_the_bilboes,1 point,Sun Jun 28 13:29:15 2015 UTC,"just normal sqlite, its a list of files and folders in the file system, path, size, mdate,... I am making file search in pyqt"
learnpython,3be2un,gameplace123,1 point,Sun Jun 28 13:47:34 2015 UTC,"I'm not sure what you're doing, but it's probably ok to store the sqlite database in some kind of app config directory.  Firefox, for example, stores a bunch of data in sqlite databases in ~/.mozilla/firefox."
learnpython,3be2un,eliasp,1 point,Sun Jun 28 14:07:07 2015 UTC,No sure what distro you're running (not sure if it matters) but you could add the script to your sudoers file.
learnpython,3bfuxd,cosgus,2,Sun Jun 28 21:22:21 2015 UTC,"In selenium, clear your cookies each time?"
learnpython,3bfuxd,elbiot,1 point,Sun Jun 28 21:34:33 2015 UTC,Nah doesnt work. Im trying the following  browser=webdriver.Chrome()   and then calling   browser.delete_all_cookes()   before each requests.
learnpython,3bfuxd,elbiot,2,Sun Jun 28 21:57:04 2015 UTC,"I'm confused.  You're saying requests gets a response that is related to the last page you visited in your browser?    Can you visit the pages you want to in your browser?  If so, selenium should work.  With selenium, you should just use the navigation elements on the page rather than creating your own post requests.  If you can't do it manually in your browser then python probably won't be able to do it either."
learnpython,3bfuxd,elbiot,1 point,Sun Jun 28 22:19:49 2015 UTC,"It's difficult to explain in type. I laid it out as best I can in the stack overflow link in my post.   Basically yes requests gets a response related to the date I most recently visited in browser. I wrote the program first to work for a specific date which worked fine using requests and no selenium. Now I'm trying yo iterate over multiple days and having this problem.  I'm submitting requests not to the page url but to a url I found in the headers that responds with the data I'm after, usually. This url it's not date specific. Sometimes it responds with the day I most recently visited in browser. Sometimes it responds with the day after the day it requested the past time I ran the program. Sometimes it responds with an empty object. Really confusing  I'm new to programming and just learned about selenium yesterday so I'm trying to avoid rewriting the whole thing with selenium. But I'll give it a shot  And I can recreate everything in browser with no problem"
learnpython,3bfuxd,elbiot,2,Sun Jun 28 23:45:11 2015 UTC,"Well that's really bizarre.  It implies that they are using your IP address to make assumptions about who you are and what information you want.  Seems like a terrible idea.  Or maybe you just keep reusing the same cookie even though they are trying to give you a new one.  Look at requests sessions to persist your cookies, and fake your user agent.  Selenium should only be necessary if they are doing tricky things with javascript  PS: you might want to look at the cookies your getting also."
learnpython,3bfuxd,elbiot,1 point,Sun Jun 28 23:58:04 2015 UTC,Err I am using the same cookie with every request. Could that be my problem? I will take a closer look at the headers when I'm home.   I feel like if I've gotten this far without selenium I should be able to finish.  Edit: and I'm already using session. I had to since the site is tslv1 protocol
learnpython,3be1g8,denialerror,4,Sun Jun 28 09:49:27 2015 UTC,I find this tutorial project has a layout works well for flask.   https://github.com/miguelgrinberg/flasky
learnpython,3be1g8,LeftyDave,3,Sun Jun 28 10:28:17 2015 UTC,"It seems that your app will be quite small, so I think it is OK to have everything in one file. However, as it grows over time, you might want to split it up.   Have a look at github to see how others are doing it. I can't recommend a good example but maybe other commenters will.   Good luck!"
learnpython,3be1g8,polished_iconoclast,1 point,Sun Jun 28 10:24:15 2015 UTC,"As other said, take a look at Github. Another thing that helped though is this fairly detailed blogpost about how to structure a project and everything else to do with that sort of thing. Very useful once you get to larger projects."
learnpython,3bfsf6,fapple_computers,2,Sun Jun 28 21:00:57 2015 UTC,"print() wants str objects—it will encode them for you using the default encoding.  When you pass a bytes object, it gets converted to a str (by having str() called on it, which for a bytes object does the same thing as repr()) just as would happen to any other non-str passed to print().  If you get encoding errors when you try to print the not-encoded text, then that means your default encoding (more specifically, the encoding with which Python decided to open the sys.stdout stream) is wrong. (More likely it's actually set correctly and your terminal isn't going to handle UTF-8.) Do some searches for your operating system, what you're using to run your script, and ""default encoding"". If you really want to write utf-8 anyway to see if it works, you can write bytes to the buffer directly as described in the note here: https://docs.python.org/3/library/sys.html#sys.stdout"
learnpython,3bfsf6,kalgynirae,1 point,Sun Jun 28 21:25:59 2015 UTC,"Thank you for your reply, but I'm afraid it may be a bit over my head at this time. I'm using Windows 7 on a 32-bit OS and run my python program from and print to the Command Prompt. Google has yielded info on making Unicode charset default in cmd.exe but I'm not sure I want to mess with that at this time due to my lack of understanding the issue."
learnpython,3bfsf6,kalgynirae,3,Sun Jun 28 22:09:38 2015 UTC,"Ok, unfortunately Windows cmd.exe is notoriously difficult to get working with Unicode. tl;dr is: You shouldn't call .encode('utf-8') before printing, because print() does that for you using whatever encoding cmd.exe is set to use (which is not UTF-8). Your options to fix your problem are either to change the default charset of cmd.exe or to remove/replace the offending characters before printing."
learnpython,3bfsf6,caineohfelix,1 point,Sun Jun 28 22:19:46 2015 UTC,"I get what you're saying now, thank you. Do you know if changing the default charset of cmd.exe will have any adverse effects outside the command prompt?  EDIT: I took your advice and didn't encode to utf-8 and just replaced the long dash with a short one. It works now:  print(link_text.replace('\u2013', '-'))   Thanks again for your help!"
learnpython,3bfsf6,caineohfelix,1 point,Sun Jun 28 22:42:20 2015 UTC,You're encoding the text into a UTF-8 byte string there.  If you were to run link_text.decode() currently you'd get what you're looking for.  >>> s = b'Some text \xe2\x80\x93 more text' >>> s.decode() 'Some text – more text'   Perhaps link.text is already the string you're looking for?
learnpython,3bfsf6,caineohfelix,1 point,Sun Jun 28 21:12:40 2015 UTC,"Thank you for your feedback. When I print link.text without encoding I get the UnicodeEncodeError  Following your suggestion I amended my code to this:  link_text = link.text.encode('utf-8') link_text.decode() print(link_text)   But I still get the same b'Some text \xe2\x80\x93 more text' so I must still be doing something wrong. I think I may follow /u/kalgynirae's advice below and look into removing the long dash or changing the default encoding in cmd.exe. Unless you may have another suggestion?  EDIT: I resolved the issue with the simplest solution and ditched the encoding to utf-8 and just replaced the long dash with a short one when printing:  print(link_text.replace('\u2013', '-'))"
learnpython,3bfrgf,MrDysprosium,3,Sun Jun 28 20:52:32 2015 UTC,"Just a beginner, but I think this would solve your problem...  for a in range(3, int(x ** .5) + 1, 2):   Your range isn't including the square root."
learnpython,3bfrgf,mmdonut,3,Sun Jun 28 21:38:05 2015 UTC,"Expanding on this: range(a, b) does not include b. For example, range(1, 5) is [1, 2, 3, 4]. range(3, 5, 2) is just [3], whereas range(3, 6, 2) would be [3, 5]. Play around with this in the interpreter if you are confused."
learnpython,3bfrgf,kalgynirae,1 point,Sun Jun 28 21:42:42 2015 UTC,"Yeah, I'm utterly confused now. Why the hell does range(3, 5 ,2) become (3)?"
learnpython,3bfrgf,mmdonut,1 point,Mon Jun 29 02:17:35 2015 UTC,"Just think of range as starting with 0 and counting up to, but not including, the end number and you'll be fine.   range(1,3) is [1, 2] range(3) is [0, 1, 2] range(3, 5, 2) is [3] range(3, 6, 2) is [3, 5]"
learnpython,3bfrgf,kalgynirae,1 point,Mon Jun 29 02:54:17 2015 UTC,"Nope, still not getting it.  Sure, a range starts at 0, no big deal. How the hell are you getting that a range of 3, 5, 2 is simply 3?  EDIT Just got it, thanks."
learnpython,3bfrgf,caineohfelix,1 point,Mon Jun 29 03:11:16 2015 UTC,"Another question, wouldn't the benefit of making range include the max number outweigh w.e design they had in mind? This is just making it harder to ""read"", which is (imo) something that is appealing about Python."
learnpython,3bfrgf,kalgynirae,1 point,Mon Jun 29 03:13:51 2015 UTC,"It turns out that half-open intervals show up a lot in programming, so it makes sense to have range() behave like that. One nice property is that range(start, end) has a length of end - start. And if you have a list of length n, then the indices of the items in that list are range(n).  Explanation from the creator of Python himself: https://plus.google.com/115212051037621986145/posts/YTUxbXYZyfi"
learnpython,3bemcp,throwaway29571,2,Sun Jun 28 14:50:05 2015 UTC,"Is there a better way of doing this?   The unittest module is part of the standard library, which means it's maintained as part of Python.  That's its canonical home, under Lib/unittest of the Python source tree.  Don't google for random sites that might host it, because you're only going to find outdated garbage, as you experienced.  Having a local copy of the Python source code is a good idea.  If you don't feel like cloning the Mercurial repository, download a release tarball.  To find the canonical home of non-stdlib modules, start at PyPI.  If the module is listed there, you can at the very least find a source tarball, and usually a link to its canonical home in the description.  For the few projects that aren't listed on PyPI, you'll have to resort to Google.  Make sure to weed out all the random garbage you get when you Google."
learnpython,3bemcp,Rhomboid,1 point,Mon Jun 29 01:40:02 2015 UTC,The inspect module is awesome!
learnpython,3bemcp,liam_jm,1 point,Sun Jun 28 16:19:09 2015 UTC,"In Ipython, you can just do module.method??  ie:  In [1]: import threading  In [2]: threading.Thread??  #press q to quit"
learnpython,3bemcp,elbiot,1 point,Tue Jun 30 04:05:07 2015 UTC,"Modules in the standard library are stored as Python code, with the exception of platform-specific C helper libraries - those are easy enough to search if you know where they're stored on your particular OS.  As far as third party stuff goes, it's generally hit-and-miss. I've found that reading code on GitHub to be pretty nice, although it isn't as nice as having a copy locally and prodding it with pydoc and grep. By comparison, reading code on SourceForge is absolutely awful.  pydoc is a very nice tool, by the way - it can actually serve HTML documentation via Python's built-in webserver, and you just have to open up localhost:8000 or localhost:8080 on your web browser. It isn't really useful for code, though, since it strips things down to classes, function signatures, and docstrings. It can help you get your bearings, though, by giving you the higher-level API of what you're interested in.  If you're looking to get a local copy of something on PyPI, you can actually use pip to download source code:  $ pip install --download some/dir   Finally, when it comes to the Python implementation - check out one of the GitHub mirrors! I know that there's at least one that tracks CPython. You can also pull down a local copy and use something like ctags if you're working in Vim or Emacs land, or whatever features your C IDE of choice gives you.  Finally, you can always take a look at a code cross-referencer, like the one that powers the Linux Cross Reference - they have a SourceForge page and apparently it is capable of cross-referencing Python and a few other languages in addition to C."
learnpython,3bemcp,adamnew123456,2,Sun Jun 28 15:38:50 2015 UTC,"Just chiming in here to encourage working in ""Vim or Emacs land.""   In Vim, for instance, you can use the Ack.vim plugin to grep in your editor. My standard workflow for examining third-party code is:   install with pip, search in vim.   I have never met anyone who started using Vim or Emacs and regretted it or decided not to continue once he was even moderately competent with it."
learnpython,3bemcp,NoLemurs,1 point,Sun Jun 28 15:50:28 2015 UTC,"I might be an exception to the last point, currently undecided. I know of someone who was proficient currently trying atom instead of Emacs with apparent success."
learnpython,3bfnxp,FuSoYa69,1 point,Sun Jun 28 20:24:17 2015 UTC,"I'm confused, do you want to interpolate or integrate?"
learnpython,3bfnxp,TheBlackCat13,1 point,Sun Jun 28 20:29:26 2015 UTC,"Ultimately, I want to integrate over that pointwise data.  However, I thought the best way to do that was to create an interpolating function (because the bounds of my subregions do not exactly align with the points).  *Edit: Typo."
learnpython,3bfnxp,ZombieAcademy,1 point,Sun Jun 28 20:34:52 2015 UTC,"I guess you need to find the neighbor points for each point to interpolate right?   The algorithm I'm most familiar for doing this is called ""Delaunay Triangulation"". Essentially creating a mesh out of a cloud (or plane in this case) or arbitrary points. Once you had this triangulation then sampling at an arbitrary point would be a simple matter of finding the triangle containing that point, and using barycentric coordinates to weight the contribution of the three vertices making up that triangle.  Googling around it looks like there are several examples of delaunay triangulation in python. (Here's One) My only experience with this is in computer graphics, and for that I used a piece of software called MeshLab. If you didn't want to do the heavy lifting you could use Python to output a txt file format that meshlab accepts, do the triangulation in there, and spit the output back to python."
learnpython,3bfnxp,elbiot,1 point,Mon Jun 29 02:07:22 2015 UTC,"Over 2 hours?  What is the output of the following code on your machine:  import time, numpy n=1000 A = numpy.random.rand(n,n) B = numpy.random.rand(n,n) then = time.time(); C=numpy.dot(A,B); print time.time()-then   edit: also, don't you want to use bisplrep to get an interpolating function and bisplev to evaluate it at your points?"
learnpython,3bfnxp,elbiot,1 point,Sun Jun 28 21:46:43 2015 UTC,"Time to execute: 0.073460817337  I don't know why interp2d was taking so long, but I ended up aborting it at about the 3 hour mark.  I'll give bisplrep a shot and will post a follow-up with how it goes."
learnpython,3bfnxp,elbiot,1 point,Sun Jun 28 22:12:26 2015 UTC,"Okay, I asked about the execution time because on my computer I had a configuration problem where numpy was taking 100x that long because it wasn't using the right compiled libraries.  I couldn't figure out how to get numpy to tell me what it was actually using, so now I use this test."
learnpython,3bfnxp,elbiot,1 point,Sun Jun 28 22:22:14 2015 UTC,"Gotcha.  Unfortunately, it looks like bisplrep is taking a long time as well.  I can't figure out why this is so time consuming.  Admittedly, the data is coming from r,theta points; however, I'd still expect to to come together reasonable even if it's not on a strictly Cartesian grid.  Do you know another way I might integrate this r,theta data?"
learnpython,3bh2dr,MrDysprosium,2,Mon Jun 29 04:00:28 2015 UTC,"The Atom editor.just reached version 1.0, may be worth a look.  For a better REPL, I suggest IPython; you've correctly installed Py3 so you should have the pip tool, so you can do pip install ipython and then launch ipython instead of python. It's a much friendlier way to explore Python directly."
learnpython,3bh2dr,cathalgarvey,2,Mon Jun 29 07:40:00 2015 UTC,"That's the REPL (read-eval-print loop) environment.  It's meant for quick experimentation of short bits of code.  For anything longer than a couple of lines, you're expected to use a text editor to write a script, not type it at the REPL prompt.  Save the script in the editor, and then run it using the command prompt (e.g. python my_script.py).  Python IDEs do exist and there are dozens of them, but you're doing yourself a disservice IMHO if you rely on them at the cost of never learning basic competency with the command line."
learnpython,3bh2dr,Rhomboid,1 point,Mon Jun 29 04:20:51 2015 UTC,"So, by downloading ""Python3.4"" my CMD prompt now knows how to Python?  typing ""python"" is an invalid command :("
learnpython,3bh2dr,Rhomboid,0,Mon Jun 29 13:00:43 2015 UTC,"my CMD prompt now knows how to Python?   I wouldn't put it that way.  You've installed the Python interpreter, an executable, one of many executables that can be invoked from a command prompt by typing its name.  The command prompt shell, cmd.exe, has no specific knowledge of Python whatsoever.  All it knows is that when you type a command, it should search for and run an executable with that name.  When the Python interpreter is running, cmd.exe is not part of the picture at all; it executes the command and waits for it to terminate.   typing ""python"" is an invalid command   You need to add the directory to your PATH environment variable then.  There should have been an option to do that in the installer."
learnpython,3bh2dr,LeftyDave,1 point,Mon Jun 29 13:13:30 2015 UTC,"Hot damn, it's been a while since I've had to ""set"" environment variables (DOS-shell/win98 days). Thanks for the info."
learnpython,3bh2dr,SleepyHarry,1 point,Mon Jun 29 14:12:11 2015 UTC,give https://www.jetbrains.com/pycharm/ a go. the community edition is free.    Tips  - Use virtualenv . I had annoying path issues until I started to use it.   - If you find yourself needing to pip install things with dependences you can follow the following to compile dependencies on windows   http://blog.ionelmc.ro/2014/12/21/compiling-python-extensions-on-windows/
learnpython,3beq06,Andrei07,3,Sun Jun 28 15:25:50 2015 UTC,"os.listdir will give you a list of files in the folder  You can iterate through the list, use filename.endswith('shp') to avoid opening the wrong files  You should use the with syntax to open files for reading and writing, so you don't need to explicitly close them  It would be more pythonic to do ""for feature in layer.features()"" rather than having getNextFeature()  Also consider using contextlib for your features and datasource, so you don't need to explicitly destroy them"
learnpython,3beq06,liam_jm,2,Sun Jun 28 16:15:58 2015 UTC,"To add to this, if you need sub folders, os.path.walk() is your friend."
learnpython,3beq06,yacob_uk,2,Sun Jun 28 17:14:31 2015 UTC,os.walk is a better replacement for os.path.walk (which has been removed in python 3).  https://docs.python.org/2/library/os.html#os.walk
learnpython,3beq06,davidbuxton,1 point,Sun Jun 28 19:50:55 2015 UTC,True - still on 2.7 here.
learnpython,3beq06,yacob_uk,1 point,Sun Jun 28 20:18:55 2015 UTC,"You will love using os.walk. Having the directories and files in separate arguments makes thing easier, and it looks much nicer having the logic appear inside the loop instead of having to be a separate function."
learnpython,3beq06,davidbuxton,0,Sun Jun 28 20:31:23 2015 UTC,"thank you for your answers yet my knowledge of python is not that good and i am unable to implement your solution, same as others tried explaining what functions i should use with no end result. can you by any chance, if it's not to much to ask, add to the above script and modify it with the needed lines? Thanks in advance."
learnpython,3beq06,liam_jm,3,Sun Jun 28 17:14:12 2015 UTC,See the guidelines:   Try to guide OP to a solution instead of providing one directly.   Which part don't you understand?
learnpython,3bedko,utgyuru,0,Sun Jun 28 13:09:09 2015 UTC,"Python sucks at threading in most cases due to the GIL.  Best-case scenario you get no benefit, worst-case scenario (more likely) it hurts your performance.  So just don't use threads.  Use multiprocessing for computationally-intensive tasks and asyncio for I/O-bound tasks.    If you want to do something like this in parallel, you should use multiprocessing.Pool.imap, but for a simple task like this the overhead of sending the data between processes will be much more than the benefit you get from running it in parallel, so again you will likely get a decrease in performance."
learnpython,3bedko,TheBlackCat13,1 point,Sun Jun 28 14:08:24 2015 UTC,"Thanks for the comprehensive answer. The reason I'm using threads is that in my function, I'm doing queries from a web server, and there is a huge delay until I get a response. I want to do 100+ queries, which means a lot of waiting, so my idea was to start them in parallel, and wait for them in parallel. Which worked fine, when I printed the responses to the stdout, but at the end of the day, I want return them to my main thread, and write to one file."
learnpython,3bedko,TheBlackCat13,1 point,Sun Jun 28 17:12:29 2015 UTC,That sort of use-case is what the asyncio module is for.
learnpython,3bedko,RSFlux,0,Sun Jun 28 17:55:34 2015 UTC,"You will need a thread safe data structure to pass information between threads. Take a look at this one, provided by the Python standard library: https://docs.python.org/2/library/queue.html  The Queue module gives you a safe container to store data, which you can retrieve later from another thread. Simply push data in using put(). Then, in your main thread, you need to retrieve data from the queue using get(). You probably want to pass True for the block parameter of get since it is the simplest way to get your code working, but feel free to experiment.  You will also need a way for the main thread to know when it's job is complete; don't rely on the queue being empty as a signifier that the work is complete, since you can't control the timing of the other threads. For your uses, I would keep track of how many threads you have started and wait for that many results to come back. Make sure you send a result even if something goes wrong so that you don't wait forever."
learnpython,3bfd89,OptioMkIX,1 point,Sun Jun 28 18:56:01 2015 UTC,"To continue a loop while there are NaN values, you can just do:  while np.nan in myarray:     do_something   Assuming myarray is the name of your array.  However, this will be slow since you have to search the array each time.  It would be better to iterator over the elements of the array, skipping those that are not NaN  for irow, row in enumerate(myarray):     for icol, elem in enumerate(row):         if elem != np.nan:             continue         do_something   In this case row is a row, elem is an element from that row, irow is the row index of the element, and icol is the column index of the element."
learnpython,3bdmob,Hyperbole_Prone,3,Sun Jun 28 05:41:59 2015 UTC,You could get cx_freeze instead http://cx-freeze.sourceforge.net/
learnpython,3bdmob,ivosaurus,1 point,Sun Jun 28 10:52:01 2015 UTC,I was able to get it to work using cx_Freeze after updating to python 3.4. Thanks!
learnpython,3bdmob,individual_throwaway,2,Wed Jul 1 14:28:47 2015 UTC,"From what I remember when I had to get this working, py2exe can't produce single file executables for certain python versions (mine is/was 2.6.6).  That's why I used PyInstaller with the -F flag, which compiles a single file, including all dependencies and the interpreter. Otherwise the exe might work on your PC, because you have Python installed."
learnpython,3be7h1,VioletShadowLLL,1 point,Sun Jun 28 11:40:19 2015 UTC,Does https://m.youtube.com/watch?v=Ehl8O2Y6edk still work on current versions of Windows?  Check https://code.google.com/p/googleappengine/wiki/SdkReleaseNotes And file an issue at https://code.google.com/p/googleappengine/wiki/FilingIssues or email https://code.google.com/u/109917895093567337892 if you run in to trouble.
learnpython,3be7h1,jsalsman,1 point,Sun Jun 28 12:04:56 2015 UTC,Star https://code.google.com/p/googleappengine/issues/detail?id=12098 so you get notified of updates.
learnpython,3bf2ev,Eatconomist,0,Sun Jun 28 17:21:44 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3bf00l,jarantfos,3,Sun Jun 28 17:00:56 2015 UTC,"You need to flip the screen for drawings to become visualized.   Edit; that's what I get for not looking at the link. Will edit again soon with a better response.   SOLUTION ATTEMPT: In your call to draw circle, you do not want to draw it at posx, posy, that is the position you draw it on your tiny Cell surface, so it is completely off the small surface you've built. You want to draw it at 0,0 ( I think circles are based on their top-left coordinate) then you want to set the self.rect.x = posx, etc"
learnpython,3bf00l,The-Mathematician,1 point,Sun Jun 28 17:52:16 2015 UTC,"Thanks for the help! Unfortunately, changing the posx and posy values like you suggested didn't work. I changed my draw circle line to:  pygame.draw.circle(self.image, color, [0, 0], 50)  So it draws on 0, 0 of self.image instead, and there is still no circle, it just displays a square (which I'm assuming is the surface)"
learnpython,3bf00l,The-Mathematician,2,Sun Jun 28 18:23:38 2015 UTC,"You're trying to draw a giant (50 px radius/diameter, idk which) circle on a smaller (5x5) square surface that you've created. It's much bigger than the surface so it just fills it entirely."
learnpython,3beb27,kruppy,2,Sun Jun 28 12:33:21 2015 UTC,"Hey, could you post some code you've tried? It's actually against the subreddit rules to just post your problem:   Posting only assignment/project goal is not allowed. Read posting guidelines.   If you give us code you've tried, we can be much more helpful.  The csv module is a great start! Try completing this:  import csv  with open('gistfile1.txt', 'rb') as tsv_file:     tsv_reader = csv.reader(tsv_file, delimiter='\t')     for row in tsv_reader:         ....   You can use with open(filename_here, 'wb') as f to create your files"
learnpython,3beb27,liam_jm,1 point,Sun Jun 28 13:47:29 2015 UTC,"i tried this one but im getting no result...  import csv import sys  csv.field_size_limit(sys.maxsize)      with open(""id_descr.tsv"") as f: reader = csv.reader(f, delimiter=""\t"") for row in reader:       with open(""filename.txt"", ""wb"") as fo:         writer = csv.writer(fo)         writer.writerow(row)   But I still have no clue how to take the first Column of the row as filename..."
learnpython,3beb27,liam_jm,1 point,Sun Jun 28 16:19:49 2015 UTC,Try adding print statements e.g. print row
learnpython,3beb27,liam_jm,1 point,Sun Jun 28 16:24:06 2015 UTC,"so if im in ""for row in reader"", shall i use there the print statement to identify the ""id""? So can i use it to save in a variable and then use the variable as the filename?  I think when i can achieve that, the program is working correctly. When i tried the one above, only the last row was saved (redundancy?) so if i can save each row with different name it might work ( but how :D )"
learnpython,3beb27,liam_jm,1 point,Sun Jun 28 16:45:31 2015 UTC,"What gets printed if you add ""print row"" under for row in..?"
learnpython,3beb27,liam_jm,1 point,Sun Jun 28 16:52:41 2015 UTC,"Then it prints out every row with column one and two, but i only see it in the shell"
learnpython,3beb27,liam_jm,1 point,Sun Jun 28 17:06:27 2015 UTC,i tried it now like this ( it should print all columns in the textfile)  https://gist.github.com/anonymous/225ab074313c5a4c55ca
learnpython,3beb27,Marimoh,1 point,Sun Jun 28 17:57:25 2015 UTC,"but there i get this error:   File ""onerow.py"", line 10, in <module>     filename, text, missspellings, uncertainty, weekgoal = row ValueError: need more than 2 values to unpack"
learnpython,3beb27,TheBlackCat13,1 point,Sun Jun 28 17:57:40 2015 UTC,"That means row is a tuple of 2 values, I think"
learnpython,3beb27,TheBlackCat13,1 point,Sun Jun 28 19:39:46 2015 UTC,"hey i found now a different solution:  import csv import sys  csv.field_size_limit(sys.maxsize)  with open('id_descr.tsv', 'rb') as f: reader     = csv.reader(f, delimiter='\t') fieldnames = next(reader)  prev_row = next(reader)  for row in reader:     if not row:         continue     if len(row) == 1 or not row[0].isdigit():         prev_row[-1] += row[0]     else:         filename, text = prev_row         with open(filename, 'wb') as output:             output.write(text)             output.write('\n')         prev_row = row   now i can get 11k files out of 500k till i get next error, but till now its ok :)  But now I have an other problem which is maybe trivial for you. In the above script i named the file after the id, but now i don't know how to make the file as a .txt or .rtf file. The script saves it automatically as a Textedit-Document...  Thank you"
learnpython,3bdtrh,0X62696e617279,-1,Sun Jun 28 07:29:47 2015 UTC,https://docs.python.org/2/library/threading.html
learnpython,3bdtrh,WeakNuclearForce,1 point,Sun Jun 28 07:48:50 2015 UTC,"thank you, but i still have the same problem, i know how to start a thread, but i still don't know how to keep that thread running in the background  edit: i misread the website, thank you i found a way to have the thread constantly running"
learnpython,3bdlhl,Sayblahblah,2,Sun Jun 28 05:26:36 2015 UTC,"There are a couple of different ways you can do this:  while Loop_Variable != Break_Condition:     raw_input(""Stuff"")   When that ""Stuff"" is given the break condition, the loop will stop.  for i in [Looping_Set]     n = raw_input(""Stuff"")     if n == Break_Condition:         Break     else:         #Block of code   EDIT: I'm looking through your code, and I think I might see an issue:  running = True while running:     grade = int(raw_input(""Enter grade: ""))     if grade == (raw_input(""qqq"")):         break     else: total = total + grade print """"   Check to see if your break condition compares the grade variable to the string ""qqq"", or something entirely different..."
learnpython,3bdlhl,usernamedottxt,1 point,Sun Jun 28 06:30:18 2015 UTC,"https://gist.github.com/anonymous/96d28fcce7455184a1ad  Suppose I should've started with that. Basically whenever the user is done entering grades they type in ""QQQ"" and it breaks the code. I'm sure there are other ways of doing it but I'd just like to know that I'm not a complete moron and I'm close to understanding how to do all of this."
learnpython,3bdlhl,xabe13,2,Sun Jun 28 05:53:33 2015 UTC,"Take input   While input.lower() is not ""qqq""   . . Stuff   . . Take input"
learnpython,3bdlhl,me-the-monkey,1 point,Sun Jun 28 05:59:31 2015 UTC,"Wait, why can't you use '000'? It reads it as a string anyway. Correct me if I'm wring, but if raw_input reads by appropriate data type, cant you do ""str(raw_input(""Stuff""))"" and lock raw input ad a string?"
learnpython,3bdlhl,PurpleMonkie,1 point,Sun Jun 28 08:49:34 2015 UTC,"if grade == (raw_input(""qqq"")):    you don't need the raw_input in this line. You're prompting for input twice, it should be:  if grade.lower() == 'qqq'   Also, you can rewrite this:  total = total + grade   Like this:  total += grade"
learnpython,3bdlhl,tk425,1 point,Sun Jun 28 22:24:31 2015 UTC,"Understanding when and how to use loops is important. In python you have a choice of two loops, the for and while loop. When choosing which loop to use it basically comes down to one thing. Do you know how many times you are going to iterate?  In your case you do know how many times you will be iterating, so a for loop is valid. However, in my opinion, you'll be better off using a while loop with a counter variable incrementing on each iteration. This removes the need to ask the user how many grades will be inputted. A basic outline of this would look like:  counter = 0 while True:     # get input, don't cast it to int yet     # check if input is equal to ""qqq"", if so, break     # add up total. remember input is still a string     counter += 1    # this is the same as counter = counter + 1"
learnpython,3bdlhl,tk425,0,Sun Jun 28 07:23:49 2015 UTC,why?
learnpython,3bdxtb,lead_,3,Sun Jun 28 08:39:54 2015 UTC,"raw_input returns a string. So in order to add them together to need to convert it to an int or float.  favnum = int(raw_input(""My favorite number is 35. What is your favorite number?""))"
learnpython,3bdxtb,mimm_dk,2,Sun Jun 28 08:55:24 2015 UTC,THANK YOU!!
learnpython,3bdxtb,zahlman,2,Sun Jun 28 09:08:49 2015 UTC,What happens when you try it?
learnpython,3bdxtb,zahlman,1 point,Sun Jun 28 08:47:12 2015 UTC,"It'll just shut off once I fill in the last ""raw_input""."
learnpython,3bdxtb,zahlman,2,Sun Jun 28 08:50:40 2015 UTC,"Did you read what it says when it ""shuts off""?"
learnpython,3bdxtb,zahlman,1 point,Sun Jun 28 08:51:39 2015 UTC,It goes too quickly.
learnpython,3bdhr2,PraiseBeToScience,2,Sun Jun 28 04:41:41 2015 UTC,"Well first, I deal with config files by making a config.py.template file that I add to the project, and gitignore the actuall config.py.  I do an try/except ImportError on config.py and instruct the user (on failure) to rename the config file and put their info in there.   Then, you could symbolically link your actual config files to a master config in the root directory, and the git users would not be affected.  Or in the config say ""your not responsible for scraping data.  This is the location of the data csv/database you should draw from"".  That's what I'd do."
learnpython,3bdhr2,elbiot,2,Sun Jun 28 06:20:11 2015 UTC,"I just got my config files loading by changing sys.argv[0] to __file__.   Because __file__ is wrapped in os.path.abspath this works nicely, even if called with a shebang.   I haven't figured out how to get bot1 to import class1 when imported via RedditBotMgr, because it expects to find the file in the top directory and won't import it from the subdirectory."
learnpython,3bdhr2,elbiot,2,Sun Jun 28 06:23:49 2015 UTC,"Might not be much help, but the bot folders need to have an __init__.py to be importable modules from the root directory.  from bot1 import class1, bot1 Where the first bot1 is the directory that has __init__.py in it, and class1 and bot1 are the .py files in that directory."
learnpython,3bdzk0,fafyryas622,1 point,Sun Jun 28 09:12:37 2015 UTC,"A list will maintain its order unless acted upon. I'd probably go with a list.  Using it would also be easy, when you want to display the inventory you could do for item in inventory, and access the items one by one, in sequential order."
learnpython,3bdzk0,nikomo,1 point,Sun Jun 28 10:10:59 2015 UTC,"ty i did just this and it worked but im displaying the list or dict on the screen using pygame.font it it displays all the symbols like [] and , and {} and : how do i get rid of them"
learnpython,3bdzk0,me-the-monkey,1 point,Mon Jun 29 02:32:47 2015 UTC,https://docs.python.org/2/tutorial/datastructures.html#dictionaries or there's an ordered dict in the collections lib if order matters.
learnpython,3bd0vd,olyko20,6,Sun Jun 28 01:39:25 2015 UTC,"Taken from a StackOverflow post:  When you run a program in python, the interpreter compiles it to bytecode first (this is an oversimplification) and stores it in the pycache folder. If you look in there you will find a bunch of files sharing the names of the .py files in your project's folder, only their extentions will be either .pyc or .pyo. These are bytecode-compiled and optimized bytecode-compiled versions of your program's files, respectively.  As a programmer, you can largely just ignore it... All it does is make your program start a little faster. When your scripts change, they will be recompiled, and if you delete the files or the whole and run your program again, they will reappear (unless you specifically suppress that behavior)  If you are using cpython (which is the most common, as it's the reference implementation) and you don't want that folder, then you can suppress it by starting the interpreter with the -B flag, for example   python -B foo.py   Another option, as noted by tcaswell, is to set the environment variable PYTHONDONTWRITEBYTECODE to any value (according to python's man page, any ""non empty string"")."
learnpython,3bd0vd,GoreFox,4,Sun Jun 28 01:51:17 2015 UTC,"Helpful tip: if you put a \ character before each _, it won't interpret them as bold formatting characters.  So you type this: \_\_pycache\_\_  And it becomes this: __pycache__  As opposed to this: pycache"
learnpython,3bd0vd,Lucretiel,1 point,Sun Jun 28 05:00:55 2015 UTC,"I know, I forgot to edit it before posting, I just copy/pasted."
learnpython,3bd0vd,GoreFox,1 point,Sun Jun 28 05:08:51 2015 UTC,Interesting. Thanks for the help!
learnpython,3bd0vd,Rhomboid,3,Sun Jun 28 01:55:51 2015 UTC,"Python 2.x used to litter the directory containing your source code with all its .pyc droppings.  Python 3 changed that, and puts them in a separate __pycache__ directory so at least it's somewhat out of the way.  Personally, I've always been skeptical of this optimization of caching compiled bytecode.  Maybe it made sense ten or fifteen years ago, but today CPU is so much more abundant than IO that I have to think that all the extra syscalls that are required to check for the presence of .pyc files (and to check if they are still fresh if they do exist) is going to swallow up any gain in avoiding parsing.  I'd be interested in seeing well thought out benchmarks on the topic.  And by that I don't mean comparing the time it takes to import a module without cached bytecode vs with it, because that's nonsense.  To really do this comparison correctly, you'd have to modify CPython to strip out all the code that looks for .pyc files, which is not what -B or PYTHONDONTWRITEBYTECODE do.  They merely prevent generating .pyc files, but they don't disable checking for ones that already exist.  It could very well be that caching is still an overall win despite all the extra syscalls, but I just don't it on faith is all I'm saying."
learnpython,3bbpay,Qewbicle,2,Sat Jun 27 18:12:19 2015 UTC,I cant execute the code cause i dont have the images. What error message are you actually getting? Also you should add the root variable as a parameter in the init method instead of accessing it as global.
learnpython,3bbpay,Sinidir,1 point,Sat Jun 27 18:31:13 2015 UTC,"I wasn't getting an error message. My images weren't being lowered. It turns out that they were, but the image on top wasn't being included because of the range I had used wasn't high enough. For adding the root as a parameter vs pulling it from global. I'm curious as to why, if it's for clarity for conventional reasons that's good enough for me to know, but is there some other technical reason?"
learnpython,3bbpay,pyskell,2,Sat Jun 27 22:31:09 2015 UTC,"Some general advice, whenever you're seeking help it's best to explain what your code does (or is intended to do).  I'm a bit unclear on what you mean for adding root as a parameter? Are you referring to line 68 (root = Window())?  If so then the reason you do this is Window is your class, and a class is basically the description of an object and not an object in and of itself. When you want to use your class you typically (though not always) instantiate it by assigning it to a variable like you did at line 68. This gives you an object that you can then do stuff to and not worry about changing your class.  In your current case, with only a single root/Window() you don't necessarily need the ""root"" variable, but if, for example, you wanted two Windows then you would definitely want root1 = Window(); root2 = Window(), or something similar.  In this way both your Windows could be kept separate, and changes to one would not influence the other. I'd suggest pretty much always instantiating objects from classes unless you have a good reason not to.  If you're wondering about state it's basically an overarching word for whatever is happening in your program, for example if you have one simple function (x+1) changing the global value of x you can be pretty sure what x is going to be. Then if you add a second (x-1) and third simple function (x*3) that change x you may be less certain about what x's value is at any given point in your program.  My explanation isn't perfect of course so let me know if anything isn't clear."
learnpython,3bbpay,pyskell,1 point,Sun Jun 28 05:17:14 2015 UTC,"You just made something click in my head and things became a bit more clear. I feel like I'm starting to get it now. I've been somewhat doing things one way or another and not quite getting it, like a ""just because I said so"" kind of way. But the ""why"" and ""how"" made some connections.    I'll keep it in mind to give an explanation of what it does. It should've been common sense as fair courtesy. I was in a zone of exasperation and felt beaten down and failed to consider it."
learnpython,3bbpay,mpbikeman,1 point,Sun Jun 28 06:04:20 2015 UTC,"Welcome, the funny thing about common sense is it's hard to grasp. The list of concepts every programmer just ""gets"" as common sense took a while to develop. Trust me, there's lots of things I simply ""get"" now and had absolutely no clue of 9 months ago. And still a ton I don't ""get"" yet."
learnpython,3bbpay,mpbikeman,2,Sun Jun 28 15:30:28 2015 UTC,I didn't understand OOP in Python until I went through  the relevant chapters (Ch. 13-17) in this tutorial: Think Python.  This is written for python 2 but there's also the python 3 version of the text.  I went through each chapter and typed in the code examples and made sure I could get them to run.
learnpython,3bbpay,04h,1 point,Sat Jun 27 19:05:02 2015 UTC,"Thanks. It looks promising, pinned and open on browser now. I'm not worried if it's centered on Python 2. I've been able to stay on top of the differences as I learn."
learnpython,3bbpay,04h,1 point,Sat Jun 27 22:39:13 2015 UTC,"Right on, good luck."
learnpython,3bbpay,04h,2,Sun Jun 28 21:30:33 2015 UTC,"Actually, it works fine. Only thing: top image doesn't go lower. You can fix it in line 58: if self.count == 8: should do the trick"
learnpython,3bbpay,Justinsaccount,1 point,Sat Jun 27 19:48:47 2015 UTC,Super awesome. That means I was on the right track.
learnpython,3bbpay,maroonblazer,2,Sat Jun 27 20:20:51 2015 UTC,"I've seen so many things talk and show inheritance, a class variable vs object variable, but they never seem to get beyond the basics and explain. I'm almost tearing my hair out on this.   What do you mean by 'beyond the basics'?"
learnpython,3bbpay,Justinsaccount,1 point,Sat Jun 27 20:10:05 2015 UTC,"Understanding how the code gets evaluated, and other common commands that help make objects workable. Most things go through, this is what inheritance is, so this is a parent and child. I know of class variables, but not really how to use them effectively. Then through hours of search I found out that I can use 'getitem' to return something, but I don't really understand it quite yet. But then how does scope work with a function within a class? If I pass canvas into an objects 'init', do I need to do self.canvas = canvas, can't I just use canvas."
learnpython,3bbpay,ivosaurus,2,Sat Jun 27 20:20:24 2015 UTC,"I think, https://docs.python.org/3/tutorial/classes.html (and official tutorial in general) is a good starting point. There are less spoon-feeding and more practical information.  And don't forget about http://dabeaz.blogspot.com/2009/10/ultimate-python-quickstart-guide.html  For example, last question about __init__(canvas). Try your idea. There are no magic (even in 'magic' methods): you can freely use canvas argument, but it's local (like in any function) - there are no canvas outside. So self.canvas is just a way to share it (instance variable)"
learnpython,3bbpay,Justinsaccount,2,Sat Jun 27 21:12:42 2015 UTC,The first rule of classes is to not write classes when functions will do.  Your GetImages class should just be a function that returns a list of images.  The rest of what you have is problematic since you are using global variables all over the place.  If a Wheel needs a root and a wheel_images to work then they should be explicitly passed to __init__
learnpython,3bbpay,ivosaurus,1 point,Sat Jun 27 21:46:45 2015 UTC,"You know what's ironic. I put it together with functions first and had it running. But thought it would be beneficial to create the wheels with classes to instantiate several of them. (Instantiate is new to my vocab as of today). But I couldn't think of how to pass the canvas in, but found an example of how to pass a canvas into a class (on Stack Overflow), so I moved everything into classes so I could do it. Today I got a way deeper understanding and am certain of different methods on how I can do it.  This is also my first attempt at trying to create classes. It would not click for some reason. But the struggle made a tremendous difference."
learnpython,3bbpay,Justinsaccount,2,Sun Jun 28 06:16:50 2015 UTC,"A really good book on OOP is Practical Object-Oriented Design in Ruby  I know, it's not Python, but the similarities are close enough that you can still follow her approach and put it to good use. I didn't (and still don't) know Ruby and absolutely loved this book."
learnpython,3bbpay,ivosaurus,2,Sun Jun 28 01:37:13 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information.  You are looping over an object using something like  for x in range(len(items)):     foo(item[x])   This is simpler and less error prone written as  for item in items:     foo(item)   If you DO need the indexes of the items, use the enumerate function like  for idx, item in enumerate(items):     foo(idx, item)"
learnpython,3bbpay,pyskell,2,Sat Jun 27 18:18:42 2015 UTC,"Hah, this code is almost perfectly crafted to contain only exceptions to that (normally good) loop advice."
learnpython,3bbpay,moistrobot,3,Sat Jun 27 19:14:34 2015 UTC,How do you figure?  Every loop I see in the post can be written in a simpler way.
learnpython,3bbpay,Spiruel,1 point,Sat Jun 27 19:20:17 2015 UTC,"If you try to re-write L32-33 straight-forwardly, you will shadow the reference and get wrong logic.  The other two loops are simple ranges over numbers, there is no iterable to loop over more cleanly. You could change them to list comprehensions, but that is not the advice you / your bot gives."
learnpython,3bbgne,SgtCheesepuffs,3,Sat Jun 27 16:56:06 2015 UTC,"Because it isn't ascii.  Those characters are all unicode characters.  For Python 2.x, you need to start the first quotes as u"""""" instead of just """""".  In Python 3, the default string is unicode, so you don't need to do this (although you can on later versions of Python 3).  However, the Python 3 version won't work because print is a function, so you need quotes."
learnpython,3bbgne,TheBlackCat13,2,Sat Jun 27 23:24:29 2015 UTC,"Yep. The unfortunate thing going on here is lots of people learn what ""ASCII art"" is before they learn what ""ASCII"" is, and make the reasonable assumption that ASCII art would be made of ASCII. Which it almost never is.  The other unfortunate thing going on is the Windows command prompt."
learnpython,3bbgne,rspeer,2,Sun Jun 28 06:27:46 2015 UTC,"non ascii found add this # -- coding: utf-8 --   I think you get that when using non-ascii source files in Python 2, because Python 2 source files are ascii by default. I said ""I think"" because I have no experience with Python 2, I only use Python 3 where source files are utf-8 by default.  That message is telling you to add the encoding as your first line in the source code or save your source files as ascii:  # -- coding: utf-8 --  [your code here]   You should read too the documentation about unicode for handling unicode strings in Python 2, if you don't use any library which depends on Python 2, I would recommend using Python 3 where you don't need to mess with unicode strings and source files encoding because they are unicode by default."
learnpython,3bbgne,KronenR,1 point,Sat Jun 27 17:04:23 2015 UTC,"I tried that, but the result I get is    Ascii is fun!  Press the enter key to exit.   without that ascii pic above  Also, I tried both Python 2 and 3, but it's still not showing that unicode art thing."
learnpython,3bbgne,KronenR,1 point,Sat Jun 27 17:07:29 2015 UTC,"print( """""" ░░░░░░░░░░░░░░░░░░░░░░░░░░░ ░░░░░░░░░░░░░▄███▄▄▄░░░░░░░ """""")   In Python 3 you need parenthesis for print function"
learnpython,3bbgne,KronenR,1 point,Sat Jun 27 17:25:53 2015 UTC,"Didn't work :/  Edit: Nvm got it, I had to do it like  print(""""""  instead of   print ("""""""
learnpython,3bbgne,ivosaurus,1 point,Sat Jun 27 17:27:38 2015 UTC,"What's the error?  You can check here http://www.pythontutor.com/visualize.html that it works in Python 2.7 and 3.3.  Edit:  Remove the space between lines here in Python 2:   print \  """""""
learnpython,3bbgne,rspeer,1 point,Sat Jun 27 17:30:44 2015 UTC,"At first it wasn't displaying that unicode picture, but I got it to display in the IDE, but it just shows random letters when I execute the file from the folder."
learnpython,3bbgne,py_student,3,Sat Jun 27 18:03:07 2015 UTC,"Whatever terminal / prompt you're using to ""execute the file from the folder"" likely doesn't understand the characters you're using either. e.g, the Windows Command Prompt by default I'm guessing won't understand.  Here's a nice explanation on StackOverflow"
learnpython,3bbgne,kamize,1 point,Sat Jun 27 20:01:54 2015 UTC,"And it's pretty clear now which terminal to blame -- it's the Windows command prompt, cmd.exe. (Is there even a way to run anything besides cmd.exe when you double-click a Python file?)  SgtCheesepuffs, what you've just encountered is a great reason to keep using an IDE on Windows. You get the right result in the IDE and the wrong result in cmd.exe because cmd.exe itself is wrong. It's wrong about basically everything when it comes to Unicode."
learnpython,3bcp4k,DocDMD,2,Sat Jun 27 23:39:42 2015 UTC,"try removing single quotes from the format string.  ""'%s'"" means 's are a part of the string, but in case of '10220' they are not."
learnpython,3bcp4k,Vaphell,1 point,Mon Jun 29 09:19:33 2015 UTC,I've tried just passing radiuszips to the c.acs.zipcode function and also frzip with and without the int() function. None of them work.
learnpython,3bda9p,ThrowawayTartan,1 point,Sun Jun 28 03:19:41 2015 UTC,"Sorry, could you elaborate? What is the unused parameter? Is it views.studentMainPage?   I know this is asking a lot but could you suggest a fix or walk me towards one? I'm guessing that if that's the case then for my other template it's also wrong but it somehow worked."
learnpython,3bco3a,Blink1138,3,Sat Jun 27 23:29:32 2015 UTC,"There are a few things wrong here.   Formatting. Instead of pasting the code here, take it to pastebin. Python doesn't use a main function like other lanuages and code doesn't need to be in a function. You use hours and rates as variables, but they are functions. To fix that make it a function call. EX: hours() instead of hours You have infinite loops. Your while loops will keep going forever. To fix this you need to update the value of rate and hours. Input function stores the user's input as a string. Since you will be doing maths with these results. They need to be casted into an integer. EX: int(input(""stuff""))"
learnpython,3bco3a,PurpleMonkie,2,Sun Jun 28 00:31:18 2015 UTC,"Here is an example of a program that's similar to your's and will do what you want:  def hours():     hours = float(input(""Enter the employee's hours: ""))     while hours < 0 or hours > 40:         print(""ERROR: Enter an amount of hours between 0 and 40"")         hours = float(input(""Enter the employee's hours: ""))     return hours #do a similar thing for payrate here def main():     total = hours() * payrate()     print(""The employee's pay is"", format(total, ',.2f'))   There are 4 parts to a while loop:   initialize the loop variable (hours = float(input(...)) test the loop variable (while hours < 0...) work inside the loop (print(""ERROR..."")) update the loop variable (hours = float(input(...))   Like /u/PurpleMonkie said, you don't NEED to have a main function in your program, however it is a common convention in Python. A lot of other programming languages require a main function, so it's probably best to use one here.  Inside your main function, you never called the hours or rate function. Make sure your calls include the parenthesis (i.e. hours(), rate(), etc)"
learnpython,3bcwmt,queerMTFchicago,3,Sun Jun 28 00:55:29 2015 UTC,"If I understand this right:  Key/value structure. I.E. key being an integer and value being a string Break up input into chars   If that is the case, python has dictionary data structure. This is a key/value structure. Note: that the value can be a list. To give you an idea, EX:  someDict = {""key1"": [1, 2, ""zebra"", 4],             ""key2"": [""Cat"", 2, ""elephant""]} print(someDict[""key1""][2]) >>> zebra   Breaking up the input into chars isn't hard. Converting a string into a list (list() constuctor) will break it up into chars. So list(""100"") will turn into [""1"", ""0"", ""0""]."
learnpython,3bcwmt,PurpleMonkie,1 point,Sun Jun 28 01:28:44 2015 UTC,"Definitely love the way you explained this. I hope to be able to get to this point; that is defining things via syntax which is so clear and concise :)  I knew there were multiple ways of doing the same thing in python, but didn't expect it to be so simple.   This is exactly what I needed. Not sure why it seemed to hard in my head. You made it seem so easy.   I'll try to implement it, then add complexities.   Thank you again."
learnpython,3bcuul,Jesse4Lyfe,7,Sun Jun 28 00:36:37 2015 UTC,"You don't have to use anything, but I don't know what you expect to gain out of not using Pygame.  For instance, how are you going to create a graphical window, or draw anti-aliased lines/polygons?  How are you going to receive mouse clicks and/or key up/down events?  How are you going to output sound, including mixing multiple sounds?  How are you going to efficiently blit textures?  What about font rendering?  What about decoding image files, e.g. PNG?  You can't really do those things in pure Python, you have to be able to access operating system APIs.  Are you going to use ctypes or something like it to call the native operating system APIs for each of those?  That's a ton of work and requires a lot of specialized knowledge.  And you're going to write 'n' different versions of this code for the 'n' different operating systems you want to support?  What if native APIs don't exist for some of them — are you going to write your own ctypes wrappers for libpng or libjpeg or libvorbis for instance?  Pygame is roughly 100,000 lines of code (not to mention the roughly 300,000 lines of code in the SDL library that Pygame is built on top of) for doing all the stuff I just described.  (And it does it much more efficiently, by using actual C glue code, as compared to using ctypes.)  Why would you want to throw away all that work and do it yourself?"
learnpython,3bcuul,Rhomboid,2,Sun Jun 28 01:18:28 2015 UTC,"Woah, sorry. I hadn't realized how in depth it got. I've written a couple of the STL classes for my Computer Science course and most of them haven't been more than 500 lines long.   I guess when you're young, you feel like you can take on any challenge.   Guess not with Pygame, huh?   Alright, well I guess I'm going to start learning Pygame! Thanks for the advice!"
learnpython,3bcuul,Pre-Owned-Car,3,Sun Jun 28 01:21:22 2015 UTC,It's not necessary but it does provide a ton of very useful tools to simplify making a game.
learnpython,3bcuul,PurpleMonkie,3,Sun Jun 28 00:53:03 2015 UTC,"Pygame might be too ambitious. I have never used it, but I just quickly looked over the documentation and it may be overwhelming for someone new to programming. I'm sure there are great tutorials though.  Instead of Pygame I suggest that you and your friends look into making a text based game. This could be simple board games at first but then moving up to something complicated/layered like a text adventure RPG game.  Finally, I would also suggest that you look into github/bitbucket. This will help greatly in version control and collaboration. Git is very important to know."
learnpython,3bcuul,callmelucky,2,Sun Jun 28 01:08:34 2015 UTC,"Pygame is the only 'pure Python' game lib that I am aware of, if you want to make graphical games in Python it's almost certainly the way to go.  r/pygame is a thing, and reasonably active. Post there with any specific problems you run into. If you get advice from a user called Mekire, take it; he's the man. In fact you would do well to check out his github repos of templates and examples before diving in. The official Pygame site is a bit of a wasteland...  Edit: by the way, since you are new to Python I HIGHLY recommend you work through the tutorial at programarcadegames.com, it is a noob-friendly tutorial which focuses on pygame. Besides that it is, in my opinion, the single best beginner Python tutorial around."
learnpython,3bcuul,Mekire,1 point,Sun Jun 28 05:33:22 2015 UTC,"Pygame is not pure python really.  It is a wrapper for SDL, which is written in C (and a little archaic with SDL2 around now).  This shouldn't be a turn off though; lots of python libraries use C backends and there is nothing wrong with this.  Pygame is great for getting starting with 2d graphics.  If/when you need something more powerful, what you learn will not be wasted; even if you completely change language in my opinion.  Anyway, appreciate the good words."
learnpython,3bcuul,callmelucky,1 point,Sun Jun 28 10:21:34 2015 UTC,"Haha no problem, thank you sir! Yeah I put 'pure Python' in single quotes to kind of indicate that I wasn't certain that was true in the strictest sense. My intended meaning was just that you don't need knowledge of any other language at all to get into it."
learnpython,3bcuul,Thunder_54,2,Sun Jun 28 13:42:24 2015 UTC,"I had a friend sort of like you in high school. He wanted to make a game but make EVERYTHING himself. He wanted to do all the graphics processing, all the control processing, EVERYTHING by hand.   That is needlessly hard and can really turn you off about programming games in general. It would be like trying to make a cake FROM SCRATCH. And I mean growing wheat until you have enough, and then milling it into flower. Then raising chickens for eggs, and growing sugar cane to get sugar and raising cows to get butter.   Why would you do all that when you can go to the store and pick up the ingredients? Don't make things needlessly hard I guess is my point lol. I know the satisfaction of being able to say ""I made ALL of this"" is tempting, but it's not practical. Use the tools you have, trust me it'll still be plenty hard."
learnpython,3bc1f3,Moby69,5,Sat Jun 27 19:59:25 2015 UTC,"if you are working with Django, you aren't learning python, you are learning Django.  Python will be tricky to work with for basic web services without using some kind of framework. You can try some as simple as bottle or flask, or move up to a more featured framework like Pyramid, they increase in complexity in that order. Bottle is one of the simplest to learn and if all you want to do is a simple webservice for calling an API, I would point in that direction.  Bottle is the closest / quickest / simplest way for a beginner to use and be close to ""just Python"".  Good Luck!"
learnpython,3bc1f3,aw4kened,0,Sat Jun 27 20:06:00 2015 UTC,"Do you know of any good tutorials for Django out there for beginners?  The documentation is not for beginners, clearly."
learnpython,3bc1f3,Asdayasman,1 point,Sat Jun 27 20:10:38 2015 UTC,"Do a python tutorial, first."
learnpython,3bc1f3,Asdayasman,1 point,Sat Jun 27 20:53:27 2015 UTC,"I did all the tutorials on codacademy, and this includes Python, PHP, javascript, jquery, HTML and CSS. I've already built a number of Python quick programs where I call a public API and do some basic manipulations of data and basic outputs."
learnpython,3bc1f3,aw4kened,1 point,Sun Jun 28 16:19:23 2015 UTC,"Then the django tutorial shouldn't be out of your reach...  Let me check it over, maybe I'm wrong.  Ok it looks pretty simple if you're comfortable with the materials presented in the Python tutorial you followed.  If you're having trouble with it, perhaps the Django Girls one might suit you better; it's done in a different style."
learnpython,3bc1f3,Jazztoken,1 point,Sun Jun 28 16:39:27 2015 UTC,"Honestly, learn to crawl before you try to run in this instance. as /u/elbiot mentioned, try writing the script to pull the resources you want. Then, you can make that script into a web service in just a few minutes with bottle.  Think of it like this, if you compare PHP vs Python as a web platform language. The simplest entry to PHP is having an Apache server with Apache configured with the PHP module. For Python, the simplest would be running a bottle web service, however, instead of running  separate web server (apache) you would run a little server with your script. With Bottle, you can turn a simple script into a web service with adding less than 10 lines of code. The example below from their home page will stand up a web server and serve your script at the same time.  from bottle import route, run, template  @route('/hello/<name>') def index(name):      return template('<b>Hello {{name}}</b>!', name=name)  run(host='localhost', port=8080)   With Django, you will get mired in the MVC structure, so in PHP you would be dealing with an MVC framework like Symphony, Cake or CodeIgniter while the Bottle method is more close to a simple PHP script. If you ""Just want to do X"" that is your best route to get started =)"
learnpython,3bc1f3,NoLemurs,-2,Sat Jun 27 21:09:32 2015 UTC,"No, the docs (even the official tutorial) are not sufficient for a beginner, imho.  In this order:   http://learnpythonthehardway.org/ http://www.tangowithdjango.com/   You'll also need to put in some time learning HTML, CSS, Javascript (with jQuery) to get started."
learnpython,3bc1f3,Choscura,2,Sat Jun 27 21:25:07 2015 UTC,"Django is serious overkill for what you're trying to do, and it's probably crazy to try to learn it if you're not already comfortable in Python.  Unlike PHP, Python is not a language designed primarily for making websites, and while Python is one of the best languages for a skilled web developer, you need to learn the core language before you can start using it for web development. I would encourage you to start with some more basic projects, and later pick up a web framework.  If you're really set on starting right away making websites, then as /u/aw4kened said, Flask and Bottle are much simpler and more appropriate."
learnpython,3bc1f3,Exodus111,1 point,Sat Jun 27 20:43:08 2015 UTC,Learn python first.  I think codeacademy has good stuff for this.
learnpython,3bc1f3,elbiot,1 point,Sat Jun 27 21:15:33 2015 UTC,"You should make something with just Python first, then move on to Django (or Flask).  The programming world is filled with concepts, and none of them are really that complicated, but a lot of them are very complex because they build on each other. You need a solid familiarity with basic concepts before you can move on to more advanced concepts or you will simply have too much difficulty grasping them.  The alternative is finding someone that can teach you, and try try to work on specific directed projects."
learnpython,3bc1f3,elbiot,0,Sat Jun 27 21:55:25 2015 UTC,"I'd suggest coding the part where you get and process data sources first,  as that would be learning python and making progress.  Take input from the user or a csv.  Print text out to the screen or csv.  Then plugging that into flask or something will be easier."
learnpython,3bcj7e,anonymousperson28,5,Sat Jun 27 22:42:40 2015 UTC,"It looks like the parser module in your /Users/rohanp/hack/FBMessageScraper directory is shadowing the Python standard library parser module.  You either need to rename parser.py or remove /Users/rohanp/hack/FBMessageScraper from your PYTHONPATH.    It isn't really a pandas problem, any python package that uses the standard library parser module will have this error."
learnpython,3bcj7e,TheBlackCat13,1 point,Sat Jun 27 23:15:56 2015 UTC,this solved it! thank you!
learnpython,3bcj7e,zahlman,1 point,Sat Jun 27 23:36:51 2015 UTC,"That said, since it the parser module causing the problem is apparently your code, you're going to have to fix it if you want it to work with Python3. :)"
learnpython,3bcj7e,p10_user,1 point,Sun Jun 28 02:47:43 2015 UTC,I had similar problems the other day. I ended up getting it to install using easy_install instead of pip3.  I don't know what the problem was.
learnpython,3bbjts,__baxx__,5,Sat Jun 27 17:24:27 2015 UTC,You need to make use of the fact that n! = n * (n-1)!  def factorial(n):     # Leaving out the base case so you still have a challenge     return n * factorial(n-1)
learnpython,3bbjts,dempseye,2,Sat Jun 27 18:00:40 2015 UTC,"yeah I get that, Its the implementation of it in python that I wasn't sure about / how the code runs  This SO post has a solution.   Here's a solution based on that :   def rec_factorial(n):     # base case     if n < 1:         return 1     # recursive case     else:         return_num = n * rec_factorial(n -1)         print('{}! = {}'.format(n, return_num))         return return_num   But when I go through it I expect that the print statement is going to be executed once, as it's immediately prior to the return.  So I still don't really get how this is working, as It's all sequential / no threads etc."
learnpython,3bbjts,dempseye,3,Sat Jun 27 18:12:21 2015 UTC,"The print statement will be executed n-1 times.   The function calls itself when it hits this line:  return_num = n * rec_factorial(n -1)   Let's say n=3. The function calls itself on that line, except for that call n=2. The print statement after the function call does not execute yet.  For n=2, the function calls itself again, except with a value of 1 for n. the print statement does not execute yet.  n=1 is the base case. it immediately returns 1, passing control back to the n=2 call. The n=2 call continues and the print statement executes.  Then the n=2 case returns its result, giving way to the n=3 case. The print statement executes for n=3 and then the function returns its final value."
learnpython,3bbjts,zahlman,1 point,Sat Jun 27 18:22:57 2015 UTC,"cheers - this is kinda odd as it seems that the programme waits for certain parts. Which also makes complete sense at the same time (classic).   It makes sense how that If n - 1 is passed in, its going to run the function on the value n-1, etc etc until (n - 1) < 1  So for every call it waits, then it calls the print statements in reverse, because thats the next line after the function call sequentially, like first in first out kinda thing. Or kinda similar to thing.pop(), but with the lines...   I think i get it, just need to go over it a bit to understand properly, it's pretty cute."
learnpython,3bbjts,captainlonglegs,2,Sat Jun 27 18:33:00 2015 UTC,this is kinda odd as it seems that the programme waits for certain parts.   It's the same as any other time you call a function from within another function.
learnpython,3badp7,IAmAmbitious,6,Sat Jun 27 08:29:16 2015 UTC,"Assuming it works (I didn't run it to test it), it mostly looks good. Some nitpicks:   I like the comment at the beginning saying what the program is supposd to do. However, I think it's not particularly useful for you to list all the functions in your program. There doesn't seem to be any associating between the variables you listed in your comments and the actual variables used in the program. For example, there's no variable called Player's choice (which isn't a valid Python variable name anyway). I'd recommend removing both of these lists. You used tabs to indent your code. That's fine. But you also used tabs to align your comments, which as you can see on github, doesn't end up looking right. The simplest fix here that I recommend is to not try to align your comments. Put your comments on the line before, or immediately to the right of the line.   Example:  # allow player to choose RPS def player_choice():         choice = '' # sets choice initially to blank to start loop     choices = ['rock', 'paper', 'scissors', 'quit'] # string of choices to validate loop     while choice not in choices:         choice = raw_input(""\nChoose rock, paper, scissors, or quit: "").lower()         if choice not in choices:             print ""Invalid selection. Try again.""     # returns the player's choice to variable assigned in play()     return choice     It seems like after the player chooses to quit, you still generate a computer choice and compute a result, which is weird, but I guess there's no way for the player to notice this. Seems like you'd be better off breaking out of your while loop though: http://www.tutorialspoint.com/python/python_loop_control.htm The magic strings 'rock', 'paper' and 'scissors' show up a lot in your program. Might want to look into https://en.wikipedia.org/wiki/Don%27t_repeat_yourself and what would happen if you had to translate ""Rock paper scissors"" into ""Jan Ken Pon"" for example."
learnpython,3badp7,Nebu,1 point,Sat Jun 27 09:02:21 2015 UTC,"Thank you for the great feedback. I ended up putting 'rock', 'paper', and 'scissors' into a string and passed that string along to the functions that need those choices. This way if I want to change the choices it's only done once!   I will look into the formatting and check out PEP-8 to standardize my code!"
learnpython,3badp7,TheBlackCat13,5,Sat Jun 27 17:47:40 2015 UTC,"Some suggestions (in the order of which I thought of them):   I wouldn't make the player type out the whole word.  Just use 'r', 's', 'p', and 'q'. I wouldn't make a function that takes human and player scores, I would make a function that takes two scores and two player names.  This lets you make a multiplayer or computer vs. computer version later. I would use a dict where they keys are (player 1 choice, player 2 choice) tuples and the values are (result string, winner number) tuples.  Then you can just use the two player choices as the dict key to get the result. In computer_choice, it can just be one line.  Just return the random choice directly, without saving to a variable. In player_choice, I would test if the result is in the valid choices, and if it is return.  If not, then tell the player the choice is wrong and continue the loop.  That eliminates the ending condition from the while test and doesn't need a separate return after the while loop. Use with for opening files. Follow pep8 create_save doesn't need to be a separate function. You use str addition and replacement when generating the score string to save.  You don't have any advantage to using both, just use the replacement. You convert a string to a string when saving.  A string is already a string, you don't need to convert it. In opening_menu I would use single characters rather than integers for choosing what the player wants. Even if you use integers in opening_menu, you can still test against the string version of the integer.  Type conversions are expensive. I would put the play() call in a if __name__ == '__main__': test so it only runs if you run the file as a script.  As it stands now, it will call play() if run from another script, which isn't necessarily what you want. In play, I would do something like if not opening_menu(): return (on two lines). In play, you will still generate a score even if the player tries to quit.  So if the player tries to quit, I would break.  Then I would put the closing_menu call after the while loop.  This also means you can just do while True. I would split play into two functions.  The first function would take two functions as its arguments, and would do roughly the same things except it would call those two functions in place of the player and computer choice functions.  This allows you to also support two player games and two computer games in the same function.  Then I would have a wrapper function that calls that function with the player and computer choices functions as the arguments. Of course it would need to be changed to keep track of player 1 wins and player 2 wins instead of wins and losses, will need to be able to handle quit commands from either player, and probably should have an optional argument specifying the number of games to play (so you can tell it to play some number of computer vs. computer games, such as for unit testing)."
learnpython,3badp7,99AFCC,1 point,Sat Jun 27 09:27:45 2015 UTC,Thanks for all of your suggestions! I'm working my way through your list and appreciate your feedback. I've made several changes and am learning about others. Didn't know about if __name__ == '__main__': so that was nice to read up on. Also checking out with and learning about that.
learnpython,3badp7,Tantric989,3,Sat Jun 27 17:50:35 2015 UTC,"Wow, this is good for a beginner. There's some things that i think the other guys covered, but it looks pretty good.  I like the lack of globals and you broke things up into functions well.  The flow is pretty good too. It's really easy to follow.  Good job!    For a bigger challenge, try out Rock, Paper, Scissors, Lizard, Spock.  Scissors cuts Paper Paper covers Rock Rock crushes Lizard Lizard poisons Spock Spock smashes Scissors Scissors decapitates Lizard Lizard eats Paper Paper disproves Spock Spock vaporizes Rock (and as it always has) Rock crushes scissors   There's a way to solve this without a huge if/else tree.   diagram: https://en.wikipedia.org/wiki/Rock-paper-scissors#/media/File:Rock_Paper_Scissors_Lizard_Spock_en.svg"
learnpython,3badp7,Ewildawe,2,Sat Jun 27 15:31:29 2015 UTC,This is one of the first challenges of Coursera's intro to Python class.  I really enjoyed that one.
learnpython,3bb081,Geauxtoguy,6,Sat Jun 27 14:20:50 2015 UTC,"You should use random.choice to pick a reply.  You can pass the string to be displayed in inputas an argument than using a separate print. Your playAgain matches 'Yaddayaddayadda.  You should probably use'y'and'n'explicitly as the choices, and use awhile` loop to keep asking until you get one of the two. There isn't much point having multiple functions here.  You should just have one big function, which is called inside a if __name__ == '__main__': block so it is only called if the file is run as a script. You pretty much never want to use sys.exit().  In your case, just use break.  If you turn the whole thing into a function, use return. If you make a function, have it accept an optional sequence of replies.  Do not make the replies the default argument, make the default argument None and use replies if the argument is None. pep8"
learnpython,3bb081,TheBlackCat13,1 point,Sat Jun 27 14:41:04 2015 UTC,Thanks for the reply!  Can you elaborate on points 6 and 7?
learnpython,3bb081,TheBlackCat13,3,Sat Jun 27 15:13:48 2015 UTC,"For 6, basically, Python is slow at accessing global variables, which you are doing.  It can also lead to unexpected side-effects.  So you should pass the list of replies as an argument.  This has the nice side-effect of allowing users to substitute their own replies.  This should be an optional argument so users don't always have to manually specify.    However, replies is a list, a mutable data type.  And you should never use a mutable data type as the default argument for a function.  Instead, you should either make replies a tuple (which is immutable), or you should make the default argument None and if it gets None as the argument, replace it with replies.  For 7, pep8 is the recommended style for Python code.  It is not required, but it is designed to make the code as readable as possible, and pretty much all projects these days follow it.  So to make your code as easy-to-use as possible for others, you should also follow pep8.  Your code is already mostly pep8 compliant.  The main issues that jump out at me are the order of the imports (very, very minor, and will be fixed by removing sys as I said in 5), the line length of replies (it is easy to put each reply on one line), and the number of blank lines between functions (more important)."
learnpython,3bb081,SleepyHarry,1 point,Sat Jun 27 16:00:04 2015 UTC,Thanks again!
learnpython,3bb081,TheBlackCat13,1 point,Sat Jun 27 17:04:02 2015 UTC,6b. Perhaps have a separate file with a response per line to allow you to change them/add to them without changing your code.
learnpython,3bb081,SleepyHarry,2,Sat Jun 27 15:24:14 2015 UTC,"If there were a lot of replies I would agree with you.  But there are only a few replies here, so I think that would add too much complexity."
learnpython,3bay6n,Vangaren,2,Sat Jun 27 13:57:53 2015 UTC,"Ok except for the fact that i have no idea what you are talking about, if you want it to display on a web browser you need to understand web browsers only parse HTML, CSS and Javascript. This is /r/learnpython, python is a back end language to build frame works, so if you want to make a backend application, you'll need to know how to setup a python web server."
learnpython,3bay6n,SimonWoodburyForget,1 point,Sat Jun 27 17:14:08 2015 UTC,It sounds like you need something like PyJamas.
learnpython,3bbn9u,Jerryrad,3,Sat Jun 27 17:54:49 2015 UTC,"Does that sound correct or am I waaaaay off??   More or less correct. You don't have to store the script name, but you do have to deal with it somehow since it's there.  Your python script gets called like so:  python my_script.py my_file.txt   sys.argv is just the list of arguments, so in the above case:  sys.argv = ['my_script.py, 'my_file.txt']   As a result, you can't just get away with:  filename = sys.argv   that just gives you:  filename = ['my_script.py', 'my_file.txt']   Now, what you could do is  filename = sys.argv[1]   which would be basically equivalent to the above code if you don't use the script variable.   Personally I prefer not creating unused variables, so this seems better to me, though in any serious code you should use something like optparse or argparse which will handle your arguments with proper error handling and deal with a wider range of cases, so it's sort of a moot point.  EDIT: When I say filename = sys.argv[1] is basically equivalent, it's worth pointing out that your original code will throw an error if it gets more than one argument, while the filename = sys.argv[1] version will just ignore extra arguments. Again, the right thing to do is use an argument parsing module to properly specify your script's behavior."
learnpython,3bbn9u,NoLemurs,4,Sat Jun 27 18:40:14 2015 UTC,"Yes. The arguments you get are the commandline arguments + the name of the script in front. So if you have 1 argument you get a 2 item list, which can only be unpacked properly in a 2 item tuple."
learnpython,3bbn9u,Sinidir,3,Sat Jun 27 18:37:01 2015 UTC,"when you use argv, the first input that argv assigns is, by default, the script file path. let's call the script above ""sir_robin.py"", and let's say the file you're planning to use it on is ""brave_file.txt"". when you run sir_robbin.py from the command line, you're going to be typing ""python sir_robbin.py brave_file.txt"". that means that the first input argv is going to assign is ""sir_robbin.py"", and assign that to the variable ""script"". the second input it will see is ""brave_file.txt"", and assign it to the variable ""filename"". if you delete the variable ""script"", then you're assigning the file path to ""filename"" and then later in the script you're trying to read() the filename, which is the script's path. so you get an error. NoLemurs has a workaround if you want to skip assigning the file path to the script variable, but then again, are you really saving yourself anything, since you'll still be typing the same things into the command line? [new to programming, if I misused any terms in my answer, please let me know so I can continue learning!]"
learnpython,3baft8,Rzaaeeff,5,Sat Jun 27 09:06:01 2015 UTC,"Your examples look fine. Are you sure your selector is correct?  Note that when searching for an element by class you need to match the value exactly:  >>> import lxml.html >>> fragment = lxml.html.fromstring('<div><span class=""foo bar"">baz</span></div>') >>> fragment.xpath('//span[@class=""foo""]') [] >>> fragment.xpath('//span[@class=""foo bar""]') [<Element span at 0x106c41890>]   There's a great add-on for lxml called cssselect which lets you use css selectors:  >>> fragment.cssselect('.foo') [<Element span at 0x10e65ec58>]   It's on the cheeseshop, https://pypi.python.org/pypi/cssselect, documentation at http://lxml.de/cssselect.html .  A request is what a web client sends to a server, with details about what URL the client wants, what http verb to use (get / post, etc), and if you are submitting a form the request typically contains the data you put in the form.  A response is what a web server sends back in reply to a request from a client. The response has a status code which indicates if the request was successful (code 200 usually if there were no problems, or an error code like 404 or 500). The response usually contains data, like the html in a page, or the binary data in a jpeg. The response also has headers that give more information about what data is in the response (e.g. the ""Content-Type"" header which says what format the data is in).  Hope this helps,  Dave"
learnpython,3baft8,davidbuxton,1 point,Sat Jun 27 10:24:18 2015 UTC,"Thank you, Dave! Selector is exactly correct. I noticed that, the problem is not with xpath, but with tree = html.fromstring(source). As you see, i print tree.text, but it gives me only few line breaks. Thank you, again!"
learnpython,3baft8,davidbuxton,1 point,Sat Jun 27 11:32:20 2015 UTC,"I have declared Mecanize.Browser object, and gave it few properties. Could one of these be problem?  browser = mechanize.Browser() browser.set_handle_robots(False) cookies = mechanize.CookieJar() browser.set_cookiejar(cookies) browser.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.7 (KHTML, like Gecko) Chrome/7.0.517.41 Safari/534.7')] browser.set_handle_refresh(False)"
learnpython,3baft8,davidbuxton,2,Sat Jun 27 11:34:56 2015 UTC,"I'm not familiar with mechanize, but I wouldn't think those are a problem.  What's the value of source?  response = browser.open(url) source = response.read() print source"
learnpython,3baft8,davidbuxton,1 point,Sat Jun 27 11:50:38 2015 UTC,"When i print source, it gives exact source code of page."
learnpython,3baft8,davidbuxton,2,Sat Jun 27 12:12:22 2015 UTC,Do you see any elements at all?  tree = lxml.html.fromstring(source) tree.xpath('*')   And any links?  tree.xpath('//a')
learnpython,3baft8,davidbuxton,1 point,Sat Jun 27 13:38:23 2015 UTC,">>> print tree.xpath('*') [<Element head at 0x2fb6b38>, <Element body at 0x2fb6b88>] >>> print tree.xpath('//a') [<Element a at 0x2f6bb88>, <Element a at 0x2f6bbd8>, <Element a at 0x2f6bc28>, <etc> ]   Both works. :)"
learnpython,3baft8,coderjewel,2,Sat Jun 27 14:04:42 2015 UTC,"So if searching for //a gives you matching elements, but //a[@class=""UFINoWrap""] doesn't, then there are no elements like <a class=""UFINoWrap"">.  Look harder at the source html."
learnpython,3bajns,coderjewel,2,Sat Jun 27 10:16:42 2015 UTC,Look into curses.
learnpython,3bajns,K900_,1 point,Sat Jun 27 10:59:49 2015 UTC,curses is a lot more complicated than what my ideal library would be. Any easier options?
learnpython,3bajns,K900_,1 point,Sat Jun 27 11:21:32 2015 UTC,"Urwid is higher level, but also pretty complex. I can't think of anything simpler."
learnpython,3bajns,K900_,1 point,Sat Jun 27 11:55:05 2015 UTC,"I was trying to build an interface like this, but I guess that's going to be a hassle. Thanks for your help :)."
learnpython,3bajns,MNSTRDSTRYR,1 point,Sat Jun 27 12:18:24 2015 UTC,You can absolutely do that with Curses.
learnpython,3bajns,MostLegit,1 point,Sat Jun 27 12:24:04 2015 UTC,"I know, but it seems like a lot of trouble, especially given how arcane the API documentation seems."
learnpython,3bajns,MostLegit,1 point,Sat Jun 27 20:01:48 2015 UTC,It's really not that bad when you dive into it. I generally use python and ncurses for simple CLI programs.
learnpython,3bajns,hharison,1 point,Sat Jun 27 12:43:51 2015 UTC,"I'll go with it as a last resort, I guess."
learnpython,3b815z,Iskandar11,15,Fri Jun 26 18:39:33 2015 UTC,Raymond Hettinger videos.   Beyond PEP 8 Super Considered Super!
learnpython,3b815z,liam_jm,10,Fri Jun 26 19:21:10 2015 UTC,"Adding to the Raymond Hettinger videos:   Transforming Code into Beautiful, Idiomatic Python   Others:   Keynote - Jacob Kaplan-Moss Ned Batchelder - Facts and Myths about Python names Pragmatic Unicode, or, How do I stop the pain David Beazley - Modules and Packages: Live and Let Die!"
learnpython,3b815z,__skrap__,1 point,Sat Jun 27 00:19:09 2015 UTC,"Really any video from Raymond, Dave or Ned is top notch.  Edit: Can't forget Brandon Rhodes, either. I'm sure I'm forgetting others though. D:"
learnpython,3b815z,kurashu89,1 point,Sat Jun 27 12:31:28 2015 UTC,Anyone knows what font he's using on the Beyond PEP 8 video?
learnpython,3b815z,Tuganazy,1 point,Sun Jun 28 12:01:44 2015 UTC,Perhaps the 79 character rule harkens back to the 80 column punch cards of yore?
learnpython,3b815z,jubeiscrolls,7,Mon Jun 29 23:52:16 2015 UTC,I've enjoyed Google's Python Class with Nick Parlante.
learnpython,3b815z,theory42,5,Sat Jun 27 05:26:42 2015 UTC,Loop like a native
learnpython,3b815z,forwardbiased,2,Sat Jun 27 06:30:43 2015 UTC,This was very helpful. I never knew how to use the zip function.
learnpython,3b815z,headyyeti,1 point,Mon Jun 29 18:54:57 2015 UTC,"I know, right! The best part of that video is the succinct discussion about generators. Totally nails it."
learnpython,3b815z,forwardbiased,9,Mon Jun 29 21:19:58 2015 UTC,"Sentdex has a lot of great videos and he's great at responding to questions.  Don't waste your time with thenewboston, I kind of find him a bit douchey."
learnpython,3b815z,xabe13,1 point,Sat Jun 27 01:09:14 2015 UTC,"Wow, my douche meter rarely fails me but I've never gotten that vibe from him. He's always been a fun way for me to run through things again, after reading a bit of the same material."
learnpython,3b815z,I_Just_Ruined_It,2,Sat Jun 27 04:54:51 2015 UTC,"I watched a video where he was eating chicken nuggets and something about him just rubbed me the wrong way.  Not to mention, on /r/learnprogramming, he's usually a channel that is highly frowned upon.  Supposedly, he's somebody that learns just enough about something and turns around and makes a bunch of videos about it acting like he's an expert. I can't confirm it, but that was the general consensus on /r/learnprogramming.  Seriously, sentdex knows his shit and he actually has a very beautiful website.  He's a great guy too."
learnpython,3b815z,xabe13,2,Sat Jun 27 06:15:08 2015 UTC,"I haven't seen any of his videos myself, but I can comfirm he is frowned upon in /r/learnprogramming. He is in the discouraged resources section of their index."
learnpython,3b815z,CosmicJacknife,3,Sat Jun 27 14:15:22 2015 UTC,"Zero to Hero with Python is great if you're looking to grab the fundamentals of the language. The video itself is simply the full recording of a Microsoft Virtual Academy Course. You should definitely check out the course on the site itself as it has many interesting features (i.e. assessments, slides, progress tracking) to help you learn, least of which is the live classes they run."
learnpython,3b815z,Spasmodics,1 point,Sat Jun 27 04:56:10 2015 UTC,I found these when I took a course on Python.  https://www.youtube.com/playlist?list=PL710F7581CFB8F7C3
learnpython,3b815z,Biochemicallynodiff,1 point,Fri Jun 26 22:11:21 2015 UTC,Someone has posted this must watch list in /r/python recently.
learnpython,3b815z,dunkler_wanderer,1 point,Sat Jun 27 07:55:26 2015 UTC,I'm fond of this one  https://www.youtube.com/watch?v=IGwNQfjLTp0   ;)
learnpython,3b815z,cube-drone,-6,Sat Jun 27 05:51:06 2015 UTC,The New Boston has great tutorials on a LOT of languages other than python as well
learnpython,3b815z,Thunder_54,-2,Fri Jun 26 23:51:58 2015 UTC,+1 for bucky (aka thenewboston). His tutorials are great and I've learned a lot from them.
learnpython,3b815z,franchyze922,-16,Fri Jun 26 23:54:51 2015 UTC,Yes.
learnpython,3b815z,04h,1 point,Fri Jun 26 18:47:34 2015 UTC,Which ones?
learnpython,3b815z,04h,-14,Fri Jun 26 18:50:07 2015 UTC,www.youtube.com/watch?v=T70-HTlKRXo
learnpython,3b77ld,cuginhamer,8,Fri Jun 26 15:05:07 2015 UTC,"see selenium, it has screenshot capability"
learnpython,3b77ld,reckscene,1 point,Fri Jun 26 15:30:09 2015 UTC,Thanks!
learnpython,3b77ld,blacwidonsfw,4,Fri Jun 26 19:23:45 2015 UTC,Selenium is the easiest way for sure.  Example   http://stackoverflow.com/questions/8900073/webdriver-screenshot
learnpython,3b77ld,validated1,1 point,Fri Jun 26 17:13:38 2015 UTC,"Yup, already got it working!"
learnpython,3b77ld,billcrystals,5,Fri Jun 26 19:22:49 2015 UTC,"from selenium import webdriver  browser = webdriver.Firefox()  browser.get(""http://www.google.com"")  browser.save_screenshot(""screenshot.png"")"
learnpython,3b77ld,Juggernog,5,Fri Jun 26 17:44:12 2015 UTC,"PIL has an ImageGrab() method that captures the screen.  It is Windows only, however.  I bet you can also do it with OpenCV."
learnpython,3b77ld,novel_yet_trivial,1 point,Fri Jun 26 16:48:02 2015 UTC,"While not the best way for this particular use case, for a Linux screenshot management/sharing application I was writing I invoked scrot and used the file it outputted. So that would be an option."
learnpython,3b77ld,gameplace123,-6,Sat Jun 27 00:21:09 2015 UTC,The easiest would be to call en external screen capture program. On Linux the command is import.
learnpython,3ba8of,jakecage,6,Sat Jun 27 07:08:50 2015 UTC,"minMonthPay's value is set in the for loop. It has a value of 490 as after the loop that's the final value in the range you specified (up to but not including 500, increasing by 10 each time)  I'm not sure what the script is supposed to do, but is it definitely minMonthPay you want to print at the end?"
learnpython,3ba8of,arctic_feather,2,Sat Jun 27 07:30:03 2015 UTC,"Yes, I want the for loop to break when I find the minMonthPay to make balance == 0. Is it not breaking, that why?"
learnpython,3ba8of,zahlman,3,Sat Jun 27 07:34:31 2015 UTC,Have you considered the possibility that the balance never equals zero exactly? Why do you expect it to equal zero on one of those iterations?
learnpython,3ba8of,zahlman,0,Sat Jun 27 07:37:50 2015 UTC,"Because it's an assignment for a online class, that gave me the answer it's suppose to be and its correct answer is 310. I got something wrong, I don't know what."
learnpython,3ba8of,arctic_feather,3,Sat Jun 27 07:39:26 2015 UTC,"Have you tried directly checking what balance you get with a payment of 310?  Incidentally, have you tried doing it by hand?"
learnpython,3ba8of,WeakNuclearForce,2,Sat Jun 27 07:45:14 2015 UTC,"Ah ok, I'm not at my computer to test it now, but I'm guessing that the balance is never equal to zero, instead it becomes a negative number at some point.  So instead of checking if it's equal to zero, check if it's less than or equal to zero."
learnpython,3ba8of,freakzilla149,1 point,Sat Jun 27 07:39:14 2015 UTC,Changed to:  if balance > 0 and month == 12:   and:  if balance <= 0:   Now it's giving me 440.
learnpython,3ba8of,blackrat47,1 point,Sat Jun 27 07:43:55 2015 UTC,"""Notice that it is possible for the balance to become negative using this payment scheme, which is okay. A summary of the required math is found below:""  Monthly interest rate = (Annual interest rate) / 12.0 Monthly unpaid balance = (Previous balance) - (Minimum fixed monthly payment) Updated balance each month = (Monthly unpaid balance) + (Monthly interest rate x Monthly unpaid balance)"
learnpython,3b7fe6,Freddie_V4,1 point,Fri Jun 26 16:03:18 2015 UTC,"There are many options, but the most common is to just use the built-in unittest module: it operates similar to other xUnit test frameworks.  Most CI tools support python by nature of just running an arbitrary test command. Travis is a popular option for open-source projects because (for them) it's free and hosted."
learnpython,3b7fe6,xiongchiamiov,1 point,Fri Jun 26 16:19:26 2015 UTC,"I was thinking about unit testing as a result. I've done them in Java, but are they the same in Python?    API-wise, unittest and JUnit should feel similar - I haven't done unit tests with Java proper, but I'm using JUnit from within Scala, and they're organized in a similar way - you make a class inherit from unittest.TestCase, add setUp and tearDown if you need them, and add methods which are prefixed with the word test as tests.  You'll just have to add a bit of boilerplate to run them, which can be annoying if you expect an IDE to do that for you:  if __name__ == '__main__':     unittest.main()   Although, if you're thinking of simplifying things, you can check out the Nose testing framework, which avoids having classes everywhere by letting you group tests with decorators. I haven't used it, but I've heard good things about it.   When should I create unit tests?   When you get a solid interface to whatever you're testing. This might be either after you write the code, if you're winging it, or beforehand if you have a good idea of what your interfaces will look like before you write the code.   How are they made in Python?   The documentation for the unittest module should give enough examples to get you started."
learnpython,3b7fe6,adamnew123456,1 point,Fri Jun 26 18:05:51 2015 UTC,"Line 68, should 'where' be 'were'?"
learnpython,3b7fe6,uttamo,1 point,Fri Jun 26 19:39:19 2015 UTC,"I think it's nice that you want to help OP out, but posting it here, unless it relates to OP's questions about unit testing (which, it doesn't) isn't really a relevant response.  You could, however:   Create an issue on OP's github, if they have issue tracking enabled, which, they do. If you have a GitHub account (it's free and super easy to make if you don't!) you could clone OP's repository through GitHub (using ""fork"",) write the changes yourself, and then create a pull request with OP so that they can merge your fixes in, rather than having to write it themselves."
learnpython,3b7fe6,theywouldnotstand,-2,Fri Jun 26 20:45:38 2015 UTC,"I disagree. Just because someone asks about unit testing doesn't mean you shouldn't suggest other changes too. If, for example, OP had bad readability or was writing certain pieces of code in ineffective ways, one shouldn't refrain from suggesting changes just because it doesn't relate to unit testing. Any improvements will help OP become a better programmer.  Yes, my suggestion is minor isn't related to unit testing, let alone programming, but it's still a suggestion. It doesn't hurt anyone to point out a typo."
learnpython,3b8453,MrDysprosium,3,Fri Jun 26 19:01:12 2015 UTC,"It doesn't work. While x < 12345678987654321, x % 12345678987654321 will be x. And it never equals to list from 1 to 9"
learnpython,3b8453,04h,3,Fri Jun 26 19:33:02 2015 UTC,"% will give you a remainder but you've got the operation back to front. It should be 12345678987654321 % x.  Use 'in' instead of ==. Use range(1,10). Or use != 0.  For your algorithm, you only need to check up to the square root of the number you are testing and you only need to test prime numbers. If your target doesn't divide by 3 then it isn't going to divide by 9 or 27 either."
learnpython,3b8453,tea-drinker,3,Fri Jun 26 19:34:36 2015 UTC,"I'm not sure what you're trying to do. Your question says you're looking for prime factors of the number, but it looks like the code is trying to decide if the number is prime or not.   Assuming you want to decide if the number is prime, the algorithm you're implementing is trial division.   Rather than using a while loop, your code would better be structured with a for loop:  for x in range(12345678987654321):     if x % 12345678987654321 == range(1, 9): #Can I even do this?         print (""Probably Prime"") #Obv still working out the logic     else:         print (""Definitely not prime"") #right?   You don't need to try every single number between 0 and 12345678987654321. If it isn't prime, it will have a factor between 2 and its square root:  for x in range(2, int(12345678987654321 ** .5)):     if x % 12345678987654321 == range(1, 9): #Can I even do this?         print (""Probably Prime"") #Obv still working out the logic     else:         print (""Definitely not prime"") #right?   The check against the range object is not correct. You want to check if the modulo is 0, which means the number is not prime. In addition, the arguments to modulo are the wrong way round:  for x in range(2, int(12345678987654321 ** .5)):     if 12345678987654321%x == 0: # You can do this!         print (""Not prime"")     else:         print (""Maybe prime"")    It's only when you've tried all the way up to the square root and none of them divides it with no remainder that you know it's prime. In addition, as soon as you know the number is not prime then you can stop testing. Putting these 2 ideas together, break out of the for loop when you find it's not prime, and put an else statement under the for loop, which only gets executed if the break isn't hit:  for x in range(2, int(12345678987654321 ** .5)):     if 12345678987654321%x == 0: # You can do this!         print (""Not prime"")         break else:     print (""Definitely prime"")    This code is working perfectly (unless I made a mistake!)  I'd suggest restructuring your code with a function, such as is_prime:  def is_prime(n):     for x in range(2, int(n ** .5)):         if n%x == 0:             return False     return True  if __name__ == '__main__':     if is_prime(12345678987654321):         print(""Definitely prime"")     else:         print(""Not prime"")   or  def is_prime(n):     return not any(n%x == 0 for x in range(2, int(n**.5)))  if __name__ == '__main__':     if is_prime(12345678987654321):         print(""Definitely prime"")     else:         print(""Not prime"")   You can also do some tricks to make it run more quickly - such as skipping even numbers, as the only even prime is 2. This should make the function roughly 2x quicker:  def is_prime(n):     if n <= 2:         return True      for x in range(3, int(n ** .5), 2):         if n % x == 0:             return False     return True  if __name__ == '__main__':     if is_prime(12345678987654321):         print(""Definitely prime"")     else:         print(""Not prime"")"
learnpython,3b8453,liam_jm,1 point,Fri Jun 26 19:46:05 2015 UTC,"First off, this was insane. Thank you for all the detailed help.  First question. why is it an ""int"" in:  for x in range(3, int(n ** .5), 2):   if that will return a float?"
learnpython,3b8453,liam_jm,1 point,Fri Jun 26 21:59:44 2015 UTC,"Range doesn't work with floats:  >>> range(1.0) Traceback (most recent call last):   File ""<pyshell#2>"", line 1, in <module>     range(1.0) TypeError: 'float' object cannot be interpreted as an integer   I think you may actually want to do int(n ** .5)+1, though, my mistake, sorry!"
learnpython,3b8453,Ringmonkey84,1 point,Fri Jun 26 23:28:54 2015 UTC,"Well, unless n is a perfect square, (n ** .5) IS going to return a float. You don't want that though; you want the biggest integer <= the square root, since n needs to be divisible by an integer in order to prove it's not prime. So you cast the square root down."
learnpython,3b8453,liam_jm,1 point,Fri Jun 26 23:32:13 2015 UTC,"cast the square root down   Did you mean to say ""round"" it down? Or is ""cast"" terminology I'm not familiar with?"
learnpython,3b8453,liam_jm,1 point,Mon Jun 29 02:39:45 2015 UTC,"There's also another problem with my final implementation, it's missing the n%2 check. Corrected version:  def is_prime(n):     if n <= 2:         return True      if n%2 == 0:         return False      for x in range(3, int(n ** .5)+1, 2):         if n % x == 0:             return False     return True"
learnpython,3b8453,liam_jm,1 point,Sat Jun 27 00:27:52 2015 UTC,"for x in range(3, int(n ** .5)+1   +1? Why is this?  EDIT Thank you so much for your help BTW  EDIT 2 Also, why are you skipping by 2s?, OH JK I answered my question as I typed this. That's very smart to skip evens.  EDIT 3 Why do you have to state ""int(n ** .5)"" instead of just ""(n ** .5)""?"
learnpython,3b8453,PM_ME_YOUR_CORGIS,1 point,Sun Jun 28 20:31:54 2015 UTC,"+1? Why is this?   Otherwise, perfect square composite numbers will be decided to be prime, e.g. 25   Why do you have to state ""int(n ** .5)"" instead of just ""(n ** .5)""?   range takes int arguments and n ** .5 will be a float"
learnpython,3b8453,autowikibot,1 point,Sun Jun 28 21:02:29 2015 UTC,"Otherwise, perfect square composite numbers will be decided to be prime, e.g. 25   Can you elaborate on this? I'm not seeing the logic here yet."
learnpython,3b8453,Zahand,1 point,Mon Jun 29 02:42:09 2015 UTC,"Ok, so if n=25, range(3, int(n ** .5), 2) would be range(3, 5, 2), which would be just [3] - remember, range doesn't include the end-point. range(3, int(n ** .5)+1, 2) would be range(3, 6, 2) which is [3, 5], so the algorithm correctly identifies 25 as composite"
learnpython,3b8453,zahlman,1 point,Mon Jun 29 06:59:45 2015 UTC,Perfect explanation. Thank you very much!
learnpython,3b9ws9,Always_Question_Time,5,Sat Jun 27 04:36:01 2015 UTC,tuple unpacking
learnpython,3b9ws9,Rhomboid,1 point,Sat Jun 27 05:15:50 2015 UTC,"Thanks! I've done a tiny bit of tuple unpacking before, but obviously not enough to recognise it like this."
learnpython,3b9ws9,GoldenSights,3,Sat Jun 27 05:17:08 2015 UTC,"If a function returns two values, you can simply say  x, y = function()   Instead of having to do  results = function() x = results[0] y = results[1]   This is called unpacking  In this case, plt.subplots is returning some value for fig, and a tuple whose first value becomes ax1 and second value becomes ax2."
learnpython,3b8tms,AlexKingstonsGigolo,2,Fri Jun 26 22:18:39 2015 UTC,You could use json if you are not married to a csv:  http://pymotw.com/2/json/  It can handle dictionaries of dictionaries without any further conversion.
learnpython,3b8tms,gengisteve,1 point,Fri Jun 26 22:38:47 2015 UTC,"Yes! I was just reading about this :) Use the pandas library to import the csv file as a pandas DataFrame, which can be treated as a dictionary of dictionaries. The pandas command to do this is very easy: pandas.from_csv  Google ""pandas.from_csv"" for more details."
learnpython,3b8tms,CATHOLIC_EXTREMIST,2,Fri Jun 26 22:56:32 2015 UTC,"Pandas, given that it is a separate module, is quite overkill for this purpose. The default csv module is more than capable of accomplishing this."
learnpython,3b8tms,noiwontleave,1 point,Sat Jun 27 03:23:57 2015 UTC,"Can the default csv module write csv? I was under the impression is only a parser for reading them. I could be mistaken,"
learnpython,3b8tms,CATHOLIC_EXTREMIST,2,Sat Jun 27 16:41:58 2015 UTC,Absolutely. It is sufficient for any basic csv functionality. Pandas is really a data analysis library.
learnpython,3b8tms,noiwontleave,1 point,Sat Jun 27 16:50:39 2015 UTC,"Thank you very much, TIL!"
learnpython,3b8tms,CATHOLIC_EXTREMIST,1 point,Sat Jun 27 16:51:32 2015 UTC,"A csv file is a list of dictionaries in python.  If you wanted to make it a dict of dicts you could assign the row number as the key value, and the row data as the value value.    Here is an example that I was using for a thing, recently:  import csv  def unicode_csv_reader(unicode_csv_data, dialect=csv.excel, **kwargs):     # csv.py doesn't do Unicode; encode temporarily as UTF-8:     csv_reader = csv.reader(utf_8_encoder(unicode_csv_data),                             dialect=dialect, **kwargs)     for row in csv_reader:         # decode UTF-8 back to Unicode, cell by cell:         yield [unicode(cell, 'utf-8') for cell in row]  def utf_8_encoder(unicode_csv_data):     for line in unicode_csv_data:         yield line.encode('utf-8')  def getAllLinesAsDict(pathtofile):     allrowsbynumber={}     thisfile=open(pathtofile)     thisreader=unicode_csv_reader(thisfile)     for eachrownumber, eachrow in enumerate(thisreader):         if eachrownumber==0:             headings=eachrow         thisrowsheadings=headings[:]         extracols=[]         for eachheading in range(len(eachrow) - len(thisrowsheadings)):             extracols.append(str(eachheading))         thisrowdict={}         for eachcolset in zip(thisrowsheadings + extracols, eachrow):             thisrowdict[eachcolset[0]]=eachcolset[1]         thisrowdict['extra']=[thisrowdict.pop(k) for k in thisrowdict.keys() if k in extracols]         allrowsbynumber[eachrownumber]=thisrowdict     return allrowsbynumber"
learnpython,3b9rem,berlotto,1 point,Sat Jun 27 03:38:16 2015 UTC,You might want to show what you tried...
learnpython,3b7bd9,Elthran,6,Fri Jun 26 15:33:23 2015 UTC,"It's pretty important to mention what version of Python you're using, because the answer depends on that.  It seems you're using Python 3.  In Python 3, the traditional division operator (i.e. /) does floating point (or 'true') division.  10**32 is an integer, but after the first division by 1000 it's a floating point number, and floating point numbers have limited precision.  >>> int(10**32/1000) 99999999999999991433150857216   A float can't represent 10**29 exactly, so it had to round to the nearest representable number.  And the errors continue to compound as it goes on:  >>> int(10**32/1000/1000) 99999999999999987584860160 >>> int(10**32/1000/1000/1000) 99999999999999991611392 >>> int(10**32/1000/1000/1000/1000) 99999999999999983616   You need to be doing this division using integer division, not true division.  That's done with //.  >>> 10**32//1000 100000000000000000000000000000 >>> 10**32//1000//1000 100000000000000000000000000 >>> 10**32//1000//1000//1000 100000000000000000000000   Integers have arbitrary precision.  However, that won't work in the case where the value isn't a multiple of 1000 and/or if decimals is not zero.  In that case you'll need to use the decimal module, which provides arbitrary precision decimal floats.  You'll probably need to work out the proper setting of the precision."
learnpython,3b7bd9,Rhomboid,1 point,Fri Jun 26 16:13:09 2015 UTC,"Thanks! I don't fully understand it but I fixed it. I had to ONLY do integer division for large numbers and true division for small numbers, and I don't know why.      while abs(number) >= base and ourString < (len(powers) - 1):         if number > base**5:             number //= base         else:             number /= base   This works for all my test cases, so I have completed the exercise. But I'm not sure why I needed to put the if/else statement in to force the results to work."
learnpython,3b7bd9,Rhomboid,1 point,Sat Jun 27 05:37:52 2015 UTC,"Like I said:   that won't work in the case where the value isn't a multiple of 1000 and/or if decimals is not zero   It just so happens that all the cases where you have large numbers, they are powers of base and decimals=0, so using int division works.  But not all your testcases are like that.  In general you need to use the decimal module if you want something that really works in all cases.  For example:  >>> friendly_number(100000001000000000000000000000, decimals=12) '100000.000000000000Y' >>> friendly_number(4999000000000000000000, decimals=3) '4.000Z'   That's not right.  (Although those are not directly caused by the issue of true division vs. int division.)"
learnpython,3b7bd9,JustTurrble,1 point,Sat Jun 27 05:56:39 2015 UTC,"Math in computing can sometimes get... odd.  Going through your code step by step, we end up with the result 99999999Y:  >>> x = 10**32 >>> print(x) 100000000000000000000000000000000 >>> x /= 1000 >>> print(x) 1e+29 >>> x /= 1000 >>> print(x) 9.999999999999999e+25 >>> x /= 1000 >>> print(x) 1e+23 >>> x /= 1000 >>> print(x) 9.999999999999998e+19 >>> x /= 1000 >>> x /= 1000 >>> x /= 1000 >>> x /= 1000 >>> print(x) 99999999.99999999 >>> x = int(x) >>> print(x) 99999999 >>> x = round(x, 0) >>> print(x) 99999999   Computational arithmetic can sometimes end up with approximations instead of the exact numbers you might expect, which is why X ends up being 99999999.99999999 after 8 iterations of /= 1000. When you follow this up with x = int(x), the decimal portion of the number is truncated, leaving you with 99999999. The following call to round is rounding an integer, so the result is the same integer.  Instead, switch these calls around so that round is called first:  >>> print(x) 99999999.99999999 >>> x = round(x, 0) >>> print(x) 100000000.0 >>> x = int(x) >>> print(x) 100000000   EDIT: As mentioned in the other response, this can be avoided altogether using integer division, which is //. :)"
learnpython,3b72ib,doob10163,6,Fri Jun 26 14:24:50 2015 UTC,"i would look for a lib that does screen capture (googled python screenshot, got https://pypi.python.org/pypi/pyscreenshot ) check out imigur api: https://api.imgur.com/#example_code (googed imigur api, clicked a link leading me to this python lib: https://github.com/Imgur/imgurpython ) grab a lib to clipboard (you get the drill by now, https://pypi.python.org/pypi/clipboard/0.0.4 )  Then write a script, which upon running screencaps and uploads to imgur, putting the link on the clipboard! Once it works, I would use KDEs settings to bind a key to that script.  What I have actually done, is write these two bash scripts that upload to my own server: http://chozabu.net/autopush/dreampush http://chozabu.net/autopush/timenamepush I use these scripts to upload general files, I upload screenshots using KDEs default screenshot manager (ksnapshot) which allows me to send my screencap to either script!  why bash over python? just because I was using CLI to upload files, and automated it. For anything more complex I'd probably jump to python."
learnpython,3b72ib,chozabu,2,Fri Jun 26 21:33:08 2015 UTC,"This is all simplified GUI module stuff, things like tkinter, pyQt, GTK, all manage this type of stuff and wrap them into objects like buttons, text box, they do all the event handling like knowing where the mouse is when it clicks the button, it can even insert things into the clip board, or check whats currently in it."
learnpython,3b72ib,SimonWoodburyForget,1 point,Fri Jun 26 14:28:09 2015 UTC,"Do I have to use all of these modules together in order to have this project come to life? What in particular should I be looking at?  Here's what I want to do: I want to be able to start the program, and then the program detects when i press ""print screen"" (or some other combination of keys) and then processes the screen capture, saves it (using paint or some other program), uploads to img.ur, then copies the direct link to my paste (ctrl + C's the image url)  EDIT : Someone just informed me that you can just print screen and then ctrl + V directly to imgur. That should cut out a step or two from this. But I still want to learn how to make it interact with paint as well. I want to import date/time and then start naming the screenshots after the date/time they were taken"
learnpython,3b72ib,SimonWoodburyForget,5,Fri Jun 26 14:30:26 2015 UTC,"Print screen saves an image in your clip board if i'm right, i think you can detect key process's with them yes so print screen is a button, uploading to imgur would be done with pyimgur, which is a imgur api wrapper that does a very good job simplifying there api down.  You don't even need to have a window no, you can check whats in the clipboard and record keypress's without anything i believe in tkinter, if not, i am certain the windows api wrappers will be able to solve this(thought they a lot for this kinda simple task).  There are other modules that can also read whats in your clip board, i'd say if tkinter doesn't work, which it did not for me for some reason, ""pyperclip"" is my favorite."
learnpython,3b72ib,SimonWoodburyForget,2,Fri Jun 26 14:38:17 2015 UTC,"What ever you think is the simplest way for you, i made this silly small module(that i just remembered i still had) that does about what you described(except its not an image..), takes ingame information from my clip board and posts it online by pasting, use's selenium, so doesn't always work, but it looks something like this:   from selenium import webdriver from selenium.webdriver.common.keys import Keys import time  import pyperclip  url = 'https://dscan.me/' browser = webdriver.PhantomJS('phantomjs') browser.get(url)  box = browser.find_element_by_name('scandata') box.send_keys(Keys.CONTROL, 'a') #highlight all in box #box.send_keys(Keys.CONTROL, 'c') #copy box.send_keys(Keys.CONTROL, 'v') #paste  button = browser.find_element_by_class_name(""submitbutton"") button.click()  time.sleep(2) redir = browser.current_url  pyperclip.copy(redir)   Now you got the imgur api so it would be even simpler really. You could completely avoid selenium hacking it :P (which btw i don't recommend since its terribly slow and doesn't always work, the webpage's end up changing)"
learnpython,3b72ib,billcrystals,1 point,Fri Jun 26 14:43:27 2015 UTC,Thanks mate!
learnpython,3b72ib,Pre-Owned-Car,1 point,Fri Jun 26 14:49:04 2015 UTC,"Selenium looks just like jQuery, seems like an awesome library."
learnpython,3b72ib,MostLegit,2,Sat Jun 27 00:55:37 2015 UTC,If you want a program that does this now it already exists and is called puush. Though it doesn't use imgur. Still seems like a really fun project though so I would give it a shot.  EDIT: Added link
learnpython,3b72ib,chozabu,1 point,Fri Jun 26 17:10:48 2015 UTC,Screencloud if linux
learnpython,3b72ib,queerMTFchicago,2,Sat Jun 27 00:25:18 2015 UTC,"Oh, Another great step to take before writing code, is to see if someone else has already done it!  Often they have, and better than I was planning on doing. Sometimes not, it is worth a check!  https://www.google.co.uk/search?client=kubuntu&channel=fs&q=python+upload+to+imigur  Not that I am saying don't do it! but if you get stuck, you can find several exact refrences on how someone else has done it ;)"
learnpython,3b8sqt,goodDayM,3,Fri Jun 26 22:10:51 2015 UTC,"The built-in standard library module for unit testing, unittest, already supplies functionality along these lines, as of version 3.2:  https://docs.python.org/3/library/unittest.html#test-discovery"
learnpython,3b8sqt,zahlman,0,Fri Jun 26 23:06:04 2015 UTC,"Thanks, good to know.  I can't use this within the framework I'm working in though.  Let's say it wasn't unittests, but something else - what would you do then?"
learnpython,3b9h15,hellothere4556,3,Sat Jun 27 01:55:50 2015 UTC,"This one you should be able to think out logically as the code is fairly simple. Strings are iterable, so the simplest thing to do would be to iterate over the string. For each letter, check to see if the current letter was equal to the last. If it was, add one to your counter. If not, reset your counter and move to the next letter. You will need a special case for the first letter but that should be fairly simple. Want to give it a shot?  Edit-Alternatively, you could create a set with the letters of your string and then call string.count(letter) for each letter and returning the highest result."
learnpython,3b9h15,noiwontleave,2,Sat Jun 27 02:00:03 2015 UTC,"Actually your alternative isn't the same. For the OP's example, it would return 5 as it doesn't account for whether the characters are adjacent."
learnpython,3b9h15,rhgrant10,1 point,Sat Jun 27 03:47:04 2015 UTC,Whoops you're right. Didn't think that one through quite enough.
learnpython,3b9h15,noiwontleave,1 point,Sat Jun 27 03:50:30 2015 UTC,"I could do the second option, using the count function. But would this work if the string was a user input and I did not know the letters or characters of the string?"
learnpython,3b9h15,noiwontleave,1 point,Sat Jun 27 02:19:50 2015 UTC,What would lead you to believe it wouldn't?
learnpython,3b9h15,Justinsaccount,3,Sat Jun 27 03:21:36 2015 UTC,Posting only assignment/project goal is not allowed. Read posting guidelines.  Posting homework assignments is not prohibited if you show that you tried to solve it yourself.
learnpython,3b9h15,silverpendulum,1 point,Sat Jun 27 02:18:51 2015 UTC,"For each character in the string, see how long the substring starting with that letter is. For example, ""aasssffdzdf"", you start with the first letter ('a'), then check the next. In this example, the second letter is still 'a', so you get a count of 2. You now check the third letter. You see that it's not the same as the current letter you're checking, so you stop counting the previous letters ('a'), and see if the current substring length is greater than all the substrings you've encountered so far (this is where you update a counter variable for the whole string, initially set to zero), reset the current substring counter to 1 (already counting the 's'), and proceed, this time counting the current letter which is 's'. Just be mindful if you've reached the last letter; at that point there wouldn't be a next character to check and you should stop."
learnpython,3b9h15,rhgrant10,1 point,Sat Jun 27 03:33:17 2015 UTC,Take a look at itertools.groupby. It should work for your purpose.
learnpython,3b9h15,TheBlackCat13,1 point,Sat Jun 27 04:57:34 2015 UTC,"groupby is probably the simplest approach, but it can be slow for very long strings.  A faster approach would be to use numpy, assuming it doesn't contain unicode characters.  You can can use it to find the indexes where the repeats starts, and then find out which index is farthest from the next one."
learnpython,3b9h15,stebrepar,1 point,Sat Jun 27 10:01:35 2015 UTC,"the longest substring in a string   What does that even mean?   For example, in ""hahaaaahalol"", the return value would be 4.   Representing what? ""haha""? ""aaaa""? ...?"
learnpython,3b8prw,whileloops,4,Fri Jun 26 21:46:26 2015 UTC,"There are a few issues:   Opening a file with a w mode automatically truncates it, so the f.truncate() is useless. Opened files have a position associated with them. When you read or write, the position moves. After you've written some data, the position is at the end of the file, so calling f.read() returns an empty string. If you want to read the whole contents, you need to first set the position to the beginning of the file with f.seek(0). In general, to join several strings together, you should use ""\n"".join([s1, s2, s3]). For an example this small it doesn't really matter, but keep that in mind for the future.   Try these things, and if you're still having problems, please provide more information. Tell us what you typed into the raw_input prompts, and paste the contents of the file for us to see."
learnpython,3b8prw,kalgynirae,1 point,Fri Jun 26 21:59:26 2015 UTC,"OP, is it me, or are you playing around with Exercise 16 of ""Learn Python the Hard Way""?"
learnpython,3b8prw,Bone_Club,2,Fri Jun 26 22:33:45 2015 UTC,Exercise 16 yes you're right.
learnpython,3b9e7i,billsil,5,Sat Jun 27 01:29:17 2015 UTC,"set() and set([]) are the same thing.  set and set([]) are not the same thing.  https://docs.python.org/2/library/collections.html#collections.defaultdict   If default_factory is not None, it is called without arguments to provide a default value for the given key, this value is inserted in the dictionary for the key, and returned.   set is a callable that returns a new set.  set([]) is not.  defaultdict(set) is exactly what you are asking for.  I haven't the slightest idea what ""too similar to a list"" means."
learnpython,3b9e7i,Justinsaccount,1 point,Sat Jun 27 01:42:32 2015 UTC,Oh...my mistake.  I was getting a bug in my code and I blamed it on that.  Thanks!
learnpython,3b9e7i,Rhomboid,2,Sat Jun 27 03:23:00 2015 UTC,"but defaultdict(set) is too similar to a list for what I want.   What does that mean?  It does exactly what you want.  It creates a new empty set the first time any given dict key is accessed.  >>> from collections import defaultdict >>> items = defaultdict(set) >>> items['colors'].add('red') >>> items['colors'].add('green') >>> items['places'].add('Durham') >>> items defaultdict(<class 'set'>, {'places': {'Durham'}, 'colors': {'green', 'red'}})   Also, your example doesn't make a lot of sense:  for tuple_value in tuple_values:     d[key].add(tuple_value)   There's no need to write a loop for that.  If you have a set, and you want to add all the items from some iterable to the set, use set.update, not a loop:  >>> s = set() >>> tuple_values = (1, 42, 3.14, 'foo') >>> s.update(tuple_values) >>> s {'foo', 1, 42, 3.14}"
learnpython,3b6qf4,dmv1975,6,Fri Jun 26 12:32:52 2015 UTC,"And I want to make a copy of that list   No.  You haven't made a copy of anything.  You've assigned another name to refer to the same list.  Both m and l are names for the same list.  It's not that they are pointing to the same objects, it's that there is only one list.  If you want to make a copy of a list, you can use a slice that names all the elements of the list (i.e. the first and last are empty, which means they take on their defaults of the first element and last element, i.e. a slice of the entire list):  copy = original[:]   However, there's probably a better way to do whatever you're trying to do.  You say:   then do things to the first list   If you're ""doing things"" to the list then surely you inherently know which items have changed.  Why not just keep track of that as you make the changes?  Why make all the changes and then go back and try to figure out what changed?  In other words, explain exactly what this ""do things"" means.  There's probably a better way."
learnpython,3b6qf4,Rhomboid,2,Fri Jun 26 12:46:17 2015 UTC,Agree with /u/Rhomboid here. But if you do want to make a copy (using your example above) it would be:   m = 1[:]
learnpython,3b6qf4,MJMarto,1 point,Fri Jun 26 13:37:51 2015 UTC,"Thanks for your comments. As far as doing things to the objects, I start off not knowing what the values of their attributes are, and I put them through several conditional tests and if they meet those conditions, they get changed in one or more ways. There is a long list of objects. I found that copy.deepcopy() worked for what I wanted to do."
learnpython,3b6qf4,dlindema,3,Fri Jun 26 19:20:24 2015 UTC,"I tried using deep copy from the copy module. There is almost certainly a better way to do this though.     a=[1,2,3] import copy  b=copy.deepcopy(a) b [1, 2, 3] a[0]='r' b [1, 2, 3] a ['r', 2, 3]"
learnpython,3b6qf4,__FilthyFingers__,1 point,Fri Jun 26 12:42:16 2015 UTC,"Thanks, deepcopy is what worked for me."
learnpython,3b90ko,Micotu,2,Fri Jun 26 23:18:49 2015 UTC,"There's nothing better about any IDE's, its all personal preference, it's the whole emacs vs vim, don't put two of them in one room alone or one of them will never come out.  If you want something simple to understand what you're doing, slant has a great list of good text editors.: http://www.slant.co/topics/12/~what-are-the-best-programming-text-editors  If you really want a IDE, then it even has a list for that: http://www.slant.co/topics/366/~what-are-the-best-python-ides"
learnpython,3b90ko,SimonWoodburyForget,2,Sat Jun 27 05:16:24 2015 UTC,PyCharm is overall excellent and has a free version which would be more than enough for a beginner.
learnpython,3b9029,hellothere4556,1 point,Fri Jun 26 23:14:31 2015 UTC,"Use a list comprehension:  def primes_between:   return [x for x in range(start, stop+1) if is_prime(x)]   Just write the is_prime function and you're done."
learnpython,3b9029,unpythonic,1 point,Fri Jun 26 23:34:01 2015 UTC,"Don't forget the arguments - def primes_between(start, stop)   Just write the is_prime function and you're done.   Coincidentally, I was helping someone with this earlier. That post may be helpful"
learnpython,3b9029,liam_jm,1 point,Fri Jun 26 23:41:07 2015 UTC,"You've got a couple of errors in your implementation: you miss perfect squares of prime numbers because range stops before your end point; and you miss many even numbers with a low number of factors because you never check if 2 is a factor:  >>> def is_prime(n):     if n <= 2:         return True      for x in range(3, int(n ** .5), 2):         if n % x == 0:             return False     return True  >>> is_prime(10) True >>> is_prime(25) True"
learnpython,3b9029,unpythonic,1 point,Fri Jun 26 23:53:27 2015 UTC,"Yep, I noticed the end point problem earlier. Not sure how I missed the n%2 check. Thank you!"
learnpython,3b9029,liam_jm,1 point,Sat Jun 27 00:25:31 2015 UTC,"Is it wrong that I want to tell people to use pyprimes for this?  It not only offers good, fast implementations but tree code is well documented, thorough and offers examples of what not to do.  Sadly, I think it was hosted on Google code."
learnpython,3b9029,kurashu89,2,Sat Jun 27 00:10:12 2015 UTC,"I suppose it depends what it's for. If it's for use in a project, pyprimes is the way to go. If it's to learn more about programming/python/algorithms/primes then implementing it is much better"
learnpython,3b9029,liam_jm,1 point,Sat Jun 27 00:23:47 2015 UTC,"True. Iunno, maybe I've seen so many prime number questions over the last few days that I'm beginning to project my frustrations onto people asking the same questions when really, three years, I was asking the same thing and it's totally not fair to do that."
learnpython,3b9029,kurashu89,1 point,Sat Jun 27 00:28:15 2015 UTC,"You can tell a lot of these questions are from people who are just starting out. I guess some resource includes prime number examples near the start and people tend to get stuck there.   I think really the best thing we can do is to show people how to debug their issues to see what the code is doing, and show people how to understand error messages python is giving them."
learnpython,3b9029,liam_jm,1 point,Sat Jun 27 00:30:35 2015 UTC,"I'd imagine it's project Euler. Which is really oriented to mathematics rather than programming. It just happened to become a de facto ""Here's what to do after reading your first programming book"""
learnpython,3b9029,kurashu89,1 point,Sat Jun 27 00:33:31 2015 UTC,"Oh yes, there are quite a lot of prime number oriented problems in Project Euler. I can't remember, do any of the later questions require more efficient implementations than trial division (e.g. sieving or probabilistic methods)?"
learnpython,3b9029,liam_jm,1 point,Sat Jun 27 00:38:07 2015 UTC,"I never made it pass about 15, I think. Just because I was more interested in building stuff, so I'm unsure."
learnpython,3b9029,kurashu89,1 point,Sat Jun 27 00:48:28 2015 UTC,"To be slightly more explicit, a prime number has the following two characteristics:   If it's greater than 2, it is not even. (Any even number is divisible by 2.) Any multiplicative factor above its square root will have a matching factor below its square roots. (So if you're counting upward from 3 and haven't found a factor when you reach the square root of the number, you won't find one between the square root and the number.)   These are easy to check for; you already know how to check to see if a number is a factor of your target number, and you get a square root by using n**0.5."
learnpython,3b9029,joyeusenoelle,1 point,Sat Jun 27 01:41:37 2015 UTC,"Do a sieve.  https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes  Start with 2. Cross out all the multiples of 2, until n. Then move on to 3, do the same, cross out all its multiples. Move on to 4 (but you'd skip it, since it has been crossed out already -- i.e. we now know it's not prime), then to 5, until just square root of n. This is much faster than brute force checking if it's a number is divisible by smaller numbers.  Typical implementation in C++ would be an array of booleans; in Python you'd be working with a list of ones/zeroes."
learnpython,3b9029,silverpendulum,1 point,Sat Jun 27 03:24:42 2015 UTC,"Sieve of Eratosthenes:       In mathematics, the sieve of Eratosthenes (Greek: κόσκινον Ἐρατοσθένους), one of a number of prime number sieves, is a simple, ancient algorithm for finding all prime numbers up to any given limit. It does so by iteratively marking as composite (i.e., not prime) the multiples of each prime, starting with the multiples of 2.   The multiples of a given prime are generated as a sequence of numbers starting from that prime, with constant difference between them that is equal to that prime.  This is the sieve's key distinction from using trial division to sequentially test each candidate number for divisibility by each prime.   The sieve of Eratosthenes is one of the most efficient ways to find all of the smaller primes. It is named after Eratosthenes of Cyrene, a Greek mathematician; although none of his works has survived, the sieve was described and attributed to Eratosthenes in the Introduction to Arithmetic by Nicomachus.     Image from article i     Relevant: Lucky number | Sieve of Atkin | Generating primes | Sieve of Sundaram   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3b8znj,UsernameDoesntFitHel,3,Fri Jun 26 23:10:52 2015 UTC,"When you say o1.var, first Python looks for an attribute called var on the instance o1. If it finds it, great; if not, it then proceeds to look for an attribute called var on o1's class, obj. (If that didn't exist, Python would continue to look at each parent class, and eventually raise an AttributeError when there are no more classes to look at.)  So, at first, accessing o1.var fell back to obj.var. But when you assigned to o1.var, you created an instance attribute. From that point onward, o1.var and obj.var were different attributes.  Does that make sense?"
learnpython,3b8znj,kalgynirae,1 point,Fri Jun 26 23:18:03 2015 UTC,Yes it does. I didn't know Python followed that behavior. Is this listed in the docs? Anyway thanks.
learnpython,3b8znj,kalgynirae,2,Sat Jun 27 00:35:02 2015 UTC,"For a quick explanation, go to Class definitions and scroll down to the paragraph that starts with ""Programmer’s note:"".  I suspect there's a more formal explanation somewhere else, but I can't find it."
learnpython,3b6lmx,neptunDK,2,Fri Jun 26 11:42:21 2015 UTC,Your arguments for assertFalse and assertTrue are incorrect. You are passing one too many selfs.
learnpython,3b6lmx,Ultimate_Timmeh,1 point,Fri Jun 26 12:08:58 2015 UTC,"Thank you so much! :) This seems to be much better:  class TestStringMethods(unittest.TestCase):      def test_check_sets(self):         self.assertFalse(check_sets(old, new))         self.assertTrue(check_sets(old, old))  if __name__ == '__main__':     unittest.main()"
learnpython,3b84lf,Sayblahblah,6,Fri Jun 26 19:04:40 2015 UTC,"Do it on paper first. Then write algorithm in your natural language. Then rewrite it on python.  Right now your program is completely broken, logically and technically"
learnpython,3b84lf,04h,1 point,Fri Jun 26 19:27:55 2015 UTC,thanks
learnpython,3b84lf,liam_jm,1 point,Fri Jun 26 19:34:14 2015 UTC,"You're dividing by 0. Your only division is line 26, so it must be that line. That means that numofgrades is 0 when you hit this line. You need to handle the case where the user types ""000"" before inputting any grades (maybe print an error message). The average grade is undefined if there are no grades"
learnpython,3b84lf,marksist,1 point,Fri Jun 26 19:25:22 2015 UTC,"A couple of things:   next time you probably do want to remove your name and other personal data from the file if you post it to github.  If you piss someone off on reddit, this makes it too easy for them to dox you and fuck with you IRL.  you are going to try and figure out WTF is happening that your total is not working right.  You are using an equality operator there rather than an assignment operator.  (I spent several hours on a simple function with this the other day, I raged when I found it.  )  basically total == total / numofgrade should be total = total / numofgrade since you want total to become the average.  As it is now, the line will either be True or False.   you need to pass the newest grade to your function.  It will never be able to get the value, because you do not pass it to it."
learnpython,3b7km3,aremedis,2,Fri Jun 26 16:41:26 2015 UTC,"Your error is this:   NewImg = Image.new(""RGB"", NewSize, preMult.tostring())   The third argument is supposed to be a tuple: http://effbot.org/imagingbook/image.htm (look at new for more information)   Edit I think you want to create a blank image with new and then write your pixels into its array (just array slice assignment), or figure out how to use Image.frombuffer()"
learnpython,3b7km3,elbiot,2,Fri Jun 26 17:13:33 2015 UTC,"I think I found my problem.  I was using the wrong mode in Image.new      NewImg = Image.new(""RGBA"", NewSize, (0,0,0,0))   this works for my needs, and I'm not even needing numpy now...  Thanks for the advice."
learnpython,3b7km3,elbiot,1 point,Fri Jun 26 18:24:58 2015 UTC,"preMult = numpy.fromstring(OldImg.tostring(),dtype=numpy.uint8)   Ech!  Can't you do img_arr = np.asarray(img) or something like that?  img.getdata()?"
learnpython,3b7km3,gengisteve,1 point,Fri Jun 26 17:06:22 2015 UTC,Could you post the entire traceback?  What line of code is it choiking on?
learnpython,3b7km3,novel_yet_trivial,1 point,Fri Jun 26 17:10:15 2015 UTC,"Here is the traceback I'm getting:  Traceback (most recent call last):   File ""CreateToken.py"", line 27, in <module>     TokenResize(""test.png"")   File ""CreateToken.py"", line 17, in TokenResize     NewImg = Image.new(""RGB"", NewSize, preMult.tostring())   File ""C:\Python34\lib\site-packages\PIL\Image.py"", line 2026, in new     return Image()._new(core.fill(mode, size, color)) SystemError: new style getargs format but argument is not a tuple"
learnpython,3b7cmr,ElementaryMyDearWut,3,Fri Jun 26 15:42:48 2015 UTC,userentry is not public in LoginPage. It is local to __init__.  You'll also need to define get() for userentry.
learnpython,3b7cmr,Sir_not_sir,2,Fri Jun 26 15:53:41 2015 UTC,"""userentry"" is created and then thrown out after the __init__ method completes. To keep it around you need to use ""self.userentry"". Then to use it you need to get the namespace right, something like ""self.frames[LoginPage].userentry.get()""."
learnpython,3b7cmr,novel_yet_trivial,1 point,Fri Jun 26 16:02:11 2015 UTC,"Thank you SO much for your help. I've managed to get it to work, and as such think I'm understanding why I need to use the ""self."" part."
learnpython,3b7cmr,kalgynirae,1 point,Fri Jun 26 17:08:35 2015 UTC,Here's a good explanation of why you need to use self.: https://www.reddit.com/r/learnpython/comments/27ft5y/init_self_in_classes_why/ci0ev31
learnpython,3b8obr,MJMarto,1 point,Fri Jun 26 21:34:38 2015 UTC,In your equals method you do   if sorted(self.nums) in sorted(vector.getNums()):   that is equivalent to checking if any element in vector.getNums() is equal to the whole self.nums list.  Try changing the in to == and it should work.
learnpython,3b8obr,ConceptualCreation,1 point,Fri Jun 26 22:00:29 2015 UTC,That worked! Thank you very much.
learnpython,3b8obr,ConceptualCreation,1 point,Fri Jun 26 22:09:24 2015 UTC,"Sweet, you're welcome!"
learnpython,3b7tu3,kowal-tbg,1 point,Fri Jun 26 17:47:54 2015 UTC,Your code works perfectly for me (although you should escape that period on line 2):  >>> print r.match('adadasdturbobit.netfghgf') None >>> print r.match('http://adadasdturbobit.netfghgf') None >>> print r.match('turbobit.netfghgf') None >>> print r.match('http://turbobit.netfghgf') <_sre.SRE_Match object at 0x7fdce8ae9bb0>
learnpython,3b7tu3,novel_yet_trivial,1 point,Fri Jun 26 17:58:30 2015 UTC,"It looks like only the .net domains work, every other are affected by this problem. Maybe something is wrong with my | (OR) logic ?"
learnpython,3b7tu3,novel_yet_trivial,2,Fri Jun 26 18:08:32 2015 UTC,"AH. You need more parenthesis, because re is taking the first 2 lines as an option, and then every line after that as an option. Try this:  r = re.compile(     r'^https?://(?:www\.)?('     r'((?:turbobit|catshare|rapidu|rapidgator|uploaded)\.net)|'     r'((?:fileshark)\.pl)|'     r'((?:lunaticfiles|oboom|bitshare|freakshare)\.com)|'     r'((?:fileparadox|netload|filemonkey)\.in)|'     r'((?:uploadable)\.ch)'     r')', re.IGNORECASE)"
learnpython,3b7tu3,novel_yet_trivial,1 point,Fri Jun 26 18:19:49 2015 UTC,"Thank you! I knew it was something trivial, but I couldn't figure it out. One more thing, could you explain that escaping, because I don't see the problem here?"
learnpython,3b7tu3,SleepyHarry,2,Fri Jun 26 18:30:52 2015 UTC,"A period is a regex special character that matches any single character. In your OP, line 2, you have www., which would match ""www."" or ""wwww"" or ""www2"" etc. If you escape the period, like this: www\. then regex matches a literal period, so only ""www."" matches."
learnpython,3b7lbi,Smartare,1 point,Fri Jun 26 16:46:22 2015 UTC,"That means you don't have a compiler installed. Some python packages need to be compiled before you can use them. Google the error ""error: Unable to find vcvarsall.bat"" and you will find tons of confusing information on installing a compiler.   It may work to install a pre-compiled version of lxml instead: http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml"
learnpython,3b7lbi,novel_yet_trivial,1 point,Fri Jun 26 17:07:50 2015 UTC,You mean use lxml instead of docx?
learnpython,3b7lbi,novel_yet_trivial,2,Fri Jun 26 18:24:39 2015 UTC,"No, docx needs lxml to work. The docx install fails when it tries to install lxml. If you install lxml manually then the docx install should work.  Another option is to install a python bundle such as Python(X,Y) or Anaconda. These come with lxml (and a huge amount of other common modules, potentially saving your this trouble in the future)."
learnpython,3b8fid,deucex403,3,Fri Jun 26 20:26:17 2015 UTC,"I havent used selenium enough to say for sure that it 'cant' handle the alert dialog, but I had problems with an automation task in the past which required me to automate accepting 'untrusted certificate' warning dialogs, which Selenium was unable to process due to limitations of the driver.  What I ended up doing was adding an AutoHotkey script to my testing environment which ran permanently during test runs, and watched for the appropriate dialog box to be found running, and would automate the keyboard activity to accept that dialog outside of the selenium system.  If you dont find any other solution, perhaps that will be something you can use."
learnpython,3b8fid,jibbly_jibbly,0,Sat Jun 27 00:42:20 2015 UTC,"If it is just once on start, why not just type it in manually?"
learnpython,3b8fid,elbiot,1 point,Fri Jun 26 21:25:42 2015 UTC,I would like to automate it.
learnpython,3b5tg6,Leavism,2,Fri Jun 26 05:15:58 2015 UTC,"Here's my code so far:   def minPayment(balance, annualInterestRate, monthlyPaymentRate):    Submitting this gives the error:   *** ERROR: Received no output! Be sure that your code is not defining a function. Just write code in this box, without a function wrapper,"
learnpython,3b5tg6,Vaphell,2,Fri Jun 26 05:35:43 2015 UTC,"minPayment = ''   totalPaid = 0 month = 1 while month <= 12:     minPayment = monthlyPaymentRate * balance     balance -=  minPayment      balance += (annualInterestRate/12.0)*balance      print 'Month:' + month     print 'Minimum monthly payment:'+ round(minPayment,2)      print 'Remaining balance:' + round(balance,2)      totalPaid += minPayment     month += 1 print 'Total paid:'+ round(totalPaid,2) print 'Remaining balance:' + round(balance,2)    Gave out:  TypeError: cannot concatenate 'str' and 'int' objects  *** ERROR: Expected to find a number in the line TypeError: cannot concatenate 'str' and 'int' objects. ***"
learnpython,3b5tg6,Vaphell,6,Fri Jun 26 05:50:42 2015 UTC,"print 'Month:' + month   str+int   print 'Minimum monthly payment:'+ round(minPayment,2) print 'Remaining balance:' + round(balance,2) print 'Total paid:'+ round(totalPaid,2) print 'Remaining balance:' + round(balance,2)     str+float  you cannot add up strings and numbers because what is that supposed to do exactly?  look into str.format() which allows you to plug data into format string. Building strings via concatenation is lame anyway."
learnpython,3b5tg6,Marwood,3,Fri Jun 26 06:30:02 2015 UTC,Heyo! Thanks /u/Vaphell for your help!
learnpython,3b5tg6,galaxies,2,Fri Jun 26 07:08:19 2015 UTC,"You can also print multiple values using commas like this:  print ""Total paid:"", round(total, 2) print ""Remaining balance:"", round(balance, 2)   Spaces get added between the values and you can mix types. It's how I like to do it.  I'm doing the same course. It's great, it has algorithms and computational thinking and everything. It's ""Computer Science"" rather than just ""Coding""."
learnpython,3b5tg6,yungliteskin,1 point,Fri Jun 26 17:06:29 2015 UTC,Yeah figured it out. I replaced all my pluses with commas :) then it worked
learnpython,3b670q,Chow_Mein_Kampf,5,Fri Jun 26 08:14:32 2015 UTC,"Did you try doing this in python?:  # python3 import pickle # python2 import cPickle as pickle   Yeah it should be included i believe.  Edit: cPickle is a faster version of pickle in python2 because its in C, in python3 pickle is cPickle. Importing it as pickle means you can make your code forwards compatible and its also what i see most of people doing."
learnpython,3b670q,SimonWoodburyForget,2,Fri Jun 26 08:49:56 2015 UTC,"Thank you very much for the help, I appreciate it."
learnpython,3b4yzx,mrmcbastard,10,Fri Jun 26 00:35:49 2015 UTC,"What are you trying to do? Not ""I want to make a set of dictionaries"", but why are you wanting to do this?"
learnpython,3b4yzx,SleepyHarry,7,Fri Jun 26 00:39:10 2015 UTC,"I ran into a situation where I had a possibly non-unique list of dicts that I wanted to ensure contained no duplicates. Each dict had an identifier, so I created empty id_list and unique_dict_list and iterated over the original list, checking to see if each dict's id was in the id_list. If not, I added it to a unique_dict_list and its id to the id_list.  This seems like a very brute force way of going about this. I was hoping someone and a better, more elegant solution."
learnpython,3b4yzx,rspeer,5,Fri Jun 26 02:35:00 2015 UTC,"Your way is fine and solves your problem appropriately. The only thing is that you should use a set for checking whether your ID was already seen, not a list. Checking if something is in a set is more efficient.  I would do the same thing, even knowing that crazy one-liners to do it are possible, because using a loop like this will be more readable and maintainable than the crazy one-liner."
learnpython,3b4yzx,joyeusenoelle,3,Fri Jun 26 03:53:43 2015 UTC,"This seems like it ought to work:   dict_one = {""id"": ""1""} dict_two = {""id"": ""1""} dict_three = {""id"": ""2""} dicts = [dict_one, dict_two, dict_three] udicts = list({d[""id""]:d for d in dicts}.values())   This gives me [{'id':'2'},{'id':'1'}], and it appears to work for any number of actual key-value pairs in the initial dicts (although it seems to pick at random which dict to choose if there's a duplicate ID)."
learnpython,3b4yzx,SimonWoodburyForget,1 point,Fri Jun 26 03:19:44 2015 UTC,"Can't you just do this?:  dict_1 = {1:'a', 3:'c'} dict_2 = {2:'b', 4:'d'} dict_keys = {1:dict_1, 2:dict_2, 3:dict_1, 4:dict_2}  def add_unique_key(dict_, key, value): ''' Simple logic to keep track of multiple dict's keys  and make sure they always have unique values'''      if key not in dict_keys:         # key doesn't exist yet, lets create it and make a reference.         dict_[key] = value         dict_keys[key] = dict_      elif key in dict_keys:         # key exists, lets see if its in our current dict         if dict_keys[key] == dict_:             dict_[key] = value   add_unique_key(dict_1, 1, 'g') print(dict_1, dict_2) add_unique_key(dict_2, 1, 'f') print(dict_1, dict_2) add_unique_key(dict_2, 5, 'g') print(dict_1, dict_2)"
learnpython,3b4yzx,callmelucky,7,Fri Jun 26 07:10:50 2015 UTC,"Side note/question: What's the name of this phenomenon? When someone asks how to do something, but the reason they are trying to do it is flawed in the first place, and they would get a better response by explaining the underlying problem?"
learnpython,3b4yzx,hharison,11,Fri Jun 26 01:45:00 2015 UTC,XY problem
learnpython,3b4yzx,callmelucky,1 point,Fri Jun 26 01:46:24 2015 UTC,"That's the one, thanks :)"
learnpython,3b4yzx,hharison,4,Fri Jun 26 01:47:09 2015 UTC,"What output are you expecting here? I recently wanted to get all the different fields in a list of dicts, so I did  from itertools import chain  all_fields = set(chain.from_iterable(items))   where items is a list of dicts.  This would give you {'id'} to your input. Or do you expect {'1', '2'}? Or something else? Were you hoping for {{'id': '1'}, {'id': '2'}}?"
learnpython,3b4yzx,elbiot,3,Fri Jun 26 01:48:05 2015 UTC,"Dicts aren't hashale, but their frozen couterpart, namedtuple, can be.  You can make a set of named tuples."
learnpython,3b4yzx,Rhomboid,6,Fri Jun 26 02:21:55 2015 UTC,"As SleepyHarry says, we need to know what you're actually trying to do before we can give a meaningful answer.  From your example it looks like you have some key/value pairs and you want to eliminate duplicates.  You can do that by converting each dictionary to a series of k/v tuples:  >>> from itertools import chain >>> dicts = [{'id': 1}, {'id': 2}, {'id': 1}] >>> set(chain.from_iterable(d.items() for d in dicts)) {('id', 1), ('id', 2)}   The last line could also be written as:  >>> set(chain.from_iterable(map(dict.items, dicts))) {('id', 1), ('id', 2)}   If you want the result as a list of dicts, you can convert back:  >>> [{k: v} for k, v in set(chain.from_iterable(map(dict.items, dicts)))] [{'id': 2}, {'id': 1}]   Or:  >>> [dict((pair,)) for pair in set(chain.from_iterable(map(dict.items, dicts)))] [{'id': 2}, {'id': 1}]   Note that a tuple is only hashable if its contents are hashable, so this won't work if any of the values aren't hashable.  This also assumes that you want the dictionaries to be flattened, i.e. every k/v pair in each dict is compared for uniqueness against every other pair, and the end result will be a big pile of pairs.  If your input dictionaries contained multiple pairs, that information will be lost:  >>> dicts = [{'id': 1}, {'id': 2}, {'id': 1, 'other': 42}] >>> set(chain.from_iterable(map(dict.items, dicts))) {('id', 1), ('id', 2), ('other', 42)}   Maybe that's what you want, maybe not.  That's what I mean by needing to know what you're actually trying to do."
learnpython,3b4yzx,rspeer,-3,Fri Jun 26 01:55:13 2015 UTC,"This chain.from_iterable(map( stuff looks like you're cramming things into a one-liner for its own sake. This is /r/learnpython, not code golf; you should write a for loop if it's a job for a for loop."
learnpython,3b4yzx,Rhomboid,4,Fri Jun 26 03:50:44 2015 UTC,"I gave a version that uses a generator expression.  And you can't use an actual for loop with chain.from_iterable(), not unless you write a whole separate generator function which would be far uglier."
learnpython,3b4yzx,rspeer,0,Fri Jun 26 03:58:12 2015 UTC,"Is your goal to use chain.from_iterable() for something, or is your goal to teach somebody how to solve their problem?"
learnpython,3b4yzx,Rhomboid,5,Fri Jun 26 03:59:46 2015 UTC,"My goal is to teach someone the best way to solve their problem, and I believe chain.from_iterable() is the best way in this case."
learnpython,3b4yzx,joyeusenoelle,1 point,Fri Jun 26 04:01:00 2015 UTC,"Yes, this is /r/learnpython, and people who are learning Python aren't going to learn anything new if you keep insisting on using the methods they already know.   Between ""crazy one-liners"" and ""code golf"" - both used inappropriately; I've certainly been guilty of using overly-complicated one-line expressions in the past, but these aren't them - it sounds like you just really don't like that Python allows generator expressions and comprehensions."
learnpython,3b4yzx,rhgrant10,2,Fri Jun 26 11:33:39 2015 UTC,"As others have noted, this may not work for your intentions, but this will eliminate duplicate dicts:  set(tuple(d.values()) for d in dicts)"
learnpython,3b4yzx,rspeer,2,Fri Jun 26 02:11:02 2015 UTC,That will eliminate a lot of things that aren't duplicate dicts. You're not comparing the keys.
learnpython,3b4yzx,rhgrant10,1 point,Fri Jun 26 03:40:43 2015 UTC,"I believe this compares dictionaries as tuples of key value pairs, which means that elimination would only occur when two dictionaries had identical contents.  As I'm writing this, however, I'm realizing there's no guarantee that two identical dictionaries will yield their key value pairs in the same order, so sorting prior to comparing would be necessary.  Come to think of it, comparing frozensets rather than a sorted tuple of tuples would work as well."
learnpython,3b4yzx,kaliumex,1 point,Sat Jun 27 00:19:18 2015 UTC,"The reason why dict_set = set([dict_one, dict_two, dict_three]) in your code does not work is because sets cannot have mutables as their items (or items which can change during their lifetime, like dictionaries).  Using dict.items() returns a set-like object [1] of (key, value) tuples (which are immutable).  So you could try something like this: dict_set = d1.items() | d2.items() | d3.items()  Where the | operator is a union operator combining two set-like [2] objects (akin to set.union).  Using this in the example that you've provided:  >>> dict_one = {""id"": ""1""} >>> dict_two = {""id"": ""1""} >>> dict_three = {""id"": ""2""} >>> dict_set = dict_one.items() | dict_two.items() | dict_three.items() >>> dict_set {('id', '1'), ('id', '2')}   Hope this helps."
learnpython,3b4yzx,personjones,1 point,Fri Jun 26 16:18:15 2015 UTC,"You can't store mutable objects (like dictionaries) in sets, because mutables aren't hashable, and sets rely on hashing for their functionality. A way of getting round this depends very much on what you needed a set of dictionaries for in the first place."
learnpython,3b4yzx,joyeusenoelle,2,Fri Jun 26 01:48:00 2015 UTC,Because I want a unique set of dicts. I'm not sure what sets are used for besides ensuring non duplication.
learnpython,3b57i6,PalermoJohn,3,Fri Jun 26 01:50:59 2015 UTC,"Python 2, I suppose?  On Python 3, str() of an _ElementUnicodeResult does what you expected it to do. But on Python 2, str() means a string of bytes instead of characters, which you can't make out of Unicode without encoding it.  So on Python 2, calling unicode() on the _ElementUnicodeResult appears to return an ordinary Unicode string that you could pickle."
learnpython,3b57i6,rspeer,1 point,Fri Jun 26 04:39:58 2015 UTC,"Thanks, that did the trick."
learnpython,3b57i6,elbiot,1 point,Fri Jun 26 05:00:34 2015 UTC,Is it that easy?  Unicode always bites me in the ass in python2.  Don't you have to encode it or something?
learnpython,3b57i6,rspeer,2,Fri Jun 26 05:14:05 2015 UTC,"On Py2, you have to encode it if you want to print it, or write it to a file you opened with open(), or things like that. But Unicode strings are perfectly fine objects to pass around.  And this data really is Unicode, so you definitely should keep it that way until you need to output it, so that it's represented correctly. Pickle is fine with Unicode, so it doesn't need to be encoded yet."
learnpython,3b61ck,questdark,1 point,Fri Jun 26 06:54:39 2015 UTC,Did you install all dependencies from the virtual environment?  Post what you are trying to do and copy paste the report in paste bin or here.
learnpython,3b61ck,SimonWoodburyForget,1 point,Fri Jun 26 07:26:11 2015 UTC,"What operating system are you using?  If this is Windows, you should not be doing anything with libxml2.  You should download the binary lxml wheel package from here and install it in your virtualenv using pip.  And if it is not Windows, you should install the libxml2-dev package using your system's package manager and then let lxml build from source using pip, assuming you have a C toolchain."
learnpython,3b61ck,Rhomboid,1 point,Fri Jun 26 07:44:44 2015 UTC,"I'm using Ubuntu, so I installed a virtualenv, and tried pip install scrapy, but it led me to multiple dependency issues, lxml being the major one from my research. I then pip install lxml, but it gave these errors messages:  ERROR: /bin/sh: 1: xslt-config: not found      ** make sure the development packages of libxml2 and libxslt are installed **"
learnpython,3b61ck,Rhomboid,1 point,Sat Jun 27 07:07:15 2015 UTC,"Well, do you have the libxml2-dev and libxslt1-dev packages installed or not?  You could skip all this hassle by just installing the lxml package (python-lxml) or (python3-lxml) system-wide through the distro's package manager."
learnpython,3b5d29,roosebayne,2,Fri Jun 26 02:39:23 2015 UTC,"I think different platforms might handle stdout differently so your mileage may vary, but a couple of things you can use here:   Including a comma at the end of a print statement will cause the next thing to print without a new line time.sleep(n) will add a pause of n seconds long   Combine those things into a while or for loop and you're on your way."
learnpython,3b5d29,OCHawkeye14,1 point,Fri Jun 26 04:29:43 2015 UTC,"In Python 3 you can use the following instead of the comma trick:  print('text', end='')"
learnpython,3b5d29,FlockOnFire,2,Fri Jun 26 15:40:25 2015 UTC,"Here's my script for showing a loading bar type thing. Test it out, lemme know what you think. Also if you want to know more in depth of what it's doing lemme know too. Hope this helps!  import time import sys  def backspace(howMany):     """"""     '\b' moves the cursor one character back.     ' '  erases the characters     '\b' then move back again, having a clean slate ahead     """"""     sys.stdout.write('\b'*howMany)     sys.stdout.write(' ' *howMany)     sys.stdout.write('\b'*howMany)     sys.stdout.flush()  def write(str):     """"""     Write out string and then flush it so it will actually be printed.     After and before a sleep call     """"""     sys.stdout.write(str)     sys.stdout.flush()  def loading(iterations, loadBarLength, loadChar, wait):     """"""     iterations    - The number of times the full loading bar will display     loadBarLength - The count of characters that makes up a full loading bar     loadChar      - The character to use as the loading symbol     wait          - The amount of time to wait in seconds before printing the next loadChar     """"""     for i in range(iterations):         for _ in range(loadBarLength):             write(loadChar)             time.sleep(wait)         backspace(loadBarLength + 1)         time.sleep(wait)  # Usage loading(1, 1, ""*"", 0.5)"
learnpython,3b5d29,ConceptualCreation,2,Fri Jun 26 04:35:42 2015 UTC,count = loadBarLength     while count > 0:         write(loadChar)         time.sleep(wait)         count -= 1   ->      for _ in range(loadBarLength):         write(loadChar)         time.sleep(wait)
learnpython,3b5d29,Justinsaccount,1 point,Fri Jun 26 18:30:48 2015 UTC,"Ah, much more concise!"
learnpython,3b4pqg,drLagrangian,3,Thu Jun 25 23:14:34 2015 UTC,"So the problem is you're passing in Parent, not Child  class Child(Parent):     def __init__(self, property1, property2, property3):         super(Child, self).__init__(property1, property2)   OR if you're using python3, you can omit the args  class Child(Parent):     def __init__(self, property1, property2, property3):         super().__init__(property1, property2)"
learnpython,3b4pqg,echocage,2,Thu Jun 25 23:36:54 2015 UTC,"You're attempting to access the Parent's super by the look of it. Parent's super is indeed object, which is why you're getting the error you are.  Try changing Parent to Child in line 8."
learnpython,3b4pqg,SleepyHarry,1 point,Thu Jun 25 23:34:34 2015 UTC,"that works, but then it is stupid.  At that point, I am the child, (don't laugh), and I want to access the function of my parent.  super, or whatever method I should use, should work to find me the class that I need (aka find my parent, or find some class that I name), so i can use it.    it shouldn't need the child as an argument, it should start the search from there anyway."
learnpython,3b4pqg,SleepyHarry,2,Thu Jun 25 23:38:31 2015 UTC,"Well, Python 3 allows you do to super() on it's own, which addresses a couple of your points.  But think about it, you want a method of Child to call it's superclass, right? So you do a call to super to get this. But you used Parent. So if you know the superclass of Child is Parent, why bother with super at all? You may as well just do Parent.__init__(self, property1, property2).  What super does it afford you some flexibility by allowing you to not hardcode the superclass in. The only thing you'd have to keep track of is the class it's called from, which is as simple as making sure if you rename the class (Child in this case), you rename it everywhere."
learnpython,3b4pqg,joyeusenoelle,1 point,Thu Jun 25 23:50:15 2015 UTC,"It's worth noting that you can also call super(<type>,<instance>) from outside the class definition.   >>> class mInt(int): ...     def __init__(self, val): ...             self.value = val ... >>> m = mInt(7) >>> m 7 >>> super(mInt,m).__add__(3) 10"
learnpython,3b4pqg,kurashu89,1 point,Fri Jun 26 01:36:40 2015 UTC,It seems like you don't quite understand Python's inheritance rules. I highly recommend watching Super Considered Super from Pycon 2015.
learnpython,3b4pl5,chibirachy,6,Thu Jun 25 23:13:21 2015 UTC,Automate the Boring Stuff is excellent for moving towards solving basic real-world problems. The first section is a starting-from-scratch tutorial you can refer to as well.  Python Cookbook for when you want to ramp up to some next level shit.
learnpython,3b4pl5,callmelucky,1 point,Fri Jun 26 00:24:01 2015 UTC,"Automate was one of the ones I was looking at since I enjoy project-based stuff. I've not heard of Python Cookbook though, but I'll look into it. Thanks!"
learnpython,3b4pl5,McTooty,1 point,Fri Jun 26 00:33:16 2015 UTC,Would cook book be good following learn python the hard way? I'Ve nearly finished it and am unclear where to go from there. I was going to go to automate the boring stuff or diving in to python.
learnpython,3b4pl5,callmelucky,2,Fri Jun 26 02:22:05 2015 UTC,"It depends I guess. Automate is oriented around taking basic Python knowledge and applying it to solve common needs like sorting and manipulating files and folders, web scraping/posting/bots, working with spreadsheets/CSV files, task scheduling, etc etc. This is base-level stuff, if you haven't done much of it then definitely go straight to Automate.  If you are fully confident you can do all that type of stuff in a reasonably tidy and efficient way, and you feel the need to level-up to more advanced operations and syntax, Cookbook is the way to go. Cookbook is a great resource anyway, a lot of it is quite advanced, but I think most people with the basics down would gain a few cool ideas from at least the first couple of sections."
learnpython,3b4pl5,McTooty,2,Fri Jun 26 02:51:02 2015 UTC,Thanks for the reply. I'll get in to automate when I finish LPTHW. It seems orientated more towards I want to do with python anyway. :)
learnpython,3b4pl5,callmelucky,2,Fri Jun 26 09:10:08 2015 UTC,"No worries. Btw, I restrained myself before, but I'll just mention that my (and many others') opinion of LPTHW is very very low. I truly believe it is the worst Python tutorial available by far. If you are finding it annoying and confusing, it is not necessarily (as Zed implies) because you aren't cut out for programming, it's because he pulled that tutorial out of his lazy, arrogant arse with zero planning or effort. I believe it gained its popularity pretty much on the strength of the title, which makes people feel like they are badasses for taking it on. The fact is that LPTHW is literally the hard way to learn Python. Why on earth would anyone choose the hard way to learn something?  My advice is, if you have even the slightest inclination to ditch LPTHW, do it. The stuff you have already learned will stay with you, and you won't miss out on any qualification. There are literally dozens and dozens of free resources which are way better than LPTHW ('Automate' being but one of them), don't feel obliged to lock yourself into a sub-par resource just because you started it.  You might think this is just one individual for whom the style of LPTHW didn't really work, but if you search for posts about recommended resources on this sub you'll find that many other people share my view; that LPTHW is the only frequently recommended resource which is objectively poor quality.  That aside, if it's working for you, keep at it. It certainly won't make you a bad programmer. There is plenty of useful stuff in there, it's just presented in a pretty chaotic and obtuse way."
learnpython,3b4pl5,McTooty,2,Fri Jun 26 13:28:28 2015 UTC,"Thanks again. I have picked up that quite a few people don't like LPTHW and have an even lesser opinion on Zed Shaw.   Fortunately/unfortunately the way his book teaches plays right in to the way I learn best. The things he does explain I pick up, like anything out of any other text book (eventually) but it's the things he doesn't explain that I have to find myself that really let it sink in for me. It's no doubt a slower way of learning but when I finally feel like something clicks, I usually don't have to look it up again.   I do see what you're saying though, it IS a poorly written tutorial, it just plays in to me researching things myself that ends up helping me in the end."
learnpython,3b4pl5,reckscene,1 point,Fri Jun 26 15:27:07 2015 UTC,cookbook is more of giving examples which you learn from. best is to understand the basics of python well before moving on to it
learnpython,3b4pl5,galaxies,1 point,Fri Jun 26 02:48:47 2015 UTC,I am also trying to learn python during summer break and am currently reading Learning Python The book is a little thick on information but I tend to skip around a bit. It has been a great learning resource for me personally but I don't really have anything to compare it to.
learnpython,3b4pl5,chiproller,1 point,Thu Jun 25 23:45:46 2015 UTC,"Thanks. I did see that one on Amazon. With the book I have, I follow through on the ideas presented in the text, and it has simple programmer puzzles at the end of each chapter to solve. Some are super easy, and others have caused me to think a bit before doing them, but they've been fun."
learnpython,3b4pl5,mpbikeman,1 point,Fri Jun 26 00:08:17 2015 UTC,"This is the first book that I purchased as well!  I wouldn't recommend it to a beginner as a first, or second book though, as it is indeed a more comprehensive treatise of Python and more of a reference guide than a way for a beginner to learn python.  Having said that, it is a very useful book in one's library after learning the basic python programming concepts and I find myself really appreciating the depth and the multiple snippets of code when i want to deepen my understanding of a topic."
learnpython,3b4pl5,p_p_r,1 point,Fri Jun 26 02:30:54 2015 UTC,I used LPTHW although as others have said on this sub it gets a little dicey around ex.40 (chapters divided into exercises).  I powered through but things didn't make sense until I supplemented by reading relevant chapters from TLACS and of course the google answer machine.    Wrote up a summary of my thoughts recently after learning Python.
learnpython,3b4pl5,Smartare,1 point,Fri Jun 26 03:04:22 2015 UTC,Learning Python by Mark Lutz is good but it's a bit verbose and repeating.
learnpython,3b440f,CrayonConstantinople,6,Thu Jun 25 20:25:54 2015 UTC,"Because while you are looping through the list to find a value, you are not looping through the set. The entire point of a set is that you can look up a value without checking every element.   LPTHW has a ""build your own dictionary"" lesson. Sets work on the same principle, if you want to learn how it works."
learnpython,3b440f,novel_yet_trivial,4,Thu Jun 25 20:34:12 2015 UTC,Ah so a set is essentially a dictionary without values?
learnpython,3b440f,novel_yet_trivial,2,Thu Jun 25 20:41:38 2015 UTC,Yep.
learnpython,3b440f,AlternativeHistorian,1 point,Thu Jun 25 20:44:35 2015 UTC,"Never thought about it that way. Thanks a million.. So whenever I am using a list but I know the values will be unique and order doesn't matter, it'll be a set!"
learnpython,3b440f,C0rinthian,3,Thu Jun 25 20:46:41 2015 UTC,"It's important to note that sets also place an additional requirement that its elements must be hashable (a list imposes no conditions on its elements). For example, you can't create a set of lists because the list type isn't hashable.  In most cases you should prefer lists, they have less overhead and impose fewer restrictions.   The primary use-cases for sets are:     efficiently testing for element existence enforcing uniqueness efficiently adding/removing elements without regard for ordering performing set-theoretic operations on groups (union, difference, intersection, etc.)"
learnpython,3b440f,NoLemurs,1 point,Thu Jun 25 21:52:07 2015 UTC,"I believe there are immutable versions of those collections though.  I know I've used frozenset for that purpose.  (Which is a set, but immutable, and thus can be a member of a set, or the key of a dict)"
learnpython,3b4m5l,Northstat,1 point,Thu Jun 25 22:44:54 2015 UTC,"Not familiar with seaborn, but could you do a second bar plot with only a single bar over top the original plot?"
learnpython,3b4m5l,vacuu,1 point,Fri Jun 26 00:16:21 2015 UTC,"My guess is that I need to pass a dictionary of colors as an argument of some type to barplot but your solution surely works. Thank you!  edit: Actually, I couldn't get this to work.  If you only plot the one bar it will cover the entire plot with it."
learnpython,3b4icq,gridlinked,8,Thu Jun 25 22:14:06 2015 UTC,"This isn't a python question, this is a SQL question really.  The problem with your solution is that you read both tables, transfer the serialized data over the network, then load it into memory. This might be semantically correct, but there are tremendous performance implications in doing so. You want the MySQL instance to perform the join for you, then serialize only the needed elements, transfer it over the network then load it into your local memory. This will be much faster in almost all cases, especially as the dataset grows.  engine = sqlalchemy.create_engine('mysql+mysqldb://user:password@localhost/tick_data') sql = sqlalchemy.text('select * from first inner join second on first.time = second.time') resultSet = engine.execute(sql)"
learnpython,3b4icq,Derpscientist,1 point,Fri Jun 26 01:15:07 2015 UTC,Thanks
learnpython,3b5ljv,pnobel,5,Fri Jun 26 03:58:32 2015 UTC,"I don't like the idea of blowing through a bunch of file handles like that without ever closing them and relying on them to be GC'd.  I would write some helper functions instead.  Giving names to things, even if they are short functions, helps readability.  def proc_name(pid):     try:         with open(os.path.join('/proc', pid, 'comm'), 'r') as infile:             return infile.read().rstrip('\n')     except FileNotFoundError:         return None  def pid_list():     return [pid for pid in os.listdir('/proc') if pid.isdigit()]  process_names = [name for name in map(proc_name, pid_list()) if name]"
learnpython,3b5ljv,Rhomboid,1 point,Fri Jun 26 05:04:36 2015 UTC,"Thank you very much. I just finished rewriting that function using your suggestions, however I did encounter one minor annoyance, I know have None, showing up in the list whenever I have pid's exiting between the read of /proc and being opened. How do you suggest removing them? I am currently using:  while None in process_names:     process_names.remove(None)   Also why do you use .rstrip('\n') instead of .strip('\n')? If I'm reading the docs correctly they do the same thing when they are called with an argument."
learnpython,3b5ljv,Rhomboid,2,Fri Jun 26 05:36:36 2015 UTC,"In my version the list comprehension ends with ... if name].  That filters out Nones.   Also why do you use .rstrip('\n') instead of .strip('\n')?   strip('\n') will remove newlines at either the beginning or end of the string.  rstrip('\n') only removes newlines at the end of the string.  The string you're reading should only have a newline at the end, not at the beginning, so rstrip('\n') is more correct.  If it had one at the beginning then that would be part of the actual process name, and you wouldn't want to strip it, although that's a perverse edge case."
learnpython,3b5ljv,Rhomboid,1 point,Fri Jun 26 05:42:59 2015 UTC,"In my version the list comprehension ends with ... if name]. That filters out Nones.   This should still work as if name is not None right, hell, I could write a function  is_var_None() and do if not is_var_None(name)?  And yes I realize the writing a function would be stupid, I'm just making sure I'm understanding it correctly."
learnpython,3b5ljv,ingolemo,2,Fri Jun 26 05:52:48 2015 UTC,"if name filters out anything that coerces to False.  That includes False, None, the empty string, empty containers (empty list, empty set, empty dict, etc.)  In this case however the only possible things that you're going to encounter are non-empty strings (which coerce to True) and None.  You could be explicit, yes, and write name is not None as the condition, and then you'd only be filtering out None, but I find it a little too wordy.  It's a matter of taste I suppose.  (I suppose it's possible for a process to have a blank name, in which case it would be filtered out as well, but maybe that's a good thing.)"
learnpython,3b5ljv,elbiot,3,Fri Jun 26 06:01:18 2015 UTC,This way of making lists is called a list comprehension and one of its limitations is that there's no good way to handle exceptions that occur within one. I think the best way to deal with this issue is to write it out as a full for loop with a try/except.
learnpython,3b4s75,mikebmassey,1 point,Thu Jun 25 23:36:32 2015 UTC,"Can you give us more info about the Project class? Can we see that class? You might be able to print out some variables stored in the class, try using dir and help on the object to get more information about it"
learnpython,3b4s75,echocage,1 point,Thu Jun 25 23:41:01 2015 UTC,In ipython:  dir(projectinstance) help(projectinstance) #q to quit
learnpython,3b4s75,elbiot,1 point,Thu Jun 25 23:50:13 2015 UTC,What are you expecting/hoping the result to look like?
learnpython,3b4s75,zahlman,1 point,Fri Jun 26 00:17:54 2015 UTC,or rather could you post what is the site
learnpython,3b4s75,reckscene,1 point,Fri Jun 26 02:45:38 2015 UTC,"When working on the object (let's call it obj) in the shell, use dir(obj) to see a list of its attributes and methods. You can also use help(obj) to see its docstring."
learnpython,3b5bdd,Ki1103,1 point,Fri Jun 26 02:25:04 2015 UTC,"imo your algo does excessive checking, notice how your factorization and is prime() are very similar in structure, doing very similar things. You could easily factorize without running primality test on divisors.  take 180: /2 = 90 /2 = 45 /3 = 15 /3 = 5 /5 = 1    at no point i had to test whether 2, 3 and 5 are prime. Reducing the number as much as possible before moving to the next divisor is going to eliminate the risk of triggering multiples. No multiples, no sense in testing primality and any number that is able to reduce the number further is prime by default."
learnpython,3b5bdd,Vaphell,1 point,Fri Jun 26 06:13:50 2015 UTC,"def find_factors(n):     if num % 2 == 0:             factors.append(2)         for i in range(3, int(num**0.5) + 1, 2):         if num % i == 0 and isPrime(i) == True:             factors.append(i)     if factors == []:             factors.append(num)     print factors     Ok lets start here. First and foremost, you should not be using ""num"" here for your argument. Your argument name is ""n"" not ""num"".  You created an isPrime() method then rewrote half of it here in this function.  You're isPrime() method is flawed anyhow. To find out if a number is prime, you take the square root of the number rounded up. Here you add one to it?  Then you check if the number is divisible by the numbers from 3...the square root of the number rounded up to the next whole number. Here you have a range that steps by 2.  Here's a method that will calculate whether a number is prime  This doesn't check for invalid input but it'll tell you if a number is prime or not. Try reading this for an update on how to use that function to find prime factorization.  EDIT: Moved my code to a gist because it wasn't formatting properly. And fixed the link cuz it's late and stuff..."
learnpython,3b3mgq,MorrisCasper,1 point,Thu Jun 25 18:17:59 2015 UTC,"Your code works perfectly for me (Linux). This seems to be a known OSX bug in matplotlib. If it's just a warning, you should be able to save the image, just not show() it."
learnpython,3b4erh,Ouiski,2,Thu Jun 25 21:46:38 2015 UTC,"An intermediate step between scraping reddit ""naked"" and using PRAW is perhaps to look at the json versions of pages. for example, this post's json dump can be accessed by appending '.json' to the end of the url, like so:  http://www.reddit.com/r/learnpython/comments/3b4erh/collecting_submission_data_from_reddit/.json  Also, when you say you ""wanna do this as a bit of a learning exercise"" - what are you trying to learn, out of interest?"
learnpython,3b4erh,SleepyHarry,1 point,Thu Jun 25 21:53:02 2015 UTC,"That's the way I am doing it at the minute, essentially just cycling through a list of urls, like it gets the first 25, then changes the url to show the next 25 in json. Though I would like to figure out a better way than that if possible?   I know a lot of people say look at the reddit documentation but the truth is I don't even know where to start looking there?"
learnpython,3b4erh,elbiot,1 point,Thu Jun 25 22:53:29 2015 UTC,"Seems like that's it.  You say 1000, and then you say 25, but in my browser I changed the url to get 200 and only got 25, so that's what you got then.  The polite thing to do (and being impolite might get you shut down) is to sleep between requests, and better yet do exponential backoff (google it), to avoid slamming reddit with requests."
learnpython,3b4erh,elbiot,1 point,Fri Jun 26 02:33:18 2015 UTC,"Sorry I thought I replied earlier to your comment. I have a sleep of 3 seconds in between requests,  which allows for the reddit rules. But I'm trying to collect all submissions for a subreddit, and it's the 1000 limit which is inhibiting me. I'm wondering does anyone have any leads on how to get around it.  I saw one post where someone posted a modified praw to do it but I'd like to be able to do it myself rather than mindless copy and pasting"
learnpython,3b4erh,elbiot,1 point,Fri Jun 26 15:53:09 2015 UTC,"It's not mindless copy and pasting if you know what to copy, what it does, and how to modify it.  Like, I didn't know that you can't press next more than 1000/25 = 40 times.  I wouldn't know how to get around that, and if someone wrote code that does it, look at it and figure out how!"
learnpython,3b4erh,echocage,1 point,Fri Jun 26 15:58:15 2015 UTC,Praw doesn't get around that either though
learnpython,3b4erh,JustTurrble,1 point,Fri Jun 26 17:54:43 2015 UTC,"I saw one post where someone posted a modified praw to do it   I'm just following you here.  Either someone did it and so you can find out how, or no one has done it and you're SOL."
learnpython,3b4erh,elbiot,1 point,Fri Jun 26 18:31:02 2015 UTC,"I wanna do this as a bit of a learning exercise for myself.   I'm curious about what you mean by this because using praw doesn't prevent it from being a learning experience all together, it just handles the low level calls.  It's like if you're trying to move 20 watermelons from one city to another, and you decided not to use wheels on your cart so it's a learning experience. If the goal was to learn how to drag something without wheels, then that's fine but if you were trying to learn about transportation of goods, you just made your job a lot harder"
learnpython,3b3wn5,jakecage,4,Thu Jun 25 19:31:56 2015 UTC,"You have set up the code with the intent that s[end] consistently refers to the ""next"" character in the iteration, and s[start] the ""current"" character.  However, on the last iteration of the loop, when s[start] is the last character of the string, end is no longer a valid index - there is no next character after the last."
learnpython,3b3wn5,zahlman,5,Thu Jun 25 19:46:00 2015 UTC,"The index error can be avoided by not even using indices, except in one small spot. Strings are iterable over their characters directly:  str = 'zawwbbcddaa' curr_str = '' long_str = ''  for char in str:     if not curr_str or char >= curr_str[-1]:         curr_str += char         if len(curr_str) > len(long_str):             long_str = curr_str     else:         curr_str = ''  print(long_str)   curr_str[-1] returns the last element, so it can be used for testing. We first check if not curr_str, because a empty string evaluates to False, which shortcuts the process and avoids checking for an index at all."
learnpython,3b3wn5,JustTurrble,2,Thu Jun 25 19:58:43 2015 UTC,"When you get that error end is 11, your string is length 11 - so its last index is 10.  Meaning s[end] is going out of bounds. You can change x<= len(s) TO  x< len(s) and it will work.  Also to find this out, right after your while x<= len(s): You could add the following print statement to see what's happening: print(' x = ', x, ' start = ', start, ' end = ', end)"
learnpython,3b3wn5,buchananball,1 point,Thu Jun 25 19:54:19 2015 UTC,print(end)
learnpython,3b4cof,MJMarto,1 point,Thu Jun 25 21:30:36 2015 UTC,"for hour in time:     virus_population.append(patient.update())  for trial in range(numTrials - 1):     for ind, hour in enumerate(time):         virus_population[ind] += patient.update()   You call patient.update almost randomly.  Think about how often you're calling it and what you're doing with it.  Virus_population[0] is the population at t=0 + at t=301, 601, etc."
learnpython,3b4cof,elbiot,1 point,Thu Jun 25 22:29:58 2015 UTC,"In my mind, what that's doing is adding the results from a new trial to the existing results.  I thought it was doing the same thing as this part of the correct code:  for i in xrange(0, numTrials):         results = runSimulation(numViruses, maxPop, maxBirthProb, clearProb)         if finalResults == None:             finalResults = results         else:              for j in xrange(0, len(results)):                 finalResults[j] += results[j]   Is that not correct?"
learnpython,3b4cof,elbiot,1 point,Thu Jun 25 23:07:09 2015 UTC,"Without reading too much about it, I'd think results is a list of the results of a new trial, and finalresults is a list of the sum of each result for each time step.  thus finalresult[0] is trial1result[0] + trial2result[0] + ... + trialnresult[0].  You never reset your patient for the next trial."
learnpython,3b3dco,xantek,7,Thu Jun 25 17:14:53 2015 UTC,Sure that's possible. The os.path.exists() method will help you there.  while os.path.exists(filename):     increment += 1     filename = make_new_filename(increment)
learnpython,3b3dco,novel_yet_trivial,2,Thu Jun 25 17:21:51 2015 UTC,Welcome to civilization :).   Show us your python code when you finish it.
learnpython,3b3dco,novel_yet_trivial,1 point,Thu Jun 25 20:53:24 2015 UTC,"Aha, thanks for this! The .exists() is what I'm needing, I think. I found a workaround also, if you didn't want multiple outputs you can add something like:   env.overwriteOutput = True  Thanks for the reply! I spent a good few hours trying to add numbers to my output with no success. I'll incorporate it into my code and test it out."
learnpython,3b3dco,novel_yet_trivial,1 point,Thu Jun 25 21:02:48 2015 UTC,"I never do this ... but here is similar code that I wrote a few years ago. Maybe you can learn from it.  import os def folder_name_increment(foldername, start_num='001'):     return file_name_increment(foldername, start_num, strip_ext=False)  def file_name_increment(filename, start_num='001', strip_ext=True):     '''strip the extension, look for digits behind the filename, and     inc the digits if found'''     inc = None     while os.path.exists(filename):         if inc is None:             fname, ext = os.path.splitext(filename) if strip_ext else (filename, '')             #look for digits on the back of fname             idx_list = map(str.isdigit, reversed(fname))             inc_len = len(fname) if all(idx_list) else idx_list.index(False)             if inc_len:                  inc, fname = int(fname[-inc_len:]), fname[:-inc_len]             else: # no digits found                 inc_len, inc = len(start_num), int(start_num) - 1          inc += 1 # increment         filename = fname + str(inc).zfill(inc_len) + ext     return filename   EDIT: fixed the code ... oops sorry if you tried to use the buggy version."
learnpython,3b3i9z,ms_kittyfantastico,1 point,Thu Jun 25 17:48:42 2015 UTC,"First, you're only doing this for testing purposes, right? Because the development server can only handle a single connection at a time.  If you're aware of that, then my next question would be are you connecting to the correct port (Flask runs on 5000 by default if I remember correctly) and can you accept connections on that port?"
learnpython,3b3i9z,kurashu89,1 point,Thu Jun 25 18:14:40 2015 UTC,"Yes, only for testing purposes. I typed  http://<localip>:5000   and was able to connect on my own computer, as opposed to using  http://localhost:5000   I also tried disabling my IIS and using port 80, which can definitely accept connections. Same results."
learnpython,3b3i9z,mcowger,2,Thu Jun 25 18:25:38 2015 UTC,Are you sure that your Windows firewall is open on port 5000?
learnpython,3b3i9z,takennickname,1 point,Thu Jun 25 20:50:54 2015 UTC,"No, but I'm sure it's open on port 80  application.run(host='0.0.0.0', port=80)"
learnpython,3b3i9z,gengisteve,2,Thu Jun 25 20:51:40 2015 UTC,"Sounds like something to do with the windows firewall. I remember when I used to use windows that not only could ports be blocked but actual application (the pop up used to say something like ""Allow this application to work on private network?"" or something like that).  Look into your firewall settings."
learnpython,3b3i9z,ies7,1 point,Fri Jun 26 00:01:21 2015 UTC,Will do... thanks!
learnpython,3b3i9z,kurashu89,2,Fri Jun 26 04:23:42 2015 UTC,Instead of using <localip> try 127.0.0.1
learnpython,3b3i9z,Ax3_,1 point,Thu Jun 25 21:58:36 2015 UTC,Same result.
learnpython,3b1w99,gazbrot,3,Thu Jun 25 08:23:49 2015 UTC,"I try to break up things into generic functions in reusable modules, but then I end up recalculating the same stuff and losing performance.   · You can use shelve from the standard library to store persistent objects. Edit: It depends on pickle so you can only handle data types that are serializable by pickle  · Or even better, you can use caching from the python_toolbox so you don't need to change your implementation with functions. I would use this one because is so simple, you only need to use a decorator.  · Or you can just use a lightweigth database like SQLite3.  For the whens and the whys maybe you should check Python 3 Patterns"
learnpython,3b1w99,KronenR,1 point,Thu Jun 25 11:56:35 2015 UTC,"The caching decorator looks interesting. I already use numpy to save arrays to disk, but the caching idea might reduce the repeated calculations. Thank you!"
learnpython,3b1w99,shaggorama,2,Thu Jun 25 18:31:33 2015 UTC,"This isn't what you're asking for, but here are some tools for building pipelines that you may find useful (either directly, or just to read about):   https://www.gnu.org/software/make/ https://github.com/spotify/luigi http://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html"
learnpython,3b1w99,shaggorama,1 point,Thu Jun 25 13:45:02 2015 UTC,"I had heard of make before, but never looked into it, because I thought it was more relevant to compiled languages.  My task is basically taking huge dumps of raw ascii logs, mining for numbers in them, converting to numpy, doing lots of math, and presenting the results.  I think luigi is a more python friendly version of make? I will consider both more in detail when I have time. Thank you!"
learnpython,3b1w99,gengisteve,2,Thu Jun 25 18:35:20 2015 UTC,Make is a generic Unix tool that's worth exploring for your use case. Here are some relevant articles:   http://bost.ocks.org/mike/make/ http://blog.kaggle.com/2012/10/15/make-for-data-scientists/ http://kbroman.org/minimal_make/
learnpython,3b4mf5,Cold_Bagel,4,Thu Jun 25 22:47:13 2015 UTC,"I just tried to explain OOP to a coworker, so I'll take a shot at it. I'm not going to explain how to use classes/objects in your application, but cover more of the general concepts to help you understand them better. I'm relativity new to this too, so if anyone wants to jump in and correct anything I've said, feel free!  There's some terms in OOP to be familiar with: classes and object. Objects are ""instances"" of a class.  The analogy I used with my coworker is that of a tool box. Think of a class as a ""blueprint"" for an object. In this analogy, think of it as a blueprint for a toolbox. We can use this blueprint to build several toolboxes, and we can also specify some tools to put in the toolbox (variables) and some things we can do with the tools that are in the toolbox (methods - which are functions inside the class).  Now, when you build toolbox from the blueprint, there might be some things you need to every single time you build one. In python classes, there's a special function (called a constructor) that runs every time you make an instance of the class. It looks like this:  def __init__():  You may have things in your toolbox that need to connect together, like a drill and a drill bit. You need to make sure that you can get the drill bit into the drill. In python, you need to be able to reference things inside of a class, so things in that instance of a class can be referenced using the word ""self""  So, now that we have some concepts, let's look at some code.  # Let's make a class (blueprint for a toolbox) class ToolBox(object):     # This is the constructor, or stuff we do every time we build a toolbox     # Always pass self into the methods in your class     def __init__(self, drill, drill_bit):         # Let's put the tools in the toolbox         self.drill = drill         self.drill_bit = drill_bit   So there's the blueprint for making a toolbox. Let's actually make a tool box for me from the blueprint and put our drill and drill bit in there.  # This is an instance of class ToolBox my_toolbox = ToolBox(""Black and Decker 12v"", ""1/2 Inch"")   Now, if I wanted to look into my toolbox to see what kind of drill I have, I can do that like this:  print my_toolbox.drill   Now, perhaps I want to use my blueprint make a toolbox for you. I could do that like this:  your_toolbox = ToolBox(""Dewalt 18v"", ""1/8 Inch"")   We could check to see what kind of drill you have too:  print your_toolbox.drill   Now, this is all great, but we might actually want to drill some holes. Let's expand our class a little bit to add a method for drilling holes.  # Let's make a class (blueprint for a toolbox) class ToolBox(object):     # This is the constructor, or stuff we do every time we build a toolbox     # Always pass self into the methods in your class     def __init__(self, drill, drill_bit):         # Let's put the tools in the toolbox         self.drill = drill         self.drill_bit = drill_bit      # Let's drill a hole     def drill_hole(self):         return ""Drilled a %s hole with a %s drill"" % (self.drill_bit, self.drill)   We can make a couple of toolboxs like we did before and then drill some holes with the tools in them.  # Build the toolboxes my_toolbox = ToolBox(""Black and Decker 12v"", ""1/2 Inch"") your_toolbox = ToolBox(""Dewalt 18v"", ""1/8 Inch"")  # Drill the holes print my_toolbox.drill_hole() print your_toolbox.drill_hole()   Here's all the code for you to copy and paste and try out  # Let's make a class (blueprint of a toolbox) class ToolBox(object):     # This is the constructor, or stuff we do every time we build a toolbox     # Always pass self into the methods in your class     def __init__(self, drill, drill_bit):         # Let's put the tools in the toolbox         self.drill = drill         self.drill_bit = drill_bit      # Let's drill a hole     def drill_hole(self):         return ""Drilled a %s hole with a %s drill"" % (self.drill_bit, self.drill)  my_toolbox = ToolBox(""Black and Decker 12v"", ""1/2 Inch"") your_toolbox = ToolBox(""Dewalt 18v"", ""1/8 Inch"")  # Drill the holes print my_toolbox.drill_hole() print your_toolbox.drill_hole()   I've already written a novel, so I'm not going to get into class inheritance. That's another conversation for another day. :)  Hope this helps!"
learnpython,3b4mf5,redskyguy,2,Fri Jun 26 00:01:33 2015 UTC,"OOP is a wonderful thing with many very different applications, but it's not always the answer. It would help us explain it to you if you give us an idea of what your code does or show us your code."
learnpython,3b4mf5,novel_yet_trivial,1 point,Thu Jun 25 22:52:25 2015 UTC,I edited the OP with more info.
learnpython,3b4mf5,SleepyHarry,2,Thu Jun 25 23:06:29 2015 UTC,"Your example doesn't necessarily need classes, it may just need some refactoring. For example, I can see a lot of code that could be put into it's own function to take it out of the two you have here.  By the look of things, the only difference between the two functions here is the innermost for-loop. Everything else can be factored out into a more generic build_table function or similar. All it then needs is an extra argument so that the function can decide which sub-function (which will essentially just be your innermost for-loop) to then call."
learnpython,3b4mf5,hharison,2,Thu Jun 25 23:43:59 2015 UTC,"This goes on for awhile, creating half a dozen more tables and with the same sort of stuff inside of each function, with only a little bit changed in each to pull different bits out of the files.   You don't need OOP to solve this problem.  Figure out exactly what is the ""little bit changed in each"", write one single function that handles every case, with the little bit changed in each passed in as an argument."
learnpython,3b2mu7,loveandkindness,2,Thu Jun 25 13:52:22 2015 UTC,"I recommend a workflow like this:   Create an IPython notebook for exploratory analysis Load the data into one or more Pandas DataFrames  Combine the DataFrames into one MultiIndexed DataFrame (usually). Save the DataFrame to an hdf5 file for later use (optional, but recommended if your data loading takes a long time, as mine does). Manipulate the DataFrame to get one or more DataFrames that are in the form you need to do your analysis (means, sums, and other basic mathematical manipulations). If you want to try a different approach, create a new cell in your IPython notebook so you can keep track of what you have already tried. Store intermediate results to your hdf5 file (optional, but again useful if your analysis takes a long time).  Put each one in a different data set inside the same hdf5 file. Once the DataFrame is in the format you need, you can either do simple statistics directly with Pandas, or use Statsmodels for more complex statistics. If you want to do multiple analyses, or try different approaches to the same analysis, put each one in a different cell in your IPython notebook. Save final results to your hdf5 file (highly recommended), again in another data set. Plot the data.  For simple plots you can use Pandas directly.  For more complex plots, use Seaborn (which is designed to work well with Pandas).  I recommend using the inline plotting mode.  If you need to do multiple different, unrelated plots, put each plot or plot group in their own IPython notebook cell. Once you have your full data analysis workflow figured out, move it to a Python script (optional, but probably more efficient).  It should be non-interactive and should load in the raw data files and spit out your final plots as image files (and probably the final data in an hdf5 file).  If certain stages take a long time, it can be divided up, using an hdf5 file to store intermediate results.   hdf5 files are an scientific open standard for storing data.  They can store complex structured data, allow storing multiple data sets per file using something similar to an internal directory tree, allowing storing metadata, allow you to load just part of a data set into memory or even do some filtering and analysis without loading the whole data set into memory, offers transparent compression and data integrity checks, and is self-describing.  Pandas can use hdf5 files almost transparently, allowing you to load and save DataFrames to and from hdf5 files very easily.  I would say there are a few key advantages to this workflow.  First, you can keep track of the different things you tried.  Second, it allows you to easily groups steps and look at individual steps individually.  Third, it forces you to think about what you are doing as individual steps, you can't just dump everything in one giant step. Fourth, it lets you add links, text information, notes, and other such things easily and in a readable format.  Fifth, it lets you make a small change and then only run the code after that change.  Sixth, you don't have to wait a long time to re-run slow analyses since you have intermediate results stored to files.  Seventh, it is easily distributable to other people, turned into a presentation, or even placed online.  Pandas makes it very easy to do very complex analyses.  I was able to reduce probably about 500 lines of code needed to get my data into the format I need for analysis to just 2 lines.  In some cases, particularly if your data is in netcdf4 format or when the data has a large number of axes each with a large number of values, you may be better off using xray's Dataset instead of Pandas DataFrame.  But unless you already are using netcdf4 files, I would start with Pandas, since the Pandas MultiIndex generally works fine even for data that you would think would need many axes.  If you are using xray, replace any mention in my list above regarding hdf5 files with netcdf4 files."
learnpython,3b2mu7,TheBlackCat13,1 point,Thu Jun 25 14:12:58 2015 UTC,"This is surprising-- I'm unfamiliar with most things here.  Why is it important to keep the information inside a DataFrame? I assume that when I become more familiar with Pandas' methods, I will see that it's just a more elegant way to access NumPy and Matplotlib. Is this correct?  I don't see I'm starting to see why IPython is better than a script for exploration, I think I will trust you here and make the switch.  Why hdf5 and databases? I am regularly requested .csv files (which are then loaded up in Excel).  You make mention of a 500 line script-- do you write tests for scripts of this size (assuming you weren't able to collapse it)?"
learnpython,3b2mu7,TheBlackCat13,2,Thu Jun 25 14:42:44 2015 UTC,"Sorry, I have made some edits to my original post.  The reason that it is important to keep the information inside a DataFrame is because it makes it very easy to use the data to do your analysis.  So lets say you do 3 experiments.  Each experiment has 10 conditions with 100 repetitions each, and the data recording returns a time series with 10,000 time points, each containing 5 values.  Now lets say you want want to resample the times points, then you want to do some math on the 5 values at each time point to get a single number, then you want to do some additional math to reduce that to a single value for each trial, then you want to get the mean and standard error across repetitions of a single condition.  Finally, you want a  plot where the condition is on the x-axis, the mean (with error bars) is on the y-axis, and there is one line for each experiment.  That whole process, including plotting with axis labels, title, and legend, is just a single line in pandas.  Not one line for each step, one line total.  Of course, you may be able to do that by having an absurdly large number of dimension, and either manually keeping track of the dimensions or using some other data structure (like a dict) to keep track of the dimensions, but that approach is brittle and error-prone.  Using pandas makes sure you never lose track of what is what.  As I said in my edit, hdf5 files have a lot of advantages.  First, it allows you to put multiple data sets in a single file using a folder-like structure.  Second, it is binary, which is smaller to begin with, but on top of that it offers seamless compression and integrity checks.  Third, it allows for more complex data structures.  Fourth, it lacks a lot of the ambiguities of csv files (don't need to worry about delimiters, quoting, data formats, etc).  Fifth, it is much faster to read and write hdf5 files than csv files.  Sixth, if you have large data sets, it allows you to load part of the data set at a time, either contiguous chunks or discontinuous parts that meet some filtering criteria.  Seventh, it lets you do many types of analysis without loading the whole data set into memory.  If you want to send data to someone else, you might want to convert it to a csv.  But for your own use, an hdf5 file makes it much easier to keep things organized.  And for pandas, copying the data from an hdf5 file to a csv file is just a one-liner.  And pretty much any programming language supporting scientific data analysis will support hdf5 file (MATLAB, for example, has much better hdf5 support than csv support, ironically, although its support in both cases is sadly limited).  And yes, once I have functions I most certainly do write unit tests for them.  I never have 500 line scripts, I always break my code into at least a few files with unit-tested functions.  In the end the script part is just a wrapper that calls a few higher-level functions, usually in the directory it is run in.  But I was able to convert a good dozen functions across 2 or 3 files to just a couple lines with pandas.  xray and netcdf4 I am less familiar with.  An xray Dataset is a multidimensional version of a pandas DataFrame, and netcdf4 is type of hdf5 file, but beyond that I don't know much about them."
learnpython,3b2mu7,TheBlackCat13,1 point,Thu Jun 25 15:07:20 2015 UTC,"Thank you very much!  I applied your example how I normally would (it's very similar to what I've been doing lately).  As a concrete example, how would you correct this code: pastebin?  (I tried to perform this with DataFrame, but I'm not sure where to begin.)  Edit: Ignore the comment about everyerror not working. Works great, meant to delete that."
learnpython,3b2mu7,TheBlackCat13,2,Thu Jun 25 18:41:29 2015 UTC,"Here is the equivalent using pandas, except that I keep all the experiments, having one line for each experiment in the plot.  Every commented section would probably be a cell in an IPython notebook.  Note that really everything up to # Mean over repetitions is generating the data, you would get all of that automatically when you import your csv files.  # Import import pandas as pd   # Set the number of values n_experiments = 3 n_conditions = 10 n_repetitions = 100 n_values = 5 n_time_points = 10000 shape = (n_time_points, n_experiments*n_conditions*n_repetitions*n_values)  # Filenames figname1 = './test_results1.png' figname2 = './test_results2.png' figname3 = './test_results2.png' h5name = './test_data.h5'  # Set the value names experiments = ['exp%s' % i for i in range(n_experiments)] conditions = ['cond%s' % i for i in range(n_conditions)] repetitions = ['rep%s' % i for i in range(n_repetitions)] values = ['val%s' % i for i in range(n_values)] tpts = pd.np.linspace(0, 10, n_time_points)  # ""pd.np"" is numpy.  # Create the DataFrame index = pd.Index(tpts, name='Time units') columns = pd.MultiIndex.from_product([experiments, conditions,                                       repetitions, values],                                       names=['Experiment', 'condition',                                               'repetition', 'value']) df = pd.DataFrame(pd.np.random.random(shape), index=index, columns=columns) for i, exp in enumerate(experiments):  # add an offset to each experiment, just so they are different     df[exp] = df[exp]/(i+1)+i df.to_hdf(h5name, 'original')  # save original data to hdf5 file, optional  # Extract condition 1  (we don't have unique conditions) df1 = df.xs('cond0', axis=1, level='condition') df1.to_hdf(h5name, 'cond0')  # save first condition to the same hdf5 file, optional  # Mean over repetitions df2 = df1.stack('repetition').mean(axis=0, level='Time units') df2.to_hdf(h5name, 'mean_of_reps')  # save mean over repetitions to the hdf5 file, optional  # Mean and std of value df3 = df2.unstack().groupby(level=['Experiment', 'Time units']).agg({'Arbitrary units': 'mean', 'std': 'std'}).unstack('Experiment') df3.to_hdf(h5name, 'final')  # save final data to the hdf5 file, optional  # Plotting ax = df3.plot(y='Arbitrary units', yerr='std', errorevery=100, ylim=[0, 5], title='Condition 1')  # Save figure to disk ax.figure.savefig(figname1)   # One-line version # You wouldn't normally put something this long on one line df.xs('cond0', axis=1, level='condition').stack('repetition').mean(axis=0, level='Time units').unstack().groupby(level=['Experiment', 'Time units']).agg({'Arbitrary units': 'mean', 'std': 'std'}).unstack('Experiment').plot(y='Arbitrary units', yerr='std', errorevery=100, ylim=[0, 1], title='Condition 1').figure.savefig(figname2)  # A more reasonable few-line version: df1 = df.xs('cond0', axis=1, level='condition').stack('repetition').mean(axis=0, level='Time units') df2 = df1.unstack().groupby(level=['Experiment', 'Time units']).agg({'Arbitrary units': 'mean', 'std': 'std'}).unstack('Experiment') df2.plot(y='Arbitrary units', yerr='std', errorevery=100, ylim=[0, 1], title='Condition 1').figure.savefig(figname3)"
learnpython,3b2mu7,TheBlackCat13,1 point,Fri Jun 26 09:07:28 2015 UTC,"To continue from your example, what would happen if the repetition count was increased to 2000? As it is written, the original hdf file is 1.2GB on disk.  What's the simplest/correct way to handle what I think will be memory overflow?  (Thanks again for these detailed comments!)"
learnpython,3b1a52,Akronn,10,Thu Jun 25 04:01:26 2015 UTC,"I'm curious what other options may be available to improve my skills   You're only real option is to write code. The more you code you write the more you reinforce what you learned and you develop problem solving skills necessary for programming.  You don't have to do a big project and in fact, it would be ill adviced to start with one if you're a beginner. Work on small projects of any kind as long as you're writing code. Progressively increase the difficulty and scope of your projects as you start getting comfortable.  Other important things to learn are data structures and algorithms.  If you're only familiar with procedural programming, start looking into OOP. It's a different mind-set so some people find the concept difficult in the beginning but it starts to make sense once you get the hang of it.  (EDIT) Adding a resource for data structures and algorithms in Python.  Also a good place to start doing small projects in Python: /r/beginnerprojects"
learnpython,3b1a52,gnomoretears,1 point,Thu Jun 25 07:29:16 2015 UTC,Thanks for the resource!  Do you have any idea where it would be possible to learn OOP principles as well?
learnpython,3b1a52,gnomoretears,2,Thu Jun 25 11:35:53 2015 UTC,"I learned OOP in C++ so I didn't learn it strictly from Python. Python doesn't have very complicated classes compared to other languages so it's probably easier to pick up.  Below are some resources I found specific to Python.  http://www.python-course.eu/object_oriented_programming.php  http://anandology.com/python-practice-book/object_oriented_programming.html  http://www.tutorialspoint.com/python/python_classes_objects.htm  (EDIT) Basically instead of visualizing your application in steps or procedures, you have to visualize it in terms of objects/classes.  Here's a youtube video that highlights the OOP mind set. Though the video series is about PHP, this video is pretty general about the OOP concept."
learnpython,3b1a52,dert882,1 point,Thu Jun 25 20:58:00 2015 UTC,"The only way I got to learn about OOP subjects were through looking up a few different things, but mainly I just wrote a bunch of different classes to see what they would do until I understood it. As frustrating as it can be, generally if you just play with it, you'll get better."
learnpython,3b1a52,headyyeti,1 point,Thu Jun 25 18:52:52 2015 UTC,Lynda's OOP course is great!
learnpython,3b1a52,ungrimpatron,1 point,Fri Jun 26 18:18:09 2015 UTC,Could anyone chime in on what the difference between OOP and procedural programming is?
learnpython,3b1a52,gnomoretears,1 point,Thu Jun 25 20:46:58 2015 UTC,http://study.com/academy/lesson/object-oriented-programming-vs-procedural-programming.html  http://www.ctp.bilkent.edu.tr/~russell/java/LectureNotes/1_OOConcepts.htm  https://www.youtube.com/watch?v=OEfSFrk_KEI
learnpython,3b1a52,energyinmotion,6,Thu Jun 25 20:51:41 2015 UTC,"Find a way to continue to reinforce programming essentials/concepts in your head. I'm doing the MIT OpenCourseWare SC (self study) course right now. Which is also in Python (2.7.x).  Start learning about algorithms, and all that good stuff. There's lots to learn!"
learnpython,3b1a52,p_p_r,3,Thu Jun 25 04:31:43 2015 UTC,"Well, you can try out coding challenges in sites like codeeval.com. Try googling for coding challenges. Start from easy and move your way up to hard. Just a forward note, these challenges do no cover the language as a whole but they are based on only certain aspects like string manipulation and employing algorithms to get the job done. Hope that helps."
learnpython,3b1a52,Tech_Romancer,2,Thu Jun 25 04:14:19 2015 UTC,I've been playing with CodeWars recently that's proved really useful for getting to grips with python and it's best practices. As well as seeing other people's solutions to the same problems.
learnpython,3b1a52,CrayonConstantinople,2,Thu Jun 25 11:48:24 2015 UTC,"I have to second this.. My python has increased 10 fold from code wars and seeing how others dealt with problems.. Study other peoples answers and understand how they work. Before you know it, your solutions will begin to mirror the best practice solutions!   Outside of that, find something you're interested in.. Building a game, create a site using django or flask, or find an api that you're interested in (tweepy to build a twitter bot, praw for Reddit, etc).  Doing anything highly outweighs doing nothing.."
learnpython,3b1a52,Hypogeum,3,Thu Jun 25 14:13:33 2015 UTC,"So, I just recently finished the codecademy course as well. I decided I wanted to learn how to make GUI programs. I've been using tkinter to make some cool things such as a Pythagorean Theorem Calculator, and right now I'm working on an actual Calculator. They've been amazing projects to rack my brain on and figure out how to do new things.   I ended up switching to python 3, because there are more tkinter tutorials using python 3 over python 2. Needless to say I've come to find that there isn't a huge difference between the two when you're coding at a codecademy level anyhow. But, if you want to work on GUI programs as well here are some really good links:   http://www.tutorialspoint.com/python/python_gui_programming.htm https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBwibXFtPtflztSNPGuIB_d https://docs.python.org/3.4/library/tkinter.html http://effbot.org/tkinterbook/tkinter-hello-tkinter.htm http://www.tkdocs.com/tutorial/"
learnpython,3b1a52,icenburg,2,Thu Jun 25 16:04:13 2015 UTC,"I used this: http://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/ Just choose a small project that seems fun, and have a go at it. For me it helps to break the project into smaller problems and then solve them one by one."
learnpython,3b1a52,DoTheEvolution,2,Thu Jun 25 07:20:05 2015 UTC,"I'm getting frustrated   get used to it, thats what learning feels like   copy / paste, but not very structured learning, just poking various corners    get through codecademy python course start doing challenges. CodeEval, or CheckiO, or Codewars from easiest to hardest, its important to do some challenges, it will keep you using the language and it will get your confidence up, not to mention learning stuff as you search for solution have a look at PyQt, short zet code tutorial. To make user interface, windows, menus, buttons, tables,... you realize that you can do very interesting things rather easily. Having some basic understandings of a GUI is needed or you be quite limited with what you can make of python and what projects you can come up later on... if you want to continue PyQt way there are some yotube tutorials. And beyond that theres a book if you dont know html and css it might be good thing to get some under your belt, its easy and the web will be with you your whole fucking life. Html and css in 30 days(its free course once you register and actually last like 3 days even if moving slowly) web scrapping is an excellent thing to know, learn and try scrapping Understanding whats API and using some is also essential, maybe start with reddit api basic idea about databases, zetcode short intro to sqlite. You got some data, even just few? You wanna use a database just to play with it. keep doing those challenges, try some more on /r/dailyprogrammer or find new source of challenges that you can do while you wait for some inspiration of what you want to try to do in python, some project of your own now that you have some basics. But if nothing comes to mind, just keep doing challenges and moving in to directions that interest you..."
learnpython,3b1a52,SurviAvi,1 point,Thu Jun 25 15:07:26 2015 UTC,Read any book. Try and find some utility that is missing in your day to day life and try to implement it - maybe even just try cloning some simple ones too.
learnpython,3b1a52,SolveForUX,1 point,Thu Jun 25 10:56:31 2015 UTC,"If your weakness is ideation, that you should cross train your skills in an area that requires conceptualization.   Maybe a general art or intro engineering class where you learn and practice problem solving.  I see this a lot in the various programming threads and have come to realize some people enjoy coding because it's logical, but they are lacking in the conceptual.   Maybe even some philosophy or anthropology studies.  At the end of the day, any program serves the real world challenge it's trying to solve for. Without awareness into what can be done better, you'll end up only coding what other people tell you to code."
learnpython,3b1a52,__baxx__,0,Thu Jun 25 13:05:09 2015 UTC,"Search for automate the boring things with python, should suit you.  Out of interest - what kind of material / exercises were at the end of the code academy courses?"
learnpython,3b1a52,__baxx__,1 point,Thu Jun 25 11:10:08 2015 UTC,Codecademy finished with the very basics of I/O read & write. And just before that was a section on how classes work and inheritance.
learnpython,3b1a52,__baxx__,1 point,Thu Jun 25 11:32:50 2015 UTC,"what? They did classes and inheritance prior to open('file','w') stuff??"
learnpython,3b1a52,dempseye,1 point,Thu Jun 25 11:42:28 2015 UTC,"Yup, and to be honest the I/O stuff was very brief and did not play well well the code editor in the browser."
learnpython,3b1a52,__baxx__,0,Thu Jun 25 11:48:19 2015 UTC,"huh, well to me that seems like a bit of an odd way to go about it, maybe it's the done thing though idk.   This tute is very practical based which might be useful  : https://automatetheboringstuff.com/    So what can you do with classes and such after going through the course? I mean, other than appreciating that one could have a class pet and type dog that inherited pets attributes or such... could you apply them to a practical situation ?  Just curious, cheers"
learnpython,3b1a52,dempseye,1 point,Thu Jun 25 11:58:11 2015 UTC,Sounds like they were just working around weaknesses in their online REPL.
learnpython,3b1a52,__baxx__,1 point,Thu Jun 25 17:41:08 2015 UTC,fair - still seems a bit of an odd way to go about things to me though... though the chances are that I'm going about things oddly and this is in fact the better approach.
learnpython,3b1a52,squeezedfish,1 point,Thu Jun 25 17:45:05 2015 UTC,I don't think teaching OOP before basic file I/O is a better approach.
learnpython,3b4dkn,Megalolo8,1 point,Thu Jun 25 21:37:32 2015 UTC,"Please post on a service not requiring a sign-up, such as Pastebin or Gists."
learnpython,3b4dkn,JustTurrble,1 point,Thu Jun 25 21:55:59 2015 UTC,"Can you post your code (and error!) into a pastebin or a gist please? Codewars requires a login to see you code, which will put many people off trying to help you."
learnpython,3b4dkn,SleepyHarry,1 point,Thu Jun 25 21:56:16 2015 UTC,check edit i added code
learnpython,3b4dkn,UlyssesSKrunk,1 point,Thu Jun 25 22:55:16 2015 UTC,"Yeah, too lazy to log in to see the code, if you post it somewhere else I would. But have you checked the error you're getting? Usually index out of range errors are pretty easy to solve as it will tell what line the error happened so just check that and see if it helps."
learnpython,3b4dkn,Zahand,1 point,Thu Jun 25 22:17:36 2015 UTC,"Dude, as others have said, you have to paste your code or use Pastebin. The link you provided only shows me the task, not your answer.   Here is a tip: use the .split() function and remember that you can use list slicing on strings as well:  s = ""Hello World"" s[0] = ""H"""
learnpython,3b4dkn,SleepyHarry,1 point,Thu Jun 25 22:46:00 2015 UTC,"The only place in your code I can see the potential for an index error (which, by the way, I had to search for. Post the error you get in future!) is on line 9:  output = phrase[0]   If phrase is the empty string '', then this will cause the error you described."
learnpython,3b2tsw,khriys,6,Thu Jun 25 14:49:07 2015 UTC,"Use pandas.  Load the two files into pandas DataFrames using pandas.read_csv.  Then do the operations in a vectorized manner.  # create dummy dataset aD = pd.DataFrame(np.random.random((1000, 6))) ePD = pd.DataFrame(np.random.random((1000, 5))) aD.loc[:500, 0] = ePD.loc[300:800, 1]  #set rec.id as the index aD.set_index(0, inplace=True) ePD.set_index(1, inplace=True)  # concatenate the two, only keeping indexes that are in both df = pd.concat([aD, ePD], join='inner', axis=1, keys=['aD', 'ePD'])  # convert types df['lower'] = df[('ePD', 3)].astype('int') df['upper'] = df[('ePD', 4)].astype('int') df['middle'] = df[('aD', 1)].astype('int')-1  # create a new column saying where the condition is True df['inside'] = (df['lower'] <  df['middle']) & (df['middle'] <= df['upper'])   If you don't care about the original values of the columns that you are converting to ints, you can also overwrite them."
learnpython,3b2tsw,TheBlackCat13,1 point,Thu Jun 25 15:50:54 2015 UTC,"Are they small enough that you can get one or the other into memory?  If so, use a dictionary keyed of rec.id to quickly match up pairs.  If not, look into getting them into something that can be indexed on disk, like hdf5 or sqlite."
learnpython,3b2tsw,gengisteve,1 point,Thu Jun 25 15:00:21 2015 UTC,"Yes, they're both ~100mb.  What would a dictionary that compares rows look like?"
learnpython,3b2tsw,gengisteve,2,Thu Jun 25 15:06:45 2015 UTC,"somethign like this:  table_a = {rec.id:rec for rec in mR} for row in csv_ePD:     # skip seek b/c we'll only need to do this once     if row[0] not in table_a:         continue # no overlap in rec.id     if not(int(row2[3]) <= int(row1[1])-1 <= int(row2[4])):         continue # skip if it fails second test     row_id = row[0]     do_stuff(table_a[row_id], row)   The advantage is you only need to read each table once.  When you go through the second table you cross-reference the original table by doing a dictionary lookup on rec.id."
learnpython,3b2tsw,jonathan881,1 point,Thu Jun 25 16:11:09 2015 UTC,"Without seeing more I can't say much.   Work with pandas dataframes, not lists & maybe you can reshape the data for a different work flow."
learnpython,3b2tsw,MostLegit,1 point,Thu Jun 25 15:04:22 2015 UTC,Dataquest.io has a good pandas tutorial
learnpython,3b33n1,teerre,1 point,Thu Jun 25 16:02:52 2015 UTC,"The sqlalchemy docs indicate that SQLite will automatically increment any integer field that is set to be a primary key (I think this is true for most database engines) so you don't have to explicitly set the id for each article or keep track of i.  You should be able to used something like this:  session.add(Article(title=art.title, company='x', url=art.url, body=art.text))"
learnpython,3b33n1,zarthur,1 point,Thu Jun 25 20:27:38 2015 UTC,"Hmm, that makes a lot of sense  I even thought that was the case, but for some reason didn't test it  Thank you"
learnpython,3b3fj1,musicomet,5,Thu Jun 25 17:30:02 2015 UTC,"Dictionaries are not ordered. Try OrderedDict instead:  OrderedDict([('age', 45), ('occupation', 'nurse'), ('id', 1), ('name', 'marcus')])"
learnpython,3b3fj1,novel_yet_trivial,1 point,Thu Jun 25 17:33:54 2015 UTC,Thanks!
learnpython,3b3fj1,dempseye,1 point,Thu Jun 25 17:36:31 2015 UTC,Classic gotcha.
learnpython,3b3fj1,Rhomboid,1 point,Thu Jun 25 18:41:42 2015 UTC,"Careful.  Keyword arguments are passed as a regular dict, not an ordered dict.  It's only luck that you get them in the same order.  On my version of Python I get  >>> OrderedDict(age=45, occupation='nurse', id=1, name='marcus') OrderedDict([('name', 'marcus'), ('occupation', 'nurse'), ('age', 45), ('id', 1)])"
learnpython,3b3fj1,novel_yet_trivial,1 point,Fri Jun 26 04:36:06 2015 UTC,Doh.  Thanks for the catch.
learnpython,3b4pus,MrDysprosium,1 point,Thu Jun 25 23:15:36 2015 UTC,"There is so little context in this post. I have many questions, the main one being:   What are you wanting your function to output given which inputs?"
learnpython,3b4pus,SleepyHarry,1 point,Thu Jun 25 23:32:26 2015 UTC,"Sorry, I tried to explain that this code is incomplete. My one question is ""Why does X = 1000"" in this case?"
learnpython,3b4pus,bionikspoon,1 point,Fri Jun 26 00:29:35 2015 UTC,"What's the question?  (also, use 4 spaces for code blocks)"
learnpython,3b4pus,echocage,1 point,Thu Jun 25 23:33:46 2015 UTC,"You need to give us more than this. total1 isn't even being used, you add total1 to x, but at that point total1 can only equal 0"
learnpython,3b4pus,kurashu89,1 point,Thu Jun 25 23:34:17 2015 UTC,"Sorry, I'm super SUPER new at this. tota1 is supposed to hold the value of any integer that is divisible by 3 or 5.  Here's my current code.  def simulate(x):     total1 = 0     if x % 3 == 0:         total1 = x + total1         return total1     elif x % 5 == 0:         total1 = x + total1         return total1     else:         return False        for x in range(0, 1001):         x = x + 1         simulate(x)   print x"
learnpython,3b4pus,echocage,2,Fri Jun 26 00:32:53 2015 UTC,You're not retaining the value from simulate. You're just printing the final value of the loop plus one.
learnpython,3b4pus,echocage,1 point,Fri Jun 26 00:41:47 2015 UTC,Could you explain to me how I would do this?
learnpython,3b4pus,echocage,1 point,Fri Jun 26 00:52:57 2015 UTC,"What about this, I reduced the code down a lot, I this might be more along the lines of what you were trying to do  def simulate(x):     return x % 3 == 0 or x % 5 == 0   for x in range(0, 1001):     if simulate(x):         print(x)  print(x)"
learnpython,3b3cjv,Sayblahblah,2,Thu Jun 25 17:08:19 2015 UTC,"You could use a while loop that checks a condition:  while grade != ""QQQ"":     grade = raw_input(""Enter grade"")     #add grade to list   Or you could use an infinite loop and break it on a condition:  while True: #infinite loop     grade = raw_input(""Enter grade"")     if grade == ""QQQ"":         break     else:         #add grade to list   But you can't use both methods. Pick one. (I suggest the latter.)"
learnpython,3b3cjv,novel_yet_trivial,1 point,Thu Jun 25 17:14:59 2015 UTC,"I like the infinite one better, thanks for the pointer!"
learnpython,3b38u6,Hypogeum,4,Thu Jun 25 16:40:27 2015 UTC,"You need to escape the %, as well as all the other characters that are re special characters. You can see all the special characters with help(re).  e1 = re.sub(r' *([\+\*\/\.\^\-\%]|[0-9]+)$', '', e1)   You could use the re.escape() method to make this neater:  terms = re.escape('+*/.^%') e1 = re.sub(' *([%s]|[0-9]+)$'%terms, '', e1)   Before someone calls me out, I know the above is not strictly true; this also works:  e1 = re.sub(r' *([%+*/\.^-]|[0-9]+)$', '', e1)   But it's better to be in the habit of escaping everything."
learnpython,3b38u6,novel_yet_trivial,1 point,Thu Jun 25 16:55:03 2015 UTC,Thanks for the help I'll try it as soon as I can!
learnpython,3b1j99,Lomelgande,5,Thu Jun 25 05:34:13 2015 UTC,Should be easy in Pandas if you wanna use that package?
learnpython,3b1j99,bjarkebjarke,1 point,Thu Jun 25 06:16:12 2015 UTC,Thanks for the tip! I'll look into the package.
learnpython,3b1j99,caineohfelix,4,Thu Jun 25 06:27:06 2015 UTC,"I'd suggest DictReader from the csv module. That would give you a list of dictionaries with the headers as keys with your corresponding values for each row.  Example: [{""Title"":""Jurassic World"", ""Year"": 2015, ""Rating"": 4.2},  {""Title"":""Tomorrowland"", ""Year"": 2015, ""Rating"": 3.9}, ...]  Is this what you're looking for?  I apologise for bad formatting - Using mobile on way to work!"
learnpython,3b1j99,elbiot,1 point,Thu Jun 25 06:29:53 2015 UTC,Wouldn't this not preserve the order of the columns?  I think the regular csv reader/writer is fine.
learnpython,3b1j99,caineohfelix,2,Thu Jun 25 07:27:09 2015 UTC,The order of the columns is preserved by the fieldnames attribute (list) of the DictReader. You could also edit the order of the columns using this too. :)
learnpython,3b1j99,JustTurrble,1 point,Thu Jun 25 07:42:13 2015 UTC,"As mentioned, fieldnames preserves that order in a list:  from collections import OrderedDict  # assume the file is ready in `csv_file`  output_lines = [] with open(csv_file) as f:     reader = csv.DictReader(f)     for row in reader:         write_line = OrderedDict()         for name in reader.fieldnames:             if name == 'Rating':                 write_line[name] = # some change to the rating             else:                 write_line[name] = row[name]          output_lines.append(write_line)  # write an output file for each line in `output_lines`"
learnpython,3b1j99,caineohfelix,1 point,Thu Jun 25 19:09:06 2015 UTC,"So if I import the csv file in, add a review to the empty review dictionary value, and re write the file it should create a duplicate of the file with a review entry? Could you point me to a place with a good tutorial or something that talks about how to do this?"
learnpython,3b1j99,elbiot,2,Thu Jun 25 17:38:15 2015 UTC,Here's some example code to help you... https://gist.github.com/anonymous/efa3c1060e4d04bdaef5  That should get you started with reading & writing using the csv DictReader & DictWriter.  Feel free to drop me a line if you've got any questions. :)
learnpython,3b2p7v,zachattack82,3,Thu Jun 25 14:12:50 2015 UTC,Try pip3 instead of pip.
learnpython,3b2p7v,K900_,1 point,Thu Jun 25 14:16:58 2015 UTC,you are amazing. thank you.
learnpython,3b1h8r,LiJax,5,Thu Jun 25 05:12:10 2015 UTC,"In my opinion you are asking the wrong question.  Efficiency is not the reason you shouldn't be using the second one.  Luckily it fails on that metric as well though:  ~ $ python -m timeit '[len(w) for w in ""This is a test sentence"".split("" "")]' 1000000 loops, best of 3: 0.748 usec per loop ~ $ python -m timeit 'map(lambda w: len(w), ""This is a test sentence"".split("" ""))' 1000000 loops, best of 3: 1.14 usec per loop   Something I think you are missing though is that map can just use len directly.  When used with a builtin, map can actually be both quite readable, and quite efficient:   ~ $ python -m timeit 'map(len, ""This is a test sentence"".split("" ""))' 1000000 loops, best of 3: 0.724 usec per loop"
learnpython,3b1h8r,Mekire,2,Thu Jun 25 05:29:15 2015 UTC,"Oh, I apologize if my question was not conceived with proper understanding but thanks for bringing that to my attention and the second part, zero clue why I didn't even realize that."
learnpython,3b1h8r,zahlman,2,Thu Jun 25 05:42:39 2015 UTC,"map is kinda optimized for the case where no ""adaptation"" is needed of the mapping function. That said, in 3.x map returns a generator, which is also something that will affect your performance results (and depending on exactly what you're doing, may require changes to the code)."
learnpython,3b1h8r,Rhomboid,8,Thu Jun 25 19:48:20 2015 UTC,"It is much more important to worry about how code reads to a human than how efficient it is.  Any differences in speed are minor, and immaterial in most cases unless it's absolutely the innermost loop of your algorithm, which is very rarely the case.  Basically, the only time you're allowed to worry about performance is if you have profile results that specifically point to a certain line or function as being a hotspot.  Otherwise it's premature optimization and a waste of time.  This is Python after all; everything is slow."
learnpython,3b2hg5,juliuszx,5,Thu Jun 25 13:02:50 2015 UTC,"I'm guessing that you're using Python 3.  In Python 3, rather than performing integer division, the division operator (/) performs floating point division.  So on the first iteration, a = a / 2 assigns 0.5 to a, then on the next iteration 0.25, and so on.  If you observe the value of b on every iteration, you will see that as a becomes smaller and smaller, b becomes closer and closer to 2.  However, floating point numbers have limited precision, defined by the IEEE 754 standard.  When you reach the 53rd iteration, floating point numbers are not precise enough to represent the result of adding a to b exactly, so it is rounded to 2.0.  If you want to bypass this limitation of floating point precision, you can use the decimal module, which provides arbitrary precision at the cost of slower calculations.  With decimal you can control how many decimal places are used, however this is still finite, so your code will eventually stop with b == 2."
learnpython,3b2hg5,calzoneman,1 point,Thu Jun 25 13:12:01 2015 UTC,"Decimal numbers still have a limited precision, so you will eventually reach 2.0 even with the decimal module.  There is no way to represent an infinite-precision number in finite memory (unless it is a ratio of two finite-length integers, which this won't be)."
learnpython,3b2hg5,TheBlackCat13,4,Thu Jun 25 13:17:46 2015 UTC,"It is not infinite, but it is still arbitrary (the user can configure the number of decimal places).  There is a finite amount of RAM in the world so no implementation can ever be infinitely precise, however decimal with a sufficiently large number of decimal places should be precise enough for any practical application.  EDIT: However, your point still stands that OP's code cannot ever run indefinitely."
learnpython,3b2hg5,calzoneman,1 point,Thu Jun 25 13:23:20 2015 UTC,"In most cases, you are right.  However, in this specific example, the OP expects the code to run indefinitely.  It doesn't matter what sort of implementation you use, the code written could never run indefinitely in computer with finite memory."
learnpython,3b2hg5,TheBlackCat13,2,Thu Jun 25 13:27:31 2015 UTC,"Well, that is because of how floating point numbers work. You cannot infinitely divide a number because it has limited memory space."
learnpython,3b2hg5,scoutyx,1 point,Thu Jun 25 13:18:34 2015 UTC,"Floating point:       In computing, floating point is the formulaic representation which approximates a real number so as to support a trade-off between range and precision. A number is, in general, represented approximately to a fixed number of significant digits (the significand) and scaled using an exponent; the base for the scaling is normally two, ten, or sixteen. A number that can be represented exactly is of the following form:     where    Image i - An early electromechanical programmable computer, the Z3, included floating-point arithmetic (replica on display at Deutsches Museum in Munich).     Relevant: Floating Point | Floating-point unit | Double-precision floating-point format | IEEE floating point   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
learnpython,3b2hg5,autowikibot,1 point,Thu Jun 25 13:19:15 2015 UTC,Are you doing this just for fun or as part of something?
learnpython,3b2hg5,jungrothmorton,1 point,Thu Jun 25 16:53:52 2015 UTC,Just for fun :).
learnpython,3b2hg5,jungrothmorton,1 point,Thu Jun 25 17:26:43 2015 UTC,"Haha ok. I've totally played around doing stuff like this. btw, you could use other assignment operators inside your loop to slightly shorten things.  i += 1 a /= 2 b += a"
learnpython,3b0heo,TheDaler,4,Wed Jun 24 23:53:57 2015 UTC,You can just run pip install some-package.tar.gz you don't need to unpack it and run setup.py.  To get pip to find things all you need is a directory (locally or on a web server) of the packages and use the -f option for pip.
learnpython,3b0heo,Justinsaccount,2,Thu Jun 25 00:29:41 2015 UTC,I had no idea there was a -f option. I've been unpacking and chasing dependencies for a year. This is so great.
learnpython,3b0heo,dogbuddies,1 point,Thu Jun 25 00:51:27 2015 UTC,"I'll give this a try, thanks!"
learnpython,3b0heo,werpoi,2,Thu Jun 25 00:41:26 2015 UTC,"You could make a mirror of pypi and then tell pip to look at your mirror instead of going out to the real pypi. Of course, it sounds like they probably won't let you put the mirror on their network, so you'll probably have to set up a VM on your local machine with the mirror."
learnpython,3b0heo,gnomoretears,2,Thu Jun 25 00:10:29 2015 UTC,"The correct advice is to contact IT or his manager and inquire about allowing him to access PyPi.  If they decline because it's not related to his job, he shouldn't be bypassing established protocols as that can lead to termination.  If it's part of his job, he should be bringing up the issue with his manager."
learnpython,3b0heo,hharison,1 point,Thu Jun 25 00:14:37 2015 UTC,"I've been giving serious consideration to talking to IT. They're pretty touchy about security -- can't blame them -- so its not a gimme.  I'm still waiting to hear back from the last time I asked about a site I couldn't access -- for work-ish reasons, too! -- so I'm not too optimistic."
learnpython,3b0heo,gnomoretears,5,Thu Jun 25 00:40:54 2015 UTC,"It is worth mentioning that PyPi is not very secure. For example packages aren't vetted and installing something runs arbitrary code. So you could in theory mistype a package name and get screwed. I've never heard of this happening but until the community comes up with a better solution (they're working on it), security concern is justified."
learnpython,3b0heo,DwoaC,2,Thu Jun 25 01:24:24 2015 UTC,"If this is hindering you from doing your job, get your manager involved as it is part of his job to make sure you have what you need to get your job done.  More often than not, IT might not listen to grunts but they tend to do stuff if asked by someone in position. Whatever you do though, never try to bypass their protocols as it can bite you back in the ass."
learnpython,3ayh30,memilanuk,13,Wed Jun 24 14:50:25 2015 UTC,"Virtualenv is a tool that lets you set up self-contained Python installations in a folder, with their own python binary and libraries/pip packages.  This is useful for keeping separate Python applications isolated, so that updating the dependencies of one application doesn't affect the others.  In contrast, pyenv just allows you to easily switch between which version of Python is launched when you run python (on a per-user basis).  Most systems have both Python 2.x and 3.x installed, and some may also have 3rd-party interpreters such as PyPy, IronPython, etc.  EDIT: I talked about the difference between virtualenv and a project on GitHub called pyenv.  /u/Rhomboid's comment discusses pyvenv, if you're wondering about that."
learnpython,3ayh30,calzoneman,3,Wed Jun 24 14:56:40 2015 UTC,"I think you should clarify that by Pyenv you are referring to this: https://github.com/yyuu/pyenv  And not to pyvenv (note the extra 'v') or venv, which relate to the new built-in virtual environment tools (https://docs.python.org/3/library/venv.html) as I'm not sure that's going to be clear to everyone, based on /u/memilanuk's follow-up question."
learnpython,3ayh30,symmitchry,3,Wed Jun 24 22:11:29 2015 UTC,"Good point, I was answering OP's question literally and didn't think about the fact that they might have misspelled it."
learnpython,3ayh30,calzoneman,1 point,Wed Jun 24 22:26:02 2015 UTC,Good point... cuz /u/symmitchry was exactly right.  Whoops.
learnpython,3ayh30,calzoneman,2,Thu Jun 25 00:49:25 2015 UTC,Updated my top-level comment to reflect this.
learnpython,3ayh30,Rhomboid,1 point,Thu Jun 25 00:54:14 2015 UTC,"Okay, cool.  I've been using virtualenv for a while, and had seen some references to venv and pyenv - mostly when people were trying to tell me I was using the wrong command, etc.  Didn't think we were talking about the same thing, but I wasn't sure."
learnpython,3ayh30,volch,4,Wed Jun 24 17:04:56 2015 UTC,"venv is the name of the module that was added to the standard library in 3.3 which implements virtualenv-like functionality.  If you're using version >= 3.3 you can use venv directly (as either the pyvenv command or by running the module directly, python3 -m venv ...) without having to install a third party module.  (Note: some Linux distributions ship Python with parts of the standard library split out into separate packages that aren't installed by default.  venv is one of those, at least on Debian and Ubuntu.  That means you need to run apt-get install python3-venv to be able to use the venv functionality that's supposed to be part of the standard library.  It's kind of awkward and sad.)"
learnpython,3ayh30,forwardbiased,1 point,Wed Jun 24 19:03:06 2015 UTC,Why would a five-year-old want to know that?
learnpython,3ayh30,Choscura,4,Wed Jun 24 23:46:13 2015 UTC,How long have you been waiting to use that?
learnpython,3b0e8s,WannabeStephenKing,3,Wed Jun 24 23:27:40 2015 UTC,"You're doing things the hard way there.  You have rows and columns that are self describing, you just need to match up the row and column headers and the cells contents.  This would be a little easier if it wasn't an excel file and one could just use regular slicing (for all I know you can, never used openpyxl before.  This is all you need:  import openpyxl from openpyxl.cell import get_column_letter from sys import argv  def extract_areas(ws):     all_rows = ws.iter_rows(""a2:a100"")     areas = [row[0].value for row in all_rows if row[0].value]     return areas  def extract_issues(ws):     issues = [cell.value for cell in next(ws.rows)[1:] if cell.value]     return issues  def grab_column(ws, column_number, areas):     letter = get_column_letter(column_number)     cell_range = '{0}2:{0}{1}'.format(letter, len(areas)) # generate B2:B33 or so     notes = [row[0].value for row in ws.iter_rows(cell_range)]     return notes  def convert(inf):     wb = openpyxl.load_workbook(filename=inf, read_only=True)     sheet = wb['Sheet1']     ws = wb.active      areas = extract_areas(ws)     issues = extract_issues(ws)     #print areas     #print issues      for idx, issue in enumerate(issues, 2):         area_notes = grab_column(ws, idx, areas)         for area, note in zip(areas, area_notes):             if note:                 print(""- {} - {} - {}"".format(issue, area, note))   def main():     Script, inputFile= argv     convert(inputFile)  if __name__ == ""__main__"":     main()   Outputs:  - Paint Chipped - Vestibule - door frame - Paint Chipped - Stairwells - all railings - Paint Chipped - 1stfloor - beside 1, 4  - Wall Scuffed - 2ndfloor - beside 15 - Wall Scuffed - 3rdfloor - beside 20, - Needs Mopped - Vestibule - floor - Needs Vacuumed - Lobby - mat - Bugs - Laundry - Lights - Bugs - Basement - Lights - Bugs - Stairwells - all lights  - Bugs - 1stfloor - lights - Bugs - 2ndfloor - lights - Bugs - 3rdfloor - lights - Misc. - Exterior - South steps to basement need cleaned - Misc. - 2ndfloor - ground pin stuck in elec. outlet by 11 - Other Comments - Exterior - Courtyard needs power washed"
learnpython,3b0e8s,Justinsaccount,1 point,Thu Jun 25 00:22:46 2015 UTC,"Oh my goodness, this makes a lot more sense! Thank you so much!"
learnpython,3b0e8s,gnomoretears,1 point,Thu Jun 25 00:45:21 2015 UTC,"Iterating over a list and changing value for an index is one of the basic things you learn in Python. If you are lacking some beginner knowledge, I'd recommend you explore some tutorials like Codecademy, Learn Python the Hard Way, Automate Boring Stuff with Python, etc.  Here is a sample of how to change list value while iterating. The code sample below will multiply the current value by 2 and replace the value of the current index with the new value.  lst = [1, 2, 3, 4, 5]  for i in range(len(lst)):     lst[i] *= 2 # equivalent to lst[i] = lst[i] * 2  print lst   The above code will output the following:  [2, 4, 6, 8, 10]"
learnpython,3b0rdt,Ongrilla,6,Thu Jun 25 01:19:14 2015 UTC,Just noting that the following line is an assignment statement:  if x['example3'] = 'h':   That will assign string 'h' as the value of x['example3']. I think you meant to do == instead of =.
learnpython,3b0rdt,gnomoretears,1 point,Thu Jun 25 02:41:52 2015 UTC,Do you need to do any more than just determine if the 'h' is there?
learnpython,3b0rdt,zahlman,1 point,Thu Jun 25 01:23:48 2015 UTC,"No, just need to determine if h was found.  And either return h or N/A"
learnpython,3b0rdt,iminurnamez,1 point,Thu Jun 25 01:33:23 2015 UTC,Wouldn't x['example3'] != 'h' mean h wasn't found?
learnpython,3b0rdt,iminurnamez,1 point,Thu Jun 25 01:28:07 2015 UTC,Sorry I may have written that wrong that may confuse people  data = http_array['result']['examples']     for x in data:         if x['example3'] = 'h':             print('h was found')         else             print('N/A')  Which would product  N/A N/A N/A N/A N/A h was found
learnpython,3b0rdt,kriel,1 point,Thu Jun 25 01:36:42 2015 UTC,"= is for assignent, == tests equality. Try    if x['example3'] == 'h'"
learnpython,3b0rdt,kriel,1 point,Thu Jun 25 01:42:40 2015 UTC,Same kind of result but with the returned values flipped  h h h h h N/A
learnpython,3b0rdt,gnomoretears,1 point,Thu Jun 25 01:46:56 2015 UTC,"I think it's working as written.  You've got a list, data[], that has a dictionary,   {'example1': 'a', 'example2': 'b', 'example3': 'c'}   and for each entry in data[], it's printing out whether example3 says 'h' or not.  Is that what you were expecting? What did you want to be different?"
learnpython,3b0rdt,kriel,1 point,Thu Jun 25 02:00:26 2015 UTC,"Yes it is working as expected, I guess I just don't know how to write it produce the result I want.  I want the script to look for h if h exists then print h, if h doesn't exist then print N/A once.  I don't need it to print N/A for every time h doesn't exist in data[].   Hope that makes sense."
learnpython,3b0rdt,iminurnamez,1 point,Thu Jun 25 02:06:33 2015 UTC,"See, there you go.  I'd suggest setting a boolean var before the for loop, then output based on what it is after the loop.  hfound = false  for x in data:     if x['example3'] == 'h':         hfound = true         break      # thanks /u/gnomoretears !  if hfound:    print 'H!' else:    print 'N/A'   Also, take this as a lesson on 'asking the right question'."
learnpython,3b15tf,WigglyCone,5,Thu Jun 25 03:21:18 2015 UTC,Make yourself a simple task and then try to complete it. You will be forced to learn as you go but you won't mind as much because you'll be working towards something.
learnpython,3b15tf,touchofginger,1 point,Thu Jun 25 03:25:31 2015 UTC,Where are you learning from? Have you tried books like https://inventwithpython.com/ ?
learnpython,3b15tf,pysk00l,1 point,Thu Jun 25 15:12:43 2015 UTC,"I agree with /u/touchofginger. Another thing you could do along side that is learn with others, maybe by collaborating on a project. Could be anything from writing some tools to make your lives easier to building your own websites with Flask or Django, for examples."
learnpython,3b15tf,caineohfelix,1 point,Thu Jun 25 20:48:42 2015 UTC,I have the same problem :(
learnpython,3ayr1r,kuis01,4,Wed Jun 24 16:06:26 2015 UTC,You have your out file opened for writing. You need to open it in append mode. Use 'a' insted of 'w' in your with open statement.
learnpython,3b0opk,thebadtechguy,8,Thu Jun 25 00:56:41 2015 UTC,The error is on line 2: there are 3 opening parenthesis and only 2 closing ones.
learnpython,3b0opk,chucksys,5,Thu Jun 25 00:58:36 2015 UTC,"thank you, i feel so stupid now :)"
learnpython,3b0opk,mcowger,1 point,Thu Jun 25 01:01:49 2015 UTC,"are you using Python 3?  If so, print became a function, so you would need to do:  print(y)"
learnpython,3b0opk,FifteenthPen,1 point,Thu Jun 25 00:58:09 2015 UTC,"no i'm using python 2 (i don't know which version of 2, it was pre installed into textwrangler)"
learnpython,3b0opk,mcowger,2,Thu Jun 25 00:59:33 2015 UTC,"I do recommend getting into the habit of using print as a function, which 2 has supported for quite some time. It'll ease the transition to 3 if you break the habit of using old-style print statements."
learnpython,3ayoow,supermopman,4,Wed Jun 24 15:49:51 2015 UTC,"Properties are class objects so will not be saved to the slot in __slots__, like functions wouldn't be. Don't put value in __slots__.   My guess from the traceback is that copy.deepcopy in python 2 uses setattr. This function will call the __get__ of the object. It will call the __get__ of value. The new object will not have _allow_negative which must be declared before you can run the function which references it.  To fix: no value in __slots__"
learnpython,3ayoow,goodyguts,1 point,Wed Jun 24 20:48:19 2015 UTC,Confirmed in Python 2: removing 'value' (but not '_value') from __slots__ does the trick.
learnpython,3ayoow,joyeusenoelle,2,Wed Jun 24 21:03:10 2015 UTC,"Py3 user here, so I could not replicate, but I did need to fix value being in the __slots__.  Maybe related?"
learnpython,3ay29m,dotmanwill,6,Wed Jun 24 12:37:36 2015 UTC,"You can use a dictionary of functions to call different routines based on a string:  def f1(p):     print('f1 {}'.format(p)) def f2(p):     print('f2 {}'.format(p))   choices = {         'google':f1,         'amazon':f2,         }  string = 'google'  func = choices[string] func('hello')  choices['amazon']('bye')   Alternatively, you could write your functions to be more generalized, so you just pass a different url and it runs the same steps on each.  Often this is complicated because amazon might have a couple steps that are altogether unnecessary for google, so you end up with something like this:  def scrape(url, post_process = None):     '''     common scraping code, gets url and processes through post_process     params:         url - url to retrieve         post-process -- program to parse data     '''     r = get(url)     if post_process is None:         return r     return post_process(r)   def process_google(data):     links = scrap_google_links(data)     return links  choices = {         'google':process_google,         'amazon': process_amazon,         }   def grab_url(domain, url):     post = choices.get(domain, None)     return scrap(url, post)   You can do the samething with classes, having a generalized Scraper, and subclassing those scrappers that need additional and unique processing."
learnpython,3ay29m,gengisteve,1 point,Wed Jun 24 13:28:13 2015 UTC,Is there any particular reason why you are using SQL? Generally I would not load code in from a database. Maybe I am misunderstanding your question.
learnpython,3ay29m,Tesserach,1 point,Wed Jun 24 12:53:57 2015 UTC,The database stores all the information returned from the web scraping. It's quite a big database which is referenced from multiple sources and has many tables. I have simplified the example above. There won't be any security concerns or anything. I am the only person who has access or uses the database
learnpython,3ay29m,alskgj,-1,Wed Jun 24 13:00:40 2015 UTC,"If you really want to call a function depending on a string you could do something like:  mystring = ""get_amazon""  def get_google():     print(""foo"") def get_amazon():     print(""bar"") globals()[mystring]()  # this calls get_amazon()   that beeing said, you probably shouldn't."
learnpython,3ay29m,elbiot,2,Wed Jun 24 15:10:43 2015 UTC,ehk! No.  The dictionary method that is the top comment is the way to go.  It's like yours but uses a dictionary other than the global dictionary.
learnpython,3b0bud,jakecage,7,Wed Jun 24 23:08:51 2015 UTC,['bob'] is a list containing a string. You only want a string. Try this:  if s[start:end] == 'bob':   Edit: I assume you know that strings have a count() method:  >>> s.count('bob') 2
learnpython,3b0bud,novel_yet_trivial,2,Wed Jun 24 23:11:23 2015 UTC,You don't want it to be equal to ['bob']. You want it to be equal to 'bob'.
learnpython,3b0bud,shandelman,2,Wed Jun 24 23:12:42 2015 UTC,"Oh my god what a silly mistake, thanks guys!"
learnpython,3b0bud,vgbm,5,Wed Jun 24 23:14:11 2015 UTC,"Tip: your if and else both contain the same code, but if has a bit more. A better way of writing it would be:      If condition :     Bobcount+=1 Start+=1 End+=1   This just removes some fluff."
learnpython,3ay3vn,kickthebug,4,Wed Jun 24 12:54:46 2015 UTC,Django (or something lighter like Flask)]  Source: employed as django dev
learnpython,3ay3vn,t90fan,5,Wed Jun 24 17:09:57 2015 UTC,"Flask regardless.  Django is too bloated unless you are building/working on a large scale project already built using Django.  For your skill level based on the ""app engine"" statement, you will be much better suited with Flask. Especially if you are looking to the future for possible employment. A lot of larger companies are migrating to Flask for their framework of choice."
learnpython,3ay3vn,sudoGaron,1 point,Wed Jun 24 19:39:15 2015 UTC,Flask.  Always Flask!
learnpython,3ay3vn,pysk00l,0,Thu Jun 25 15:13:21 2015 UTC,"Django or flask, Django imo is more complicated but more beginner friendly since it is more batteries included than flask but there are tutorials for both"
learnpython,3axumo,mko_01,4,Wed Jun 24 11:06:18 2015 UTC,"Make sure the news websites don't have API's or RSS feeds(which is normal for news websites usually)... much simple that way. But yes, HTML is normally different for each websites.  Also the HTML source changes has the website updates, chances are you'll need to update some code every 2 - 6 months, so it's a really good idea to check for api's which should basically not change in years and is much more efficient to fetch."
learnpython,3axumo,SimonWoodburyForget,1 point,Wed Jun 24 12:09:53 2015 UTC,you're right. some of them could have an API or RSS feed. thanks for the hint :)
learnpython,3axumo,elbiot,3,Mon Jun 29 13:24:26 2015 UTC,"You don't need a different scraper, just a different css-selector for each site.  You could do that with a dictionary:  selectors = {               ""www.specificwebsite.com"" : {                       ""article"": { ""class"" : ""content ..."" }                       ""next""  : {""class"" : :blah blah""}               } }   Then you can have a function that just takes a url and a string like ""article"", and returns the result.  Inside, it grabs the base url and uses the dictionary.  And a preemptive ""avoid using globals for this"".  You could define this as a class, or as a function you could pass in the global variable as a keyword argument:  def extract_element(url, content=""article"", selector_dict = selectors):     ..."
learnpython,3axumo,Freddie_V4,1 point,Wed Jun 24 16:01:46 2015 UTC,this could solve my problem. i will try that. thank you very much
learnpython,3axumo,oreo_man_,2,Mon Jun 29 13:22:04 2015 UTC,"It'll be a little more complex, but you can still scrape the same material from different sites.   If you need an example, check out the web scraper I've been working on on GitHub: www.github.com/FreddieV4/VScraper"
learnpython,3axumo,reckscene,1 point,Wed Jun 24 15:28:34 2015 UTC,thanks for the example. this could help me a lot :)
learnpython,3azb9g,Jacob_Johnson,3,Wed Jun 24 18:30:59 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using concatenation and the str function for building strings  Instead of doing something like  result = ""Hello "" + name + "". You are "" + str(age) + "" years old""   You should use string formatting and do  result = ""Hello {}. You are {} years old"".format(name, age)   See the python tutorial for more information."
learnpython,3azb9g,Justinsaccount,1 point,Wed Jun 24 18:32:21 2015 UTC,Yup certainly a better means of doing it. I'm actually just kinda diving head first in python by writing this bot so it may not be the most efficient but I'm proud enough of my 3-4 hours of coding in python!    Certainly will get to fixing that after I work through a couple bigger fish that need frying!    Thanks!
learnpython,3azb9g,novel_yet_trivial,1 point,Wed Jun 24 18:34:15 2015 UTC,"Sounds like ""words"" is empty. Where do you define ""words""?"
learnpython,3azb9g,novel_yet_trivial,1 point,Wed Jun 24 19:20:24 2015 UTC,"Ok ok ok I actually determined that the .txt file existing was causing everything to go wonkers... Problem for another day as I don't realllly need it right now.    However, I've run into another issue: I'm trying to prevent my bot from replying to comments made by himself but it appears that if comment.author is not 'bot_name' doesn't actually prevent it...    This is more closely related to PRAW than Python but I figured I'd ask anyway."
learnpython,3azb9g,gnomoretears,4,Wed Jun 24 19:47:48 2015 UTC,"Classic beginners mistake: do not use is, it does not mean what you think it means. Use == (equal to). Or in your case  if comment.author != bot_name:"
learnpython,3axrg8,spidyfan21,7,Wed Jun 24 10:19:53 2015 UTC,"This is one big, ugly, overcomplicated one-liner. How I would write this:  def is_prime(number): # snake_case     if number < 2:         return False      for divisor in range(2, int(math.sqrt(number)) + 1):         if number % divisor == 0:             return False     else:         return True   Why I like this a lot more: it makes the algorithm very clear. I can read this function in one go without ever looking back.  if number < 2: so, if the number is less than two, return False.  for divisor in range(2, int(math.sqrt(number)) + 1): look at every divisor from two up to int(math.sqrt(number)) + 1, so up to the square root of number.  if number % divisor == 0: if the number is divisible by the divisor, return False.  If we didn't find anything, return True.   And yes, the else: is completely unnecessary - it's just there because the code reads better that way - the else: indicates that the for loop terminates normally.   Now try reading your code and note the amount of mental backtracking it involves. One-liners for the sake of one-liners are never good outside of code golf."
learnpython,3axrg8,K900_,2,Wed Jun 24 11:57:46 2015 UTC,"Oh I meant to include that it the original most, so I guess I should edit that in. This was intended as golf code. It was originally a nice pretty:  def isPrime(number):     if number <= 1:         return False      if number == 2:         return True      if number % 2 == 0:         return False      for i in range(3, int(math.sqrt(number)+1), 2):         if number % i == 0:             return False      else:         return True   The reason I do the range(3..., 2) part is that if you special case the 2 in you get huge speed increases, because you get to skip all even numbers."
learnpython,3axrg8,K900_,3,Wed Jun 24 12:09:30 2015 UTC,"Have you benchmarked the % 2 == 0 thing? I feel like it really shouldn't make that much of a difference. Instantiating range objects is very cheap in 3, and if you're working with number big enough for it to matter, you probably want a sieve anyway.  Edit: never mind, realised the optimization you were going for. That's neat."
learnpython,3axrg8,blackrat47,2,Wed Jun 24 12:13:45 2015 UTC,Thanks! As someone whose been learning Python for years from this thread   That's neat.    Means a whole lot.
learnpython,3axrg8,BenTheHokie,2,Wed Jun 24 12:21:17 2015 UTC,"I +1'd /u/K900_'s post for is_prime() instead of isPrime(), as well. PEP8, motherf*cker, do you speak it?"
learnpython,3axrg8,K900_,2,Wed Jun 24 12:40:01 2015 UTC,Does anyone know if it would be any faster to have a list of the first hundred or so primes just to optimize further? It wouldn't help with code golf.
learnpython,3axrg8,K900_,1 point,Wed Jun 24 15:55:25 2015 UTC,"I found out the nice spelled out way is actually faster because  for i in range(3, math.sqrt(number), 2):     if number % i == 0:         return False return True   Doesn't need to go through the whole list."
learnpython,3axrg8,K900_,4,Wed Jun 24 12:46:36 2015 UTC,any short-circuits.
learnpython,3axrg8,K900_,1 point,Wed Jun 24 12:50:19 2015 UTC,"Really? Why would it be faster then?  Just kidding, it isn't faster. I was testing it wrong I think."
learnpython,3axrg8,nanogyth,2,Wed Jun 24 12:51:14 2015 UTC,Should be approximately the same.
learnpython,3axrg8,99AFCC,1 point,Wed Jun 24 12:51:45 2015 UTC,"After running the same test a few times it looks like the longer version IS faster, I didn't notice the e."
learnpython,3axrg8,diesch,5,Wed Jun 24 12:57:36 2015 UTC,"Oh wait, there's your problem. You have it as a list comprehension, so it builds the list first and then passes it to any. Remove the brackets, then it'll be a generator expression and that should allow any to short-circuit."
learnpython,3axrg8,nanogyth,1 point,Wed Jun 24 13:00:33 2015 UTC,"That did it, thanks!  EDIT: oops."
learnpython,3axrg8,diesch,3,Wed Jun 24 13:03:35 2015 UTC,"Another potential optimization: try all(number % i for i in range(...)). Non-zero numbers are truthy, so it will go until it finds a zero."
learnpython,3axrg8,ripread,1 point,Wed Jun 24 13:10:16 2015 UTC,Slightly slower.
learnpython,3axrg8,JustTurrble,5,Wed Jun 24 13:21:36 2015 UTC,"Work on readability and testing  for x in range(10):     print(x, isPrime(x))   would have clued you in that things weren't doing what you expected."
learnpython,3ayexn,McTooty,4,Wed Jun 24 14:33:32 2015 UTC,"From the line below it.  secret_formula(start_point) (i.e. 10000) is passed to your function.   This tripped me up too at the beginning because your function then changes the variable name to 'started'.   Your function has renamed 10000 to 'started' and passes that variable name to everything in your function.  Also, your indentation is wrong in your function.  The four lines below def should be indented 4 spaces.  Your function could be done like this instead.  def secret_formula(start_point):     jelly_beans = start_point * 500     jars = jelly_beans / 1000     crates = jars / 100     return jelly_beans, jars, crates   Variable names don't have to be identical inside and outside of your function."
learnpython,3ayexn,alaudet,1 point,Wed Jun 24 15:02:08 2015 UTC,"THANK YOU! Jesus christ I was trying to wrap my head around it for like an hour. I assumed it was from that line but still didn't understand how it worked.   The indentation is correct in my notepad++ file. This post was my first time posting code on reddit and kinda just hit four spaces on each line rapid fire.   Again, thank you for your answer."
learnpython,3ayexn,alaudet,5,Wed Jun 24 15:04:47 2015 UTC,"Classic LPTHW, does the same thing with beans and jelly_beans and he knew what he was doing by adding that without explaining it.  Make you bang your head on it for an hour and am pretty sure now you will remember.  I like learning like that, turns some people into homicidal maniacs.  :-)"
learnpython,3ayexn,James_C_Corn,1 point,Wed Jun 24 15:15:50 2015 UTC,"Trying to google my question I came across the jelly_beans/beans thing and that made sense as soon as I saw an answer on stack overflow.   The whole start/start_point thing confused me and I made it worse by thinking it should be something simple that I probably covered and forgot. But, if it weren't for those small eureka moments we probably wouldn't bother putting ourselves through it all :p"
learnpython,3ayexn,JustTurrble,1 point,Wed Jun 24 15:28:19 2015 UTC,See I can't really stand a lot of later exercises in LPTHW. I prefer heavily detailed explanations. Newcoder.io has been good to me post lpthw ex 46 so far
learnpython,3ayexn,py_student,1 point,Wed Jun 24 15:39:57 2015 UTC,"When you define a function, the arguments in the definition become placeholder names for any values you pass to that function. These can be any names whatsoever.  I'll try to explain with the following:  def foo(a, b, c):     if a:         d = 10     elif c:         d = 20     else:         d = 5     return d   The function foo is defined here with three arguments, a, b, and c; and creates a new variable d within function scope. They don't have to be called a, b, c, or d, at all: they could be bar, baz, summat, and who_framed_roger_rabbit.  These variables only exist within the confines of the function foo: they have no relation to any variable in the rest of the program, in another file, or wherever (let's not talk about globally-scoped variables for the time being: they're a possibility, but generally not a good idea except in certain circumstances).  Now, when you call the function foo, you need to provide values for these arguments. These values can be anything in your program, including other variables or literal values:  one_thing = True another_thing = False this_one_time = 'At band camp' result = foo(one_thing, another_thing, this_one_time)  # or... result = foo(False, True, ""Hi!"")   In this example, the value of one_thing gets passed to the function, and is referred to within the function as a (and another_thing becomes b, and this_one_time becomes c). We don't care at that moment what the name of the original variable was: the function tells us what the name of it is within its own scope. This allows us to read the code and debug it without having to understand every other piece of code surrounding it, calling it, importing it, and so on.  Typically, you'll want variables in both contexts that make sense. Thus, you'd call your secret_formula function with a variable like starting_point, and you may have a starting_point within the function, too. But they still aren't directly related to one another: for ease of working with the function, you can rename it to anything that makes sense just for that function. The important thing is that it represents something for the sake of the function, which in this case is the number 10,000."
learnpython,3axvz1,rwobben,5,Wed Jun 24 11:23:59 2015 UTC,"Well you figured out the acronyms, so i am certain you read stuff about it at this point. Any tutorials is good, if you can't get your head threw whats happening just google search for more different tutorial. Literally i jumped between a 2 - 5 full ish tutorials within 1 - 3 months to learn pythons basics. Although some small syntax things in LPTHW is getting older (but you seriously need to know them anyways).  Most people will tell you the start of it(LPTHW) is pretty resourceful and goes at a good speed for them and around the 40's it becomes terrible and makes you do things that aren't well explained at all and doesn't give you good information to do your own research and tell you how important what you are doing is.  This is normal for everything thought, some things are explained better in some books then others."
learnpython,3axvz1,SimonWoodburyForget,6,Wed Jun 24 12:05:02 2015 UTC,"Agreed. LPTHW is good to ex42 or so, then falls apart.  I followed LPTHW with tangowithdjango and it was great.   LPTHW taught me the tools, and TWD taught me how to put them to use and build something."
learnpython,3axvz1,Flycal6,1 point,Wed Jun 24 13:59:40 2015 UTC,What is TWD?
learnpython,3axvz1,Thrash_Abaddon,1 point,Wed Jun 24 19:24:00 2015 UTC,"Tango With Django.  A Django framework tutorial used to build webapps/websites.  It teaches you how to integrate things like user registration, forms, search api, bootstrap, ...    You'll have a pretty slick website when you finish it.  Just customize the content to be whatever you want."
learnpython,3axvz1,Flycal6,5,Wed Jun 24 19:59:32 2015 UTC,"I started reading his book and even though it was a great tool, I just couldn't get past his writing style. Yes, I know it's supposed to be aimed at beginners (which I am), but I found his overall attitude to be off putting."
learnpython,3axvz1,Geauxtoguy,3,Wed Jun 24 18:31:18 2015 UTC,"oke, then I will look for a ""better"" alternative, If I look at tutorials of flask or Django I get the idea I miss a lot of knowlegde"
learnpython,3axvz1,Geauxtoguy,3,Wed Jun 24 18:53:55 2015 UTC,Check out Invent Games With Python. It goes through a lot of the same stuff but for Python 3 and it's free as well.  *edited with correct title.
learnpython,3axvz1,Flycal6,2,Wed Jun 24 19:13:25 2015 UTC,"I haven't used flask, but I've heard it's easy enough to use.    You probably want to try another tutorial before Django.  Unless you are persistent enough to bang your head against the wall and get through it.  Then again, it's free.  Open your favorite text editor/IDE, go to the website and start coding.  Nothing to lose, everything to gain."
learnpython,3axvz1,alaudet,2,Wed Jun 24 20:05:25 2015 UTC,"Since the whole course is available for free online I would target the chapters you feel you need to learn.  If you do not feel comfortable with lists and dicts then just do those chapters in LPTHW and decide from there.  There will be no point doing the first few chapters that simply get you used to typing code by typing print statements.  Also LPTHW is getting dated.  It is python 2 only for starters so if you have been learning Python 3 it is something to keep in mind.  It still uses % operators for strings instead of .format for example...that sort of thing.  Overall though I liked LPTHW, it is not a complete reference by any measure but it gives you enough knowledge to be able to use the right terminology to search for answers and other examples.    Also expect answers in this sub to be among the lines of ""loved it, it was the greatest"", to ""don't waste your time it sucks"".   People love it or hate it and it is mostly due to individual learning styles."
learnpython,3axvz1,Exodus111,2,Wed Jun 24 14:52:51 2015 UTC,"Yes. LPTHW is an EXCELLENT second step, perhaps better as a second step then as the first one. Go for it."
learnpython,3axvz1,James_C_Corn,2,Wed Jun 24 17:42:02 2015 UTC,I did the first 41 exercises and then moved on to Newcoder.io lpthw will teach you how to use cmd and help with some syntax that wasn't fully explained in codeAcademy.
learnpython,3axvz1,dfume,2,Wed Jun 24 19:21:22 2015 UTC,"Like many it seems, I have really liked LPTHW up until Exercise 43 where the wheels fall off. Its like he says to the reader - Oh fuck it! Just go and learn object-oriented programming somewhere else, its too fuckin hard to explain to you morons."
learnpython,3axvz1,Lucas_WitDa_LidOff,2,Wed Jun 24 22:04:49 2015 UTC,Jesus. I'm glad I wasn't the only one. The last few exercises in that book were really discouraging. I thought I had skipped a chapter on accident or something. I frantically went back through the table of contents trying to figure out what I had missed.
learnpython,3axvz1,Geauxtoguy,1 point,Wed Jun 24 22:49:58 2015 UTC,"That was mainly why I stopped reading the book.  I got to around ex25 or so and really just couldn't look past his ""just trust me, I'm right and I'm not going to bother to explain why"" approach.  He obviously does know what he's doing and it has some great mechanics in the book, but he's definitely not a great teacher."
learnpython,3axvz1,1moar,1 point,Thu Jun 25 12:28:54 2015 UTC,I found it to be helpful.
learnpython,3azuxs,aza11,1 point,Wed Jun 24 20:58:29 2015 UTC,"I've built an IRCBot using Twisted, with quite extensive capabilities. Will upload the code in the morning."
learnpython,3azuxs,Ticklethis275,1 point,Thu Jun 25 03:25:52 2015 UTC,Here you go Python IRCBOT
learnpython,3azmgd,deadowl,1 point,Wed Jun 24 19:56:24 2015 UTC,"StringIO gives you File-like writing semantics to strings. I'd give examples but I'm on mobile, just Google it :-)"
learnpython,3azmgd,HighOctaneTT,1 point,Wed Jun 24 19:58:41 2015 UTC,Thanks!
learnpython,3azmgd,HighOctaneTT,1 point,Wed Jun 24 20:02:32 2015 UTC,"Not loaded :(, though I can request it and hope. Do you know of any other potential solutions?"
learnpython,3azmgd,HighOctaneTT,1 point,Wed Jun 24 20:25:35 2015 UTC,Not loaded as-in you get an import error? Hmm on my 2.6.9 installation I'm able to import it fine.
learnpython,3azmgd,VxD000,1 point,Wed Jun 24 20:46:35 2015 UTC,"not installed*  When I type help('modules'), it isn't listed. I requested to have it install, but if it isn't supported by the vendor, I'm out of luck."
learnpython,3azmgd,JimBoonie69,1 point,Wed Jun 24 20:56:16 2015 UTC,"On my RHEL 6.6 system, vendor supplied Python 2.6, it is installed:  $ python Python 2.6.6 (r266:84292, Jan 22 2014, 05:06:49) [GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux2 Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.  >>> import StringIO >>> s = StringIO.StringIO() >>> s.write(""foo"") >>> s <StringIO.StringIO instance at 0x7f384a900dd0>"
learnpython,3azmgd,JimBoonie69,1 point,Wed Jun 24 21:07:03 2015 UTC,"doy, I was looking for lowercase ""stringio"", not ""StringIO""  I guess this solves my problem then."
learnpython,3ayqrg,vmsmith,3,Wed Jun 24 16:04:17 2015 UTC,Here is a good explanation:  http://stackoverflow.com/questions/7775062/porting-python-2-program-to-python-3-random-line-generator  Basically the tutorial forgot to update this part to Python3.
learnpython,3ayqrg,gengisteve,1 point,Wed Jun 24 16:23:27 2015 UTC,Thank you!
learnpython,3ayqrg,werpoi,2,Wed Jun 24 18:09:42 2015 UTC,"Interestingly enough it works in Python 2 but not in Python 3. Whoever wrote that guide clearly didn't test it in Python 3. See this stackoverflow for a good answer: http://stackoverflow.com/a/7775321  It suggests doing the following (which I think is a good suggestion):  try:     f = open('integer.txt') except IOError as err:     errno, strerror = err.args     print(""I/O error({0}): {1}"".format(errno, strerror))"
learnpython,3azl41,SirBastille,1 point,Wed Jun 24 19:46:30 2015 UTC,"I would imagine a dictionary containing a 2 item list for each key would work.   d = {key:[value, occurrences]}   Then you can control the data through if/then  if key in d:     d[key][0] += new_value  # update the value     d[key] += 1  # update occurrences  else:     d[key] = [value, 1]   Would this work?  What kind of sorting would you want?"
learnpython,3azl41,uhkhu,1 point,Wed Jun 24 20:04:12 2015 UTC,"Once the data is parsed, the scripts wraps up by generating an e-mail. Spitting out the container, sorted in descending order by the float value paired with each key, would make up the first part of the body for that e-mail.    Edit: With me remembering that I had two .csv files to deal with (and therefore originally had two different pairs of defaultdicts), using a dict where the value is a 4 item list would work out. I should then be able to just loop through the output of something like this, right?    sorted(d.items(), key=lambda x: (x[0] + x[2])"
learnpython,3azl41,uhkhu,1 point,Wed Jun 24 20:12:45 2015 UTC,"so you can sort dictionaries using Python's sorted() function.   sorted(iterable, key)   This will return a list of tuple key, value pairs. Iterable will be our dictionary and the key determines what sorted will actually sort  Here are a couple methods for sorting the dictionary  d = {     'a': [2.3, 1],     'b': [23.5, 2],     'c': [22.7, 1],     'd': [21.55, 2] }   First Method:  in: sorted(d)   out: ['a', 'b', 'c', 'd']   since we just called d, only the keys are considered in the sort. Iterating through the highest level of a dictionary, in our case d, will only return the keys. Same as   in: [thing for thing in d]   out: ['a', 'c', 'b', 'd']  # unordered by nature of a dictionary   Second Method (using a lambda function):  in: sorted(d.items(), key=lambda x: x[0]) out: [('a', [2.3, 1]), ('b', [23.5, 2]), ('c', [22.7, 1]), ('d', [21.55, 2])]   this will return the key, value pair we're looking for, but it's sorted on the key since iterating through a dictionary's .items() property returns a tuple of key, value pairs. so x[0] is referencing the key in a key, value tuple, so sorted sorts on this.   Third Method (one you're looking for):  in: sorted(d.items, key=lambda x: x[1]) out: [('a', [2.3, 1]), ('d', [21.55, 2]), ('c', [22.7, 1]), ('b', [23.5, 2])]   This now sorts on our values, and in this case sorted ascending. The problem is we have [value1, vlaue2] in our value slot, so we should sort on the inner value we actually want:  in: sorted(d.items, key=lambda x: x[1][0])   # x[1] gets us to the values, then [0] gets us to the first value in the list out:[('a', [2.3, 1]), ('d', [21.55, 2]), ('c', [22.7, 1]), ('b', [23.5, 2])]   it gives the same answer, but we're indeed specifying to sort on the first element of the value list, which is our float (you could also call x[1][1] to sort on the occurrences if needed).    and to give in descending order:  in: sorted(d.items, key=lambda x: x[1][0], reverse=True) out: [('b', [23.5, 2]), ('c', [22.7, 1]), ('d', [21.55, 2]), ('a', [2.3, 1])]   Hope this helps  Edit:  Then for emailing you can print like this:  in: for key, value in in sorted(d.items(), key=lambda x: x[1][0], reverse=True):         print key, value out: b [23.5, 2]       c [22.7, 1]       d [21.55, 2]       a [2.3, 1]"
learnpython,3azl41,uhkhu,1 point,Wed Jun 24 20:54:36 2015 UTC,Do you need two dictionaries? Can you combine them or is it a requirement to parse into separate dicts?
learnpython,3azl41,uhkhu,1 point,Wed Jun 24 21:09:27 2015 UTC,"The end result combines data from the two .csv files together anyways so having them together makes things easier. My sort would resemble something like this then, right (after adding in a touch of formatting for how it would output)?    for key, value in sorted(d.items(), key=lambda x: (x[0] + x[2])     body += '{0:10d} {1:7d.2f} {2:5d} {3:7d.2f} {4:5d} {5:7d.2f} {6:5d}\n'\     .format(key, value[0], value[1], value[2], value[3], value[0] + value[2], value[1] + value[3])"
learnpython,3azl41,uhkhu,1 point,Wed Jun 24 21:20:54 2015 UTC,what are you trying to represent with     x[0] + x[2]?
learnpython,3azl41,uhkhu,1 point,Wed Jun 24 21:32:02 2015 UTC,Adding together the two floats so that the sort is performed by comparing the total of the two floats
learnpython,3azl41,StaticFuzz,1 point,Wed Jun 24 21:36:26 2015 UTC,I would try and operate on only one dictionary. Can you read both files into one dict?  When you're doing x[0] + x[2] you're telling sorted() to look at element 0 and 2 of the dictionary you passed in the iterable position.
learnpython,3azl41,Sinidir,1 point,Wed Jun 24 21:47:07 2015 UTC,"That is what I had intended after remembering I had two .csv files and two pairs of defaultdicts, yes.    The structure of the dict currently looks like:    d = {key:[values1, occurrences1, values2, occurences2]}"
learnpython,3azl41,Sinidir,1 point,Wed Jun 24 21:54:52 2015 UTC,"oh I see. Sorry I was misunderstanding. Since you're calling d.items(), Python is giving you key, value pair still. In this case, our value is a list of 4 items, so you need to have the lambda function reflect this:  sorted(d.items(), key=lambda x: x[1][0] + x[1][2], reverse=True)"
learnpython,3azl41,toshitalk,1 point,Wed Jun 24 22:05:02 2015 UTC,"Ah okay, I had pieced it together from a bunch of google searches so it doesn't surprise me that I had messed something up.    I think, for now at least, I have enough to go on. Thank you for your assistance."
learnpython,3azkz6,fixles,3,Wed Jun 24 19:45:31 2015 UTC,"PyCharm is actually really fast, doesn't use that much memory and has a great vi mode. Right now I have IDEA Ultimate using about 300MB of RAM on a rather big Java project with tons of plugins loaded."
learnpython,3azkz6,K900_,1 point,Wed Jun 24 20:26:12 2015 UTC,PyCharm is using 450mb of ram on Linux (I avoid all java applications so this includes all the java libraries it had to load)
learnpython,3azkz6,K900_,3,Wed Jun 24 21:07:20 2015 UTC,"Do you really care that much? Empty RAM is wasted RAM. Unless you have like 1GB of RAM total, 450MB is not that much at all."
learnpython,3azkz6,steezefries,1 point,Wed Jun 24 21:10:55 2015 UTC,Laptop is a 2.4ghz pentium dual core with 2GB of ram.
learnpython,3azkz6,memilanuk,1 point,Thu Jun 25 07:54:15 2015 UTC,Almost every editor or IDE I've used had a plugin for vim mode.
learnpython,3azkz6,steezefries,1 point,Wed Jun 24 20:22:49 2015 UTC,Any you can recommend?
learnpython,3azkz6,steezefries,1 point,Wed Jun 24 20:24:02 2015 UTC,"PyCharm (with the IDEA.vim plugin), Sublime Text..."
learnpython,3azkz6,steezefries,1 point,Wed Jun 24 20:34:32 2015 UTC,Looks like everyones suggesting PyCharm. I'll take a look at IDEA.vim. Thanks.
learnpython,3azkz6,parnmatt,1 point,Wed Jun 24 21:08:02 2015 UTC,"I don't do much Python dev these days, but honestly I really like PyCharm. I didn't find it slow at all. It has a lot of great plugins and is just a great IDE in general. I like all of their IDEs.   I mainly work in Javascript these days and use Brackets, but Python in Brackets probably isn't all that great. What have you been using for Python?"
learnpython,3azi1j,UTD_Vagrant,1 point,Wed Jun 24 19:22:56 2015 UTC,"Can we see your current implementation? I would suggest sorting the list and using a simple state machine.  Edit: along these lines:  for time, quantity in sorted_list:     if time < time_window + 5: #time is within window         temp_list.append(quantity)     else: #time is outside window         new_list.append((time_window, sum(temp_list))) #one window complete         temp_list = [quantity] #reset temp list         time_window = window_from_time(time) new_list.append((time_window, sum(temp_list)) #don't forget the end condition!"
learnpython,3azi1j,novel_yet_trivial,1 point,Wed Jun 24 19:39:15 2015 UTC,"Its not too good. It was written up in 3 or so minutes to get it working quickly.  It basically iterates through sorted data once. The window starts at the earliest time and ends 5 minutes afterwards.  If the current value it is reading is below the cut-off we add the quantity to a temporary sum of all quantities. If the next value iterated through happens outside of our window, we append temp sum to the list we will return, set the tempsum to 0, then shift the window 5 minutes.  It also captures data about volume of tuples per, 5 minutes.  def windowSum(data, window=5):       arrayOfWindowValues = []       tempValue = 0       volume = 0       tempTimeCuttoff = data[0][0] + window       for x in data:           if x[0] < tempTimeCuttoff:               tempValue = tempValue + x[1]               volume = volume + 1           else:               arrayOfWindowValues.append((tempTimeCuttoff,   copy(tempValue), copy(volume)))                 tempValue = 0               volume = 0           tempTimeCuttoff = tempTimeCuttoff + window        return arrayOfWindowValues"
learnpython,3azi1j,novel_yet_trivial,1 point,Wed Jun 24 19:47:08 2015 UTC,"Basically the same as my solution, except yours will lose data on every window since you don't read x[0] in your else block. If you fix that you will still have a problem: a window without any data in it will steal data from the next block with data (not a problem if you know every window contains data). Also, you don't need copy() for integers (only mutable data types, like lists)."
learnpython,3azi1j,rhgrant10,1 point,Wed Jun 24 19:54:58 2015 UTC,Sweet. Thanks for the confirmation.  I've adjusted for your data-loss concerns.  I'll revisit this code in the future.I can't shake the feeling that I can make this better somehow.
learnpython,3azi1j,rhgrant10,1 point,Wed Jun 24 20:02:43 2015 UTC,"Why not sum a comprehension?  def sum_within(data, start, end):     reduced = (d for d in data if start < d[0] < end)     times, quantities = zip(*reduced)     return min(times), sum(quantities)   Edit: missed the return value being a tuple. Edit 2: never mind - misread the question altogether apparently! As /u/novel_yet_trivial outlines, a simple state machine is probably best :-P"
learnpython,3azi1j,rhgrant10,2,Thu Jun 25 00:56:27 2015 UTC,Thanks for the effort rhgrant10.
learnpython,3az0yp,calzoneman,5,Wed Jun 24 17:17:25 2015 UTC,"sys.stdin.readline() returns a string, so if you input 18 the variable age actually contains the text ""18"" rather than the number 18.  Comparing text and numbers doesn't make sense, so Python throws an error.  If you want to convert the text ""18"" to the number 18,  you can use the builtin int() function to do this:  age = int(sys.stdin.readline())    How do I write it so the whole sentence is in the same line?   The print() function accepts an optional end parameter (which defaults to a newline) that specifies what to add to the end of the message.  By setting end="""", you can force print() not to end the line:  print(""How old are you?"", end="""") age = int(sys.stdin.readline()) print(""Oh, so you are"", str(age), ""years old!"")"
learnpython,3az0yp,novel_yet_trivial,2,Wed Jun 24 17:24:55 2015 UTC,Thanks a lot!
learnpython,3az0yp,calzoneman,2,Wed Jun 24 17:31:37 2015 UTC,"Remember that a string is not the same as an integer. In other words if you asked python ""16"" == 16 it would respond False. If you try to compare a string to an integer you get the error you see. Input from the user is always a string, but it can be converted to an integer using the int() function. This would be solved if you use input() instead of sys.stdin.readline() (I assume you are using python3)."
learnpython,3az0yp,novel_yet_trivial,2,Wed Jun 24 17:25:42 2015 UTC,"Thank you! So input() is basically like sys.stdin.readline(), except not as messy?"
learnpython,3az0yp,calzoneman,2,Wed Jun 24 17:31:29 2015 UTC,"input() is basically the same as sys.stdin.readline() in Python 3, yes (it also lets you pass it a prompt string to print, which sys.stdin.readline() does not do)*.  In  Python 2, it called eval() which means that it would have converted the age to an int for you automatically, but that is not the case in 3.  For your code, you could write:  age = int(input(""What is your age? ""))   *As /u/novel_yet_trivial pointed out, sys.stdin.readline() includes the newline character, while input() does not."
learnpython,3axvi7,Tularion,1 point,Wed Jun 24 11:17:43 2015 UTC,"To those interested, I received a reply on my Google Groups topic. Apparently the feature is no longer supported."
learnpython,3austu,godlikesme,5,Tue Jun 23 18:01:55 2015 UTC,"Hey, I am a CS student looking to contribute to a project over the summer and this looks like fun. I would be interested :)"
learnpython,3austu,truthseeker1990,2,Tue Jun 23 19:56:19 2015 UTC,"Awesome! I am godlikesme on irc.freenode.net (I hangout on ##learnpython, #learnprogramming and #WatchPeopleCode), so you can message me there. Or if you want, you can PM me for skype/jabber username."
learnpython,3austu,binkocd,2,Tue Jun 23 19:59:24 2015 UTC,"Looks pretty cool. Will have to give it a spin when I get off work. I'm just starting out in python, so might be a good project to get behind and learn how to cooperatively code with people."
learnpython,3austu,ReachTheTopShelf,1 point,Wed Jun 24 00:55:13 2015 UTC,"If you decide to join, I'll be happy to help!  I created a gitter channel:https://gitter.im/eleweek/histsync"
learnpython,3austu,camit34,1 point,Fri Jun 26 00:57:20 2015 UTC,"Hi, I'm definitely interested in contributing. I'll take a look over the project this evening. Thanks for posting this!"
learnpython,3austu,zippy1981,1 point,Tue Jun 23 20:38:24 2015 UTC,"Thanks! I created a gitter channel: https://gitter.im/eleweek/histsync, so feel free to join and ask me questions(I'm also on irc.freenode.net as godlikesme on #WatchPeopleCode and other channels)"
learnpython,3ay38j,SmartestGuyOnReddit,3,Wed Jun 24 12:47:42 2015 UTC,"Hi there!  I hate to be the person that gives you an alternative to your strategy rather than answer your actual question, but I would think you'll benefit the most from directly interacting with the FTP server without the hassle of trying to control a subprocess, analyzing output, etc:  https://docs.python.org/2/library/ftplib.html  This will let you catch errors directly as exceptions, and not saddle you with troubleshooting subprocesses. Maybe take a look?  If you want to explore your actual question a bit more, maybe look into 'pexpect' library which is built to automate commands and to react based on their output patterns."
learnpython,3ay38j,jibbly_jibbly,2,Wed Jun 24 13:46:23 2015 UTC,"Hey!  I have already tried that method and I also would have preferred it but as I am retrieving data from a mainframe, when I used this method I just got a bunch of garbled binary data when I was expecting plaintext, not sure why but definitely something to do with the security of the mainframe.  The code incase anyone else wants to use ftlib.  import argparse import ftplib import os  parser = argparse.ArgumentParser() parser.add_argument('--ftp', help='FTP address to retrieve DA from', dest='ftpconn', required=True) parser.add_argument('--user', help='FTP username', dest='user', required=True) parser.add_argument('--password', help='FTP password', dest='passwd') parser.add_argument('--file', help='File(s) to retrieve', dest='file', nargs='+') args = parser.parse_args()  local_filename = os.path.join(r""/root/xxxxx"", args.file[0]) lf = open(local_filename, ""wb"") ftp = ftplib.FTP(args.ftpconn) ftp.login(args.user, args.passwd) ftp.cwd('..') ftp.retrbinary('RETR %s' % args.file[0], lf.write) lf.close"
learnpython,3ay38j,jibbly_jibbly,3,Wed Jun 24 13:59:34 2015 UTC,Right on -   Maybe look into pexpect then. Its what you will find yourself doing anyway (capturing the output of the FTP subprocess and analyzing it to decide whether there was an error or not) but this gives you some power to start doing it instead of inventing it yourself.  Heres an example of leveraging FTP with it:  https://github.com/pexpect/pexpect/blob/master/examples/ftp.py
learnpython,3ay38j,Justinsaccount,1 point,Wed Jun 24 14:20:46 2015 UTC,Thanks for this will look into it :)
learnpython,3axkqp,Magical_Username,3,Wed Jun 24 08:43:14 2015 UTC,"I'm not a programmer, nor am I studying to be one   Install anaconda instead of the official python installer."
learnpython,3axkqp,ies7,1 point,Wed Jun 24 08:59:33 2015 UTC,I wish I knew about this when I did it. I had to find specific MSVC runtimes and remake everything
learnpython,3axkqp,ggrieves,2,Wed Jun 24 14:14:31 2015 UTC,"http://stackoverflow.com/questions/26657334/installing-numpy-and-scipy-on-64-bit-windows-with-pip  Let me know if you want me to clarify what he explained: In short; get binary if you want to install package on current global python; install Anaconda(or other) and it will create a virtual environment where python will install separate from the global one, with all sorts of useful package."
learnpython,3axkqp,SimonWoodburyForget,1 point,Wed Jun 24 09:50:29 2015 UTC,"I just ended up going with anaconda, and that worked fine. I'm kind of curious though, why didn't the whl install work? I already installed several packages using the same method and downloaded from the same source and didn't run into any issues, what went wrong with this one?"
learnpython,3axkqp,SimonWoodburyForget,1 point,Wed Jun 24 10:19:05 2015 UTC,"Numpy's source code is in Cython, which is basically C and needs compiling, this is what makes Numpy more efficient then standard Python. C gives extra room to be more efficient in at the cost of having to do a lot more programming."
learnpython,3axkqp,spiessbuerger,1 point,Wed Jun 24 10:46:23 2015 UTC,Did you read this: http://docs.scipy.org/doc/numpy/user/install.html#windows
learnpython,3axrct,fixles,1 point,Wed Jun 24 10:18:45 2015 UTC,"If you want to use python for the client, then the only simple way to do this is with a GUI module, like tkinter, Qt, ect.  If you want to make a web app(you said front end which is what that refers to) front end is only html and javascript, with some back end with python(if you need a back end, since you did say data base...).  Either way there's lots of tutorials out there for this stuff, this is quite within the realm of possibility yes."
learnpython,3axrct,SimonWoodburyForget,1 point,Wed Jun 24 10:54:36 2015 UTC,Aha I can use qt? I have qt designer installed for some reason but never used it.   Do you know if I can use this with python aswell? I'm hoping at somepoint to learn C++ so qt designer will be good for that aswell?
learnpython,3axrct,SimonWoodburyForget,1 point,Wed Jun 24 12:53:20 2015 UTC,"There is something out there to convert the Qt xml file to python so to make it easy to pragmatically do things to it.  I used Qt only once, so don't know much about it but it works."
learnpython,3axrct,Blinkon,1 point,Wed Jun 24 13:03:29 2015 UTC,PyQt or PySide
learnpython,3aw7q8,Hypogeum,3,Wed Jun 24 00:17:12 2015 UTC,"I would suggest regular expressions:  >>> s = '50 + 20-4*6^5' >>> re.search(""(.*)(\+|-|\*|/|\^).*$"", s).group(1) '50 + 20-4*6'"
learnpython,3aw7q8,novel_yet_trivial,2,Wed Jun 24 00:34:00 2015 UTC,"How about  re.sub(r' *([+*/^-]|[0-9]+)$', '', s)   Where s is the string?  I've briefly tested this, but not thoroughly. It deals with whitespace, and removes the last digit grouping or symbol.  /u/Hypogeum since I didn't reply to you I'll stick in a summon."
learnpython,3aw7q8,SleepyHarry,1 point,Wed Jun 24 02:24:04 2015 UTC,I've been doing my best with both of these bits of code you guys gave me but I'm not sure how I implement this with tkinter
learnpython,3aw7q8,SleepyHarry,2,Wed Jun 24 02:40:18 2015 UTC,"The snippet I posted returns a modified string, rather than modifying the string in place (since strings are immutable in Python). Due to this, you'll have to assign the result of re.sub to something, most likely the same name.  For example:  s = re.sub(r' *([+*/^-]|[0-9]+)$', '', s)"
learnpython,3aw7q8,callmelucky,1 point,Wed Jun 24 02:59:57 2015 UTC,"You guys should really escape your special characters for the reddit formatting. Put a backslash in front of any *, ^ etc.  Or you could format as code, either by hitting space 4 times at the start of a line, or by encapsulating stuff inline within ` tags. edit: ignore me!"
learnpython,3aw7q8,SleepyHarry,1 point,Wed Jun 24 09:04:55 2015 UTC,What are you talking about? Mine is formatted correctly for me on reddit is fun and the website itself.  What client are you using?
learnpython,3aw7q8,callmelucky,2,Wed Jun 24 13:30:17 2015 UTC,"Oh sorry! I was on Sync For Reddit on Android and it wasn't showing right, though now on my computer I see you are correct. Support for code formatting is pretty new on that app, guess there's still some kinks."
learnpython,3aw7q8,SleepyHarry,2,Wed Jun 24 14:07:28 2015 UTC,"Oh also, depending on how you're doing things with tkinter, you may have to use a .get and a .set method. Seek out some basic tkinter tutorials/documention for specifics on this though."
learnpython,3aw7q8,novel_yet_trivial,1 point,Wed Jun 24 13:34:59 2015 UTC,Thanks for the help!
learnpython,3aw7q8,callmelucky,1 point,Wed Jun 24 14:17:40 2015 UTC,"I'm not sure what you mean, no offense but you did just make me think of something different, what if the user has multiple operators such as + or -, how do I just get rid of the last entry?"
learnpython,3aw19a,Trove_,0,Tue Jun 23 23:23:03 2015 UTC,"says in the tutorial it loads the user but I'm not sure where it's doing it or how   The first sentence in the second paragraph of ""User loader callback"" states:   First, we have to write a function that loads a user from the database.   Since part IV is titied ""Database"", there's a good chance the topic of database queries is covered there. The following statement inside the function load_user() applies to the DB query:  User.query.get(int(id))"
learnpython,3aw19a,gnomoretears,1 point,Wed Jun 24 01:22:31 2015 UTC,I know what the command does inside the function but I'm not sure what the function is for. It isn't called upon in any of the other files
learnpython,3aw19a,gnomoretears,0,Wed Jun 24 01:35:46 2015 UTC,"This function will be used by Flask-Login (file app/views.py)  Note how this function is registered with Flask-Login through the lm.user_loader decorator.   From the way that sounds, it's dynamic as opposed to hardcoded."
learnpython,3ax3hg,shows7,1 point,Wed Jun 24 05:05:13 2015 UTC,"I haven't gone through LPTHW so I am not really sure what problem you had with it. Can you explain a bit more?  Have you tried doing it again?  Since you know the basics of python, you can always practice them by solving problems on project euler and checkio. I would also suggest going through the tutorials on newcoder.io and once you have gained a bit more confidence you can try the lesson 45 or the pygame tutorial again.  See if you keep on stopping because ""its too hard"", that's not gonna help. If you really want to learn try again and if there is a particular concept you are stuck at, try googling or posting about that relevant topic. I apologize if I sound condescending, english is not my first language. Just keep on writing programs small or big, pm me if you have other questions. Good luck."
learnpython,3ax3hg,_clownbaby,1 point,Wed Jun 24 06:15:13 2015 UTC,"He's talking about chap 46 actually from the sound of it.  http://learnpythonthehardway.org/book/ex46.html  I can't figure out what was difficult either.  The first part is asking to install pip, distribute, nose, and virtualenv.  The second part talks about setting up the directory structure and creating blank __init__ files for a skeleton project.  The third part is just instructions to run nose test on the skeleton structure.  If I were to guess maybe he couldn't figure out how to install those packages in the first part since those are the ones that didn't really come with the ""how to"" instructions."
learnpython,3ax3hg,gnomoretears,-1,Wed Jun 24 06:21:49 2015 UTC,"I looked over that link, I am not sure what to suggest for that other than using google. The book is about learning python the hard way, so OP shouldn't be leaving it once learning becomes a bit hard. I think he should keep on practicing the basics and give another go to chap 46."
learnpython,3ax3hg,_clownbaby,1 point,Wed Jun 24 06:39:48 2015 UTC,"OP shouldn't be leaving it once learning becomes a bit hard   I think that's what really separates those who has the patience to be programmers and those who don't.  If I've stopped at the first difficult stuff I encountered when learning programming, I wouldn't be where I am now."
learnpython,3ax3hg,gnomoretears,1 point,Wed Jun 24 06:42:39 2015 UTC,"I think that's what really separates those who has the patience to be programmers and those who don't. If I've stopped at the first difficult stuff I encountered when learning programming, I wouldn't be where I am now.   That really made me think if im really too impatient to program. When im faced with a difficult task when programming I usually try to find a solution and if I can't I try to skip over it. This method was fine for me until the chapter I mentioned. I tried to look for a solution and couldn't understand it and I started getting frustrated and gave up. I think I will try again and see how I do."
learnpython,3ax3hg,gnomoretears,1 point,Wed Jun 24 09:24:01 2015 UTC,"If you're intent on becoming a programmer, you need to know that this is not going to be the last time you'll feel frustration in trying to solve a problem.  As a programmer, it is your job to solve problems (from easy to difficult) and you can't really just walk away because find something too hard. If you can't do that then programming is not for you."
learnpython,3ax3hg,gnomoretears,-1,Wed Jun 24 16:56:36 2015 UTC,When I couldn't figure out what was going on in exercise 46 I tried going to the next lesson and I was 100% lost. I tried understanding how his code worked but none of it clicked in my head.
learnpython,3awz8a,whatswrongwithgoats,0,Wed Jun 24 04:21:12 2015 UTC,"Post your code, along with the results of calling os.listdir on the folder with these files."
learnpython,3awz8a,ingolemo,1 point,Wed Jun 24 06:39:07 2015 UTC,"Code is below. this is called from a php file that hands over some variables. Hard coded test data.   EDIT. There is both a shutil.copy and a shutil.move in the code as I was trying both and commented out the one I wasn't testing.  # This script processes the csv files that are generated as part of the sending newsletter process. # The output of this process is a file(result.csv) that is then imported into the Logan's Database # The next step is handled by insert.php  # Main Reason why this fails is the shutil move has trouble with any filenames that start with a numeric file # Have tried os.rename prior to move but it also fails # -  24/06/2015  import sys import os import csv import datetime import shutil, errno  # Get parameters from \includes\insert.php csv_file = sys.argv[1] # data file  source_dir = sys.argv[2] # location of the data file edition_num = sys.argv[3] # Edition number of the newsletter dest_dir =  sys.argv[4] # This is hardcoded in ""includes\insert.php"" and should direct to ""C:\wamp\uploads\processed_files"" with C:\ being on the web server.  ## TEST DATA csv_file = ""2015_APR-MAY-JUN_NT.csv"" source_dir = ""N:\\Mail Merge\\Exported Records From Publisher"" edition_num = ""23"" dest_dir = ""N:\\Mail Merge\\Processed Exported Data"" # TEST DATA  # Set other variables todays_date = datetime.date.today() auto_id_placeholder = None #This will place a Null value variable in the csv to allow the auto increment in the MySQL table to work aus_or_int = ""AUS"" # This is legacy, as of 2015 we will not have any overseas club members to send to. Any overseas members retain honorary VIP membership status without cost. output_file = ""result.csv"" rowcount = 0 # Use this to count how many rows are processed.  to read the left most of the return string for ""Success. ""  source_file = os.path.join(source_dir,csv_file) dest_file = os.path.join(dest_dir,output_file)  try: # Copy source file to back up directory. #    shutil.copy(source_file,dest_file)  # Process the csv files.      with open(source_file,newline = '') as source:             rdr = csv.reader(source)             next(rdr, None) #This skips reading the headers of the csv file             with open(dest_file,""w"",newline='') as result:                     wtr = csv.writer(result)                 for r in rdr:                     wtr.writerow((auto_id_placeholder, edition_num, r[0], aus_or_int ,todays_date, r[8]))         #try:             # MAIN POINT OF FAILURE             # shutil.move(""N:\Mail Merge\Exported Records From Publisher\2015_APR-MAY-JUN_NT.csv"",""N:\Mail Merge\Exported Records From Publisher\Copy of Files\TEST2.csv"")                     #except OSError as error:             #print(""status: OS Error!"" . format(error))             print (""status:success|"")  except OSError as error:     print (""status:OS Error"" . format(error)) except:     print (""status:Something went wrong again"")   Any help or ideas appreciated."
learnpython,3awz8a,ingolemo,0,Thu Jun 25 23:56:55 2015 UTC,"Your problem is that you're not escaping your backslashes when you do the move. Python is looking at the string ""...Publisher\2015_APR..."" and seeing that there's a \20 in there which is the octal code for the backspace character (it can also be written \x8). You need to double up the backslashes:  shutil.move(""N:\\Mail Merge\\Exported Records From Publisher\\2015_APR-MAY-JUN_NT.csv"",""N:\\Mail Merge\\Exported Records From Publisher\\Copy of Files\\TEST2.csv"")"
learnpython,3aw6cr,spicyboldbbq,4,Wed Jun 24 00:05:55 2015 UTC,"You can't do if ""Y"" or ""y"" in confirm:  You need to do if ""Y"" in confirm or ""y"" in confirm:"
learnpython,3aw6cr,Doormatty,3,Wed Jun 24 00:07:30 2015 UTC,"This is it. To elaborate, each side of an and or or should evaluate to a boolean value. By saying if ""Y"", you're checking the boolean value of the string ""Y"". And since this string is not empty and is not None, it will always have a True boolean value.  Thus, you're essentially saying if True or 'y' in confirm:, which will always evaluate to True, which will always call menu_two"
learnpython,3aw6cr,DickCheeseSupreme,3,Wed Jun 24 00:15:42 2015 UTC,"Ah I see it now. The way I had it written would mean ""Y"" was always true and run to menu_two() since in an ""or"" statement only one needs to be true for the statement to be True."
learnpython,3aw6cr,DickCheeseSupreme,3,Wed Jun 24 00:38:29 2015 UTC,Yup! That's exactly it.
learnpython,3aw6cr,Doormatty,1 point,Wed Jun 24 00:39:46 2015 UTC,"Thank you! We actually did go over this and I was doing this in another script just last week but it seems to have gone straight over my head. As someone with no programming experience before starting last month, it seems that if I take even a day or two off I tend to come back very forgetful."
learnpython,3aw6cr,ggrieves,1 point,Wed Jun 24 00:25:24 2015 UTC,"Is all good.  Even after nearly 20 years of programming, I still forget simple stuff all the time."
learnpython,3aw6cr,Justinsaccount,1 point,Wed Jun 24 14:20:11 2015 UTC,I always do this  if 'Y' in confirm.upper():
learnpython,3aw6cr,novel_yet_trivial,3,Wed Jun 24 14:16:26 2015 UTC,"Hi! I'm working on a bot to reply with suggestions for common python problems.  This might not be very helpful to fix your underlying issue, but here's what I noticed about your submission:  You appear to be using the or construct with a constant string  instead of doing something like:  if color == 'red' or 'blue':   Which is the same as   if (color == 'red') or ('blue'):   and 'blue' by itself is always True  You need to do  if color == 'red' or color == 'blue':   or  if color in ('red', 'blue'):   or, a special case if they are all single letters you can do  if letter in 'aeiou':   You can also make it case insensitive by using soething like  if color.lower() in ('red', 'blue'):   If there were a large number of choices and inputs (as in, 10000+) you could use a set() to speed things up.  Also refer to The FAQ Entry for more information."
learnpython,3atgph,kakarogeta,5,Tue Jun 23 11:13:08 2015 UTC,"for i in range(1,1001)     with open(str(i)+'.txt') as input_file:         line = input_file.read_line().strip('\n')      #do what you need to do here      result = str(your_calculated_result)      with open(str(i)+'.out', 'w') as output_file         output_file.write(result)   Btw this would be alot easier if you didnt split everything in 1000 files and instead had one file."
learnpython,3atgph,Sinidir,1 point,Tue Jun 23 11:33:00 2015 UTC,"Thank you for your reply. May I just ask a couple of follow up questions?  1) In your above example, would that output multiple files for each numerical iteration? Eg. 0001gx.out, 0001gy.out, 0001.gz.out? Or would it output all 3 in a single file? Either is fine.  2) I could easily merge all of the files together and have a monster input file with dens1 ... dens1000; would you mind explaining how to perform the task if I were to do this? Because this is the first of many simulations and if there is a better way to do things I should do it from the beginning.  Thank you very much again."
learnpython,3atgph,Sinidir,2,Tue Jun 23 12:28:24 2015 UTC,"1) yes 1 input file 1 output file  2) if you have 1 input and output you could simply write  with open('name_of_file') as input_file, open('output','w) as output_file :     for line in input_file:         #do whatever you need to with the line         output_file.write(str(result)+'\n') #convert your result to string here or beforehand.   Edit: Looking at what you clarified it seems you can simply do the following:  #read in your nodes file #read in your random files and replace the density for i in range (1,1001):     #read in the single column of your file     dens, = np.loadtxt(str(i)+'.txt', delimiter=' ', usecols=(0), unpack=True)    #put the densitiy into your model    #do calculations    #use your savetxt code with filename being str(i)+title+'.out'"
learnpython,3atgph,Sinidir,1 point,Tue Jun 23 12:49:36 2015 UTC,"Thanks again. I am still somewhat new to coding. I just want to confirm one thing with this - if I am to have everything in one file and use for line in input file:, isn't it going to operate on everything at once? Meaning all 1000 density values simultaneously.  Just making sure that it would read my coordinates (x1, x2, y1, y2, z1, z2) and one solitary density column each time?  In other words, it would read columns [0] to [5] every time because they are the coordinates, and individually read column [6] (dens1) -> calculation/output; then loop back to read column [7] (dens2) -> calculation/output; all the way to column [1005] (dens1000) -> calculation/output.    Sorry if this is a dumb question or your code already does that! Just making sure, because this will be a very time intensive simulation and I have limited time on the cluster to debug it.    Edit: I just saw your edit in your comment and that looks like it is the perfect solution for what I am after. Thank you once again!"
learnpython,3atgph,NewbornMuse,2,Tue Jun 23 13:24:04 2015 UTC,"Look at my edit.  For what you want to do i think it is better to stick with numpy instead of the normal file reading which python offers As i understand you you have a file with your model, which consists of multiple columns including a densitiy column. And you have files with just a single column. If thats the case just stick with the numpy reading of files. Read in your original file,then in a loop read in the random files, replace the density in your model, do your calculations and write the output. If you have a specific question for a step just ask again."
learnpython,3atgph,Sinidir,1 point,Tue Jun 23 13:35:14 2015 UTC,Your edit made things perfectly clear and from the looks of it this should do exactly what I desire. Thanks for your patience and all of your help!
learnpython,3atgph,Sinidir,1 point,Tue Jun 23 13:41:41 2015 UTC,"Just in case I was a little unclear, I need something like:  x1, x2, y1, y2, z1, z2  = np.loadtxt('nodes_50_20080310.txt', delimiter=' ', usecols=(0, 1, 2, 3, 4, 5, 6), unpack=True)  input = pl.loadtxt('0001.txt') dens = input[:,0]   I know this would work, but then what I need it to do after it has performed the calculations and given the output is to load 0002.txt and rinse and repeat."
learnpython,3atgph,some_mango,3,Tue Jun 23 11:18:47 2015 UTC,"So the spaghetti code would look like  x1, x2, y1, y2, z1, z2  = np.loadtxt('0001.txt', delimiter=' ', usecols=(0, 1, 2, 3, 4, 5, 6), unpack=True) #do calculations, store in 0001gx.out, 0002gy.out, 0003gz.out x1, x2, y1, y2, z1, z2  = np.loadtxt('0002.txt', delimiter=' ', usecols=(0, 1, 2, 3, 4, 5, 6), unpack=True) #do calculations, store in 0002.out x1, x2, y1, y2, z1, z2  = np.loadtxt('0003', delimiter=' ', usecols=(0, 1, 2, 3, 4, 5, 6), unpack=True) #do calculations, store in 0003.out   and so on? That's simple, just go  for i in range(1001):   x1, x2, y1, y2, z1, z2  = np.loadtxt('{:0>4}.txt'.format(i), delimiter=' ', usecols=(0, 1, 2, 3, 4, 5, 6), unpack=True)   #do calculations, store in files   The {:0>4} thingy is just Python 3 string formatting. If you want a simpler example that reads from 0.txt, 1.txt and so on, you go  for i in range(1001):   x1, x2, y1, y2, z1, z2  = np.loadtxt(str(i) + "".txt"", delimiter=' ', usecols=(0, 1, 2, 3, 4, 5, 6), unpack=True)   #do calculations, store in files"
learnpython,3atgph,some_mango,1 point,Tue Jun 23 13:36:45 2015 UTC,"So the spaghetti code would look like...   Yes it would, except it requires a density value as well which is what is stored in the 1000 .txt files. The nodes file would remain constant and the density variable would be introducted by iterating through the 1000 files.    Thank you for your suggestion, it is very similar to the solution /u/Sinidir provided:  #read in your nodes file #read in your random files and replace the density for i in range (1,1001):     #read in the single column of your file     dens, = np.loadtxt(str(i)+'.txt', delimiter=' ', usecols=(0), unpack=True)    #put the densitiy into your model    #do calculations    #use your savetxt code with filename being str(i)+title+'.out'     I'm very grateful for the awesome help in this community!"
learnpython,3auhq8,Elthran,3,Tue Jun 23 16:42:56 2015 UTC,"You need to start over.  You sort of have the correct solution in there somewhere, but the correct solution is closer 10 lines than 60.  Loop through arguments. Call key which each one.  return the argument that had the lowest result from key.  If no key is given just use an identity function.  Deal with the 'single argument is a list'  issue first.  You need to really think about what you are trying to do. this kind of thing:  if len(args) == 1:     newList = []     for thing in args[0]:         newList.append(thing)     args = newList   Is the same as  if len(args) == 1:     args = args[0]"
learnpython,3auhq8,Justinsaccount,1 point,Tue Jun 23 17:00:19 2015 UTC,I don't know how to do the key if the argument is a lambda. That's where I just fall apart and just tear my hair out.
learnpython,3auhq8,Justinsaccount,5,Tue Jun 23 17:05:30 2015 UTC,key is a function. you just call it.  you don't have to know what it is.
learnpython,3auhq8,StaticFuzz,2,Tue Jun 23 17:16:13 2015 UTC,"the easiest way to understand lambdas is to write them out in lambda form, and in the standard function form. so lets take a look at the lambda in your problem:  key = lambda x: x[1]   as a standard function it would look something this:  def key(x):     return x[1]   you would call them both using the same syntax:  key(x)   Now, the way they have provided the key function in the min() and max() functions may be a bit confusing. If a function is passed to either min() or max() it's stored as a keyword argument(**kwargs). All that means is it's stored in a dictionary. That's where we run into this:  key = kwargs.get('key', None)   .get() is a dictionary method that will return the value of the key if it exists, but if the key is not in the dictionary it will return the second value. So in this case if key isn't in kwargs the key variable will = None.  Looking at your code, it appears your trying to treat the key variable as value, and not a function. I would suggest starting over. Treat key as a function not just a variable with a value.  for instance we know if a function/lambda is passed it will be assigned to the variable key. if a function/lambda is not passed key will be assigned the value of None. So we really only need to consider if there is a function/lambda or not, not what the function/lambda does.  if key is not None:              #if there is a function/lambda     do function stuff to args  #apply the function/lambda to the args else:                                         carry on   edit: sorry I also wanted to mention that you should think of key as an alias. If int() is passed to the min() or max() functions the variable key will do exactly what int() does. Try it in the python interpreter:  random_variable_name = int int('6') 6 random_variable_name('6') 6"
learnpython,3auhq8,StaticFuzz,1 point,Tue Jun 23 19:40:29 2015 UTC,"Hmm, I rewrote the entire code using this. I still get stuck at the same place.  key(x)   I just have no idea how to use this when it comes to a lambda. When I get a lambda as an input I can't deal with it. I can't seem to find anywhere that lets me read about it either."
learnpython,3aufyf,duddles,3,Tue Jun 23 16:30:25 2015 UTC,"Good question and nice solution.  First off, you could have also used a slice.  But, onto your question, which is better put as 'how do I pass a variable as a series of arguments, rather than a single argument', which when worded that way leads directly to * unpacking.  Basically, if you put a star next to a variable it sends the variable as a series of arguments, so this would be how to make itemgetter take the series from a list or other iterable:  >>> n = [0,1,2] >>> sorted(x, key = itemgetter(*n)) [[0, 7, 0, 9, 5, 2, 8, 6, 8, 7], [0, 9, 8, 2, 5, 4, 1, 0, 9, 9], [4, 8, 3, 4, 6, 1, 1, 7, 8, 4], [5, 2, 2, 2, 1, 2, 0, 7, 3, 4], [8, 4, 7, 6, 1, 3, 8, 3, 0, 5]] >>> sorted(x, key = itemgetter(*range(0,3))) [[0, 7, 0, 9, 5, 2, 8, 6, 8, 7], [0, 9, 8, 2, 5, 4, 1, 0, 9, 9], [4, 8, 3, 4, 6, 1, 1, 7, 8, 4], [5, 2, 2, 2, 1, 2, 0, 7, 3, 4], [8, 4, 7, 6, 1, 3, 8, 3, 0, 5]] >>> n = 2 >>> sorted(x, key = itemgetter(*range(n))) [[0, 7, 0, 9, 5, 2, 8, 6, 8, 7], [0, 9, 8, 2, 5, 4, 1, 0, 9, 9], [4, 8, 3, 4, 6, 1, 1, 7, 8, 4], [5, 2, 2, 2, 1, 2, 0, 7, 3, 4], [8, 4, 7, 6, 1, 3, 8, 3, 0, 5]]"
learnpython,3aufyf,gengisteve,1 point,Tue Jun 23 17:38:38 2015 UTC,Thanks a lot for the helpful reply - I appreciate it! When you say I could have used a slice - do you mean with the lambda version?
learnpython,3aufyf,gengisteve,2,Tue Jun 23 17:47:43 2015 UTC,"Yep:  >>> sorted(x, key = lambda x:x[:3]) [[0, 7, 0, 9, 5, 2, 8, 6, 8, 7], [0, 9, 8, 2, 5, 4, 1, 0, 9, 9], [4, 8, 3, 4, 6, 1, 1, 7, 8, 4], [5, 2, 2, 2, 1, 2, 0, 7, 3, 4], [8, 4, 7, 6, 1, 3, 8, 3, 0, 5]]"
learnpython,3aufyf,zahlman,3,Tue Jun 23 17:51:40 2015 UTC,"key=lambda x: tuple(x[i] for i in xrange(n))   Unless you're representing the matrix with a custom class and you didn't design it properly*, this is equivalent to - drum roll - key=tuple. See, that kind of iteration is what the tuple constructor already does, when it's given a sequence that isn't a tuple.  In fact, do you need a key at all? The elementwise comparison behaviour also applies to lists.  * You can do this in two ways: by implementing the iterator protocol properly, or by making sure __len__ is defined in addition to __getitem__, and then the collections.abc (just abc in earlier versions) module do the rest of the work for you."
learnpython,3aufyf,Justinsaccount,1 point,Tue Jun 23 19:56:08 2015 UTC,"Wow, you're right - sorted does it automatically without a key. I certainly overcomplicated that one - I appreciate your help!"
learnpython,3aufyf,Justinsaccount,1 point,Tue Jun 23 20:11:47 2015 UTC,"So what you are saying is you need a way to turn 3 into (0,1,2) and 4 into (0,1,2,3) ?"
learnpython,3aufyf,Justinsaccount,1 point,Tue Jun 23 17:03:36 2015 UTC,"Yeah, it seems like it has to be the integers themselves - at first I tried using a list or xrange but it said 'list indices must be integers, not xrange'"
learnpython,3awe98,HeroWeNeed,1 point,Wed Jun 24 01:13:32 2015 UTC,Just copy the module files into your project directory.
learnpython,3awe98,K900_,1 point,Wed Jun 24 06:40:27 2015 UTC,"Yeah, I do that. But if I'm going to use the same modules repeatedly, do I have to copy them into each individual project directory. I suppose it's not a huge hassle but I thought I could put them in something like the external libraries directory and just import them from there with ease."
learnpython,3awe98,K900_,1 point,Wed Jun 24 06:44:25 2015 UTC,You can copy them to your Python install's site-packages folder.
learnpython,3awe98,AussieCryptoCurrency,1 point,Wed Jun 24 06:46:52 2015 UTC,"Yeah, I do that. But if I'm going to use the same modules repeatedly, do I have to copy them into each individual project directory. I suppose it's not a huge hassle but I thought I could put them in something like the external libraries directory and just import them from there with ease.   Right click the folder in the project view, choose the 2nd bottom option, then click the blue folder ""enables sources"""
learnpython,3aul3o,treacherous_tim,4,Tue Jun 23 17:07:23 2015 UTC,Definitely break it up into functions (potentially using generators).  Try to refactor into:  def get_data_from_csv(filename):     # your code here     return data  def find_links(data):     # your code here     return links  if __name__ == '__main__':     data = get_data_from_csv('links.csv')     links = find_links(data)     print(links)
learnpython,3aul3o,gengisteve,3,Tue Jun 23 18:01:03 2015 UTC,"instead of saving html into a csv and extract the urls using regex, you should have just use beautifulsoup and request to extract the urls directly in the first place"
learnpython,3aul3o,reckscene,2,Tue Jun 23 17:52:59 2015 UTC,"Yes, I know this.  I said exactly that in the last line of the paragraph."
learnpython,3aul3o,Mechkro,2,Tue Jun 23 17:57:26 2015 UTC,"I know usually its recommended as well with I/O to files to use : with open(""x.csv"") as f:     do something with data as it closes files automatically when done."
learnpython,3auq61,Piethondev,2,Tue Jun 23 17:42:43 2015 UTC,"just read each line and do a ''.join(url,image)"
learnpython,3auq61,reckscene,1 point,Tue Jun 23 17:51:22 2015 UTC,Read each line? Is there a method called readeachline() or are you referring to a call of readline() from within a loop? I get an error for the latter.
learnpython,3auq61,joyeusenoelle,1 point,Tue Jun 23 18:52:00 2015 UTC,"What error are you getting? The more information you give, the easier you are to help.  It might be simpler, actually, to just do for line in f:; this will loop over the file, one line at a time. Then you can use ''.join(url,line)."
learnpython,3auq61,zahlman,1 point,Tue Jun 23 19:16:46 2015 UTC,"When I call readline() from inside a for loop, I get an error saying ""Mixing iteration and read methods would lose data"" When I try to call .join() with two arguments, I get an error saying it can only accept one. When I try to manually concatenate and rewrite eachline in a for loop:  for line in f:     pathway = line     f.write(url + pathway)   It writes the formatted url's, but at the end of the image pathways ex:  /image1.jpg /image2.jpg /image3.jpgwww.google.com/image1.jpg www.google.com/image2.jpg www.google.com/image3.jpg"
learnpython,3auq61,joyeusenoelle,3,Tue Jun 23 19:34:25 2015 UTC,"When I call readline() from inside a for loop, I get an error saying ""Mixing iteration and read methods would lose data""   Yes, because the for loop is already reading each line at a time for you - as your code snippet demonstrates.   When I try to call .join() with two arguments, I get an error saying it can only accept one.   The other posters got this part wrong; for a small, fixed number of strings, joining them with +  is just fine. The purpose of .join is to join an unknown number of strings, that comes from a list, tuple, generator expression, etc. (in more formal terms, an iterable of strings).   It writes the formatted url's, but at the end of the image pathways   Because a file opened for both reading and writing tracks separate positions for reading and writing, and the write position starts at the end of the file. It is possible to seek around in order to write into the middle of the file, but this (a) is complicated and (b) will overwrite the subsequent data, not push it forward, the way you'd need it to work for your plan.  Open a separate file to write the fixed file names, and then rename it back over the original, if desired."
learnpython,3auq61,elbiot,2,Tue Jun 23 20:08:26 2015 UTC,"The other posters got this part wrong   Yep, brain fart. What I meant was ''.join((url,line)), which should work as expected. (It did when I just tried it, anyway.)  But yes, url + line works just fine too."
learnpython,3auq61,Sinidir,2,Tue Jun 23 20:21:05 2015 UTC,"with open('orig.txt','r') as infile, open('result.txt','w') as outfile:     for line in infile:         url = get_url(line)         outfile.write(line+url)"
learnpython,3auq61,xiongchiamiov,1 point,Wed Jun 24 05:11:27 2015 UTC,"if the file isnt to big just put the concatenated urls into a list and then open then file in write mode and iterate over the list.  with open('filename', 'w') as file:     for line in url_list:         file.write(line+'\n')"
learnpython,3aw1l7,frankscrazyfingers,1 point,Tue Jun 23 23:25:52 2015 UTC,"Please format your code for reddit or use a site like pastebin. Your code is very hard to read and impossible to test otherwise.  Your problem is that your 'main()' function is printing the value that your 'randfind()' function returns, 10 times. However, you never told 'randfind()' to return anything, so it returns None. You need to add a return statement:  return random.randint(10,50)"
learnpython,3aw1l7,novel_yet_trivial,1 point,Tue Jun 23 23:30:53 2015 UTC,Will do henceforth. Thank you for your reply.
learnpython,3aw1l7,uhkhu,1 point,Tue Jun 23 23:43:57 2015 UTC,"You've got to return something in the randfind() function. Right now the program is just executing the line, but not doing anything with the result  import random  def randfind():         return random.randint(10,50)  # returns the random value  def main():     for count in range (10):         print (randfind())  # now randfind() is a random value when executed  if __name__ == '__main__':     main()  >>> 44 46 10 36 39 45 26 42 30 36"
learnpython,3aw1l7,uhkhu,1 point,Tue Jun 23 23:32:16 2015 UTC,"Thanks very much. Here are the instructions from my professor:   ""Write a program named randoms.py that uses main and a void function named randfind. The randfind function takes no arguments and does not return anything. It prints a random integer greater than 10 and less than 50. In the main function, use a loop to call randfind and display 10 random integers  (duplicates are okay) all on one line separated by spaces.""  The bit about the randfind function not ""returning"" anything perplexed me."
learnpython,3aw1l7,joyeusenoelle,1 point,Tue Jun 23 23:42:44 2015 UTC,"Ah yeah I see. So just replace 'return' with 'print' in the randfind() function, then you'd only call the function under main() instead of printing it. Generally you'd want a function to return something so you can use the result elsewhere in your code. In this case it's academic, so it doesn't really matter, but usually you write a function to get something out of it and not just print data (usually). Printing in functions is great for debugging."
learnpython,3aw1l7,joyeusenoelle,1 point,Tue Jun 23 23:54:53 2015 UTC,"That's the root of my problem - trying to return the correct output when using anything other than 'return' in the randfind() function.  If I replace 'return' with 'print', the program returns:  >>>  37 None 31 None 22 # Etc. for 7 more values.  None  >>>   I'm truly sorry to belabor such an elementary topic. I've only turned to asking after hours of meddling with things. -_-"
learnpython,3aw1l7,joyeusenoelle,1 point,Wed Jun 24 02:34:05 2015 UTC,"You have all of what you need in your existing program, you just need to shuffle it around a little. I can't do the homework for you, but two hints: you should not be print()ing anything inside main(), and your print() inside randfind() absolutely should have end=' ' as its last argument: print(<something>, end=' ')."
learnpython,3aw1l7,jeans_and_a_t-shirt,1 point,Wed Jun 24 03:32:52 2015 UTC,"Ah-ha! Thanks everyone, ever so much! The journey continues!  import random                         # Imports random number module.    def main():     for random_numbers in range (10): # Creates ""for"" loop with 10 iterations.          randfind()                   # Calls ""randfind"" function.  def randfind():                       # Aforementioned ""randfind"" function                                       # responsible for creating random numbers.       print (random.randint(11,49), end=' ')                                       # Calls random number module, creates                                       # random number list & displays numbers.  main()                                # Calls ""main"" function."
learnpython,3aw1l7,chrisfs,2,Wed Jun 24 04:04:22 2015 UTC,(Is it always so painful to see such simple mistakes/misunderstandings after you've written a problem correctly?)
learnpython,3awkx5,eman_resu_wen,1 point,Wed Jun 24 02:10:35 2015 UTC,"What do you mean by checking an object? I'm assuming you eventually want to get an image object, then search that image for the colors. There are multiple ways to do this but more details are needed.  Here's how to send keyboard input. It depends on your operating system, from what I'm reading."
learnpython,3awkx5,pitibow,1 point,Wed Jun 24 03:14:47 2015 UTC,Thank you for the response! What I am saying is that I want a script that looks for the color of a fixed object and then an output (the F5 key) will be pressed or nothing will happen. This is to interact with a web page and I tried to write it based of this tutorial http://code.tutsplus.com/tutorials/how-to-build-a-python-bot-that-can-play-web-games--active-11117 but I ran into many problems and cant fix them. Hopefully this helps you understand!
learnpython,3awkx5,AdvicePerson,1 point,Wed Jun 24 04:22:58 2015 UTC,Start simple. Resolve errors. Add features.
learnpython,3awkx5,AdvicePerson,1 point,Wed Jun 24 05:28:54 2015 UTC,Here is a link to my attempt: https://github.com/emanresuwen/PythonBot/blob/master/Bot  No errors but it doesn't work. I rewrote the whole thing but I am truly stuck. Any help would be appreciated!
learnpython,3awkx5,AdvicePerson,2,Thu Jun 25 00:21:21 2015 UTC,"When you say ""it doesn't work"", what do you mean? Does it not execute? Does it not save the image file? Does it not press F5? If you don't know the answer to that, put a print statement at each step to log what your variables are and what the program thinks it's doing. Whenever it prints something other than what you expect, figure out why. Break it into smaller pieces until they work."
learnpython,3awkx5,AdvicePerson,1 point,Thu Jun 25 00:45:28 2015 UTC,"Thank you for the response. I fixed some errors that I knew how to fix (I updated the code at https://github.com/emanresuwen/PythonBot/blob/master/Bot) but I still across this error when running F5 ():   Traceback (most recent call last):   File ""<pyshell#1>"", line 1, in <module>     F5 ()   File ""C:\Users\Alex\Desktop\Bot\code.py"", line 28, in F5     win32api.keybd_event(0x74[i], 0,0,0) NameError: global name 'i' is not defined  Any help is appreciated!"
learnpython,3awkx5,elbiot,2,Thu Jun 25 02:39:06 2015 UTC,"Well, look at line 28. What does that ""i"" in the square brackets mean? Did you just copy that line and the one below it from somewhere else that used the i as an iterator variable? Or is it a typo? Check the doc for win32api.keybd_event to see what it expects to get."
learnpython,3auxym,__baxx__,2,Tue Jun 23 18:37:35 2015 UTC,use a css selector in beautifulsoup4 with the css selector below. This should give you 4 links but 2 of them are duplicates which are the top and bottom prev/next  headernav > a  after which cycle through each line to obtain the attribute href
learnpython,3auxym,reckscene,1 point,Tue Jun 23 19:13:46 2015 UTC,"cheers /u/reckscene   so what's actually going on here?  I'm saying that I want the id headernav, then the a tag within that?   Any reason the tag is expressed as > rather than <?   Cheers :)  edit  so this would be the best way to do it :   url_link = (ssoup.select('#headernav > a'))[0]['href'] print(url_link)"
learnpython,3auxym,reckscene,1 point,Wed Jun 24 11:34:21 2015 UTC,#headernav > a    it means select all <a> elements with an immediate parent of the id headernav  i find that using css selector like the one above is very useful in beautifulsoup
learnpython,3avg51,ChemiKyle,2,Tue Jun 23 20:43:26 2015 UTC,Could you write a loop to plot each individual point in your dataset with a small pause in between? You'll have to make sure that you're not generating a new plot/figure each time and holding whatever you've plotted previously.
learnpython,3avg51,Seventytvvo,1 point,Tue Jun 23 21:45:06 2015 UTC,"That's a good idea. I'm not entirely sure how to go about that though; if it helps, this is how I import data to plot.  import numpy as np import matplotlib.pyplot as plt   data = np.genfromtxt(""D:\\Users\\eggs\\spam\\fileToPlot.csv"", delimiter=',', names=['x', 'y'])  fig = plt.figure()  ax1 = fig.add_subplot(111)  ax1.plot(data['x'], data['y'], color='g')  ax1.set_title("""")     ax1.set_xlabel('Voltage (V)') ax1.set_ylabel('Current (A)')  plt.show()   I'm thinking there may be some way to do something along the lines of this to plot one point at a time?  n=1 while n < #number of points:     x=data[:n,0]     y=data[:n,1]     n +=1"
learnpython,3avg51,Seventytvvo,2,Tue Jun 23 22:51:52 2015 UTC,"Check out this thread on SE:   https://stackoverflow.com/questions/11874767/real-time-plotting-in-while-loop-with-matplotlib  You should be able to get things working by tweaking what's in there a little bit... I had some success in googling for ""matplotlib real-time plotting"" and ""python plotting one point at a time"""
learnpython,3avg51,elbiot,1 point,Wed Jun 24 00:45:52 2015 UTC,Did you look at the examples?   http://matplotlib.org/examples/animation/index.html
learnpython,3avg51,elbiot,1 point,Wed Jun 24 05:05:22 2015 UTC,"Yeah, that was predefined functions and plotting of randomly generated data. I couldn't figure out where to go from there."
learnpython,3avfop,anonymousperson28,2,Tue Jun 23 20:40:09 2015 UTC,"My first choice would probably be sqlite3, though to be fair I don't have experience with too many other database types. If you create a table with other_user_fbid, timestamp_absolute, etc as columns, then it'd be really easy to  cursor.execute('SELECT * FROM messages WHERE other_user_fbid=? AND timestamp_absolute=?', [joes_id, date])"
learnpython,3avfop,GoldenSights,2,Tue Jun 23 21:13:31 2015 UTC,"Make a list of namedtuples. Then you can quickly search through the list.  >>> from collections import namedtuple >>> Message = namedtuple(""Message"", json_object.keys()) >>> a = Message(**json_object) >>> a.body 'hi'"
learnpython,3avfop,novel_yet_trivial,2,Tue Jun 23 21:29:53 2015 UTC,Probably would want to convert the date time to a datetime object.
learnpython,3avfop,elbiot,2,Wed Jun 24 02:50:38 2015 UTC,"I like /u/GoldenSights idea of using an actual db, but my first thought was Pandas."
learnpython,3awkjt,jayjay097531,2,Wed Jun 24 02:07:17 2015 UTC,"use the requests library.  Google searches are done by putting the query terms in the url (post request).  (Most websites have an ""API"" like this).  Then you'll get an html document which you parse with beautifulsoup.  There's lots of tutorials now that you know the names of the libraries to use."
learnpython,3avb0m,pyromech,4,Tue Jun 23 20:07:13 2015 UTC,"What is that program for?  This has to be the tenth time I've seen someone post code for this class1/class2/class3 thing.. and all of them have been absolutely terrible.  The code you pasted is terrible as well, and should not be used as any sort of guide for how to do things correctly."
learnpython,3avb0m,Justinsaccount,1 point,Tue Jun 23 20:46:57 2015 UTC,this is very true.
learnpython,3avb0m,Ecyoph,1 point,Tue Jun 23 20:56:39 2015 UTC,will read a file containing several lines with a single float value each. then a dictionary is being generated with nth line as key (string value) and the next 4 lines in a list as value (float values). unless there are less than 4 lines till end of file. in that case only remaining floats are used. then it will sort this dictionary by the average of the float values (reversed). then it will print out lines number + asociated avg.  basically lines are being sorted by the average of the next 4 lines. biggest average first.
learnpython,3avb0m,Ecyoph,1 point,Tue Jun 23 20:26:53 2015 UTC,"The others are right; this code is quite convoluted. What's strange is that the person who wrote it seems to know about relatively advanced concepts like dictionary comprehensions and lambdas, but doesn't know the first thing about writing DRY code (Don't Repeat Yourself).  For comparison, here's how a semi-competent person might code up the same task:  import operator  filename = 'class{}.txt'.format(classNumber) students = {} with open(filename) as f:     for name in f:         scores = [float(next(f)) for _ in range(3)]         average_score = sum(scores) / len(scores)         students[name] = average_score  ranked_students = sorted(students.values(), key=operator.itemgetter(1), reverse=True) for name, average_score in ranked_students:     print(name, average_score)"
learnpython,3aucrz,lupincalo,1 point,Tue Jun 23 16:06:58 2015 UTC,You need to put everything inside of a frame and then center that frame. The usual method is to use the grid geometry manager and center a cell using the rowconfigure and columnconfigure methods.  I have a sample of your code with a small modification to center everything here: https://gist.github.com/jburks/2c93bdf9bbd69024f50e
learnpython,3aucrz,unpythonic,1 point,Tue Jun 23 19:48:31 2015 UTC,Would I need to change columnspan or rowspan? I ran it with your modification and now everything is in the bottom right. Thanks for the help!
learnpython,3aucrz,unpythonic,1 point,Tue Jun 23 22:12:56 2015 UTC,"Strange, I had run that code before posting and it worked. Did you run exactly the code posted or did you transcribe the changes into your existing code? I wonder if there is a versioning issue."
learnpython,3at5gw,GirlLunarExplorer,8,Tue Jun 23 08:32:53 2015 UTC,"MoreComments has no attribute 'body'  But when I print dir(coms[0]) where coms[0] is a comment, the body attribute totally shows up.   That's the problem. coms[0] is a praw.objects.Comment, which has a body attribute, but the praw.objects.MoreComments does not. These objects represent the ""load x more"" button at the end of a comment tree, and they don't have bodies. You'll want to check isinstance(c, praw.objects.Comment) before continuing (or just catching the attributeerror).  If you want to replace the MC objects with the comments they represent, you can do p.replace_more_comments() (docs), or get each one individually with morecomments.comments() (the returned list may contain yet another mc object at the end!)."
learnpython,3at5gw,GoldenSights,1 point,Tue Jun 23 08:52:08 2015 UTC,"Got it, thanks!  for p in posts:     p.replace_more_comments(limit=None)     coms = praw.helpers.flatten_tree(p.comments)     for c in coms:         total_comments += (c.body + (""\n""*2)).encode(""utf8"")"
learnpython,3at5gw,GoldenSights,1 point,Wed Jun 24 06:26:00 2015 UTC,"Yep, just beware -- if reddit times out and you get an ""ow!"" screen during the replace_more_comments process, it's basically lost. How you handle that is up to you, but you'll want to have a try-catch at the very least."
learnpython,3av5uo,auggielife,2,Tue Jun 23 19:31:38 2015 UTC,"You are importing it as a 2 dimensional array. What do you want from this data? If you want the 11th row and the 2nd column, try:  data[10][1]   If you only provide the row number, then you get the entire row back."
learnpython,3av5uo,novel_yet_trivial,1 point,Tue Jun 23 19:36:33 2015 UTC,"Thank you.  I had a syntax error trying to access the row.  Also I think what had me confused is:  data.shape   Returns:  (61360,)   Where I was expecting:  (61360, 23)"
