devops,3e6fqn,alexcasalboni,3,Wed Jul 22 09:03:04 2015 UTC,btrfs ewww..... /me waits for the 10 line sh/ZFS version.
devops,3e6fqn,o0o,1 point,Wed Jul 22 15:05:52 2015 UTC,"It's btrfs snapshot, veth virtual network and chroot. Nice, but no lxc namespace isolation."
devops,3e6fqn,geggo98,-1,Wed Jul 22 17:01:25 2015 UTC,lol no.   It's a neat lxc wrapper script in 100 lines of Bash but it's not anything near Docker.
devops,3e6fqn,Lesmothian,4,Wed Jul 22 12:23:55 2015 UTC,It certainly isnt wrapping lxc. It's just using normal userland tools that have existed a long time
devops,3e6sxw,speckz,1 point,Wed Jul 22 11:57:08 2015 UTC,Why the title?
devops,3e6sxw,weedv2,1 point,Wed Jul 22 12:39:54 2015 UTC,"Because that's the actual title of the article?   The Worst Possible DevOps Advice  It's not a link bait title, bear with me as I try to explain myself."
devops,3e6sxw,IWillNotBeBroken,3,Wed Jul 22 13:41:32 2015 UTC,[ link baiting intensifies ]
devops,3e6sxw,FetchKFF,1 point,Wed Jul 22 15:09:55 2015 UTC,"Yup, good advice.   Coming from self-taught programmer-cum-sysadmin, I learned quite a bit from a two year stint of acting as a MySQL administrator, and quite a bit more doing incompletely specced, unit-test driven development on a backend for a CRUD++ application.  It's given me a lot more understanding of both worlds, and reminded me how hard it can be to move from one world to another. When I'm deep in a Red-Green-Refactor cycle, I can't stop to think about the impact of the latest OpenSSL vulnerability and how to plan a deployment of the fix to hundreds of servers, docker images and vagrant development boxes without loosing half a day in the transition.  It's also re-inforced to me the value of having both unit and integration tests."
devops,3e3h9p,pushmycar,2,Tue Jul 21 17:48:50 2015 UTC,Had I not moved out of the DC area recently I would have applied to work at Capital One.  They've adopted a new culture around software development and we will see many great things for on them in the next few years.
devops,3e3h9p,PhotonTurtle,1 point,Wed Jul 22 07:28:03 2015 UTC,Maybe instead of focusing on publishing open source code they could refine their deployment process such that they don't need to bring their damn site down for maintenance once a week.
devops,3e3h9p,musicandwords,3,Wed Jul 22 01:26:10 2015 UTC,I don't get the feeling this is is relevant regardless to the validity of the statement.
devops,3e3h9p,cerealcable,2,Wed Jul 22 02:51:32 2015 UTC,"I was being snarky. It's only relevant in the sense that I would question the quality of any products released by the DevOps team for a company whose release process involves locking people out of online banking for several hours every week like clockwork. Similarly, if someone drove up to you in a badly dented Toyota Tercel and told you they had invented a new car repair tool, you might be skeptical."
devops,3e3h9p,musicandwords,1 point,Wed Jul 22 05:25:04 2015 UTC,"I could definitely see this being useful as a casual ingress to the development pipeline, but I'd be worried about information fatigue if this were my primary method of understanding current state.   When it comes to traditional dashboards on a display I still favor Dashing. At $job, we only display information we care about: ""Is the build broken? Are the systems deployed properly? Are there any failed health checks?"" Everything's ok (light-blue) most of the time, but when something fails or is out of the ordinary it's extremely obvious (a third of the screen will change color to red-orange and list some details).  But I guess it comes down to how your org uses dashboards."
devops,3e3h9p,hopelessdrivel,0,Wed Jul 22 10:35:15 2015 UTC,"This is a cool dashboard; it's designed with microservices in mind so extending the ability of the different collectors to pull information from some other app's API is not too difficult.  This can give some great visibility into the health of platforms like Chef, Sonar, Jenkins, and binary repositories like Nexus or Artifactory. It's also useful when integrating with Git to track commits and code quality analysis. Neat tool."
devops,3e24um,droidvoice,3,Tue Jul 21 11:07:14 2015 UTC,"Check out Elastic Container Service  (ECS), it's what you want to be using instead of EB for container orchestration"
devops,3e24um,FetchKFF,2,Tue Jul 21 13:54:01 2015 UTC,"This.  If you're set on using Docker, this is the way to go."
devops,3e24um,scubasausage,1 point,Tue Jul 21 13:58:29 2015 UTC,"Why Elastic container, is this like an amazon alternative to Docker?"
devops,3e24um,FetchKFF,1 point,Tue Jul 21 15:12:45 2015 UTC,"It's Docker, with the addition of an image deployment agent and an AWS console GUI for orchestration. For easy use cases, it is the rough equivalent of pre-configured and hosted Kubernetes.  Its scheduler isn't as robust as Kubernetes or Mesos, but for your use case I'd wager it'd work just fine."
devops,3e24um,FetchKFF,1 point,Tue Jul 21 15:24:34 2015 UTC,"ok cool - i'll look into this, Beanstalk or manual config?"
devops,3e24um,scubasausage,2,Tue Jul 21 15:28:26 2015 UTC,"It's not a manual configuration, but it's different than Beanstalk (you specify a Docker image to be deployed, etc).  Looking at your OP and that you're using EB to provision RDS/postgresql in the environment, I think I was incorrect and you should continue to use EB for this (instead of ECS). ECS is designed to give you clusters running various containers as services on them, but it doesn't have the kind of point and click integration with RDS it seems you're looking for.  Using Docker with EB, you'll lose out on the workload flexibility and scheduling capabilities, but I don't think it will be a huge loss for you.  Back to your original question! If you're choosing between EB/Docker and orchestrating EC2+RDS+S3 yourself, pick EB/Docker. CloudFormation can be used to provision EC2+RDS+S3 or ECS+RDS+S3, but there's a learning curve that isn't likely to be of high value to you."
devops,3e24um,scubasausage,1 point,Tue Jul 21 16:10:50 2015 UTC,"I won't need any advanced features, CloudFormation isn't worth learning for me, I don't plan to redeploy similar infrastructure repeatedly.  I may opt for EB without Docker, RDS+S3+cloudfront sitting outside of it.  Thanks"
devops,3e24um,scubasausage,2,Tue Jul 21 16:56:33 2015 UTC,Why EB + Docker and not just EB?
devops,3e24um,FetchKFF,1 point,Tue Jul 21 12:08:48 2015 UTC,Dependencies - easier to have everything packaged nicely.
devops,3e24um,FetchKFF,1 point,Tue Jul 21 12:10:02 2015 UTC,What dependencies are worth the overhead of Docker that you can't install with an EB config?
devops,3e24um,FetchKFF,0,Tue Jul 21 12:28:50 2015 UTC,Not sure. Im not a tech guy. I'm reading it's easier to use docker. What is the overhead like for using a container?
devops,3e2zel,yourbasicgeek,1 point,Tue Jul 21 15:45:58 2015 UTC,"Any not in June, August or September perhaps?"
devops,3e2zel,brimston3,2,Tue Jul 21 16:52:39 2015 UTC,DevOpsDays is something of a series: http://www.devopsdays.org/  Assuming you're in the states... Nov: Silicon Valley/Detroit/Ohio
devops,3e2zel,hopelessdrivel,1 point,Wed Jul 22 01:04:08 2015 UTC,Why does Jenkins Conf count as a DevOps conference?
devops,3e2zel,stack72,1 point,Tue Jul 21 21:30:45 2015 UTC,Maybe because Gene Kim is keynoting it?
devops,3e2zel,brthinker25,1 point,Tue Jul 21 22:23:11 2015 UTC,Here's another one that might be worth adding to the list: http://devopsenterprise.io/about/
devops,3dyb0s,drawsmcgraw,6,Mon Jul 20 15:03:47 2015 UTC,"If it's for production, you are probably better off starting over. There are really no solid options, plus there may be attack vectors left unclosed by a brute-force upgrade versus a clean install.  OpenStack is a mess, and development is basically a bunch of disjointed developer fiefdoms with no scope or end in sight. My company dumped it entirely instead of upgrading from Icehouse; we have no plans to return."
devops,3dyb0s,traxislyte,1 point,Mon Jul 20 21:30:49 2015 UTC,Interesting. So what does your company use now that you've left Openstack behind?
devops,3dyb0s,muffinz0,2,Mon Jul 20 23:34:11 2015 UTC,Also interested in what they're doing now. My company is on track to start using OpenStack.
devops,3dyb0s,cerealcable,1 point,Tue Jul 21 02:12:32 2015 UTC,"I'm really curious because I think that's the problem here - to my knowledge, there's no comparable alternative for running a private cloud."
devops,3dyb0s,cstoner,2,Tue Jul 21 02:28:12 2015 UTC,"Well you could gift all of your revenue to VMware for a small ""cloud"" that's barely maintainable!"
devops,3dyb0s,cstoner,5,Tue Jul 21 02:44:52 2015 UTC,"The best course of action might be to piecewise build out fresh OpenStack nodes.  I would NOT jump each service to Kilo right away, but rather install Icehouse on CentOS7. Just to minimize the number of moving parts.  To the best of my knowledge, the only part of OpenStack that doesn't support HA is Neutron, meaning that you should be able to build out fresh services, migrate over to them, and then get rid of your old servers. You should even be able to live migrate your VMs.  One of the bigger ""problems"" would be with RabbitMQ (or, god forbid, qpid), since the versions offered by 6.6 and 7 would likely differ you might want to just use the version from the RabbitMQ repositories. That's probably a good idea anyway because of how fast RabbitMQ's development moves.  While you're at it, it doesn't sound like your OpenStack deployment is managed by Puppet/Chef/Ansible/Salt/FlavorOfTheMonth. I would take the opportunity to do that, because if you had done that work in the first place, this would have been a much easier process for you."
devops,3drn9y,alexcasalboni,1 point,Sat Jul 18 20:11:10 2015 UTC,Woah so it is possible to dockerize a freebsd jail.. Mind = Blown  =)
devops,3drn9y,logicallyinsane,2,Sun Jul 19 03:24:58 2015 UTC,"Yup, they even use the Linux compatibility layer to make a large # of existing containers work on BSD.  Instead of namespaces they use jails, and they use the ZFS driver for the COW file system that's needed by layering. Good usage of BSD tooling!"
devops,3dr1rk,SouthernAirTemple,10,Sat Jul 18 17:04:58 2015 UTC,"I do serverspec (actually I've filed and merged 2 PRs against it, too, so there IS github activity). I also use the serverspec sensu check so the same test can act as monitoring."
devops,3dr1rk,Enoxice,1 point,Sat Jul 18 19:17:50 2015 UTC,"serverspec is really pretty awesome. no agents or software needed, works over SSH.  our compliance teams like to use tests written in IBM Endpoint Manager, but its Relevance language is just so damn clunky."
devops,3dr1rk,hybby,1 point,Sun Jul 19 11:14:23 2015 UTC,Yep. The project is highly active and maintained; the maintainer just doesn't have the issues feature active anymore.
devops,3dr1rk,mattstratton,3,Sun Jul 19 12:25:32 2015 UTC,"Really all just depends on what the server is/does.  A web server could host an endpoint that serves up a little bit of health JSON, or you could use selenium or phantomJS or something to log into a webserver and do some customer-facing functionality smoke-tests.  A database MySQL server could be seeded with a health database that just maybe has a single table with a single row with a unique value, and your tests could make sure a SELECT returns that value.   Stuff like that."
devops,3dr1rk,steveOps,3,Sat Jul 18 17:12:07 2015 UTC,"Run a series of unit tests against the server when it's done being built, using a framework like MiniTest to make assertions about the expected state of the system, and then either pass or fail the system based on testing against the assertions. Use the tests from step 1 with your monitoring system to continuously assert the good working order of your machine. When things break on running systems, write unit tests against it and incorporate them into steps 1 & 2."
devops,3dr1rk,Magnus919,1 point,Sun Jul 19 00:57:53 2015 UTC,"We have both custom health pages and Nagios monitoring baked into the run, so if they both appear green we can assume everything went smoothly."
devops,3dr1rk,TempranilloStorm,1 point,Sun Jul 19 19:00:25 2015 UTC,"add it to monitoring. imho if monitoring can't tell you if the server is built as expected, you need more monitoring."
devops,3dr1rk,sirex007,1 point,Sun Jul 19 21:03:56 2015 UTC,puppet agent -t
devops,3dpguc,maplesyrupismajestic,6,Sat Jul 18 04:43:13 2015 UTC,"If it directly effects me, talk the person about problematic behaviors if they're my peer. If lower on the totem pole but  not a direct report, or if they don't listen, bring it up to manager.   If it isn't personally effecting me I ignore it. I may not know the whole picture, or I could be right but I err on the side of leaving it to people directly effected to call it out."
devops,3dpguc,marmot1101,2,Sat Jul 18 05:14:40 2015 UTC,"And what if, after talking to my manager about it (as I am directly affected by it), and my manager knows (and has promulgated the situation to those above them), I'm still at loose ends?  I guess I don't really know how to present our collective dissatisfaction to [the individual's] performance in a way such that it would both accurately bring them up to speed on our views as well as make known how much we respect their capabilities.  I don't want them to loose their job, but I also need someone who is competent – a competency which I know they're capable of."
devops,3dpguc,marmot1101,2,Sat Jul 18 05:28:30 2015 UTC,Have you spoken directly with the person? If not that's probably your last recourse.  If you end up having to speak with the person it is best to try to be tactful. Try your best to speak from the I. Let them know how their ineffectiveness is effecting you without berating them. As soon as you speak from the you(you need to...) they're just going to tell you to pound sand. That's human nature.   If that still doesn't work you may want to polish your resume because you're out of options. Going up the flagpole on a personnel issue isn't great for your career.
devops,3dpguc,fhayde,2,Sat Jul 18 13:38:17 2015 UTC,"This is really good advice in general. Aside from showing that you're capable of handling situations without the need for intervention, you're not presenting more problems for others to solve. I agree, it's better to walk away than chase an issue that involves someone else; if there's no constructive way to resolve the situation, what else will the company have problems with solving?"
devops,3dpguc,uugengiven,2,Sun Jul 19 23:20:53 2015 UTC,"If your company doesn't have a culture of peer level feedback, it is hard to do. And by hard, I mean scary. Since you respect their capabilities, it is easier for you than if you thought they were just worthless and needed to go. Make sure you're not piling on and try to limit how many things you're bringing up at one time. Go for individual items, then when they fix them, give them positive feedback on fixing that and then go for the next problem area.  The way my company does it is with STARs and STAR/AR which sounds absurd but it gives you a good framework to hang feedback onto. It's basically a 3 part bit - You give the situation/task (ST), the action they took (A) and the result of their action (R). That's for when they've done something good. You add an alternative action/result (AR) if it's something they did that didn't work out and you've got some specifics for them on how to fix it. The thing is, you can't only give out negative or positive feedback, you have to balance it and make sure when you're giving positive feedback, it is for real things, not just random stuff, so when you give negative (developmental) feedback, they'll actually respect what you're saying.  I did up a big blog post on how to talk to people (https://cultureops.wordpress.com/2015/06/15/talk-to-people-a-how-to/) - that may help as well, since this question is now more of a ""how do bring this conversation up and have it go well"" rather than a ""how do I make my manager fix this"" kind of thing. Good luck, it's not easy to have these conversations and the longer it goes on, the harder it gets."
devops,3dpguc,ChrisTheRazer,1 point,Sat Jul 18 19:12:08 2015 UTC,Thank you for your input.
devops,3dpguc,dustinmm80,3,Sun Jul 19 02:35:59 2015 UTC,"This would depend a lot on whether they're enthusiastic, and gradually improving, just incompetent, or just not bothering.   What is it here?"
devops,3dpguc,fhayde,1 point,Sat Jul 18 10:48:20 2015 UTC,Too broad. What do you mean exactly?
devops,3dpguc,tobozo,1 point,Sat Jul 18 05:13:31 2015 UTC,"I think situations like this are interesting; our first inclination is to try and modify the behavior of the co-worker so it's more inline with what our expectations are but I really question if that's the best course of action.   The first thing I would do is take a step back and examine the causal nature of this person's position within the company.   Does their competency affect other workers? If so, that, to me, is a red flag that something needs to be done about the workflow of the company. In most cases you'll find that when someone else can impact your work, or the work of others, it's because there is a contrived sense of authority that is established for the sake of either liability or process. Does that step in the workflow really need one person approving everything, or is that step there to justify another person's involvement and give them work to do? Does it make sense to have work piling up behind a QA backlog because engineers are stuck waiting on nothing more than a thumbs up or down before they can move on to their next task? Does restricting access to resources by role or seniority provide an actual benefit or just a sense of security that in all actuality may be false?  I believe that a good workflow is simple and promotes a good unobstructed flow so that anyone can be productive and do work without having to depend on someone else to progress forward. It can be difficult to achieve, but it's much easier than trying to erect a castle of policy to create narrow channels of behavior that are intended to eventually result in the desired outcome; there's billions of variables that are in play and the resulting game of cat and mouse causes empires to fall, crumble, and burn.   If they're not impacting others, I think the next thing I would consider is whether or not expectations have been discussed, communicated, and agreed upon by anyone involved. Some people, especially managers and bosses, balk at the idea of having to ask people to agree with the expectations they seem to think are owed to them inherently by the act of being employed. Employment is a relationship, not a contract of servitude, and like with any relationship you must have good, clear, honest communication that makes any expectations explicit and well defined. I have been blown away by the number of times people genuinely did not realize that something was expected of them as part of their job. You can argue that some things should be common knowledge and some people shouldn't be told they have to do things, but keep in mind that what is common knowledge to some, is like magic and ancient wisdom to others. Avoid the confusion and frustration and either as a peer or through a manager make sure the person clearly understands what the company is expecting from them. It's also good if that person wants to discuss part of those expectations because they cause them concern. Don't be afraid to challenge those expectations, wouldn't it be easier if someone said up front that they won't be able to meet certain expectations and doesn't want to commit to them instead of finding out later by being let down? The latter only ends in heartache and burned bridges unfortunately, and can easily be avoided with clear communication and honest, open, tolerant discussion.   One more thing to consider is if that person might be going through some changes or hardships in their life. A lot of companies treat employees like unchanging machines and reality could not be further form the truth. There's all kinds of work related causes for behavioral changes such as burnout, isolation, being marginalized and there's even more reasons outside of work. The worst employee is still a human being and deserves to be treated with dignity and respect. Sometimes that means engaging in conversation and sometimes that means understanding a person needs some space and time to deal with what's going on. A good company realizes that the long term gains from treating people like people outweigh any short term inconveniences that may arise from a reduction in productivity and will be understanding and supportive of any effort that allows that person to regain their focus and contribute to the collective goals of the company once again.   Finally, and this is something I have to tell myself at times as well, if the behavior of another person doesn't impact your work, mind your own damn business! There's always things you can't see going on, and imposing your will may just make matters worse.   Be supportive, understanding, and forgiving and you'll find the same treatment extended to you when you need it, because the question is not ever if you will need, it's always when. If you can put yourself in their shoes and ask what you would want to have done for you given the circumstances you're aware of, that can become an incredibly powerful tool for working with and managing others."
devops,3dpguc,stox,-1,Sun Jul 19 23:17:04 2015 UTC,A manager is a person that achieved it highest level of incompetence: you could help your co-worker get a promotion (and get out of the way).
devops,3dke6k,epowell101,1 point,Thu Jul 16 23:52:26 2015 UTC,I cant wait to see a whole suite of containers like in public like this one!
devops,3djmq6,ElasticBox,5,Thu Jul 16 20:21:16 2015 UTC,"One of the biggest values I see is that sales engineers see a lot of the ""real world"" or ""behind the firewall"" stuff. Engineers often live in a cozy development space that doesn't include some of the nutty restrictions on a corporate environment (ssl-decrypting proxies, user home directories on network shares, etc) so I find that as an SE, communicating this back to our devs helps a ton in making the product more delightful for those types of users.   Depending on the company, your SE's can be highly technical folks, too. Sure, some SE's are just ""deck jockeys"", but I know that one of the biggest values I provide both to my customers, and to my internal product devs, is the empathy for someone using the product, as I've been there before.   Well, that and my skill with animated gifs in company chat rooms. That's really my main value-add at Chef ;)"
devops,3djmq6,mattstratton,2,Thu Jul 16 23:37:05 2015 UTC,"But, can't you see, the customers are WRONG! Wrong and stupid."
devops,3djmq6,RAL_9010_POWER,1 point,Fri Jul 17 09:12:34 2015 UTC,"Well, that and my skill with animated gifs in company chat rooms.   See you say that now, and I've tried including this skill on my resume, but I think companies are looking for a github repo of relevant gifs and an automated test suite of common reactions that result in said gifs to demonstrate competence."
devops,3djmq6,SouthernAirTemple,3,Fri Jul 17 14:49:00 2015 UTC,"You laugh, but I have that:  https://github.com/mattstratton/devlolops"
devops,3djmq6,mattstratton,1 point,Fri Jul 17 18:10:02 2015 UTC,Well TIL about Text Expander. This changes EVERYTHING!
devops,3djmq6,SouthernAirTemple,1 point,Fri Jul 17 19:44:07 2015 UTC,"Awesome, I made something similar with a hubot script which will grab a gif based on a keyword from a predefined list (hubot animate just wasn't cutting it for me)."
devops,3djmq6,deadbunny,1 point,Fri Jul 17 21:15:53 2015 UTC,"Yeah, I have an updated version of my talk where I explain that trusting giphy is a recipe for disaster. Curate your gifs, yo. Which is what you're doing an I applaud :)"
devops,3djmq6,mattstratton,3,Fri Jul 17 22:05:01 2015 UTC,Always be closing/deploying.
devops,3djmq6,noydoc,6,Thu Jul 16 23:03:51 2015 UTC,Java is for deployers?
devops,3djmq6,smeagolgreen,1 point,Thu Jul 16 23:15:06 2015 UTC,Have you made your decision for Christ?!
devops,3djmq6,fhayde,1 point,Sun Jul 19 22:32:52 2015 UTC,"Pain points and priorities I think are the best lessons to learn from sales.   When someone has to work weekends to make sure that new product or feature gets pushed, there's a good chance it's because it's been sold in some way. The better you can understand what is being sold and how and to who, the easier your job can be by focusing on the right things at the right time.   It can also reduce the number of change requests/iterations you have to go through if you understand how something is being used, and watching the people who sell the product and how they interact with customers/users can be extremely revealing."
devops,3dj2h6,bradtech,0,Thu Jul 16 17:54:29 2015 UTC,"You can actually deploy directly using Chef in Visual Studio - http://blogs.msdn.com/b/visualstudioalm/archive/2014/07/08/how-to-trigger-deployments-to-chef-managed-environment-from-release-management.aspx  I also know there is a cookbook under development by a buddy of mine for deploying .NET apps, which will be pretty rad once it's done :)"
devops,3df5ix,alexcasalboni,5,Wed Jul 15 20:01:14 2015 UTC,Or IGNORE CF and use Troposphere or Terraform.
devops,3ddpm6,philippeowagner,2,Wed Jul 15 13:45:15 2015 UTC,https://github.com/3bot/3bot
devops,3dc1aq,5kKate,4,Wed Jul 15 02:30:31 2015 UTC,"They needed to use ""CIO"" more in that article."
devops,3dc1aq,Semisonic,1 point,Wed Jul 15 03:30:51 2015 UTC,Bad article is bad.
devops,3d9tw6,thecodethinker,2,Tue Jul 14 16:56:29 2015 UTC,"Depends. I'm a fan of haproxy -> Varnish -> app server which we use heavily in our stack. haproxy provides ssl termination, websockets, and generally acts as a content router. Varnish is a caching reverse proxy which protects the app, handles TTL on content, etc. Lastly the app. It's a little complex, but the flexibility is amazing."
devops,3d9tw6,ramindk,1 point,Tue Jul 14 18:07:46 2015 UTC,"This is a great question, and one that I have pondered from time to time.  I wish I could contribute more - I do like what ramindk says, HA proxy on the perimeter, and each app stack has it's own instance of varnish in front of it. I think it takes a layer of complexity out of it - as you can then treat your app stack as just the one system, even if you have 8 servers running it - I am looking forward to watching the video that montecr1tso mentioned... in fact, I'm going to bump him/her to post the link :)"
devops,3d9tw6,misteritguru,1 point,Wed Jul 15 09:29:32 2015 UTC,It's worth noting that Nginx can handle the job of both with 1.9. Varnish can be a big resource hog and also a pain to configure.
devops,3d9tw6,cryonine,1 point,Sun Jul 19 01:02:31 2015 UTC,Varnish is only a resource hog if you don't manage its limits in the config. This is a problem with any cache. I'd agree that VCL is daunting.   I've never been a fan of Nginx. I always thought it was trying to do too many things to do them all well.
devops,3d9tw6,ramindk,1 point,Sun Jul 19 21:30:20 2015 UTC,"Depends on the application. We were heavily unsatisfied with the performance. I would also say your reasons for disliking Nginx are kind of misguided, IMO. They're nothing wrong with doing a lot of proxy-related functions, and Nginx does do them well. If it did a lot poorly you'd have a point, but that's not the case."
devops,3d9tw6,cryonine,1 point,Sun Jul 19 21:45:57 2015 UTC,https://www.nginx.com/products/feature-matrix/  I get all the features (several of which I'm using in production) in Nginx Plus from my stack for free. Do you?
devops,3d9tw6,ramindk,1 point,Sun Jul 19 22:34:39 2015 UTC,"Which features only available in Plus are you using in production?  It's worth noting many of those features that were formerly plus only are now in standard with 1.9.  To answer your question though, we converted from HAProxy to Nginx because we saw better performance overall and it fit our use case.  If it doesn't fit your use case, then you made the right call using another tool.    Seems you missed my point though.  My point was, not liking Nginx because it is "" trying to do too many things to do them all well"" is a horrible reason to hate a product."
devops,3d9tw6,cryonine,2,Tue Jul 21 17:33:39 2015 UTC,What are you clustering?   Can you use service discovery methods? If not there's hacky ways to use DNS in front of reverse proxies.
devops,3d9tw6,OBXBeachBum,1 point,Tue Jul 14 17:04:29 2015 UTC,"What amount of service disruption are you willing to tolerate? What's your recovery time objective (RTO)?  If you're not risking millions of dollars a minute in revenue, a warm standby is probably fine. Configure another reverse proxy, add an IP Alias interface to each proxy, assign the same IP to the interface on each host. Bring up the alias on your online proxy, and down on the offline proxy.  The RTO on a setup like this should be about 30 minutes; however long it takes you to get an alert, wake up, and flip the alias.  If you need a faster RTO, use keepalived. Keepalived will automatically flip the alias for you. RTO would be 10 seconds or better, but it's a bit more complex and a misconfiguration induced outage is more likely.  Need a faster RTO than that? You're in the domain of the load balancer appliance."
devops,3d9tw6,burning1rr,1 point,Tue Jul 14 17:50:08 2015 UTC,Need a faster RTO than that? You're in the domain of the load balancer appliance.   How does an appliance fix that? (i.e. what happens when the appliance has a hardware problem?)
devops,3d9tw6,BraveNewCurrency,2,Tue Jul 14 22:02:45 2015 UTC,Nothing inherent to using an appliance; it's just that when you're looking for extremely high levels of availability in the networking world you're usually looking at buying proprietary solutions.
devops,3d9tw6,burning1rr,1 point,Tue Jul 14 22:28:13 2015 UTC,I think I found the video - Billion User Cache :)  https://www.youtube.com/watch?v=MKgJeqF1DHw
devops,3d9tw6,misteritguru,1 point,Wed Jul 15 10:01:58 2015 UTC,"tl;dr - Load Balancers (2x)-> Reverse Proxies (2+) -> Web Servers (2+)  There's a few different ways of doing this, and as always ""it depends"" on what your platform is going to run.   If you're wondering how many reverse proxies to have, chances are you know uptime is important, so build two. The question then is, how do you set that up? As a starting point, you could build two Reverse Proxies which failover to each other (hot-standby) and that are configured with all of the available web-servers. Then you can either manually fail them over or run keepalived to manage that automatically, as already mentioned by /u/burning1rr's.  If your platform needs to scale out it's proxies, you could set them up behind an HAProxy pair or something similar. The failover mechanism would also be configured here instead of on the proxies. In my experience, it's easier to design the platform this way from the beginning than to try and join them in later once it's in production.  There are a heap of different ways to design these things and even more ways of configuring each layer of it (with their own pros and cons). If you have more questions or would like some help on your architecture or build, let me know - I do this for a living because I love it :)  NB: HAProxy does not cache anything, it is only a load balancer.  EDIT: What do you intend doing with your DB Servers as well? Have you looked at MySQL pairs and Memcached/Redis?"
devops,3d9tw6,finalduty,1 point,Wed Jul 15 11:12:02 2015 UTC,Since we're just a small start-up we're just going to have 2 redundant mongodb servers up.
devops,3d9tw6,montecr1sto,0,Wed Jul 15 13:21:18 2015 UTC,"In general, it is better to avoid using more than one load balancing method per layer. As both nginx and haproxy operate in L4/L7, you probably should consider some lower level load balancing, maybe something like round-robin DNS. But that all depends on many factors, scale of your solution, etc. You can look up one of recent facebook vids about how they do load balancing, it was quite informative (can't find it now, using mobile)."
devops,3d9tw6,misteritguru,1 point,Tue Jul 14 17:13:41 2015 UTC,"Hey person! :) I noticed you mentioned a video of how Facebook do load balancing ..... I want the link to me! Sorry, in my excitement my linguistic skills left me, can you post a link please?"
devops,3d9tw6,misteritguru,2,Wed Jul 15 09:30:29 2015 UTC,Is this is link you meant? https://www.youtube.com/watch?v=MKgJeqF1DHw Building a Billion User Cache :)
devops,3d9tw6,montecr1sto,1 point,Wed Jul 15 10:00:37 2015 UTC,"Yep, that's it!"
devops,3d9tw6,acid_sphinx4,1 point,Thu Jul 16 09:17:38 2015 UTC,"Keep in mind 50% of facebook does not work at any given moment. It doesn't SEEM dysfunctional, but many of the little used features are in a constant state of brokenness. If I were looking for a poster child for CI, it would not be facebook."
devops,3d9tw6,tcp22,0,Sun Jul 19 17:38:51 2015 UTC,"Low DNS TTL, DNS Round Robin and 6 - 12 reverse proxies would seem far more preferable..."
devops,3d7u2w,trolliloquy,2,Tue Jul 14 04:46:52 2015 UTC,"Hi! We're building exactly this with Convox. We provide a hosted service, but it's also open source, and you can run it for free in your own account (check out the Launch Stack button in our kernel README). Please feel free to PM me here if you have any questions."
devops,3d7u2w,mattmanning,1 point,Tue Jul 14 18:47:42 2015 UTC,https://atlas.hashicorp.com might address some of your wish list items...  And Deis comes to mind: http://deis.io/overview
devops,3d7u2w,srenatus,1 point,Tue Jul 14 07:21:20 2015 UTC,"I part of a project that might fit your need : http://www.cloudslang.io/  It is quite new, so some of the features are still missing, but it is server env agnostic..."
devops,3d7u2w,meirwah,1 point,Tue Jul 14 11:26:47 2015 UTC,Jenkins is self hosted and server agnostic. Since it's a task queue you can run any automation stack you can think of. Pretty robust 3rd party integrations to boot.
devops,3d4ifx,joshlove,4,Mon Jul 13 13:34:02 2015 UTC,"Adam Jacob used this same analogy in his keynote at ChefConf this year, check it out.  https://www.youtube.com/watch?v=_DEToXsgrPc"
devops,3d4ifx,dustinmm80,2,Mon Jul 13 15:49:21 2015 UTC,"Thanks for sharing the link, I'll check it out!"
devops,3d4ifx,Devtotheops,3,Mon Jul 13 17:48:12 2015 UTC,"I feel like you can say this about almost any industry/artform/actionable verb. Take lumberjacking as an example.   Some lumberjacks want the culture, some just want the effectiveness that some of the tools provide and while you are lumberjacking, it means different things to different people at different points of the lumberjacking journey.   Ah, here I am just ranting about lumberjacks again...."
devops,3d4ifx,saggybolsack,3,Mon Jul 13 14:04:38 2015 UTC,"Ah, yes. The smell of fresh-cut timber! The crash of mighty trees!"
devops,3d4ifx,Devtotheops,2,Mon Jul 13 19:51:36 2015 UTC,Fantastic! This made my morning.
devops,3d4ifx,edward_snowedin,5,Wed Jul 15 14:18:50 2015 UTC,"i really hate everything about this post. will we look back in 10 years and ask ourselves, ""how did anyone take the devops movement seriously when we talked about ninjas and rockstars all the time"""
devops,3d4ifx,zirpu,3,Mon Jul 13 15:15:22 2015 UTC,All thinking and language is via metaphor and analogy.  Try communicating with the other monkeys without using metaphors or analogies.
devops,3d4ifx,dustinmm80,4,Tue Jul 14 14:00:20 2015 UTC,"Analogies can be useful. The more the better, I say, because then we have more to choose from when trying to frame the DevOps discussion for different audiences.  I think you're applying your frustration towards the 10x/ninja/rockstar hiring craze incorrectly here on account of OP using a martial arts analogy."
devops,3d5dc5,uriwo,3,Mon Jul 13 17:33:10 2015 UTC,"This article didn't have any content.   With transaction logs and journaling mechanisms, crash-consistent snapshots will work most of the time.    Why would he say that?   CPM is sold on AWS Marketplace with prices ranging from $62.5/month to $500/month.    Oh."
devops,3d0awi,uriwo,4,Sun Jul 12 12:21:01 2015 UTC,My biggest concern would be vendor lock in. Sure it might have lots of other benefits but that's still quite the ability to lock you in.
devops,3d0awi,cerealcable,4,Sun Jul 12 17:34:52 2015 UTC,"I hear you there, but you'll be locked into any managed API service to a degree. They at least support Swagger."
devops,3d0awi,Nathanielks,1 point,Sun Jul 12 20:48:47 2015 UTC,"Yep. Given that azure managed api and, really, any managed API supports swagger, you aren't starting for scratch every time. Certainly, you won't have lambda elsewhere if you choose to use that as a backend. But if you use a real application, you will experience only minor lock-in.   But, IMO, if you're only making use of ec2 and foregoing all the cool shit AWS provides in order to avoid lock-in, you are throwing time and money away."
devops,3d0awi,Enoxice,2,Mon Jul 13 09:01:56 2015 UTC,"I really like the idea of doing all the work in Lambda. API gateway + Lambda + JS/CSS/HTML ""client"" hosted on S3."
devops,3d0awi,neoice,1 point,Sun Jul 12 16:42:04 2015 UTC,"Vendor locking, no thank you. This might save you a few hours when you start your project, but won't be good nor cheap in the long run."
devops,3d0awi,Garo5,-1,Mon Jul 13 05:42:26 2015 UTC,"*Scroll*  ""Amazon API *Giveaway*""  *Scro--* ""Wait. Maybe whatever they're giving away won't expi--""  ""...Oh. D:""  ""...Wait, this might actually be interesting."" *Mental note*"
devops,3d25c7,idunno2468,7,Sun Jul 12 22:30:35 2015 UTC,"some sort of trigger that hits your ticketing system's api and creates an incident ticket in one of your queues.  still doesn't guarantee that it'll get done before that disk fills up, but everyone checks their queue daily, right?  ...right?!"
devops,3d25c7,hybby,3,Mon Jul 13 00:04:30 2015 UTC,"Presumably there's also a ""high severity alert"" for when the drive is going to fill sooner."
devops,3d25c7,tedivm,1 point,Mon Jul 13 01:21:58 2015 UTC,"This is probably a silly question, but what do you consider your ticketing system?  We alert generally from system metrics/application into pagerduty, which doesnt really feel like a ticketing system."
devops,3d25c7,tedivm,3,Mon Jul 13 01:08:16 2015 UTC,I say suck it up and buy a Zendesk account for internal support. Having an actual ticketing system will make your life a lot easier.
devops,3d25c7,deadbunny,2,Mon Jul 13 01:22:36 2015 UTC,"I'd recommend Phabricator if it's for internal IT only, it's kinda like a FOSS version of the Atlassian suite and ties in with a few things like git (closing tickets with commits is great), we also use it for code reviews and kicking off Jenkins builds of out CM stuff which is pretty neat. Lots of functionality packed into a decent bit of software."
devops,3d25c7,saggybolsack,3,Fri Jul 17 21:27:15 2015 UTC,"What /u/batouchu and /u/Christopher_Wood said. Warning are just that and shouldn't justify waking someone up. Your monitoring team should know better.  I like to start the day checking syslog reports and nagios warnings and alerts. Early morning is the best time of the day to take care of not-so-urgent stuff like that.  Maybe you should task someone with sending a summary report before 9 or 10 of all the small problems and how long they have been going on. It should create enough momentum for someone to take care of them after a while.   email doesn't really get acknowledged/responded to since its sent to a group   If that's emails from your monitoring platform, I could understand, those things are so verbose nobody reads them after a while. If that's email from the monitor staff, that's a different matter."
devops,3d25c7,Christopher_Wood,2,Sun Jul 12 23:36:33 2015 UTC,"With a similar severity of issue I did the following:   alarm in the monitoring system instructions for that alarm said that the NOC should contact the on-call person during office hours   The NOC had been trained that alarm->call_now() but had also been trained to follow the procedure in the alarm handling field. They all got used to dealing with office hours issues in office hours.  For a smaller place I would recommend a monitoring dashboard and have a person responsible for handling that. One technique I heard from a past manager was that the staffer of the day would hand over a signed list saying that the staffer had reviewed the alerts and confirmed that none of them affected customer service or were at risk of affecting customer service.  Finally, some kind of feedback loop. If this was a preventable issue (log file growth) that needs to be a ticket to fix whatever caused the alarm."
devops,3d25c7,batouchu,1 point,Sun Jul 12 22:44:37 2015 UTC,"We're using nagios and check_mk, so YMMV, but basically we have alerts that will show only on the dashboard (X servers failing puppet runs for instance), pretty much everything at a warning level but not critical will be on the dashboard, etc.  Basically our rationale is the same than yours: do we want to wake up someone over this?  The dashboard works pretty well for this, gives immediate visibility without nagging at all times."
devops,3d25c7,sirex007,1 point,Sun Jul 12 23:07:11 2015 UTC,"pager duty to a different rotation which is essentially the on call guy or noone, write a script to change the notification endpoint to the engineer's email in the morning and back to nothing at the end of the day. - worked for us."
devops,3d25c7,cddotdotslash,1 point,Sun Jul 12 23:43:44 2015 UTC,"PagerDuty is for important things like ""the database is at 90% disk space and is going to crash in two hours if we don't fix it."" Everything else goes to an email distribution list. If it's a workday, it's usually taken care of by EOD. If it's a weekend or evening, it's usually fixed the following workday."
devops,3d25c7,Garo5,1 point,Mon Jul 13 03:30:32 2015 UTC,"We use the following escalation levels:  Disaster: production halted, escalate 24/7  High: production in danger but not halted. Escalate during daytime.  Anything below this: no escalation, techops is expected to find these by looking on the Zabbix dashboard during their normal daily routine.  With this rule there would be an Average level alert a few days before it would go High and eventually critical unless it's fixed."
devops,3d25c7,combuchan,1 point,Mon Jul 13 05:48:47 2015 UTC,"PagerDuty doesn't have to call you, you know.  Texts from low severity services are great, as I'm likely to be paying a lot more attention to my text messages than work email and it's not nearly as obnoxious as the phone ringing--I'm likely to sleep through my text messaging notification noise.    In lieu of PagerDuty sending a text, most mobile phone services have an email address <-> SMS gateway.  Mine is [my phone number]@vtext.com--this is for Verizon."
devops,3d25c7,TempranilloStorm,1 point,Mon Jul 13 06:50:44 2015 UTC,"email doesn't really get acknowledged/responded to since its sent to a group   What? This doesn't make any sense. If there's something that you know will cause an issue soon, why wouldn't anyone respond with something like ""removed files, alerts cleared"" or something just so everyone is aware?"
devops,3d25c7,deadbunny,1 point,Mon Jul 13 13:32:11 2015 UTC,"Probably a case of it getting sent to a group of people and everyone going ""someone will pick that up"" then no-one does, we have a shared inbox for stuff like this and you delete/archive once you've done the task, works nicely for us but may not work everywhere."
devops,3d25c7,eurica,1 point,Fri Jul 17 21:24:02 2015 UTC,"If you're already a PagerDuty user, contact support@pagerduty.com with some more details, they have a couple of tricks up their sleeves that might work for your use case."
devops,3d25c7,jfalcon206,1 point,Mon Jul 13 23:04:22 2015 UTC,"New Relic and Slack incoming webhooks.  New Relic monitors the system and if it breaches a threshold, it notifies via slack.  For other monitors where we want to know when it breaks, we setup a separate alert that goes into ticketing/alarming/phone calls."
devops,3d25c7,gmuslera,1 point,Tue Jul 14 04:38:54 2015 UTC,"If doesn't implies an immediate action, then shouldn't be an alert. Try to monitor trend, not if passed a fixed threshold, you would be out of disk space by the time you can check/fix it at work? The speed of change matters, that should be what decide to send an alert or not."
devops,3d25c7,deadbunny,1 point,Tue Jul 14 17:47:25 2015 UTC,"We fire off an email to a specific team shared inbox and fire a message off in slack as well, usually works fine as well all use email clients which can do more than one account at a time easily compared to something web based.  The way we use the shared inbox is is once you deal with it you delete it which gets around the ""someone else will pick it up"" issue you get with sending it to a group, I usually check it when I get in and through out the day when ever I rebuild my vagrant environment as that takes ~5-10mins so I can usually kill some time dealing with the unimportant stuff before it becomes important."
devops,3d25c7,cryonine,1 point,Fri Jul 17 21:21:23 2015 UTC,"We use VictorOps with various routing setup. Non-critical alarms go to a route that doesn't notify the on-call unless it's M-F during normal business hours and that queue never goes critical. For alerts that are important they go into a normal escalation route that alerts on-call then follows an escalation path from there until resolved. It's worked well for us so far, though we're considering OpsGenie since it's more robust and has a full API."
devops,3cvoqq,oefig,3,Sat Jul 11 04:07:13 2015 UTC,"I've said it here before and I'll say it again:  Capistrano is an excellent deployment tool.  The DSL is ruby, but it can deploy anything."
devops,3cvoqq,combuchan,3,Sat Jul 11 20:38:16 2015 UTC,"Have you looked at Ansible? I'm curious to know if there are features it offers over it.  Honest question. I'm well versed in Ansible, but only have basic familiarity with Capistrano."
devops,3cvoqq,smeagolgreen,2,Sat Jul 11 21:47:19 2015 UTC,"I have not, but I hear that it's probably one of the better configuration management tools as it works across multiple platforms the best.  I did most of my work in Chef, and I've gotten a bit rusty about that.  From my experience, configuration management tools aren't the best for deployments, but I could be wrong about that.  Any thoughts?"
devops,3cvoqq,combuchan,1 point,Sat Jul 11 22:07:37 2015 UTC,"I agree CM tools often aren't suited to be deployment tools. They do a passable job if your application is deployed in the form of a single installer package, but that so often isn't the case. Especially for interpreted languages, it's so much easier to just say ""dump this git repo to disk here"" than it is to get a package and installer that works as you'd like.  On my team we use straight-up Puppet to deploy ""shrinkwrapped"" applications like Jenkins or Sensu, but - as I mentioned in my comment elsewhere in this post - we start using things like Elastic Beanstalk, docker, or our own vagrant-orchestrate (kind of acting as an ultra-flexible Capistrano) when deploying some of our own stuff.  I'm also a fan of the way Capistrano does things, and last week I started formulating some thoughts on a way to use Cap (or something that behaves like it) as a Vagrant provisioner so I can use it to deploy things to real servers with vagrant-orchestrate. That way I don't need to take the explicit ruby dependency (outside of vagrant) and can keep all of the provisioning and deployment stuff inside a Vagrantfile instead of maintaining the separate Capfile."
devops,3cvoqq,Enoxice,2,Sat Jul 11 22:33:36 2015 UTC,"It looks like Chef, Ansible and Salt all have robust git deployment features.   Are they missing features you need/use?"
devops,3cvoqq,smeagolgreen,1 point,Sat Jul 11 23:44:45 2015 UTC,What are Ansible's git deployment features? Serious question. I just started playing around with it a few weeks ago.
devops,3cvoqq,snaaaaaaaaaaaaake,1 point,Sun Jul 12 00:20:50 2015 UTC,"http://docs.ansible.com/git_module.html  That is the git module, but with Ansible, you can always do a hack use of the 'shell' module for situations/commands you need to run that are unsupported by Ansible modules.  - name: Run oddball shell parameters   shell: cat somefile >> someotherfile"
devops,3cvoqq,smeagolgreen,1 point,Sun Jul 12 00:32:42 2015 UTC,Thanks. I'm familiar with shell. Had to get to know it to get around Ansible's lack of support for running Python 3 code.
devops,3cvoqq,snaaaaaaaaaaaaake,1 point,Sun Jul 12 11:14:46 2015 UTC,"Well mostly the problem with those are that we don't use any of those tools. But Puppet has one, too, kinda - vcsrepo. And we use that for a couple of third-party tools that are not packaged and we fetch from github. It doesn't provide the nice Capistrano structure, though, unfortunately."
devops,3cvoqq,Enoxice,2,Sun Jul 12 01:20:54 2015 UTC,"We use Jenkins extensively at work--my primary responsibility is managing a 29-node farm.  Jenkins has LOTS of job data, workspaces, and configuration information spread across its working directory in a giant clusterfuck.  How do you use CM in that case with Jenkins?"
devops,3cvoqq,combuchan,1 point,Sun Jul 12 04:26:35 2015 UTC,"We have just under 100 nodes and god-knows-how-many jobs, all owned by different people on different teams. I don't typically work on it, but I do have a passing familiarity.  We use the jenkins puppet module to control the version of Jenkins and installed plugins. The role also manages various non-config.xml config files (like ones for various plugins that don't live in config.xml).  The jobs themselves are not managed by Puppet. Different people do different things to manage their jobs - job DSL, workflow plugin, just posting config.xmls to the API, or some people still just do it through the UI."
devops,3cvoqq,Enoxice,1 point,Sun Jul 12 12:20:29 2015 UTC,"Years ago, I had a poor experience trying to use Puppet for deployments, however if you have some programming licks, MCollective allows for some expandability on that front.  I have had great experiences using Ansible for deployment and configuration management.  Its orchestration capabilities are really powerful. I was asking about Capistrano to see if there were methods/features it had that I should possibly attempt to emulate in our Ansible implementation.  We have little (or zero?) ruby usage or expertise in our organization, so using something Ansible or Salt makes the most sense for us."
devops,3cvoqq,smeagolgreen,1 point,Sat Jul 11 23:20:22 2015 UTC,"Without experience with both, I can't volunteer any information on Capistrano v ansible, but I'm happy to answer anything I know about cap."
devops,3cvoqq,combuchan,1 point,Sun Jul 12 02:59:39 2015 UTC,"I'll +1 this, we use cap for tons of stuff and it's been pretty great. We're still on cap 2 though, so we'll have a little pain moving to cap 3 from what I hear."
devops,3cvoqq,joshlove,1 point,Tue Jul 14 17:27:48 2015 UTC,Where are you deploying to? What's the architecture like? Is it just a single server?
devops,3cvoqq,ronocdh,1 point,Sat Jul 11 07:33:40 2015 UTC,"Single server for each project, likely a Digital Ocean droplet or Rackspace cloud server."
devops,3cvoqq,ronocdh,3,Sat Jul 11 17:35:25 2015 UTC,"You'll likely get more bang for your buck by extrapolating a role-based configuration management system from the monolithic bash scripts. Choose Ansible, Chef, Puppet, whatever strikes your fancy—the point is to make the configs modular and composable, so you can reuse functionality across servers.  Since Vagrant plays a central role in your environments, you may want to tinker with vagrant-digitalocean for staging, and vagrant push for deployment. I've never used vagrant push, but it seems like it matches your use case."
devops,3cvoqq,Enoxice,1 point,Sat Jul 11 18:20:24 2015 UTC,"We use a few different things based on what kind of system we are deploying/provisioning - docker, packer, elastic beanstalk, or just puppet.  For stuff like you're describing, we use vagrant-orchestrate to complement an existing vagrant workflow. Ultimately, vorch is just a wrapper around vagrant-managed-servers which can talk to existing remote boxes using vagrant's own ssh/winrm communicators. Vorch just provides a little structure and a few patterns around the use of vms.  Disclaimer: I work for the company that created vagrant-orchestrate."
devops,3cvoqq,smeagolgreen,1 point,Sat Jul 11 11:20:45 2015 UTC,"We're working towards a deployment that involves Vagrant, but we aren't in the cloud, and our apps/environment aren't easily integrated with Atlas.   Our current plan is to use Vagrant with Ansible provisioning.  Our non-local deploys would use the same (or nearly the same?) playbooks/roles."
devops,3cs6q6,alexcasalboni,2,Fri Jul 10 10:01:10 2015 UTC,"Our kernel version (3.2) did not natively support Docker, and we felt that upgrading the kernel just to ship code faster was an overkill solution.   I don't understand why people don't upgrade just to be up to date."
devops,3cs6q6,twenty7forty2,2,Sat Jul 11 08:02:04 2015 UTC,"Debian wheezy, which was stable version until 26.4.2015, used 3.2. If you want to use latest releases, you probably shouldn't choose Debian stable as your distro. But if you want pretty stable system with long support (which can be important in cases where you cannot upgrade OS to latest version all the time), it's pretty good option.  Of course, in optimal situation, you should be able to change OS with minimal changes, but that's not always realistic for reason or another (e.g. it might a change that requires re-certification)."
devops,3cs6q6,Heimdul,1 point,Sat Jul 11 16:22:36 2015 UTC,"Because change breaks things, more change more outages."
devops,3cs6q6,ms4720,1 point,Fri Jul 17 23:43:58 2015 UTC,"But change is inevitable, the longer you wait to update the harder it will be. Might as well embrace it."
devops,3cs6q6,twenty7forty2,1 point,Sat Jul 18 01:40:31 2015 UTC,"Embracing change and change for its own sake are different things. Also updating the kernel is different from updating the website in terms of risk, websites are much easier to roll back"
devops,3cs6q6,ms4720,1 point,Sat Jul 18 03:27:58 2015 UTC,"It's inevitable, ""for it's own sake"" doesn't really apply. At any rate I understand why they are using an old kernel ... debian stable."
devops,3cs6q6,twenty7forty2,1 point,Sat Jul 18 06:17:40 2015 UTC,"No if need to upgrade the kernel once during the year for operational reasons that one change, if I upgrade the kernel six times in a year just because that is six changes. And that is more risk for no good reason."
devops,3cs6q6,ms4720,2,Sat Jul 18 11:58:42 2015 UTC,"Woah there, don't ever upgrade the kernel 6 times a year. It should always be a prime number, or at the very least an uneven multiple of 3."
devops,3cs6q6,twenty7forty2,2,Sat Jul 18 19:14:28 2015 UTC,Fairish point
devops,3cs6q6,ms4720,1 point,Sat Jul 18 19:59:52 2015 UTC,Why not use fpm to build the deb package?
devops,3cs6q6,thanasisk78,1 point,Fri Jul 10 15:13:04 2015 UTC,because dh-virtualenv handles all the python runtime dependencies in a more portable way
devops,3cs6q6,himynameisthor,1 point,Fri Jul 10 15:50:13 2015 UTC,it is still poor though  source: deal with dh-virtualenv every day.
devops,3cs6q6,t90fan,1 point,Fri Jul 10 16:07:58 2015 UTC,"If you want to use FPM for it, you are best off also including Python in the package too, a la Omnibus. That also lets you change Python versions independent of the OS or other deployed apps, so it is handy all around."
devops,3cs6q6,coderanger,0,Fri Jul 10 17:41:01 2015 UTC,i wonder if they are using wheel
devops,3ct1li,jenmarley,2,Fri Jul 10 15:20:43 2015 UTC,"That was underwhelming. ""Change a setting on the load balancer."""
devops,3ct1li,the_fat_sheep,1 point,Fri Jul 10 16:54:00 2015 UTC,hey. I appreciate the feedback. Will set expectations better next time.
devops,3coo0p,shrubash,1 point,Thu Jul 9 15:19:57 2015 UTC,"A typical project may need tens, if not hundreds of images from Docker Hub or another remote Docker resource.    Say what? Hundreds?"
devops,3coo0p,chub79,2,Thu Jul 9 18:13:04 2015 UTC,Micro services.
devops,3coo0p,bezerker03,1 point,Thu Jul 9 22:48:14 2015 UTC,I had assumed as much but hundreds of them for a typical project ? That sounds off.
devops,3coo0p,chub79,1 point,Fri Jul 10 05:40:04 2015 UTC,SPAM!
devops,3clpfg,alharaka,3,Wed Jul 8 21:53:05 2015 UTC,"I'd say try to find either work as dev or operations in a webshop could help.  I see more and more operations work become ""devops-y"" as a result of the obvious benefits of automation, configuration management and continuous integration (and quite faster than gold images as well)  If you're lucky you'll find your big break and someone will train you on the job, otherwise you'll find a few stepping stones with jobs that are ticking some of the cases.  What I would suggest is for you to find a relevant meetup near where you live and show up and start chatting with people there. Chances are some of them are hiring or know someone who does."
devops,3clpfg,batouchu,1 point,Wed Jul 8 22:35:28 2015 UTC,Cool. Where I live is in the A-rab world. Meetup culture might be here but I am not sure how extensive. Should have brought that up.
devops,3clpfg,kaen_,3,Wed Jul 8 22:56:11 2015 UTC,"Uneducated-freelancer-accidentally-turned-remote-devops guy reporting in. In my case, I contributed to open source games until I was given access to the infra, then just sort of did devopsy things like set up CI, CM, modern build systems, that sort of thing. Then I started freelancing and talked all the time about my ops-y hobby, eventually found a client who does that sort of thing, and eventually got hired on full time.  In short: entry-level remote devops work has an existence proof."
devops,3clpfg,mattstratton,2,Wed Jul 8 22:46:22 2015 UTC,You make good points. I screw around with many projects but you to stick with one I obsess over. I am more and more into Common Lisp but you prob know employability jokes about that. Going to start looking into Clojure soon.  You comfortable linking to the project you worked on to see how much flattery I can fk by imitation elsewhere?
devops,3clpfg,jchampy,2,Wed Jul 8 22:58:50 2015 UTC,Jake (aka grubernaut on Twitter) had this occur for him. He talked about it on our show:  http://www.arresteddevops.com/starting-a-new-devops-job/
devops,3clpfg,jfalcon206,4,Thu Jul 9 13:26:25 2015 UTC,"I suppose the biggest difference is the fact that I never really worked in ""traditional"" IT. My first job as a sysadmin, was to our internal VM infrastructure. I came from a developer role before making the transition to being a sysadmin, so I was already familiar with development practices and strategies. Even when I was in a developer role, I was writing automated ruby scripts to deploy our application to servers faster than manually pushing our latest builds.   At the time of moving from my first sysadmin job to my first devops job, I had already been writing automation code for well over a year. I started with ansible, and when that wasn't meeting our needs as well as it could, I began porting our code over to Chef.   The biggest strength that someone working in traditional IT or traditional systems administration has though, is a deep knowledge and understanding of the systems that they are building. Learning how to write configuration management is easy. Knowing how to recover a system from a fail state isn't as easy.   There are a few differences in process workflow that you'll have to pick up on, but for the most part you learn those by taking a new job. I suppose the main suggestion I can offer is to start writing configuration management, and dive in head first. Ultimately though, it boils down to what you enjoy doing, and what motivates you. Hope this helps."
devops,3clpfg,combuchan,1 point,Thu Jul 9 13:51:43 2015 UTC,"Having done both like others, I absolutely love working 100% remote.  I do still go into the office from time to time because it's always good to occasionally show up and be a physical presence.  As others have mentioned, team chat like slack or irc + web conferencing pretty much takes care of most everything.  But the biggest is having a manager who is complete open and willing to make it happen."
devops,3clpfg,pallencc,-1,Fri Jul 10 00:22:32 2015 UTC,"Pray?  Or be really, really, really good that your skills outweigh the need for collaboration?  I have yet to be in really any environment wherein I was interviewed and hired where a lot of remote work was allowed.  There's a huge trust issue that you're doing what you're doing.  Moreover, as an interface between systems people and programmers, you'll have to be working with both, frequently face to face.  Tho /u/kaen_ has a point--you just have to find the clients.  I've never been particularly good at that and when it does happen, I've hated working with them--they either steal all my time, screw me on pay, or have incredibly unrealistic expectations (i'm not the best of people people).    I'd much rather take a steady paycheck home than be a freelancer."
devops,3clpfg,strogg,2,Thu Jul 9 00:42:24 2015 UTC,"Pray? Or be really, really, really good that your skills outweigh the need for collaboration?   I totally agree with that. As a 6+ year veteran in the devops world I actually think that collaboration is so important I wouldn't even WANT to be remote. This stuff changes so fast its impossible enough to keep up when you are on a team, let alone when you are solo. I have been lucky enough to find steady work in the past as a freelancer, but all of my gigs were local and supplied me with office space to come in and work with the teams.   screw me on pay   that sucks too btw."
devops,3cguuw,ParadoxicalTree,13,Tue Jul 7 20:25:27 2015 UTC,"Here's an example of something I did. We use vagrant to build developer-use VMs of our product that gets provisioned with chef. I built a python/flask web front end that allows our UAT test group (non-technical folks) to provision VMs for user experience use.  They visit the page, OAuth with Google (we use corporate GMail) to establish they work here and to get their name/email address, and then they select which app and which feature/git branch to pull. knife-ec2 then stands up an AWS EC2 instance and then provisions the machine with the same chef code, register with DNS, and finally, email the user of the flask app a link to visit the web app in their instance. Also, a job is set for 14 days later to terminate the EC2 instance if they don't click a link in the email buying them more time (to keep machines from living forever.) Each user can generate 4 simultaneous machines (or more if they ask nice.)  So that which I once did in the old IT world, with a screwdriver, with rack kits, with Linux CDs, I now do with code. I create VMs in AWS (or I could really on any platform, VMWare, etc) machines with python and boto, I provision/build out machines with chef, and code allows the processes to be automatic, peer-reviewable, automatically tested, and predictable.   DevOps has changed the way I do Sysadmin stuff; I realize a lot of DevOps folks came to the table from the Dev side. I came from the ops side and love it."
devops,3cguuw,radeky,6,Tue Jul 7 20:49:48 2015 UTC,"Your comment about swapping the screwdriver and the rack for code is spot on.  To me, DevOps is about adopting those practices which allow you to serve your customers better.  In your example, the UAT team is the customer and your work with AWS and Chef is what allows them (and you) to do their jobs more efficiently than if you were in the datacenter inserting boot cds into trays."
devops,3cguuw,mattstratton,2,Wed Jul 8 00:57:37 2015 UTC,"that which I once did in the old IT world, with a screwdriver, with rack kits, with Linux CDs, I now do with code   You, my friend, are a freaking genius. I love this turn of phrase. I may have to steal it. :)"
devops,3cguuw,itripovermyownfeet,0,Wed Jul 8 12:13:27 2015 UTC,"Thanks man, big fan of the podcast."
devops,3cguuw,mattstratton,1 point,Wed Jul 8 12:53:47 2015 UTC,This is a way better response than some bullet point crap about cultural movements and agile with no details or real world examples.
devops,3cguuw,steveElsewhere,31,Fri Jul 10 23:30:41 2015 UTC,"I actually really like Adam Jacob's definition:  ""DevOps is the word we use to describe the operational side of the transition to enterprises being software-led"".  It's about a way of doing work. It's not a job you have. People hate hearing this, but it's like calling yourself an ""agile"".   Devops is:   A technical and cultural movement with automation at its core A faster and safer way to deliver value to customers A set of practices established by web innovators that are now being adopted by enterprises of all kinds."
devops,3cguuw,mattstratton,6,Tue Jul 7 20:50:05 2015 UTC,"Oh man I almost totally misread your comment Matt and I barely caught myself. I'm including it for everyone's amusement and as an example of how these things get messy :] - I originally took 'operational' to mean 'Ops' as in DevOps. When I reread, I realized it was meant as 'activities and practices' (unless I'm wrong there too) and then all was right with the world. I continue to endorse everything Matt says.  ""That sounds like a very Chef focused definition to me, which I was really surprised by (I had to doublecheck it was you, Matt!). To use language as an analogy, I think making Dev an Ops prefix rather than an equal portmanteau is unnecessarily narrow, but I may be missing your message here. Am I paraphrasing wrong or was that 'make dev more ops focused'? Regardless, I think the definition on wikipedia is pretty great and spans a lot more than just agile ops and automation. Do you think it should be narrowed to those areas? Also: I'm very aware you retired from reddit because of threads like this - so feel free to just swear at me via DM <3"
devops,3cguuw,paperhat,3,Tue Jul 7 23:19:01 2015 UTC,"I heart you, Steve :)"
devops,3cguuw,mattstratton,2,Wed Jul 8 04:45:41 2015 UTC,"making Dev an Ops prefix rather than an equal portmanteau is unnecessarily narrow   You were talking about defining the existing word, but my mind  wandered over to making a new portmanteau. Development and operations do not lend themselves to the task. Opsvelopment is the best I can do, and that is horrible."
devops,3cguuw,citizen_pinkdot,2,Wed Jul 8 11:48:25 2015 UTC,"You're going down the slippery slope that results in blog posts about how we need SecDevDBBizTestOps :)  A name is a thing. As Patrick says, it's called ""DevOps"" because ""Agile System Administration"" was too long of a term for a conference :)  Plus if we change the name I need new license plates, and that's a lot of paperwork."
devops,3cguuw,cat5inthecradle,2,Wed Jul 8 12:12:41 2015 UTC,So devops is automation of development tools?
devops,3cguuw,acid_sphinx4,2,Wed Jul 8 15:33:45 2015 UTC,Devops is more the 'why' you would want to automate deployment/development tools in the first place. The tools are being created as a response to that need.
devops,3cguuw,fundieInAChainWax,1 point,Thu Jul 9 18:51:43 2015 UTC,"Blah blah blah it's just a sysadmin, and a way to describe a modern method of being one according to the latest technologies. And it's a very terrible sysadmin if you thought it would be ok to put a a developer in a sysadmin's job."
devops,3cguuw,steveOps,9,Sun Jul 19 17:42:16 2015 UTC,"Everyone is devopsing, while I'm just here sysadmining."
devops,3cguuw,acid_sphinx4,1 point,Wed Jul 8 09:41:55 2015 UTC,"Look at your emails/ticket system and find the thing that keeps happening that you hate dealing with, and write a python script that does it for you!"
devops,3cguuw,steveOps,2,Fri Jul 17 15:23:19 2015 UTC,How is that different from sysadminning ever was?
devops,3cguuw,SouthernAirTemple,2,Sun Jul 19 17:44:59 2015 UTC,It's not! Keep doing it!
devops,3cguuw,soawesomejohn,0,Mon Jul 20 02:12:48 2015 UTC,"Proceeds to do so, happens to 10 other different customers with 10 different environments. Commits to repo on my github where scripts go to sleep and sighs, waiting for the next joyous opportunity use it as a one-off, and finally adds to the resume.   *Edit: spelling."
devops,3cguuw,paperhat,5,Sun Jul 19 17:04:27 2015 UTC,"You may see job offers for ""DevOps engineers"" and the like, but DevOps is a culture - a combination of Operations people and Developer people. Operations people like me use more development practices in their work, and Developers develop not just the application, but the delivery of that application into operations.  Here's an example. Let's say you have an application ""AppX"" that does order processing and inventory management for your business. There's a development team and your sysadmins. In traditional model, the developers would be running the code on their laptop, maybe in a virtual machine. Maybe they even have a shared lab machine that all the devs run their code against. After so many commits, they deem AppX good enough for release, so they toss a zip file over to the sysadmins (ok, maybe you're lucky and it's an actual package). If we're lucky, this is accompanied with a 20 page installation/upgrade process document. The sysadmins then attempt to install this new release, hopefully having backups to fall back on if the upgrade goes wrong.  In the DevOps model, the Devs and the Admins work in a team to work out the packaging and installation of AppX. This could be as simple as a system package, or it could be a full fledged configuraton management option like a puppet module. Somewhere, there is a QA lab (which could just be a VM). Each time a dev checks in code, a CICD server (like Jenkins, Travis, or GOCD) checks out the code, runs all the tests, builds a package, and pushes that package to a CICD repo. On the QA environment, the package gets installed. Tests are ran against the running application. If it gets the green light, sysadmins bump of their configuration management to this version and it installs into their Staging environment (which, up until this point, matched prod). Once satisfied there, the exact same process is done to roll it out into production under a change window.   The key here is the part where the Ops people and the Devs are working together to automate everything. It's not just about automation, but repeatability. Your QA and Staging environments will probably have to get rebuilt to specific versions all the time, so you have to go from bare metal/virtual to working environment quickly and with minimal human involvement."
devops,3cguuw,cat5inthecradle,5,Tue Jul 7 21:18:55 2015 UTC,"A coworker once said something like, ""I used to be a SysAdmin trying to replace myself with shell scripts. Now I'm a DevOps Engineer trying to replace myself with APIs."""
devops,3cguuw,fotoman,2,Wed Jul 8 11:59:06 2015 UTC,"I like that. It's not enough for ops guys like me to learn how to script, we need to learn how to do it in repeatable, versatile, and sharable way."
devops,3cguuw,ollybee,3,Thu Jul 9 18:57:11 2015 UTC,"So, I'm sort of on the other side of most coins here.  I'm a developer (sysadmin in a former life 15+ years ago), and the project that my team develops is used by pretty much all 30,000+ people in product development at our company.  We also have large teams of Sysadmins who also use the system for inventory and support.    So I'm a developer inside IT writing applications for product developers (writing applications that we sell) and sysadmins (supporting the instances that the product developers are using)"
devops,3cguuw,modasocks,2,Tue Jul 7 22:04:10 2015 UTC,"A one sentence summery as well as more detailed bullet points covering (in order of importance) culture, skills and tools.  http://www.leedsdevops.org.uk/post/62089905741/the-leedsdevops-manifesto"
devops,3cguuw,Miserygut,2,Tue Jul 7 22:03:38 2015 UTC,It's a culture most commonly used by release and reliability engineers.
devops,3cguuw,jwcobb13,2,Wed Jul 8 09:58:55 2015 UTC,"DevOps is informing and building systems for Development. The aim is to get systems out of the way of Developers so they can write code, test code and deploy code in the most efficient manner possible. The informing part is handing to Development the best tools for the job (Why should they know the benefits of AWS over Azure? Git vs SVN? Visual Studio vs. Eclipse?) and modifying their ecosystem to incorporate new technologies. The benefits are faster, less buggy, more consistent deployments.  DevOps bridges the gap between Developers and Infrastructure teams by massively reducing the scope of 'Operational interests' down to maintaining the platform things are being developed, tested and deployed on as opposed to all aspects of infrastructure. Requisitioning and implementing new components on to that platform are another aspect to it.  The nuts and bolts of this will vary between organisations. Things like source control, continuous integration and continuous deployment are broad topics in themselves. There are a lot of different methodologies and toolkits to acheive this but ultimately the correct one is the one which works best for your organisation."
devops,3cguuw,batouchu,6,Wed Jul 8 10:07:52 2015 UTC,"The best way I've heard it explained is that DevOps is developing for operations. So instead of developing software for the end user like in a web site or a game, a DevOps engineer is developing software and automation for the company to improve processes and to turn collected data into information useful for management.  As such, they need to have programming, database, and server experience/knowledge.  Day in the life of a developer: Writing some code to connect an online storefront with a payment gateway, creating a WordPress plugin, creating a .NET application to analyze stock market data.  Day in the life of DevOps: Writing a bash script that starts HaProxy when the server starts up, creating a custom Linux program that highlights and sorts specific data from a log file that the head of IT has requested, writing a Ruby on Rails application that shows current number of callers on hold versus active calls for a big-screen display in the support staff room, setting up a cron job that executes a piece of PHP code (which you also wrote) periodically that refreshes a database index and also force-refreshes the Varnish cache layer."
devops,3cguuw,jwcobb13,2,Tue Jul 7 20:38:17 2015 UTC,"Yes and no. What you're describing to me sounds more like a sysadmin worth their salt.  Before that, it was perl and C. Now it's python/ruby/config management tools.  DevOps is really about getting off your desk and actually talking to the guy in the other team to figure out what they need from you and vice-versa. Automation is just a mean to an end."
devops,3cguuw,batouchu,2,Tue Jul 7 23:37:43 2015 UTC,"With all due respect, bullshit, and you saying that is part of the problem.  Sysadmins worth their salt are doing sysadmin things that have nothing to do with development. DevOps are the people that exclusively develop for sysadmins and the people above them.  Is there any crossover? Sure. But that doesn't mean that a DevOps specialist should be expected to be the sysadmin too. Even if he/she could do it, it's not their job.  In fact, DevOps is happening because there needed to be an in-between that isn't quite development and isn't quite sysadmin."
devops,3cguuw,jwcobb13,0,Wed Jul 8 01:53:49 2015 UTC,"And I take it your DevOps is working with an Agile, and maybe an ITIL too?"
devops,3cguuw,acid_sphinx4,3,Wed Jul 8 02:16:41 2015 UTC,"I enjoy being mocked as much as the next guy, but I used the terminology correctly in my statement. DevOps is a philosophy or position and DevOps specialist would be a dude doing that gig."
devops,3cguuw,TheHistorian2,0,Wed Jul 8 03:15:30 2015 UTC,Everything you described is a sysadmin thing. Nothing about any of that I have not been doing for 20 years.
devops,3cguuw,f0nd004u,3,Sun Jul 19 17:47:54 2015 UTC,More precisely... everyone in the industry can describe it.  Differently.
devops,3cguuw,stox,2,Wed Jul 8 03:20:41 2015 UTC,"Someone who does DevOps is a sysadmin(s) who is closely integrated with a development team, understands how the product actually works, and manages the operations side of a software or service in a fashion that reflects that.  The old way of doing things was to have the dev team make the thing and send it away to the ops team, who deploys the thing and makes it run. The two teams submit tickets to each other when there's a problem with the other team's part of the equation, and neither team really has an deep understanding of what the other team does or how their stuff actually works.  DevOps means the ops guy actually codes, actually knows the product, and works with the dev team to plan stuff, deploy stuff, and keep it maintained instead of going ""that's a dev problem"", will actually review code, fix code, or write new code that is gluing the application to various other parts of the infra, etc etc. It also means the dev people understand how to write an application in a scalable way, have an understanding of the concerns of the ops people, develop and test their code on true-to-prod platforms, and don't just do stuff and say ""that's an ops problem"" when it doesn't work in prod.  Most people who do DevOps can actually code, which means they automate things with config management and write a lot of glue code, because that's just how you sysadmin if you can.  The tools associated with DevOps such as Vagrant or Jenkins are really just a means to an end, that end being a holistically developed and managed platform as opposed to an application and a platform created separately and managed separately."
devops,3cguuw,mattstratton,2,Mon Jul 13 19:09:19 2015 UTC,"To really boil it down, it changes the objective of development to think of running code and not just a delivery to QA. This is done via automation, and continuous deployment."
devops,3cguuw,itripovermyownfeet,2,Wed Jul 8 01:03:48 2015 UTC,"No idea why you're getting downvoted; this makes perfect sense to me. Among other things, it's about thinking about your code as something that has to be operationalized."
devops,3cguuw,finalduty,1 point,Tue Jul 7 23:01:47 2015 UTC,"It's not just giving devs root access to production, no matter how much they whine to have it."
devops,3cguuw,acid_sphinx4,1 point,Wed Jul 8 12:10:50 2015 UTC,"To me, it's about using scripts and code to build and maintain your infrastructure.   Devs write code to build applications Operations build and maintain servers DevOps write code to build and maintain servers   I see people advertising DevOps positions as Developers who do Operational tasks, or Operations who write applications. That's not DevOps. That's stress and disappointment.  DevOps isn't black and white, it's greyscale and you won't just wake up one day, having hatched as ""DevOps"". Have you ever written a script to simplify something you do ten times a day? Have you shared it with others? That's what I see as being ""DevOps"". You've written something (Dev) to help manage your systems (Ops).  It's a modern way of looking after infrastructure. Do away with SSHing into 100 unique hosts and treating them individually; manage them all from a central point, all as one entity. As AWS put it, ""Treat your servers like cattle, not pets"" and DevOps is an approach that helps achieve this."
devops,3cguuw,raffraffraff,1 point,Fri Jul 10 23:29:35 2015 UTC,"What you describe as DevOps though, is what ""operations"" or ""sysadmin"" has always been. It isn't anything new. The level or virtualization is new, but that really doesn't change things all that much."
devops,3cguuw,donaldGuy,1 point,Wed Jul 15 11:31:29 2015 UTC,"In a traditional organisation, ops people handle alerting, monitoring, logging, backups, oncall, change management etc. Perhaps there is a release / deployment team somewhere too. And then the are developers somewhere else, writing code, talking to system testers / UAT testers. While ops deal with ITIL (incident, problem, change) the devs work with SDLC (bugs, features, release schedules, testers). And there is a giant wall between them.   The idea behind DevOps is that the huge wall that divides Operations and Development is torn down. Developers don't build apps and throw them over a wall for somebody else to monitor and run. They themselves understand how and where it runs, how it performs etc. They are familiar with metrics, logs, alerts and deployment. But they don't have to spend hours screwing around with logrotate or nagios because there are developers in the ""Operations"" department who work with them and build APIs for Ops. Developers can now enable logging and alerting for their app by writing a few lines of YAML and issuing a pull request in git. Ops have automated that shit for them, and are now developers in their own domain."
devops,3chqg2,gudipudi,1 point,Wed Jul 8 00:20:40 2015 UTC,Fairly good write up. Definitely a smooooth transition which is something to be proud of. I would have liked a little more details on the load testing done on the DB tier since it was so critical and set the pace of the rest of the transition.
devops,3cfpvd,GRAFFF,4,Tue Jul 7 15:42:03 2015 UTC,This is a very open ended question. Are there any specific areas you are interested in?
devops,3cfpvd,shlazzer,2,Tue Jul 7 15:51:22 2015 UTC,"Oh man. I wish I knew. I'm kind of in that space where I don't know what I don't know. Hoping to tighten that up.  Is there anything you did, that in hindsight you would do completely differently and save your younger self a major headache?"
devops,3cfpvd,shlazzer,7,Tue Jul 7 16:04:30 2015 UTC,"Countless times, with countless things. That's part of the job.   My tip: don't ever ifdown eth0"
devops,3cfpvd,anomalous_cowherd,2,Tue Jul 7 16:27:01 2015 UTC,"sudo ifdown eth0; sudo ifup eth0  It's an atomic command. And even then only if you don't have to put a password every time you sudo, in which case use 'sudo - i' first instead."
devops,3cfpvd,joshlove,2,Tue Jul 7 17:50:39 2015 UTC,"In general, never stop learning. Setup environments at home or in VMs or whatever for you to try new things, get reckless and break stuff, fix it and then figure more out."
devops,3cfpvd,erst77,5,Tue Jul 7 17:33:23 2015 UTC,"Noobie mistakes:   Feeling like you should know everything (because duh, you're smart and used to knowing everything, we've all been there) and not asking for help from people more experienced than you (congrats, you asked this question, so you can cross this one off your list!) Believing ""looking stupid or inexperienced"" is worse than making a mistake Looking at DevOps is a set of tools or workflows and ignoring the cultural philosophy and communication required to really make it work Thinking testing/QA is someone else's job"
devops,3cfpvd,oipunx,1 point,Tue Jul 7 17:44:11 2015 UTC,1 and 2 are really important here.
devops,3cfpvd,erst77,2,Tue Jul 7 18:53:54 2015 UTC,"I suppose I should also add:   Bullshitting your way through an explanation of something you don't understand rather than saying ""I'm not sure, but I'll find out."""
devops,3cfpvd,peu4000,1 point,Tue Jul 7 18:58:45 2015 UTC,"Yep, I struggle with 1 and 2. I always try to be as receptive as possible when someone comes to me for something, in the hope they'll reciprocate.  I guess another mistake(not limited to noobies) is leaving things unfinished."
devops,3cfpvd,shlazzer,1 point,Tue Jul 7 19:26:38 2015 UTC,wait.... testing isn't someone else's job?!
devops,3cfpvd,SouthernAirTemple,1 point,Tue Jul 7 20:44:37 2015 UTC,"If it wasn't tools like serverspec wouldn't exist and be as big as they are. Also, I at least love the idea of automated testing to make sure your builds are laid out as they should."
devops,3cfpvd,TempranilloStorm,1 point,Fri Jul 17 22:55:00 2015 UTC,Thinking testing/QA is someone else's job   Depends on what you're testing.
devops,3cfpvd,dustinmm80,4,Fri Jul 10 13:23:01 2015 UTC,"Shortcutting talking to people.   Think of an awesome new way of doing things Don't publicize it because they won't understand until it's done. Work away on it on your own. It's done. You share it and receive no interest.   I did this at first, most DevOps folks I talk to have as well.  Getting out of this cycle is hard because it's uncomfortable. But you have to or no one will ever buy into what you're doing. Overcommunicate, explain your goals."
devops,3cfpvd,SouthernAirTemple,1 point,Tue Jul 7 21:48:06 2015 UTC,"Can you go into a bit more detail about how you got out of this cycle? Promotion of ""hobby"" projects developed for the workplace is definitely something I need to work on."
devops,3cfpvd,wise0wl,1 point,Fri Jul 17 22:57:01 2015 UTC,"Careful on ho by projects. It's a trap. Work will love what they see, start using it, and then demand you fix bugs---on your time of course. Because it's not a company project."
devops,3cfpvd,pallencc,1 point,Tue Jul 21 13:58:20 2015 UTC,"Yes - for AWS specifically here are mistakes I see a lot  VPC stuff   your VPC needs to have 3 public and 3 private subnets at least HA-NAT for sure!!!!! everything you can launch in the private subnet do it! use vpn / jump box if necessary dont use your entire address space on your first iteration, but use a LOT of it... aka 50-75% of the space across all 6 subnets for instance   EC2   don't launch single instances - everything in an autoscale group even if it is 1/1 use ELB to pass traffic through from public internet to private subnet if possible - it offloads security concerns to AWS use the ELB health check to check the health of your instances in your ASGs - Apache calling shell scripts is a useful design pattern all boxes - i mean ALL BOXES need to be launched in a role - NEVER NEVER NEVER write down iam creds on a system.   Thats a good start and you will be ahead of most :D"
devops,3cfpvd,hijinks,1 point,Thu Jul 9 06:52:10 2015 UTC,Going to add to the ec2 list  Use iam profile roles for all instances. That way if they needed access to other aws services you can give then rights in the profile and not ship around keys
devops,3cfpvd,theangryirishprodigy,1 point,Sat Jul 11 03:08:12 2015 UTC,"I just moved into a job doing devops, and here's my noob mistake:  Scenario:  Web app moved to a new server, and poor performance followed.   Investigating:  The issue was almost obviously network, but I wanted to rule out anything before I reached out to the CIO in regards to chasing random ping times in his network.   Test:  The old Web server was still up, and I wanted to rule IIS out.  Cool, Webdeploy can do that.  I was running into issues getting my command to run based on my arguments, so I started simplifying.  Finally got the command right.  However, I didn't have my -whatif > log file in the command (expected it to fail), so IIS wrote to the production server.  At 11am.  Site was down.  Had the site back up in <10 mins (thanks to some good tools), and an IM from the CIO, ""Did you get anything from that?""  Yes, the previously functioning IIS had the same lag as the new IIS.    The call:  Spoke to the CIO, let him know where I was (logically network related by now).  Resolution:  CIO further troubleshot, turned out to be a NIC teaming issue on his HyperV host.      Tl;dr:  Tested a command, forgot an argument, deployed a retired IIS to production and took a company down."
devops,3cfimh,LeoG7,1 point,Tue Jul 7 14:48:01 2015 UTC,I'm all for simple examples but they should reflect the real world. The lack of any sort of testing in this pattern is glaring.
devops,3c9xdb,jeevandongre,3,Mon Jul 6 06:27:59 2015 UTC,"Something like this is a little easier: https://github.com/tstat/chef-git_ssh_wrapper  The key thing is to create an ""ssh wrapper"" script that calls git with your deploy key specifically. You can do this on your own without bringing in the above cookbook, I'm just giving you that as a working example. Then just pass that script as the ssh_wrapper parameter to the deploy resource."
devops,3c9xdb,shwash,2,Mon Jul 6 09:27:28 2015 UTC,"I've done this using user data. Put a generic ssh configuration and deploy key in s3. In user data pull those down, set permissions, then call git clone, and boot strap however you need."
devops,3c9xdb,myoung34,2,Mon Jul 6 11:01:28 2015 UTC,I hate to be that guy but Salt handles this really easily.  Setup a key for deployment  /path/to/key:   file.managed:     - source: salt://path/to/key/in/salt     - user: userthatwilldeploy     - mode: 600  git@githost:repo   git.latest:     - target: /path/to/repo     - identity: /path/to/key     - user: userthatwilldeploy   Not the best example (and not secure because the key is in the states not pillar) but I'm on my phone bit it gives you an idea of how simple it is.
devops,3c9xdb,deadbunny,1 point,Mon Jul 6 22:56:34 2015 UTC,Bingo!
devops,3c9xdb,SHIT_KICKING_DICK,1 point,Mon Jul 6 13:17:56 2015 UTC,"Capistrano works really well, and it's not just for ruby apps.  I did work for a shop that used capistrano to deploy a java app."
devops,3c9xdb,combuchan,-3,Mon Jul 6 19:38:43 2015 UTC,"It's a good learning experience, but I recommend that you use a commercial product for your work (if it's for that)."
devops,3c9xdb,nanalayo,1 point,Mon Jul 6 07:09:41 2015 UTC,Could you recommend some commercial config management solutions that come even close to the functionality that Chef/Salt/Puppet provide?
devops,3c9xdb,deadbunny,1 point,Mon Jul 6 20:24:41 2015 UTC,"I mistakenly thought you wanted a git repo. For that, I would have recommended you to just use GitHub."
devops,3cd072,GRAFFF,9,Mon Jul 6 23:19:20 2015 UTC,This feels like an ad post for cloudcoreo. ಠ_ಠ
devops,3cd072,itsallaboutkarma,2,Tue Jul 7 03:14:33 2015 UTC,"Do you mean CloudCoreo, the platform that enables you to quickly and easily deploy to any cloud and leverage the best minds in the industry? TELL ME MORE."
devops,3cd072,jlobster,2,Tue Jul 7 12:35:34 2015 UTC,"can't really yell what they offer over the competition or what solution they are providing. Their documentation is strangely written, they need a new technical writer."
devops,3cd072,wetpaste,2,Tue Jul 7 05:41:24 2015 UTC,"Never heard of them, seems interesting. Looks just like a CLI wrapper around AWS CloudFormation."
devops,3cd072,krypticus,5,Tue Jul 7 14:45:23 2015 UTC,"Based on my experience I suggest learning Packer, Terraform, Docker and Ansible. Welcome to a brand new world."
devops,3cd072,philosophicalbeard,6,Tue Jul 7 00:22:14 2015 UTC,"Based on my experience I suggest learning Packer, Terraform, Docker and Ansible. Welcome to a brand new world.   Probably helpful to add some context and explain why.  For example, I personally don't find Packer that helpful since we are not deploying a bunch of $thing at one time, and we're very heavy on the data side of things.  But in a past job where I was deploying fleets of web servers at a time during a relatively tight maintenance window, it would have been great!  Likewise, we have yet to find a shit ton of use for Docker in production."
devops,3cd072,Semisonic,1 point,Tue Jul 7 01:23:51 2015 UTC,Thanks!
devops,3cd072,levo21,1 point,Tue Jul 7 00:51:01 2015 UTC,I'm currently using CloudCoreo.   It allows you to define your aws infrastructure as code and then use the CloudCoreo engine to deploy and keep the infrastructure in-sync with the source repo.  I was previously using CloudFormation templates but found it too hard to reconcile the differences from the template and what's currently running in aws especially when my whole team had access to modify the infrastructure. Running a CFN stack-update would have blown away the changes running in the wild. Running CloudCoreo allows me to guarantee that what's running in aws is coming from a source repo that we can use standard SDLC best-practices to make changes.
devops,3cd072,MclaughyTaffy,1 point,Wed Jul 8 23:28:21 2015 UTC,Redditor for only 6 minutes before posting this. Ad post confirmed...
devops,3cd072,pallencc,1 point,Wed Jul 8 23:49:31 2015 UTC,"Hey all - Paul from CloudCoreo here... this isn't a post by any of us, but I'm happy to answer any questions. We are a startup - effectively a multi-cloud replacement for CFN and used in conjunction w/ ansible/docker/chef etc."
devops,3c7m40,Heimdul,2,Sun Jul 5 17:24:25 2015 UTC,You should format the post a bit (the workflow thing).
devops,3c7m40,aps-sids,2,Sun Jul 5 19:11:13 2015 UTC,Should be better now. They were organized a bit differently when I started writing it out and there list format didn't look too good.
devops,3c7m40,alp82,2,Sun Jul 5 19:26:29 2015 UTC,"There are several unanswered questions:   What are you developing and what's the service you provide? How many people are working on it? How many people are using it?   The workflow you describe sounds like potential overhead for the most development projects.  You mentioned Containers which is generally an idea worth considering. Also i would go a step further and look for external providers for the services you seek. So, there is a rough proposal for a setup with minimal costs:   Code in git repo, hosted on Gitlab (or inhouse Gitlab): it's like Github for private repos and the hosted variant has a free plan too CI by Codeship, CircleCI or Shippable: all have free plans and have their own VMs to run the builds and tests on (there is also Gitlab CI which is tightly integrated into Gitlab but you need your own hosting for running the tests) Tutum as Docker Orchestrator (works with DigitalOcean, AWS, ...)   The workflow would be:   Everytime you push to git CI comes into play and does all testing -> this can be done for all branches or differently for each branch -> in case of failure send notifications per email, slack, etc. Releases can be containerized in one or multiple Docker Containers -> Upload your updated containers to the tutum registry -> Tutum does all scaling and redeploying Done   This is just a quick draft but maybe there is something you find useful. Sorry if that wasn't the information you are looking for."
devops,3c7m40,alp82,1 point,Sun Jul 5 20:07:17 2015 UTC,"What are you developing and what's the service you provide?   This is more or less just a thought experiment on how web application would handle changes (& possibly how others are currently doing it). I was also considering that all changes (including database & CM) would go thru similar workflow (some changes as required, like CM workflow would actually need to re-deploy affected parts or at least update them).   How many people are working on it?   Let's say it's a small 5-10 team, but potentially scaling so that each sub project (like backend) would have about that amount.   How many people are using it?   Actual site? Let's say about 500 users per day, but they also provide REST API that gets up to 200 hits per second. So pretty small currently, but you never know if you need to start handling 50 000 hits per second next week.   Code in git repo, hosted on Gitlab (or inhouse Gitlab): it's like Github for private repos and the hosted variant has a free plan too   No special requirements about repository location, it can be put/pushed wherever overall solutions requires (gitlab/github/bitbucket/local server).   CI by Codeship, CircleCI or Shippable : all have free plans and have their own VMs to run the builds and tests on (there is also Gitlab CI which is tightly integrated into Gitlab but you need your own hosting for running the tests)   I looked at Codeship as it had received quite good reviews. However, I didn't really see any intuitive way for automating staging testing. Of course, you could run everything on same node and run the functional test suite there, but I don't think it could really be called staging. It also wouldn't check if the new version can coexistence with old version until all nodes have been deployed.  I will consider containers, but I'm not completely sold on using them for everything (and of course, CM server will stay out of containers until they are actually secure, but it's not the really problematic part here)."
devops,3c7m40,octobersotherveryown,2,Sun Jul 5 20:59:06 2015 UTC,You have some valid points there.  Gitlab CI for example has build dependencies. That means you could trigger the second build/test only if the first one succeeded. Could help you to achieve more complex chains of action.  Be sure to take a look at Tutum. You will be surprised what they can do for you.
devops,3c75bq,superadmin1990,7,Sun Jul 5 14:33:38 2015 UTC,"I think you're on the right track. The idea being that you should be able to write  tools instead of just being a button pusher. Perhaps the devs start writing their application deployment code in powershell but you need to understand, troubleshoot and enhance it."
devops,3c75bq,fauxpasgrapher,1 point,Sun Jul 5 15:59:12 2015 UTC,"should be able to write tools   Such as? This part confuses me, are we talking about programs or just scripts that accomplish a task?"
devops,3c75bq,fauxpasgrapher,4,Sun Jul 5 16:02:24 2015 UTC,"If you cmdlet-ize your scripts appropriately and drop them into shared script modules, I'd call that a tool. It doesn't have to be a full CRUD database driven app with a gui to be  a tool (although that it's an option)  I have a tool that utilizes some of the developer's dlls to do, from the command line, some configuration they can only do from their web app. I saw the need for this to be a part of a script and now it's use can be automated."
devops,3c75bq,fauxpasgrapher,1 point,Sun Jul 5 16:43:42 2015 UTC,"You've gone way to far for my knowledge. The fact is that I don't work for the type of company who develops. Our ops people just maintain our infrastructure, we do some PowerShell scripting but that's about as far as it goes. Most of our stuff is Microsoft."
devops,3c75bq,remotefixonline,0,Sun Jul 5 17:19:34 2015 UTC,I could be wrong but I'd say supporting developers is devops from an operational perspective.  Watch some Don Jones videos where he talks about powershell tool making. His belief is that the next Windows server version will be core only. Think about who at your job might lose theirs if that happened. Make sure you don't.
devops,3c75bq,remotefixonline,1 point,Sun Jul 5 23:49:28 2015 UTC,"Core has been around for a while and Microsoft won't be making it gui-less for a long time. Microsoft supports a lot of legacy applications. That said, I'm not quite sure why more don't use Core as it is. Powershell isn't hard to learn, I think I'm the only one at work that uses it though."
devops,3c75bq,mclellac,3,Sun Jul 5 23:53:40 2015 UTC,"I don't buy into the hype of ""I need to learn to code or else I won't have a job""  its like saying ""you need to learn to be a good sysadmin or you won't have a job as a coder""  Some of the best coders I know have very little understanding of the fundamentals or networking or underlying tech... and some of the best sysadmins I know can't code more than a few lines of scripting needed to perform a given task... that being said keep learning either way..."
devops,3c75bq,atlgeek007,3,Sun Jul 5 14:43:43 2015 UTC,"I understand. I've been part of massive rollouts on aws as well as rackspace. The problem starts when company's think they just need a coder and ""the cloud"" handles the sysadmin duties..."
devops,3c75bq,coderanger,2,Sun Jul 5 14:48:22 2015 UTC,"How many companies use this? I'm not sure it's as dramatic as it seems. Most ops people I know went that route because coding isn't fun and its frustrating for a lot of people. I see scripting all the time, but I've yet to meet a sysadmin that uses code. I'm learning Powershell DSC but that's about as far as I go since I'm a Windows guy."
devops,3c75bq,mattstratton,3,Sun Jul 5 15:15:14 2015 UTC,"A lot of large companies are doing infrastructure as code, and a lot of smaller webdev shops. I can't really speak for the Windows side of things though, but the idea of building out your entire infrastructure via configuration management and having agnostic providers (local Virtual Private Cloud, AWS, etc). An ability to build out your VPC in a local data centre into an external cloud with a simple command is handy if you are in a business that relies on the internet, uptime, and need a backup plan or redundancy should anything happen to your datacenter or provider. There are advantages outside of that of course, such as simplifying workflows, having peace of mind that the state of the servers are identical based on type, defined security policies that are consistent because they aren't hamfisted by multiple people manually, options for immutable infrastructure, yada yada. It is well worth it in the long run."
devops,3c75bq,atlgeek007,1 point,Sun Jul 5 17:11:49 2015 UTC,"That's probably the reason why I'm not as familiar, as I'm on the Windows/azure side of the fence. I'm familiar with SCCM and DSC which is probably as good as it's going to get for Windows."
devops,3c75bq,mattstratton,1 point,Sun Jul 5 17:59:06 2015 UTC,Chef works fairly well on Windows.
devops,3c75bq,mclellac,1 point,Sun Jul 5 18:18:04 2015 UTC,"How hard is chef to learn anyway? I've heard that ansible is easy to learn, is Chef all code based? I only know powershell and even then I don't enjoy writing it."
devops,3c75bq,mclellac,1 point,Sun Jul 5 21:55:31 2015 UTC,You can check out http://learn.chef.io as a starting point.
devops,3c75bq,mattstratton,1 point,Sun Jul 5 22:58:33 2015 UTC,"The two day Chef Fundamentals course will teach anyone (with no prior coding experience/expertise) about 90% of what the average Chef user will ever need to know. I presume there are similar stories with the other tools; I just don't teach those classes so I can't speak for that.  I am inside of large enterprises at least 2 weeks out of the month with a room full of sysadmins (Windows, Linux, or a mix) and I teach them fundies in two days. After that, and a day of hacking with me as a coach (you could replace the hacking day with ""hacking yourself with the Chef mailing list and IRC, but over more than a day) they are able to create some pretty rad Chef code.  Not saying this to sell you Chef, but rather my own real world experience of guiding people from zero knowledge."
devops,3c75bq,mattstratton,0,Mon Jul 6 18:36:14 2015 UTC,"If you know ruby, chef recipes are literally just ruby code.  If you don't know ruby, it might be a little harder."
devops,3c75bq,mattstratton,1 point,Wed Jul 8 12:26:35 2015 UTC,"Yeah, the most i've done is just scripting in PowerShell."
devops,3c75bq,mattstratton,0,Mon Jul 6 02:26:20 2015 UTC,"One of the best PowerShell MVP's out there, Steven Murawski, joined Chef about a year ago. He didn't know any ruby or chef before he came on board, and he's now writing some of the best community cookbooks out there."
devops,3c75bq,wooloow,1 point,Mon Jul 6 03:17:12 2015 UTC,"What about other config management tools like Salt, Ansible, and puppet? I read about all of them, not just chef. Is this something where one will become the standard or will they all remain?"
devops,3c75bq,coderanger,1 point,Tue Jul 7 01:18:01 2015 UTC,"They will all remain for the foreseeable future, and each have their own pros and cons. Personally, I prefer Ansible for the lack of needing agents installed on the hosts, and because communication is done over SSH. There isn't any extra overhead or extra points of failure. It is strictly push related. Support for Windows is recent, and likely in flux, but because I kill off Windows servers from my network it isn't an issue for me. It is something you'd definitely need to audit though. Salt and Puppet likely have much better support for Windows, but I really can't comment on that as the audit I did on the config management frameworks is about two years old now."
devops,3c75bq,wooloow,1 point,Tue Jul 7 02:13:44 2015 UTC,"Windows shouldn't be a limiting factor. Puppet, Chef, Salt, Ansible all have varying support for Windows."
devops,3c75bq,coderanger,2,Tue Jul 7 03:51:01 2015 UTC,"I'm just saying I've yet to see it, I'm in a Windows shop and we are using SCCM and DSC and that's about as far as we can take it. Outside of startups who are linux based I'm not seeing it."
devops,3c75bq,mattstratton,0,Tue Jul 7 03:44:47 2015 UTC,"(Disclaimer - I work for Chef Software, Inc)  I have many larger corporate customers who are adopting Chef (both for their Windows and Unix implementations). The whole ""unicorns vs horses"" thing is over. The ""Enterprise"" is getting DevOps now. CIO's want it. They want CD, they want infracode, etc.   Microsoft themselves are changing as well - both with their own products and how they work, as well as how they are working INSIDE Microsoft as well.   There were at least a dozen talks at Ignite this year that focused on Chef. Only two were given by Chef employees."
devops,3c75bq,BannerDay,1 point,Sun Jul 5 18:18:56 2015 UTC,"I get that it exists. It's just not as mainstream as say, virtualization, at least not yet it isn't. There's so many different products and solutions that shoot for the same goal, who is the clear winner? Now microsoft is pouring resources into DSC as well."
devops,3c75bq,batouchu,0,Sun Jul 5 18:23:35 2015 UTC,Yep. And they directly pour resources into working with Chef :)
devops,3c75bq,batouchu,0,Tue Jul 7 01:16:34 2015 UTC,"While I may work for Chef Software, Inc, my usual answer to ""should I use Puppet or Chef (or Salt or Ansible)?"" is ""Yes"".  Do SOMETHING. But posh (or bash) scripts on a for loop are NOT ""something"".   I'm a career sysadmin, mostly in the MS realm. Every single way that MS has told me to configure my systems, I have tried. I used Puppet for about a year before switching to Chef, for reasons of my own (at the particular juncture, Chef solved my problem better, and I personally found the community more to my personal liking, and the way that Chef worked for me was better FOR ME). Do what works for you.   Jeffery Snover has famously said ""DSC is like a printer driver, tools like Chef are like Microsoft Word"". He has also said ""the more tools my customers have available to them, the more successful I am."" I don't see there being ""one clear winner"" and that's a GOOD thing. Improvements in Puppet just make Chef get better, and vice versa.   I don't remember where I said this before (it was a hiring thread either here in or in /r/sysadmin), but from a career dev perspective, you can't really make a wrong choice. If I am a hiring manager for a shop that has standardized on Chef, and you have Puppet chops, I am a complete moron if I don't consider you for a position because you know Puppet and we use Chef. It's more about understanding infracode in general - that's the tougher skill. How you express that knowledge (be it C/P/A/S) is like a dialect."
devops,3c75bq,dustinmm80,1 point,Tue Jul 7 02:15:40 2015 UTC,"That being said, the argument of ""it's never been like this before, so there"" is simply sticking your head in the sand and saying lalalalala.   Tech industry is constantly changing. This ain't your father's tech world. It's not the tech world of my 20s and 30s either."
devops,3c75bq,mdw233,1 point,Tue Jul 7 02:46:34 2015 UTC,"Well, it really depends on what you mean by ""learn to code"".  SysAdmins are not supposed to write software, whereas they should be able to use Ansible, Chef, Puppet, SaltStack.  IMHO it is all about repeatability, reusability and idempotence which the above tools honour."
devops,3c75bq,modasocks,5,Wed Jul 8 12:23:00 2015 UTC,"Protip: Chef cookbooks, puppet manifests, etc are all software even if you don't think of it that way."
devops,3c75bq,modasocks,1 point,Tue Jul 7 21:40:16 2015 UTC,"Well, yes, it is software to an extent.  Actually I think of it more as script-on-steroids, or infrastructure-as-code. It is software because hardware is not physically managed, it is not because it describes ""desired state"", not how to get there.  With regard to Chef, IMHO cookbooks are script-like to do task automation, whereas resources are software.  Does it make sense?"
devops,3c75bq,mattstratton,2,Mon Jul 6 05:33:52 2015 UTC,"No, it's literally all software all the way down and if you don't treat it as such you end up with an unmanageable mess of ""config files""."
devops,3c79u0,joshlove,2,Sun Jul 5 15:23:09 2015 UTC,"Salt would be a great fit here because you can keep using all your same Puppet manifests and Salt will very easily scale with you. salt-ssh is a drop-in replacement for how you're currently using Capistrano. Once you grow to the point that waiting on SSH is cumbersome you can switch to using Salt's ZeroMQ transport instead and your workflow will remain unchanged. (Or you could even use a mix of SSH and ZeroMQ as you're testing the waters or performing an incremental roll-out.)  The steps to get started are roughly:   Install Salt on one machine. (E.g., yum install salt salt-ssh.) Create a roster file. This is a YAML file that ties system identifiers to IP addresses. Kick off a Puppet run by specifying machines in your Roster file as targets: salt-ssh <machines-to-target> puppet.run   salt-ssh is reasonably fast but there's a memory limit to how many concurrent ssh connections you can make from a single machine. Sounds like you're feeling that with Capistrano a bit now. Once you decide to delve into the ZeroMQ transport your workflow to kick off a Puppet run simply changes to salt <machines-to-target> puppet.run.  Finally, your question about multi-host, or multi-step dependencies is done with Salt's Orchestrate system. It also works with both SSH and ZeroMQ hosts. A script like the following would allow you to run one thing that would kick off a Puppet run on the Proxy servers, wait for it to finish and finish successfully, and then kick off a Puppet run on the web servers.  update_the_proxy_server_first:   salt.function:     - name: puppet.run     - tgt: <proxy-server-IDs-here>     - ssh: True   # omit or toggle for ZeroMQ hosts  then_update_the_web_nodes:   salt.function:     - name: puppet.run     - tgt: <web-server-IDs-here>     - ssh: True     - require:       - salt: update_the_proxy_server_first   Salt works extremely well with other tools and it integrates extremely well with existing workflows. It tries hard not dictate how you organize or run things, as a philosophy. It's one of the things that's kept me interested in working on it for the last ~3 years.  (Full disclosure: I am an engineer at SaltStack.)"
devops,3c79u0,whiteinge,1 point,Sun Jul 5 19:48:08 2015 UTC,"Wow, thanks for the info! I'll try to fab some of this up in vagrant boxes this week to test out!"
devops,3c79u0,BenAlexanders,1 point,Sun Jul 5 20:31:32 2015 UTC,"It's 2 am here, so to get you started...  Puppet runs every X minutes, as defined in puppet.conf.  Puppet agent can be run manually from the cli, whenever required... Therefore, Cap can also run puppet agent from cli as required   Puppet db can give you a bit more smarts for managing 'if this on host 1, then that on host 2'"
devops,3c79u0,krypticus,1 point,Sun Jul 5 15:42:42 2015 UTC,"We used Puppet server at my last job, but I was not a sysadmin. They would have puppet no-op run every half hour (probably small offsets for large number of servers so the master could handle the load). It would alert if hosts were out of spec. I don't know how they would coordinate multi-server changes, but my guess is there's a way to kick off synchronized updates to servers once you push up the changed manifests to the git repo the master pulls from for those server roles that are changing."
devops,3c79u0,evilbuffer,1 point,Sun Jul 5 18:48:32 2015 UTC,http://jensrantil.github.io/salt-vs-ansible.html
devops,3c79u0,brokenpipe,1 point,Sun Jul 5 22:59:33 2015 UTC,I use Chef to do all of this.   Chef client + chef server to enforce desired state.   Knife ssh (workstation) + chef server to roll out immediate changes.   Chef open sourced push jobs as well to make the latter happen but the knife ssh workflow suits my (800 server) need.   Some reference: Evaluated Salt - no thanks (I'll re-evaluate once Saltstack either gets proper funding or discloses revenue). Ansible doesn't scale to most of my clients needs. Some of my customers still use Puppet but I've started preferring Chef personally.
devops,3c31p4,b0zho,1 point,Sat Jul 4 07:44:58 2015 UTC,"With some careful planning you can deploy 'breaking' schema changes with this technique, with an intermediate 'turquoise' release - http://blog.dixo.net/2015/02/blue-turquoise-green-deployment/"
devops,3c11my,Rafzzz,2,Fri Jul 3 19:59:30 2015 UTC,Have you tried opening a ticket? Azure has a great support and they reply really fast depending on the problem.
devops,3c11my,BeBeINC,1 point,Fri Jul 3 20:24:53 2015 UTC,"I'm on free tier, no technical support"
devops,3c11my,BeBeINC,1 point,Fri Jul 3 20:27:03 2015 UTC,Really? I didn't know they even have a free tier. My subscription is Pay-As-You-Go and and i just assumed that everyone can open a ticket.
devops,3bub6t,joshlove,2,Thu Jul 2 05:24:39 2015 UTC,Jenkins-job-DSL++  Basically lets you put your jobs in version control under a groovy DSL. Big benefit here for us is all these jobs that are mostly the same aside from a repo name can be DRYed up into a single method call.
devops,3bub6t,matheeeny,1 point,Thu Jul 2 12:22:43 2015 UTC,"Another great tool in this space is the Workflow plugin which is developed by Cloudbees. It addresses the same things you have mentioned above, but it also brings Continuous Delivery in as a first class citizen to Jenkins."
devops,3bub6t,nocpu,2,Wed Jul 8 11:45:58 2015 UTC,"The rundeck plugin.   Jenkins for builds, Rundeck for deploys. Some Jenkins jobs automatically call Rundeck deploy jobs once completed. Only release engineers can run the other deploy jobs in Rundeck. This plugin allows for Jenkins job definitions to execute jobs in Rundeck without the Jenkins user having explicit access to the Rundeck jobs."
devops,3bub6t,solud,1 point,Thu Jul 2 16:25:26 2015 UTC,"Interesting. So the users could execute the jobs based on what they see in jenkins, or is the API key not visible?  Beyond the slick security division, do you think rundeck excels in areas jenkins doesnt? I'm really curious, we're in the middle of deciding on a bunch of potential tool changes so having things to look at is great."
devops,3bub6t,solud,1 point,Thu Jul 2 16:37:51 2015 UTC,"Jenkins to me is very ""code"" aware and has very slick tools to get you from lines of code to a deployable package. I find Rundeck to be more focused on the destination nodes themselves, and you can filter what jobs run on which nodes using ""facts"". I call them facts like Puppet because we have a script that synchronizes all nodes found in Puppet DB to a node definition file for Rundeck. So whenever infrastructure changes, those changes are reflected in the Rundeck node definitions.   Picture a job that deploys your app to the production cluster that runs Java 8 in the west datacenter. Such a filter might look like ""environment: prod  site: west  role: appA  javaMajor: 8"" and this job would automatically run on the right nodes, provided PuppetDB is correct -- another bag of tricks.   Edit: The script that synchronizes the node definitions is executed via Rundeck job on a schedule."
devops,3bub6t,solud,1 point,Thu Jul 2 16:52:46 2015 UTC,"Missed your question in my first reply. The API key is not visible to Jenkins users as they don't have access to configure Jenkins and view the stored key. The Rundeck jobs aren't really visible in Jenkins, you have to know what you're pointing at first and configure it in the job definition. But there is good output to indicate whether the job in Rundeck was successful."
devops,3bub6t,TempranilloStorm,2,Thu Jul 2 17:00:52 2015 UTC,Workflow Plugin. Helps with branching logic and defining build dependencies.
devops,3bub6t,jonbrouse,2,Fri Jul 3 12:51:52 2015 UTC,This might sound weird but I like the support plugin. It creates a package for a support team that includes a Dockerfile. That Dockerfile includes all of your plugins. That in combination with a copy of your jobs folder can recreate your Jenkins instance pretty quickly. Their official Docker image supports the import: https://registry.hub.docker.com/_/jenkins/
devops,3bub6t,superspeck,1 point,Sun Jul 5 06:38:13 2015 UTC,"I use Ansible, and there's an ansible playbook plugin for Jenkins. I use it to automate on-demand or scheduled tasks that need a record, like updating packages on all servers or a set of servers."
devops,3bub6t,senorsmile,1 point,Thu Jul 2 10:27:24 2015 UTC,We've definitely been looking at ansible to replace some of our capistrano tasks. We're using decentralized/dynamic puppet at the moment so cap takes care of some of the preparatory steps but it's definitely got some room for improvement.
devops,3bub6t,randomfrequency,1 point,Thu Jul 2 11:31:24 2015 UTC,"I second the ansible plugin.  It's a fantastic way to centralize your runs, and have an audit history!"
devops,3bub6t,derprondo,1 point,Thu Jul 2 19:16:40 2015 UTC,job-dsl plugin.
devops,3bub6t,randooooom,1 point,Thu Jul 2 20:40:23 2015 UTC,"Anyone using Jenkins heavily for Puppet workflow automation?  I want to use Jenkins to automatically setup jobs for modules in the Puppetfile, and then have one click deploys to dev, test, staging, and production.  Pretty much what this guy is talking about: http://philzim.com/2014/05/02/an-automated-r10k-workflow-that-works/  I'm not sure where to even start.  I have some experience with Jenkins, but not Jenkins with Puppet workflows."
devops,3bub6t,skarlso,1 point,Thu Jul 2 21:12:36 2015 UTC,"I wasn't really able to set Jenkins up correctly to run Rails tests. But I didn't have admin rights on the server back then, maybe should try again."
devops,3bub6t,absh88,1 point,Thu Jul 2 23:17:08 2015 UTC,Hi.   My absolute favourites are:   Folder plugin (let's you origanize your jobs into neat little namespaces) Multiphase jobs (let's you create chains which can run parallely and have  a common ancestor which controls the flow)  Configuration versioning (essential. It keeps a history of changes on the configurations of jobs.)  Rebuild last (convenient. Let's you rebuild the last build with its parameters pre - filled.)    These are some very basic plugins which generally make life easier around jenkins.
devops,3bub6t,nocpu,1 point,Fri Jul 3 05:29:52 2015 UTC,Job Config History is so useful. Also the tinybackup plugin.
devops,3bub6t,Ramone1234,1 point,Fri Jul 3 10:50:16 2015 UTC,"The CI Game is great for building a culture of continuous improvement. The rules were simple; if your name showed you as worst offender for broken builds that week, then you bought the donuts. You could remedy this by writing tests and improving quality. Simple!"
devops,3bub6t,copopeJ,1 point,Wed Jul 8 11:54:16 2015 UTC,"One pretty weird thing we do with jenkins is that we often use it instead of cron.  This means we could have a job that runs a small test suite against production every 5 minutes, or actually runs some application oriented logic (eg it kicks off our end-of-week reporting processes that email all users with the weekly report).    It works for us because it has a great history of all the runs and the details of each, and if one ever failed, jenkins lets us know about it right away.  Deployment of course couldn't be easier, because you just point jenkins at the jobs repo and tell it how to run the job (we just use make run for mostly everything)."
devops,3bufhl,iamondemand,6,Thu Jul 2 06:16:10 2015 UTC,"one excuse, Docker doesn't create a windows container, only Linux containers."
devops,3bufhl,numo16,1 point,Thu Jul 2 08:41:19 2015 UTC,"Docker doesn't create a windows container, only Linux containers   Microsoft and Docker are working on that"
devops,3bufhl,chaospie,1 point,Sat Jul 4 22:46:58 2015 UTC,"You can run windows in docker on top of KVM. I'm testing this out currently, with the aim of moving most of our static windows VMs we use for build onto coreos. E.g. https://github.com/rancherio/vm"
devops,3bufhl,whoisearth,-4,Sun Jul 5 09:28:12 2015 UTC,check that - https://docs.docker.com/installation/windows/
devops,3bufhl,whoisearth,8,Thu Jul 2 09:02:52 2015 UTC,"Perhaps I didn't say it in the right way, but I mean if your app deploys in a Windows environment Docker can't emulate that. Docker only emulates a linux environment.   Although you will be using Windows Docker client, the docker engine hosting the containers will still be running on Linux. Until the Docker engine for Windows is developed, you can launch only Linux containers from your Windows machine.   https://docs.docker.com/installation/windows/"
devops,3bufhl,SuperCow1127,3,Thu Jul 2 09:18:39 2015 UTC,To work in Windows I can only imagine the licensing costs that Microsoft would figure out for it.  Linux is so easy.
devops,3bufhl,Semisonic,6,Thu Jul 2 10:17:57 2015 UTC,Transition to Linux is costly and not always within the scope of a dev/sysop team
devops,3bufhl,LightShadow,1 point,Thu Jul 2 11:27:03 2015 UTC,but of course.  As someone who owns an application that resides on a windows system I'm well aware of the pain :(
devops,3bufhl,snozburger,3,Thu Jul 2 13:16:35 2015 UTC,"Docker can use LXC, but since 0.9 it's been using its own container library written in Go."
devops,3bufhl,smlikens,3,Thu Jul 2 14:23:11 2015 UTC,How is this not the same Docker article you can find everywhere else on the internet?
devops,3bruaz,5kKate,2,Wed Jul 1 17:15:03 2015 UTC,"The Goal:   Lead time from raw material to finished product is the key metric in manufacturing, “and that’s true for software, too,” Gene said. “How long does it take to go from code committed to code successfully running in production?”"
devops,3bsym0,packet_whacker,6,Wed Jul 1 22:04:21 2015 UTC,"Capitalize on your neteng background. NetOps is big, and most large enterprises are just beginning to wonder if they can apply DevOps principles to their networking infrastructure.   IME these shops still manage thousands or tens of thousands of networking devices as individual static nodes, each with its own beautiful snowflake of a configuration, and each one configured by hand -- or by a slow script once a year during a ""freeze"".  The networking teams exist in potentially decades-old silos, which have ossified to the point that every interaction within and without is slow and painful. There may be a deeply-ingrained culture of treating change as bad, or impeding external requests specifically to slow down the rate of change.   The DevOps mindset (and it's a mindset, not a can of soup your CTO can buy off the shelf) flips the paradigm on its head by asking the question ""How can we embrace change in our organization without breaking our organization?"" It answers that question with automation. The theory is that by replacing the boring, tedious, manual parts of a process with automation, you will see dramatic decreases in the time that it takes to improve or repair a network, and those repairs are in fact more safe than the old, slow methods, because you have eliminated the primary sources of error: human mistakes made through repetition error and in attention to detail.   When an IT organization cuts its time to delivery in half, and its failure rate by 2/3 or more, an interesting thing happens: its employees have more time. Suddenly, they're not firefighting all day. They have time to read up on that new Arista switch. Take some time off. Fix a few more nasty problems. The team members become much easier to work with, as they aren't as stressed. Requests that took months to fulfill now take days, or even hours. Other teams will wonder how this happened, and may begin to adopt the same practices.   From a personal growth perspective, I would recommend learning scripting first. You will be able to leverage scripting into automation in any role; you as a single individual might be able to effect change across 100 devices in an hour, with only a few errors. Your scripts can scale to tens of thousands, with zero errors -- so long as you test them! Nothing scales like fail!   Try learning Bash first. It's relatively easy, and most Ops people can understand it. Try to write scripts that configure network devices. Or say, connects to all the routers and stores a statistic and prints the results. Learn how to set up a git repository, and how to store your scripts in it. Learn about Gitlab. How could you use git with your networking devices? Wouldn't it be nice to have a Time Machine view of all of your network configs? Since most configs are the same, could you make a script that just changed parameters in a generic config template, depending upon which device were to receive that template? Are there tools out there that do this already? Take a look at Puppet, Chef, and Ansible."
devops,3bsym0,Unxmaal,1 point,Thu Jul 2 12:44:07 2015 UTC,"I don't represent the entire industry but I'd say there definitely is a place for that kind of skill set. Where I work at least, we (devops) are about to hire a network engineer in our team, with the goal of having him be a devops with strong networking knowledge. Since it's a small company, we end up doing everything from setting up new VMs to configuring BGP, so that works for us."
devops,3bsym0,soup_feedback,1 point,Wed Jul 1 23:45:58 2015 UTC,"That's the type of role I'm looking for. What kind of skills from the devops side do you look for in the net engineer, specifically? I'm trying to align my skills with finding a role like that"
devops,3bsym0,mrthrax,1 point,Thu Jul 2 04:36:48 2015 UTC,"Using any sort of scriping to handle repeatable network administration tasks is always a good place to start. Whether bash, expect, python, ruby doesn't matter at first. Eventually depending on what sort of shop you're looking for learning Puppet or Chef for network administration will really help. They both work with Cisco gear and I'm sure they work with other devices."
devops,3bukna,teleyinex,1 point,Thu Jul 2 07:22:06 2015 UTC,The font sucks and makes it unreadable for me. Let me know if the font ever changes.
devops,3bukna,jwcobb13,1 point,Thu Jul 2 07:49:33 2015 UTC,the a:hover animation effect of this page is awesome
devops,3bukna,tobozo,1 point,Thu Jul 2 11:20:16 2015 UTC,What are the benefits of configuring things this way vs rolling deploys behind a LB?
devops,3brtin,iamondemand,1 point,Wed Jul 1 17:09:21 2015 UTC,"Great article.   I once worked for a large company that had jumped to microservices with no standardization for deployment mechanism, because the dev teams were so ""empowered.""  It was the tower of Babel.  There are serious downsides to this design,  and you really do need to have a mature and consistent DevOps culture to pull it off."
devops,3bqyf8,iamondemand,2,Wed Jul 1 13:01:32 2015 UTC,"If only the QA team where I work could wrap their heads around #4, my life would be easier."
devops,3bqyf8,boatski,1 point,Wed Jul 1 17:16:31 2015 UTC,"If only I HAD a QA team where I work that could wrap their heads around #4, my life would be easier."
devops,3brf0p,nxtlevel-lot5,1 point,Wed Jul 1 15:24:35 2015 UTC,"get rid of the EOH block and just do:  not_if ""psql -c \""select * from pg_user where usename='DaBoss'\"" | grep -q DaBoss"""
devops,3brf0p,derprondo,1 point,Wed Jul 1 16:16:05 2015 UTC,tried it and I still got the same error. Which is the chef run fails on a second pass and says that the user already exists.
devops,3brf0p,mconigliaro,1 point,Wed Jul 1 17:09:32 2015 UTC,"Reformatted so people can make sense of what you're trying to do:  execute 'create DaBoss' do   user 'postgres'   command ""createuser DaBoss""   not_if ""psql -c \""select * from pg_user where usename='DaBoss'\"" |grep -q DaBoss"" end   This may have changed in Chef 12, but in 11, the not_if commands always ran as root, regardless of the user setting in the execute/bash resource. Try running your not_if command manually in a root shell and see if it works."
devops,3brf0p,mconigliaro,1 point,Wed Jul 1 16:20:13 2015 UTC,im using chef 11. If thats the case then thats the problem because root does not have access to psql.
devops,3brf0p,mconigliaro,3,Wed Jul 1 17:10:00 2015 UTC,"Then use Mixlib::ShellOut in your not_if. Something like this:  not_if { Mixlib::ShellOut.new('<command>', user: 'postgres').run_command }"
devops,3brf0p,mattstratton,2,Wed Jul 1 17:22:16 2015 UTC,well slap my ass and call me sally. Thank you so much! This fixed my issue and I will surely never forget it!!
devops,3brf0p,sleaze_bag_alert,1 point,Wed Jul 1 18:18:42 2015 UTC,"Actually seems I spoke to soon, now it doesnt create them at all. If I am doing a fresh kitchen run."
devops,3brf0p,myspotontheweb,1 point,Thu Jul 2 15:24:44 2015 UTC,"The call to .run_command probably isn't enough. You most likely have to check the return code of the command (i.e. .run_command.exitstatus), or worse, stdout/stderr (the Mixlib::ShellOut docs should be able to help you with that). What I typed above was just an example of how to use it to run commands from arbitrary user accounts, but once you get the parameters right, you should be good."
devops,3brf0p,mattstratton,1 point,Thu Jul 2 16:14:23 2015 UTC,"And for clarity, this is basically what the database cookbook does in its provider.   This kind of abstraction is the hardest mental hurdle in chef that I see people having."
devops,3brf0p,mattstratton,1 point,Tue Jul 7 13:13:46 2015 UTC,is there a particular reason you aren't using the database community cookbook to create postgres users?  It should have resource providers that do what you need.
devops,3blti0,iamondemand,3,Tue Jun 30 06:57:14 2015 UTC,"why would you use this, when you could use something like InfluxDB + Grafana?"
devops,3blti0,alexisnotonfire,3,Tue Jun 30 10:58:05 2015 UTC,"Yeah, it's a bit of a pet peeve of mine when log aggregation tools get used for metrics.  The feature set is completely different, and you can't do the same mathematical functions with Kibana that you can with a metrics tool like Grafana.  Still, I understand why people do it.  They get ELK set up and love it so much they want to correlate system metrics with their application and system logs.  They don't like the idea of setting up another tool with a different view.  I dream of a day when Kibana and Grafana can merge."
devops,3blti0,rickatnight11,2,Tue Jun 30 13:29:01 2015 UTC,Would you mind going into more detail? I'm currently facing the same decision. And I LOVE ELK. And it is already redundant and tested thoroughly. I also do not really have the time to aquire the same knowledge for the other tools.   But I would like to hear your opinion and possibly change my mind.
devops,3blti0,9874563217414563,2,Tue Jun 30 15:48:16 2015 UTC,"With logging tools you're generally looking to track important logs and their frequency (or the frequency of certain fields in the logs).  With metric tools you're looking at millions of data points and trying to graph them in ways that tell stories.  This means applying functions on the data.  If all of your metrics are being ingested into a logging tool, like Kibana, you miss out on useful functions like averaging, scaling, shifting, etc.  I'd love them to be merged so that I can correlate logs with metrics, but also because logs frequently have metrics that can be extrapolated."
devops,3blti0,rickatnight11,1 point,Tue Jun 30 16:08:19 2015 UTC,"ok, cool, thanks"
devops,3blti0,9874563217414563,1 point,Tue Jun 30 16:18:42 2015 UTC,Would agree 100% with you and I even did a comparison of elasticsearch vs influxdb and the size difference makes influxdb a much better choice.   Then I read this http://cds.cern.ch/record/2011172/files/LHCb-TALK-2015-060.pdf  And I have doubts now
devops,3blti0,Hexodam,1 point,Tue Jun 30 21:11:08 2015 UTC,"I can't speak to the performance characteristics or testing methodology, but I'm strictly talking about functionality. You simply can't do metric math with a logging tool like Kibana."
devops,3blti0,rickatnight11,1 point,Tue Jun 30 21:25:18 2015 UTC,Cern probably write their own   But elasticsearch 2.0 will bring many more math feature to the table that I'm sure kibana will use.
devops,3blti0,Hexodam,1 point,Tue Jun 30 21:29:05 2015 UTC,"That'd be great. I'm sure Grafana would support it pretty quickly, and we'd see it merge into Kibana pretty quickly."
devops,3blti0,rickatnight11,1 point,Tue Jun 30 22:38:39 2015 UTC,Elasticsearch 2.0 is going to change that a bit:  https://www.elastic.co/guide/en/elasticsearch/reference/master/search-aggregations-pipeline.html
devops,3bnspx,alexcasalboni,10,Tue Jun 30 18:29:23 2015 UTC,I think cloudformation is horrible. Dealing with that json when you have a complicated stack is a mess.   I love terraform and looking forward to that advancing.
devops,3bnspx,hijinks,2,Tue Jun 30 19:34:36 2015 UTC,At a minimum getting rid of that stupid state file!
devops,3bnspx,preflightsiren,1 point,Tue Jun 30 21:31:07 2015 UTC,"Another vote for Terraform, so much easier to use and the cross platform stuff is awesome as well."
devops,3bnspx,jmreicha,1 point,Tue Jun 30 22:53:52 2015 UTC,"Thank you /u/hijinks, I will totally have a look at terraform asap.  Their configuration files actually looks much easier to handle and maintain than a well-formatted JSON file. Do you know of any available conversion tool?"
devops,3bnspx,hijinks,-1,Wed Jul 1 08:08:42 2015 UTC,terraform doesn't create a cloudformation it will create most everything else.  Right now there isn't an option in terraform to import.  Like cloudformation isn't really good at getting up VPC and subnets but terraform can do that. You can create launch configs and ASGs also but not a cloudformation stack.
devops,3bnspx,zenmaster24,1 point,Wed Jul 1 12:26:56 2015 UTC,so it doesnt manage automation/orchestration? its only for manual work?
devops,3bnspx,hijinks,0,Wed Jul 1 12:38:16 2015 UTC,no its pretty much a point in time tool.. this is how i want my cloud infrastructure to look right now.   Its power comes shows when you want to use many cloud providers like  utilizing aws with digitalocean for example.
devops,3bnspx,stack72,2,Wed Jul 1 12:47:09 2015 UTC,CloudFormation was in place in the company I just started at. This was the first time I had used it and I hated it. Have just replaced everything with Terraform now.  Luckily there is the terraforming gem that will help you take your existing infrastructure and import it to Terraform
devops,3bne25,ElasticBox,3,Tue Jun 30 16:45:29 2015 UTC,"The author misdiagnosed a problem with incompetent organizations as a problem with technology.  Of course it's a low-quality spam advertisement, so I should keep my expectations realistic."
devops,3bne25,PhotonTurtle,1 point,Wed Jul 1 00:15:15 2015 UTC,This subreddit is about 90% spam
devops,3bicey,smefju,2,Mon Jun 29 13:43:25 2015 UTC,"The OoM killer is needed in Linux due to memory over-commitment. That is it is possible to allocate more RAM and Swap then is present on the system. That's counter intuitive since the definition of malloc() says it should fail in that situation (and so should brk/sbrk/mmap/mremap on the syscall side.)  So why is that possible? fork() and copy-on-write, an optimization for short-lived child processes and fork() that will only exec() anyway. Forking daemons like Apache in pre-fork config are very, very good at triggering the OoM killer."
devops,3bicey,GahMatar,0,Mon Jun 29 16:51:32 2015 UTC,"I totally agree, OOM Killer is needed"
devops,3bicey,sucka_puncha,1 point,Mon Jun 29 20:15:51 2015 UTC,You should also know the OOM won't always save you.  I had a box last week that crashed even though the OOM killer nuked several large processes.
devops,3be6yu,alexcasalboni,9,Sun Jun 28 11:31:53 2015 UTC,We use something similar at work. It's interesting to see who falls for it. The emails vary from blindingly obvious to pretty real unless you really know what you're doing.   Failing too many or too easily means you get to do some security awareness retraining ...
devops,3be6yu,anomalous_cowherd,7,Sun Jun 28 12:39:30 2015 UTC,"(Creator of CuttlePhish here).   The emails vary from blindingly obvious to pretty real unless you really know what you're doing.   One really interesting thing is that most of our templates are actually copied directly from real emails that these companies send out. I couldn't believe it--a lot of the real emails send out by these companies look incredibly fake, complete with ""click here"" type messaging."
devops,3be6yu,naftaliharris,1 point,Sun Jun 28 21:55:22 2015 UTC,"Wells Fargo and Cisco both use this amazingly stupid 'secure email' technology that consists of sending you a .html attachment you have to then open in a browser. They basically use as many red flags as possible for phishing, except it's real and how Wells Fargo communicates in certain scenarios."
devops,3be6yu,musicandwords,1 point,Mon Jun 29 03:42:30 2015 UTC,"Does it have an attachment though?  Opening a link through the browser isn't necessarily dangerous (only if you then proceed to enter account details or if it tries to execute a java applet etc) and if they do look real then why support external links in email at all?  Just strip them at a mailbox level.    I think you should have another level that returns the user to a fake login page, and if the user then tries to log in they get cuttlefished.   That said if they open a PDF then that's a different matter altogether because then they're executing local code and free game for any type of ransomware etc.  Also someone that's targeting you won't do it this way at all, they'll find out who works in a company then send emails from someone else's address at the company.  I.e. John doe will send a dodgy pdf to Jane doe.  Only untargeted attacks will use services such as AWS, Paypal etc and they are the least dangerous.  Neat idea though, I'm not complaining I just think there's some room for improvement."
devops,3be6yu,Ihasn,4,Mon Jun 29 08:29:13 2015 UTC,I'm very interested in testing this but how do I know cuttlephish or another service is legitimate and not going to then turn around and sell my companies email addresses?
devops,3be6yu,anomalous_cowherd,3,Sun Jun 28 14:31:13 2015 UTC,"I guess you don't, like almost anything else you sign up to on the web. You need to check it out by reputation, time in business, the usual sort of things you use to decide whether company is shady or not. You could also test it by using honeypot email addresses that only they know and seeing what turns up at them... Just to be clear, I have no knowledge of this company either way, this is the first I've heard of them."
devops,3bfxx6,h0oS,-2,Sun Jun 28 21:47:13 2015 UTC,"No, not selinux integrated in Java (that sounds a bit painful) rather embedding a hypervisor directly in the JVM; Application level virtualisation. I'm not going to pretend to know the implementation details but as far as I understand the 'hypervisor' sits between the bitcode interpretation and native system calls. From my own, pretty rigorous testing this technology is stable, stable enough to deploy into production."
devops,3bfvcx,h0oS,0,Sun Jun 28 21:25:55 2015 UTC,Taking DevOps thinking and expanding it to its logical conclusions for the enterprise.
devops,3bg5o5,h0oS,0,Sun Jun 28 22:53:28 2015 UTC,"Ok, so this is post can be considered to be a little off topic, but it is applying the expanded conclusion of DevOps thinking (KnowIT) to innovation, another subject close to our hearts, here in the DevOps community. I apologise in advance if this is too far out of the subject matter for you, but I ask you to consider, if you need to sell DevOps to your managers, use this approach."
devops,3b974k,humanNumberMit,5,Sat Jun 27 00:19:50 2015 UTC,"lots of solutions being thrown around here, with very few problems listed.  what is bad about your current process? why do you want to change it?"
devops,3b974k,afex,3,Sat Jun 27 20:17:46 2015 UTC,+1 here.  Every environment has its idiosyncrasies.  Simplify the pipeline if possible....
devops,3b974k,itsmemattchung,1 point,Mon Jun 29 02:15:49 2015 UTC,What kind of idiosyncrasies?  How do I identify and measure them?  What idiosyncrasies would you expect out this pipeline?
devops,3b974k,ProgrammingAce,1 point,Thu Jul 2 21:02:13 2015 UTC,"no process is perfect.  By studying the defects/inefficiencies in the process, I learn about the system and identify spots where I can help add value to the company...and not get fired and stuff.  But mainly, learning about where the failure points are helps me learn how the architectural pieces fit together.  Purely a learning process thing."
devops,3b974k,neurointervention,3,Thu Jul 2 20:54:27 2015 UTC,We do ansible -> Packer -> Ansible -> (AMI/VMware)  Shell scripts are pretty much banned in our shop. Anything you can do in bash you can probably do easier between python or ansible.
devops,3b974k,ProgrammingAce,3,Sat Jun 27 05:45:18 2015 UTC,"I'll probably get screamed at right now, but forgive me, I'm a sysadmin.  What's wrong with using bash scripts as ""glue"" for Ansible?  I tend to always write them as they're well portable and understandable by pretty much everybody. What am I missing?"
devops,3b974k,pooogles,2,Sat Jun 27 21:27:59 2015 UTC,"Shell isn't the worst thing ever, it's worked well for decades. But ansible by itself is much easier to make idemptent, and is automatically self documenting."
devops,3b974k,freesheep,1 point,Sun Jun 28 02:00:54 2015 UTC,Thanks.  I'm gonna default to Python from now on now that I know it's possible.  Any tools you recommend for Python-AWS interactions and/or metrics?
devops,3b974k,beliefinphilosophy,3,Sat Jun 27 08:26:33 2015 UTC,Boto3?
devops,3b974k,kondor6c,1 point,Sat Jun 27 11:17:38 2015 UTC,"Sounds like your following close to industry protocol. My shop is about the same in terms of steps except we use cobbler for kickstarting systems and have never heard of packer. Ansible is like a fine wine, it's getting better with age."
devops,3b974k,ClutchSlave,1 point,Sat Jun 27 04:48:59 2015 UTC,For Autoscaling: Lamda - > Daily Base + Userdata + Packer -> Ansible for configs.
devops,3b75g9,bradtech,3,Fri Jun 26 14:48:37 2015 UTC,"The issue with any tool that would ""create"" infracode based on a running machine is, how would it know what resources mattered? If you think about it, it would, at minimum, create a ""file"" resource for every file on the file system, a ""directory"" resource for every directory, etc.   Chef is not magic. It's a tool to enable the people who have the best knowledge about their systems (i.e., you) express this in declarative, modelable, and testable ways."
devops,3b75g9,mattstratton,1 point,Fri Jun 26 16:17:09 2015 UTC,"I agree, I think we can automate up to a certain point a new functioning SQL Server install, IIS Server, etc. At some point it's probably best to stop with the customizing, and recreation of some settings. On existing systems getting into versioning/change control might be the best bet."
devops,3b75g9,dominic_failure,1 point,Fri Jun 26 18:48:51 2015 UTC,"About the closest you can get is with Hashicorp's packer, or with a docker container - both will produce images which can be used elsewhere.  Of course, those are both heavily geared towards Linux VMs, not Windows."
devops,3b75g9,jtimberman,1 point,Fri Jun 26 17:43:36 2015 UTC,Packer can create Windows VMs. Some helpers here: https://github.com/packer-community/packer-windows-plugins
devops,3b75g9,2_advil_please,1 point,Fri Jun 26 18:16:33 2015 UTC,Thanks to both of you. I am looking into packer.
devops,3b75g9,271828182,1 point,Fri Jun 26 18:46:47 2015 UTC,"Even if a ""reverse"" recipe writing tool were to exist, you'd spend more time sifting through millions of benign changes (all those unique and per-system registry changes, for instance) to find the ones that really mattered.  You'd still have very little chance at arriving at a simple, clean recipe that describes which things changed accurately.  You're far better off recreating those systems the ""right way"".  That is, in a declarative format where you start at some state, create a test for the desired state, verify that the test fails in the 'before' state, implement a change to that state (chef recipe), and pass the test to verify the 'after' state is correct.  Therefore, you can say that you achieved a desired state change repeatably and validated it both before and after for correctness.  You end up with a mechanism that both perfectly documents and implements those changes.   If you are wishing for a tool like this because you don't already have a document or series of ""build instructions"" to precisely recreate that critical Domain Controller's configuration right now, that's a gap you need to fill regardless.  Once you figure those steps out, you probably know that's where Chef comes in.  There's no shortcut because taking the shortcut skips all the testing/validation/documentation inherent in the recipe/test building process."
devops,3b75g9,engagThe,1 point,Fri Jun 26 18:22:29 2015 UTC,"Yeah, I have thought about that. bringing in a lot of garbage from a windows server that has been siting around for a while.  I have been working on a documented build process that hasn't been in place. I think like you stated it would be easier to do this through a step by step clean method from scratch versus getting something from existing system to go off of."
devops,3b75g9,mattstratton,1 point,Fri Jun 26 18:31:16 2015 UTC,"The issue is not how long the system has been around. Its more about how you know what's important and what's not. Maybe of you had a ""base install"" and you were somehow able to ""delta"" that against your desired state, you could generate a list of changes. But even in that scenario you would probably need to specify categories or specifics that you wanted to delta against, lest you end up with every log file and stray download specified in your result.   Maybe if, for some reason, you had a run book you wanted to convert into code, you could have someone manually perform run book steps once and diff against that machine... But you would still need to manually ""curate"" the results to get a meaningful end product. Otherwise how is it any different then cloning a VM?"
devops,3b2py6,alexcasalboni,7,Thu Jun 25 14:18:27 2015 UTC,I don't get it.  They are talking about setting up either Strongswan or Openswan and calling it OpenVPN.  OpenVPN != Ipsec.
devops,3b2py6,sucka_puncha,3,Thu Jun 25 19:15:46 2015 UTC,"They are just using the OpenVPN image because it has the prerequisite IPsec packages installed.  I have 34 Amazon Linux OpenSwan servers deployed in AWS using Neykey.  I'm interested to hear from anyone who has used the Klips stack with OpenSwan, dynamic routing would be so much better."
devops,3b2py6,AwsIsMyLego,1 point,Thu Jun 25 23:03:49 2015 UTC,SSL VPN not the same as IPSec just use openswan. Takes about 5-10 minutes.
devops,3b4vvm,ElasticBox,2,Fri Jun 26 00:08:21 2015 UTC,"I kinda want to play with it, but ansible just works too well."
devops,3b039t,alexcasalboni,0,Wed Jun 24 22:01:20 2015 UTC,"It'd probably break the 52-bit hash, but I expect the assumption that it's a human that's being tracked (~2-foot grid) will be wrong in the near future (internet-of-things and all that crap)"
devops,3aygmq,eleitl,2,Wed Jun 24 14:46:45 2015 UTC,Salt seems to have active development on OpenBSD.
devops,3aygmq,davidj911,1 point,Wed Jun 24 22:38:41 2015 UTC,Post the question on /r/openbsd
devops,3aygmq,mintycoke,1 point,Thu Jun 25 04:44:55 2015 UTC,"it is, this is some crosspost from there."
devops,3aygmq,phessler,-5,Thu Jun 25 11:32:24 2015 UTC,Linux.
devops,3awxua,YourFatherFigure,14,Wed Jun 24 04:07:21 2015 UTC,"If you ditch your chef server to become 'master-less' you are just moving that role to the tool and system you use to build the machine images.  There's still a master, only now it takes you 10 times as long to roll out any changes you need to make."
devops,3awxua,AwsIsMyLego,5,Wed Jun 24 04:17:47 2015 UTC,"Maybe its different with Chef/Puppet/Ansible but running Salt in masterless mode you lose a whole chunk of features, config management in Salt is almost secondary to the fact its a message bus for your infrastructure. Mine and reactors are essential to our setup these days, mine means we can have configs auto populate with the IPs of other systems (say clustering or web/haproxy) and reactor means we can fire off events from one system and have another system do something (say have Jenkins deploy code to a branch then fire off an event for that system to run a highstate or have a new system update its DNS when it comes up).  While immutable infrastructure makes sense in some situations to me having an event driven, dynamic infrastructure is way to powerful to give up."
devops,3awxua,deadbunny,2,Wed Jun 24 07:48:03 2015 UTC,"100% this.  The way I use my toolset is more than just an abstraction layer for managing configurations. The value of the Salt mine is huge for me, especially in a cloud environment. I've also taken advantage of the salt-api to expose some things to our developers that they can use without having to learn all the details of our infrastructure."
devops,3awxua,drawsmcgraw,2,Wed Jun 24 16:03:37 2015 UTC,"There's still a master, only now it takes you 10 times as long to roll out any changes you need to make.   Why would masterless take 10 times longer?"
devops,3awxua,blahism,1 point,Wed Jun 24 20:46:50 2015 UTC,"Experience tells a lot of us this sounds a lot like moving the problem around. So instead of a scaling problem on your CM tool, you now have a scaling problem on your image/CI delivery pipeline."
devops,3awxua,pydry,6,Thu Jun 25 01:49:49 2015 UTC,"This is about 30% of the reason why I've been moving everything to ansible.  The most reliable infrastructure is infrastructure that doesn't exist. It doesn't have to be configured, doesn't have to be monitored and doesn't go down. Our puppet master, on the other hand, goes down all the freaking time.  This whole 'default pull every 15 minutes' thing makes no sense either."
devops,3awxua,blahism,1 point,Wed Jun 24 05:05:02 2015 UTC,"If your puppet master is going down all the time, something else is wrong...    and you do know you don't have to pull, you can use mcollective to orchestrate changes on demand (or use consul execs or whatever..)"
devops,3awxua,pydry,1 point,Wed Jun 24 13:27:58 2015 UTC,"Sure, we have plenty of problems.  Even if everything were perfect though (and it never is), I still don't want the headache of maintaining servers that don't need to exist."
devops,3awxua,blahism,2,Wed Jun 24 13:45:46 2015 UTC,"The reason for them to not exist in such a case as you describe is superficial though and what are you maintaining that isn't maintained by puppet itself? If you're writing infrastructure as code through puppet already, the knowledge of maintaining puppet infrastructure is codified (or should be) too.  Of course, i'm just a biased observer that runs puppet and has no problems.  Foreman (2 nodes), Puppet Masters (5 nodes),  PuppetDB (2 nodes) and puppet maintains it all.."
devops,3awxua,pydry,2,Wed Jun 24 14:23:27 2015 UTC,"The reason for them to not exist in such a case as you describe is superficial though and what are you maintaining that isn't maintained by puppet itself?   There's nothing superficial about wanting more reliable infrastructure and fewer potential points of failure in your systems.   Of course, i'm just a biased observer that runs puppet and has no problems. Foreman (2 nodes), Puppet Masters (5 nodes), PuppetDB (2 nodes) and puppet maintains it all..    It was definitely the best thing around in 2010, but just like with SVN, eventually you have to admit that something better came along and leave the past behind."
devops,3awxua,blahism,2,Wed Jun 24 14:33:19 2015 UTC,"There's nothing superficial about wanting more reliable infrastructure and fewer potential points of failure in your systems.   How are you coming up with such a statement?  Without a central catalog and reporting capability, how are you quantifying this?     It was definitely the best thing around in 2010, but just like with SVN, eventually you have to admit that something better came along and leave the past behind.   haha.. now you're just being a dick."
devops,3awxua,pydry,2,Wed Jun 24 14:41:54 2015 UTC,How are you coming up with such a statement? Without a central catalog    Git is my central catalog. However you write your playbooks - whether as a puppet manifest or an ansible playbook it should be version controlled.   reporting capability   You don't need a server to get reports about deployments.
devops,3awxua,blahism,1 point,Wed Jun 24 14:45:42 2015 UTC,"Git is my central catalog. However you write your playbooks - whether as a puppet manifest or an ansible playbook it should be version controlled.   Git is a source repo, it doesn't provide a state of your resources but rather a definition..    You don't need a server to get reports about deployments.   you need some orchestrator..  but same goes for puppet.. you can query puppetdb or use mcollective to query the collective.. point is, you're doing something that manages something and reports something and puppet does it, chef does it, salt does it and ansible does it."
devops,3awxua,pydry,2,Wed Jun 24 14:52:09 2015 UTC,"Git is a source repo, it doesn't provide a state of your resources but rather a definition..    Run one command and it should be a state. Otherwise what's the point?   you need some orchestrator.   Sure, but there's no reason it can't run on your laptop and just do everything over ssh."
devops,3awxua,blahism,1 point,Wed Jun 24 15:03:58 2015 UTC,"Run one command and it should be a state. Otherwise what's the point?   you don't think there is a point to reporting on state? using the available meta data to export/share resources? being able to collect resources to act upon them to effect state? you can do a lot of cool stuff with this.   Sure, but there's no reason it can't run on your laptop and just do everything over ssh.   No reason it can't be from laptop and over ssh, consul, mcollective or even ansible if you run puppet either..  Some reason it just seems this is an idealistic debate, and not based on the merits of the technologies/services were talking about.. am i right?"
devops,3awxua,viper233,1 point,Wed Jun 24 15:09:47 2015 UTC,"Of course, i'm just a biased observer that runs puppet and has no problems. Foreman (2 nodes), Puppet Masters (5 nodes), PuppetDB (2 nodes) and puppet maintains it all..   Would it not follow that maintaining less infrastructure would reduce the complexity (well.. cost?)  and increase agility? You seem to be running (9 hosts), 3 components (not including mcollective) for your master/slave configuration.   I'm very impressed you've had 'no problems' running your puppet infrastructure ;)"
devops,3awxua,blahism,1 point,Wed Jun 24 20:39:35 2015 UTC,"I have 1.5 thousand +  nodes. Puppet simplifies it greatly and there is no overhead in managing puppet. Puppet itself is managed by puppet and we use the same methodology to build puppet as we do to build our applications that run the business.  9 nodes is what, 1/2 of 1% of my server distribution? i'd say i have a pretty good ratio.. oh.. and as i migrate to puppet server 2.1 (the clojure server) i can probably drop out 1 puppet master, but i sort of like being able to do feature testing on one server with a limited population and not impact catalog compile times.. (test an upgrade at some scale..  move servers to new releases one at a time..  if it fails, revert snapshot and roll back.. so on and so forth.. Everything I practice in managing puppet is the same experience i have in sysadmin/operations of anything)  What is so impressive about puppet running well? It's really pretty straight forward and solid these days."
devops,3awxua,viper233,1 point,Thu Jun 25 01:14:14 2015 UTC,"Thanks for the reply!  Does everyone in your group/organisation have the same level of competency as yourself with puppet? Are devs able to manipulate puppet to meet their needs? Do they find it flexible for testing changes to dev/staging environments? Does/has managing puppet been a large part of your role does it only account for a small amount of you work (to develop and maintain it).   Does puppet work seem to be delegated to the operations(devops) team (/silo) and is it seen as a bottleneck for other groups in an organisation.  I've seen and read a scenarios where a lot of 'skunkworks projects' have popped up using master less tools. (Maybe I have limited exposure?) Recently there have been major difficulties with re-factoring puppet code to accommodate for version update, especially from 2.6 to 3.0 and now from 3.6 to 3.7 updates. A lot of organisations have been trapped by locking into a version (to resolve mixed version issues) of puppet which then creates issues when trying to utilise puppet forge modules that require later versions.  A lot of this relates to organisational issues but is exacerbated by a master/slave approach.  I'm glad you have a working/enjoyable puppet infrastructure, after 6 years and  several organisations implementing puppet solutions I was never able to find myself in such a situation. (Again, could be lack of exposure)."
devops,3awxua,blahism,2,Thu Jun 25 06:03:28 2015 UTC,"The 2.x to 3.x jump was a fairly drastic change, the 3.x through 3.x has been really un-eventful as Puppet has learned a lot in delivering releases.  With 4.0 there was breaking changes, but the recent 4.1 with puppet server 2.1 is now 3.x backwards compatible so you can run the new & old with same puppet masters.  We operate in multiple teams. I'm on a cloud engineering team sort of creating a platform, we have a web ops team doing operations - with access to puppet to do stuff on Linux and we have a winops team that has puppet for windows.  We provide API & interfaces and a pipeline for our developers so they can publish their apps and we're trying to help them along in the new and shiny docker/image/container world..  Our skunkworks projects are the common ones you see - mesos/docker/streaming data platform but we have found that puppet becomes much more critical since now it has to scale out the underlying platform and be a bit more elastic - so we still use puppet masters but have to tweak towards more ephemeral nodes as we move into the future if that makes sense.  The capability of master servers still outweighs the quirks of masters on ephemeral nodes.  Add a fact and purge puppetDB and maybe customize the dashboard so ephemeral nodes are tracked different.  Still nice to have puppet+hiera+consul able to interact and own the entire lifecycle regardless of old & new.  The master slave approach gets difficult at the 5k node mark.. you need to make the decision if you're going to cluster off and operate multiple masters, productize your vertical operations/data centers and much more - the scaling problem is there but to be honest, its mostly a scaling problem of the human brain and how to handle such scale and translate it to operations/delivery/build/pipelines.  The puppet community has matured and grown a lot and shares a lot of information..  i'm biased from experience and the fact i help run the austin puppet users group, so i get l lots of insight into how others are using puppet good/bad..  perhaps find a user group near you?  luckily we also have an awesome salt and chef user group i can partake in just to see what others are doing there too :)"
devops,3awxua,kaydub88,1 point,Thu Jun 25 13:15:33 2015 UTC,"The most obnoxious thing about the ""default pull every 15 minutes"" is how it yanks the rug out from under people who are trying to inspect the server state.  If I have keys to get in at all, then I shouldn't have to worry about the whole underlying system potentially being in a state of flux.  (This is exactly the annoyance I was thinking about when I wrote about a hypothetical someone ""adding a quick configuration tweak we forgot to put in the image"")"
devops,3awxua,sucka_puncha,1 point,Wed Jun 24 20:49:41 2015 UTC,Why not change the default?
devops,3awxua,pydry,1 point,Thu Jun 25 02:59:56 2015 UTC,"What's more fun is when the agent dies.  Of course ansible is slow as hell, so there is always a tradeoff"
devops,3awxua,TurnDownForDevOps,2,Wed Jun 24 23:57:04 2015 UTC,"Used to be slow. There were a lot of optimizations done in the last 18 months.  Puppet's not exactly fast, either."
devops,3awxua,sucka_puncha,1 point,Thu Jun 25 02:40:30 2015 UTC,"Ehhh I've found that seems to mostly be due to executing ansible from within a non-datacenter network.  For ease, I've written a core puppet rolebook that has the full inventory and purpose groupings. It basically runs git pull on each system to pull their appropriate roles+rolebooks, then fires off the downloaded rolebook on each system and uses wait_for to check for status/state across all the systems. This applies for updates too.  I never quite realized how much my internet connections limit prep speed, and doing it this way allows each node to run through their steps without having to necessarily wait for others due to network anomalies or other reasons."
devops,3awxua,mudfly,1 point,Mon Jun 29 21:58:28 2015 UTC,"Ehhh I've found that seems to mostly be due to executing ansible from within a non-datacenter network.   Yeah, you're probably right.  I usually was running it via OpenVPN."
devops,3awxua,zeroXten,3,Tue Jun 30 00:52:24 2015 UTC,"I used the masterless approach to provision a server we deployed to our retail stores. Guess what, there were changes that needed to be made either because something was missed, there was a bug or someone requested a new feature. This caused configuration inconsistencies in our environment. This was on a physical host, so I was unable to simply deploy a new vm and move my cname to point at the service. This really depends on your environment and needs though, some people are using masterless to scale faster than a master allows.  http://ryandlane.com/blog/2015/04/02/saltconf15-masterless-saltstack-at-scale-talk-and-slides/"
devops,3awxua,neoice,3,Wed Jun 24 04:45:01 2015 UTC,"If you understand what the various tools give you, then you just pick the right tool for your environment, or even parts of your environment.  A lot of DevOps talks etc seem to focus on running infrastructure like Netflix, Etsy, Facebook, Google etc. That's great and everything, but it doesn't always translate well to more common environments that are full of legacy crap. So you end up with a bit of a balancing act. Some of your stuff can probably be put it AWS with uber auto-scaling of golden images, but some of it probably can't.  So, I really like the idea of ""immutable infrastructure"" but it isn't always appropriate. Good luck doing that with a MySQL or Postgresql database (Cassandra could probably work). The nice thing about a master approach such as Puppet or Chef is that you can easily bolt it on to existing legacy systems and get some advantage. You could use it to build your images for your AWS web stack, but you could also manage basic systems (e.g. users, monitoring agents, log management) stuff on your older infrastructure.  I'm a big fan of choosing the right tool for the job, and what other people do is interesting to learn from, but someone outside your org can never really tell you how you need to work."
devops,3awxua,zeroXten,2,Wed Jun 24 08:33:07 2015 UTC,"So, I really like the idea of ""immutable infrastructure"" but it isn't always appropriate. Good luck doing that with a MySQL or Postgresql database (Cassandra could probably work).    the containerization movement needs to solve ""externalized data stores"". RDS works, but we really need open source elastic self-balancing data stores."
devops,3awxua,neoice,1 point,Wed Jun 24 12:20:36 2015 UTC,"One thing I'd quite like to try is MariaDB in front of Cassandra. Not sure how well that would work though in reality.  Edit:  But yeah, RDS is just making it someone else's problem."
devops,3awxua,zeroXten,1 point,Wed Jun 24 12:36:34 2015 UTC,"But yeah, RDS is just making it someone else's problem.   that's not wrong though. if you go ""service-oriented architecture"", it might make sense to have an internal ""database"" service team. for most developers, the database is already just a magic file handle that's someone else's problem (Operations).  using today's stacks, that internal database service is going to look pretty dated. there simply isn't a good answer to ""I want to destructively update a DB node"" or ""I want to add a new node and automatically balance data to it"". it's all snapshots, replication streams and DBA sweat.  there are a few alternative data stores that come close. Cassandra was on our radar for that problem, but I don't think we were able to figure out a way to model our data in Cassandra."
devops,3awxua,neoice,1 point,Wed Jun 24 14:42:22 2015 UTC,Yeah nicely put. Have you thought about MariaDB in front of Cassandra?
devops,3awxua,metarx,1 point,Wed Jun 24 14:55:05 2015 UTC,"no, but I just sent this article to my co-worker who did the Cassandra deep-dive.  any other good resources we should read?"
devops,3awxua,tobascodagama,1 point,Wed Jun 24 16:19:50 2015 UTC,"Your in luck, flocker is a project talked about at dockercon who's goal is to tie storage to their containers(local and remote). Will/does leverage openstacks cinder api as optional storage... Pretty cool stuff really.  Allows for moving a container to new hosts along with its storage."
devops,3awxua,blahism,3,Mon Jun 29 06:02:52 2015 UTC,"In a truly immutable, cattle-based world, I agree that a ""master"" infrastructure for config management becomes redundant. Most of the data you need to manage on your master is just environment-specific stuff that can be replaced by service discovery through Zookeeper, etcd, Consul, Kubernetes or whatever else that you're probably running anyway. Getting the right data into your master is non-trivial in an environment that scales dynamically, so it makes sense to skip the master entirely and go straight to the tools that are actually meant to support service discovery for dynamic environments.  Of course, most of us are still dealing with pets. That's where masters continue to make sense. If you have persistent nodes that you're updating periodically, you probably want something akin to an archive repository for your configuration. Then you can orchestrate an upgrade flow around ""push bits -> upgrade B nodes -> do a test -> promote or revert B nodes"". The master servers let you configure A and B via environments to make this pretty painless.  Master servers are also useful for pet-based environments where you might do occasional horizontal scaling. You can imagine a load balancer, for instance, that sets up its cluster configuration by querying your chef-server for a list of service nodes.  Basically, I think there's a sort of Bell curve for the usefulness of master servers. If you have very few nodes, master servers are overkill. If you have very many nodes, you've outscaled master servers. In between (which, TBQH, is where most of us live anyway), master servers can be pretty useful."
devops,3awxua,blahism,2,Wed Jun 24 19:57:57 2015 UTC,It's my opinion that you have to achieve a certain maturity model before what you describe is even possible.  If you haven't mastered infrastructure as code and can't handle the scalability of centralized/master based approach then i don't think you gain anything by ripping it out and going with a continuous delivery cycle of immutable infrastructure of ephemeral nodes since you're just changing paradigms without solving the scaling issue of either centrally managing non static resources or centrally provisioning and deploying  static resources.  I'd wager that going immutable and ephemeral requires more maturity across the entire org on a scale much more drastic than a well engineered centralized config management system. (if that makes sense..)   - or unless your scale simply requires 10s of thousands of nodes.. but again.. maturity model. are you there? :)
devops,3awxua,drawsmcgraw,2,Wed Jun 24 13:34:09 2015 UTC,"You're getting at something interesting here but I think I disagree.  Could you elaborate on what you see as the scaling issue for the problem of ""create/continuously-deploy an image from a machine-description""?  Devops terminology is often softly defined and confusing, but I think of this as the provisioning problem, which is solved with CM languages.    There's a related but to me almost separate problem of actual ""configuration management"" which does have scaling considerations.. but this is a problem best solved with etcd, zookeeper, etc.  I think you're conflating the provisioning problem and the configuration management problem.  Maybe that's reasonable, but to me the rationale is not intuitive.  Care to elaborate?"
devops,3awxua,burning1rr,2,Wed Jun 24 22:06:19 2015 UTC,"You're over thinking it :) ...  I feel that in a way, if you can't handle configuration management, you simply haven't matured to the point where image management is going to be any easier. And by mature, i don't mean you're not capable, but there is a huge amount of learning that the entire organization needs to go through to make it happen and if you haven't took the initial steps, the leap isn't going to solve the problems.  For 99% of the organizations out there, puppet/chef solves the problems and is still part of the tools to move to immutable infrastructure if you have matured to the point where that makes sense.  If you don't like scaling your CM to handle something, have you tried un-scaling the problem? run CM once a day? during provisioning?  Use consul to exec your CM if your KV changes? Use some orchestration tool?  Puppet/Chef/Ansible/Salt is also fairly trivial compared to etcd/zookeeper/consul where you have epehemeral nodes, dynamic/template driven discovery & infrastructure..  and to be honest,  puppet/chef/salt + those technologies is pretty awesome too :)  I'm just being an armchair quarterback here from my 25 years of IT experience.. mind sharing some numbers about the scale/problem/goals you're trying to achieve?"
devops,3axxkn,johnjones4,9,Wed Jun 24 11:44:33 2015 UTC,"Unfortunately ""devops"" is not a job title. When you are at a place where people have that word in their job title it's almost certain they are doing it wrong. If your company uses agile you don't submit postings for ""agile"" jobs because that wouldn't make sense.  To me, when a place wants to hire a ""devops person"" that usually means they are over-simplifing ""devops"" to mean ""automate all the things!"" When they realize that just automating all the things doesn't magicially fix their problems then they just call devops a stupid fad.  There needs to be discussion and collaboration between your teams. Sure, you can give your dev team the ability to deploy their code all the way to production, but unless there have been discussions about how to safely implement that then you are just setting yourself up for disaster. The idea is to make devs more responsible and involved when live code breaks, but do the devs understand that, or do they just still expect the ops team to find the problem and report it back to them to be fixed? Has the ops team consulted with other teams to ensure they are giving then the features they want for automation or is ops just automating how they see fit and just telling the other teams ""this is what you get""?  If all you are doing is trying to reduce how long it takes the dev team to get a new release to the ops team then all you are doing is implementing automation. That is not devops, you are still just ""throwing things over the wall."" The idea behind devops is to get rid of that wall."
devops,3axxkn,sabowski,1 point,Wed Jun 24 12:41:55 2015 UTC,"And who should coordinate this brave new world of dev+ops cooperation? That is the role of a ""devops person""  In fact not having a single person or role, allows everyone to give lip service to the philosophy of devops without anyone being personally responsible for the execution.  Personally I think the title ""DevOps Administrator"" is descriptive yet generic enough to cover most cases. You could also swap ""Adminstrator"" out for ""Engineer"" or ""Coordinator"" depending on the person and their responsibilities.  But when a company is going through the cultural and procedural transition into a devops oriented approach, someone needs to be the evangelist, the architect, the champion and the central clearing house of information and efforts. This is a devops role."
devops,3axxkn,271828182,3,Wed Jun 24 22:23:20 2015 UTC,"You're not wrong, but the reality is that most of these job postings looking or ""devops"" people are looking for someone that can do lots of different tech things (aka a generalist) with a focus on automating stuff. The people hiring often have little interest in a culture shift because they incorrectly think that all you need to do is automate and then all your problems are solved.  The end result is that people end up saying ""well DevOps is just a stupid buzzword"" because just automating stuff without actually making any effort to actually implement DevOps practices means you are just pushing shit around more quickly."
devops,3axxkn,sabowski,4,Wed Jun 24 22:38:25 2015 UTC,Cue the debate about DevOps as a job title/role ;)
devops,3axxkn,zeroXten,1 point,Wed Jun 24 12:04:33 2015 UTC,Yeah I worried about what I was getting myself into here.
devops,3axxkn,superspeck,3,Wed Jun 24 12:38:19 2015 UTC,"Instead of creating a ""devops"" role, you need to decide what you actually need. Chances are, it's going to be one of these things:    Automation/deployment/CI Programmer Systems Engineer embedded in your team who understands PHP Full Stack Developer   There's a VERY good chance that one of those three titles is going to be a lot closer to what you need. Or, to make it even simpler: Do you need a coder who does Ops, or do you need an Ops person who groks code?   I just went through the process of finding a new job. I'm an Ops guy that does automation, CI, and occasional tools programming. Half the time, I went to an interview and found out after sitting down with them that they were looking for a full fledged tools programmer, or that they were looking for a full stack developer.  So there's your starting point: DevOps doesn't mean anything besides a buzzword. Figure out what you need someone to do, and then write the job description around that."
devops,3axxkn,dustinmm80,1 point,Wed Jun 24 17:20:33 2015 UTC,"When you were thinking of the role, what did you have in mind that this person would do?  DevOps looks different at every organization. If someone tells you what your devops should look like without knowing your org take their advice cautiously."
devops,3axxkn,HiTechCity,0,Sun Jun 28 03:28:43 2015 UTC,"idk if this is helpful, but this is my list of skills and qualifications, not knowing exactly what kind of devops role you are looking for! (and the Ansible thing is job specific for me; you can put in whatever tool you can't live without there)  Linux Administration Automation through scripting Configuration management – experience in or willingness to learn Ansible Continuous deployment tools and processes Ability to communicate complex technical issues and solutions in simple terms Strong communication skills – written and verbal Ability to connect technology with measurable business value Cloud computing Virtualization Web servers Application servers Database Security Monitoring Networking basics Eagerness to learn and teach"
devops,3auwud,dpwalsh,12,Tue Jun 23 18:29:31 2015 UTC,"I started my first (and still current) sysadmin gig about 2 years ago, I joined a company that was extremely manual, the other guy left after 2 months which left me in charge of ~700 boxes, I am very very lazy so I looked into how to automate things, found puppet, heard about devops, watched basically all the videos I could find on youtube revolving around devops, read the Pheonix Project, turns out our devs are generally pretty nice folk (only 2 of them), it just felt natural to discuss things with them anyway so we have a pretty good relationship (no throwing stuff over a wall then ""lol ops problem now).  I finally got another admin on the team who was a bit like me (thrown in the deepend at his last [and first] place)) about 6 months ago so we just bumbled through things, doing or best. Now we have code reviews, full testing of all our Salt states by jenkins, shiny monitoring out the arse, and we're currently in the process of completely rearchitecturing our entire infrastructure with the dev team towards microservice based infra as opposed to the old monolithic stuff.  I'm not sure if it's ""devops"" (if two people can agree what devops means I'll agree) but it sure smells like it."
devops,3auwud,deadbunny,1 point,Tue Jun 23 20:10:35 2015 UTC,full testing of all our Salt states by jenkins   Care to expand on this part? The extent of testing my Salt states is running them on some VMs on my laptop. I'd love to look into some automated testing.
devops,3auwud,drawsmcgraw,4,Wed Jun 24 17:39:40 2015 UTC,"Ok, so it's a bit involved and is tailored to the way we use/develop salt (which in turn was influenced by trying to get to this setup) so I'll try and explain the way things are laid out and our process so it makes some sense.  Salt   We have both states and pillar in one repo (these are then mounted via gitfs)   git:salt/states git:salt/pillar  We have a set of core states (run on everything) We have common states (run on many things) We have role states (run on one thing [mostly])   Jenkins   We have one test per ""role"" Jenkins uses Docker on a build slave to do the testing of each state   Phabricator  We use Phabricator for ticketing/bug tracking, code reviews, and most importantly triggering Jenkins. The triggering stuff should be completely possible in Jenkins alone but we use Phabricator to do it as it ties in with the code reviews & tickets.  Phabricator also has a CLI tool called arcanist which we use mostly for branching, pushing to phabricator (for review), then merging/pushing.  Phabricator also has a few things we are using from it to interact with Jenkins:  Herald:  This is basically something that sits there watching something then does something when that things changes. In this case we'll say we have the following role (in psuedo code):   watch git repo ""salt"" in repo watch path ""core"" in repo watch path ""common/nginx"" in repo watch path ""roles/newfeature"" if changes in any trigger harbourmaster:newfeature  Because we have both states and pillars in one repo and we name both states and pillars with the same names (eg: states/roles/newfeature and pillar/roles/newfeature) it will catch changes to both states and pillars and retest for changes in either.  Harbourmaster:  Harbour master is the Phabricator CI service, we just use it to trigger Jenkins though (so again in psuedo code):  build plan = newfeature update code review with triggering send http request = http://jenkins/trigger?newfeature_job"" wait for exit code update code review with results  Process  I'll try and so a step by step for how we would develop a new ""role""   Get the latest version of the develop branch in git   cd ~/git/salt && git co develop && git pull  Branch off for your feature/fix branch   arc branch T1234-cool-new-role  Develop states (We use a vagrant/lxc setup which you can find here) Push diff to Phabricator   arc diff - You need to fill in some details, a bit like a commit message here, this triggers everything below (this could be comparable to a push to the branch but it just sends the diff to Phabricator which in turn sends it to Jenkins to apply it to the develop branch then test) Herald sees the changes and fires off the Harbourmaster job Harbourmaster sends an API call to Jenkins to run the ""newfeature"" job Jenkins runs job (i'll detail that in a seperate section) While all this has gone on all this info gets added to the relevant ticket (because I named the branch T1234*) Again while this is all going on it has now created a code review assigned to the person I stated in my arc diff In this code review you get nice side by side diffs of everything, and it gets populated with the build status of any triggered Jenkins jobs at the top of the review (this is the Phabricator plugin for Jenkins doing it's thing) Jenkins passes the build! (updates the ticket to say it's all good)  After all that's done and our code is reviewed and tested we can then merge the code into the develop branch   arc land Takes out changes, commits them then merges into the ""develop"" branch then removes the old local branch (basically `git co develop && git merge branchname && git branch -d branchname""    The Jenkins testing for Salt states is basically:   Receive code diff from Herald Clone git repo into workspace Apply diff to repo Fire up Docker container (prebuilt container which contains a salt-minion) Mount cloned and patched salt repo to /srv/salt and /srv/pillar Run highstate Return exit code to Jenkins (pass/fail)   So that's cool and our new role is fully tested, but as you can see in the Herald rules above I also included a watch for dir paths core and common/nginx this means that this job will get tested if any files in those paths get changed, this means where we have common states like nginx which get installed then have their main config updated/ssl certs applied etc... that if they get updated it will trigger this state as well. So for example we have maybe 10 states that pull in the common/nginx state and all of them will trigger builds if it updates which leads to less invisible breakages where a change you make to nginx for your state breaks another things using it. Same things with core these are basically states that get applied to everything so if we update them EVERYTHING gets tested.  It's certainly not perfect and we have a few edge cases where we've had to use Vagrant + KVM instead of docker (for when your states affect the kernel basically) and it can take an age for a full run of tests on everything (~1hour atm) but it really does give you peace of mind that your changes aren't breaking something else somewhere, or if you do break something it's going to be caught.  We took a lot of trial and error to get to where we are (and we have the old abandoned repos to prove it) but I really can't imagine working any other way now.  Hope that makes sense  I really should write a blog post about this when I'm a bit more awake!"
devops,3auwud,deadbunny,1 point,Wed Jun 24 18:33:11 2015 UTC,"I.... that's.....  Wow.  I'm impressed. And yes, this needs to be its own post. That's an impressive setup! Not a lot of people can say they have regression testing for their Salt states."
devops,3auwud,drawsmcgraw,1 point,Wed Jun 24 20:06:25 2015 UTC,"Ah, regression testing, that's the phrase I was looking for! Yeah, it's pretty cool, not perfect but it gives me some reassurance that I'm going to break production less.  It took about a week of me and the other admin working out how all the bits and how they fit together, and the structure of everything (hence all the scrapped salt repos) and we're still in the process of migrating everything over but it is pretty neat!"
devops,3auwud,deadbunny,7,Wed Jun 24 20:18:49 2015 UTC,"Get laid off from Microsoft, because who doesn't get laid off there. During bored time, read books like The Phoenix Project, pick up a new language like Go or Clojure, learn some automation tools (chef, puppet, ansible) Go to tech cons and meetups, get some networking done Move to SF Bay area to join a startup Surprise, you're a DevOps engineer"
devops,3auwud,saintjeremy,3,Tue Jun 23 22:34:55 2015 UTC,"Move to SF Bay area to join a startup   This is about what I'm considering right now lol. It seems mostly startups are doing DevOps, and the major corporations won't settle for anything less than a ""unicorn."""
devops,3auwud,SouthernAirTemple,2,Wed Jun 24 04:48:23 2015 UTC,"Heh, Larger tech firms are adopting. I have friends at Adobe who report they've seen a lot of this style of engineering getting on there lately."
devops,3auwud,saintjeremy,1 point,Thu Jun 25 13:43:28 2015 UTC,Then I guess I'll have to apply haha.
devops,3auwud,SouthernAirTemple,2,Thu Jun 25 14:57:39 2015 UTC,"Hey, I'm looking for people on my team as well. PM me and let's trade info! Resumes welcome"
devops,3auwud,saintjeremy,12,Thu Jun 25 17:40:07 2015 UTC,i'm a dev and my company can't afford to hire somebody to do ops.
devops,3auwud,PAY_CLOSE_ATTENTION,4,Tue Jun 23 20:28:41 2015 UTC,"Not sure who downvoted you; i don't believe this is or should be ""what DevOps is"" but in more than one shop I've heard of / spoken to, this is what happens. The DevOps role, for example at AWS internal, is a rotating series of responsibilities amongst their devs."
devops,3auwud,mrthrax,5,Tue Jun 23 22:11:36 2015 UTC,"I started early in my career as a developer, then also did system stuff, worked onto getting more into systems and did operations for a few years, started getting into doing configuration management and automation tasks (outside of home-rolled shell scripts) to make my job easier and more repeatable. Ended up getting Puppet Training from one of my employers and used that to get into a full-time ""DevOps"" role doing build engineering, and then automation engineering working with our CTO office and developers trying out new technologies and build processes."
devops,3auwud,neverminding,3,Tue Jun 23 19:30:52 2015 UTC,"Accidentally, but it's a perfect fit.  8.5 years Navy nuke, then large hydrogen plant operations for five years.  Took a sabbatical, got a degree in IT (follow your passions, right?).  Worked as a Systems Analyst for a small MSP in Dallas.  The my love for Mac/Linux got me a job as the sole IT admin at a cloud services company when I moved back to NJ in 2013. Picked everything up quickly and started helping out with service delivery/automation until I left for a full-time devops position, but it was a Windows shop and I lost my mind.  Previous company contacted me when my boss there moved on, so now I'm in charge of the full delivery pipeline, AWS environment, chef setup, etc as the Operations Manager. One thing that helped me coming from a different kind of operations background, was to really have a passion for this stuff outside of work.  I run my own chef server and have a basic homelab + digital ocean instances to try out new technologies and mess with stuff I don't mind breaking."
devops,3auwud,berserke,3,Tue Jun 23 21:04:56 2015 UTC,"Formal education as a developer many moons ago, 15 years of sysadmin work with a fair amount of scripting and automation. Today the same thing I've been doing for a while has a new name IMHO 😆"
devops,3auwud,dominic_failure,3,Tue Jun 23 21:05:39 2015 UTC,"QA engineer who specialized in L&P testing. That background and my Python chops got me a Python programming job with a company called RightNow. This was devops before the term devops existed - automating the deploy of software, the migration and setup of databases, MySQL failovers... I learned more about sysadmin doing that ""programming"" job than I ever did in any other job.  From there, served a few years doing something similar under the title of ""MySQL Administrator"", and then a job doing the same things with an actual title of ""Site Reliability Engineer""."
devops,3auwud,berserke,3,Tue Jun 23 21:31:04 2015 UTC,"I'm half of the DevOps team (just hired a third who hasn't started yet) at a small (but growing, 70->120 headcount in the 10 mo I've been here)  The DevOps culture here was DEFINITELY ""a dev that can ops"" where as I've been in Sysadmin/SysEng/Ops for the past decade. Where I just saw Python and Perl and Bash as tools in my toolbox, here, I feel like I'm just doing the Ops-y things I used to do but I'm swinging a different hammer. That, and we run the whole shop like one big software engineering department. Sprints, code reviews, test-driven development, automatic testing, continuous deployment...  As far as clouds go, we use AWS, and it is what it is. If you were to ask me the thing at this job that's caused me to generate the most swear words, it's AWS, perhaps OpsWorks specifically. Our workflow is a bit incongruent with the best reasons to use AWS right now, I hope that changes soon.  So in short, If you want to make the jump from IT to DevOps, play up all the development you've hopefully been doing; all the processes (not just in the dev department, but out in the rest of the business) that you were able to build some Python/flask app cute web front-end to automate, etc. Talk about how you took your infrastructure and made it into code with chef or puppet, how you stored it in git, how you used that to your advantage to automatically test what you've made, how you used your automated processes to automatically respond to situations in your production environment, how you monitored everything with nagios or something similar..."
devops,3auwud,neoice,2,Tue Jun 23 22:02:02 2015 UTC,"Haha I share your passion for swearing at OpsWorks! That said, it does some things very well, so there's no divorce planned at this stage 😆"
devops,3auwud,Shlant-,2,Wed Jun 24 00:27:20 2015 UTC,I've been doing experiments with OpsWorks and the first three exploded in fire. pretty sure I'm going to be better off using cloud-init to kick off Puppet/Chef.
devops,3auwud,neoice,1 point,Wed Jun 24 01:02:14 2015 UTC,"I always avoided using OpsWorks as I never understood the use case for it. You have to know Chef to use OpsWorks and if you know Chef, then you don't need OpsWorks... just looking at the giant Json configs makes me gag :P"
devops,3auwud,bpgoldsb,1 point,Wed Jun 24 21:48:00 2015 UTC,"Ops works (when it works) has neat features for integrating on the backend with other AWS services (for example, adding and subtracting instances on provision/destroy to an ELB automatically.) nothing you couldn't do with knife-ec2 or the AWS chef gem but it's done for you and that's nice.   ..When it works. Haha."
devops,3auwud,niczar,3,Wed Jun 24 21:59:14 2015 UTC,"around 2006, I was dumpster-diving PCs, putting Linux on them and running various services. I quickly realized that there was no way Google, et al were logging in to every server and configuring every individual service. dove into Puppet, learned Python, found out my hobby was a lucrative career path and landed a job doing infrastructure automation while I finished my CS degree.  somewhere along the line, people started talking about ""devops""."
devops,3auwud,fotoman,3,Wed Jun 24 01:00:23 2015 UTC,I heard about this cool thing called Puppet.  It was back in 2007/2008 when 0.24.5 was the new hotness.  I decided it sounded like a way better method of being a sysadmin.  The company I was at didn't agree.  I left and got a job at a place that understood why Config Management would be awesome.
devops,3auwud,sucka_puncha,2,Wed Jun 24 01:13:54 2015 UTC,"Years of dev experience, years of ops experience."
devops,3auwud,drawsmcgraw,2,Tue Jun 23 19:51:16 2015 UTC,"I have a different view on Devops, as I'm on the developer side of things writing tools for developers and sysadmins.  How I got here: 5 years as a sysadmin, then rolled into a tool developer, which led to straight up development work.  Having that sysadmin background and tooling/reporting work, it was sort of a natural fit being the glue that brings everything together."
devops,3auwud,new_ghost_user,2,Tue Jun 23 19:59:11 2015 UTC,I started using Ansible and converting our infrastructure to code.  That was that...
devops,3auwud,chocotaco1981,2,Wed Jun 24 00:52:34 2015 UTC,"Put a developer in a data center and he'll automate everything in sight :)  That was about it for me. I watched people build Windows systems with right-click -> new VM -> W-i-n-d-o-w-s -> Next  Once I unscrewed myself from the ceiling, I started learning any relevant automation technology. At the time, it was Powershell but I've since been able to move on to different roles. Once I tried out Saltstack and had an account on a private OpenStack install, I fell in love. Deploy dozens of machines and have them configure themselves? Do the job of ten people with one command? Solve Heartbleed in five second??? I'm in love."
devops,3arbli,Anirak,4,Mon Jun 22 21:48:02 2015 UTC,This is really cool. It's like what happened with io.js/node but without all the drama and straight to the good part.
devops,3arbli,thukjeche,3,Tue Jun 23 06:09:11 2015 UTC,This totally sounds like a start to a joke. I want to know the punchline.  https://xkcd.com/927/
devops,3arbli,dbcy,2,Tue Jun 23 13:52:11 2015 UTC,I don't get it. Why do we need another standard? There's already appc!
devops,3arbli,workingpizza,2,Tue Jun 23 11:53:03 2015 UTC,"appc is going to support OCP. rkt and Docker are all-in on this, to prevent a ""container format war"""
devops,3arbli,FetchKFF,1 point,Tue Jun 23 18:26:10 2015 UTC,"Pretty cool!  Sounds like ""Too good to be true"" for me :)"
devops,3atzzm,iamondemand,3,Tue Jun 23 14:26:57 2015 UTC,This blog article is not good.  I'll show myself out.
devops,3atzzm,8bitbrad,1 point,Tue Jun 23 15:21:42 2015 UTC,More spam from a spammer. (the op not you)
devops,3atzzm,Tacticus,1 point,Wed Jun 24 01:14:16 2015 UTC,A lot of these hosts need to be banned from this sub reddit
devops,3aqoge,MrGrumpyGills,3,Mon Jun 22 18:56:02 2015 UTC,"VictorOps promises revolutionary features, but it just feels like they added the ability to chat in the timeline, which really doesn't do much if you already have a chat solution.  They have no API to speak of, and their web app is mediocre at best.  Not quite ready for primetime if you ask me."
devops,3aqoge,holmser,6,Mon Jun 22 19:42:00 2015 UTC,"Yeesh. We rely heavily on the APIs for PagerDuty, this probably seals it for me. We already have a chat solution as well, anyway. Thanks!"
devops,3aqoge,cryonine,3,Mon Jun 22 20:02:42 2015 UTC,"What sort of APIs are you looking for?  We centralized all of our alerting into VictorOps back in November using API calls.  It also has some nice features, like alert transmoging.  I'll also say that while we have our own chat solution, the VictorOps phone app + chat timeline is extremely useful when your team is out of the office and doesn't want to be fully connected to the entire office, if that makes sense.  Their reporting options are really nice though and the various endpoint features, escalation paths, and on-call rotation management functions are pretty powerful.  My biggest complaint about VO is that the billing isn't really tied into their platform.  If I want to remove someone I have to contact support otherwise I just get billed for additional team members.  There's also no way to clear out test alerts (at least last I checked) which makes things annoying for historical reporting.  That said, one of the things I like the most is that you can have callbacks happen on alerts.  We have some events that fire off on certain alerts that call back to an internal server that attempts to fix problems before full escalation paths occur.  It's quite nice."
devops,3aqoge,SometimeIPee,3,Tue Jun 23 15:27:05 2015 UTC,"Full disclosure, I am an engineer @ VictorOps. Was on call this weekend myself so the experience is fresh in my head. I have never used PagerDuty, but have been on-call before hearing about either tool at other companies.  The thing I like most is alert transformation stuff. Not sure what PagerDuty provides in this same vein. With our on-call regimen, we sometimes get alerted for services which we did not build or do not work with day to day (i.e. web-client engineers getting paged for platform log issues). At former companies, if I got alerted for (typically via Nagios emails) for something I didn't know how to support, I would be fairly useless and just escalate the issue. With linked relevant information, I am no longer a useless flesh-bag, but can read the linked information and at least attempt to correct the issue. Of course, this requisites an up to date runbook collection and the diligence to keep the annotations up to date, so not exactly a silver bullet, but it certainly has helped. Silencing nosey alerts is also a nice feature of the transformation tool.  It seems like the more features that a client uses, they happier they are with the product; and conversely, the less features one uses, the more generic the tool becomes (ex. We use it to wake us up at night, thats it. Little differentiation there). I have friends who use PagerDuty's basic functionality and seem to think it works fine.  Also, we don't have a fully featured API, which has been a deal breaker."
devops,3aqoge,SometimeIPee,1 point,Mon Jun 22 19:59:29 2015 UTC,"Some cool insight, thanks! We are transitioning to what i would call a ""chat ops"" team, so we rely very heavily on PagerDuty's APIs, both for notification but also for resolution, escalation, or creating an incident for another team. VictorOps probably won't work for what we need right now..."
devops,3aqoge,SometimeIPee,1 point,Mon Jun 22 20:06:07 2015 UTC,"Sounds good! Good luck with that transition, the ChatOps push has been quite beneficial at our shop but the benefits were obvious. Getting cultural buy-in seems to be the difficult part, the available toolset is fantastic.  Cheers"
devops,3aqoge,mberkay,1 point,Mon Jun 22 20:18:02 2015 UTC,"I've got the buy-in and the demonstrated pros already :) We're using PagerDuty now, but I'm always investigating other options."
devops,3aqoge,jhand24,1 point,Tue Jun 23 01:01:57 2015 UTC,"Agreed, well worth the initial investment in shifting people's habits. Drop me a line if you are ever interested in kicking the tires. 14 day free trial, but a DB 'typo' can correct that."
devops,3aqoge,zeroXten,1 point,Tue Jun 23 03:00:39 2015 UTC,"Three different approaches to ChatOps. Each has its pros and cons:   VictorOps provides chat functionality natively as part of the product PagerDuty has no native (chatops) capabilities. Customers can (and have to) built the chatops functionality using the the APIs OpsGenie has 2-way integration with chat tools like Slack and HipChat. It not only posts alert activity to chat rooms but also allows acknowledging/closing/creating alerts, checking who's on-call, etc. without requiring any external components.    !! Disclaimer: I'm one of the founders of OpsGenie"
devops,3aqoge,sedition,2,Mon Jun 22 21:27:35 2015 UTC,"For clarification ... VictorOps has native bi-directional chat with HipChat & Slack... with more clients knocking on the door to integrate. All actions (from within your favorite chat client) show up in the VictorOps timeline... and vice versa.    The point of native chat w/in VictorOps isn't to get on-call users to chat within VictorOps .. it's the capture the conversation?   Why?  You're going to want that conversation (IN IT'S ENTIRETY) for your post-mortem report.   You want to know when the initial alarm went off.. who acknowledge and how quickly... what extra bits of context & triage/remediation steps were automatically provided with the alert ... who else collaborated during the incident .. was the alert escalated or re-routed to someone else? ... what ""ChatOps"" commands were run during the incident.. when was the problem resolved ... etc. etc.    You want the entire story for your post-mortem .. and chat is the only way to capture that with a clear picture of what took place during the incident.  Because VictorOps has native bi-directional integration with your favorite chat clients.. it's all captured and you don't have to create a post-mortem separately.  You just run the ""Post-mortem Report"" from the VictorOps reporting section and the thing is done!  Those of you who have to create your post-mortems manually know that scraping that data from a bunch of places is a huge PITA."
devops,3aqoge,zxiiro,1 point,Tue Jun 23 16:36:19 2015 UTC,"We already use PagerDuty via a hubot. Any system we transition to would need to have the same APIs at a minimum. I'm always keeping an eye on what's out there, and it's been a few years since we did an RFI so I thought I'd see what peoples thoughts are :)  Thanks for your input!"
devops,3aqoge,zeroXten,3,Tue Jun 23 01:03:19 2015 UTC,"We use OpsGenie which awesome. We looked at PagerDuty, but were able to do more interesting things with incoming alerts."
devops,3aqoge,rusky0903,2,Mon Jun 22 19:56:54 2015 UTC,I agree with this. We've recently switched from PagerDuty to OpsGenie and it's given us a lot more options. It's not as polished in UX but it has it where it counts.
devops,3aop7e,sthies,2,Mon Jun 22 06:40:57 2015 UTC,and i guess we have our latest blog spam company peddling an overpriced solution you can roll yourself for a a lot cheaper in the long tun.
devops,3am2id,General_Pie,15,Sun Jun 21 15:40:50 2015 UTC,"I'm four months into a ""devOps"" role, coming from being a network engineer for a decade plus. On paper I looked less like a good fit than you do now. Here's what I did: I went on every interview I could for the positions I wanted and said essentially: my industry is trying its hardest to narrow its day to day problem space and I'm the sort of guy who needs a fresh, never seen before puzzle on the daily, here's my github where you can see I can code in (languages I know), someone is going to pick me up and help me get through this transition while I convert a decade plus of network engineering and ops, to server/software ops, and then they are going to have an EXTREMELY solid guy who is career ops and not trying to just get a foot in the door to convert to developer down the road. Are you in a position to be that employer?""  One of them eventually said: we've been interviewing people for over a year looking for you.. Let's get to work.  That's pretty much it, I worked my ass off in my own time to build a body of practice work that said: ""I can do this, I WANT this, and I'm willing and able to teach myself things I don't understand to get there.""  Get on a site like exercism.io or something similar and do a bunch of exercises in the typical ops scripting languages (Ruby and python at the least), put those exercises on your github.  Download ubuntus Openstack stuff and get it running on a spare box at home, if you can show an employer you can use Openstack your in good shape, if you can show an employer you can stand up your own cluster your ahead of the game.  Then start building a chef/puppet vm, maybe spin up a build automation vm like Jenkins and script chef to install everything for that one.  Essentially, sim a tech stack for the sort of company that you want to work with.  You again want all this work to say: see? I'm motivated, I'm not a gamble, I WILL be doing this work SOMEWHERE and soon.  Oh and above all, make sure you end up working with people you like. if it's a small company try to get out to lunch with the engineers/devs. Chat about which games you play, TV shows you like, social stuff... Make sure you want to spend 40+ hours a week with these people solving terribly obscure problems surrounding tech you don't yet understand. Because you can't continue to push yourself for people you don't like/respect without resenting the situation."
devops,3am2id,rizzlybear,2,Sun Jun 21 16:31:39 2015 UTC,"This is all great advice, especially the last bit. I love my current job because of the people more than anything else. The work is interesting, and I am in a unique position that they have supported me with, but it's also very very tiring, so the people have been what has kept me there.  Thanks for the advice re practice exercises. I've worked with a bit of Ruby and I love Python, tho haven't had a chance to use it in big projects. I've got jenkins at work, and we're starting to use it, but it's a slow process when there's more immediate issues to deal with. I currently use Rackspace at the moment with Ansible. I want to learn a bit of Chef, so I will get that running on a vagrant box."
devops,3am2id,rizzlybear,2,Sun Jun 21 16:52:44 2015 UTC,"Yeah that can be tough, it's important that you spend most of your time on things that are important, but not urgent. You want to spend almost none of your time on things that are urgent but not important, or not important and not urgent. But if your spending almost all of your time on things that are both urgent AND important, you probably need more manpower or better workflow management and prioritization."
devops,3am2id,packet_whacker,1 point,Fri Jun 26 08:13:52 2015 UTC,"I'm trying to do exactly what you described. Glad I came across this. How do you like devops over networking? I'm mostly tired of all the fires and constant late night work to minimize impact. Also I get no support in writing code, even though it's to speed up various processes"
devops,3am2id,zeroXten,4,Sat Jul 4 13:34:00 2015 UTC,"This is from the perspective of looking for DevOps candidates.   I would like to see either a strong systems background with some coding, or a strong coding background with some ops. There's lots of cool tech out there that you're probably not using in your job. Have you played with any of it in your spare time? I don't care whether you've used Chef, Puppet, Ansible, SaltStack etc. as long as you have a good reason for using what you use and you're willing to use what we use. I would expect to see some basic understanding of networking for sysadmins and devs.  I would expect to see some basic understanding of info security, either opssec or appsec depending on your background. You should be a bit of a generalist, happy to pick up new tech quickly. You should consider using the right tool for the job, not just use what you're comfortable with. Having said that, there is a bit of a balance. If you're a sysadmin you should be able to code in something like python, ruby, perl. Not just bash. If you're a dev you should be able to do some basic management and trouble-shooting of a Linux box without GUI. It is most important to look at the candidate as a whole, rather than the shopping list of the tech de jour."
devops,3am2id,SouthernAirTemple,2,Mon Jun 22 15:46:06 2015 UTC,"I'm on the opposite end in an ops role trying to get more into following dev practices to better understand and get into DevOps. To get more ops experience, I'd suggest going for an RHCSA and RHCE combination  which'll also show potential employers you're find with diving into systems as they are applied, real world exams. I'd also suggest looking into the startup scene depending on how flexible you are, whenever I see flexible DevOps roles they're usually for startups whereas enterprise are stricter on requirements."
devops,3am2id,Miserygut,2,Sun Jun 21 16:02:17 2015 UTC,Yeah this is a good point. It seems the smaller places (which is where I want to work anyway) have a much less rigid structure in roles.
devops,3am2id,goodtimingclub,2,Sun Jun 21 16:51:14 2015 UTC,"Look at it from the perspective of your future employer:  What can this person do already? What experience do they have?  It sounds like you have the Dev part sorted out. How is your Continuous Integration knowledge? Continuous Deployment? Source management? Got those? Great!  How is your operations knowledge? Do you know *nix, Apache, Tomcat, Java etc. or are you Windows, .NET and IIS? Do you know Eclipse or Visual Studio? Ever integrated those with Git?  My advice is to always just start labbing things up and get that experience. When I went for my first WebOps job I'd never heard of Jenkins so I downloaded it, had a play around with it and got to know what it is, how it works and why it's useful. It wasn't painful, I just went in with an open mind. I didn't get that job but it wasn't because I didn't know Jenkins. I'm playing with Windows DSC a lot at the moment which is really going to help bridge that gap between Ops and DevOps."
devops,3am2id,HiTechCity,2,Sun Jun 21 16:29:07 2015 UTC,"Thanks for the advice, I have a fair few of the things you mention, and I think I have some good social skills which I believe is helpful in a role that a lot of people don't really understand the value of. I guess I need to start adding things to my github."
devops,3anejj,sthies,2,Sun Jun 21 22:48:08 2015 UTC,This is all great but for the time it takes to setup all that you can easily have heka running which does the same thing and had been load tested up to a massive scale at Mozilla
devops,3anejj,hijinks,1 point,Mon Jun 22 00:32:13 2015 UTC,"Time to setup? Most customers use the SaaS, this means you don't need to setup any backend infrastructure for it (just the agent/plugins on client side)- or if required you can get it as a set of VM's to run it in your infrastructure / on-premises. We maintain all required linux packages / VM's. It's load tested as well http://blog.sematext.com/2015/06/11/processing-metrics-logs-and-traces-at-scale/  - that's why we run clusters for Kafka, HBase, Elasticsearch, ..."
devops,3af8x3,alexcasalboni,2,Fri Jun 19 17:25:13 2015 UTC,Great stuff. I've never really thought about the time to setup a tcp handshake+SSL connection from really far away places.
devops,3af8x3,notenoughcharacters9,1 point,Sat Jun 20 04:04:26 2015 UTC,"Don't forget mobile users too. Cell phone networks are horrible for latency, even on high bandwidth connections. You want everything to use as few requests as possible. It's one reason HTTP2 should be a huge step forward for mobile browsing :-)"
devops,3aa5wh,elenaward,2,Thu Jun 18 13:13:40 2015 UTC,My one piece advice to new aws users in ec2 is make due you use iam profiles for all instances even if you won't utilize them.  Is so much easier to update the profile then shipping around aws keys when you need access to like s3 or such
devops,3aa5wh,hijinks,2,Thu Jun 18 15:20:04 2015 UTC,"I love the one guy's tip about making sure AWS is right for your workload.  At my last employer it wasn't. Instead of listening to the sys admin, I fought management for over 4 years before they would listen to me and buy dedicated hardware."
devops,3aa5wh,erst77,3,Thu Jun 18 16:10:26 2015 UTC,What was your use case?  I'm interested to hear what kinds of things people have found are better handled by dedicated hardware so I can better evaluate AWS vs datacenter.
devops,3aa5wh,sucka_puncha,3,Thu Jun 18 20:34:58 2015 UTC,"We had VMs that were used by many small customers.  Each customer had a dedicate VM because we dealt with HIPPA and data leakage would have been catastrophic to the company.  Traffic was not dymanic and was mostly low to each VM (< 10000 requests per day).   Using Amazon would have cost us a bloody fortune.  Not to mention all of the extra engineering that would have had to go into our software to deal with the fact that shit can happen on the cloud.  With dedicated hardware, we paid a low leasing fee to Dell and I had redundant backups for when shit would happen.  The backups were very easy scp and/or rsync that took < 1 week of development time.  Oh, and also, the first version of our app was memory bound.  A small instance would have taken at least 16 GB of RAM.  The newer version took care of the memory issue, but instead did some operations that made it CPU bound instead.  Guess which types of Amazon instances are the most expensive?  That's right.  High memory or high CPU.  Lastly, if you need to comply with HIPPA you pretty much have to encrypt all of your data at rest.  This means encrypted hard drives and verified data destruction.  Amazon provides you with none of that.  They will in fact tell you this if you ask them for a HIPPA BAA (which is the only way you can run apps with them and be HIPPA compliant).  One of their provisions is that you will encrypt all data at rest.  Full disk encryption puts a big damper on your fully automated scaling dreams if you actually expect to keep disk passphrases secret.  Also, their BAA is a steaming pile of shit.  They assume no liability for data breaches, and it reduces significantly which of their fancy services you can actually use.   So, yeah, the cloud would have been bad.  The management still wanted it though because it was cool.  None of them actually bothered to run the numbers."
devops,3aa5wh,kaydub88,2,Fri Jun 19 02:42:07 2015 UTC,HIPPA   HIPAA
devops,3aa5wh,sucka_puncha,1 point,Fri Jun 19 12:13:54 2015 UTC,My bad...
devops,3aa5wh,bastion_xx,1 point,Fri Jun 19 13:26:26 2015 UTC,"I'm curious if you put the dedicated hardware in your own datacenter or colo? HIPAA, HITECH, PCI-DSS are all about carving out the different levels of responsibility and control around the affected data. Management and legal normally like their portion of a BAA or ROC (PIC) to be as small as possible to reduce the audit and compliance scope.  I'm glad you found a solution that works for your workload. AWS KMS would have helped support the disk encryption (or data encryption) but I get where you are coming from in regards to letting your server deal with the encryption instead of architecting that into your app."
devops,3aa5wh,sucka_puncha,1 point,Fri Jun 19 12:27:56 2015 UTC,KMS means Amazon and you both have the encryption key.  That's not good.  The servers were moved into a dedicated colocation.
devops,3aa5wh,djk29a_,1 point,Fri Jun 19 13:22:54 2015 UTC,"I'll give you a few cases I found for several customers that didn't work out well for AWS.   A highly regulated / security paranoid organization that spends more money fighting its own projects than actually trying to make them work and deliver value. I personally disagree that AWS is somehow less secure than most of the IT infrastructure of these kinds of places, but certain specific regulations make running workloads in AWS for production a pipe dream. You use an extraordinary amount of one particular type of resource for your business - disk, bandwidth, and CPU. Backblaze, Cloudflare, and IBM Watson are all poor choices for using AWS as an IaaS You yourself are expecting to be a service provider as a value-add on top of AWS (Heroku, I'm looking at you. Seriously guys, your cost is the biggest reason people leave. Have fun being an expensive developer toy forever if that doesn't change) Very latency-sensitive applications (at the individual process level rather than at a service level like those at Netflix are developing). This is common for VoIP and many service provider folks You are extremely heavily invested in VMware based stacks already internally and have a competing OpenStack project in progress for a while Are you actually cost-conscious about IT spend in where you consider it mostly a cost center rather than as (granted, not IT anymore) a driver for your company's growth? That is, do you view it as something that should have its costs minimized at the expense of it becoming an important tool for growing your company? TONS of companies I've seen literally only care about going to cloud services for the bottom line and nothing else. Also, this could certainly be a political motivation simply for firing / restructuring IT to get rid of some bad / unfavored actors.   Most companies do not fall into the above."
devops,3aa5wh,sirex007,0,Fri Jun 19 12:29:47 2015 UTC,Hi /u/djk29a_  That's brilliant. Mind to post this comment in the thread? :) http://cloudacademy.com/community/random-aws-tips-you-wish-youd-known-before-you-started-t22/
devops,3aa5wh,djk29a_,1 point,Fri Jun 19 13:49:17 2015 UTC,"does your workload increase and decrease dramatically ? - Can your workload scale horizontally ? - Do you need more capacity at short notice ? - Are your apps capable of working in an environment where resources aren't certain ? If no to any of those, don't use AWS."
devops,3aa5wh,sirex007,2,Fri Jun 19 01:25:15 2015 UTC,"I will add one more - is your IT insanely, terribly low value for the dollars spent (likely due to bureaucracy and legacy reasons)?  A major part of why my customer is migrating so many workloads is that it takes about 4 months on average to get a new server ordered and racked plus it's terribly capital intensive. The internal charge-backs are somewhere on the order of about $100 / mo for a server that is about $40 / mo in AWS (about a m2.medium) and you still have to pay for the operations resources on your own. Our IT spend is probably at least a billion USD / year."
devops,3aa5wh,djk29a_,2,Fri Jun 19 03:48:48 2015 UTC,"yea. shadow IT is a common reason to move to amazon, but it's effectively 'because its not us' syndrome."
devops,3aa5wh,sucka_puncha,1 point,Fri Jun 19 04:28:47 2015 UTC,"Shadow IT is a different phenomenon to me. For a comparable market cap and vaguely similar business, the way that Salesforce grew so much is originating through shadow IT (because CRM software sucked and took forever to purchase), but Amazon's growth is driven by a more complex mixture of customer use cases built around meeting the needs of technical folks first. (VC-backed) start-up companies galore picked it up early on and achieved plenty of success with it, for starters.  EC2 is a market leader that's pretty squarely in the ""not going away anytime for a long time"" camp, so that's sufficient for many organizations to consider using it as well given the instability that has happened with many cloud vendors as well as even regular ol' software vendors getting acquired and shut down and whatever constantly."
devops,3aa5wh,sucka_puncha,0,Fri Jun 19 12:46:33 2015 UTC,"Yes, that's exactly kinda what I was thinking. Mind to post this comment in the thread? http://cloudacademy.com/community/random-aws-tips-you-wish-youd-known-before-you-started-t22/  Really appreciated. :)"
devops,3aa5wh,emanymton,2,Thu Jun 18 21:52:00 2015 UTC,"I'd have to register an account and I don't feel like it.  But it's very true.  You should be very cognizant of what AWS is meant for and what it's not meant for.  To many people use it as a hosting service and that's the worst possible thing to do.  Like another consulting client I dealt with.  They ran two Amazon instances.  One prod.  One dev.  That was it.  No backups, no AMI images.  Nothing.  Just a few VMs.  I told them they were crazy, and they told me they wanted buzzword compliance.  Morons."
devops,3aa5wh,berserke,1 point,Fri Jun 19 03:16:07 2015 UTC,Yes. It is fair enough. No worries.  I've found your comment as great as gold. Mind if I report your comment into that thread? It is really helpful. :)
devops,3aa5wh,kaydub88,1 point,Fri Jun 19 08:24:14 2015 UTC,"Sure, go for it."
devops,3aa5wh,emanymton,1 point,Fri Jun 19 13:24:56 2015 UTC,"Just to add, this article is the best one that I've found for AWS tips - https://wblinks.com/notes/aws-tips-i-wish-id-known-before-i-started/"
devops,3aa5wh,kaydub88,3,Thu Jun 18 14:34:29 2015 UTC,I came here to comment on the same - that article taught me a whole heckuva lot prior to developing bad habits on the AWS front. I was also disappointed that one of the commenters in OP's link seemed to equate EC2 with AWS...
devops,3aa5wh,mattstratton,1 point,Thu Jun 18 17:16:25 2015 UTC,"It says disable SSH, what about using Ansible? or Salt(I think this is SSH)?"
devops,3afrda,devsonfire,10,Fri Jun 19 19:47:19 2015 UTC,"Wow, that's amazing news.   I'm predicting Google will eventually have a mobile operating system."
devops,3afrda,David_Kleinfeld,7,Fri Jun 19 20:20:26 2015 UTC,"Why would they make a mobile operating system ?   I can already make calls, what else could it be used for ?"
devops,3afrda,larrymachine,3,Fri Jun 19 20:50:36 2015 UTC,"ROFL. Bleeding edge news reel, this"
devops,3afrda,shlazzer,3,Fri Jun 19 20:19:53 2015 UTC,This is a horrible deal. I predict in 9 years Google will fail and Microsoft will have the top search engine
devops,3afrda,hijinks,5,Mon Jun 22 00:35:40 2015 UTC,You know that's from 9 years ago right?
devops,3afrda,TurdHopper,3,Fri Jun 19 19:59:17 2015 UTC,http://www.livememe.com/7nu8xk1
devops,3afrda,SouthernAirTemple,2,Sun Jun 21 15:25:47 2015 UTC,some people want to see world burned
devops,3afrda,izpo,3,Sun Jun 21 07:26:32 2015 UTC,WTF?
devops,3afrda,-Hameno-,3,Fri Jun 19 20:07:53 2015 UTC,LOL
devops,3afrda,mtran8,2,Fri Jun 19 21:44:47 2015 UTC,Huh? I'm confused.
devops,3ab1jx,Toast42,2,Thu Jun 18 17:25:01 2015 UTC,Not sure why it is not outputting to the screen and would need to test myself.  Can you enable logging in ansible.cfg and tail the file in the meantime ?  log_path=/var/log/ansible.log
devops,3ab1jx,itsmemattchung,1 point,Thu Jun 18 18:21:56 2015 UTC,"It does output to the screen, but it waits until the entire playbook is finished running to output anything (and then it dumps a lot of text).    I'd just like to see incremental updates so I can get a feel for which task is currently running, how many tasks are left to run, etc."
devops,3ab1jx,itsmemattchung,2,Thu Jun 18 18:25:40 2015 UTC,I'm guessing vagrant is blocking while it waits for are return code.
devops,3ab1jx,Sgoettschkes,1 point,Thu Jun 18 23:27:34 2015 UTC,Any thoughts on how to circumvent this?  Maybe a way to flush the output periodically or some little known configuration in ansible?
devops,3ab1jx,ClutchSlave,2,Thu Jun 18 23:55:07 2015 UTC,There is a plugin (vagrant-ansible-local) which does that. I am not aware of a way to output text to the console from within a vagrant shell command because vagrant buffers all output. You can write your Vagrantfile to use the plugin if present or the bash version if not. Have a look at this example (Line 20 to 24): https://github.com/agileaddicts/cllctr/blob/master/Vagrantfile
devops,3ab1jx,nucleartool,1 point,Thu Jun 18 19:44:29 2015 UTC,"Thanks, I'll definitely have to give this a try!  It's a minor issue, but everyone that's used it so far has complained that it's frozen while running (even though there's a warning message that the screen will be blank for a long time)."
devops,3ab1jx,ClutchSlave,2,Thu Jun 18 20:17:07 2015 UTC,"Why not have Ansible provision the box directly instead of having Vagrant pull the playbook?   I've done this with Ansible using packer to build a base image, then using Vagrant to launch that box, then provisioning the box with any Ansible roles you need and finally exporting the image. It's a bit tricky because Virtualbox networking sucks, but it can be made to work."
devops,3ab1jx,ClutchSlave,2,Thu Jun 18 23:19:53 2015 UTC,Any chance of seeing that playbook or the general commands you use? I'd be quite interested. Never thought about switching things around like that.
devops,3ab1jx,nucleartool,1 point,Fri Jun 19 10:14:51 2015 UTC,"Yes, but I need to clean up and generalize them a bit. I'll check if I have some time in the future."
devops,3ab1jx,ClutchSlave,1 point,Fri Jun 19 12:12:34 2015 UTC,Here are my scripts: http://git.io/vtwQm
devops,3a6421,Anirak,2,Wed Jun 17 15:01:39 2015 UTC,"Wow! That's great. When you have many hosts and even more roles that change things, atk-show-vars is really helpful. Same for atk-show-template!"
devops,3a6421,zufallsheld,2,Wed Jun 17 15:50:10 2015 UTC,"This is good stuff, thanks for the hard work!"
devops,3a6421,akurilin,1 point,Thu Jun 18 03:37:25 2015 UTC,"Indeed, atk-show-vars is very nice. Should probably throw a x-post on r/ansible"
devops,3a2v5s,alexcasalboni,5,Tue Jun 16 20:12:16 2015 UTC,Until then: https://buy.wosign.com/free/
devops,3a2v5s,ptman,2,Wed Jun 17 10:09:26 2015 UTC,"WoSign is from China... wouldn't it be possible for the Chinese govt to pressure WoSign into giving them their master keys so the Chinese govt can sign arbitrary fake certs for your domain, and look identical to your real cert?"
devops,3a2v5s,chiisana,3,Wed Jun 17 13:39:26 2015 UTC,"Yes, but you don't need to be their customer for that to be possible. Your browser already trusts wosign."
devops,3a2v5s,ptman,1 point,Wed Jun 17 14:40:58 2015 UTC,"Not sure if that is entirely true... I just tested, and my Chrome (no custom configs on Mac OSX) does not trust WoSign.  Does your browser trust it? https://wosign.com  Regardless, though, the point I was getting at was more about the signing path:  Take reddit for example:   UTN-USERFirst-Hardware -> Ghandi -> Reddit   If WoSign tries to copy that, it'll say:   WoSign Class4 EV Server -> Reddit   Shouldn't my browser throw fit saying the certificate is different than what it has seen before, and thus alert me about potential problems, even if the cert is signed by a trusted source?  If so, this wouldn't happen if they give Chinese govt the master keys, and they sign an exact copy to use."
devops,3a2v5s,chiisana,2,Thu Jun 18 03:55:47 2015 UTC,"Turns out Chrome in OS X doesn't trust their issuing cert.  http://i.imgur.com/UcjWqbN.png  Tested fine in:   Win Chrome,  Win IE,  Win FF,  OS X FF, and  OS X Safari."
devops,3a2v5s,Catsler,3,Thu Jun 18 00:30:33 2015 UTC,"Automatically configures it for your web server...nice, no HAProxy though to start."
devops,3a2v5s,Bergur,2,Wed Jun 17 01:54:12 2015 UTC,does this mean we'll able to produce valid SSL for google.com/reddit.com ?
devops,3a2v5s,izpo,4,Wed Jun 17 07:27:29 2015 UTC,Only if you control those domains
devops,3a2v5s,ptman,1 point,Wed Jun 17 07:41:00 2015 UTC,and if I'm man in the middle?  How does letsencrypt verify that I'm the owner?
devops,3a2v5s,izpo,6,Wed Jun 17 08:30:53 2015 UTC,https://letsencrypt.github.io/acme-spec/#rfc.section.6
devops,3a2v5s,ptman,1 point,Wed Jun 17 10:05:20 2015 UTC,that explains... 10x
devops,3a2v5s,izpo,1 point,Wed Jun 17 22:10:22 2015 UTC,I seen this on reddit every month or so. Is it actually going online any time soon? I see a release date but are all the browsers/OSs even considering this?
devops,3a2v5s,ThisIs_MyName,2,Wed Jun 17 10:11:55 2015 UTC,IdenTrust is cross-signing their issuing certificate.
devops,3a2v5s,Catsler,1 point,Wed Jun 17 13:15:00 2015 UTC,Neat. Maybe this isn't vaporware after all :)
devops,3a2v5s,ThisIs_MyName,2,Wed Jun 17 18:52:17 2015 UTC,They've just announced their launch schedule:  https://letsencrypt.org/2015/06/16/lets-encrypt-launch-schedule.html
devops,3a2v5s,Patroopa,-1,Wed Jun 17 10:39:47 2015 UTC,"In the meantime, www.startssl.com do the same thing, they deliver free ssl certificates, but the authentication page give a ERR_SSL_PROTOCOL_ERROR :("
devops,3a2v5s,kill-dash-nine,3,Tue Jun 16 22:56:17 2015 UTC,That is because login on startssl.com uses client certificates and you are apparently not providing one through your browser.
devops,3a2v5s,Patroopa,0,Wed Jun 17 00:12:50 2015 UTC,"Probably.. i tried with Chromium & Firefox, same issue. But others websites with https protocol work without problem.  I'll wait Let's Encrypt then '"
devops,3a2v5s,Tacticus,1 point,Wed Jun 17 10:41:36 2015 UTC,Well i think someone is fucking with your network because that site works fine from here with my client certs in the browser (you did go through the sign up process and installed the certificate files they gave you right?)
devops,3a54hv,adamVsusan,4,Wed Jun 17 08:28:58 2015 UTC,"Invest time in tools that are backed by a vendor. Those are areas to invest in. Everything else is just a hobby and shouldn't be taken seriously, because no procurement department at an enterprise will.   You're on the right track with AWS, Ansible and Puppet. I'd swap Salt for Chef. In a space where their competitors are going IPO (like Puppet) or have received double digit million dollars to continue development and community growth (through actual community growth or sales people, it don't matter)... Salt is running on ~700K given to them 2 years ago. That's not right and I would rather venture into supporting something that's sticking around."
devops,3a54hv,brokenpipe,1 point,Wed Jun 17 23:23:34 2015 UTC,We recently bought some consulting from the saltstack company and if I remember correctly the consultant said that saltstack is employing over 50 persons and growing. You can't run that many persons with the money you said so it's a safe bet they are profitable. At least they got our money ;)
devops,3a54hv,Garo5,2,Thu Jun 18 04:30:39 2015 UTC,"Welp no public source (crunchbase, glassdoor or linkedin) can back up the claim. Crunchbase puts them at $685K received in 2013. Crunchbase tends to be fairly reliable. LinkedIn puts them under 50 (44 today) people.   They may be making a ""profit"" but they are getting money elsewhere, undocumented then, to sustain. That, as a business, would make me super uncomfortable. They'll be able to get by with small implementations. It is easy to say IBM, LinkedIn, eBay, INSERT COMPANY HERE -- uses you on your website if its a small BU within that org. But an enterprise wide adoption where the company (like a CIO or CTO) actually says that on your behalf... thats a whole other ball game. Both Chef & Puppet have those references. Salt doesn't have any."
devops,3a54hv,brokenpipe,1 point,Fri Jun 19 02:38:56 2015 UTC,"They have over 1,000 contributors and 54,000 commits on their GitHub, that's quite a good amount of activity for something that's ""just a hobby."" Personally I'm sticking with Chef and Ansible right now though since those are a proven and upcoming technology for config management. With that being said, it's not something I'd be against learning for a new role I'd accepted with the condition of learning it during the on-boarding process."
devops,3a54hv,SouthernAirTemple,2,Sun Jun 21 18:05:21 2015 UTC,"You can easily use Virtualbox + Vagrant to spin up Linux servers, that should get you started with an environment where you can learn more.  Then you should also learn Python and/or Ruby as they are both much more widely used in system administration than Perl. Learn the syntax and learn to write simple applications so that you learn how to solve different problems with programming.  After that you should try different orchestration tools. I personally use Salt and Chef and they're both great. You can do many different things with them with simple programming experience but they will start really shine after you apply some hard core programming by developing your own tools on top (and inside with plugins and extensions) with them.  A lot of devops is also knowing different databases, cloud environments, build systems, messages queues etc so you can support your developers better. There's literally endless amount to learn and the best DevOps guys are in fact really experienced programmers, but don't be too scared to start from scratch. As I've said, even with little experience you can use orchestration systems to automate things."
devops,3a54hv,Garo5,3,Wed Jun 17 11:15:28 2015 UTC,"Thanks for the detailed reply Garo, looks like I have a good starting point now. Probably about time I learnt a new scripting language anyway as Perl was the first thing I learnt after having forgotten most of the C#/++ I did at Uni and I'm pretty messy and inefficient."
devops,3a1zh8,stewartmcg,7,Tue Jun 16 16:35:43 2015 UTC,"Ping Identity seems to be pretty slick.  Symplified is rubbish.  If you use Active Directory and can negotiate a Enterprise Cloud Suite, the SSO capabilities with AD Federation Services and Azure Active Directory are pure idiot proof."
devops,3a1zh8,derekhans,6,Tue Jun 16 17:32:47 2015 UTC,"SAML 2.0, use the standard and implement it using whatever products you like."
devops,3a1zh8,ClutchSlave,5,Tue Jun 16 20:29:14 2015 UTC,We use Okta here - great way to control users in terms of unpublishing apps and a combination LDAP integration.
devops,3a1zh8,berserke,3,Tue Jun 16 19:54:42 2015 UTC,We recently moved from OneLogin to Bitium and are really happy with the move.  We miss some things (Secure Notes) but overall the experience is much better.
devops,3a1zh8,drewmoney,2,Tue Jun 16 17:57:07 2015 UTC,"It's a bit dated now, but one system I used at Penn State was cosign combined with LDAP/Kerberos. It was a bit confusing to learn because it required some certificate wrangling, but otherwise it worked really well. You sign on to one site and receive a cookie. Present that cookie, and the server backend would validate the cookie against the cosign session server. It was rather simple to add to almost any resource you wanted to authenticate. Authorization still remained at the application level.  While I'm not sure if I would recommend coSign today, I would look at their overview and use that as a standard for evaluating other tools.  These days, I would look around systems built around oauth2. One interesting system is gluu.   The other system I am rather interested in is Mozilla Persona. Your account is established by proving ownership of an email address. As long as you are logged into the Persona identity provider (either your own or Mozilla's), then any system that implements Persona will let you log in.  https://www.mozilla.org/en-US/persona/ https://developer.mozilla.org/en-US/Persona/Identity_Provider_Overview"
devops,3a1zh8,soawesomejohn,2,Tue Jun 16 19:40:07 2015 UTC,"Check out WSO2 Identity Server. It is feature rich, scalable and flexible.  http://wso2.com/products/identity-server/"
devops,3a1zh8,Tmarshallva,2,Tue Jun 16 20:16:23 2015 UTC,Check this out: http://www.gluu.org/blog/wp-content/uploads/2014/01/forrester_standards_diagram.png
devops,3a1zh8,hopelessdrivel,2,Wed Jun 17 00:51:38 2015 UTC,"I've been rolling with Shibboleth for years now, pretty satisfied :) Free, open and openSAML based. Excellent choice if you have several 'federations' https://shibboleth.net/"
devops,3a1zh8,NiHiLiM,1 point,Wed Jun 17 08:44:49 2015 UTC,"Hi Guys, thanks for all the great suggestions!"
devops,3a1zh8,jaredw,1 point,Wed Jun 17 10:02:05 2015 UTC,Anything that interacts WELL with google apps?
devops,3a6qbh,-neNull,7,Wed Jun 17 17:41:28 2015 UTC,"Your post format is very odd. Why did you sandwich text between two links? Why make a self post at all if you just want to make a linked post? The formatting is distracting from the content.   Please dont crunch links into a self post format. If you want to link, your link should have enough content and context to stand on its own. If you dont want to link, then the self post should be able to start a conversation on its own, not serve as medium for you to spam a blog entry.   Reddit has processes. Those processes are its heroes. Please try to follow its conventions."
devops,3a6qbh,Letmefixthatforyouyo,1 point,Wed Jun 17 18:07:29 2015 UTC,Also:  -5 for all caps in title  -1 for comma misuse and abuse
devops,3a1q03,iarcfsil,3,Tue Jun 16 15:26:54 2015 UTC,"I really want it and will pay real money if it's good. I want to know the absolute minimum I must know for both PHP and Python-based Ubuntu 14.04 sites:   Run my site safely Know how to keep it up to date (OS updates, language updates, security updates) Know how to roll back changes if I update and something goes wrong  Know how to handle security issues   I want lots of checklists and step by step instructions, but also summaries as to why I'm doing things."
devops,3a1q03,tomcam,2,Tue Jun 16 16:24:07 2015 UTC,Here are some other thoughts:-   What about some automated tests? Are you using any APIs that other developers can access to integrate with your tool? Is there a forum or support site I can contact if I run into trouble?
devops,3a1q03,ccarty,2,Tue Jun 16 18:11:15 2015 UTC,I would document your api and metrics (you do have both right?) and explain what it means.    Then set realistic numbers for said metrics and action steps when it breaches one of those thresholds.  That will save you phone calls in the middle of the night and a good night's rest.    That way we can setup monitoring properly and could even push the TSG down to first tier and they can take action before we have to dig deeper into your app and wake you up.
devops,3a1q03,jfalcon206,1 point,Wed Jun 17 21:01:41 2015 UTC,I wish somebody did this. Ever.
devops,3a1q03,raffraffraff,1 point,Thu Jun 18 17:59:55 2015 UTC,"Devops patterns for specific use cases/scenarios. Patterns for:   A linux PHP environment A J2EE application on an application server (such as tomcat)  etc.    What does your tool do? How do you determine that the devops env is ""correct"" to the point of automated testing."
devops,39sa9p,jon_brouse,1 point,Sun Jun 14 07:10:37 2015 UTC,"I've found that ICE needs its disk wiped every few weeks, have you experienced similar?"
devops,39sa9p,bbrazil,1 point,Mon Jun 22 11:19:21 2015 UTC,I've had it running for a little under a month and haven't seen an issue yet. We also have a low number if assets at the moment. How frequently are you cleaning? Is your environment large?
devops,39sa9p,bbrazil,1 point,Tue Jun 30 00:14:48 2015 UTC,"We've been running since November, and are around the 100 machines point with a handful of other services."
devops,39q2sy,throwawaydevopsq,14,Sat Jun 13 17:27:50 2015 UTC,"You said it yourself, use Ansible for this."
devops,39q2sy,kaydub88,3,Sat Jun 13 17:37:17 2015 UTC,Are you familiar with Ansible? Could you recommend any good resources for getting started?
devops,39q2sy,cerealcable,2,Sat Jun 13 17:44:35 2015 UTC,It's pretty simple as far as devops goes. You said you have experience with puppet so you'll be fine with Ansible. I gave it a shot recently just for kicks to do a small development project and it worked great. Easy to learn and perfect for your situation.  As far as learning it goes. I just chose a thing to do and went to town just like you're doing now. Their docs are quite decent I found so you should read some docs and soon enough you'll be done.
devops,39q2sy,jenkstom,1 point,Sat Jun 13 18:34:03 2015 UTC,"Ansible takes a little effort to get started, but a hosts file and a single playbook file is the minimum, I think. A playbook is basically things you want to do to a host or a group of hosts. I don't know why that took so long for me to figure out, but I couldn't find anything that would start at such a simple level."
devops,39q2sy,jazzyjayx,4,Sun Jun 14 02:49:33 2015 UTC,"You can use Chef in 'chef-solo' mode, no server required. It'll get you practice writing cookbooks but its a low barrier for entry and also good for single-server personal projects.   Edit: I googled 'chef-solo' and the first several results were tutorials on using it for small projects."
devops,39q2sy,Semisonic,1 point,Sat Jun 13 20:44:46 2015 UTC,"You can use Chef in 'chef-solo' mode, no server required. It'll get you practice writing cookbooks but its a low barrier for entry and also good for single-server personal projects.   I respectfully disagree.  Chef solo is headed towards deprecation in favor of chef zero.  If the OP has a real need to manage the server environment his application runs in, then yes, by all means, I would totally recommend the Chef route by setting up the ChefDK, building and testing the code in Kitchen, and deploying with chef zero.  Something like this blog post could help get him going.    Chef is a reliable platform for managing infrastructure as code.  And if you need all that, it's great.  But OP just wants to deploy an app with these requirements:    Server will be running Ubuntu 15.04 Set timezone to UTC Install and enable ntpd Disable password-based SSH login Ensure Python is specific version (latest) Put application on server (probably just a tar.gz, it's Python) Add a cron job    All of this sounds like it could be handled easily by building the app in a Docker container and deploying to something like Amazon's container service."
devops,39q2sy,jazzyjayx,1 point,Tue Jun 16 13:31:42 2015 UTC,I vaguely recalled that chef-solo had been replaced by something but couldn't remember its new name.
devops,39q2sy,jtimberman,1 point,Tue Jun 16 17:42:04 2015 UTC,To be perfectly clear:  chef-solo is still there and has not been changed. Yet.   There is an RFC to replace the behind the scenes functionality of chef-solo with chef-client local mode (using chef-zero). This work isn't started but the conversion must be 100% compatible for chef-solo-based work flows.   https://github.com/chef/chef-rfc/blob/master/rfc031-replace-solo-with-local-mode.md
devops,39q2sy,gonzo_in_argyle,3,Thu Jun 18 06:13:57 2015 UTC,"You already know Puppet. Use it in standalone mode (""puppet apply"").  It's a single server. Ansible offers no real benefit here."
devops,39q2sy,MrMarv,2,Sat Jun 13 20:50:21 2015 UTC,"imho Saltstacks salt in masterless mode. /u/mudfly provided the best link to the quick start guide already.  There is a formula for NTP, sshd and build-in states for setting timezone, cronjobs and system packages and pip packages."
devops,39q2sy,keftes,2,Sun Jun 14 10:29:20 2015 UTC,"Use Chef with no doubt, if you're a beginner. There's a larger and more active community out there that you can reach out to."
devops,39q2sy,klippos,2,Sun Jun 14 14:02:28 2015 UTC,"Before anything, I think the best think to do is to test, test and test again !  If you want to learn, I can advise you to start with Chef (like that, you can even learn few Ruby), Virtualbox, Vagrant and Kitchen. All this tools are perfect to improve your skills.  Here, few tutorials to train :   Automating Cookbook Testing with Test-Kitchen, Berkshelf, Vagrant and Guard Chef - Kitchen - Berkshelf Chef - Kitchen - Berkshelf well explain  Digital Oceans -  Chef Getting Started   If you have any questions, don't hesitate"
devops,39q2sy,mudfly,1 point,Tue Jun 16 09:11:47 2015 UTC,All of the popular Configuration Management tools these days can do what you are asking. I converted from Puppet to SaltStack. Here is a link on how you would could achieve this using salt without a master server. http://docs.saltstack.com/en/latest/topics/tutorials/quickstart.html
devops,39q2sy,bagezio2,1 point,Sun Jun 14 05:49:31 2015 UTC,You can get started with ansible pretty well with the free preview chapters of the ebook 'Ansible: Up and Running' http://www.ansible.com/blog/free-ansible-book
devops,39q2sy,drawsmcgraw,1 point,Sun Jun 14 16:35:46 2015 UTC,Use Vagrant to provision the server and Ansible to configure it.  There's a book called 'ansible-for-devops' which will teach you this and more.
devops,39q2sy,tcp22,1 point,Mon Jun 15 01:45:15 2015 UTC,"I would like to experiment with some devops tools.   That being the case, I think we can agree that a shell script is the simplest way to get this done BUT that's not the point. The point is to use this as an opportunity to learn a new tool.  You're already leaning toward Ansible so I'd say give that a shot. As others have said, Salt/Puppet/Chef all have a masterless mode.  With that out of the way: I'm heavily biased toward Salt. I don't want to turn this into a brochure for Salt so I'll just leave this quick state file that (roughly) does what you described."
devops,39q2sy,dominic_failure,0,Tue Jun 16 01:45:53 2015 UTC,Cloudformation if AWS + Puppet
devops,39nnmh,killroy1971,1 point,Sat Jun 13 01:22:02 2015 UTC,"I've used Fortify before but given that it's a licensed, seat-limited product written for the enterprise software market aimed by sales teams that seem to target only companies using Java and JS, I would bet almost everything I've got that it's not going to be as easy to automate as a typical MSI based installer on Windows if it's Windows based.  Sounds like you'll need to have a Jenkins job that deploys the software by running a shell script or perhaps an expect script on the remote system, and from there you run a test or two. If that doesn't work, rollback the install and report a failure. Otherwise, send out notifications that a new version of the software has been released to a group of technical people so they can begin their own tests. Delete any snapshot / backup of the previous state once you've tested the new version out. Pretty much how I've worked with shell script based installers since ever."
devops,39nnmh,djk29a_,1 point,Mon Jun 15 23:09:03 2015 UTC,My finding is that it's best to uninstall it and buy something else. HP proved incapable of even the simplest bug fix after months of pushing them.
devops,39l7y0,redditor0817,4,Fri Jun 12 14:43:35 2015 UTC,"How about: https://pbs.twimg.com/media/CEQOsL9XIAAezy_.png ? Or: http://www.developermemes.com/wp-content/uploads/2013/12/Defect-In-Production-Works-On-My-Machine-240x300.jpg http://image.slidesharecdn.com/itworksonmymachine2-090430173505-phpapp02/95/session-3-it-works-on-my-machine-closing-the-loop-between-development-testing-1-728.jpg?cb=1241113700    Or: http://blog.mozilla.org/webdev/files/2012/06/wonka-md5.jpg  Or make some ""Deploying in QA/PreLIVE before LIVE? Ain't nobody got time for that!""-Meme    Stuff I encountered from ""Ops"" guys: On Debian Wheezy install libc6 from Debian Squeeze. Why? They wanted the old ruby version back so they don't have to update 1 (ONE!) script.     Ops guy came in: ""I downgraded the libc6 package on Wheezy to the Squeeze version to install the old ruby version."" Me: ""And now your problem is?"" Ops guy: ""Server doesn't work anymore."" Me: ""You already said that.""     Ops guys removed support for ruby scripting language from server, because nobody needs that. Right?    Ops guy: ""Puppet doesn't work anymore."" Me: ""You removed Ruby, so.."" Ops guy (disturbs me): ""Oh yeah, we don't need that."" Me: ""Well.. Apparently Puppet does.."" Ops guy: ""Can't you port it?"""
devops,39l7y0,BarServer,1 point,Fri Jun 12 16:21:20 2015 UTC,"Wait, the Ops guy doesn't know how puppet works?"
devops,39l7y0,straighttothemoon,1 point,Sat Jun 13 12:56:11 2015 UTC,"He does, sort of. But didn't know that Puppet needs Ruby. Nor howto to read the output from ""apt-get remove bla"" that tells him ""Hey I'm going to uninstall the following packages ...."""
devops,39l7y0,BarServer,1 point,Sat Jun 13 15:00:19 2015 UTC,"ShitOps. Seriously, whatever about not understanding how puppet works... Understanding basic package dependence is the bread and butter of junior systems administration. I think it's in chapter 1 of my old LPIC-1 study guide. Maybe even page one.   There is a DevOps conference happening in Amsterdam soon. One of the talks is called 'here come the donkeys', or something like that. The basic idea is that it is inevitable that every line of work, as it gets more popular, attracts people who are not qualified to do it. The hiring process at most companies sucks, so donkeys end up getting jobs. At my last job (a really really huge SaaS company) it was donkeys all the way down. I'm working at a small (but rapidly expanding) SaaS company, and we're taking the hiring really seriously. It took over a year to make our last devops hire in my office. Better off with a bigger backlog than a mountain of technical debt and constant firefighting."
devops,39l7y0,raffraffraff,1 point,Tue Jun 16 09:27:24 2015 UTC,sounds like a funny day at work :D
devops,39l7y0,BarServer,3,Sat Jun 13 19:08:12 2015 UTC,"I just stumbled across: http://4.bp.blogspot.com/_CywCAU4HORs/S-HYtX4vOkI/AAAAAAAAAHw/Hzi5PYZOkrg/s1600/ItWorksOnMyMachine.jpg  Think this one in combination with the ""defect in production"" might be a good fit for my presentation ;) Thx guys"
devops,39l7y0,i336_,1 point,Sat Jun 13 19:37:36 2015 UTC,Oh.. You know http://devopsreactions.tumblr.com/ ? Maybe you'll find something there.
devops,39lht2,vomitfreesince83,5,Fri Jun 12 15:54:39 2015 UTC,"Honestly, at this stage DevOps=Linux knowledge with some coding thrown in.  I'd focus on getting a solid Linux foundation first, then you'll want to write at least passable code in something like Python, and of course the config management tools like Ansible are good to know too.  You may have luck finding something of you keep looking, but most places want Linux skills first and foremost."
devops,39lht2,brosyphus,1 point,Fri Jun 12 16:20:09 2015 UTC,Thanks! Definitely working on that now
devops,39lht2,MrMarv,4,Fri Jun 12 20:34:58 2015 UTC,I would hire a experienced self-taught python/ruby coder with some linux experience rather than an experienced Ops person with no to very few coding experience. So I'd say: get into programming.
devops,39lht2,SouthernAirTemple,1 point,Fri Jun 12 20:28:55 2015 UTC,Thanks!
devops,39lht2,techie_freelancer,1 point,Fri Jun 12 20:35:10 2015 UTC,What type of experience do you look for with someone who knows Python/Bash? I'm an ops person but do a ton of scripting with both Python and Bash in my off time.
devops,39lht2,MrMarv,2,Sun Jun 14 17:34:54 2015 UTC,Automation.  I recently scored a new role and I think I beat the other applicants simply because I had automated many things at my previous position and could provide automation scripts that I'd done for day-to-day life.  One of them was a script for evaluating my opponents in League of Legends!  It can be anything.
devops,39lht2,kegilpin,1 point,Mon Jun 15 01:52:32 2015 UTC,"I'd say that experience in the languages (and frameworks to some extend) that are the foundation of tools that you using / going to use is utmost important. For example if you are using Chef, seasoned knowledge of Ruby would be great. Same goes for say Salt and Python. This does not only mean ""scripting something"", but also understand the core concepts of the technology. Be it proper object orientation, load order of includes and common design patterns... e.g. everything that you need to debug problems in the tool itself.  A best way to show-case the above would be if your github account shows you already have some commits to say Chef and/or have written/contributed to commonly used recipes."
devops,39lht2,elijahwright,2,Sun Jun 21 08:34:29 2015 UTC,"Can you get a pull request merged into Chef, Puppet, Ansible, Vagrant, Terraform, Salt, Docker, Jenkins...? Then you're demonstrating something special."
devops,39f0hn,alexcasalboni,3,Thu Jun 11 07:44:19 2015 UTC,"Thanks, this is a helpful article. I just deployed a new nginx reverse proxy stack this week. Good timing for me."
devops,39f0hn,michaelw436,1 point,Thu Jun 11 17:10:30 2015 UTC,"I love everything about nginx. fun fact: nginx has docker containers so if you're into that sorta thing, you can easily deploy a docker nginx app.   And if you're REALLY into that sort of thing, you can write lua apps inside nginx."
devops,39a1xn,tomcooper845,10,Wed Jun 10 09:44:14 2015 UTC,"I think that system backups are essentially a lazy way. You should backup a database, but not an entire server. State of any system you run must be reproducible using configuration management tools."
devops,39a1xn,alexgear,4,Wed Jun 10 14:24:31 2015 UTC,"Agreed, mostly. In fact the last backup system I built was based on quickly restoring services with ansible to meet OLA, and then slowly restoring larger files like quarantined files, archived logs and databases from a dedup store.   And speaking of dedup store I would like to mention Attic here. Attic and bup both but I chose to go with Attic.   I use it to backup about 10TB of real data, which is compressed into 6TB and dedup'd into 750MB. This is a better dedup ratio than Symantec Netbackup. And yes I have tried to do a restore and it works. ;)"
devops,39a1xn,stemid85,1 point,Wed Jun 10 20:09:42 2015 UTC,Thanks for sharing your experience - it's really helpful.
devops,39a1xn,alexgear,0,Wed Jun 10 22:04:33 2015 UTC,There is no way you deduped 6TB into 750MB.
devops,39a1xn,chaotiq,1 point,Thu Jun 11 05:08:59 2015 UTC,"Perhaps you're measuring the wrong thing. I've seen deduped backups on Data Domain, Dell Ocarina and ZFS do this easily. It's all about how large your sample is, your deltas, and your ""unique data""."
devops,39a1xn,berserke,2,Thu Jun 11 07:42:53 2015 UTC,"Another useful tool (although showing its age) is rdiff-backup. It keeps a copy of the current backup uncompressed, with compressed reverse deltas for previous backups. Not as transparent as a hard link system, but far fewer inodes needed."
devops,39a1xn,jermudgeon,1 point,Wed Jun 10 14:42:01 2015 UTC,Have you tried btrfs? It supports COW snapshots.
devops,39a1xn,Douglas77,1 point,Wed Jun 10 16:00:07 2015 UTC,"so does ext4 on top of LVM, right?"
devops,39a1xn,t90fan,1 point,Wed Jun 10 22:21:49 2015 UTC,"I don't know. I thought that ext4 can't, but LVM can do CoW-snapshots on block-level, so whatever you put on LVM gets CoW-snapshots -- but again, only blocklevel."
devops,39a1xn,Douglas77,1 point,Thu Jun 11 07:20:48 2015 UTC,"you're back again with another blogspam post, although this time you left out the referral link. it's still obvious that you're a corporate shill though. I can trivially correlate the links in your posts and uncover who you're selling."
devops,394wbs,mal808,5,Tue Jun 9 07:36:02 2015 UTC,"The first thing you need to do is profile your app so you know what you are dealing with.   What does the cpu look like, Java Heap, memory, disk IO when running under load. Once you have that, you should look and see if you can tune anything (Java heap size is almost never tuned correctly for example). Once you've tweaked settings and improved code so that it runs better, look at all your stats again.  Now that you have all this data, you have a starting point for performance characteristics. Sweet.   Your next decision is do you want to scale up or scale out?   Now, you can start looking at server spec and figure out what fits your needs."
devops,394wbs,gabeech,1 point,Tue Jun 9 12:40:27 2015 UTC,Thanks for your help!
devops,394wbs,TidesComingIn,2,Tue Jun 9 13:40:38 2015 UTC,"I would recommend that you start building a performance metric, something that a lot of developers/operations folks overlook or just don't have time/budget for.  This is so you'll be able to say ""on x processor, y ram and z disk, we expect this performance"" and back it up with graphs and some basic stats to show standard deviations etc.  Now take the app and run it on another PC, or try adding/removing ram, etc etc.  I've found that using VMs can really help this process along.  Now you can show graphs that illustrate the differences in performance between 2 cpus, 4 cpus and 8 cpus.  4, 8 or 16GB ram.  SSD vs single HDD vs RAID 5 vs RAID 10.  Stuff like that.  Why do all this and why keep it separate from application tuning?  Well, you want to be able to make a somewhat scientific prediction:  ""We know we get 100 application operations per second with hardware configuration A.  If we purchase configuration B, we expect, based on our research, that it will handle 1500 appop/s""  Of course, all this takes time, and it takes discipline to not mess with changing tests while benchmarking.  Now, you can build on that basic benchmarking and prediction by measuring real world performance over weeks and months to show that ""given a median demand for application operations per second, peak demand works out to roughly be appop/s multiplied by X""  or something like that!  I hope my rambling is somewhat understandable :)"
devops,394wbs,mestachs,2,Tue Jun 9 14:50:33 2015 UTC,"It is indeed, thank you for taking the time to do so."
devops,394wbs,ChesFTC,2,Tue Jun 9 19:12:36 2015 UTC,"If you don't already have some monitoring installed (Nagios, NewRelic, etc), I would highly recommend using something like that. It would help trace and test CPU/process load, and from there you can make relevant adjustments.  It's hard to say how hard a server ""should be"" working without details on the app itself, so you'd be the best judge of that. Generally you want lower CPU usage (% of max CPU/sec), although since you specifically mentioned connectivity I/O utilization measurements may also be useful to have. As gabeech mentioned, also look into heap usage for tomcat (ours are in bin/catalina.sh)."
devops,394wbs,tcp22,1 point,Tue Jun 9 14:53:47 2015 UTC,"Many thanks, I'll check those out."
devops,394wbs,visualthoy,2,Tue Jun 9 19:14:18 2015 UTC,"measure : Instrument your code to collect metrics https://github.com/dropwizard/metrics, measure also host metrics, db metrics. (if you have some $ try a new relic agent) publish them to a monitoring/graphing solution like influxdb/graphana ($ -> librato.com) load test : http://gatling.io/#/ or jmeter, be careful that your client machine may get overloaded before your server, try to launch them from multiple machines in different networks. find your bottleneck (db connection pool, thread pool starvation, deadlock, gc pauses, slow query, db lock,...), improve, move to 1 until acceptable   see if hystrix circuit breaker would not help to keep the system healthy (or at least get some insight with their https://github.com/Netflix/Hystrix/wiki/Dashboard), or a better concurrency model actor based (not thread pool based).  Polling is often not free, see if messaging/publish-subscribe doesn't help.  stop doing pet server... prefer cattle : https://blog.engineyard.com/2014/pets-vs-cattle"
devops,390ea0,ildiroen,3,Mon Jun 8 09:39:41 2015 UTC,"Well, sounds like fun! Too bad Texas is far away. DevOps days Austin was fun though.   Good luck!"
devops,390ea0,FireThestral,2,Mon Jun 8 13:37:23 2015 UTC,This years Austin Devops Days was my first. They do an amazing job with it!
devops,390ea0,mwhite14,2,Mon Jun 8 18:06:07 2015 UTC,If you have any comments on speakers or workshops feel free to throw them at us as well.
devops,390ea0,K4R0L15,2,Mon Jun 8 13:21:53 2015 UTC,Hotel booked and plane tickets purchased. Can't wait...
devops,390ea0,Maximus86,1 point,Mon Jun 8 17:52:40 2015 UTC,Awesome! I can't wait either. Make sure you stay for the BBQ! :)
devops,390ea0,Maximus86,2,Mon Jun 8 21:06:01 2015 UTC,"I see ansible mentioned in the above lineup, yet it seems to be absent on the actual ""program"" page. Are there any Ansible workshops?"
devops,390ea0,Maximus86,1 point,Tue Jun 9 09:27:24 2015 UTC,Hey Maximus.  There is an Ansible workshop indeed. :) I made sure to push for it since I'm an Ansible fanboy myself.  See the full overview here: http://lanyrd.com/2015/devopsams/sdpgph/  It'll be held by Bas Meijer who is the co-organizer of Ansible Benelux meetups. He was referred by Greg DeKoenigsberg (community guy for Ansible) It's gonna be good!  Planning on going?
devops,38tpud,9to5traveler,17,Sat Jun 6 19:05:08 2015 UTC,"Not admitting that our schema sucks  Not admitting that the way we use the database sucks, not the database itself. Yes, the problem is us, it is not the database.  Thinking that things are easy.  Wanting to solve problems with new technologies with fancy names.  Jumping into those technologies without researching them.  Not hiring a devops person, but instead getting me a developer to act like a sysadmin.  For some reason every single time I've shown them iostat and the drives maxed the eff out, we still aren't getting around to fix the io problem. But maybe a new system will help. Maybe an alpha version of a some wuuuzah database will do it. It will right?  Not properly finishing off projects and refining them.  Taking prototypes turning them into production, then complaining when they crash.  Prototypes which were explicitly stated as things that would-not-scale."
devops,38tpud,dooooo,3,Sun Jun 7 03:06:47 2015 UTC,"I think I just left this company a week ago, or at least one with the same problems. I start at the new gig tomorrow morning, and things seem much cleaner from the outside, but there's only so much you can know before you're in deep enough to taste the soup."
devops,38tpud,laurier57,2,Sun Jun 7 16:13:01 2015 UTC,"I thought the whole point of devops is that you don't hire ""devops people"" but actually change the culture of dev and ops."
devops,38tpud,kurin,2,Sun Jun 7 20:53:16 2015 UTC,"If you don't have an op's person that can do a little dev and vice versa you just have a dev that you are forcing into an ops role.  I am primarily op's I love functional code, systems automation, OS automation virtulization etc etc. I can do the dev side enough to understand what the developers are doing an work with them to get the whole stack to a level that we can't get to independently. But you can't just point at a developer and say ""Hey you, you are devops now, go write me a script to roll out and tear down virtual machines based on load and needed capacity""."
devops,38tpud,vitiate,0,Tue Jun 9 22:00:57 2015 UTC,"You can't?  If a programmer can't write such a script, they're not a programmer. Maybe they need to talk to a sysadmin to get some domain knowledge, fine, but if they actually can't do it full stop then it's not that you have a dev team that can't do ops, it's that you don't have a dev team."
devops,38tpud,kurin,2,Tue Jun 9 22:25:08 2015 UTC,"That was just an example. I have worked with Dev's that have been forced into an operational role. A lot of them are very quick to pick up a lot of what constitutes operations. It is the stuff they miss that comes back later to hurt them.   One of my previous employers a mid size SCADA R&D firm was running five different subnets on a flat network. No routers, no segregation, no vlan, no ipsec, and no tunnels. They had confidential information on the same physical network that they had their guest wireless access points connected to. To switch between networks they would simply change their IP address and go to work. This was created by a fantastic unix dev who was forced into an operations role and did not have the background knowledge to build the infrastructure but did what he thought was right because management pointed at him and said ""You, you are operations now. We have DevOps!"".    can't do it full stop   ^ Outside of government I have never met anyone like that."
devops,38tpud,vitiate,1 point,Wed Jun 10 13:05:51 2015 UTC,Yeah but the reality is that many companies want to designate someone as the DevOps engineer. Usually a more accurate title for that person would be Automation Engineer or something along those lines but we work within the constraints we are given.
devops,38tpud,itripovermyownfeet,1 point,Mon Jun 8 12:06:18 2015 UTC,"Sounds like you have a case of bad management. I've been there, but fortunately as a consultant I can fire my client if they don't want to listen to my input.  I'm hoping this book will be something that can help get management more onboard with DevOps methods."
devops,38tpud,pydry,1 point,Sun Jun 7 06:13:27 2015 UTC,Ha yeah the 'fancy new tech we want to use!' issue is something we run into regularly. Also the 'devops is just devs with prod root access amirit?' issue.
devops,38tpud,tcp22,6,Wed Jun 10 13:17:36 2015 UTC,"Premature optimization. Reinventing the wheel... in a completely non-scalable way. Not using indexes/foreign keys. Fashion driven development (mongo, hey!) Not creating a stateless infrastructure where possible Not throwing hardware at a problem first (is your database server a bit slow? have you tried just installing an SSD/upgrading the RAM?) Not doing performance testing before optimizing"
devops,38tpud,Dwaligon,3,Sun Jun 7 13:14:12 2015 UTC,"Ahh yes, fashion driven development really hits home. I totally understand how it happens and I've been guilty of it myself. I mean, who doesn't want to be an early adopter of the latest framework, DB etc....  But in the real world, you really need to have an actual data driven argument for why the new system is actually measurably better than the tried and true. I think most engineers learn this eventually."
devops,38tpud,burning1rr,3,Sun Jun 7 17:36:14 2015 UTC,Not servicing our technical debt - have to pay some back to progress forwards.
devops,38tpud,Progtologist,2,Sun Jun 7 09:32:47 2015 UTC,"Problem I have seen is exposing too much information about your environment. People start to hardcode around that information and it makes scaling hard.   For example I work in an environment where we have three data centers: west, central and east. Servers in those data centers have a number associated with its location in the hostname. I have seen far too much code wired to this information. If we added/removed a location there would be a ton of refactoring. Staying ambiguous makes changing architecture and technology easier."
devops,38tpud,HeadSpeakerJunky,3,Sun Jun 7 07:13:29 2015 UTC,"Yeah, tying application code to the environment is never a good idea."
devops,38tpud,vitiate,2,Sun Jun 7 07:23:07 2015 UTC,"I find that most companies are pretty decent at scaling up infrastructure, and pretty awful at scaling up code (at least on the infrastructure side of things.)  I see a lot of people taking a 2000 line mentality into a 20000 line project."
devops,38tpud,saggybolsack,1 point,Sun Jun 7 09:02:06 2015 UTC,"I've seen it both ways, some companies have engineers that can code a large architecture and keep scalability in mind but they get hamstrung by their ops people, and in other cases it's the other way around. Although I think your scenario (Of non scalable code) is more common, not sure why."
devops,38tpud,joshlove,1 point,Sun Jun 7 17:38:50 2015 UTC,"Absolutely, it can definitely be either way. Or even both. Depending on your environment it can be very difficult to evangelize what needs to be thought about with regard to scaling. Some engineers in both dev and ops have never been forced to think about how this is forethought and not afterthought."
devops,38tpud,Progtologist,2,Wed Jun 10 03:44:17 2015 UTC,Storage iops. Just because you have space on your SAN doesn't mean you can just keep adding infrastructure on it.
devops,38tpud,vitiate,1 point,Sun Jun 7 16:34:58 2015 UTC,"Ahh yes, I've seen this happen a few times."
devops,38ovdn,Jenkins-CI-Guy,5,Fri Jun 5 16:58:26 2015 UTC,"Jenkins-CI-Guy, I work for Automic and came across your post. I am not the best person to give you a detailed answer but I have passed it along internally so will try to get something back for you shortly.  In the mean time here are a few resources that may help you answer your questions.  Automic Community - https://community.automic.com/entry/signin?Target=categories (You can post the question here is as well)  Automic Docs - http://docs.automic.com  Automic ARA & Jenkins Whitepaper - http://offers.automic.com/automic-ara-and-jenkins"
devops,38ovdn,bradpat1,3,Fri Jun 5 20:37:54 2015 UTC,"I did actually read the white paper (for anyone else reading [here](automic.com/sites/default/files/2842 Automic ARA %26 Jenkins WP EN.pdf) is a URL that doesn't require a registration & sales pitch from Automic.  I hate those things.  I dont' want to get bugged by a sales person while just trying to educate myself.)  6 pages in to the white paper, and I've see buzzwords and a lot of features not relevant to a strictly Dev environment, as well as some veiled insults at developers.  I don't need to ""collaboratively work with operations to craft a holistic solution.""  I need to call my developer's stored procedure to see if it passes the test suite.  Someone else handles pushing out the new code (I assume via UC4).  Also, the screenshots on Page 5 & 7 are completely blurry.  Was there a problem exporting the PDF?  The text is fine, but the images are useless.  In the Dev environment, we aren't concerned with any of the system configuration issues, since we just want to run stored procs and test the output.  So we don't need  * Environment modeling - we have one environment. MS SQL 2005. thats it.  * Workflows - There are no needs for approvals, promotions, etc.  So from what I read, I still don't understand if UC4 can call stored procedures in a Database, but I'm assuming it can.  It just has a lot of other heavy weight features that have nothing to do with what i need done.  I do appreciate reaching out."
devops,38ovdn,diroussel,2,Fri Jun 5 22:45:32 2015 UTC,"You are right. Autosys is designed for running batch jobs, and comes from that world. Similarly for Auttomic. They both have grown up in an enterprise world where stability, monitoring and business processes are more important than speed of making changes.   Jenkins, as you know, comes from a dev back ground. It's not designed to run general batch jobs, but it turns out you can run them. However there is not the same focus on separation of responsibilities and monitoring and audit and so on. But maybe it's all there in Jenkins.   If you want to convince people to change, first check that Jenkins can fullfill all the requirements. Then put a business case together. For each of your use cases (scenarios) list how it would happen with each toolset. Then map it to resources, timeline and cost. Then attempt to show there is a cost saving of other advantage."
devops,38ovdn,kenerwin88,2,Fri Jun 5 19:59:25 2015 UTC,"Mainly I don't know enough about how UC4 accomplishes it's magic.  I mentioned that all we use UC4 is for running stored procs on a MS SQL DB.  Thats it.  That is a script.  Scripts can be run from anywhere (given adequate permissions, etc etc).  We are a dev team, not a production team so  I have no intention of attempting convince the IT top brass to stop using established production procedures.    The problem comes when us in the DEV environment have to wait 3 hours for a support desk ticket in order to run a 4 minute stored proc.  That is just silly, and it wastes a lot of the time for our offshore team that frequently has to wait a full 24hrs for turnaround on their tests.  So the problem isn't anything to do with UC4 / Automic, and is everything to do with the corporate red tape protecting Production, while at the same time hindering fast turn around for Dev.  So if I can know more about what UC4 does, then I can understand if it is possible to accomplish this with a simple Jenkins install that just calls stored procs to do their thing."
devops,38euim,Devtotheops,3,Wed Jun 3 19:19:05 2015 UTC,"Back in 2013, I was using chef. My team would set up one open source edition server for local dev and several of the various development deployed instances. It worked great.   For production and staging, we used a chef enterprise server, which has extra features like RBAC and ""organizations"", which loosely map to one OSS instance.   Since we got along fine without those features in dev, the extra features would actually get in the way.  I think chef has since moved away from having a distinction between OSS and enterprise editions, but I haven't been using chef much since back then."
devops,38euim,programmerq,1 point,Thu Jun 4 14:52:45 2015 UTC,"As of version 12, there is one Chef Server and it is open source. All the features of the Chef Server and its API were opened, including RBAC/ACLs (which is where 'organizations' come from), as well as the Push Jobs server. There are premium addons such as the management console, reporting, Chef Analytics, and Chef Delivery."
devops,38euim,jtimberman,1 point,Tue Jun 9 16:08:04 2015 UTC,"Yes, that does sound familiar. I was just getting out of doing chef as that announcement came out, if I recall correctly."
devops,38euim,programmerq,1 point,Sat Jun 13 06:58:36 2015 UTC,Its important to remember that Chef is not intended to be a continuous delivery platform. It is meant to be a Configuration Management and (very clunky) infrastructure provisioning system. You should not be using Chef (though you can) to deploy applications.
devops,38euim,rapenchukd,1 point,Fri Jun 12 17:36:42 2015 UTC,"Oh, believe me I know. Loooong backstory on this one though. :-)"
devops,38euim,programmerq,2,Sat Jun 13 06:56:34 2015 UTC,"I’ve been doing DevOps things since long before it was a term.  I have had the chance to work with a variety of open source and enterprise  tools.  In today’s market I’m seeing a lot more mix between open source and enterprise tools.  People are choosing their tools more on functionality and cost of ownership (open source is not completely free) than if they are open source or not.  I have noticed that I see a lot of Jenkins, Bamboo and TFS for builds.  Sometimes people try to use these for deployments and managing their pipe lines.  These tools don’t manage deployments or pipelines well, but that makes sense since they were not built for that.    There are very few tools that let you manage your deployments graphically.  Some that do are really 3GL tools to script your deployments. The only tool that I found to do a good job at drag and drop deployments is XL Deploy.  The drag and drop deployments work for any deployment to any environment for which there is a plugin. That is kind of cool.  If a plugin does not exist they can usually be developed with minimal effort.  It turns out that XebiaLabs also has a community edition of their tools.  As far as fair disclosure, I and currently a Solution Architect for XebiaLabs.  I used to work for another company that selected XL Deploy for our deployments and I liked the tool and the company so much I went to work for them."
devops,38euim,jcodebender,2,Thu Jun 4 20:27:22 2015 UTC,"I heavily utilized Atlassian Bamboo at my lost job. It had some shortcomings as we were pretty early adopters, but changed at a rapid pace. Built with the pipeline concept in mind, which is pretty important in my opinion. Especially from the standpoint of observation by the organization. Pipelines really help users make sense of the delivery process. As the designers of the system, we have the ability to visualize the process much more easily than others do. That is my biggest struggle with Jenkins because they are really just starting to support these concepts with the workflow plugin. And the visualization of pipelines is only supported on Cloudbees Enterprise Edition. I hope that changes.  I also really liked the ease of integration into the other tools in the Atlassian suite. And I find JIRA to be a very important tool in CD as well. Can't have continuous improvement without a way to organize/track changes.   My preference has always fallen to OSS as long as there is a solution that meets the needs of the organization. As long as tools are being properly evaluated, open source is a great choice for the enterprise. I was very happy to hear that Thoughtworks OS'd Go last year and to hear that Chef Server was combined into a single open source solution. My biggest concern with licensed solutions is they seem to be treated more as a typical enterprise product, and I don't think that fits as well in this rapidly changing/evolving space. Although they are better about meeting customer needs that similar products were years ago.  It's very difficult to try and sell ""Devops"" tools at this point in the life of the practice. I'm not saying that some companies don't do it pretty well, but I'm not willing to settle for having innovation stifled now or any time soon due to sole capitalization of trying to package a discipline with a label and sell it to the masses. This is not the space to try and occupy with boring labels in my opinion. I feel it's where innovation has the most opportunity to thrive and that is what led me to it."
devops,38euim,Progtologist,1 point,Wed Jun 10 01:16:47 2015 UTC,"Both have benefits, ontop of that as far as the automation side goes, Microsoft is really embracing OpenSource so its safe to say that line is getting blurred and changed. Personally for a small company I feel that free and open (based on what your admin/devops guy knows) is best but when you move into a larger organization enterprise is your better bet due to support alone.  This is my opinion, very open to hearing another side since this is my experience personally and I have not had the luxary of another side."
devops,38euim,iwifia,1 point,Thu Jun 4 08:55:04 2015 UTC,Open source is enterprise :)
devops,38euim,andreicristianpetcu,1 point,Tue Jun 9 12:16:35 2015 UTC,"It depends what you mean by ""continuous delivery software"".  CD is as much about process, practices, mindset and culture as it is about tools - just like ""agile"" is.  But I assume you mean something that helps you construct automated build and deployment pipelines?  I have used tools like Hudson/Jenkins (open-source) but they don't have a ""pipeline"" concept built it.  I've had good experiences with Atlassian's Bamboo (commercial software) - it's pretty easy to setup and integrates well with their other ALM tools like Jira, Confluence, Stash, etc.  My preference at the moment is Go-CD (disclosure: I work for ThoughtWorks which builds this product) as it has the pipeline concept built in (see docs here: http://www.go.cd/documentation/user/current/).  It lets you visualise the pipeline too which I think is important and its configuration is in a single XML file that you can keep in source control rather than some proprietary format.  It used to be a paid product but now it's open-source and you can use it for free without limitations.  The above 3 mentioned tools are the ones I've come across the most though I've heard of people using TeamCity from Jetbrains as well. Are you comfortable writing your own scripts for everything, like in gradle, bash, rake, or powershell, etc?  If you want a drag-n-drop type product that lets you assemble a pipeline them these tools won't help - they are for sysadmins/developers who can write code or scripts.  I'm not sure of any tools that let you visually construct a pipeline..."
devops,38b3g5,bundyfx,9,Wed Jun 3 01:46:42 2015 UTC,Oh snap:  https://twitter.com/damienmiller/status/605864767232704513
devops,38b3g5,mattstratton,5,Wed Jun 3 01:49:29 2015 UTC,Oooooooh  edit: Read it a bit more and it looks like the Microsoft guy accidentally sent communication to a read only mailing list (the OprnSSH announcements list).   https://twitter.com/ANGELCALVOS/status/605880409486848000
devops,38b3g5,GundamWang,5,Wed Jun 3 02:44:01 2015 UTC,"Well this is off to a good start!  In all seriousness this is going to be awesome to have directly in PS, I don't know how many times i've started typing 'ssh user@' into powershell, facepalming, then changing to a VM or cygwin."
devops,38b3g5,KaptKrunch21,2,Wed Jun 3 06:17:22 2015 UTC,@damienmiller   2015-06-02 22:33 UTC  .@ANGELCALVOS I was surprised to read this - we (OpenSSH developers) have not had any contact with your team AFAIK     This message was created by a bot  [Contact creator][Source code]
devops,38b3g5,TweetsInCommentsBot,4,Wed Jun 3 01:49:33 2015 UTC,This has been my #1 requested Windows feature for a long time; an SSH server and client native in the OS.  None of this WinRM nonsense.
devops,38b3g5,Ancillas,2,Wed Jun 3 05:26:09 2015 UTC,"One of my friends (until recently) was a project lead on Powershell, and I've had the chance to talk to him (read: give him shit) about this. I've asked about why it hadn't happened to date, and it turns out that a lot of it comes down to who owns what in OpenSSH and making sure Microsoft doesn't violate the terms of the license of same. I know, it sounds weird to hear that MS is worried about legalities like that, but this is, in his words ""The New Microsoft, now with Less Evil.""  If the current PS team is able to make it happen, more power to them. I suspect it means that someone, somewhere in MS figured out the legalities.   (I suppose this is one less thing I can give him grief over when I visit now. Dammit.)"
devops,38b3g5,ksonney,0,Wed Jun 3 14:05:46 2015 UTC,"""The New Microsoft, now with Less Evil.""   Sure. ""Less evil"":  http://techrights.org/2015/05/29/microsoft-vs-india/"
devops,38b3g5,pydry,1 point,Wed Jun 3 16:25:44 2015 UTC,"i've been doing this using the paid powershell server application for a while, it's essential for my stacks built on aws, glad its finally a standard thing."
devops,38b3g5,Musicprotocol,0,Wed Jun 3 09:57:19 2015 UTC,"Now give me a full bash shell and all the gnu text processing tools.  Oh and while you're at it, mkdir with the '-p' parameter.  And loose the drive letters!  What is this, 1990?"
devops,38891a,jssanders,1 point,Tue Jun 2 15:36:42 2015 UTC,"Oooh, super helpful! I'm planning on having our new intern setup hubot and an automated build process, so it's nice to see how advanced Github has gotten with being able to deploy in different ways for testing purposes."
devops,3894r6,AzureUser12345,2,Tue Jun 2 18:32:02 2015 UTC,"HI,  While there are lots of details I do not have, If you want to stay within Azure Web Apps my suggestion would be WebJob. Since the data does not change frequently, call the API, put it in storage and access it from the website as needed. A WebJob can run on a schedule and process the data according to your needs. There are many examples on the Azure site."
devops,3894r6,msdevops,1 point,Wed Jun 3 10:52:32 2015 UTC,Additional information - Vendor API is not selective and it spits out all the data in one call. So there is no selective data that we can fetch or filter.
devops,3846mi,brendanp,38,Mon Jun 1 18:57:20 2015 UTC,"Add a ssh server out of the box, for the love of all that's holy. While RDP has its place, and WS-MAN and friends definitely do as well, nothing can beat ssh's ability to aid in managing systems over a low bandwidth connection and/or from resource-constrained devices without needing the entire Microsoft tooling stack installed on the managing device...  Bonus points for a builtin text editor usable over a ssh terminal and for a similar registry browser and editor.  Extra bonus points for mosh."
devops,3846mi,Moocha,16,Mon Jun 1 21:40:07 2015 UTC,Extra bonus points for mosh.   ++  I'd really like to see more development inside microsoft that showed some awareness of network shittyness. Not everything is managed over a corporate lan within 5 ms of everything else. The world is a very large place and they need to build for that. not expect people to go shell out 10s of k for a shitty appliance because they don't want to bother making smb4 not shit over a wan.
devops,3846mi,Tacticus,6,Mon Jun 1 22:00:20 2015 UTC,Nice - http://blogs.msdn.com/b/looking_forward_microsoft__support_for_secure_shell_ssh1/archive/2015/06/02/managing-looking-forward-microsoft-support-for-secure-shell-ssh.aspx  Thanks /u/jsnover : ) Excited to see how this works out!
devops,3846mi,ramblingcookiemonste,2,Tue Jun 2 16:39:17 2015 UTC,This is epic..
devops,3846mi,MattHodge,1 point,Tue Jun 2 17:02:40 2015 UTC,"This is awesome news!  ... heh, lookie that, having someone with an engineering background running the show results in actual improvements to the product via customer feedback! ;)  I won't miss Mr. Ballmer."
devops,3846mi,Moocha,2,Tue Jun 2 17:26:52 2015 UTC,Bonus points for adding Active directory authentication to that.
devops,3846mi,keftes,3,Mon Jun 1 22:20:19 2015 UTC,SSH already supports kerberos as an authentication method. Mosh just uses ssh for auth.  So really it's other way around. bonus points for making AD work with ssh
devops,3846mi,Tacticus,1 point,Tue Jun 2 03:40:34 2015 UTC,"Yup! For one, on domain join the machine could automatically publish its key fingerprint to a new schema attribute somewhere, it could publish a SPI, it could autoconfigure the ssh server using group policies, and, and, and, and, and. So much stuff that would make our lives easier."
devops,3846mi,Moocha,12,Tue Jun 2 16:39:38 2015 UTC,"A number of people on this thread have discussed the need for SSH support.  This morning Angel Calvo (Engineering Mgr for PowerShell) announced that we would support, contribute and ship OpenSSH.  http://blogs.msdn.com/b/looking_forward_microsoft__support_for_secure_shell_ssh1/archive/2015/06/02/managing-looking-forward-microsoft-support-for-secure-shell-ssh.aspx  We want to thank everyone in the community that pointed out the need for this.  We do listen to you opinions.  Jeffrey Snover [MSFT]"
devops,3846mi,jsnover,16,Tue Jun 2 16:24:59 2015 UTC,"Aside from rehashing the glaring omission of an SSH server, pick one from below:   bash + GNU utils perl python   Having just one of those three would stop me from trying to convince people to target any platform other than windows."
devops,3846mi,jmgnm,2,Mon Jun 1 23:39:28 2015 UTC,"Absolutely agree on SSH : )  On the other three, what sort of implementation are you thinking?  The first has been tried before; those tools aren't the best fit for Windows, and thus we have PowerShell.  The latter two seem widely available if needed, but again, are generally a bit less useful than PowerShell on Windows.  Not that I'm not a fan, my first scripting languages were bash and perl : )  Cheers!"
devops,3846mi,ramblingcookiemonste,8,Tue Jun 2 13:06:53 2015 UTC,"A reason to use Microsoft products when running OSS software.  For better or worse, in an OSS shop where we build tools out of (MySQL|PostgreSQL|Mongo) + (PHP|Python|Ruby|Go|Rust|Node) + (Apache|Nginx), there doesn't really seem to be a reason to even begin looking at anything produced by Microsoft. Sure, it's theoretically possible to run a MySQL/Nodejs/Apache combination on Windows, but it's not something you hear of being done, well, at all. Just reading through this thread has told me more about the offerings which Microsoft has in these areas than years of working on OSS projects.  When I can deploy and manage my relatively simplistic monitoring suite (Nginx, a Go web backend, MySQL, Nagios, Graphite) on a Microsoft machine, and run into fewer problems while doing so than I do on Linux (there's a lot of room for improvement), then we can really start having a discussion about running the rest of the company on Microsoft's machines."
devops,3846mi,dominic_failure,4,Tue Jun 2 02:25:59 2015 UTC,"Gotcha - can you elaborate on the the management side of things? What's lacking for managing those specific tools on Windows?  fwiw, I think most of us in Server recognize that homogenous single-vendor solutions aren't the real world anymore, so I'm not trying to motivate anyone to use tools that don't address their problems.  Maybe Windows isn't the right app server host for you, and it might never be, but perhaps there are other interesting problems you deal with that we could address, and that don't require shifting your underlying platform from Linux to Windows.  Monitoring? Analytics? Incident Management?  What're the big gaps you want someone to fill?  I'd love to talk to you about your toolchain, if you're up for it; if you want email me, I can give you a call at your convenience."
devops,3846mi,MattHodge,2,Tue Jun 2 05:11:47 2015 UTC,"I think most of us in Server recognize that homogenous single-vendor solutions aren't the real world anymore   Could you please try to push this recognition also out to the corporate desktop world?  I live in the manufacturing space.  It's Windows everywhere, desktops and servers and even in process control systems.  Which I generally don't mind except for the way ""open source"" and ""free software"" have been conflated with ""shareware"" and ""freeware"".  There is a huge world of free software and open source scientific software I can't get permission to touch because corporate IT has been trained so hard to hate on non-proprietary software.  Another non-science example is MediaWiki.  I've got a problem space where MediaWiki is the canonically correct solution, but we can't touch it because the entire LAMP stack it relies on is ""shareware"" and we've already got Sharepoint Wiki instead.  Sharepoint Wiki is good for a small team writing a few collaborative documents, but it simply won't work for my problem in which I need a full encyclopedia for this deep topic.  I would like to see a future in which we could use MediaWiki to capture a bunch of nebulous knowledge stuff from the engineers and operators, and then mirror a small curated subset of that content into read-only Sharepoint documents for the managers and admin support staff.  It would be the best of both worlds: F/OSS does part of the solution, Microsoft does part of the solution, we all walk away happy.  But as it is now, it would be better to simply not solve this problem than roll out Sharepoint Wiki, because that would ultimately train two generations of engineers who already know how to use and search Wikipedia to instead hate the entire Wiki concept and never want to write documentation again.  By avoiding Sharepoint Wiki I can at least keep getting the grab bag of emails and Office documents I'm getting now, and we can shove that onto a network drive and hope that a future generation can sift through it when they need it.  The problem is that the corporate world still thinks of Microsoft as the final solution, and the open source world as just temporarily covering function gaps that Microsoft will eventually get to.  They don't understand that their fresh hires are already trained on a large open source stack and when they get into this space it feels like walls everywhere between what they know and how to kludge the Windows ecosystem into doing something similar.  These folks all have smartphones and are already moving pieces of their work into that world rather than accept what corporate IT is ""ready"" to roll out.  We need to bring more pieces of that stack into the intranet and stop labeling the same stack that runs the backends of the Internet behemoths and has nearly all of the TOP500 ""shareware"".  OK, rant over, whew!  Thanks for your efforts in reaching out."
devops,3846mi,-neNull,1 point,Wed Jun 3 12:23:18 2015 UTC,My company is a Microsoft shop and I desperatley wanted Graphite too  - ended up writing something myself for this: https://github.com/MattHodge/Graphite-PowerShell-Functions
devops,3846mi,Palmar,14,Tue Jun 2 15:21:01 2015 UTC,it'd be great if you could upgrade xcopy and robo copy to delegate permissions without sending my password over the network in plain text...
devops,3846mi,drawsmcgraw,9,Mon Jun 1 19:26:43 2015 UTC,"Yeesh - I know nothing about who maintains xcopy these days, but I will absolutely attempt to find out what the issue is."
devops,3846mi,ebastos,7,Mon Jun 1 20:50:51 2015 UTC,"I am very much part of your target audience. I work in the financial sector for a mid-sized company that runs almost exclusively on microsoft products. This is going to be a fairly long post. Being a financial company there is of course some resistance to adopting the cloud so my perspective is going to be focused almost entirely DevOps on premises with microsoft technology.   Powershell DSC is very cool but it also feels like it could be so much more. The compliance server doesn't really do much other than reply to queries at the moment and the manageability of the entire solution is lacking. The best option seems to be Chef, but that requires us as a windows only shop to set up and use a linux server. Of course that can be done, but it'd be a lot more elegant if you could run management software for your configuration items on windows. For the record, currently we use two central management servers, keep them in sync using DFS-R and load balance using NLB. I am not going to write down a wish-list of things to be added into the DSC language but clearly there needs to be a push to get much more stuff in there on all levels of the operating system, and preferably as much of the IIS stuff as possible. Add TFS and Git integration to the ISE editor as an option. In fact getting some sort of a ""tree-view"" thing instead of the tabs would make it much better than it currently is. The editor itself is great for most things powershell, but it could be better. As others have said, PSSessions could be better. One option is to actually just implement SSH into windows but to be honest all you really need is the ability to fire up interactive programs. As much as DevOps is about treating all your servers the same instead of individually petting them, the scenario where you want to hop to a server and check something is always going to be there. Push a configuration out to a bunch of servers, then hop to one of them and see how it looks. I guess this is a really long-winded way of saying: ""Can I have vim in my PSSessions please?"". Push all the teams to standardize to devops practices. Why do Sharepoint, CRM etc not allow me to manage those products as I would the web environment! I want all the microsoft things to embrace DSC, powershell and DevOps practices. Clear up the Release Management thing in Visual Studio. Being able to push code out to servers through DSC is awesome, but unless I've missed something, Release Management doesn't yet do Partial configuration and play nice with the LCM on an server that already is pulling one or more partial configurations. We need to be able to release quickly to servers that may be hosting multiple web applications. Maybe this problem will go away with containers, but it's still worth working on for the next few years. Give me a better load balancer please! Documentation and support for the ARR module in IIS seems somewhat lacking and NLB as a technology is kinda outdated. I don't want to have to rely on something like F5 to load balance windows servers. We've been trying to get ARR to replace NLB but at the moment it looks like we'll end up moving to F5 because ARR just takes too much research getting into. In general, documentation and community support could be better. The Microsoft/Windows DevOps community isn't huge and pushing people to a powerful, good, central platform might help. This also goes for the technet articles on powershell and technology. They're mostly good but it'd be great to have more examples and more discussion opportunities.     Don't get me wrong. I think microsoft is really doing a good job in the last few years. But there's always a ton of things that could be done better. I hope this is any help to yall."
devops,3846mi,ebastos,1 point,Tue Jun 2 10:45:35 2015 UTC,"This is the most thoughtful reply I've seen and is better at saying what I wanted - More work into ease-of-use and understanding Powershell DSC. I remember being excited when Workflows were announced and trying to use them turned into an absolute disaster because a lot of the habits I developed with plain Powershell simply didn't map to Workflows.   DSC. More DSC. Easier DSC. At this point in time, I'd sooner set up a Salt master and write Powershell scripts than deal with DSC.  I'd also agree that the Microsoft ecosystem has made huge strides in the past several years (Powershell was my savior when I was in a pure Microsoft environment)."
devops,3846mi,ChesFTC,5,Tue Jun 16 01:57:15 2015 UTC,OP Delivered!!!  Announcement here
devops,3846mi,Tacticus,5,Tue Jun 2 18:18:34 2015 UTC,"I'm not the right audience either, since 90% or more of my server base is Linux and another 5% is Solaris.   But the few windows servers are such a pain to manage.  Maybe I lack the knowledge, but some simple things like checking the server load from a command line from my (Linux) desktop seem to require rdesktop, mouse and clicks. Meanwhile I can check my Linux servers with :  ssh hostname ""uptime""   I would not install tools, sdks or make complicated webcalls to manage a handful of servers, but I would be very pleased to be able to use de facto standard  industry tools, like aforementioned ssh to do so.   Also I don't think anyone would complain about having windows coming with Perl / Python / Ruby by default, like every Linux, BSD, Solaris and Mac OS X out there.   An official package manager, like yum or apt would make a lot of people happy too."
devops,3846mi,Tacticus,2,Mon Jun 1 21:37:33 2015 UTC,"Playing in the real-world ecosystem is clearly an important requirement; if you were able to use your existing tools to manage/monitor Windows Server, are there interesting workloads that you think you'd run on them?  Just wondering what purpose they serve in your world.  We do have a package manager now - OneGet (https://github.com/OneGet). Essentially equivalent to apt-get and yum.  It pulls package from Chocolatey repos."
devops,3846mi,ChesFTC,6,Mon Jun 1 22:08:01 2015 UTC,"Just on this, the last time I installed SQL Server, it took more than an hour. I had to locate an ISO, mount it on the VM, RDP in (why do I need a gui?), click here, click there, and wait, and wait. It needed a mess of dependencies installed too.   I'm really glad that you're making advances here (ninite shouldn't need to exist, end-of-story), but how much of the above process you've really fixed? Here's a comparison, like-for-like, running on my rather crappy desktop on a quite slow connection:  $ time sudo apt-get install postgresql ...snip... real    0m46.764s user    0m4.424s sys 0m1.844s $"
devops,3846mi,Xeppo,2,Tue Jun 2 04:03:39 2015 UTC,So i'll check with work and see if i can push out our ansible and packer stuff. But we have a full pipeline with 2 interactions to go from a win2k8r2 iso and a git repo to a working mssql DB  all up about 2 hours if we use a remote winrm connection or 1 hour with a local one. Though it is super stupid how we have to schedule a job to install it because winrm can't touch windows updates.
devops,3846mi,Moocha,3,Tue Jun 2 21:29:44 2015 UTC,Essentially equivalent to apt-get and yum   Equivalent to dpkg or rpm would be more accurate. it is not the same as dnf\yum nor apt-get
devops,3846mi,ChesFTC,3,Tue Jun 2 03:43:10 2015 UTC,"I think that the major here point is that we should be able to run pretty much any workload we can think of on a modern OS, without being forced to jump though hoops to get basic stuff installed. If I have a windows box with spare capacity, I should be able to easily deploy, for instance, our python notification bus. In practice, it would be an absolute nightmare, and any of the standard automated deployment processes I've ever used simply would not work without major customisation of a base windows install.  As a non-comprehensive list, I would expect to have installed by default:   SSHd rsync (to use with SSH) git and so forth vim/emacs etc - i.e. non-GUI editors Perl Python Ruby The mess of the various versions of the libraries for .NET, C++ redists, etc etc Java R (possibly optional) GNU userland tools - ls/find/wc/screen etc (optional, but better have a one command line installation step)   These are all pretty basic, and in my opinion, you haven't got a modern operating system if you don't have these installed by default. When my $27 modem-router supports SSH out-of-the-box, you've really got to ask yourself what's going on at MS that this isn't there by default.  I used to do a reasonable amount of windows administration and even application development (mostly C# - I really like Visual Studio), but the complete paucity of normal tooling, and the extremely slow process of clicking here to install basic prerequisites has made both myself, and pretty much everybody that I've worked with switch over to developing on Macs, with production on Linux.   The bottom line?  I think that in the developer mindshare market, Microsoft is now so far behind that it needs to start support the tools (ssh/rsync) and expected environment (languages + userspace tools) that every other operating system provides by default, or it will continue to be marginalised."
devops,3846mi,vitiate,3,Tue Jun 2 03:58:28 2015 UTC,"Is it really that you want those things installed by default? Or is it that you want them available in some sort of consistent packaging that you can pull down via automation or the CLI?  I worked on Server Core, the predecessor to our upcoming Nano Server stuff, for several years. Our goal was to reduce the servicing/security footprint by removing unused binaries from the box - clearly back in Server 2003, there was a ton of stuff that didn't belong in a server OS (a browser, media player, the entire GUI shell, etc).  Nano Server is essentially the culmination of years of efforts to disentangle unnecessary dependencies.  Consequently, I'm biased towards ""make sure these can be installed"", rather than ""installed by default.""    Looking quickly through the Chocolatey package gallery, every tool you listed looks to have one or more packages available, so it should be possible to produce an image like the one you're describing with no interactive installs, just from the CLI (or your favorite config management tool)."
devops,3846mi,ebastos,4,Tue Jun 2 04:47:47 2015 UTC,"I don't want to speak for ChesFTC, but I don't think that anyone would complain if Server core came with some of those packages (SSHd, rsync, vim/emacs/nano specifically) by default.  The problem that Server 2003 was that it had unnecessary applications installed by default that were very difficult to get rid of.  Including SSH out-of-the-box is just another step in reducing the administration headache.  I've been a Windows admin for years, and I've recently moved over to DevOps and a linux-based environment.  I can honestly say that I'm astounded at how much more efficient it is to administer servers.  I can easly manage 10x the number of servers and services than I used to be able to in Windows."
devops,3846mi,ebastos,4,Tue Jun 2 08:52:38 2015 UTC,"I can honestly say that I'm astounded at how much more efficient it is to administer servers. I can easly manage 10x the number of servers and services than I used to be able to in Windows.   Indeed. For a very long time now, Microsoft has optimized either for single-machine deployments (i.e. their client OSes) or for sprawling deployments spanning tens of thousands of machines and up. Anything falling in the middle gets the shaft, because the sheer time and effort investment of setting up an administration environment is insane, the tooling is expensive, clunky and resource-intensive, and in many cases it's impossible to make the business case for it--not when I can run something like massh or use Chef / Puppet / Salt / whatever and have it work on the base OS images right out of the box. Or simply run a damn for..in loop :)  Edit: Spelling is hard."
devops,3846mi,ronocdh,1 point,Tue Jun 2 15:29:49 2015 UTC,"SSH and at least one non-gui editor are non-negotiable. The programming languages/libraries should really be there as well, but realistically, it's a pretty small amount of effort to get them there if they're available in chocolatey and we can SSH in to install them.  The point is, though, that I shouldn't need to build a custom image to get started - a gui web browser isn't required at all on a server, and good work on removing it - but having SSH most definitely is unless you want to force me outside of using standard tooling - which won't happen.  Having to bake custom images, while crazily somewhat popular thanks to the docker people, is not a sensible way to deploy machines. Most devops / config management workflows rely on having a fresh install at least be manageable without requiring any customisation or the use of weird tools to login."
devops,3846mi,vitiate,1 point,Tue Jun 2 12:16:43 2015 UTC,"Yes, give us vi or anything at all. Bring back edit even."
devops,3846mi,Tacticus,1 point,Tue Jun 2 14:25:49 2015 UTC,"Is it really that you want those things installed by default?    Just re-stating what /u/Xeppo said below: SSH/rsync/vi(m) are the bare-bones.   And the Perl/Python/Ruby trio is pretty much on the top list of every DevOps shop too.  I use ansible to orchestrate my environment. I know a bare-bones install of any Linux gives me all that I need (ssh/python) to deploy anything from scratch in a couple minutes, including copying files, downloading stuff from the Internet, etc. It's able to call apt/yum/zypper... you name it.  After the first boot I literally only need to know the IP address of the new server.  If I had to login to the server, download/install yum, download/install python and then fire my ansible playbook it would kinda defeat the idea."
devops,3846mi,mclellac,1 point,Tue Jun 2 14:47:24 2015 UTC,"I'll have to read about this OneGet. I was never really on the Microsoft scene, so I have no idea what you are talking about. :-)  But what I can tell right now is that whenever we are looking a new solution - when given the option - we always pick Linux as the base OS. When not given the option we look for another vendor that has a similar tool that has Linux support. If there is none we end up using Windows, but we make very clear to the vendor (in every single opportunity) that they need a Linux option.  Hopefully I'm seeing a trend recently where only the Linux option is available, so I see why Microsoft should start worrying.   Someone here mentioned Windows administration doesn't scale well. And that is true. I used to run a Linux shop with nearly 300 servers with 3 people. A lot of time of those 3 people were consumed by our 8~10 windows servers.  I'll give you a simple example: A couple months ago a nasty bug was found in Bash. Every single server needed to be updated ASAP. I took me longer to write my ansible playbook than to run the massive update in our server farm. Heard about the bug around 8AM. 8:20 I was done and going for coffee.  Any DevOps team with a server farm consisting of any Linux, BSD and Mac OS variation and/or combination could have an Ansible playbook done in a couple minutes and upgrade their entire farm.   But let's say that instead of Bash it was Apache and you had a couple Windows servers on the Mix. Well, you can run one script and update all your *nix servers, but then it's time to fire up that good old rdesktop and do the same on the 3 or 4 windows servers.   It just doesn't worth to learn new stuff to manage 3 or 4 new servers. And therefore I'll keep them into the 3 or 4 realm if I can. If that makes any sense."
devops,3846mi,i336_,6,Tue Jun 2 15:05:56 2015 UTC,"Succinctly, keep doing honest community outreach like this post!   It's been many years since I touched a Microsoft technology, so I don't have much advice that's relevant to platforms you maintain. In a broad sense, I think the more that Microsoft can interoperate with existing technologies, the more likely Linux-based devops folks will be coaxed back into the fold.  Be aware, of course, that you're battling the long-lived perception that Microsoft tries to embrace, extend, and extinguish. Recent projects such as Spartan and your devops-oriented outreach indicate a significant shift in corporate culture, though, which is welcome.  Keep fighting the food fight—we're all the same team!"
devops,3846mi,knight-fall,5,Mon Jun 1 20:28:59 2015 UTC,"Thanks! There really has been a culture shift of late - and it's really encouraging that we have the opportunity to census people directly to try to figure out what to build next. I'm on my second trip at Microsoft, and having spent some time in the Outside World, I'm very cognizant of all the useful tools developed elsewhere.  One of the things I most appreciate about the DevOps community is the pragmatism - people want to use the best-of-breed solution for whatever discrete piece of their pipeline they're implementing.  Obviously, if you prefer git over subversion, that shouldn't impact your CI options.  I would be super happy to hear about issues you have with platforms you do work on - there's nothing preventing me from building something specifically for Linux, for example, if there's a real market need."
devops,3846mi,knight-fall,2,Mon Jun 1 20:42:39 2015 UTC,Are we getting new cal's for Linux machines or will we be forced to use the old cal's? Its not like every time a Linux machine grabs an IP address from a windows machine on a LAN it needs a cal.. Is it? Oh wait...
devops,3846mi,jfalcon206,1 point,Tue Jun 2 19:51:54 2015 UTC,culture shift of late    That seems to have ignored your legal department or your lobbyists.
devops,3846mi,Hexodam,4,Mon Jun 1 21:36:15 2015 UTC,Coaxing back Linux/Unix folk just isn't going to happen unless Microsoft brings back a modern Xenix or some new Unix OS. All Microsoft can do at this point is try and keep the Windows admins and companies that rely on .NET.
devops,3846mi,Hexodam,1 point,Mon Jun 1 23:26:11 2015 UTC,No no no no no no nonono no no no noooooooo  That would be a really really bad idea.
devops,3846mi,vitiate,3,Wed Jun 17 02:03:11 2015 UTC,"Hi brendanp, I  have one simple question.  Why don't you guys offer a year trial service like AWS? I really wished that I could host my last project on AZURE. You can at least offer a year trial vai dreamspark program.  Thanks."
devops,3846mi,jsnover,6,Mon Jun 1 20:13:59 2015 UTC,I have good news - they added Azure for Dreamspark earlier this year (I think):  https://www.dreamspark.com/Product/Product.aspx?productid=99
devops,3846mi,vitiate,1 point,Mon Jun 1 20:33:52 2015 UTC,"Nice, I will check it as soon as I go gome"
devops,3846mi,thekingofcrash7,1 point,Tue Jun 2 04:41:07 2015 UTC,"But what if we're past college years and don't want to go the whole business route?  Seriously, AWS and GCE is way more flexible in offering free trials than MSFT.  If you want to hook people, you need to get them using your tools first and then ask to pay.  That's how AMZN did it as well as GOOG.     As an engineer who makes decisions on where to spend my companies money, I personally like to try it out myself and see how the technology will work before making recommendations to my business units on a path to follow.  Having a free trial is nice because I can sample the technology, consider ramp-up time, consider any benefits - especially as MSFT works towards Docker integration on HyperV, assess whether or not it will be a manageable service and how I can integrate it with my existing monitoring environments.  Until I can see clear benefits of why I should choose Azure over my own hosted Windows environments (or AMZN or GOOG), i'm likely not going to recommend.  signed: ex-msft msn fte and occasional msa member."
devops,3846mi,elijahwright,3,Fri Jun 5 04:26:57 2015 UTC,"A interface on top of desired state configuration.   All config management tools have one, but not dsc"
devops,3846mi,-neNull,1 point,Mon Jun 1 20:31:47 2015 UTC,Gotcha - is the central problem that you're trying to resolve ease-of-use for DSC? What're the elements that're most important?
devops,3846mi,mattstratton,1 point,Mon Jun 1 20:45:34 2015 UTC,"To start with just to get an overview of all the config, where it is applied and the status of it.  Writing and applying would be a bonus :)"
devops,3846mi,elijahwright,3,Mon Jun 1 21:00:53 2015 UTC,"More segregation between app and OS. I think docker integration is going to do this but I dream of the day I can roll out a terminal server, check some boxes auto-attach applications, map a useres data and when its time to patch the O/S Roll out a new one and blow the old one away. Seconds of downtime not hours.  Please either pull config out of the registry entirely or give us a super simple way of identifying exporting importing progmagically modifying on the fly items related to specific applications.  Please give us an easy interface for modifying via WinRM, PowerShell, CLI Whatever, Permissions, users, domain accounts, computer accounts and so on.  As far as I am concerned DSC should be a tool for other config managers. The major Config Management projects need an easy to use interface to DSC. I don't think MS will ever do Config Management right. Give the pro's the ability to write the tools to do it right for you. While I am mentioning DSC, who's bright idea was it to make it so you had to compile mof files out of source. I would like to see them flogged. Config Management should be simple. A simple text file, or xml file, or a script or whatever. Why compile ANYTHING.  Please assign a group to take a good look at Ansible. They are doing it properly. Simple, Efficient, No Agents.  Don't get me wrong PowerShell is a leap in the right direction. I love it. But it still cannot do 1/2 the things that can be done with a Linux based machine script/cli.  Also, I would love to see SMA/WAP with integrated Git support. The hack I have done to get git / jenkins to publish to SMA is ugly and adds a bunch of steps. But code that is not in source control doesn't really exist.  SMA/WAP integrated Visual Studio would be amazing, debug and publish from VS."
devops,3846mi,alex_sly,1 point,Mon Jun 1 21:16:26 2015 UTC,so you had to compile mof files out of source. ...A simple text file... MOF files are simple text files that you can just edit yourself.  PowerShell just makes it simpilier to create these.   Jeffrey Snover [MSFT]
devops,3846mi,replicaJunction,2,Tue Jun 2 00:18:38 2015 UTC,"MOF files are not simple. They are text.   Ansible yml playbooks are simple. Chef is simple. MOF is jumping through hoops with no at a glance visibility.  I get it, I know what you are trying to do and I appreciate it. But it feels a lot like you are continuing the old M$* tradition of creating unnecessarily overly engineered, ultra complex, hard to manage, buy our software to fix shortcomings with our software, works 90% of the time but requires a debugger and a dissembler to resolve the other 10% insanity of the past.  * and I strongly feel that you are trying not to be the evil Balmerized well lubricated money spouting fleshlight that M$ used to be"
devops,3846mi,aircows,3,Tue Jun 2 15:24:35 2015 UTC,"Hey guys - me again.  We're looking to do more in-depth interviews with people (via Skype), and we'll also be bringing some people onsite to beautiful Redmond, WA for further discussion.  If you're interested, my colleague stood up a SurveyMonkey survey for some contact info and demographic data about your business - if you're interested, email me or sign up there?  https://www.surveymonkey.com/s/LF2WDQG  -b"
devops,3846mi,dscripter,2,Tue Jun 2 19:08:49 2015 UTC,"Thats what i always think when someone tells me PowerShell is getting better. The rest of the system i have in Linux is still missing, and Linux shells and utils have 30 year head-start. I really dont think Microsoft has a chance to catch up."
devops,3846mi,ramblingcookiemonste,2,Mon Jun 1 20:29:30 2015 UTC,"I've been working on automating some windows builds in our shop - a lot of things are moderately painful until you figure out what you're doing, and then it gets better.  A lot of what I've run into are things where it is obvious that it works in spite of MS tooling, and because of a ton of impressive hacking, not because of MS tooling.  You really want to see that get fixed.  :/  I would be grateful to see better support for things like installation modes that make it super-dead-simple to build a packer image out of a Windows ISO.  The boxcutter-windows project has already done a ton, here, but you should look at how MUCH is required in Autounattended.xml to support a sane install...   Also, throwing resources at making existing tools (Chef, Puppet) better on Windows is always appreciated.  I know that someone over there seems to think that DSC is going to pick up steam -- it needs to work in tandem with the ecosystem, not try to replace it.  Windows is currently not a thing that is the primary focus for people doing a LOT of configuration management work -- you would be well-served to be able to leverage other tools with DSC/leverage DSC with them, rather than try to full-on replace intellectual investments people have already made...."
devops,3846mi,Tacticus,1 point,Tue Jun 2 11:44:26 2015 UTC,"stem, not try to replace    Once they go PowerShell they don't go back... Look at AD and PowerShell: there are tons of things that are only actionable through PS. Now that PowerShell has DSC?  It's only a matter of time."
devops,3846mi,ramblingcookiemonste,1 point,Mon Jun 1 19:41:31 2015 UTC,"Throwing resources at making existing tools (Chef, Puppet) better on Windows   This is happening. Chef is working directly with the Windows and PowerShell teams to do this :)  The"
devops,3846mi,Tacticus,1 point,Mon Jun 1 19:48:06 2015 UTC,"Yeah - I've been digging into the bits here recently.  It's looking pretty good.... :)  best,  --e"
devops,3846mi,jsnover,2,Tue Jun 2 17:31:58 2015 UTC,"I would like to add some more stuff about WinRM. It is not documented pretty well. For example, if I need to enable non-admin user access, I have to search how to do that in blogs. And then I can't do that via command line only. Running commands as different user via WinRM. Again no help on it. And using tasks is not cool. Not everything works fine via WinRM. For example installation of SQL Server 2008R2 and SQL Server 2012."
devops,3846mi,Tacticus,2,Tue Jun 2 17:49:53 2015 UTC,"To summarize my opinion on the topic...interoperability.  Microsoft finally seems to have realized that not everyone is going to drink their Kool-Aid.  Using Microsoft tools to manage Microsoft products works reasonably well, although I agree with some of the comments presented in this thread.  I'm a workstation engineer, and I've been spending the last couple of weeks brainstorming and testing products for configuration management and application deployment on our organizational Macs.  I much prefer Windows, myself - but we have users that swear by Apple (sometimes just because it's shiny) and our management backs them over us.  I would LOVE to be able to put together a Microsoft solution to manage these, because we're so heavily invested in Microsoft products already for our Windows management - but there's just nothing available from Microsoft to fit that need.  SCCM has basic support for Mac OS X, but it doesn't provide much more than basic hardware reporting - no software deployment, and certainly no OS deployment.  Linux now supports basic DSC configurations, but there's no sign of support for OS X, and we still can't administer that from a non-Windows workstation.  Instead, I've started looking into Chef, and I'm so impressed by it that I'm considering using it on Windows as well, sheerly because I can use the same product across every operating system I need.  Releasing a DSC compiled binary for Linux is a huge step forward, and I'm so appreciative of this - but it's not enough.  We need the ability to use the same thing to manage Windows 7-10, OSX 10.9-10.10, Ubuntu, Debian, Red Hat, and SUSE.  (Bonus points if it also manages IOS, Android, and WP8/10.)"
devops,3846mi,vitiate,2,Tue Jun 2 06:23:50 2015 UTC,"Prior to BUILD this year, I would have said so many other things to a thread like this, but what you have on the roadmap for Server (specifically Nano) is extremely promising for the challenges I'm currently facing at work.  I'm so glad to see the legacy cruft finally getting ripped out -- especially the 32-bit/64-bit duality in random things (most recently for me in the PowerShell module path).  The thing I would ask is more user stories on the Server and PowerShell blogs.  I love hearing about the new stuff, but I'd love to hear real world usages of the technologies in web scale operations (that aren't StackExchange -- god bless them and their openness).  I see customer showcases all the time on the Chef and Puppet blogs, and some are Windows shops, but I have to believe that Microsoft's Windows customer base is far more reaching than both Chef and Puppet combined :-)  Thank you for the outreach!"
devops,3846mi,ebastos,2,Tue Jun 2 13:52:41 2015 UTC,"My wish list:   vim: Contribute/adopt the open source project? I really, really want me an in-shell editor! PSReadline: can this be included in base PowerShell, maybe? Perhaps contributing to Cmder / ConEmu? Would like the highlighting you see on Linux systems for file types (dir, file, executable script/exe) -- isn't the console windows that you interact with PowerShell from just a slightly modified version of the command-line console window? Live tail (for both Windows Event Logs, or flat files) -- only equivalent I can imagine is running a cat file | select -Last 15 (within a loop that diffs after timestamp changes? Maybe?) Including tail, there are other tools which I have needed and use that are included with github for windows: scp, tail, sftp, tar, etc. Having similar functionality out-of-the-box would be beautiful. What about simple ways to evaluate the state of my system, without having to bring up Task Manager? Such as a 'top' and 'free' Linux utility equivalents in Windows? Certain Man pages and/or Info (from Linux) equivalent features as part of the base: I'm looking for the configuration files, or WMI classes, or registry keys associated with settings relevant to a specific application or Microsoft feature -- would love a command that would help list those. The above is an issue, because in Windows, you need to do one or more of the following to make a configuration change: modify/add-to/or delete keys or key properties in the registry, call WMI class methods, modify .ini or other flat configuration files, download and run a cmdline executable, etc. Example: I'm installing an application, and I want this service account to have the permissions to start/stop/restart that service by downloading and running subinacl (not included out of the box, or an equivelant??). For some reason, this is a complex task in Windows. As a result, I often find Windows Admins will just give a Service Account Administrator privileges on that box (Ouch). DSC: Management console/tool -- with reporting on compliance, error messages on those with failures, etc. Windows special ‘–‘ character that doesn't work anywhere else, and is always mistaken for a ‘-‘ -- please remove this as I witness people accidentally run into problems quite a bit because of that character. Line breaks in Windows are irritating due to how they work differently (git and other tools then need to keep in that in mind). Simple ways to save files as UTF8 w/o the BOM is just unavailable -- this bit me quite a bit when I had been dealing with needing to generate and submit JSONs via PowerShell, but I was saving them as UTF8 (WITH the BOM). Just do a “UTF8 bom” search here to see a handful of logged items referencing the problem of PowerShell not knowing how to easily handle these: https://connect.microsoft.com/PowerShell/Feedback Mine specifically: https://connect.microsoft.com/PowerShell/Feedback/Details/993163 Pending Reboots: Why is this needed all the time? Makes configuration management more difficult, having to handle pending reboots based on what change is being made.  PowerShell v5: Wanted to clarify -- is PowerShell entering rolling releases? As in, bugs found will get fixed without waiting for WMF upgrade? This would be beautiful. Magic wand scenario: Windows Server being free (maybe Open Source eventually?), and Microsoft shifting to a support model (like RedHat with RHEL). The amount of community projects out there, tinkerers, and people worried about providing Windows Servers (as Vagrant Boxes, Exported Appliances preconfigured, etc.) as part of those projects will go away completely. When I was teaching at a Community College, I wanted to provide to my students an Exported VM, but after speaking to other professors about making it available (on a OneDrive path, for example), too many people were worried about licensing issues in distributing a trial OS that I specifically had to download from Microsoft as an individual.   Happy to hear, with some questions: - Nano server: No GUI, elimination of legacy 32-bit, and super slim! Containers! Only install literally what you need! Awesome!   OpenSSH: Woohoo! Finally! OneGet: Woohoo! Package management has been needed very, very badly for a long-time! Will Microsoft be partnering with vendors in order to have official, curated repos? Using the Chocolatey repos may be problematic, due to needing to fully review all of the PowerShell scripts – which also are really making the download calls to other websites (as opposed to being an actual repository you are directly downloading from). PowerShell v5 can finally deal with archives, easily out-of-the-box!! Is this only restricted to .zip archives? Can this be expanded if so?"
devops,3846mi,ramblingcookiemonste,3,Fri Jun 5 03:44:05 2015 UTC,"Hi!  Not sure if I'm the right audience, but I would love to see a practical and affordable version control solution from Microsoft for IT professionals.  Most of these new toolsets assume you have a version control system in place. Ran a quick survey, and if the results are any indication, chances are many IT folks won't benefit from these new tools. How am I going to kick off build/test/deploy if I have no VCS? What good is infrastructure-as-code if it's not under source control?  How many IT teams will implement TFS for source control, or pay for TFS CALs if they already have an environment for their devs? A cheaper license might help. A cheap/free, simple to implement, git-based VCS with a few niceties (web interface, AD access controls, etc.) would go a long way.  Oh! Two others:   Would also love to see a CI/CD solution from you similar to AppVeyor, with on-prem support : ) Native SSH server and client support.  Yes, I use WinRM every day.  No, it's not sufficient to enable interop and simplify these toolsets that often benefit from or require using SSH.   Cheers!"
devops,3846mi,data_pusher,4,Thu Jun 11 01:52:05 2015 UTC,"Not sure if I'm the right audience, but I would love to see a practical and affordable version control solution from Microsoft for IT professionals.   But preferably not a new system that only works in the microsoft space. pushing out another vss or tfs is just going to be horrible. Build something that just integrates git or (preferably and) hq .   Native SSH server and client support. Yes, I use WinRM every day. No, it's not sufficient to enable interop and simplify these toolsets that often benefit from or require using SSH.   Fuck yes this.   Winrm over a wan connection is horrible and garbage. it makes me think no one at microsoft even bothered to stick 100ms of latency in the middle when they developed it. (much the same with SMB)  stretch goals would be sftp support and rsync. (robocopy is not anywhere near suitable for people who deal with imperfect networks)"
devops,3846mi,Moocha,2,Mon Jun 1 20:34:09 2015 UTC,"Absolutely, git or git+hg support, not a new DVCS : ) More the layer on top, making it as simple to use as GitHub or BitBucket. I'm a bit daft, but even I can work with those services."
devops,3846mi,theevilsharpie,1 point,Mon Jun 1 21:37:49 2015 UTC,Considering their previous implementations of VCSes i would be scared to touch vss3.  Though the git client is super easy to use on windows if you stick the github windows client on there. (not overly polished for just generic repos though.)
devops,3846mi,edward_snowedin,1 point,Mon Jun 1 21:44:16 2015 UTC,Winrm over a wan connection is horrible and garbage. Do you mean straight Winrm (e.g. CIM operations) or do you think PSRP (PowerShell Remoting) has the same problem (it layers on top of Winrm)?   Jeffrey Snover [MSFT]
devops,3846mi,Tacticus,1 point,Mon Jun 1 21:57:41 2015 UTC,I can't do powershell remotely (except via RDP but that is beside the point). (no pash for me)  if it is using the same soapish winrm connector for pash I imagine that the performance is going to suffer due to the significant number of round trips for each operation.
devops,3846mi,Tacticus,6,Tue Jun 2 05:08:41 2015 UTC,"Ahh - interesting.  So is this a scenario where version control is used for config/scripting for infrastructure operations (PowerShell scripts, Puppet, Chef, etc)?  We hear the SSH server/client support a lot..."
devops,3846mi,Moocha,11,Tue Jun 2 05:21:36 2015 UTC,+1 for SSH support.
devops,3846mi,Tacticus,9,Mon Jun 1 20:50:06 2015 UTC,Yes. SSH!  ;-)   If I can ssh everything else gets much easier.   Installing cygwin on every windows server is a pain.
devops,3846mi,Enoxice,2,Mon Jun 1 21:18:14 2015 UTC,"Yes, exactly!  One difficulty I've seen is that IT folks don't always see the value proposition of a VCS. If they don't start using it, they never realize how valuable it can be. A bit of a chicken and egg scenario.  If a simple, low cost solution was available from MS, folks who do realize how valuable this is could set it up and have a solution in place to help convince their co-workers. It's much easier to sell source control when you have a solution in place.  I lucked out - turns out Atlassian offers a community license for non-profits, and picked up Stash last week. But there are plenty of IT depts. out there who won't realize this, won't qualify, or won't spend the time looking at a third party rather than native MS solution.  You might not see this as often, if you're working with organizations that are already working in the devops mentality. Those folks likely already have a VCS solution in place and are up and running with many of these new toolsets.  Would be nice to help enable these tools and ideas in orgs that aren't there yet. It's a bit like Maslow's hierarchy; how can we move forward with some of these tools and ideas if we don't have a VCS solution in place?  Cheers!"
devops,3846mi,Tacticus,2,Mon Jun 1 21:21:55 2015 UTC,ITT people want Windows to be Linux
devops,3846mi,unquietwiki,6,Mon Jun 1 21:11:58 2015 UTC,"Not at all. We want to be able to administer and deploy Windows as easily as Linux can be administered and deployed. Windows environments require a considerable upfront investment of time and other resources, which isn't as acceptable now as it was 15 yers ago."
devops,3846mi,DrMantisTobboggan,2,Tue Jun 2 09:26:48 2015 UTC,"Pretty much, yeah.  Unless Windows can bring something absolutely phenomenal to the table that outweighs its management and licensing headaches, I can't think of anything that would lure me back from *nix. It's just too different from everything else, and right now, there's nothing Windows offers me that I want (other than legacy app support).  SSH support is a step in the right direction, I suppose, but it ultimately doesn't matter if the tools aren't there."
devops,3846mi,DrMantisTobboggan,1 point,Tue Jun 2 15:52:40 2015 UTC,"i feel like the azure ruby sdk needs a lot more attention. it's obviously the core component of the chef-azure-provisioning gem and, while its fine to use when doing VM creation, azure is a lot more than just VMs.."
devops,3846mi,adipisicing,1 point,Tue Jun 2 17:54:06 2015 UTC,Make WINRM less horrible. It sucks horribly on any link with latency. not letting people install stuff over your remote management tool makes it less of a remote management tool and more of a PR project.  Have a way to push files up with winrm (that isn't turning it into a wonderful echo EOF > bah).   Give us an alternative to smb. It still sucks horribly over wan links (yes when talking to the middle east it is not uncommon to see paths with 5 to 30% packet loss and 400ms of latency this is unfortunately normal)  POSH needs and ssh endpoint. it was the standard long before microsoft started their dance down powershell road.   Start screwing with your devs networks in the protocol development areas. make sure they are building and testing on networks that at least look similar to real life wans.
devops,3846mi,adipisicing,3,Mon Jun 1 19:47:07 2015 UTC,"Would SSH resolve your concerns about WinRM? Or would SSH only address a subset of them?  Regarding SMB, Windows Server has an NFS client/server.  Not sure about how well it works over WAN.  Have you guys tried that as well?"
devops,3846mi,irabinovitch,3,Mon Jun 1 21:50:45 2015 UTC,"Would SSH resolve your concerns about WinRM? Or would SSH only address a subset of them?   most of them yes. it would certainly make it a day to day tool for me. (at the moment winrm over a relatively nice wan link (200ms very little packet loss) means that a set of ansible scripts that take <10 minutes to run from a local machine take more than an hour.)  Winrm still should be able to install packages or at least it should be possible to turn that restriction off (seriously i can't talk to windows updates over winrm)    Regarding SMB, Windows Server has an NFS client/server. Not sure about how well it works over WAN. Have you guys tried that as well?   NFS is not a wan protocol it is designed for low latency reliableish links. it's great that the support for nfs is getting better. but i note that it is still somewhat of a second class citizen (no persistent connections (then again the user session mounting stuff is pretty horrible when working with services as well))   Aim for rsync. yes it will require spinning up a daemon on the other side of the link but at least you will have a way of making better more reliable copies.   Test your tools with wanem in the middle (or something like it) stick some latency some packet loss and some jitter.   Microsoft aren't the only people who suffer this issue. I yearn for the day our internal CI implements a network operator from hell mode as standard. (seeing this implemented as a standard thing everywhere would just be icing on the cake)  Also seriously check out mosh it's very very very very awesome."
devops,3846mi,engagThe,2,Mon Jun 1 22:03:15 2015 UTC,"+1 for rsync. Given a ssh server and a decent shell, it wouldn't even require a daemon (although that might need client support, but that's doable.)"
devops,3846mi,engagThe,1 point,Mon Jun 1 22:18:34 2015 UTC,You'd need the binary on both ends and there are some benefits of having the daemon available. (restricted access and the like)   and rsync isn't perfect. it's not great with lots of small files or networks that fluctuate around. it's just multiple orders of magnitude better than smb
devops,3846mi,tcp22,1 point,Mon Jun 1 22:32:08 2015 UTC,"One thing that I already heard is forthcoming is going to be great for me. With ServerNano or whatever. Hopefully I'm not misremembering. File transfer (and file editing I think?) over Winrm (e.g. no more echoing base64 encoded chunks). Cifs is nice and all, but not always possible in scripts etc.  Lot of folks in this thread asking for straight up SSH. Which would be great, but strikes me as unlikely. But better stability and predictability with WinRM would be a good start. There are seemingly countless instances of something working fine locally/manually but it blows up in confounding ways over WinRM.  I'm constantly running into bizarre problems that I waste days on. I can't install certain MSIs unless I use the poorly documented /NoInstallMsus or some such. I get random OutOfMemorys on things like msbuild. It is a source of much saltiness at work."
devops,3846mi,neduma,1 point,Mon Jun 1 23:21:46 2015 UTC,"Which would be great, but strikes me as unlikely.   which is the problem with microsoft. Why implement a common RFCed standard when they can create their own. (seriously yes there may be edge cases with how ssh limits your powershell stuff but damnit it's better than just rolling your own for those 3% of cases)    OutOfMemorys   we found a wonderful bug on this with 2k8r2 (and 2k12) when doing some stuff with ansible https://github.com/ansible/ansible/pull/8345#issuecomment-52074837 there is a KB about it. https://support.microsoft.com/en-us/kb/2842230"
devops,3846mi,jfalcon206,3,Tue Jun 2 01:23:43 2015 UTC,SSH   Just wanted to make sure you saw that we announced OpenSSH support this morning - http://blogs.msdn.com/b/looking_forward_microsoft__support_for_secure_shell_ssh1/archive/2015/06/02/managing-looking-forward-microsoft-support-for-secure-shell-ssh.aspx  It killed me that I couldn't mention this to you guys yesterday.
devops,386wmb,elacheche,2,Tue Jun 2 07:44:24 2015 UTC,Jenkins has a grails plugin and there is also a maven deployer plugin for grails to publish to a repo like nexus.   Jenkins can also run a grails codenarc plugin to do static code analysis
devops,386wmb,highclasshole,1 point,Thu Jun 4 12:58:43 2015 UTC,happy cakeday to me O_o
devops,386wmb,highclasshole,1 point,Thu Jun 4 12:59:00 2015 UTC,Happy reddit birthday :p
devops,386wmb,TidesComingIn,1 point,Thu Jun 4 14:26:11 2015 UTC,"I used Jenkins to build wars then transfer them to my server, I think that I scripted a little bash script to build the war, then I use my own bash script to deploy that war in the server side, then remove it.  Can the plugin make deploiements without creating the war?"
devops,386wmb,TidesComingIn,2,Thu Jun 4 14:27:40 2015 UTC,Why can't you leave the war on the server?  It seems like a bad idea to not build a war at all unless you have some other way to version your builds (source control doesn't count).
devops,38311a,4kidsinatrenchcoat,1 point,Mon Jun 1 14:18:23 2015 UTC,"you use .ebextensions to configure elastic beanstalk servers at boot, then you never touch them.   or..that's the idea at least."
devops,38311a,atm0sphere,1 point,Mon Jun 1 14:42:58 2015 UTC,"I'm using Docker, so I already get the bit of conf. now that I think of it, I bet there's a way to marry Docker + my chef infrastructure."
devops,38311a,diamondlevel,2,Mon Jun 1 14:46:51 2015 UTC,you can use ECS with Elastic Beanstalk.
devops,38311a,tcp22,1 point,Mon Jun 1 16:44:56 2015 UTC,Bootstrap into Chef at the end of your deploy..
devops,38311a,Semisonic,1 point,Tue Jun 2 00:45:59 2015 UTC,Check out the AWS driver for chef provisioning.  I believe it supports elastic bean stalk as well as a multitude of other AWS resources by wrapping around the AWS Ruby SDK.  There is an active Gitter and it's easy to get feedback from the core committers if you have any questions.  I've found it relatively easy to wrap up all our EC2 settings in Chef code.
devops,382xuc,WorstDeveloperEver,3,Mon Jun 1 13:54:38 2015 UTC,"Look at automating your backup/restore/install of everything.  Ansible, chef and others can do this."
devops,382xuc,willhughes,2,Mon Jun 1 15:48:52 2015 UTC,"+1 to this.  Don't think of servers as finished products.  Think of them as the result of your automation code.  You should be able to spin up a server and apply the same Ansible/Chef/Whatever (ansible is probably the easiest for a dev to pick up, in my experience and has no infrastructure requirements besides SSH) code to make the same server anywhere you want.  You may need to do provisioning manually at your providers as you switch, but once the server is up and has SSH, you can hit it and do what you need to do automagically with your Configuration Management tool of choice."
devops,382xuc,Alsmack,1 point,Mon Jun 1 16:22:12 2015 UTC,"What are the others, and what is the current trend for small startups?  A quick google search showed that people move to Ansible from others like Puppet.  Also, I'm not sure if it does what I want, but my old coworker wanted us to use Docker. Not sure if it's similar to Ansible.  Ps. We use Vagrant for development, if it makes any difference."
devops,382xuc,jrgifford,1 point,Mon Jun 1 16:59:21 2015 UTC,"I use Ansible for my configuration management and orchestration. It works well, and has a good, terse syntax (A plus in my opinion). Small company, took about a week to transfer our hand-built infrastructure to a few ansible playbooks that now run everything."
devops,382xuc,zoredache,0,Mon Jun 1 17:58:02 2015 UTC,"The generic term for puppet/chef/cfengine configuration management.  Ansible is more about orchestration, and docker is about containerization.  In some environments you will often use a specific tool for each of each of those areas.  So you would use an orchestration tool to tell a server to update/install, you would use a configuration management tool to define the configuration for a server."
devops,382xuc,aholen,2,Mon Jun 1 17:48:18 2015 UTC,"You could use [https://changelog.com/blueprint-reverse-engineer-server-configuration/] (blueprint) to try to reverse-engineer your changes on your existing server. (If you're not sure how they are set up) This will give you a puppet or chef-recipe for setting up the servers. You probably should have used something like puppet,chef,ansible from the start.  My first advise: Use docker to set up your systems, then your devs can use the same containers in dev as in production, and move them between different cloud-services.  Containers will probably replace the work done by Puppet,Chef,etc in a few years.  If not docker, try ansible - way more easier to start with than Puppet. With ansible you can get started really fast - both with Configuration Management (installing packages,store configfiles etc) and Orchestration (running yum updates, ad-hoc commands...)"
devops,382xuc,tcp22,1 point,Mon Jun 1 22:57:43 2015 UTC,"+1 for configuration management. Puppet, Saltstack, Ansible, pick one."
devops,380uts,piercemoore,6,Mon Jun 1 00:54:35 2015 UTC,So I interviewed at Facebook and was offered a job on the release engineering side. I turned then down mainly due to commute.   Here's my advice and really advice for all interviews.   Do whatever you can to be calm. Don't be nervous because they are a big company. Facebook is more looking for specialized people then a smaller company. They will probably ask you a range of questions to see where you are the strongest.  If you don't know an answer the best thing you can do is say I don't know and ask them for the solution. It shows you ate confident in what you know and you won't try to do things you know nothing about. As an interviewer they're is nothing worse then someone trying to bs  their way through an answer  Good luck. I know a few people that work there and enjoy it
devops,380uts,hijinks,2,Mon Jun 1 01:37:50 2015 UTC,"2c here - agreed to not BS, but don't immediately quit on the answer - if you can show some thinking about how you'd go about trying to solve it, that's better than nothing. But if you take a hard think and are still shooting blanks, then come clean.   The rest of hijinks advice is spot on. Just stay calm and get some rest. Last-second cramming isn't going to help you, just do your best and put on a friendly face.  Good luck!"
devops,380uts,shwash,2,Mon Jun 1 04:13:17 2015 UTC,"As interviewer,  some of the most annoying and unlikable candidates have been the ones who give up quickly.   I'm OK with you taking a swing at it when I put you on the spot."
devops,380uts,SEA-Sysadmin,2,Mon Jun 1 09:58:10 2015 UTC,"If you don't know a solution, at least do your best to understand the possible answer space and at the very least be correct about that much. For example, finding the optimal sorting algorithm for a data set may not be the easiest thing to do right away, but you probably wouldn't get many points for saying you could make it an O(n) sort algorithm (caveat - not radix sort or count sort type of algorithms! But do make a note of their possible use or if you can't in that case to demonstrate you know how a radix sort works)."
devops,380uts,djk29a_,2,Mon Jun 1 21:52:18 2015 UTC,"I don't work at Facebook, but I have interviewed at several large Bay-area places for SRE (Production Engineer).  I also currently give interviews at another large, webscale company in the Bay Area.  A few pieces of advice:   No amount of 'cramming' is going to help.  So just take a deep breath, relax, and stop stressing.  If I interview you and you seem all jittery, I'm going to be more concerned about that. Systems interviews tend to focus on lots of areas.  Don't pigeon hole yourself, but if you want to brush up on a specific area, that is fine.  These roles are usually for generalists.  If you're weak in networking, but strong in debugging and hardware, I'll probably pass you on.  Provided I am confident you're able to learn new things. I don't expect you to answer every question correctly.  But if you try to BS me, you're going to lose points.  However, saying you don't know, but attempting to reason through it and explain why, will earn you points.  Especially if you get it right :) Remember that soft skills mater at most of these places.  Being a engineer-smart, but unable to communicate will get you rejected.  Be polite, personable, but treat the interview with respect.  If you can slip in a joke, it might earn you points.   But, again, relax.  That's the most important.    edit:  Feel free to PM if you want to discuss anything more specific you're not comfortable with.  I won't tell you specific questions, but I'm happy to general experiences."
devops,37ze2w,lespauldude,7,Sun May 31 18:16:16 2015 UTC,"The job descriptions really should make it clear in advance. If they aren't, they're either failing -- or, really are looking for more operations than dev. :)"
devops,37ze2w,Ancillas,2,Sun May 31 18:37:20 2015 UTC,"An example is that Google and Facebook both use pretty generic job descriptions. I think they're hoping not to pigeonhole a specific candidate, when in reality they're looking for multiple different types of candidates, that could be placed in different areas, all called ""site reliability""."
devops,37ze2w,Letmefixthatforyouyo,1 point,Sun May 31 22:59:06 2015 UTC,This is what an interview is for.
devops,37ze2w,Ancillas,1 point,Mon Jun 1 06:02:31 2015 UTC,Sussing this out beforehand saves everyone time.
devops,37ze2w,tech_tuna,2,Mon Jun 1 15:50:19 2015 UTC,I use phone interviews for this.  A casual 5-10 minute chat to make sure we're on the same page before proceeding.
devops,37ze2w,ramblingcookiemonste,1 point,Mon Jun 1 16:08:12 2015 UTC,"Well, to be fair, responsibility can change too.  Employees can sometimes impact that change as well.  If you're hired in a DevOps role and clearly demonstrate solid scripting/coding skills, you might be able to do more of that kind of work.  Might.  Depends on the company and the individual.  And management.  :)"
devops,37ze2w,superspeck,2,Mon Jun 1 15:30:26 2015 UTC,"This : )  I started out in IT ~ 5 years ago. First touched vbscript ~ 4 years ago, PowerShell about a week later. Focused on using it to solve problems and integrate systems ever since. Might have only been a few minutes a day to start.  Today, ~75% of the work I do involves scripting, designing tools and solutions, etc. 'Work' excludes various meetings that prevent us from doing work : )  If you enjoy it, and you provide value while doing it, no one will tell you 'hey don't script that!' If they do? Find a way to get them out of IT.  Cheers!"
devops,37ze2w,mrMuffins_,2,Tue Jun 2 01:35:52 2015 UTC,"The job descriptions are really generic and the recruiters don't often know. I can give you the names of a few companies in Austin that need that skill set, if you'd like, but those re just companies I've interviewed with."
devops,37ze2w,hijinks,1 point,Mon Jun 1 01:52:12 2015 UTC,"Oooh, do tell :p"
devops,37ze2w,hijinks,1 point,Mon Jun 1 03:35:53 2015 UTC,Where are you located? I have a Devops job in SF that is probably half ops work and half design and develop in house tools.  Most companies have switched the sysadmin job title to devops.  It's sort of a shame.  You'd probably be targeting larger companies that have a devops team in place that's more then a few people. I'd also make it known that you are looking to develop more then your basic ops work
devops,37ze2w,samzklub,2,Sun May 31 18:39:58 2015 UTC,Do you have a link to the job description that you could share? Thanks.
devops,37ze2w,hijinks,3,Sun May 31 23:00:21 2015 UTC,I don't have a description up but I have a sre rule up which would be sort of like the other half  http://urthecast.theresumator.com/apply/UcgBjY  We can always talk if you are interested in learning more
devops,37ze2w,dustinmm80,2,Mon Jun 1 01:04:51 2015 UTC,"I just got hired for a DevOps position in SF. During the interview, they made a remark about how a lot of people they interviewed lacked actual knowledge of systems. A lot of the candidates knew Docker, Chef, AWS, but when asked about cache pressure or 'swappiness', their answers fell short.   I'm not sure what my point is, but even though my title has ""DevOps"" in it, I'm still a Sysadmin and I always will be. I grew up learning to debug applications and systems from the top down, so as I've progressed in my career, I've learned to rely on a mishmash of shell internal functions / variables and userland tools I know will be there."
devops,37ze2w,nanalayo,3,Mon Jun 1 01:48:37 2015 UTC,"Right.. I feel like I was doing devops before it was termed. Really I was a sys admin that can program, who is also lazy and wants to automate everything.  The only thing I really changed was moving into a more dev like sprint cycle and sitting in on a lot for product meetings"
devops,37ze2w,nanalayo,2,Mon Jun 1 01:59:08 2015 UTC,Do you program much in your new position?
devops,37ze2w,alexisnotonfire,1 point,Mon Jun 1 06:19:23 2015 UTC,"Do you want to do app development? Or you're talking stuff like config management, coding in the ops domain?"
devops,37ze2w,Hughlander,2,Sun May 31 22:48:29 2015 UTC,"coding in the ops domain mostly, and in-house apps used by ops."
devops,37ze2w,tech_tuna,2,Sun May 31 22:57:13 2015 UTC,It is often the case that one joins IT then moves up to sysadmin roles.
devops,37ze2w,kurin,1 point,Sun May 31 23:22:53 2015 UTC,"how long does it take for one to make it to sysadmin typically? I always assumed sysadmin could be a starting position, out of college, like a dev position."
devops,37ze2w,doublenns,2,Mon Jun 1 05:24:52 2015 UTC,"I would say two to three years. IT is usually a combination of customer support and tools management. The latter grows into a sysadmin position. Of course, there are IT positions that's purely customer support - avoid those."
devops,37mta6,profgumby,3,Thu May 28 19:55:03 2015 UTC,KISS.  Unless you're encountering performance issues what's wrong with what you have now?  At this scale you're adding lots of overhead for very little.  What are you looking to gain by changing your setup?  Only real suggestion I'd have is to migrate to HHVM if you're not already using it.
devops,37mta6,pooogles,3,Thu May 28 21:13:05 2015 UTC,"This. For a simple, single LEMP stack what you have is just fine. Just ensure you're using the most recent supported versions of everything (eg, PHP 5.5+, Percona/MySQL 5.6+, NginX 1.8+) and have a plan to keep it all patched and backed up.  One improvement would be to add a service user for each of the WordPress sites and locate the code trees within their home dirs, and run a PHP socket per site to minimise the chance of one of them compromising the others by all running as the same service account, eg. www-data."
devops,37mta6,tcp22,2,Thu May 28 22:10:39 2015 UTC,You don't need Docker for this task. You definitely don't want to mess with relational databases and containers.  Take a look at the Ansible example for WordPress. At least if you're using configuration management you could dump your databases and migrate quickly if required.
devops,37mta6,diamondlevel,1 point,Fri May 29 03:00:42 2015 UTC,"I'm running in the same race at the moment, currently converting my stuff to try to ease touch time and automate most of my services so I can focus on customer needs.  Depending on your goals, I'd Ansible the setup of Nginx/PHP/MariaDB and have a finishing step that syncs against some git repos that contain the site code.  Docker has it's purposes but it is quite another mess to add to your system(I had begun writing intelligent, self-optimizing Docker containers for a previous job).  If you are planning(or need) to scale out, that's a different mess regardless of what steps you are taking(especially because of MySQL). Dokku looks promising as an option if you expect to stay on a single system for a while longer and just want to simplify deployment(not much can beat running ""git push"" to update web code). My small-user conversion/setup right now is two dokku servers, a localized one for testing and a live one, been a breeze for managing the low-activity users."
devops,37mta6,TurnDownForDevOps,1 point,Fri May 29 03:22:50 2015 UTC,"(I had begun writing intelligent, self-optimizing Docker containers for a previous job).   Go on please. :)"
devops,37mta6,atm0sphere,1 point,Sun May 31 14:30:22 2015 UTC,"I can't go too deeply because of random signatures... but basically, a docker container coded to run various instructions depending on purpose, contents and misc log files. Alot of the newer features(mem_limit, cpu_share) weren't around yet when i was designing it, which resulted in having to come up with some creative ways to manipulate a few services to not hog the system, and the management scripts were still external to the containers at the time. I didn't get to finish designing the self-optimizing containers so it's still a couple servers that reoptimizes their containers and has to offload activity briefly to one another, if they'd let me finish building it the systems wouldn't still have random downtime.  Reminder to anyone in management reading this: Ask your devs/ops guys what features the hour spent toggling 5 shades of blue might cost you against the deadline.  Relevant note: file permissions are still a frigg'n pain when you first get into coding a system like that, and i still hate managing mysql servers replicated in any arrangement.  edit: I have figured out the solutions to most of the remaining issues since... But probably going to wait until I know there is no longer any paperwork applicable to that project before I finish building and releasing stuff like that for anyone else, or sell it to whatever nearby small businesses i can find that are interested. If they think they supposedly own my work, they can't own what never left my head."
devops,37mta6,TurnDownForDevOps,1 point,Mon Jun 1 06:25:23 2015 UTC,"You want to solve [problem you don't fully understand] with [buzzword].    There is no magic bullet to do what you are trying to do.    Moving a handful of wordpress sites is just a simple web config + content files + database migration with some dns changes.  There are even wordpress tools for backing up and migrating sites.    You are looking in completely the wrong place for the solution to the problem you have.   This is a basic sysadmin task, nothing to do with devops."
devops,37j0w4,joehillen,2,Wed May 27 23:59:08 2015 UTC,"I was kind of hoping when we got to the ""What is Devops"" part the author would just throw the question away. Every single post seems to require a definition section."
devops,37iies,YouHaveMy,1 point,Wed May 27 21:51:54 2015 UTC,"We maintain two cluster environments for our setups, though we've been in the process of moving all projects over to MongoDB so the mess is slowly being cleaned up.  The sql database cluster is setup with a mysql-proxy on all the endpoints, ensuring that writes always go to the master(even if roles change) and reads are from the slaves, this has eased the process of escalating slaves to masters in the event of an issue."
devops,37e3q9,gepardcv,3,Tue May 26 23:25:00 2015 UTC,"Idk if any of this helps. Just thinking out what I'd do in this case:  Given what you're saying, I would think it best to keep ActiveAdmin away from really big databases (given you need to be performant). I've seen ActiveAdmin on DBs with ~5 million rows on the biggest table and didn't get pinged on performance issues, but I can see it becoming a NIGHTMARE at scale. Even if you've satisfied both of the following, you still might run into issues with performance:  1) ActiveAdmin queries a R/O replica.  2) You use a different server/vm/ec2 instance/whatever for this project than the consumers of your app do. For example, when you run sidekiq in an ideal rails world, it's typically not on the same host server as the rails server.  Else, you wind up breaking customer facing stuff or making 'things' terribly slow when your queries are taking place. Honestly, god doesn't even know where the lines are here, but it can happen.  Other questions that might or might not help..  Is getting real-time data important or can you batch update another DB?  If you have a support staff, do you have separate ops and developers? I think this requires more than just a gem to solve if it's ever going to reasonably scale to many tens/hundreds millions of rows."
devops,37e3q9,atm0sphere,1 point,Tue May 26 23:47:17 2015 UTC,"Thanks for your input. Yeah, this thing already runs against a RO replica of the production database, so slowness in the admin UI doesn't affect the users. Right now, I'm primarily trying to make life easier for the support staff.  It's totally fine by me to move this problem outside the realm of a Ruby gem into a real product, but before I recommend committing time and energy to fixing the ActiveAdmin interface in-house (which we can definitely do), I'd like to know if an off-the-shelf solution exists. It seems like we aren't facing a unique snowflake problem here. I see several straightforward ways to make this work generically for anyone with a big database."
devops,37e3q9,snissn,2,Wed May 27 01:22:59 2015 UTC,users don't need to / don't want to paginate through all of the rows of a db with > 1 million rows  you probably should start creating simple solutions for the common admin use cases and building that out..
devops,37e3q9,HotKarl_Marx,2,Wed May 27 04:42:44 2015 UTC,what about phppgadmin or just PGAdmin3?
devops,37e3q9,remotefixonline,1 point,Wed May 27 16:32:54 2015 UTC,Have you tried navicat?
devops,37e3q9,remotefixonline,1 point,Wed May 27 15:13:41 2015 UTC,That looks a bit too-level for the users' needs. Isn't Navicat really just a graphical database shell?
devops,37e3q9,rawrphish,1 point,Wed May 27 16:12:51 2015 UTC,Basically a noob friendly shell yes...
devops,37e3q9,-neNull,1 point,Wed May 27 16:34:26 2015 UTC,"Severalnines - ClusterControl, might be able to meet some of your needs. It's definitely a powerful tool that has way more access than you would want to give Support staff, but it could meet other needs."
devops,37e3q9,soawesomejohn,1 point,Wed May 27 21:26:21 2015 UTC,"This sounds like a blast!  Use powershell 3...  you can build the gui and SQL commands all in one file.  If you have never built a GUI... well, this is a good time to start.  I don't think there is a magic bullet."
devops,37ceu1,alficles,3,Tue May 26 16:31:26 2015 UTC,"You could run your unit tests on your feature branch, and have your testing utility run the rebase and delete the branch if all tests pass.  In this model, devs would only push to feature branches, or bugfix branches.  The testing automation would handle all of the rebasing back into develop.  I just checked, and Stash doesn't support rebasing in pull requests.  This feature would be nice.  A ticket has been open for a long time (STASH-2874)."
devops,37ceu1,Ancillas,1 point,Tue May 26 19:35:17 2015 UTC,"So, this is roughly what I'm looking for. But that last step is tricky. All devs would commit to feature branches or bugfix branches and issue a pull request. In order to be pulled in, the code needs to: pass code review, pass process review (rolled in with code review, but addressing questions like ""were appropriate unit tests added"", ""did this get updated in the documentation"", ""is this change approved by management""), and have a passing build on CI (which runs unit tests, static analysis, and builds).  Stash does all of this, if I use a merge-based workflow. But that leaves us not reviewing the most likely source of error here: the merge revision. Also, we've done exactly this in mercurial and the merge revisions are brutal. I pulled in a branch the other day with 3 changesets and 50 merge revisions. There are more merge revisions than there are actual changesets. (Most of them are feature/fix branches keeping up to date with development.)  I'm willing to compromise a bit on the review. Once the review is approved, I'm happy to rebase it on to testing, as long as it wasn't drastically out of date to begin with.  Perhaps there's a middle ground, where we rebase bugfixes, but merge features?"
devops,37ceu1,marianofocaraccio,2,Wed May 27 15:22:23 2015 UTC,"Disclaimer: I'm the founder & CEO of Gitcolony  Hi! That's an interesting problem, I had the same issue. When we started with Gitcolony (based on Git) we decided to create a single patch with all the unreviewed commits (like a PR) but considering only those commits that are from that branch."
devops,37ceu1,marianofocaraccio,1 point,Tue May 26 21:23:18 2015 UTC,"Right, so you'd review the patch and approve it for application to development? That is basically the pull-request workflow I'm looking for, but how does it handle conflicts? If a patch fails to apply cleanly (the same as a rebase not working automatically), you'd have to do some updates and try again. Right?"
devops,37ceu1,dotwaffle,1 point,Wed May 27 15:27:57 2015 UTC,"Yeap, that's right :)"
devops,37ceu1,alex_sly,2,Wed May 27 17:14:43 2015 UTC,Most of my merges into master have at least 4-5 commits. Rebasing seems very... svn like.  Do you really need to bisect that often?
devops,37ceu1,nanalayo,1 point,Tue May 26 23:39:31 2015 UTC,I bisect roughly once a month. Most devs probably do it less. I expect most bug-fix branches to have 1-3 commits. I expect topic branches to have 10+ commits (possibly hundreds).
devops,379k17,syshack,3,Mon May 25 23:54:13 2015 UTC,Check out http://www.meetup.com/sddevops/
devops,379k17,lawrencellui,1 point,Tue May 26 01:44:06 2015 UTC,"Cool, thanks!"
devops,379k17,itsmemattchung,1 point,Tue May 26 03:26:09 2015 UTC,About an hour north of you there is http://www.meetup.com/Orange-County-DevOps-Meetup
devops,379k17,itsmemattchung,1 point,Thu Jun 4 05:05:20 2015 UTC,About an hour north of you there is http://www.meetup.com/Orange-County-DevOps-Meetup
devops,376yc7,sjscott80,9,Mon May 25 11:26:58 2015 UTC,1 Reason to not upgrade to Kibana 4 - All our shit breaks and we don't have time to fix it.
devops,376yc7,vmos,2,Mon May 25 13:50:33 2015 UTC,"Hear, hear. I'd be very interested if this were not the case however."
devops,376yc7,berserke,4,Mon May 25 14:36:24 2015 UTC,I have tried Kibana 4 a few times and honestly I just keep going back to 3.  It feels a lot more cumbersome to use and configure and if you type the wrong aggregation on accident it is easy to crash ES.
devops,376yc7,jmreicha,1 point,Mon May 25 13:05:33 2015 UTC,One thing I didn't like is that all graphs for everyone are there. So if you are making a new dashboard you have to scroll through tons of other people's graphs before getting to yours. That sucks.
devops,376yc7,raginbajin,3,Sat Jun 6 02:44:57 2015 UTC,"You can't migrate dashboards from Kibana 3 to 4, which is a showstopper.  Also, Kibana 4 stores the dashboards in ES instead of JSON files on the file system, which at least for me is a stupid move."
devops,376yc7,SpaceJesusOnAStick,2,Mon May 25 15:00:46 2015 UTC,Curl the dashboard collection?
devops,376yc7,pooogles,1 point,Mon May 25 18:41:01 2015 UTC,"We actually store our Kibana 3 dashboard in a GitHub repository, they are just JSON files.  One of the key principals of DevOps is to make sure everything is version controlled so it can easily be maintained.  With Kibana 4 storing the dashboards in ES itself it makes it hard to justify the migration even with the additional features it offers."
devops,376yc7,UnitVectorY,2,Sun Jul 5 14:48:30 2015 UTC,Does Kibana 4 offer reports and email alerts?
devops,376yc7,m0po,2,Mon May 25 23:50:20 2015 UTC,i thought kibana was client-side only?
devops,376yc7,raginbajin,1 point,Tue May 26 03:10:17 2015 UTC,"No, it doesn't natively offer reports or email alerts. You need to write those your own or find some bolt-ons that maybe out there."
devops,376yc7,asafyigal,2,Sat Jun 6 02:44:03 2015 UTC,"For a full disclaimer, I am the person who wrote the post and also work at the company that offer Log analytics on top of ELK.  A few comments on what's been written here:  The migration from Kibana 3 to 4 is very painful especially if you got used to a lot of the features that existed in Kibana 3, like scripted dashboards, default home etc. Having said that once the migration is done Kibana 4 is way more powerful and it is progressing in a really fast pace with some really cool features. Some of these features that came out on version 4.1 were different scale charts (log, sqr and linear), ability to do scatter plot and statistical aggregation.  There is a big advantage to saving the dashboard in ES because on the next migration of Kibana you could write a script to change the database because it also retains the version of the data structure now.  We at Logz.io have added a few more features on top of Kibana 4 like Alerts, Protection layer against crashing or damaging the Elasticsearch cluster and the ability to change the theme to the Dark theme of Kibana 3."
devops,376yc7,SpaceJesusOnAStick,1 point,Tue May 26 06:26:16 2015 UTC,"There is a big advantage to saving the dashboard in ES because on the next migration of Kibana you could write a script to change the database because it also retains the version of the data structure now.   That's exactly my point. Why change the storage backend again in the next version? Wouldn't it be easier to, you know, just copy my configuration files.  At the very least there needs to be an import option, which can generate K4 dashboards from my K3 json configs. I read somewhere, that this is coming in 4.2, so I may revisit then."
devops,376yc7,balhaut,1 point,Tue May 26 21:07:00 2015 UTC,"I'm immensely curious to hear more about how you brought over the dark theme. Was it a problematic process? Is it especially buggy, being a ""port"" from 3?  My company did a POC with Kibana 3, and after loving the ELK stack, we decided to rebuild in a more scalable setup with Kibana 4 while we had the chance. The lack of a dark theme has proven to be a bigger annoyance than we figured it would, especially for many of us engineers that are used to a dark IDE all the time.  The dark theme is in the project's roadmap, but still quite a ways out, and we were going to look into porting it over ourselves once we have some bandwidth. Being new to the ELK stack and not especially experienced with CSS/LESS, I figured it could possibly be a real rabbit hole of a task.  Any thoughts on taking your work and making a pull request?  Edits: grammer."
devops,376yc7,asafyigal,1 point,Thu Jun 4 02:59:27 2015 UTC,What we did is we copied all the colors from Kibana 3 which looked great and implemented new CSS files. We have actually enabled our users to select between the regular and the dark theme.  If you want to exact CSS file you can email me at asaf [at] logz[dot]io and I will have one of our developers send it you. Its a bunch of files that will require you to rebuild Kibana 4 but it's a relatively simple task.  -- Asaf.
devops,373jua,mattstratton,8,Sun May 24 15:26:51 2015 UTC,What are some other good places to go for discussion and news?  I agree that this sub isn't the greatest.
devops,373jua,jmreicha,3,Sun May 24 15:57:05 2015 UTC,Hacker News is ok (with a grain of salt). Usually most of the talks I find interesting happens at local meetups so that's that :(
devops,373jua,batouchu,3,Sun May 24 23:27:38 2015 UTC,Twitter and conferences.
devops,373jua,Enoxice,2,Sun May 24 17:38:15 2015 UTC,"Yeah most programming related subs seem to provide little useful information, mostly people promoting bad articles they wrote, strong opinions and circle jerks (php sucks)"
devops,373jua,r3di,2,Sun May 24 16:11:54 2015 UTC,I get all my news from a combination of Twitter (90%) and a carefully cultivated Flipboard/Feedly setup.
devops,373jua,TidesComingIn,5,Mon May 25 11:55:10 2015 UTC,I do appreciate the effort and the podcast. It was definitely valuable in getting our stack off the ground. Keep doing you man.
devops,373jua,superspeck,3,Sun May 24 23:32:38 2015 UTC,"Hey, Matt, come hang in Austin with some of your peers at a time when you can attend some of the local DevOps meetups. We have a great community here and it might reinvigorate you a little bit to hear about some of the discussions that came out of DevOps Days Austin and the events that followed it."
devops,373jua,mhurron,3,Mon May 25 02:15:30 2015 UTC,To be clear - my sabbatical is from this subreddit. Not anything else ;)
devops,373jua,acranksysadmin,4,Mon May 25 11:39:03 2015 UTC,"told by the majority of the DevOps community to not waste my time on reddit   meh, Reddit seems to be about the same as the rest of the 'devops community'. It's all about installing the right 'cool' tools and boom, you're devops. Extending that out, there are then those looking for, or stating that they have, a job 'in devops' or they are hiring for their 'devops' team.  Short of it, I don't really see a difference here."
devops,373jua,koglerjs,6,Sun May 24 15:47:59 2015 UTC,"I disagree. More and more talks at conferences are about the actual culture change. Whats different though is talks last year talked about ""WOAH ITS SO AWESOME NOW THAT WE HAD CULTURE CHANGE"" where it was just a 45 minute humble brag by a presenter on how awesome their team is to there are now talks about what it takes to  change culture and gives ideas on how to do it.   A great example is this one: https://www.youtube.com/watch?v=A38-2xxuc2o"
devops,373jua,riffic,5,Sun May 24 20:21:10 2015 UTC,"Didn't delete amrc from my phone so I got notifications and sucked me back in.   Discovered clarity is needed - I'm not giving up on the DevOps community. Just this sub (and reddit in general). To be clear this will cause a slight decline in traffic to my podcast as we get a small portion of traffic (300-500 listens per episode come from direct reddit links) but that's not what I was trying to do here.   This is a poorly moderated sub with a moderator who hasn't shared his/her changes or responsibility (or if so, hasn't made it clear that additional mods have been added). I've tried to have empathy and support for this, but felt enough was enough already.   My skin isn't thick enough for the attitudes. Maybe you see this as a weakness. I think that there are better places I can help and I'll keep doing that.   In the meantime, see you on Twitter. You can probably figure out who I am over there :)"
devops,373jua,centfox,3,Mon May 25 11:53:06 2015 UTC,"Just wanted to say that I sympathize and it's troublesome how Reddit is becoming a hostile environment to content creation.    I mean, I expect a certain degree of crappy culture with the territory, as DevOps is proving pretty buzzwordy, but I was watching when you began having trouble submitting your work and it's just incomprehensibly bad.    Good luck."
devops,373jua,tech_tuna,1 point,Wed May 27 08:10:06 2015 UTC,Awesome. ADO links are being marked as spam. Just proving my point. Sigh.
devops,371rzu,alexdotau,2,Sun May 24 01:39:25 2015 UTC,You'd update your Vagrantfile to designate puppet configurations (Link).
devops,371rzu,TidesComingIn,2,Sun May 24 11:19:25 2015 UTC,Test Kitchen with kitchen-puppet and Serverspec.
devops,36zl9r,jmreicha,2,Sat May 23 13:58:01 2015 UTC,"In my view it depends on your goals and needs, these of course depend on the type of systems you are deploying.  For example, we run a Mesos cluster for running stateless apps that we need to spin up and down to meet demand (data processing, web apps etc...), then we have the rest of our infrastructure which is either VM based (GCE) or physical (we put hardware devices in remote locations).  As you can imagine we have very different needs for all 3 types of infrastructure:   Mesos based stuff is in docker, immutable images created/updated on code changes VMs are provisioned and updated/maintained with SaltStack Hardware has a customised base image which is imaged then managed by Salt   With the mesos based stuff our main need is very quickly deployable. With VMs (and the physical devices) we usually have a lit more lead time for deployment (hours/days, not minutes)."
devops,36zl9r,deadbunny,1 point,Sat May 23 19:39:10 2015 UTC,Did you take a look at this thread yet? It might not directly apply but didn't want to duplicate effort on the response.
devops,36zl9r,mattstratton,1 point,Sat May 23 16:09:26 2015 UTC,"Nice, there are some good answers in there.  Thanks!"
devops,36yef9,bradtech,6,Sat May 23 04:04:29 2015 UTC,"We've had this problem on a few workstations.  Try uninstalling whatever you have now and downloading/installing the ChefDK .  If you still have problems, PM me"
devops,36yef9,sameerdoshi,3,Sat May 23 14:36:05 2015 UTC,Yep. ChefDK is for the workstation.  I had a lot of trouble bootstrapping windows nodes on a locally run chef server (centos). It was quite quirky. If thats what you're having problems with let me know and I'll write down the fixes (hint - ruby ssl on windows is a pain)
devops,36yef9,headphonemasterpiece,3,Sun May 24 12:58:01 2015 UTC,Thanks to all that helped.  Ended up getting the pathing correct for the chef DK and successfully bootstrapped a windows server using knife windows.
devops,36yef9,mattstratton,6,Sun May 24 23:32:15 2015 UTC,"I'm on mobile, so apologize for the terse reply. The best way to set up a workstation (on Linux, OS X, or Windows) is to use the ChefDK."
devops,36yef9,mattstratton,5,Sat May 23 04:43:23 2015 UTC,"If you ARE using chef DK, instead of gem install knife-cloud, do chef gem install knife-vcloud."
devops,36yef9,aytch,2,Sat May 23 04:44:29 2015 UTC,"Add the C:\Opscode\embedded\bin file to your environment variable path. It will still work, but badly. You can then call knife commands from Powershell natively (the ChefDK guide talks about this).  You're still going to have hell with gems and Ruby on Windows, but is possible."
devops,36yef9,mattstratton,3,Sat May 23 05:26:27 2015 UTC,"Again, using ChefDK takes care of all of this. It's kind of why it was created."
devops,36yef9,9to5traveler,1 point,Sat May 23 15:42:19 2015 UTC,I've worked with Puppet and Chef on Windows and Chef was always a disaster. I eventually got it working but the specifics are hazy as this was awhile ago. Basically Ruby does not play nice with Powershell but if you set up your Path Env variable correctly it can work.  If you have the option to switch to Puppet I would recommend it as they seem to put a lot of effort into making it Windows friendly.
devops,36yef9,mattstratton,4,Sat May 23 06:42:38 2015 UTC,As is Chef. This comment is anecdotal (well the implication that Chef is not putting effort into Windows). ChefDK with the proper one-line shell init command after fixes all the path problems.
devops,36yef9,9to5traveler,-2,Sat May 23 15:41:50 2015 UTC,I'm not implying that Chef doesn't put effort into Windows. And my comment is not anecdotal it is based on first hand experience using both tools in real windows environments.  It sounds like Chef has come a long way since I last used it on Windows so kudos if that's the case. Are you a Chef Solutions Architect?
devops,36yef9,mattstratton,3,Sun May 24 04:55:04 2015 UTC,"I meant your comment on the effort Chef puts into Windows is anecdotal, as my experience with both tools over the last four years was the opposite (and therefore ALSO anecdotal).   I think you don't know what ""anecdotal"" means, because ""my first hand experience"" is precisely ""anecdotal"" :)  Yes, I'm a Chef SA. But I joined Chef because I love solving problems with chef, not the opposite."
devops,36yef9,9to5traveler,-2,Sun May 24 14:46:23 2015 UTC,"You're right about the meaning of anecdotal, although it's usage certainly implies less reliability than other word choices.  I actually never commented on Chefs efforts with windows. I was just sharing my experiences and mentioned that Puppet seems to put a lot of effort into Windows compatibility. Notice I never said Chef doesn't put effort into Windows and I specifically mentioned that this was awhile ago.  I really don't care either way as I don't have anything to gain and was just sharing something I thought the OP might find helpful.  Overall your tone comes across as being a bit snarky and condescending which is pretty unprofessional for someone representing Chef.   Ironically I actually prefer Chef when I'm working with Linux only environments. I'm hoping you're not representative of the type of people I'll be interacting with next time I need some Chef help though."
devops,36yef9,mattstratton,3,Sun May 24 15:05:45 2015 UTC,"Dude, you specifically suggested switching to Puppet would solve the problem :)  I don't represent chef's opinions as a company. And frankly you're one of the first people ever to call me out as unhelpful or an asshole for trying to help folks online. I spend hours of my own free time helping folks with chef and non-chef issues because I care about their success. I enjoy a (undeserved in my opinion) reputation as someone who will always help others regardless of whether or not they are ""my customer"".  Yes, I'm sometimes snarky, but I've also been doing this a long time and invest my time, energy, and effort in this community beyond my own paycheck."
devops,36yef9,9to5traveler,0,Sun May 24 15:23:53 2015 UTC,"""Dude, you specifically suggested switching to Puppet would solve the problem :)"" Yes I did. In the past switching to Puppet did solve the problem for me. What's your point?  I didn't call you unhelpful, or an asshole. I said the snarkiness was unprofessional."
devops,36yef9,Yellow_Curry,4,Sun May 24 15:39:33 2015 UTC,"Wow. What's dick move. Why don't you just threaten to get him fired, oh wait you already did.  It's assholes like you that is the reason no one wants to work in operations anymore."
devops,36yef9,9to5traveler,-1,Sun May 24 15:40:54 2015 UTC,"Whoa dude, no one is getting fired. We're having a debate and I called him out on the tone. How the fuck does that equate to threatening to get someone fired?  And seriously, what do you mean ""No one wants to work in operations anymore""? It seems to me like more and more developers I know are interested in DevOps and operations in general and I think this is a wonderful thing.  I don't mean to be offensive in any way but based on the wording in your comment I'm guessing that English is not your first language. I think perhaps you're totally misunderstanding the meaning of what I'm saying."
devops,36yef9,acranksysadmin,8,Sun May 24 15:55:32 2015 UTC,"What you read as 'snark', I read as him defending himself and what he does for the community. Your first hand experience, was in fact, anecdotal.   What I find frustrating on the interaction here is that you went and recommended a solution that was contra to what the OP was asking help about, including the fact that your information or experience was out of date (ie your experience was anecdotal).   Some unasked for, but still going to give, career advice: If you're truly a professional consultant, it is imperative that you remain current on all technologies that solve a problem. It is incredibly apparent that you are not keeping up. Chef, Puppet, Salt, Ansible - They are all in constant development. It is your job as a consultant to keep up on the version released yesterday instead of 2 years ago. Otherwise your knowledge becomes stale and your first hand experiences continue to be anecdotal."
devops,36yef9,9to5traveler,-1,Sun May 24 20:16:03 2015 UTC,"Well this is the internet and it's entirely possible that I'm misreading the tone. He does specifically say he's sometimes snarky though so....  As I mentioned previously, I do keep up on the latest tech and Chef is my preferred solution for Linux only environments. I haven't worked on a Windows environment for a while, so I have not been keeping up on which CM provider is ahead in that space. It's not possible to keep up on every singe nuance of every technology, sometimes you have to research at the time you make a proposal for a client. If I make a windows proposal you can bet I'd be looking into Chefs current Windows capabilities pretty thoroughly even though I've been burned in the past.  In this case, I was sharing a past experience and making a suggestion based on that. I'm not willing to spend hours researching things for an internet stranger as much as I enjoy helping people, so my suggestion was intended to provide a possible avenue of investigation for an alternative. In this case anecdote aka first hand experience was the best I can offer with the caveat of course that it's out of date (Which I made clear from the beginning).  I find it interesting that there is so much push back at the idea of suggesting that Chef may not be the best platform for Windows (I'm not even saying it isn't, just suggesting that Puppet may be an alternative). Do you also work for Chef?"
devops,36yef9,mattstratton,2,Mon May 25 02:57:51 2015 UTC,"S/he wasn't pushing back on you for suggesting Chef wasn't a platform for Windows. S/he was pushing back on YOUR tone. Spend time outside this sub and you might be surprised that some folks might actually like me and/or think I know what I'm doing. I could be wrong however.   Just let it drop, dude. You're out of your element. Which is totally okay to be. And stop making implications about people working at Chef. If you knew anything about the community you'd know that you don't have to be a Chef employee to be supportive of people using the software."
devops,36ukcd,hellolin,3,Fri May 22 06:24:47 2015 UTC,"You might want to re-format your wall of text.  It sounds like you're on a good path.  On top of the general list of knowledge, a solid working skill such as ""Installed and maintained git+Gerrit/Jenkins/Jira, and put them behind Nginx/Apache reverse proxy"" would make you more immediately useful."
devops,36ukcd,nanalayo,7,Fri May 22 06:39:10 2015 UTC,"I agree on the proof reading of your wall of text.  Polish your communication skills, both verbal and written, so that you can convey complex ideas to others.  It will be easier for you to become a leader quicker and will take you extremely far.  If you're not a developer, having the Development-minded thought process and knowing how things, like JVMs, containers, etc work and how the code uses them is valuable.  Also, I actually don't believe in a team called ""DevOps"".  If your title is ""DevOps Engineer"", I think you're doing it wrong.  DevOps is a culture and a way of doing things between the people in/doing the Ops and Dev, not something new that sits between them.  My two cents.  :)"
devops,36ukcd,hergio,1 point,Fri May 22 13:16:57 2015 UTC,"It's not someone who ""sits between them"" - DevOps is just the new title for Ops people who have been following the industry.  If your title is still ""Ops"", you're doing it wrong ;)"
devops,36ukcd,erulabs,3,Fri May 22 17:54:37 2015 UTC,"More correctly, if your company still has ops titles, they're probably doing it wrong. But then again, some companies truly do have a need for folks that will continue to sit and work on old school intranet style infrastructures with F5 load balances, Cisco ASAs, firewall appliances, etc. and require change tickets for every last thing imaginable. It's just that most successful internal IT folks have transitioned IT over to becoming accountable and cost-effective by turning IT into an internal service and re-orging such that nobody cares if you're a network, storage, VMware, Oracle, or whatever guy - make it work, make it fast, make it reliable is all that really matters."
devops,36ukcd,djk29a_,1 point,Sat May 23 15:49:28 2015 UTC,"Thanks for the advice guys, however coming from an OPS background I was more inclined to hear some comments about people that are from the ops team? Since I don't have a developer background and I think devops hiring don't just hire developer either"
devops,36ukcd,TidesComingIn,2,Sat May 23 05:34:07 2015 UTC,"I lean more ops side than dev, but most of what I'd like from a new hire are design knowledge more than specific skills in chef/puppet/etc. The tools are useless if you don't know why we use them, and most of the high-level theory behind each is the same.  Addressing your planned list: I'd recommend Ansible or Salt if you're just learning Python. They mesh pretty well with Linux environments, so set up a workstation in your distro of choice (RHEL for myself) and use that for all your development. The more often you use bash for your quick 5-minute scripts, the better off you'll be. Docker would be a good one to pick up especially if you're leaning more ops-side work. In a perfect world your configuration management would configure your containers so you never have to touch your servers once they're started up."
devops,36rscl,mattstratton,10,Thu May 21 16:40:14 2015 UTC,"I'd like a topic on password management, and how things like DB configurations are used at different companies. For example, we all know it is bad to store passwords in source code, this includes source code in a software defined infrastructure repository. To fully automate my system, I need to have a process that dynamically builds the DB/AWS/API/WhatHaveYou passwords during the installation, or execution of the application. What tools are being used for this, what password vaults are being used as well? Are people doing these password lookups on the fly, or is it part of the build/packaging process?"
devops,36rscl,mudfly,3,Thu May 21 17:18:52 2015 UTC,"Ooh. I like this one. As I say often, ""secrets are hard"". That's probably a good title for the episode."
devops,36rscl,sidewinder12s,2,Thu May 21 17:22:51 2015 UTC,Maybe see if you can get someone from HashiCorp or one of the other companies that is trying to address this.
devops,36rscl,dustinmm80,1 point,Thu May 21 18:13:57 2015 UTC,That's a great idea!
devops,36rscl,normalfaults,3,Thu May 21 18:16:35 2015 UTC,I work for Conjur and talk to people about secret workflows every day. If you're looking for a panelist on this topic feel free to contact me.
devops,36rscl,coderanger,2,Thu May 21 22:31:31 2015 UTC,"There seem to be a lot of open source tools coming out to tackle these issues. Keywhiz, hashicorp vault, chef vault etc... Any others?"
devops,36rscl,LooksForCats,2,Fri May 22 11:19:39 2015 UTC,"Sneaker, Red October, Barbican, AWS KMS (not FOSS but still), Crypt, etc."
devops,36rscl,hellolin,5,Sun May 24 21:14:16 2015 UTC,Devops for executives and/or new comers might be interesting topics.
devops,36rscl,jon_brouse,1 point,Fri May 22 02:19:13 2015 UTC,Devops for students or new grads that wants to break into the sense but without much experience.
devops,36rscl,jon_brouse,5,Sun May 24 00:44:51 2015 UTC,"First, thank you. You girls and guys are fucking awesome for doing this show!   I'd like to hear something on mircoservices. We are in the process of adopting a mircoservice infrastructure/environment. Versioning has been a hot topic. I brought it up to some folks at GlueCon this week. QA needs to qualify what services work together in addition to our hardware devices in the field. I got a lot of ""you should just have a lot of automated tests"" but is that enough? In order to adopt microservices and quick/continuous deployments should we ignore this process and just have a quick way to roll back the (hopefully) small changes?  Microservices are sexy. When you mix in containerization you have the making of a pretty steaming scene but I think there is nothing micro about the infrastructure and planning that needs to go into the adoption of said tech. There is a lot to talk about on this subject from API gateways to services discovery to monitoring and logging (with containers) to versioning. Release management and cross team development. We are trying out the idea of ""shepards"" not owners. They will in a sense be the gate keepers but any team can update the services' code. Will that work? Local dev environment, should services not being actively developed against use mocks instead of the real service?  You have to be able to spin up new services quickly. There is a need to create a basic template, ready for this: microservice as code (might be a stretch). Git repos, dockerfiles, jerkins jobs, cloud formation/terraform templates, db creation and seeding.  So as you can see from my mindless rant above there is quite a bit of content surrounding microservices. I'm certain this isn't even an all inclusive list.   I look forward to standing on the shoulder's of giants ;)  @jonbrouse"
devops,36rscl,deadbunny,2,Sat May 23 05:55:02 2015 UTC,"The Ship Show did a pretty great episode about this, and since my entire world seems to be me ripping off J. Paul Reed, I think that means we should do one too!"
devops,36rscl,deadbunny,2,Sat May 23 16:04:34 2015 UTC,Nice a new podcast. Thanks for the share Matt.
devops,36rscl,LooksForCats,3,Sat May 23 18:28:44 2015 UTC,"Maybe not a new topic but of the IaC episode I'd love to hear about testing, I think this is one of the toughest points with IaC at the moment, developers have this nailed (for the most part) and I'd love to hear how people are testing their Config Management code and maybe beyond that, how they are testing it once it's deployed in a test environment (server spec etc...).  For example to get anything like testing done with Salt we have Jenkins provision Docker containers with the states, while it works for the most part it feels extremely cumbersome and we have to put a fair number of conditionals in to work around testing limitations (things like don't run the DNS update stuff because that would be extremely bad)."
devops,36rscl,sameerdoshi,1 point,Thu May 21 19:02:02 2015 UTC,"If it's helpful, this gist is where I've been storing notes on what we would cover in that IaC episode along with comments from some folks who might participate."
devops,36rscl,sameerdoshi,1 point,Thu May 21 19:14:44 2015 UTC,"Ah, awesome I see you already have this covered. I'll get back to my beer!"
devops,36rscl,nasaperson,3,Thu May 21 19:17:14 2015 UTC,Lean process concepts and analyzing workflows.
devops,36rscl,LooksForCats,2,Fri May 22 02:25:44 2015 UTC,I'd like to see an episode on source code compilation.
devops,36rscl,LooksForCats,3,Thu May 21 18:07:42 2015 UTC,Details? What would that cover?
devops,36rscl,LooksForCats,1 point,Thu May 21 18:16:46 2015 UTC,"There's probably too much to cover in a single episode: Tools (ex: Jenkins, team city), frameworks for writing scripts  (maven, make, psake, fake), techniques (distributed farms, sticting together work from multiple sources, library management), best practices (excessive IO, multithreading, labeling, unit testing) etc. Build is an area of devops that is rarely talked about and probably has loads of upside potential."
devops,36rscl,mullingitover,2,Thu May 21 18:24:56 2015 UTC,"We did an episode early on related to CI tools. ADO 4 CI Told You So  I'd enjoy talking about some of the scripting, techniques and best practices :)   Edit: Apparently this is my cakeday too. Hooray!"
devops,36shas,vitiate,2,Thu May 21 19:32:58 2015 UTC,"we tried something similar with citrix xenapp a couple years ago. we were using App-V to virtualize the application installs so that they weren't mutating state on the actual host. it was a horrendous failure for multiple reasons, not the least of which was a talent gap and the physical impossibility of implementing that on top of our deployed topology. network latency was too damn high, caches were slow to warm on boot, and we didn't make smart use of our FC storage.   add to that the complexity of sequencing an app-v deployment, which generates unique versions of hell for each application you want to deploy. the lead time on packaging and deploying apps ballooned from hours to weeks.  app-specific packaging issues arose for every piece of software. the solution is now a rusting hulk, a testament to hubris, apathy, and disappointment.  now, that being said, it's been a few years, and i'd probably take a second look at the implementation. the ideas were great. it was a docker-like layer for user apps before docker existed. tooling and talent was neither widely available nor accessible. things could have changed. the licensing was such that if you have sccm and enterprise clients, you probably also have mdop/app-v."
devops,36shas,0x7262,1 point,Fri May 22 01:11:14 2015 UTC,Are you using AWS? Packer is available for Windows.  I've been doing some proofs of concepts with using AWS Powershell commands and Powershell DSC.  My goal is to use this to rebuild servers after every patch Tuesday.
devops,36shas,BannerDay,1 point,Sat May 23 01:56:38 2015 UTC,"How are you doing for budget, hardware, and knowledge?  We've had good luck with Citrix Provisioning Server for the OS layer - we keep our write cache in RAM, haven't moved to RAM + disk overflow. Pain points revolve around explaining the technology to other vendors, and Citrix providing one of the worst PowerShell modules I've ever seen.    App Volumes might help separate the apps from the OS, and I'm assuming it will be a bit less finicky than App-V and ThinApp. I tend to push our desktop team fairly hard for an App-V or ThinApp solution, but, as /u/0x7262 mentioned, virtual app packaging can be... a bit of a science.  My favorite was some sort of purchasing software that looked like it worked great... but line items would occasionally not be visible from the ThinApp.  Good luck!  Will keep an eye on this, we're looking for something similar : )"
devops,36r5kz,sameerdoshi,1 point,Thu May 21 13:45:59 2015 UTC,Tldr link posts allowed but will flagged as spam
devops,36r5kz,laurier57,2,Thu May 21 13:51:34 2015 UTC,What's the video?
devops,36r5kz,taloszerg,3,Thu May 21 14:23:29 2015 UTC,the post  It how we automate windows with chef and azure
devops,36r5kz,shlazzer,3,Thu May 21 14:41:51 2015 UTC,"Went to check this out, and it shows up as not found on the channel9 site for me. I'm interested in seeing this!"
devops,36r5kz,mattstratton,3,Fri May 22 14:48:11 2015 UTC,.... i am so sorry.
devops,36r5kz,laurier57,3,Thu May 21 14:43:25 2015 UTC,Awesome empathy there.
devops,36r5kz,mattstratton,1 point,Thu May 21 14:59:26 2015 UTC,Don't worry it's just a spam filter
devops,36r5kz,mattstratton,2,Thu May 21 14:55:09 2015 UTC,"I think it might have been flagged because this is heavily on the vendor-ed side of things, and the non-technical business unit on the left of the video certainly does not help matters. Anyway, nice talk, seems like you have some challenges in the whole ""killing your pets and replacing them with cattle"" game."
devops,36r0wx,hacksnake,2,Thu May 21 13:04:51 2015 UTC,"You can use kerberos, I think.  Barring that, a guarded service account and something like https://square.github.io/keywhiz/ could help."
devops,36r0wx,randomfrequency,2,Thu May 21 15:59:05 2015 UTC,"You can use a vault and store the username / password in it, pull it out siding a script use it and dispose of it. This way the password it as secure as access to the server. There is auditing. There is accountability. The credentials are easily changed.  https://vaultproject.io/"
devops,36o22w,kenwmitchell,4,Wed May 20 20:03:51 2015 UTC,here is a link to my Kickstart file for the gold image i use https://bitbucket.org/mudfly/kickstart/
devops,36o22w,mudfly,5,Thu May 21 04:11:27 2015 UTC,"""selinux --disabled"" makes me sad."
devops,36o22w,ClutchSlave,8,Thu May 21 12:27:05 2015 UTC,selinux makes me sad
devops,36o22w,BigOldNerd,4,Thu May 21 15:31:40 2015 UTC,"The learning curve is steep, but worth it. I wish it was better documented."
devops,36o22w,ClutchSlave,1 point,Thu May 21 17:57:28 2015 UTC,So many tutorials begin with disable selinux. Just got done installing xenoss and an early step was disable selinux.
devops,36o22w,BigOldNerd,1 point,Thu May 21 21:30:47 2015 UTC,"I never said this kickstart is useful for every environment, just responding to OP that this is my starting point before handing the OS off to configuration management. SELinux can easily be added later using CM."
devops,36o22w,mudfly,2,Thu May 21 16:32:41 2015 UTC,"Sure, but I would hazard a guess that you don't keep SELinux on."
devops,36o22w,ClutchSlave,1 point,Thu May 21 17:58:15 2015 UTC,There are many reasons one may choose to 'un-enable' SELinux.  I say 'un-enable' instead of disable because it should really go into permissive mode so that the audits are still available.  I can't think of many reasons to disable it completely.
devops,36o22w,techie_freelancer,1 point,Mon May 25 03:59:36 2015 UTC,"There's only two reasons to disable SELinux: 1) can't figure out to run something when it's enabled, eg. not knowing how to configure SELinux or create policies, 2) can't get support when it's enabled."
devops,36o22w,ClutchSlave,1 point,Mon May 25 07:03:39 2015 UTC,Often security is not the priority and SELinux is very likely to cause long delays in agile workflow on a regular basis.  Risk vs resource needs to be taken into consideration when considering another layer of complexity.
devops,36o22w,techie_freelancer,2,Mon May 25 09:08:44 2015 UTC,Why do you mess around with udev network rules? What is the behavior of linking the file to /dev/null?
devops,36o22w,rishid,1 point,Sun May 31 03:56:02 2015 UTC,"Ah good question, udev files are generated on the fly when the system boots. in virtual environments you are given a unique mac address when a system is spun up or cloned from template. linking to dev null prevents this file from being created, saving you time from having to clear the values if your mac address changes. This is also easy to reverse using configuration management when a system is deployed."
devops,36o22w,mudfly,7,Sun May 31 14:09:47 2015 UTC,"The correct answer is none, provisioning should take care of getting it hooked into config management"
devops,36o22w,ILikeVoltron,3,Thu May 21 02:03:12 2015 UTC,Although some on the immutable/container side would argue that having the configuration run for a given server type happen during image creation can avoid both the need for a master-based configuration management system and the long spin-up times associated with a config run.
devops,36o22w,laurier57,2,Thu May 21 15:35:40 2015 UTC,"Absolutely, however most people are not ready to 'containerize' their whole infra. Also, with that in mind you still will want to deploy your container hosts in a repeatable way. Think Clobber / Foreman / etc."
devops,36o22w,ILikeVoltron,1 point,Thu May 21 16:43:39 2015 UTC,"What provisioning? Am I missing a big part of the picture? Somewhere, at some time, someone has to spin up a server, log in to it, and setup a user at the very minimum right?"
devops,36o22w,ILikeVoltron,4,Thu May 21 02:17:05 2015 UTC,"In AWS provisioning would be the User Data section, if it's from Cloud-formations it's from the template that generated it and uses User Data  If the provision system is some guy right clicking on a template and saying ""New VM"" it would be the guest customization + ""Run Once"" or similar, the idea is if you have to log into it to do something you're not doing it right."
devops,36o22w,ILikeVoltron,3,Thu May 21 02:25:14 2015 UTC,"""Run Once"" meaning a script or bootstrap of some sorts?"
devops,36o22w,laurier57,3,Thu May 21 09:57:17 2015 UTC,"Yes, something you drop into the server creation that connects him to your config management.  Perhaps something like the following: http://docs.puppetlabs.com/pe/latest/install_agents.html#scenario-1-the-osarchitecture-of-the-puppet-master-and-the-agent-node-are-the-same  curl -k https://<master hostname>:8140/packages/current/install.bash | sudo bash"
devops,36o22w,Ancillas,2,Thu May 21 16:47:41 2015 UTC,"Yes, via a cloud-init script passed via the userdata parameter: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html"
devops,36o22w,sameerdoshi,1 point,Thu May 21 15:32:47 2015 UTC,"In your own datacenter, sure."
devops,36o22w,DocPenguin01,3,Thu May 21 07:47:02 2015 UTC,Just as much as you need to get the right balance of speed and agility (depending on os and app this could be virtually nothing to almost a full stack)
devops,36o22w,DocPenguin01,3,Thu May 21 02:22:51 2015 UTC,"Either none, or a lot.  For most of our stuff, we bootstrap for Chef at launch, and then let Chef provision everything.  For autoscaling though, provisioning everything at launch can take longer than we like. I've recently been working on integrating Packer + Chef with our CI process and generating 90% baked images during the build process. When a new instance is launched, Chef still runs, but only to apply the environment specific configuration."
devops,36o22w,madsohm,1 point,Thu May 21 04:04:23 2015 UTC,What do you use to bootstrap for Chef? Scripts? Or are you using Packer for that?
devops,36o22w,atm0sphere,2,Thu May 21 09:55:32 2015 UTC,"Packer handles bootstrapping during the build process.   At launch-time, whether via base image or baked image, I use a combination of user data and cfn-init to bootstrap."
devops,36o22w,madsohm,2,Thu May 21 23:16:52 2015 UTC,"We use Docker. Each of our containers know how to connect to a ETCD cluster, from which they grab their environment variables.  So I guess the answer is none."
devops,36o22w,hacksnake,2,Wed May 20 20:30:13 2015 UTC,can you elaborate more on what you did to set up etcd?
devops,36o22w,madsohm,2,Thu May 21 14:27:04 2015 UTC,"Sure. If you look at the above link to our Rubies, you'll see that we have go-env as our ENTRYPOINT. go-env is another application that we made (https://github.com/lokalebasen/go-env) which populate the environment from etcd. This needs an ETCD_URL and ETCD_ENV already in the environment, so we start up our Docker containers with these, e.g.:  docker run -e ETCD_URL=http://192.168.3.13:4001 ETCD_ENV=lokalebasen lokalebasen:latest   Now the container has the environment, because go-env was loaded as the entry-point.  The etcd-cluster itself is set up and populated with Chef.  For the curious, we run vulcand as a reverse proxy. vulcand sets its upstreams in etcd. For this we have created another Go app (https://github.com/lokalebasen/sidekick/) which are started together with the original app, and all it does is poke at it every minute and check if it's still responding. If it stops responding, it will be pulled out of the vulcand upstreams, and are no longer serving requests."
devops,36o22w,wikkib,1 point,Thu May 21 15:33:38 2015 UTC,How do you control the Docker base images?  I've been looking at using Docker for some things but need control over the base image due to business requirements... so I can't just pull from public registry & call it a day.
devops,36o22w,Ancillas,2,Thu May 21 13:37:18 2015 UTC,"We use DockerHub for some (e.g. https://registry.hub.docker.com/u/lokalebasen/rubies/) but also have a private registry running, which is just in itself a Docker container. We use the old docker/registry, but docker/distribution (https://github.com/docker/distribution)  should be better."
devops,36o22w,linuxydave,2,Thu May 21 13:57:24 2015 UTC,We build our base docker image from a Kickstart so we have control over as much as we can. So I have a pretty high confidence in what is on the image.
devops,36pcb5,ShinyCyril,3,Thu May 21 01:36:01 2015 UTC,"There's a lot of questions here that show that perhaps you're asking the wrong questions.  Why do you need to worry about sudo access on the boxes?  Proper devops should mean that random people don't need to log in to boxes ever, and a sys admin should only need to do so rarely.  Also, keep in my mind the right way is a way that works without exposing things to risk (i.e., passwords stored in your version control).  I would say to answer your questions specifically:  sudo - enable passwordless sudo for users who are in a specific group(s) that gives them access to only what they need without a password.  Database Passwords - depending on how you do things, these could be autogenerated, or stored in a file on S3 for example if in AWS, and pulled down by your config management.  You can then provide scripts that do the connecting for your users (maybe that require sudo to run that specific script so that it can load the password from a file the user can't otherwise access, for example).  Or in the case of chef, use encrypted databags to store such things.  Puppet, salt, and ansible all have their ways to encrypt passwords such that they can be safely stored with your code in version control (and of course, since it's distributed by your CM, easily changed).  Again, much of this depends on your environment (bare metal vs aws vs rackspace vs digital ocean vs potatoes vs whatever), your config management (chef/puppet/ansible/saltstack) and other tools at your disposal.  Each tool has different ways to gracefully handle this stuff."
devops,36pcb5,Alsmack,1 point,Thu May 21 03:33:06 2015 UTC,"Thank you for your comprehensive answer. I'm an EE, and while I've mucked about with webdev and servers plenty, this is the first project which I've had to ensure scales well.  Configuration management is something that I need to look into - would you recommend one over the other?  Database access is complicated more by the passwords being sent in plaintext - so I've secured this with an SSH tunnel."
devops,36pcb5,Alsmack,1 point,Thu May 21 15:32:31 2015 UTC,"I'd say the easiest to learn is Ansible, as it has the fewest dependencies and works in a ""when I want to change things"" way.  There's a really good ansible cast at sysadmincasts.com.  Here is the first part of it:  https://sysadmincasts.com/episodes/43-19-minutes-with-ansible-part-1-4  (Of note, this guy has a few piping things with vagrant, yours will be different obviously, and your workstation will be your laptop, not some random vagrant node, but this is really good for passing along a learning environment to people)  Anyways, it really doesn't matter which you use, so long as you use a tool that does what you need it to do.  Without more knowledge of your application and infrastructure, I can't give much more advice than I have."
devops,36m3i4,sjscott80,3,Wed May 20 11:45:24 2015 UTC,"Good article, but I would suggest instead of logstash-forwarder, users consider log-courier, which I've found to be a bit more robust and user-friendly.  Also, on the subject of breaking configs into multiple files, they say that files are loaded alphabetically...while true, it's probably best to use numerical prefixes (like rc.d symlinks) so you're not bending your config file namespace to fit."
devops,36m3i4,laurier57,1 point,Wed May 20 19:32:28 2015 UTC,"Agreed.  Log-courier also helps against pitfall #2 (multiline with more than one worker) by processing on the client, which also helps take load off the server."
devops,36mxwc,punkrokk,3,Wed May 20 15:45:47 2015 UTC,"We have recently added unattended-upgrades to our Debian/Ubuntu boxes via a Puppet module, excluding anything that is going to result in a service restart that has the probability to break an overall solution (eg, php5-fpm and mysql) packages, and we have an equivalent for the yum/RedHat family. Working very well."
devops,36mxwc,tcp22,2,Wed May 20 22:19:33 2015 UTC,"Servers should be immutable. Spin up a new AMI, patch it, and replace the old servers."
devops,36mxwc,tehwankingwalruses,2,Wed May 20 16:54:35 2015 UTC,agreed - but what about for on premise Virtual appliances?
devops,36mxwc,tehwankingwalruses,1 point,Wed May 20 17:17:15 2015 UTC,"That one would probably be a bit trickier. I don't have a lot of experience with those other than something like VMware appliances. In those cases, we didn't have root or sudo to patch with. So I would try to setup some way to backup/export the config, deploy the newest release, then restore the config in an automated fashion. A lot of edge cases and snowflakes though."
devops,36mxwc,tcp22,1 point,Wed May 20 18:22:02 2015 UTC,"The other possibility you might look into is some sort of Orchestration via SaltStack, or mcollective or similar."
devops,36mxwc,krypticus,1 point,Wed May 20 22:20:07 2015 UTC,We use salt states today. After some more research we may go ahead and use the ubuntu unattended-upgrades package for security updates. (https://help.ubuntu.com/community/AutomaticSecurityUpdates)  Thanks for all the feedback guys!
devops,36mxwc,mattstratton,1 point,Thu May 21 14:58:24 2015 UTC,"I would look into chef server (hosted or not) or setting up a Puppet master that deploys and manages it. Any of these configuration management solutions are great for making hosts consistent. Most have command line tools for running arbitrary commands, and are becoming more advanced at running a series of migration tasks."
devops,36mcep,ashimmy,1 point,Wed May 20 13:06:08 2015 UTC,a handful of questions where you can 'pick more than one' actually only allow one choice lol
devops,36mcep,shlazzer,1 point,Wed May 20 13:58:16 2015 UTC,"thanks for the feedback, do you know by chance which ones and will fix now"
devops,36mcep,effortlessEvil,1 point,Wed May 20 17:15:23 2015 UTC,I noticed this issue on question 16. (which dbs do you use?)
devops,36mcep,shlazzer,1 point,Wed May 20 17:36:58 2015 UTC,thanks guys on it now!
devops,36mcep,hellolin,1 point,Wed May 20 20:31:48 2015 UTC,the only one i specifically remember what which stateful services do you plan on putting in containers
devops,36im8j,shtuffit,22,Tue May 19 17:40:27 2015 UTC,Uh oh. Hopefully you don't have an even more worrying answer.
devops,36im8j,voilsdet,15,Tue May 19 19:27:42 2015 UTC,"no, we do keep a daily backup, plus multiple replicas are running and we're keeping the binlogs. We can restore to any point in time fairly easily."
devops,36im8j,bwdezend,13,Tue May 19 20:20:43 2015 UTC,When did you last test a restore? ;)
devops,36im8j,sfrazer,25,Tue May 19 20:55:36 2015 UTC,actually our qa environment is reinit'd weekly using a similar process
devops,36im8j,bwdezend,20,Tue May 19 20:59:36 2015 UTC,For all you new sysadmins out there: Notice that this man is posting on reddit instead of running around screaming.  Why?  Because he tests his backups automatically and regularly :-)
devops,36im8j,dustin_allan,13,Wed May 20 04:43:52 2015 UTC,That's a lot more than most people can say. Congrats!
devops,36im8j,tobascodagama,8,Tue May 19 21:03:04 2015 UTC,Nice.  Like I always say - backups aren't all that important. It's the restores that you need to worry about.
devops,36im8j,AllThatJellyNoToast,3,Wed May 20 00:23:22 2015 UTC,I'm impressed!
devops,36im8j,voilsdet,3,Wed May 20 03:10:55 2015 UTC,atta boy (or girl)
devops,36im8j,manderso7,3,Wed May 20 05:37:06 2015 UTC,"Ahh, that's good. :D"
devops,36im8j,laurier57,27,Tue May 19 20:42:16 2015 UTC,Break out the booze. It's going to be a long night.
devops,36im8j,Draco1200,12,Tue May 19 19:11:57 2015 UTC,"""Snapshots & WAL logs should be good enough!"" - a former coworker"
devops,36im8j,laurier57,1 point,Tue May 19 19:52:14 2015 UTC,"Why not?  They should be....  On the other hand:  Define snapshots,  and how you're copying them both offsite and verifying the integrity of the snaps...."
devops,36im8j,tcp22,1 point,Wed May 20 04:12:56 2015 UTC,"In this case, the (ZFS) snapshots were remaining on the host. In other cases, EBS snapshots were trusted (probably slightly safer)."
devops,36im8j,TweetsInCommentsBot,8,Wed May 20 13:24:57 2015 UTC,https://twitter.com/sadserver/status/594879404171350018
devops,36im8j,erst77,3,Wed May 20 00:41:01 2015 UTC,"@sadserver   2015-05-03 15:01 UTC  Backups are like zombies, everybody loves to talk and fantasize about them despite the fact that they don't fucking exist.     This message was created by a bot  [Contact creator][Source code]"
devops,36im8j,linuxydave,3,Wed May 20 00:41:07 2015 UTC,http://i.imgur.com/rwNqqt7.gif
devops,36im8j,NamesAreHardasHell,3,Wed May 20 02:30:08 2015 UTC,"Oh god.  The cold, cold fear that just shot through me.  I may have ops PTSD."
devops,36im8j,piconet-2,2,Wed May 20 05:43:16 2015 UTC,"I hope you do, haha."
devops,36im8j,finiteresource,2,Tue May 19 19:49:24 2015 UTC,Omg this is a good prank to pull on someone's boss and co-workers.
devops,36im8j,boblmartens,5,Tue May 19 23:20:15 2015 UTC,"Calm down, Satan."
devops,36im8j,evilbuffer,2,Tue May 19 23:44:24 2015 UTC,Only daily?
devops,36im8j,2_advil_please,1 point,Tue May 19 19:43:17 2015 UTC,Crap.
devops,36hlzk,eleitl,2,Tue May 19 13:23:15 2015 UTC,"2 words: Regulated Environment.  Containers are outstanding for standing things up really fast, especially dev environments and instances you need to kick off 50 of in a few seconds. They fall flat when you have serious security concerns however."
devops,36gn95,mattstratton,3,Tue May 19 06:18:15 2015 UTC,It appears that we did. What's interesting is that you have no idea your post didn't go through :)
devops,36gn95,qadm,3,Tue May 19 06:20:00 2015 UTC,"It sounds like link posts are either being spam-filtered or removed by AutoMod. If they were disallowed, you would not see that option when posting."
devops,36gn95,noratat,2,Tue May 19 09:15:43 2015 UTC,"Ah. That makes sense. This actually seems even better, since the spam type folks won't even know what hit them :)  Edit: It seems that some folks actually CAN submit links - wondering how one gets on that whitelist. I would hope that my history in this sub is that I don't send spam links, but rather conversations starters."
devops,36g4hz,mrMuffins_,4,Tue May 19 03:04:16 2015 UTC,"Op is not asking how to write a playbook in php or use a playbook to deploy a php app. Op is asking about controlling and invoking an ansible run from a php app.  Knowing almost nothing about php and actually nothing about ansible, the link you posted seems to be what you need. What trouble are you having?"
devops,36g4hz,Enoxice,1 point,Tue May 19 09:19:33 2015 UTC,"Op is not asking how to write a playbook in php or use a playbook to deploy a php app. Op is asking about controlling and invoking an ansible run from a php app.   I think the documentation has me confused as to how to set this up,  i may just be not getting it due to a rudimentary understanding of Ansible though."
devops,36g4hz,kenwmitchell,3,Tue May 19 13:42:17 2015 UTC,"Take a look at Ansible Tower. Free for ten nodes I think. It has a REST API which you could talk to with the PHP REST library. Otherwise you can probably call ansible or ansible-playbook from PHP and parse the output. I'm not sure if they have raw output, but it is in JSON."
devops,36g4hz,cryonine,1 point,Tue May 19 15:22:59 2015 UTC,Yeah I've seen the Ansible tower I was looking more for something free.  Ansible tower is a great choice though I have used it.
devops,36g4hz,ClutchSlave,1 point,Tue May 19 17:07:40 2015 UTC,"I have an app that is built in PHP and Ansible would be great for what I am trying to do other than the fact that the API is only written in Python.   What are you trying to do?  Are you trying to deploy a PHP app with Ansible?  Are you trying to manage your infrastructure with Ansible and want to make a frontend?  Your question is a little to vague to give an actual answer.  The tool you linked is primarily for invoking Playbooks from PHP, effectively allowing you to create a GUI for Ansible itself."
devops,36g4hz,pydry,3,Wed May 20 15:17:56 2015 UTC,"Well, that's not strictly true.. Ansible YAML playbooks use Jinja2, which is a templating library written in Python (and such it has some pythonisms in it).   I'm not sure what the original author is asking, but if he/she's looking to make an Ansible module in PHP, all Ansible modules are just simple scripts which talk plain JSON with Ansible itself."
devops,36cp51,tehwankingwalruses,21,Mon May 18 09:35:18 2015 UTC,"Wouldn’t it be more useful if, instead of “Experience in: Nagios, Statsd, Graphite, Logstash, Elasticsearch, Kibana, collectd,” John’s resume said “Loves researching and implementing monitoring solutions for challenging architectural problems”?  And wouldn’t it be more useful if, instead of “Four years of experience programming with Ruby, Python, AWK, Shell, Batch, VBS, C, C++, C#, Java, Javascript, JRuby, Jython and everything else,” it said, “Knows Ruby well but am passionate about learning new languages on demand. Here’s a project I’ve been working on: <LINK>”?   That would only work if recruiters knew how to read a resume and not play ""pin the tail on the donkey"" with keywords."
devops,36cp51,batouchu,5,Mon May 18 10:49:26 2015 UTC,"candidates definitely aren't sure what to advertise. I keep interviewing mid-career ""systems administrators"" who are hesitant about their programming ability. all of them have 3-5+ years with SQL and C or ASM. if you were able to successfully write useful operations/business software in C, you can probably learn Python or Ruby in a few months and wonder why you didn't bother sooner."
devops,36cp51,neoice,4,Mon May 18 19:19:43 2015 UTC,"I think it's where a good, tailored, cover letter would really help:  ""I would be a good fit because I can learn X, Y and Z by building upon my experience with A,B and C""  But how the hell are you supposed to do that without knowing the name of the company, what they do, and what exactly are they looking for?   The best job I found some far, I ended up finding it at a meetup and doing the interview pretty much on the spot with my soon-to-be manager."
devops,36cp51,batouchu,7,Mon May 18 23:24:52 2015 UTC,"Is there such a thing as a entry-level operations engineer/devops engineer?  Every job posting I look at requires 3-5 years of experience!  Do you have to start in Ops at some SaaS or IaaS company, and just churn out your time before moving on?"
devops,36cp51,Windowsfanboy,9,Mon May 18 16:02:02 2015 UTC,Well you won't really be that effective at automating if you've never done the ops work in the first place.
devops,36cp51,visualthoy,3,Mon May 18 17:39:56 2015 UTC,"Systems Engineer, Systems Administrator, Network Operations/Datacenter Technician, etc, would all be relevant experience."
devops,36cp51,neoice,3,Mon May 18 19:17:47 2015 UTC,"As little sense as it makes, in my experience ""entry level"" has meant ""3-5 years experience"" since the early 2000's. The difference was it meant ""3-5 years experience"" not ""3-5 years of having a job."" Any 20 year old would have 3-5 years experience with computers, programming, networking, etc. if they were into it.  When the big IT glut hit and suddenly people started going to get certifications in these weird 8-12 week programs and trying to get random IT jobs, 3-5 years experience somehow got turned into 3-5 years of job experience by HR.  Anyway, at least outside of big companies, there is no reason not to apply for those jobs as long as you have 3-5 years of some experience, even if you've just been messing around with Chef to update your play server or something. A lot of ""DevOps"" technology is new enough that 3-5 years of experience with it means you were using it before it existed.  Also, fwiw, most of the DevOps people I know started out as Devs, not as Ops."
devops,36cp51,trackpete,2,Mon May 18 21:03:47 2015 UTC,"Also, fwiw, most of the DevOps people I know started out as Devs, not as Ops.   Huh. I've had the opposite experience, which just goes to show all of this is anecdotal :)"
devops,36cp51,mattstratton,1 point,Mon May 18 23:24:09 2015 UTC,Most Ops I know where doing automation and quick deployment before configuration management (good old times of pxeboot and preseed images with post install script written in bash :) )
devops,36cp51,batouchu,2,Tue May 19 05:02:02 2015 UTC,DevOps != only config management/infra automation. But we all knew that ;)
devops,36cp51,mattstratton,1 point,Tue May 19 05:42:24 2015 UTC,"Well, when I see most people hiring devops engineers when what they really want is a [Systems Administrator|Operations engineer|Web Operations Engineer], I'm wondering...  It's even worse when I see them use devops engineers as ""someone who can code during down times so we can pay one guy to do the job of two""  I don't think there's a configuration tool out there that helps you get off your chair and go and talk to your devs :P"
devops,36cp51,batouchu,2,Tue May 19 06:34:12 2015 UTC,I couldn't agree more. With all of that.
devops,36cp51,mattstratton,2,Tue May 19 06:40:21 2015 UTC,"In my experience, you need a foundation in one side of the fence, with a bit of crossover. If you can't claim to be an expert in ops or dev it kinda makes it hard to grasp the big picture and why this paradigm is better than others."
devops,36cp51,hijinks,2,Mon May 18 20:58:10 2015 UTC,My last job I hired a entry level devops eng.  He basically had a solid understanding of Linux and all the tooling and why it was used
devops,36cp51,djk29a_,1 point,Mon May 18 17:40:50 2015 UTC,"I've just hired the equivalent of an entry level ops / devops engineer because we are a little top-heavy and could use some juniors to help with team dynamics on occasion. The guy has pretty solid experience with AWS already, knows Vagrant, Chef, and can code fine as evidenced by his Github projects that I reviewed.  You may have to look at larger companies because start-ups typically can't afford the time / resources to train up anyone in any manner and expect everyone to come in swinging a huge bat with home runs."
devops,36cp51,Windowsfanboy,1 point,Fri May 22 17:25:12 2015 UTC,"I guess I better keep working on my projects then, my github is looking a bit dusty at the moment.  Do you have any advice on how to practice Vagrant+Chef without a job that currently requires them? My only thought is to configure my own deployment solution for my code, but I'm more of a backend programmer than a frontend one, so the code I write normally runs across all linux distributions as long as I package the right dependencies."
devops,36cp51,djk29a_,2,Sat May 23 05:35:31 2015 UTC,"Vagrant and Chef are handy with Docker to deploy and maintain web nodes (particularly with Chef provisioner). In conjunction with AWS ELBs (and maybe elastic beanstalk if you want to pay for it) you can do a few neat things.  Take a look at the sorts of tasks I would like someone to be able to demonstrate experience with (particularly the rolling deploys of web workers on nginx and/or haproxy - bonus points if you can describe what they're doing wrong in these that would get you fired at many places) at https://sysadmincasts.com/  I'm a backend guy myself and getting these upgrades and production deploys going with CI/CD workflows drove me nuts as I was trying to crank out code faster and get reliable feedback on what my code was doing in response to workloads, and it turns out I'm definitely not alone."
devops,36cp51,Windowsfanboy,1 point,Sat May 23 15:17:53 2015 UTC,"Those casts look really good, I'll check them out. If I have any more questions is it cool if I shoot you a PM?"
devops,36cp51,djk29a_,1 point,Sun May 24 05:13:27 2015 UTC,"I check messages here regularly, sure"
devops,36cp51,ms4720,1 point,Sun May 24 12:12:34 2015 UTC,"The screen casts look cool, thanks for doing this"
devops,36cp51,trackpete,3,Sat Jun 6 23:48:22 2015 UTC,"I don't think it's specifically mentioned, but this one true point of IT job seeking applies very much in the DevOps world:  You will have the best opportunities applying for jobs via people you know, not via HR/recruiters.  Personnel and Management at any company can bypass the initial HR weeding process and make interviews happen if they know you directly. You don't need to keyword or set up your resume for some big search engine grind, but instead can target it directly at the people who will hire you and work with you. You will be far more successful in your career and get far better opportunities if you go this route than by applying via the front end.  Network, meet people, and use those connections. Don't ever get a blind job applying somewhere, IMO. I've been in the IT industry for twenty years, every job I've had has been because someone I knew asked me to work with them. The brief period of time I spent in 2000 applying blindly for positions was horrible, and I'll never do it again."
devops,36cp51,platypython,1 point,Mon May 18 21:08:38 2015 UTC,"The author talks a bit about this from the employer perspective, but this also applies to people looking for jobs.   anything from attending meetups, DevOps Days, or VelocityConfs to taking part in active discussions online in mailing lists or open spaces. Listen."
devops,36cp51,hulfsy,3,Mon May 18 21:16:57 2015 UTC,"I stopped key wording my resume and started writing one sentence descriptions. ""Managed hardware and software stack for a SaaS with 8 million uniques a day.""  Anyone who knows their stuff will have a general idea where I'm coming from. The recruiters here in Salt Lake City have been top notch lately, not asking me help desk screening questions or dropping keywords they have no clue about."
devops,36cp51,elijahwright,1 point,Mon May 18 20:40:29 2015 UTC,Loves researching and implementing monitoring solutions for challenging architectural problems   This is typical managery shit. I think you wouldn't want to work in a company where that kind of shit is preferred over the technical documents.
devops,36cp51,271828182,10,Mon May 18 13:28:48 2015 UTC,"I think the idea is, its better to present the ability to complete tasks than presenting what tools you know how to use. If someone is talking about construction projects they've worked on, they wouldn't list out all their drills, screw drivers, etc."
devops,36cp51,elenaward,2,Mon May 18 14:53:18 2015 UTC,"As a person who writes a shit-ton of monitoring code, you... are a bit off base.  ;-)"
devops,36ci5x,LamborghiniVeneno,2,Mon May 18 07:48:32 2015 UTC,"Your server is just slow. Our boxes refresh like any other page (although it takes a few extra moments in higher envs for the security hoops). IBM's documentation is pretty solid for uDeploy, so I'd start there for help."
devops,36ci5x,TidesComingIn,1 point,Mon May 18 19:51:55 2015 UTC,"I'd argue that using uDeploy is not doing DevOps, but you are more than welcome to call me a cynic."
devops,36ci5x,brokenpipe,1 point,Wed May 20 01:10:00 2015 UTC,"DevOps, like many other SE terms such as Agile, is not a well-defined and precise concept.  One area of emphasis in DevOps is focus on automation. As such one might consider uDeploy an enabler for DevOps.  IBM itself is also marketing [PDF] uDeploy as a tool for DevOps, though one can argue that is just IBM doing marketing.  EDIT: DevOps or not, I have personally found tools that are extremely slow to use as big obstacles that make software development a horrible practice, affect the mood of team members, and adversely affect software quality and delivery. As such, so far, I got to say I hate uDeploy like plague."
devops,36b3f8,jmreicha,8,Sun May 17 22:51:11 2015 UTC,"My personal opinion is they're roughly the same thing.  SRE has been around since before DevOps was a term.  I don't think I've seen a company posting listings for both SRE and DevOps.  It's usually one or the other.  They both require and use the same skill set: A mix of Ops and Software Engineer.  There are some differences in how those skills are applied.  But, the differences come more from the needs of the company than the name of the role.  SRE will tend to be more focused on designing solutions for reliable Production systems (go figure).  DevOps Eng may do that, or may be just automating other internal systems like CI/CD pipelines, etc.  Then again, SREs do that sometimes to.  Source:  I've been a DevOps Eng and am currently an SRE."
devops,36b3f8,bpgoldsb,1 point,Sun May 17 23:18:47 2015 UTC,"Interesting, thanks for the post!  Out of curiosity, which role have you found to require more programming?  How close to software engineering are they?  Do you have any words of wisdom on improving programming skills?"
devops,36b3f8,bpgoldsb,3,Sun May 17 23:30:07 2015 UTC,"I could answer that, but to be honest, it's totally dependent on the individual job.  Not the job title.    It is really a question you should ask when you're interviewing if it's something important to you.  Most places take questions like this as a plus (I know I do).  Shows you are interested.  In both roles, I've written lots of code.  Either Puppet/Salt manifests/modules/states, small to medium sized Ruby on Rails apps, lots of various Python projects (consume APIs, automation, etc).  In SRE, I tend to also contribute to the code base of the services I'm supporting (bug fixes, increased monitoring, etc).  Regarding programming: I don't know where you're currently at, so I can't really give you specifics.  You can reply/PM me if you want to have a conversation about it.  So, that said, I'll give you the advice I tell anyone regarding any skill set: Surround yourself with people doing what you want to be doing.  Want to get better at Ops?  Hang out with or get a job as a Sysadmin.  Same is true for coding.  Or troubleshooting.  Or networking.  Or anything even non-tech.  Spend time around a civil engineer and you'll be designing home improvement projects in no time :)"
devops,36b3f8,e30m3taco,-1,Sun May 17 23:53:45 2015 UTC,"SRE is just a better term for the ""new generation"" of operators.  I get really mad when people use ""DevOps"" in titles.  DevOps isn't a job description."
devops,36b3f8,bpgoldsb,2,Mon May 18 17:16:33 2015 UTC,"I disagree.  Site Reliability is focused on a very specific problem domain: Creating reliable production services.  I think SRE is a sub-domain of DevOps-y titles.  However, in the real world, DevOps Engineer does conveys what the role of the job is.  I think Systems Engineer is a better title, but DevOps Engineer is sufficient.  I agree with you that it's flawed, but reality is what reality is.  Fact of the matter is if I go on career site Foo and search for ""DevOps Engineer"", I'm going to get jobs that are much more honed to my skillset than if I do the same for ""Systems Engineer"".  And by the same notion, if I do it for ""Site Reliability Engineer"", I'm going to miss 50-75% of the jobs."
devops,36b3f8,e30m3taco,1 point,Mon May 18 18:01:08 2015 UTC,"Definitely a great point about the job postings.  I still think it's a trendy title, but you're right about ""DevOps"" covering more skillsets while searching."
devops,36b3f8,brokenpipe,-4,Wed May 20 02:59:49 2015 UTC,Welp sadly you're on the wrong side of that argument. Plenty of research now suggests that it pays (YOU) to have DevOps in your title.   So get the fuck over it.
devops,36b3f8,e30m3taco,2,Tue May 19 14:23:05 2015 UTC,Thanks for the input.  Here's your lovely downvote.
devops,36b3f8,keftes,4,Wed May 20 02:57:09 2015 UTC,Both are wildcard roles and could easily be the same thing depending on the job. Someone that can do ops (e.g keep a stack running under load) and can code while having a deep understanding of the underlying tech he's using.
devops,36b3f8,cuppabrownjoy,7,Sun May 17 23:20:37 2015 UTC,"IMHO both have become bullshit titles and are more often than not just the new 'cool' name the company has for their SysAdmins. AFAIK the SRE name becoming 'cool' was off the back of Google, who have a Site Reliability team. In theory, 'DevOps' isn't even a title - 'Operations Engineer' is. Having a 'DevOps Engineer' or a 'DevOps Team' should be a red flag..  But in reality, we all need jobs - and companies need to attract people to jobs. So treat the titles interchangeably, go to the interview and find out what the role really requires."
devops,36b3f8,deadbunny,4,Mon May 18 00:03:48 2015 UTC,"I think the term ""DevOps Engineer"" has come about as a shorthand for ""Sysadmin who can code and follows devops principles"" which is a little harder to stick at the top of a job posting or resume/CV in such an eye catching way, kind of like ""Agile programmer"" or ""scrum master"" on the dev side off things.  For good or bad it does work for the most part."
devops,36b3f8,Tattoo__,2,Mon May 18 07:32:38 2015 UTC,"On the other hand, in my team most of DevOps Engineers are developers who can sysadmin and follow devops principles. What I'm trying to say, is that the term is something else than ""just"" a shorthand."
devops,36b3f8,jldugger,2,Mon May 18 10:04:54 2015 UTC,"It varies. With the teams I manage, we have separate DevOps and SRE teams. They both have the same rights / privs / tools, just different objectives and duties. SRE is responsible for uptime and responding to outages. Devops is responsible for new service deployments, adopting / improving tools, retiring cfengine, etc.  At Google, I understand SRE is it's own job title. Supposedly they spend 50 percent of their time on operational duties, 50 percent writing tools. At other places, the terms are probably interchangable with eachother and the title 'sysadmin'. Certainly, you won't see any BLS data distinguishing between these roles."
devops,3631j4,Christf24,3,Fri May 15 17:57:47 2015 UTC,"Oh my gosh. I am in the same boat that Nathen was in. I should be using some kind of framework.  Yes, right now, I am banging away at a keyboard and keeping my stuff in wikis and Evernote :(  Thank you so much for this."
devops,3631j4,joelouthan,3,Fri May 15 20:08:48 2015 UTC,I wasted so many hours on this problem thinking that learning a framework like this would take too long. Funny how the mind optimizes in the wrong places. Let me know if there are any parts to Chef you're stuck on
devops,3631j4,itsteve,1 point,Fri May 15 20:36:26 2015 UTC,Are there any MSP's supporting Windows that are doing anything Chef related?
devops,3631j4,brokenpipe,1 point,Sun May 17 22:09:31 2015 UTC,Something like this maybe? http://www.10thmagnitude.com/
devops,35ysgt,smartconsumer,8,Thu May 14 17:20:40 2015 UTC,"I work at a Seattle area ""big company"" and can confirm I make slightly higher than the reported median of 118k. I have a HS diploma.   The article implies an inverse correlation between salary and amount of schooling (those with Bachelors make less, and those with Masters make less still). I wonder how much merit there is in that, or if its just ""less school means more time working which means more experience"".   From my point of view, schooling is almost completely irrelevant in favor of experience. I can't recall the last time someone asked about School in a job interview."
devops,35ysgt,jazzyjayx,2,Fri May 15 03:43:51 2015 UTC,"I was exposed to things in college that make me better at DevOps. Admittedly, I went to school for supply chain, and many of the things that DevOps has adopted (lean, kaizen, theory of constraints, etc.) are exactly and precisely what I spent four years focused on."
devops,35ysgt,superspeck,2,Fri May 15 13:08:45 2015 UTC,"I think the schooling part is largly due to the fact that no school teaches what you need to know to do devops. I keep talking with recent CS graduates, and remarkably few know how to do more than cd, ls, and nano on the Linux command line.  Myself included.  Honestly, I know a few linux software developers who still don't know how to troubleshoot anything which requires more than top and service <> restart. I think the rise of AWS has facilitated this; when all of your problems can be solved by ""spin up another/bigger instance"", what value is there in identifying the root cause of a problem?  I learned how to be a sysadmin on the job, and none of the theory I learned in college made one ounce of difference when it came to actually administering systems."
devops,35ysgt,dominic_failure,1 point,Fri May 15 13:30:35 2015 UTC,"Agreed. I work with one of the ""big"" companies and can't recall ever asking anyone where they've attended college unless they had zero experience in the industry.  It's all about what you know and your problem solving skills."
devops,35ysgt,jasonj79,1 point,Fri May 15 04:37:12 2015 UTC,"If they took the data based on age rather than career length, it would make sense.  A rockstar (fuck I hate that term) new grad with an MS in something security-oriented might be able to fall into 110-120k/year in the bay area, but he's probably 24.  A similarly gifted person who managed to get his (or her) foot in the door at 18 and worked for 6 years would be making more money.  However, the pay would flatten out over time."
devops,35ysgt,FireReadyAim,1 point,Fri May 15 06:41:30 2015 UTC,I've found the developers with college level education will gladly make less money to not do Ops at all. It's bizarre to me.
devops,35ysgt,zikkitzo,1 point,Fri May 15 07:41:58 2015 UTC,How many years of experience do you have?
devops,35ysgt,agreenbhm,1 point,Fri May 15 10:17:28 2015 UTC,"about 13 in the overall software development field, 10 of those in what I'd call a 'DevOps Position' (Release Engineer). I know the term DevOps isn't even 10 years old, but it covers the general duties I've been doing for 10 years."
devops,35ysgt,jazzyjayx,1 point,Fri May 15 19:41:09 2015 UTC,"I am just one guy, so it hardly proves a point, but here we go anyway. Never went to collage and worked my way up from it support to now being a solutions architect. I think the fact I never went collage drove me harder to learn more. It was in a way driven from a lack of self belief and need to prove myself. So I bought cheap PC's off eBay and 10 port switch, and then learned Linux networking. This was back in 2002 when you had to patch and recompile a kernel to get free swan to work (NAT would ruin the ipsec  header data).   Nowadays I have no idea who went to what collage when I do my job. Some people are very sharp of mind and great engineers, others I wonder how they got the job in the first place. University is not a contributor to either ones aptitude.  I still have that inferiority going on to a mild degree, so when someone talks about the latest tech, it kicks and I get obsessed with learning it to a low level"
devops,35ysgt,MoreTeaPleaseVicar,1 point,Thu May 21 17:47:05 2015 UTC,its just a timing in the market thing...  the article is completely pointless on schooling vs technical merits.
devops,35ysgt,thecatgoesmoo,3,Fri May 15 07:04:55 2015 UTC,"Nice try, DevOps institute"
devops,35ysgt,plas_ticity,1 point,Fri May 15 15:03:45 2015 UTC,"Their site is awful, >10 seconds and not finished loading."
devops,35ysgt,itripovermyownfeet,2,Wed Jun 10 13:18:17 2015 UTC,Can anybody confirm if that number is realistic?
devops,35ysgt,jmreicha,13,Thu May 14 22:45:07 2015 UTC,"10 years experience from sysadmin to developer to operations to ""DevOps"" has me at $160k in San Francisco.  Supply is not keeping up with demand, and ""DevOps"" is more in demand because of the sheer number of startups, and the dilution of core 'Operations' departments into SRE vs SWE roles at established companies."
devops,35ysgt,himynameisthor,3,Thu May 14 23:38:30 2015 UTC,"I've got the same amount of experience (12 yrs), at similar roles, and the same salary ($160k) in Boston.  $106k is low for skilled Devops people in this area."
devops,35ysgt,fps81,1 point,Fri May 15 02:25:12 2015 UTC,"That's a pretty cool career path you have there and there's a lot to be said for it getting you to where you are.  I'm in a similar vein.  I refer to it as ""adapt or die"".  Along with that more people in IT need to be of the mindset of trying to work themselves into unemployment which is really all that ""DevOps"" is highlighting.  I'll never be happier then when I have nothing to do at work."
devops,35ysgt,whoisearth,9,Fri May 15 01:11:31 2015 UTC,"Don't forget, DevOps is also about fixing culture issues like silos and finger pointing.  I'd argue those things are more important than the tools."
devops,35ysgt,blewa,3,Fri May 15 04:34:01 2015 UTC,agree with this %100.
devops,35ysgt,onawave12,4,Fri May 15 06:13:18 2015 UTC,"I agree. I think some people thought devops was going to automate away jobs, but it has basically been the opposite. It's a great time to be a jack/Jill of all trades."
devops,35ysgt,BannerDay,3,Fri May 15 02:04:06 2015 UTC,"We joke that the best SREs are the lazy ones. If you can code yourself out of a job, you're the one we want :)"
devops,35ysgt,jasonj79,9,Fri May 15 04:38:35 2015 UTC,"The numbers are realistic. The best place right now is Atlanta, Georgia in the southern US; cost of living is low, wages are high. I had 125k in my last ATL position before I moved out here to the west coast.  TL;DR - Skip college if you want, the path will be harder, but you may still get to the top anyway. I don't recommend it.  The ""no college"" thing is questionable. To be clear, I don't have any college education; I'm actually a high school dropout. I'm also someone who's been attached to a keyboard since they knew what it was, I was writing C when I was 8, and I was building networks and launching services when I was 15. This is what we call ""a Statistical Anomaly"" - e.g., don't use it as a fucking measuring stick against others.  I've worked with people in automation (note: ""devops"" is a bullshit buzzword) who had college degrees, and other guys like me who were completely self taught. We all got paid according to what we could do, our experience, and market demand. The college guys could do things I can't, and I would see & do things in a ""from the trenches"" way that they just couldn't. We both had talents the other envied. But all that time in a CS courseroom sure would've done me some good."
devops,35ysgt,akesterson,-1,Fri May 15 03:49:11 2015 UTC,This.
devops,35ysgt,insert_foot_in_mouth,3,Fri May 15 06:21:02 2015 UTC,I work in the Boston area and in my personal experience 100k is closer to the floor than the middle.
devops,35ysgt,bsoder,3,Fri May 15 00:47:01 2015 UTC,"Depending on where you live, it's very realistic."
devops,35ysgt,BannerDay,2,Thu May 14 23:21:40 2015 UTC,"Yep.  In major markets, anyway."
devops,35ysgt,erst77,1 point,Thu May 14 23:23:19 2015 UTC,120k in Atlanta.
devops,35ysgt,atlgeek007,1 point,Fri May 15 01:45:23 2015 UTC,Care to share some details about what's available in the Atlanta area?
devops,35ysgt,joe_average1,1 point,Tue May 19 15:06:29 2015 UTC,"Glassdoor has a lot of open devops jobs in Atlanta that should be able to get you over six figures.  I've been doing this for a LONG time though.  In the business since 1998, sysadmin since 2003, and ""Devops"" since 2012.  My ""rolodex"" of contacts is fairly expansive.  I got this job through someone I knew."
devops,35ysgt,atlgeek007,1 point,Tue May 19 15:13:04 2015 UTC,"We talked salaries at DevOps Days Austin a week and a half ago. Mid level is hiring at $125k + bonuses and equity in Austin. Senior level can hire as high as $150k, but there are very few of those -- one per company at most. There are independent consultants doing a quarter million a year at some of the larger companies in the area to help them implement DevOps practices in enterprises."
devops,35ysgt,superspeck,0,Fri May 15 13:11:30 2015 UTC,"The numbers are realistic (even on the low side in the SFBA). The ""no college required"", not so much."
devops,35ysgt,jipjipme,1 point,Fri May 15 01:53:00 2015 UTC,I make quite a lot more than 100k and my boss didn't even know I don't have a degree until a month ago.
devops,35ysgt,FireReadyAim,2,Fri May 15 06:37:42 2015 UTC,"There are obviously exceptions, but ""no college required"" is a clickbait-y title. The vast majority of highly-paid ""DevOps"" engineers have a college degree, and it's typically at least a stated requirement on such job posts."
devops,35ysgt,jipjipme,1 point,Fri May 15 07:27:29 2015 UTC,"A lot of the talk about people not having a degree in Devops/ITSM/CompSci is also a bit off because a lot (30-50%?) of people in the discipline actually have degrees in other areas where they get to hone their systems thinking and problem solving skills. I could take a doctor, car mechanic, or a linguist and train them up to a solid junior level within a year. There are probably exceptions due to other traits, but if someone's used to thinking they can learn a new paradigm easily if motivated."
devops,35ysgt,laurier57,1 point,Fri May 15 14:31:59 2015 UTC,"""or experience in lieu"" is also on such job posts."
devops,35ysgt,taloszerg,1 point,Fri May 15 18:10:07 2015 UTC,"Very realistic. I'm in the Seattle area, I've got an associates degree and working at a small company making a little more than the reported median.  I could be making more but I've got a pretty good work/life balance right now."
devops,35ysgt,a_pwrful_friend,1 point,Fri May 15 04:03:49 2015 UTC,"I work in Site Reliability, aka Devops, and can confirm that yes, many of my peers are making 2x or more what's even mentioned here with little more than a high school diploma in many cases. (SF Bay area)  That said... there's a reason they pay so much. Not only do you need to know how to write code, but also linux internals and troubleshooting, networking down to debugging packet captures, how to architect and scale services at all layers, automation and configuration management, virtualization, containerization, systems and application security, and so on.  And on top of that, your often times fixing things that you can't necessarily google... Especially in the big companies, you will find that working at such scale you'll be the first to deal with a particular issue.  It takes a special, almost obsessive type of engineer to do this type of work. They're hard to find, hence the lack of real supply pushing the wages so high."
devops,35ysgt,jasonj79,1 point,Fri May 15 04:32:56 2015 UTC,"Salary's are pretty much accurate.  Not sure how much they're adjusted for cost of living, obviously.  Making 100k when your rent costs 2,500/mo for 1 bedroom is not the same as making 100k when your rent is 800/mo.  That said, I don't know that you're going to see DevOps people making more than a Software Engineer with a Masters anytime soon, but you will be living pretty comfortably.  For 8 years after quitting college, my mother always kept dropping subtle hints that I could ""always go back"".  When I started making more than anyone else in the family, she stopped making those comments ;)"
devops,35ysgt,bpgoldsb,4,Fri May 15 05:09:11 2015 UTC,"when your rent costs 2,500/mo   Ugh.  I wish."
devops,35ysgt,FireReadyAim,1 point,Fri May 15 06:42:08 2015 UTC,what does your rent cost?
devops,35ysgt,atm0sphere,-1,Fri May 15 20:08:25 2015 UTC,It's far better to make $200k with $3500 / mo rent than to make $100k with $1750 / mo rent even including progressive-ish taxation.
devops,35ysgt,djk29a_,1 point,Sat May 23 18:06:43 2015 UTC,"The sad part is we have articles now that say ""100k plus"" is some awesome salary someone with these skills should be after - most are making 2x that.    Does it matter if you went to college?  Probably not, but you aren't going to land a job with a HS diploma without some serious work to show for it."
devops,35ysgt,thecatgoesmoo,1 point,Fri May 15 07:07:08 2015 UTC,"Highly skilled but underpaid Developer / system admin here.  I am in, what do I need to learn and then master to get hired?"
devops,35ysgt,AceBacker,2,Fri May 15 15:34:22 2015 UTC,"Learn Ansible, Chef, Puppet, Vagrant, VirtualBox, Python, and Bash, and all things Linux Networking (haproxy, ngrep, nginx, reverse proxy, tomcat). It's a ton of work. I worked for 10 years as a Machinist, now I make three times what I was making as a DevOps Engineer. You can do it!"
devops,35ysgt,demizer,2,Tue Jun 2 07:20:09 2015 UTC,way to go changing careers! very impressive!
devops,35ysgt,plas_ticity,1 point,Thu Jul 9 19:54:03 2015 UTC,"I'm in the midwest and got hired by one of the big San Francisco companies to work remote.  They said the market for talent in the Bay Area is completely saturated so they started looking for remote folks.  I'm making $100k here, which adjusted for cost of living is $180k in San Francisco money.  No degree.  5 years or so of relevant experience, 12 years in the industry."
devops,35ysgt,derprondo,2,Fri May 15 16:29:34 2015 UTC,"Yep, it's not atypical to hear from all of the big players every couple of months trying to recruit you in the bay.  Not enough supply and a huge demand."
devops,35ysgt,jasonj79,1 point,Fri May 15 18:23:13 2015 UTC,"I hear from fb, google and amazon every 6 months. They all want me to be in an office chair from 8am until 6 or later, so I tell them no thanks. I work remotely, which means I can work from a hotel room, which means I can see the world."
devops,35xoui,zeroXten,2,Thu May 14 11:33:34 2015 UTC,"Nice. I'll have to dig into this later, by I'm hoping this could be a good tool for phasing out self-signed certs in short-lived testbed/integration environments."
devops,35xoui,tobascodagama,2,Thu May 14 18:09:35 2015 UTC,"Yeah, that would be a good use case. At the moment there isn't an agent or service, but you could probably get something going using git, cron and ssh :)"
devops,35xoui,clay584,2,Thu May 14 22:03:06 2015 UTC,Very nice.  Can't tell you how long I've wanted a good alternative to Microsoft certificate services and something that integrates better with Linux.
devops,35xoui,clay584,2,Fri May 15 12:04:09 2015 UTC,":) Would you be expecting to run a service on Windows infrastructure, or just support windows agents?"
devops,35xoui,AsteriskMC,2,Fri May 15 12:10:55 2015 UTC,"Windows agents.  Also would be nice to have pki.io to act as a subordinate CA to a Microsoft root CA.  Just because most customers of mine already have Microsoft CA services in place for all of their windows machines and users, and then you could leverage pki.io as your issuing CA for all Linux services.  Would probably help with pki.io adoption as you wouldn't have to touch your existing MS PKI; just make another sub-CA."
devops,35xoui,AsteriskMC,2,Fri May 15 16:07:28 2015 UTC,"Ah ok. The plan for alpha release 2 is to include support for importing CAs and certs, and also support tiered CAs. I guess you'd need to export a CSR for the CA to be signed by the MS PKI. I've created an issue to track the feature: https://github.com/pki-io/core/issues/77.  Realistically windows agents might have to wait until release 3 when we'll be doing the API stuff. None of the current devs have a windows background, so we might need to get some help. The project is written in Go, so it will run on Windows in some form, but we'd have to look at the implementation details of running a service.  Thanks for your feedback :)"
devops,35yt13,genbcap,1 point,Thu May 14 17:25:15 2015 UTC,I'm surprised not to see nodeping in this list. That's what we use at work and we're very happy with it.
devops,35yt13,Aquassaut,1 point,Thu May 14 21:14:41 2015 UTC,"SAAS options are nice, but then you're depending on their servers as well (without insight into their servers, typically). Personally, I feel better when I can deploy a set of Nagios (Icinga) servers in different DCs, and have them monitor each other, and monitor your servers.  AWS makes this easy and relatively inexpensive (a micro instance can run a ""watch the watchers"" instance pretty easily)."
devops,35yt13,dominic_failure,1 point,Fri May 15 13:45:31 2015 UTC,"https://www.statuscake.com/ is another, although they haven't called us back when asking about Pingdom migration options."
devops,35yt13,e30m3taco,1 point,Mon May 18 17:20:35 2015 UTC,I've had good luck using https://uptimerobot.com
devops,35z5gi,geercom1,1 point,Thu May 14 19:02:17 2015 UTC,Here's Part 1
devops,35thd7,dataloopio,2,Wed May 13 11:14:38 2015 UTC,"I've been following you guys for a while, always a good read on your blog, glad to hear of the imminent release will be interested to hear how that goes!"
devops,35thd7,deadbunny,1 point,Wed May 13 17:20:43 2015 UTC,"no pricing, no care."
devops,35thd7,OpCode1300,3,Wed May 13 14:54:51 2015 UTC,"We launch in one month, currently it's invite only to select companies running online services."
devops,35thd7,p3n15h34d,3,Wed May 13 15:18:21 2015 UTC,you haven't gone in production yet and already have scaled?  that's some mongodb shit right there
devops,35p7a8,batterista-dc,2,Tue May 12 11:28:50 2015 UTC,This is not a new thought: https://twitter.com/b6n/status/362723138561257473
devops,35p7a8,maybenotpoor,2,Tue May 12 20:53:46 2015 UTC,Can someone ELI5 immutable infrastructure?
devops,35p7a8,bookhockey24,9,Tue May 12 17:36:56 2015 UTC,"Instead of dicking with servers constantly, upgrading, changing things, you just build an entirely new server and retire the old one, and replace it while running via load balancer.   No one makes any changes, ever to your infrastructure. Roll out changes as needed with brand new instances, retire the old. This gets exponentially easier every generation of automation tools.   This way Security can have their way with the OS template and environment, the app developers have a stable release, and sysadmins can keep their little paws off of things like production.   This all assumes you have a well trained dev environment that works extremely well and mirrors prod,e tc, etc, etc."
devops,35p7a8,dang_hillary,7,Tue May 12 17:45:30 2015 UTC,"Ok, so what happens with db's?"
devops,35p7a8,34895348573857348759,9,Tue May 12 19:23:36 2015 UTC,"Right now, you generally leave db servers in place and update them. Immutable infrastructure is more viable for stateless and semi-stateless (cache) components, and there's a lot of value to making those immutable but leaving db servers mutable. However, I think we'll start seeing db services that can handle reboots and swap outs w/o interrupting the function of the application."
devops,35p7a8,atm0sphere,1 point,Tue May 12 19:27:18 2015 UTC,"I think we'll start seeing db services that can handle reboots and swap outs w/o interrupting the function of the application.   RDS is pretty damn close already. to your points:   you can move RDS to Multi-AZ with zero downtime you can scale up/down RDS instance sizes with zero downtime you can scale storage on RDS with zero downtime*   *performance hit  the only thing you can't do (and this is kind of annoying) is migrate to an encrypted database with zero downtime. to preserve state (i.e., keep people from using your database while you're trying to dump and load it) you need a maintenance window with downtime.  there isn't even boto support for an encrypted RDS db yet though, so maybe it's coming."
devops,35p7a8,jmreicha,1 point,Wed May 13 02:13:27 2015 UTC,CockroachDB looks promising for this.
devops,35p7a8,dang_hillary,1 point,Wed May 13 02:26:38 2015 UTC,Agree.
devops,35p7a8,34895348573857348759,-1,Wed May 13 15:06:10 2015 UTC,"saas it. throw a DB on nfs if you're on-prem in san, make it a useable piece of your deployment model - and the only one that wouldn't change.   or throw it on aws rds in the cloud.   or rebuild db's every time if you want, and copy the data over as the last piece of the decomission of the last version.   edit: oh also if no changes happen to the DB, you could just serve it up to the new server, and only rebuild when needed. (patch, upgrade, etc.)"
devops,35p7a8,dang_hillary,5,Tue May 12 19:57:42 2015 UTC,"DB on nfs   I'd bet perf would deteriotate.    or throw it on aws rds in the cloud   Erm, I can't. I need it local because sensitive data and latency.   or rebuild db's every time if you want, and copy the data over as the last piece of the decomission of the last version.   Doesn't that means downtime?"
devops,35p7a8,34895348573857348759,1 point,Tue May 12 21:00:14 2015 UTC,"mirror one to the new one. Sure the bake time sucks, but fuck it? there are 100 ways to skin that cat. Or copy when you backup to the new version, and cut over at a certain time of night. Doesn't matter."
devops,35p7a8,linuxydave,1 point,Tue May 12 21:01:24 2015 UTC,"What about a 'just-in-time' HA? I create new one with new conf, wait for old to replicate to new, switch the ha button to the new one, disable one? I'm not a db guy so if it sounds stupid, you know why."
devops,35p7a8,abisma,1 point,Tue May 12 21:07:24 2015 UTC,"you just build an entirely new server and retire the old one, and replace it while running via load balancer.   So that's kinda like using pre-baked AMIs on AWS."
devops,35p7a8,BannerDay,3,Wed May 13 11:34:26 2015 UTC,"If you have to change a component in your system, replace it with a new one. Don't apply change to an existing component. There are real benefits primarily around addressing configuration drift that can take down services or lead to deployment failures.   Chad Fowler wrote the following post which helped kickstart the concept: http://chadfowler.com/blog/2013/06/23/immutable-deployments/"
devops,35p7a8,BannerDay,2,Tue May 12 17:52:19 2015 UTC,we put this together last year on the topic trying to answer 6 questions about it: https://highops.com/insights/immutable-infrastructure-6-questions-6-experts/
devops,35p7a8,BannerDay,3,Tue May 12 18:30:51 2015 UTC,"We're developing Fugue for this purpose. It's in beta, currently on AWS. It goes beyond just immutable infrastructure, but that's a big part of it. www.fugue.it"
devops,35p7a8,deadbunny,1 point,Tue May 12 19:19:37 2015 UTC,"We are open sourcing things as we go. Credstash was the first and have cool tools we're planning on open sourcing soon and over time. The technology is complex and there's no monolith to open source, so we have to take it in a case-by-case basis as we continue developing at a rapid pace. Thanks for taking a look! EDIT: grammar!"
devops,35p7a8,mclellac,2,Tue May 12 19:32:27 2015 UTC,"Look up Packer.  There is an ecosystem around this in public cloud.  Netflix has been doing similar work to this, as well.  One benefit to immutable infrastructure is that you should version your AMIs, which allows you to roll back to previous versions in case you run into issues with a new deployment.  Here is Netflix's tool: https://github.com/Netflix/aminator  I live in the Windows ecosystem (in AWS, not Azure), so I basically have been doing this on my own using the AWS tools in PowerShell.  You don't need to be doing Linux to be immutable :)"
devops,35p7a8,kaydub88,1 point,Tue May 12 19:48:07 2015 UTC,"No, it's not open, but I'd be happy to discuss or answer any questions you might have.  If you're in the DC Metro area, I will be doing a talk about this work in a Meetup, too.  I've been meaning to get started w/ blogging to share my ideas, so if you have something specific I might be able to start with that :)"
devops,35p7a8,kaydub88,1 point,Tue May 12 22:00:51 2015 UTC,"Haha, ok!  I'll put it on my todo list to show how I've used Jenkins to orchestrate creating a fresh Windows API, do some simple bootstrapping on it, and then create an AMI of it for later use.  Hopefully it will be useful!"
devops,35p7a8,dang_hillary,1 point,Wed May 13 01:04:28 2015 UTC,"I've felt this way for some time, glad to see I'm not alone.  That said many applications will have to be completely re-architectured to take advantage though so it's not like config management is going anywhere in the near future."
devops,35oacb,aghrivaine,2,Tue May 12 04:12:50 2015 UTC,We have generally found that pretty much all monitoring-solutions-as-a-service tend to cost way too much when you start to have big amounts of data. For example with our 300 instances in AWS several options would cost over 30000 USD/month when our current setup with one Zabbix server and two Graphite/StatsD servers costs just a fraction of it and we have also a better automation than what any available MaaS could give us.
devops,35oacb,Garo5,2,Tue May 12 04:18:08 2015 UTC,Right on. How much engineering overtime do you spend keeping Zabbix and Graphite up to date?
devops,35oacb,Garo5,2,Tue May 12 04:35:31 2015 UTC,"Very very little. We have automated Zabbix with our Chef provisioning so that when ever we add new servers/VMs or services into existing VMs the configuration will automatically update Zabbix. We use MySQL running inside AWS RDS so that's also zero maintenance work.  Graphite/statsd is also really simple to operate, the only maintenance operations is to some times clear old metric keys which are no longer updated, which takes about five minutes per month or so.  Here are some statistics, first from Zabbix:   Number of hosts 423 Number of items 20585 Number of triggers 6499 Required server performance, new values per second 216.69   And from Graphite:   Distinct items/keys: 292027 Incoming udp packets per second: about 25000 at high load New values per second (individual packet can contain several values): about 80000"
devops,35oacb,Garo5,2,Tue May 12 05:22:19 2015 UTC,Here's btw one of my blog posts which touches the monitoring subject: http://www.juhonkoti.net/2013/04/19/how-to-establish-and-run-a-techops-team
devops,35oacb,dataloopio,1 point,Tue May 12 05:51:35 2015 UTC,"That cost estimate seems a bit high. Most cloud monitoring services start at approximately $15 per agent per month and scale down above a hundred instances. The maximum I'd expect you to be paying for 300 instances is $3000 per month, and probably less than that in reality with discounts etc."
devops,35oacb,Garo5,2,Tue May 12 06:32:48 2015 UTC,"That's true that you can get basic cloud monitoring for much less than 30000/month. That figure was from few more advanced solutions. One based its pricing on the amount of data the monitored servers transferred between them and another based on the amount of updates per second.  Just as an example, New Relic PRO costs 150 USD / host / month, which is in the same ballpark as my 30000 USD / month."
devops,35oacb,dataloopio,0,Tue May 12 06:48:48 2015 UTC,"Yes, New Relic has a bit of a crazy pricing model but they do something slightly different to what Zabbix / Graphite / StatsD are doing.  Our main competitors are Data Dog, Librato and Boundary which are more of a direct feature comparison."
devops,35oacb,pooogles,1 point,Tue May 12 06:56:18 2015 UTC,"We use Datadog, it's pretty pro.  I've given up caring about monitoring, everything just pushes time series stats to localhost which ends up in datadog in lovely graphs.  0 effort."
devops,35n4aw,Kasop,9,Mon May 11 21:30:50 2015 UTC,Hipchat server
devops,35n4aw,Hexodam,1 point,Mon May 11 23:12:52 2015 UTC,"Hipchat works well for us - image posting, some syntactic sugar, easy to create group chats, decent plug-in support, rest api,"
devops,35n4aw,shwash,1 point,Mon May 11 23:24:33 2015 UTC,Hipchat server ftw
devops,35n4aw,SRTThrowAway1337,8,Thu May 14 21:30:40 2015 UTC,"For tech only folks: irc (inspircd is great)  For a mixture of tech and non tech: slack, or hipchat"
devops,35n4aw,dbizl,4,Mon May 11 23:30:30 2015 UTC,"Need a virtual war room solution that can be installed on an internal network (linux).   So, I guess that rules out slack."
devops,35n4aw,merreborn,1 point,Tue May 12 00:27:32 2015 UTC,"Ah yea, my bad. Missed that part."
devops,35n4aw,dbizl,3,Tue May 12 03:01:22 2015 UTC,irc with unreal IRC if you need
devops,35n4aw,jjasghar,5,Mon May 11 21:50:52 2015 UTC,"Hipchat server works well. Just be sure to warn people (and adjust settings accordingly): by default, it logs all the chats in multi-person rooms and doesn't log any 1:1 chats. That might be fine (useful for providing post-mortem investigation reports!) but people should know that up front. :)  Edited to fix dangling parenthesis"
devops,35n4aw,castillar,3,Mon May 11 23:36:53 2015 UTC,Openfire and/or IRC
devops,35n4aw,MikeWaz0wski,3,Mon May 11 23:49:38 2015 UTC,"Since everyone has already said hipchat and irc, I'd like to bring up an up and coming federated chat solution. It's real power is in its eventually consistent federated chat, but even standalone is pretty good.  http://matrix.org/ https://matrix.org/beta/#/room/#matrix:matrix.org  I also want to point that for a chat room to be more effective than email, you need to be able to access it from outside your network, off of your vpn. If your motivated employees can only access your chat system while on the vpn or network, than they are going to use it much less. Slack gets used because people put it on their phone, their laptop, maybe leave a tab open with it running on their chromebook. Sure, to do ""real work"" they have to connect, but if it's on their phone, they can respond to questions at any convenient time, and not just when they ""log on"" for the day."
devops,35n4aw,soawesomejohn,2,Tue May 12 00:24:42 2015 UTC,Hipchat would be your best bet since its pretty open.
devops,35n4aw,iwifia,1 point,Mon May 11 23:42:23 2015 UTC,thanks all.  yeah - irc is good for the tech folks but would be a turn off to the rest of the team (and so ever get full traction).  Would love to be able to use Slack.  Going to check out Hipchat as a close second.  Matrix looks cool but probably also outside of our use case - since we'll be limited to solutions that require VPN for outside users.
devops,35m5kq,mattstratton,2,Mon May 11 17:15:07 2015 UTC,"I missed last year, excited to attend this year"
devops,35m5kq,ScreenAdept,1 point,Mon May 11 23:25:52 2015 UTC,We definitely are interested in new voices; if you've never presented before we want to hear from you!
devops,35lnki,analytically,2,Mon May 11 14:55:28 2015 UTC,"Mostly useless self promotion.  Fake layer 7 inspection to address ""ddos"", when 1) most ddos issues are far up the stack, and 2) really layer 7 inspection products exist and are far, far better than bullshit whitelisting.  This type of lame hack hurts the industry because some newcomer is going to deploy it and tell their boss they've planned for DDOS attacks, then they'll get hit, the business will be hurt and some kid is out of a job."
devops,35lnki,maybenotpoor,1 point,Mon May 11 15:53:09 2015 UTC,couldn't agree more.   This setup won't mitigate a DDos attack from saturating your uplink.   Leave the DDos protection to the big boys like cloudflare or prolexic
devops,35lnki,hijinks,1 point,Mon May 11 16:02:03 2015 UTC,https://github.com/analytically/haproxy-ddos/blob/master/haproxy.cfg.tpl#L35 - it's meant to be used behind CloudFlare
devops,35lgm6,geercom1,1 point,Mon May 11 13:55:31 2015 UTC,Nothing to say about devops?
devops,35jhv7,jhand24,2,Sun May 10 23:46:34 2015 UTC,"Honestly, if your use case can be mapped on cassandra, switch to cassandra. It is redundant, pretty easy to operate and just scales more than you need to.  Few bytes per day on 2 nodes (our test cluster), 10 gig per day (current monitoring), several petabyte in an hour (what our lead monitoring guy used at his previous job as an incoming buffer for a system). Cassandra doesn't care. And if she cares, give her more hardware. She's an amazing free database if you use her right."
devops,35igdr,jmswlms,15,Sun May 10 18:16:07 2015 UTC,"Thanks for posting!  Can you provide a comparison of this product to the millions of other in the same space, especially the heavy hitters such as Nagios, Zabbix, and Sensu?  At a glance I see a pleasing UI, but not any power-features that would convince me to move away from the aforementioned established communities."
devops,35igdr,rickatnight11,2,Sun May 10 19:05:42 2015 UTC,Is there a demo for this?  Looks pretty cool.
devops,35igdr,jmreicha,2,Sun May 10 19:38:26 2015 UTC,"Looks cool, hopefully it doesn't go paid."
devops,35igdr,Windowsfanboy,1 point,Tue May 12 20:12:15 2015 UTC,Interested. Signed up for beta wait list. How does it hook into the existing players such as Zabbix or Nagios?
devops,35igdr,chiisana,1 point,Mon May 11 04:38:12 2015 UTC,"99% of shops will already be using something else, most likely Nagios/Icinga, Munin, Cacti, etc. I see new slick monitoring services pop up all the time but my question is always the same:  Is it worth putting X hours migration from other stable and proven tools to this new thing? It sure does look prettier than Nagios and Cacti. But do I trust it to monitor mission critical services, when Nagios has been doing its job for years?"
devops,35igdr,soup_feedback,1 point,Mon May 11 15:16:19 2015 UTC,OP hasn't even bothered to come back and answer questions.  I wish this subreddit was something other than a marketing dumping ground.
devops,35gqfs,jmswlms,5,Sun May 10 04:45:58 2015 UTC,I'm usually lazy and just do ssh host -t htop for single machines.
devops,35gqfs,coffeesounds,1 point,Sun May 10 07:03:18 2015 UTC,This also could work well as an motd.
devops,35an3j,Devtotheops,2,Fri May 8 14:45:28 2015 UTC,"I just looked at the slides so I'm not sure what the thesis was of the talk, but it seems like they are saying that docker is not the right tool for the job or that it's too immature for production.  But according to another bullet point they are saying that if you can't think of a reason that using docker is necessary you aren't thinking hard enough.  Here are some use cases that I think make docker great:  1: you want to install some software in your server that has a lot of dependencies you don't want.  Just install it all in a container and you don't have to worry about the dependencies polluting other stuff in the system.  2: you are developing an application that depends on a bunch of server software applications which run on independent server instances (physical or virtual) in production.  You can check in a bunch of docker files to source control and have developers each have a production replica in containers on their development systems.  This can be improved even more with vagrant by running the containers in the same os as the production server.  This should help to reduce or eliminate the ""not a problem on my machine,"" problem.  There are many more use cases and as docker matures there will be many more."
devops,35an3j,allThatSalad,2,Fri May 8 17:59:00 2015 UTC,"I just looked at the slides so I'm not sure what the thesis was of the talk, but it seems like they are saying that docker is not the right tool for the job or that it's too immature for production.   It was a pretty wide-ranging talk that went from very conceptual ideas to technical specifics, so I can imagine that there were some seeming contradictions in places ;-) Thanks for making it through!  The overall idea, if I try to summarize it in a couple of bullet points, would be something like:   We should think (more) about delivering value and functionality to our users as being the goal or our software development and delivery efforts, not implementing or optimizing this or that technology Iterative, incremental improvement using Agile/CD/Devops is perhaps the best approach we've found so far for doing this. ""Tech for the sake of tech"" is an anti-pattern that we should avoid In parallel to the user-focused improvement of existing systems, we need to create opportunities for R&D where teams can investigate The Next Big Thing, because incremental optimization plateaus after a period of time. But this needs to be research, with a decision to move forward with adoption based on awareness of the cost/benefit tradeoff    But according to another bullet point they are saying that if you can't think of a reason that using docker is necessary you aren't thinking hard enough.   I assume you're referring the following quote from Dan McKinley here?  ""If you think you can't accomplish your goals with what you've got now, you are probably just not thinking creatively enough.""  What I actually had in mind here was that, as Dan points out (not in the context of Docker specifically, but more generally), quite often the problems that people I've spoken to bring up as their reasons to use Docker could have been solved using their existing tech stack too...just that that wasn't a technically very interesting choice because they really wanted to try Docker.  I don't know what your production systems look like, of course, but we've used Vagrant (and other tools before that) for years now to allow us to create version-controlled local environments that mirror production.  So yes, Docker can certainly also do that...but in general it's not necessary to use Docker (and to suddenly introduce a dependency on e.g. boot2docker for everyone in your company who runs OS X or Windows) for that."
devops,358dew,LooksForCats,0,Thu May 7 23:24:46 2015 UTC,"That sounds... Like no fun at all.  Fuck chef and your Java code and use ansible.  Sorry, but I see 'databags' and get nothing but douche chills.  Containerize everything and build out a platform ASAP.  What is this the 90's?!  God speed!  I'd be looking for a new job tomorrow!"
devops,358dew,gregr401,2,Fri May 8 04:53:03 2015 UTC,"Fuck chef....use ansible.   What is Ansible going to provide that Chef can't?  I'm not looking to start a 'CM' debate but swapping out one CM brand for another will do nothing but create tech debt and saturate the project with WIP.   We have 20,000 lines of java code with a small database backend that tries to automate our environment standup.....We can only deploy a tiny fraction of our code base in this manner and very little of the infrastructure is integrated.   CI/CD seems impossible with this foundation.  Let me guess, NoOps?"
devops,358dew,linusHillyard,1 point,Fri May 8 13:01:12 2015 UTC,"The plan is to have very limited ops...  The Java code is our orchestration piece. We probably should have gone with a Rundeck in hindsight.  The idea was to be able to use this software to stand up shards of the environment (LB, DB, Cluster of app servers)  for developers to test with."
devops,358dew,alazyreader,2,Fri May 8 14:06:43 2015 UTC,"20,000 lines of java... for building an environment? That seems a little nuts."
devops,358dew,mattstratton,2,Sat May 9 00:25:56 2015 UTC,"Trivia - ""databags"" don't come from what you think. Original name was ""bags of holding"" because Adam is a D&D nerd.   Also your post makes no sense. Yes, all that wacky Java code really makes me get chills too, but frankly I have no idea why so much would be implemented in custom Java when it could be done in much simpler Chef code. This sounds like fighting the tool."
devops,358dew,gregr401,1 point,Sat May 9 00:54:58 2015 UTC,"Might have just been a drunken rambling :)  I do wonder what their 20,000 lines of java code is doing as well, that's the premise of using a tool like chef or ansible.  Minimal bootstrapping around those tools should be necessary, for AWS or openstack.  GL!"
devops,358dew,mattstratton,1 point,Sat May 9 03:11:12 2015 UTC,+10000 bajillion to this.
devops,358dew,atm0sphere,1 point,Sat May 9 12:57:36 2015 UTC,How do you store differences between dev test and ops?
devops,358dew,atm0sphere,1 point,Mon May 11 15:46:22 2015 UTC,"+1 for the trivia  The java code does extracts from the database and manipulates it into json for the databags.  The idea is that the database holds generic information about the apps, dependencies, and a mapping to host templates.  The goal being to know the application and infrastructure dependencies before provision time."
devops,358dew,Basecamp88,1 point,Sat May 9 20:46:01 2015 UTC,"so like...  you'd run the java against a development/qa/prod database, then stand up a development/qa/prod environment around the context retrieved? shudder"
devops,354eb5,running101,2,Thu May 7 00:34:54 2015 UTC,"I have to agree with /u/muffinz0   You seem like you want the supervisor gig, so maybe that's what you should go for. You can bring ""devops"" to any position in any department. That is, continue doing what you're doing with automation and dedication.  And, Databases are one of the hardest parts of ALM -- even with containers, puppet, chef, etc. Database change management is a ripe and ready problem domain.  What you need to ask is this:  What is DevOps, specifically a devops engineer at my org?  In an ideal world, DevOps can recruit and tap into any department. If you're a ""big org"" you might need to go the GE route with a ""special teams"". But, what is for certain is ""DevOps Engineer"" isn't very descriptive; it's about as vague as ""Network Admin"".  I'd talk to whomever your direct report would be and also ask yourself: Why can't I be a DBA and participate in DevOps?   DevOps is just a word. Sometimes, it can even be a harmful word since it comes with so much baggage. The fact you have good social capital, a history, and drive put you in a good position to make an impact regardless of your title. Perhaps, the supervisor position will give you more authority/buy-in power/clout to achieve your goals? I don't know your org, but you do.  Don't forget! The #1 reason people report being happy at a company is their boss. So, keep that in mind!"
devops,354eb5,gospelwut,1 point,Thu May 7 12:53:49 2015 UTC,"If ultimately you want to move into a manager type role, the DBA Supervisor would help you more in your career. It boils down to what aligns with your career goals more. Personally, I'd shoot for the Devops Engineer role because I would enjoy that more. Whichever way you decide to go, good luck!"
devops,3567y1,NanoServer,1 point,Thu May 7 13:20:48 2015 UTC,I'm new to the whole DevOps discussion. Been a system admin for 8 years now. Is DevOps a major undertaking in skill advancement?
devops,3567y1,patternpaul,1 point,Thu May 7 13:23:59 2015 UTC,"Well here's the thing; the DevOps movement does not fully understand what DevOps should be exactly. Sure you could go out an learn a bunch of tools and patterns, but your implementations may lead you further away from the original goals of DevOps: removing organizational silos (originally between Dev and Ops).   The way I've approached it is to implement tooling/patterns/process that falls in line with the #1 metric that is correlated with organizational success: Job Satisfaction (or my interpretation: Employee Happiness) as noted by the yearly DevOps report https://puppetlabs.com/sites/default/files/2014-state-of-devops-report.pdf . As a simple example: You could implement a build system that has an underlying ""shaming"" component to ensure quality control OR you could stitch your tooling and build systems to guide teams into doing the right thing. This will eventually have many side benifits like code reviews that discuss things like ""does this provide value to our customers?"" instead of shitty conversations like ""you're not following our naming convention!"", like quick on boarding of new team members/employees and many other benefits.   I love doing ""DevOps"" because I can come into work and put things in place that will make my peers happy and excited to come to work whether it's devs, ops, QA, BA, PMs or any other key stakeholders."
devops,3567y1,patternpaul,1 point,Fri May 8 03:15:31 2015 UTC,Side note: reach out to me if you want to discuss more.
devops,356k75,Devtotheops,9,Thu May 7 15:04:12 2015 UTC,"So the example of a good release management tool that was outlined in this article was so good that it was discontinued?   Three months after publishing this article they published a summary of why there wasn't a market for their product and why they were discontinuing it, which also seems to basically admit that there isn't really a place for this mid-level subset of provisional/release tasks in any real world infrastructure http://zeroturnaround.com/blog/goodbye-liverebel/"
devops,356k75,markrebec,1 point,Thu May 7 15:56:26 2015 UTC,"Mesos/Marathon is what we use. Ansible to provision and configure our platform, then jenkins deploys direct to marathon via the rest api."
devops,356k75,simonvc,6,Fri May 8 09:22:35 2015 UTC,"The article seems to confuse provisioning, cfm, and orchestration tools. I'm also curious why Ansible was lumped in with Puppet and Chef; Ansible is pretty textbook orchestration."
devops,356k75,burning1rr,2,Thu May 7 16:13:21 2015 UTC,"Ansible does provisioning, conf mgmt and orchestration."
devops,356k75,steveElsewhere,2,Fri May 8 11:32:59 2015 UTC,This is the kind of marketing bullshit that needs to go away. What a shit article.
devops,3532tt,ldelossa,2,Wed May 6 18:17:57 2015 UTC,"I know that we automated a bunch of our Juniper switches (as far as access lists and ports go) using Ansible and Racktables at my last job, but I'm not sure that qualifies as software defined networking."
devops,3532tt,superspeck,1 point,Wed May 6 20:11:03 2015 UTC,"Not exactly, still very cool tho. What's the details of doing this with Antilles?"
devops,3532tt,superspeck,1 point,Thu May 7 07:20:40 2015 UTC,http://www.juniper.net/techpubs/en_US/release-independent/junos-ansible/information-products/pathway-pages/index.html
devops,3532tt,burning1rr,2,Thu May 7 12:55:04 2015 UTC,"Openstack users seem to be using SDN most reliably. Right now, I think that is the best approach rather than trying to do SDN on real hardware."
devops,3532tt,devicenull,5,Wed May 6 21:29:09 2015 UTC,Openstack reliable?  Maybe if you have an entire department dedicated to doing battle with it.
devops,3532tt,cryonine,1 point,Thu May 7 00:56:02 2015 UTC,"It's reliable provided you use a manager to actually setup and deploy your environment.  We have OpenStack in production and it's hands off at this point.  There's some finickiness here and there, but it's solid overall.  It's very rare we ""do battle"" with it these days."
devops,3532tt,expressadmin,2,Sun May 17 15:36:29 2015 UTC,"Openstack does have a plugin architecture that it can use to talk to hardware. It is supported by many vendors including arista, Cisco, juniper, etc.   The basic idea is that you use Openstack to handle assignment of things like vlan id's and then push them into the hardware where it handles things like trunk filters and port assignments.  There is also some neat architecture involving vxlan and geographic routing and fault tolerant data centers but I am not that deep into it yet to fully understand how it all works but Arista has some whitepapers on it."
devops,3532tt,mthode,2,Wed May 6 22:54:58 2015 UTC,"Openstack is a beast, but one I do want to tame. I'm thinking of adding one of the books to my shelf in order to really get an idea of what I'm doing with that monster."
devops,3532tt,mthode,1 point,Thu May 7 07:22:50 2015 UTC,"I'm using vxlan/ml2 right now, nothing big though, just my closet."
devops,3532tt,hc000,1 point,Thu May 7 01:51:19 2015 UTC,Whats your lab looking like? I know vxlan but not so much Neutron/ml2 - I'd love to get an idea of what starting to play around with this would entail.
devops,3532tt,simtel20,1 point,Thu May 7 07:33:13 2015 UTC,"it's just a few hosts, ml2 / linuxbridge / vxlan, the SDN portion is all for guests (of nova), don't know how much there is to say about that."
devops,3532tt,adjohn,1 point,Thu May 7 13:28:44 2015 UTC,Wouldn't you have to be using open standards and non vendor switches/ routers for this?
devops,3532tt,adjohn,1 point,Wed May 6 20:56:49 2015 UTC,You'd have to pop in an openvswitch into the hypervisor that tags vxlan or use vmware nsx which basically does the same thing
devops,3532tt,devicenull,1 point,Wed May 6 22:32:15 2015 UTC,Nsx is a royal pita.  If you can have something easier to manage like contrail I'd suggest starting there.
devops,3532tt,detiber,2,Thu May 7 04:41:05 2015 UTC,Check out midonet recently open sourced overlay for OpenStack.
devops,3532tt,neoice,1 point,Thu May 7 08:46:02 2015 UTC,Dude...this looks pretty solid. I'll do some reading about this.
devops,3532tt,neoice,1 point,Thu May 7 17:00:14 2015 UTC,"If you want some help, we have a great community on Slack at http://slack.midonet.org"
devops,3532tt,cerettala,1 point,Thu May 7 17:57:58 2015 UTC,Is it really? Haven't worked with it much just yet. Open Contrails looked awesome but I read about it about a year ago
devops,3532tt,cerettala,1 point,Thu May 7 07:17:47 2015 UTC,"I like the idea of having all my host's on the same layer two network   My understanding is this is not a good idea.  We're actively making changes to reduce the size of our layer two networks.  Problems we have seen:   ARP table limitations in switches (~16k entries IIRC) Tons and tons of broadcast spam (we're up to like 30kbps of ARP spam) ARP table versus mac table conflicts (the actual router has an ARP entry, but it's expired in a downstream switch.  The downstream switch proceeds to broadcast all the received packets to every port... fun during DDOS attacks)   We've eliminated the layer 2 network between VM guests, and it's been significantly more reliable and less noisy."
devops,3532tt,cerettala,1 point,Thu May 7 00:54:46 2015 UTC,"You're in a large environment however. For small deployments which are never going to have to worry about Mac issues,it could be beneficial"
devops,3532tt,cerettala,2,Thu May 7 04:20:38 2015 UTC,Even in larger environments an SDN can provide a single network subnet across multiple locations without acting like a traditional L2. It all depends on the implementation.
devops,3536u3,dustinmm80,4,Wed May 6 18:49:22 2015 UTC,"From my personal history, I did find out that talking to non-technical people solve a lot of problems.  I used to be a smoker, and smoke breaks for a sysadmin were the perfect time to actually learn about pain points in an organization.   People would approach you in a more relaxed/casual setting and mention in passing ""oh yeah, we have this really difficult problem but we know you guys are quite busy dealing with project X so we just worked through it"".   Turns out their problem was actually not too hard to solve, increased work visibility inside the org and made everyone more productive.  Talking to sales, PAs, administration was actually an eye opener. They had problems we wouldn't even begin to fathom that for us would be trivial so we wouldn't even consider it. On the other hand some things we thought they'd be concerned about turned out to be complete non issues, reducing a lot of our after hours work in the process."
devops,3536u3,batouchu,2,Wed May 6 23:33:54 2015 UTC,"This seems pretty like a pretty common attitude from the non-tech folks, that we're too busy to talk to.  I mean, we don't want to be constantly be pulled off task but I think setting expectations and being available at least for some agreed-upon time is important"
devops,351vtp,geercom1,1 point,Wed May 6 12:32:04 2015 UTC,"Another happy company converted through the software salvation of DevOps. A coincidence? No! If you don't agree, man or woman up and post your argument against DevOps (or for it) here!!!"
devops,34y59c,huopak,2,Tue May 5 15:10:53 2015 UTC,"This can break stuff because you're overwriting old assets with new assets.  It would be better to use a symlinked directory and swap the link, then issue a reload to nginx so it picks up the new link destination or something along those lines."
devops,34y59c,Alsmack,1 point,Wed May 6 00:58:30 2015 UTC,"Interesting read, I'm still trying to figure out the best deployment strategy that enables easy rollback (currently doing the whole symlink deal, though mostly Python based rather than PHP)."
devops,34y59c,simoncoulton,1 point,Wed May 6 00:50:08 2015 UTC,Goes without saying but all final assets should have content-dependent naming to avoid caching issues.
devops,350872,69WayneGretzsky69,6,Wed May 6 00:48:46 2015 UTC,"Why do you want to get into DevOps, what are your career goals?  Try to get to a DevOpsDays near you this year, they are great for any level. http://www.devopsdays.org/"
devops,350872,dustinmm80,6,Wed May 6 02:14:58 2015 UTC,Go to local conferences and meetups. Devops is more of a philosophy than it is a set of technologies or a job title.
devops,350872,superspeck,2,Wed May 6 02:30:09 2015 UTC,Close your eyes and think pretty thoughts.
devops,350872,linusHillyard,2,Wed May 6 01:00:56 2015 UTC,"You don't choose DevOps, DevOps chooses you. :)   That's a joke, but there's more truth to it than you might think."
devops,350872,9to5traveler,2,Wed May 6 04:47:11 2015 UTC,"Ideed. I came here to say that devops is really about people caring for their job and showing pride in what they do. At least from my perspective, devops means that you will not let any problem stop you from doing your job. It means you're not happy with the status quo, you're not satisified that the systems are ""just working"". You want them to work better. You want your co-workers to work more efficiently, and you want yourself to have less work in the future."
devops,350872,stemid85,3,Wed May 6 05:13:53 2015 UTC,Devops is about creating solutions for (usually) unique development and operational environments.  It's heavily conceptual and requires years of experience understanding people and process so if you are unable to determine 'how to get into devops' on your own then I don't believe DevOps is where you should be starting.
devops,350872,Devtotheops,1 point,Wed May 6 03:14:26 2015 UTC,Here is a guide to getting started in the DevOps community.   http://blog.xebialabs.com/2015/04/23/best-guide-to-getting-started-in-devops/
devops,34u86q,WestCoastJustin,2,Mon May 4 16:34:26 2015 UTC,I'm interested in the concept of zero outage deployments. However I havn't been able to sort out how to manage a database change as part of the deployment.
devops,34u86q,t0c,1 point,Tue May 5 10:49:55 2015 UTC,"Depends on the db I guess. But for mysql check out percona toolkit. Tools like pt-online-schema-change, I think that's the name, can do live migrations"
devops,34u86q,t0c,1 point,Tue May 5 12:20:41 2015 UTC,Can it handle the scenario where one server is pointing to the new tables / columns / data and the old server is pointing to the old set of columns / tables / data?  I'd imagine zero outage deployments aren't really that much use on a day-to-day basis without fixing the database issue. The ideal scenario would be to be able to deploy a new version of a CRM during business hours and have something like session persistence voodoo in the load balancer (so that users currently processing a case use the old setup until their session expires and they can use the new setup) and some kind of voodoo magic in the container so that the database modifications you make don't affect the old version that is still running.
devops,34u86q,cstoner,1 point,Tue May 5 13:47:32 2015 UTC,"It can only do online changes. Basically copies the tables, applies the schema changes, then moves it in place of the old one. It's dangerous and can mess things up, but when done right it works. Your code will have to be able to handle the two schemas. Since you're deploying a CRM, it's likely not going to happen."
devops,34t5nc,eto303,3,Mon May 4 10:21:03 2015 UTC,"You can fully automate Nagios monitoring using exported resources and PuppetDB under a Puppet config management environment, I'd be surprised if you can't realise something similar using Ansible."
devops,34t5nc,tcp22,2,Tue May 5 01:57:50 2015 UTC,Have you looked at Riemann? http://www.riemann.io/ Decent docs and a friendly community.
devops,34t5nc,justabofh,2,Tue May 5 22:49:17 2015 UTC,"If you're looking for an open source solution, try setting up influxdb or opentsdb (into which you can push data) and grafana (which can be used to visualize the data).  Otherwise try OpsDash http://www.opsdash.com/, which has agents that you can deploy to any node (through ansible, in your case) that will gather system metrics and send to a central server (where you can see a per-node dashboard)."
devops,34t5nc,jmswlms,1 point,Thu May 7 11:11:09 2015 UTC,"You can use sensu, or a cloud friendly monitoring system like zabbix?   Sensu will do exactly what you want, you starting sending it metrics and will automatically register the box. Sensu can accept nagios checks so the barriers are low to switching."
devops,34t5nc,resno,1 point,Mon May 4 11:15:17 2015 UTC,"Take a look at Nagios' update called Naemon. Then look for something called Gearbox, which apparently turns Naemon/Nagios into a distributed monitoring system. Personally, I haven't been able to find time to set up a POC with Gearbox, but thew concept looks kinda interesting."
devops,34t5nc,zishmusic,1 point,Mon May 4 12:30:03 2015 UTC,"New Relic is a good 3rd party product for this.  You just enable agents (agents need your unique licence key) and they start sending traffic to NR servers and they appear on the site immediately.    Their free product will do unlimited number of standard server monitors like disk and memory and they have paid upgrade to plugins for things like php and java.    We use the php plugin for a handful of high value servers to get really nice metrics into timing of particular pages, db queries, client side components etc.    Our setup is all puppet driven, if a node has the NR profile it gets the package, config, necessary firewall rules and starts sending metrics.   I don't use ansible but I assume there are company or community based modules for NR already."
devops,34t5nc,grumble_au,0,Mon May 4 14:04:40 2015 UTC,"A relatively new option is happyapps.io, basically the same uptime monitoring functionality of Nagios without the constant alerts of Nagios (a majority of which are false alarms)."
devops,34t5nc,genbcap,-1,Tue May 5 21:37:59 2015 UTC,"Hi,  Are you only interested in open source monitoring tools?  If not, have a look at Tellki: http://tellki.com:  •   Easy, fast and centralized monitoring setup for your servers, DBs, Apps and sites.  •   Deploy any monitoring for 1, 10, 100 or more than 1000 servers in seconds.  •   Custom monitoring: write your monitoring scripts, immediately test on your servers and check the result - all from the web browser.  •   External monitoring: check your sites, APIs and Apps from different locations around the world using our public agents  •   Comprehensive alerting: instant email and sms notifications. Run corrective actions. Own, disown and annotation operations. Define user instructions and customize messages.  •   Visualize & Analyze: real time fully customizable operational board and dashboards. Compare any metrics/servers/apps with our trending analytics reports.  •   Integrate and monitor Amazon CloudWatch metrics, Google Analytics statistics and DigitalOcean Droplets.  •   Automation: create schedulers in order to automate recurring tasks.  •   Android and iPhone Apps: real time push alert notifications. Start corrective actions. View all your metrics in real time.   Also if you interested, we can arrange an online demo."
devops,34tq1i,geercom1,-1,Mon May 4 14:10:51 2015 UTC,"Hey, Scrum & DevOps together forever? Am I wrong? Weigh in and prove it!"
devops,34ti7t,drawsmcgraw,1 point,Mon May 4 12:57:05 2015 UTC,"Being fairly new to image creation in general, seeing this:  ...uses a qcow2 feature which is not supported by this qemu version: QCOW version 3    Was completely alien to me. This article explained to me enough on 'why' as well as how to get around it."
devops,34lq97,WestCoastJustin,1 point,Sat May 2 07:27:51 2015 UTC,Nice. Ansible is nice!
devops,34k3pw,fartbone,3,Fri May 1 21:01:03 2015 UTC,"I've run both of them and find that Flynn is more flexible both in deployment and applications that you can deploy. Deis is a strict Heroku workflow (sans add-ons), if you are used to that tooling and are familiar with CoreOS it can be easy to pick up. Flynn has add-on services (Postgres at the moment) and allows for TCP routes. Deis only allows http routes at the moment.  With that said what's your use case and where would you be deploying it?"
devops,34k3pw,viglesiasce,1 point,Fri May 1 23:24:36 2015 UTC,"My use case is pretty bog simple - Getting off of heroku and starting to run my own paas. I don't need to support TCP. I do want to use addons though - part of moving to my own platform is to be able to independently run and upgrade postgres/redis/elastic search/ect.  I'm planning on deploying on ec2, although that's only because it's the most popular.   My background is a lot of linux experience, but very little devops or automated provisioning. Haven't played with coreos/docker"
devops,34k3pw,viglesiasce,2,Sat May 2 15:48:42 2015 UTC,Id definitely recommend checking out Flynn first. It runs on Ubuntu so you don't need to learn CoreOS.
devops,34k3pw,ribo,1 point,Sat May 2 19:39:39 2015 UTC,Awesome - thanks for the advice.
devops,34k3pw,ribo,3,Mon May 4 15:07:07 2015 UTC,"I've had better luck just straight up using CoreOS.  Unit files aren't that hard to deal with, and I ended up using deis's ceph units for situations where I needed shared persistent storage."
devops,34k3pw,dinfarfar,1 point,Sat May 2 04:07:49 2015 UTC,Do you think it's worth learning CoreOS before making a decision on the two of these?
devops,34k3pw,dinfarfar,1 point,Sat May 2 15:49:17 2015 UTC,"Well, I guess up to a point where you feel like it can be part of your decision.  It's easy to get rolling with a small cluster on vagrant."
devops,34k3pw,autowikibot,2,Mon May 4 16:27:55 2015 UTC,"Why not give Cloud Foundry a go? There is a lot of movement in the project, rock solid[1] and you can also run Docker images in it[2]  [1] Our deployments serve 100s r/s, is used by 100s of devs, running 100s of apps. More or less without any issues for a year.  [2] https://github.com/cloudfoundry-incubator/docker_app_lifecycle"
devops,34ilr1,absh88,3,Fri May 1 13:46:16 2015 UTC,With the advent of the free SSL Cert providers I think it is a great idea. The goal is not to verify ownership but to guarantee encryption.
devops,34ilr1,vitiate,2,Fri May 1 16:59:25 2015 UTC,"If you're talking about LetsEncrypt, they will be verifying domain ownership. The API will involve the web server publishing some content, or a dns record which the CA automatically verifies before issuing the certificate.  Encryption without authentication is pointless."
devops,34ilr1,FakingItEveryDay,1 point,Sat May 2 13:34:18 2015 UTC,What's the point then if the stream can be intercepted without the end user's knowledge anyway?
devops,34ilr1,bennysaurus,3,Sat May 2 06:04:41 2015 UTC,Definitely need DANE based DNSSEC certificates asap and kill the commercial element on this asap
devops,34ilr1,Deku-shrub,2,Fri May 1 17:12:07 2015 UTC,"I get that we want to avoid spying eyes, but not everything is worth protecting that way. For one-way access of publicly available content, there's not much practical benefit to encryption. If we want to talk about state-level actors building profiles and whatnot, let's start by admitting that a free SSL cert isn't a real solution to somebody who can force major network carriers to give them access.  Now, if you have a login session to protect, absolutely, switch to https. But if you're just watching a funny video, what benefit is there in preventing it from being cached?"
devops,34ilr1,Kaligraphic,1 point,Sat May 2 03:03:45 2015 UTC,Benefits include making sure you're getting that cat video rather than whatever my arp-spoofling laptop decided to serve you instead.  Other benefits include blocking ISPs from injecting cookies and ads into your browsing session.
devops,34ilr1,FakingItEveryDay,1 point,Sat May 2 13:37:06 2015 UTC,"For one-way access of publicly available content, there's not much practical benefit to encryption   There are many:   Stops ISPs injecting ads Stops session being hijacked to an arbitrary site and having other site's secure cookies stolen via MITM Stops passive deep packet inspection spying programmes   Plain text HTTP is so insecure and it reduces the security of the overall browsing experience.  There are also emerging https caching technologies such as Cloudflare and other CDNs, but it requires the website scale out any caching rather than an ISP intermediary."
devops,34ilr1,Deku-shrub,2,Sat May 2 19:33:33 2015 UTC,"US government and other entities have completely infiltrated CA organizations. The only thing SSL helps is MITM vulnerabilities. You still have no idea if you're being intercepted by places like Imperva, Cloudflare or other SSL aggregators that inspect ALL YOUR FUCKING PACKETS, EVEN SSL ONES. Plus CAs will hand out a cert at the drop of a hat to any federal institution, so the ability to MITM any website is easy for them.   SSL is completely broken and only fixes ""low level"" inspection. It does not fix government intrusion, or an actor that figures out how infiltrate places like Imperva, Cloudflare or other WAF factility.  Internet is broke."
devops,34ilr1,cyberflunk,1 point,Fri May 1 22:01:47 2015 UTC,"With https://letsencrypt.org/ around the corner, who cares?"
devops,34ilr1,DetrimentalDave,1 point,Fri May 1 23:09:57 2015 UTC,"I don't see the point. There are some cases where encryption doesn't make sense, such as in the case of academic content intended to be distributed widely."
devops,34ilr1,unconscionable,2,Fri May 1 21:02:17 2015 UTC,"I agree with this, the argument seems to be that there are too many people not using SSL when they should -> everything should be SSL.  For cases like the one above, what is the benefit?"
devops,34ilr1,dustinmm80,-2,Sat May 2 00:05:15 2015 UTC,"This is the best tl;dr I could make, original reduced by 81%. (I'm a bot)     After a robust discussion on our community mailing list, Mozilla is committing to focus new development efforts on the secure web, and start removing capabilities from the non-secure web.  Setting a date after which all new features will be available only to secure websites Gradually phasing out access to browser features for non-secure websites, especially features that pose risks to users' security and privacy.  Removing features from the non-secure web will likely cause some sites to break.     Extended Summary | FAQ | Theory | Feedback | Top five keywords: features#1 web#2 non-secure#3 new#4 Http#5  Post found in /r/sysadmin, /r/linux, /r/firefox, /r/mozilla, /r/newsokur, /r/devops, /r/webdev, /r/netsec, /r/technology, /r/privacy, /r/hackernews, /r/techtalktoday, /r/conspiracy and /r/realtech."
devops,34i9v3,Drache,2,Fri May 1 11:43:35 2015 UTC,"I suggest Chicago, but I'm biased. Either would be amazing!  Also, CFP's for Chicago are opening today. You should submit a talk; that might be a deciding factor ;)"
devops,34i9v3,mattstratton,2,Fri May 1 16:06:26 2015 UTC,"I attended Chicago's last year and will be attending again this year, yes it's worth it.  Probably the best 'bang for the buck' DevOps conference your company can provide you in the mid-west."
devops,34i9v3,linusHillyard,1 point,Fri May 1 18:04:51 2015 UTC,50 early bird registrations apparently just went on sale. Currently 47 of them left.
devops,34hgih,jmreicha,2,Fri May 1 04:34:00 2015 UTC,"I do dev and ops for an email marketing / lead generation company, we record application stats in graphite, things like number of emails sent, number of leads transmitted to clients and the response codes, time for cron jobs to complete, rabbitmq / mysql work queue backlogs etc. All server monitoring we leave to a dedicated solution like zabbix / new relic / opsview  To allow easy alerting on this data I created some scripts to pull the data from the graphite web api and push it into zabbix-sender so we  can monitor and alert on it as required."
devops,34hgih,chemicaloliver,2,Fri May 1 22:51:50 2015 UTC,"We have been using some of the basic:  LoadPlugin cpu LoadPlugin load LoadPlugin memory LoadPlugin load LoadPlugin disk LoadPlugin interface  I would HIGHLY recommend checking out Grafana, we just made the switch. http://grafana.org/"
devops,34hgih,flip387,1 point,Fri May 1 22:58:08 2015 UTC,Utilization metrics for every new feature as you build them. Login attempts and failures. Emails sent. Background jobs queued and completed
devops,34hgih,merreborn,1 point,Fri May 1 05:37:10 2015 UTC,load avarage/deploys/bandwidth etc... almost everything
devops,34gp0k,manager_dave,15,Fri May 1 00:18:42 2015 UTC,I try to be up by 6:30 but I tend to hit snooze once or twice. ;)
devops,34gp0k,Throwmetothewolf,3,Fri May 1 00:40:06 2015 UTC,I wish I could work at a place where 99.5 was acceptable. That's like 7 minutes of downtime per day  I usually strive for 99.99
devops,34gp0k,hijinks,3,Fri May 1 02:23:33 2015 UTC,"Heh. Two nines and a five is the line the CTO (and CTOs before him) have tried to set. That's without ever placing any priority on paying off tech debt, so instead we hit somewhere in the low nines."
devops,34gp0k,Daph,2,Fri May 1 08:50:37 2015 UTC,"Look at Pingdom for trailing twelve months, subtract 0.01%, tell Marketing team"
devops,34gp0k,original_evanator,2,Fri May 1 00:41:30 2015 UTC,"My application has a lot of leeway, but a different application at my company has a 99.99% SLA. It was hell on earth over there for a few years..."
devops,34gp0k,smitty1110,2,Fri May 1 02:24:23 2015 UTC,"B2b SaaS as well.  %99.95.  Honestly, hard to hit.  :("
devops,34gp0k,icheezy,2,Fri May 1 02:45:57 2015 UTC,Working for an agency. We promise 99.9% ... I'm trying to convince everyone to just sell 99%
devops,34gp0k,julian255,2,Fri May 1 03:32:25 2015 UTC,Three eights! I work in higher ed.
devops,34gp0k,stomith,1 point,Fri May 1 05:30:59 2015 UTC,"This is defined by business requirements. I meet with the executive team and set recovery point objectives (how stale the data can be) and recovery time objectives (how long it takes to recover) for each service. Usually the first thing I hear is 100% uptime, then you price that out for them and the cost makes them reconsider.  You start to work your way down to something that makes sense. At my last job, one service we set an objective for 99.99% uptime for a critical service and 99.8% on another less critical component of the application."
devops,34gp0k,rmirror,1 point,Fri May 1 08:41:36 2015 UTC,we define availability and reliability seperately. a > 90 % but r > 95 % so planned interventions don't  hurt so bad
devops,34gp0k,brucellino,3,Fri May 1 08:57:12 2015 UTC,90%?  That's days down a month...
devops,34gp0k,pooogles,1 point,Fri May 1 10:20:19 2015 UTC,"yep. there are several sites, so we hedge our bets. 90 % refers to a single site."
devops,34gp0k,brucellino,1 point,Sat May 2 13:35:27 2015 UTC,"Online code school, 99.9% availability"
devops,34gp0k,nathwhal,1 point,Fri May 1 13:23:19 2015 UTC,"We're shipping a virtual appliance, so dodged the bullet there.  That said, we have a pretty tight SLA for customer-reported bugs or questions:   1hr - acknowledgement 4hr - fix or technical estimate"
devops,34gp0k,dustinmm80,1 point,Sat May 2 00:00:34 2015 UTC,4 9s.  Haven't paid an sla miss in years.
devops,34gp0k,maybenotpoor,1 point,Sat May 2 23:13:59 2015 UTC,Ranges from 99.9 to 99.99% - this does not include scheduled outages.
devops,34h2w4,4r10r5,3,Fri May 1 02:22:25 2015 UTC,"So in brief:  a log is a textual representiation of the state of a system at a given point in time.  a metric is a measure of something, in the context of logs either a number that's been logged, or a measure of rate of logging.  a log exception is caused when a metric passes a threshold e.g: you log that X is currently Y and that's more than your threshold of Z.  an alert is caused by handeling the exception - e.g: send an email."
devops,34h2w4,sirex007,10,Fri May 1 02:28:09 2015 UTC,"A log (or more precisely a log entry) is an event, a record of something that occurred, observed, or declared.  It takes a collection of logs to represent a state of a system."
devops,34h2w4,soawesomejohn,2,Fri May 1 02:33:22 2015 UTC,"Probably more accurate to phrase it your way, yeah."
devops,34h2w4,sirex007,1 point,Fri May 1 03:07:20 2015 UTC,would my exceptions and metrics appear as log entries within the same collection? does tracking data appear in my logs?
devops,34h2w4,lunarsunrise,1 point,Fri May 1 03:29:49 2015 UTC,"To be more concrete about it, logs most often take the form of lines of text printed by a program; something like  printf(""Oh no!  Someone tried to log in from %s with the username %s but they didn't have the right password."", address, username);   They don't, actually, give you the state of the system at any point in time; they're more like a transcript, or a running commentary, on what the system is doing.  If well-designed, hopefully they can help you work out what the system producing the logs was doing.  Metrics, like other people have said, are measurements.  For example, you might record how many failed login attempts there were, or how many requests fail due to database errors.  If either number spikes, you would probably like to know!  These can be recorded directly, or can be produced from logs, e.g. by counting the number of ""Oh no! Someone tried to log in..."" messages."
devops,34h2w4,sirex007,1 point,Fri May 1 07:11:33 2015 UTC,"imho, i would say the point of a running commentary, (anywhere, not just IT), is to attempt to convey the state of a system. Weather you log it as a number or text is just convention and convienience for the later job of comprehension. For instance, in your example of logging a incorrect password, you can infer that the login server was actually running at that time. It's just normally people 'monitor' the login server state directly and out of sync with potential login attempts for better resolution."
devops,34h2w4,combuchan,1 point,Mon May 4 03:59:51 2015 UTC,why is it that logs are supposed to be this thing that gives you the state of the system? I was just reading the netflix engineering blog about logs and they listed the various use-cases where they use logs.  who should consume logs? are logs for humans or machines?
devops,34h2w4,snowywind,2,Fri May 1 03:35:07 2015 UTC,"Logs are there for both humans and machines.  If you aggregate your logs, you can set predefined triggers for various events.    If something happened, go look in the log file.  Your application server will log exceptions, your web server will log problems with the application server, /var/log/messages will tell you something went out of memory and was killed, etc. etc."
devops,34h2w4,djk29a_,1 point,Fri May 1 05:01:14 2015 UTC,"Logs depend on the system, service and configuration.  Most services log exceptions and errors. Some can be configured to log warnings (i.e. operation time exceeded a warning threshold but completed before timing out). Others can be configured to log events or, at verbose levels, individual stages of processing for events.  For example, a SMTP service may log events like:   Exception: Disk/memory full Error: DNS lookup failed. Retrying in XXX seconds. Warning: Connect to server XXX took YYY milliseconds. Receive: Message XXX received for user YYY. Proc: Message XXX sent to process #SpamAssasin# Delivery: Message XXX delivered for user YYY.   And etc. Basically it's a mixed bag of status updates. Mail and HTTP services tend to be quite verbose in creating a log entry for every message or request that hits the service. Something like a game or voice service will tend to log things like errors, warnings, connect and disconnect without logging detailed user activity.  A service could dump runtime metrics to a log (i.e. memory use, active connections, activity summary, etc.) but, short of service startup and shutdown routines, I'm at a loss to think of any that do this off the top of my head.  You can mine logs for metrics; often to great effect. A log analyzer for HTTP logs can determine things like what pages are most popular, time on each page, regional statistics on viewers, operating system and browser statistics, common surfer paths, and even where prospective customers lose interest in a purchase."
devops,34h2w4,berserke,1 point,Fri May 1 16:27:23 2015 UTC,"I'm going to sperg out for a while because I really don't like operations being a stigma of ""computer janitors"" and would like things to be a lot more rigorous at least to where we can actually make systems operations courses that are useful.   A sample is a value or value series of any structural composition that is a proper subset of global system state. It may or may not include time, and samples can overlap in unique data points with each other. It means I can't define a sample in continuous time (it is purely a discrete thing) or have infinitely small fractional sub-events. Also, tuple because vector implies same type so f that. A log is an unmodified sample created through an internalized event (I'll define event later) - just data by itself (assumption is data -> information -> knowledge from information theory). Without data creation, you cannot have logging. This answers the seemingly simple tree in a forest falls kind of question of ""if I have instrumentation, do I have logging?"" as ""No, hell no."" Logs are not necessarily from events. Runaway logs, anyone? It's very fallible. Events are distinct, discrete time-value pairs / tuples that, while not a sample, forms the root sample of system state within a contained system that other samples directly or indirectly correlate with in terms of causality as direct links. Stopping of data in samples is an event as much as starting some samples is too. It should mean that we have event lists and maybe B-trees, not cyclical graphs. Graphs with event cycles are bad when trying to do root cause analysis - we have to break out of those, something caused the cycle. A metric is a quantifiable value or values from a sample either emitted or extracted from a system agent or supervisor. You can get a metric by querying something or if it's pushed to you, but it must have a quantity. A series of events isn't a metric any more than a bunch of log statements reading ""PagesIn: 50000, PagesOut: 10000"" is one. Raw strings are not quantities (with string similarity / Hamming distance we derive an information value from raw data strings and/or numbers). However, a boolean true / false or enumeration are all quantities in their own numerical space. String matching / regexes now become a quantity because there is meaning - ""John Doe"" is useless unless we give it a meaning and can be quantized. Conditions / thresholds are arbitrary values that emit events - uniquely new states. Your disk filling up will be an event with threshold of capacity. We can only observe through samples that the system has changed now. Events cannot happen without conditions - a genesis. If we have an infinite tape, we can keep reading it forever, no event happens. But with finite, it's an implicit set of conditions.   Yeah, that's pretty hand-wavey too but I have a pretty seemingly obvious point. After all, OP did have a pretty legitimate but basic question fundamentally.  The important take-away with my set of definitions leads to a fundamental that the entire universe of logs only represents part of your system - you will miss something, you must! I am not logging every CPU cycle to Nagios, I don't have Splunk grabbing every change under /proc (holy crap if someone did). We could take a sample of those and log them, but a log just a sample, and it is produced by order of humans. It is not a report.  What happens if I turn off all logging in my production application? Tada! No more logs from my application, debug that. This is really obvious I hope but I think it must be re-iterated because I think we all screw up logging from our applications frequently and forms the reason why I am logging Nazi in code reviews. Your log output is a data structure / format now, deal with it. Good machine learning / analytics requires some structuring of your data.  The other important result is that because a log is a sample, we know that samples can be misleading when correlated incorrectly to other samples. Furthermore, what matters is the truth - the real event that occurred is what we look for, not the symptoms and random fall-out."
devops,34h2w4,dang_hillary,0,Fri May 1 19:46:24 2015 UTC,In this sub-reddit? Logs are streams.
devops,34ebbk,General_Pie,10,Thu Apr 30 13:21:47 2015 UTC,"Where I work we do multiple deployments when it comes to database schema changes.  First build that goes out adds the new columns and has code that supports both schemas (old and new) and keeps the data in sync, and run data migration scripts during the deployment.  Then once that is stable for awhile we release code that only uses the new schema.  Lastly we deploy a release that drops the old schema information to keep our database nice and clean.  This is all aided by the fact that we use AWS so we spin up a new stack for a deployment, but the database is persisted and not re-created on each deploy.  Hope this helps."
devops,34ebbk,johnsonch,3,Thu Apr 30 15:46:16 2015 UTC,are you not writing migrations for your DB stuff?
devops,34ebbk,I_program,1 point,Thu Apr 30 14:05:25 2015 UTC,Sorry?
devops,34ebbk,I_program,3,Thu Apr 30 14:09:01 2015 UTC,definition and example (Ruby): http://guides.rubyonrails.org/v3.2.21/migrations.html  Drupal's version: https://www.drupal.org/node/1006982
devops,34ebbk,neoice,1 point,Thu Apr 30 14:22:37 2015 UTC,"The drupal migrate module isn't really applicable here - or at least I don't see how it is. I'm talking about deploying to existing sites, and being able rollback to a database from a previous release if needed. The migrate module is for migrating data to a drupal database"
devops,34ebbk,cstoner,2,Thu Apr 30 14:24:57 2015 UTC,"I think Drupal is lacking the construct other frameworks call ""migrations"". in Rails/Django/other, the database is modeled as a series of ""migrations"": statements that change the database, like inserting columns, adding indexes, etc. a good framework can automatically generate the inverse (although it may be destructive).  in the real world, it's often much more complicated: we deploy code that supports schema and schema+1, run data upgrades when a resource is loaded for the first time (or as a background task so we can drop schema-1)."
devops,34ebbk,mattstratton,1 point,Fri May 1 00:14:45 2015 UTC,"I see, thanks for the response"
devops,34ebbk,vitiate,4,Fri May 1 10:46:05 2015 UTC,"So, in general you'll want to adhere to a process that looks something like this:   Perform all of your schema additions necessary to achieve your application upgrade. You are not allowed to make schema changes that would break the current application at this time. If needed, clone any data into renamed new columns/run scripts to populate new columns as needed. You may need to add triggers so that new data are added to the new columns on the fly. You should now have a database capable of running the old and the new code. Deploy your new code and make sure everything works. If it doesn't, simply revert back to your old application. After you've confirmed that everything works, perform any database cleanup steps you might need (deleting old columns, removing triggers, etc)."
devops,34ebbk,mddubs,1 point,Thu Apr 30 15:52:48 2015 UTC,"Short answer, as I'm on mobile, and I'll try to find more specifics later, is that you can do the database stuff in cap as well. I've done this with wordpress in the past, so really it's just a matter of how much scripting and pieces you are comfortable to put in all of cap.   Edit: I'm now thinking that your question is more about having something that does the things, not where to put that something (ie, cap)."
devops,34a8g8,dustinmm80,4,Wed Apr 29 15:17:00 2015 UTC,"I'll go first.  I'm the developer advocate for Conjur: ~15 people, half of them engineers.  We deliver an identity/security virtual appliance and associated tooling.  Since we're small yet, we have one engineering team that handles development, operations and security work. We do a lot of automation with Chef and Docker to build the appliance and tooling.  Some of our founding engineers are remote (E. Europe) so the time shift can make continuous delivery difficult - you can deliver a story but have to wait until someone wakes up to verify and push it to production. Internet connections can also be spotty.  We've put a lot of work recently into strengthening the relationship between the devteam and marketing/sales. We have engineers on discovery calls to talk tech when we're figuring out what problems someone is facing. Since our product is practitioner-focused, devs work with marketing to set the right tone for conversations."
devops,34a8g8,pooveyhead,1 point,Wed Apr 29 15:30:33 2015 UTC,What is your intersection of Chef and Docker like? Where do you draw the line of responsibilities for each?
devops,34a8g8,djk29a_,2,Wed Apr 29 19:12:06 2015 UTC,"We're using Chef solo to run cookbooks to create base docker images. Then the application Dockerfile inherits from that base image, mounts the project in, installs deps and starts the app"
devops,34a8g8,skoink,5,Wed Apr 29 20:00:00 2015 UTC,"I'm technical lead for the corporate level public cloud operations & support team at a Fortune 25 with over 400k employees and a ton of different business units we serve. My team is really small at < 10 (in the engineering ops side rather than pure support / incident response) because the public cloud program is rather small itself and a lot of ops is intended to be self-serve. If your multi-billion dollar business somehow doesn't have an ops team that knows AWS or Azure, my team has to pick up the work so they do, so uh... we have a lot on our plate.  My team is very different from most ops organizations in that we actually don't support individual applications and have no software product / service in itself to support but are more the glue between traditional in-house ops knee-deep in Cisco and F5 gear while being primarily versed in fairly basic networking (VLANs, subnetting, NACLs are basic - trunking, BGP configuration, STP flaws are not), Ruby, Chef, and writing custom plugins for monitoring tools. A lot of good old-school ops people have been doing what we've been doing, but our ops organizations never got to that point, so they've hired us basically because they're probably never getting out of their mindset. For example, our network team asked my team to help them monitor our BGP connections because their tools couldn't tell anyone if the link was actually working right - nobody knows Nagios there, and nobody knows how to expose the management instrumentation to our Nagios instance right so we can do the Right Thing and setup host dependencies and avoid the 400+ notifications when a route gets dropped and everything grinds to a halt across us-east.  Because DevOps in its etymology doesn't quite make sense with our org despite all the same tooling needs, my company has written about something that's distinct from devops that's referred to as ArchOps - it's about uniting the architecture folks that piece together many different components and making it actually fly. The goal is to turn architectural astronauts common in big, siloed orgs and force them to see the ugliness of what happens when you don't think down to sufficient detail or for certain considerations and to enable everyone (developers are included in architecture meetings after all) to make it all actually work in prod. In some companies, I've seen there's more ""architects"" than actual developers (watch out for those - they're actually sales people typically that have purely high-level knowledge only and marketecture diagrams tattooed to their eyelids). In truly large companies with many thousands of employees and an enormous amount of legacy applications and infrastructures across a century, you still can't get rid of silos; you can't, nor should you in many cases. So the reality is that at our locus of control, when you're trying to do automation workflows, you're working on automating entire groups of people - that is incredibly, incredibly powerful at this kind of scale and incredibly frustrating. You can't just issue a POST request to just go make a server in-house because there's no one person responsible for actually making an org a service. IT as a service is mind-boggling to a lot of super high-level managers from the 90s.  Most devops people in the usual SaaS shops support application / service A, B, C, D all hosted in AWS / Rackspace or maybe sometimes split with one environment and one or two clouds. For my team, we support cloud service connectivity / services to X, cloud service connectivity / services to Y, internal cloud Z, etc. where X, Y, Z are cloud providers like Verizon, Microsoft, Amazon, or our own internal cloud systems on vSphere, OpenStack, etc. So, we're one level higher than many devops teams in that we're oftentimes the team that other individual orgs' devops teams will come to for support and training. I teach people how to use Chef and how to design and version cookbooks, for example, and then I'll go get on the phone and dig through a production outage of our private Chef used by hundreds (maybe thousands?) of other Chef users because disk filled up to max in like a 3 minute time window. Or I'll run interference while someone on my team does the work and I have to deliver a statement / report to managers about why their apps are failing to deploy when they've got CI jobs doing CD.  We use Chef and monitor with Nagios (among like 5 other solutions, yeah wtf right?) and are looking hard at basically anything that can help with more on-demand command workflow environments and whittling down tools to be more appropriate for our somewhat limited tasks and deal with our quirks. Beyond that we're working with architecture folks (the build for each of our environments is crazy complicated with 144+ high-level steps and increasing, I'm not exactly envious) to come up with a POC for environments we can sanely manage (trying to come up with a cohesive management system for all of the above at once is my Moby Dick). However, if we really, really tried to align with all the other teams out there that we work with then we would be in meetings almost 75% of our days - there's a lot of silos.  This is all much easier said than done because of siloization tying our hands quite often - that's unintentional though. For example, we don't have AWS API keys to most of our accounts nor a way to get STS to work with what we do have, so we're forced to do a lot of ssh logins still (but are trying to get away from it entirely). But the architects want to revamp our IAM system and make IT security happy, so it might be a while before I can stop just drooling at all these AWS automation tools and actually use them for work.  And for the record, I still write (and test, dammit) Chef cookbooks, tons of one-off shell scripts, deal with Nagios alerts for our rather flakey infrastructure, and I spend some bit of time working on side applications to help out with the long term efforts that I've mostly shaped admittedly. I've written exactly 1 set of Powerpoint slides and it was basically 6 slides amounting to ""here's what my team does, here's our conceptual model of automation and where we're trying to go, here's what we aim to support, here's our contact info, do you have any questions?"" If I have to write more, I'll keep them about as short.  So I guess as a black box my team is the service discovery service, JMX-style endpoint, part-time message router, and message sink for operations all on the public cloud topic in the real-world ESB of the company. And I'm making it clear that if you're not writing code, you'd better be helping to help someone write it and automate what you're working on now.  Note: I am not advertising, I have no more job openings for my team (I didn't mention the company / customer name did I? Nope!). In fact, I'd almost encourage people to look away. If you think this all sounds appealing, you may need to seek therapy for Stockholm Syndrome.  Edit: Christ I wrote a lot. I type fast though, oh well."
devops,34a8g8,julian255,1 point,Thu Apr 30 21:29:25 2015 UTC,Thank you! Great account of being in the thick of it. It's always helpful to hear the perspective of how this is working in very large companies.
devops,34a8g8,nomadismydj,3,Fri May 1 23:51:50 2015 UTC,"If dev-ops is kung fu, writing complex Makefiles is that exercise where you hit yourself in the nuts repeatedly."
devops,34a8g8,mattstratton,1 point,Wed Apr 29 19:11:13 2015 UTC,My previous mentor rocked Makefiles pretty hard...it was pretty badass. I just have a special fondness for anything GNU
devops,34a8g8,edward_snowedin,3,Fri May 1 03:43:24 2015 UTC,my kung fu is not using buzz words to describe something i advocate and recommend.
devops,34a8g8,djk29a_,2,Wed Apr 29 20:42:57 2015 UTC,"It's a buzzword when one uses it without truly understanding it. I don't think that's true in this case. (Btw, this isn't me saying that just because it's Adam. I would say the same about Luke, etc).   Just because a term has been misunderstood by some doesn't mean it loses all of its value."
devops,34a8g8,julian255,3,Thu Apr 30 04:34:20 2015 UTC,can we stop using shit lingo like kung fu and be professionals for a second here
devops,34a8g8,edward_snowedin,2,Wed Apr 29 18:10:13 2015 UTC,"It may be a bit better in nomenclature to call DevOps in this sense of the term it like Bruce Lee's Jeet Kun-Do rather than kung fu (granted, it has many substyles and schools). Jeet Kun-Do is more like a framework for an individual to practice and theorize upon and improve their existing martial arts experience and style rather than a specific style in itself. This is because the problem is that every martial art is prescriptive of practices and rather rigid, so they cannot adapt to new things very well, become ossified, and then become pretty irrelevant and useless serving as an ornamental piece. So it's more like a meta-martial art. This means that DevOps is kind of like uh... functional programming versus OOP I guess. They're not mutually exclusive, but there is a clear functional approach that shows up in the design and output of code when someone's influenced by those principles compared to a total Java design pattern spazzfest.  I'm totally onboard with hating on ninjas and kung-fu and wizards and all that nonsense that contributes nothing to accomplishing a goal besides alienating serious professionals and egomaniacal tech people."
devops,34a8g8,mattstratton,1 point,Thu Apr 30 21:49:41 2015 UTC,But wait...aren't you a rockstar developer?
devops,346v3n,Perceptes,5,Tue Apr 28 19:44:22 2015 UTC,"This could potentially be very powerful.  I've seen a number of sites where shared secrets are distributed to enable access to software repositories or to join nodes to an infrastructure. This could simplify those operations, and potentially provide a replacement for hiera-eyaml and encrypted data bags."
devops,346v3n,burning1rr,3,Tue Apr 28 21:37:56 2015 UTC,"Mitchell Hashimoto knocks it out of the park yet again. Between vagrant, packer, atlas, the others I haven't even used, and now vault, this dude consistently just kills it with fantastic modern solutions to some of the most annoying problems in current software engineering/infrastructure."
devops,346v3n,markrebec,4,Tue Apr 28 22:06:17 2015 UTC,"mitchellh is pro, but there's a whole team of engineers working on these products :)"
devops,346v3n,LemmeGetDemOrbs,2,Wed Apr 29 01:22:50 2015 UTC,He's still the top committer in the company! That guy is a beast.
devops,346v3n,dustinmm80,3,Wed Apr 29 06:36:26 2015 UTC,I love Hashicorp tools but for any non-trivial setup the path-based approach to policy in vault will be a nightmare to manage.   Role-based is a much more operator-friendly way to handle policy creation and maintenance.
devops,346v3n,gospelwut,2,Tue Apr 28 22:42:36 2015 UTC,"Yeah, I get the feeling there's going to be some wrappers/tooling written around just managing vault's access model.   A shame neither is as friendly as Secret Server (for those in the organization that aren't quite as CLI friendly), but I suppose they're slightly different use cases."
devops,346v3n,dustinmm80,1 point,Wed Apr 29 02:56:37 2015 UTC,"You're probably right.  I think Secret Server has the reverse problem, easy to maintain via the UI but hard to integrate into different tooling workflows. I've got a colleague having a hard time pairing it with test-kitchen for example."
devops,346v3n,gospelwut,1 point,Wed Apr 29 03:25:29 2015 UTC,"I really wish there was a secure, SSO, modern, and not shitty web wrapper (let's say written in Django or something) that easily exposed CLI commands/scripts/auth/login/etc. Or hell, something that could tie together multiple systems (e.g. powershell on windows, python on linux, etc) would be pretty amazing glue.   The truth is, even for people familiar with the CLI, a backend tool can be a PITA to use for operational and administrative tasks on a day to day workflow."
devops,346v3n,sidewinder12s,1 point,Wed Apr 29 11:28:04 2015 UTC,Rundeck can do some of those features you are looking for. We are using it to run powershell against a windows host and to hopefully do all scheduled jobs. You could use it as a front-end to Ansible or Salt also.
devops,346v3n,gospelwut,1 point,Tue May 19 03:44:06 2015 UTC,"Are you still hosting it in Linux or simply using the winrm plugin?  I do find some of the settings in the Windows System Config to be slightly prohibitive (e.g. local accounts only, LocalAccountTokenFilterPolicy = 1)"
devops,346v3n,sidewinder12s,2,Tue May 19 11:33:51 2015 UTC,"I am hosting it on Linux and connecting to windows boxes with WinRM. I think that page of documentation is old, I would just read the readme. It now supports Kerberos auth and storage of passwords in the key vault thing they have which were two big gripes people had with the windows support."
devops,346v3n,gospelwut,1 point,Tue May 19 13:05:58 2015 UTC,"Your comment just sold me to give it a shot. You've just scratched an itch I've had for a long, long time."
devops,34927i,nanalayo,1 point,Wed Apr 29 07:07:23 2015 UTC,"Do you have SSH access? Its not on my version of Jenkins but I'm not about to upgrade it to find out haha.  However if you do have ssh access, i would    Login cd ~jenkins/ grep -H -r ""100K"" ./  see if  any of that returns a file that looks like it might have the '<a' link. use vi to remove it.    I have no guarantee of this working, and please don't edit any file if you have novice experience reading and editing code."
devops,34927i,jaredw,1 point,Wed Apr 29 13:44:22 2015 UTC,"Haha, fun idea but it didn't work. Thanks though!"
devops,34927i,jaredw,1 point,Wed Apr 29 14:11:30 2015 UTC,It's probably part of the War file then.
devops,34927i,jldugger,1 point,Wed Apr 29 15:10:30 2015 UTC,"It's all in jsps, almost certainly."
devops,3463kw,dustinmm80,2,Tue Apr 28 16:27:45 2015 UTC,Just released: https://hashicorp.com/blog/vault.html
devops,3463kw,nickwales,1 point,Tue Apr 28 18:12:58 2015 UTC,Looks like it has some potential but it'll be a while until it's production ready
devops,3463kw,randomfrequency,0,Tue Apr 28 21:42:09 2015 UTC,Is this just thinly veiled product advertisement?
devops,34616f,geercom1,1 point,Tue Apr 28 16:10:12 2015 UTC,This seems to be geared towards PMs that don't want to talk to the product team. Sitting in retro/planning with them would give you the state of security work without having to build any NLP system
devops,346lih,UriN2WS,3,Tue Apr 28 18:36:53 2015 UTC,"This article makes no sense. It's based on several straw man arguments (""cloud architecture"" means ""no persistent storage"" and ""cloud providers are trying to take away our persistent storage""), and it doesn't even hold together until the end.   Why Do We Still Need Persistent EC2 Storage?   ""Still"" makes it sound like someone is treating it as legacy. But remember that EC2 didn't even have persistent storage for the first 2 years of it's life.    it is curious as to why a conventional concept, such as persistent storage, is still being utilized in this technologically advanced environment   Since when does ""Technologically Advanced"" equate to ""Can't use a persistent disk?""   While cloud architecture is very appealing, it does not cover everything. This is known fact among cloud providers who recognize that there is still a need for persistent storage, and constantly make an effort to improve that offering.   I'm glad that you know that cloud providers know that we need disks.  Are you paid by the word by any chance?   It seems that enterprises still prefer to work with the basic IT building blocks offered by cloud providers.    It seems that without data, you can point to anything and call it a trend.   there is a constant trade-off between managed services and do-it-yourself solutions [..] ELB vs. HAProxy [..]   This whole section is a complete non-sequitur: Neither ELB nor HAProxy need persistent disks, so what do they have to do with the premise of the article?"
devops,346fx0,dataloopio,1 point,Tue Apr 28 17:57:21 2015 UTC,"I don't think you have enough experience at enterprise scale. In the 90s at AOL they had on the order of 1000 FTP servers. Do you know what the alarm threshold was for an alert at the NOC?  30% unavailable. Because it was cheap hardware with rotational disks and each data center had a full time person who's job was to reboot the server, replace the drive, reconnect the motherboard, etc.   If a machine stops sending data the first action of the monitoring software should be to replace if not alarm. That's what the phrase don't hug your server means."
devops,346fx0,Hughlander,0,Fri May 1 00:36:45 2015 UTC,"Yeah, I need to caveat most blogs with a background of SaaS. My background was large scale enterprise but that's an entirely different world to what I tend to work with today. Modern companies running online services at scale (of which we've talked to over 200 now) work slightly differently.  Cloud computing is quite expensive so to keep such a large number of computers online for redundancy doesn't happen. You also get far fewer administrators per server. It's not uncommon in some companies to have a single admin looking after a few thousand servers.  So to clarify the blog is meant in the context of modern online services, definitely not legacy enterprise stuff. The reality with that style of environment is that you probably have monitoring setup already and whatever you have is mature and not worth changing for a better tea pot."
devops,341v0w,omegaender,1 point,Mon Apr 27 17:26:40 2015 UTC,"This is great, looking forward to trying this out when it gets more stable."
devops,341uee,jhand24,2,Mon Apr 27 17:21:59 2015 UTC,Such DevOps. Much fun. Very amaze.
devops,341uee,mattstratton,1 point,Wed Apr 29 00:21:37 2015 UTC,Did they do any videos for this one?  I went to DevOps Days Chicago and really liked it.
devops,341uee,jmreicha,1 point,Tue Apr 28 03:31:36 2015 UTC,Found them for anybody else that's interested.  http://livestream.com/devopsdaysorg/Rockies2015/videos/84971364
devops,34176n,omegaender,2,Mon Apr 27 14:29:05 2015 UTC,So... I take it it went well?
devops,34176n,BloodyIron,2,Mon Apr 27 16:34:00 2015 UTC,for Germany at least ;)
devops,342omt,snowtracks,1 point,Mon Apr 27 20:56:21 2015 UTC,CA Technologies & DevOps absolutely do not deserve to be in the same sentence.   CA essentially represents everything that isn't DevOps.
devops,34141e,piva00,3,Mon Apr 27 14:02:11 2015 UTC,"One thing I recommend is looking into the ICS. ( http://en.wikipedia.org/wiki/Incident_Command_System ) It's used by emergency services for everything from a simple car wreck to katrina level events. For sysops, the first ops person on scene becomes the incident commander and directs everything until a more senior op is passed control. Whoever the final incident commander is has responsibility for writing up the after action report/post mortem. Some good stuff here: http://www.pagerduty.com/blog/peacetime-wartime-devops/  In general, the most used position other than IC is PIO, which is whoever is communicating to your users the status of the incident. They take direction from the IC. In critical incidents, some times a more senior admin will take over and there will be an ""Ops"" section of different engineers looking into the problem who only communicate with the IC (or ops manager if it's huge) who acts as a buffer between the PIO's requests for status etc.. A lot of this procedure tends to flow naturally in organizations who haven't even heard of ICS, but it's a good standard set of terms to learn."
devops,34141e,jmccree,2,Mon Apr 27 14:45:15 2015 UTC,FEMA has free training materials on ICS.  Good stuff.
devops,34141e,jhand24,3,Mon Apr 27 19:35:18 2015 UTC,"What tools have you looked at for incident management?  There are a number out there. <shameless plug> .. VictorOps is designed to address the entire incident management lifecycle </shameless plug>.  Although it's geared more towards a DevOps mindset than ITIL, it should point you in the right direction. Post mortem reporting is built in, automatic surfacing of context in the alerts, one-touch phone bridging.  It's all there.  Assuming you have monitoring in place, I think finding a tool that can help is probably the best next thing to look at."
devops,33yhqk,hellolin,7,Sun Apr 26 21:06:18 2015 UTC,"This is copy-pasted from a similar question I answered over on /r/cscareerquestions]. It's some of the areas of responsibility and tools I've brought to bear in a few years of working in ""devops"".    Soft skills: Putting this up top because it's so important. The one universal in DevOps is that you'll be dealing with a lot of teams and a lot of people. I've found myself as a central point of contact between dev, QA, sales, sysadmins and management. Very good to understand that they all have different perspectives and priorities.  Scripting: Bash (or some other common shell) is a must. Another high-level scripting language like Ruby, Python or Perl is important. I think that it's best to choose a language that complements your tools (i.e. Chef & Puppet are written in Ruby, Ansible in Python) if you're choosing to learn a new language (but don't choose tools just because you already know the language they're written in!)  Configuration Management: One of Chef, Puppet, Ansible or SaltStack. They're not all exactly equivalent, but once you understand one, it's easier to pick up any of the others.  Mark-up languages: Lots of DevOps tools have config files written in common mark-up languages like YAML and jinja. Understanding these goes a long way. Being able to write nice documentation in MarkDown is a plus too. JSON and XML too.  Version Control: Git. Maybe Mercurial if you want to see basically the same functionality with a slightly different philosophy, but everybody uses Git. Use Git. Understand different Git branching strategies, like Git Flow, and how they interact with continuous integration.  Build Systems: This will largely depend on the language/stack already in use by developers. Common ones are Make, Autotools, Ant, Maven, Grunt, Gulp. Have an idea about compilers, linkers and run environments as well.  Testing Frameworks: Again, this will probably be largely dependent on the tech stack in use.  Continuous Integration: Jenkins is the most famous player here, if the company wants to self-host their CI system. Buildbot is a more configurable, but with a steeper learning curve. Third-party hosted CI systems seem to be getting popular, but I don't have any experience with them so can't comment. Names I've heard are Travis, CircleCI, Bamboo.  Monitoring: Know how to set up a system that will alert you if machines are under heavy load (or go down). Nagios or NewRelic are good.  Logging: Have application logs centralized and searchable. The ELK stack (Elasticsearch, Logstash, Kibana) is very popular.  Virtualisation: Know how to provision VMs with Vagrant (AFAIK, there's no real alternative to Vagrant), and configure them with your config management tool. Figure this out for both local machines and machines in the cloud.  Cloud: Know about the services offered by at least one of the major cloud providers: AWS, Rackspace, Azure. Have some understanding of practical concerns: pricing, geography, redundancy, availability. AWS and Rackspace (don't know about Azure) will give you a certain amount of free usage if you just want to play around.  Load Balancing: Understand different load balancing strategies: e.g. round-robin, least-load. Have a look at setting up nginx or HAProxy as load balancers, and/or AWS Elastic Load Balancer.  Web servers: I'm not super experienced with this end of things, so all I can suggest is Apache Tomcat or nginx.  Databases: Be aware of both relational (e.g. MySQL, SQL Server) and NoSQL databases (e.g. MongoDB, Cassandra). Consider backup and redundancy strategies. Think about how well these will perform with lots of synchronous connections happening.  Message Queues: Learning about RabbitMQ and ZeroMQ is on my to-do list, so I'm not sure how helpful it will really be, but a lot of the tools I've mentioned above make heavy use of such queues, so it can't hurt.  Project management: Most places that use ""devops"" also use some variant of Agile. It's good to have at least a high level understanding of Agile methods and Kanban boards and the like.  Package Management: This will be driven again by the tech stack involved. RPM and .deb packages for varying flavours of Linux. Wheels and eggs for Python, Gems for Ruby. Also, the use of package management software like apt-get and pip; and package servers like pypi."
devops,33yhqk,tensorproduct,2,Sun Apr 26 22:57:07 2015 UTC,"Probably the best route is to become a Jr Developer or Jr Sysadmin and show interest in the opposite side, though this may depend on what the ""DevOps Team"" you want to join actually does. Personally I think the path is easier from developer to DevOps than sysadmin to DevOps. I don't know many of my sysadmin friends who've moved to DevOps, but several of my developer friends are now DevOp'ing away. (This is in the web field, enterprise may be a different beast) I think this makes sense, as most of DevOps is working with the application stack, very little in general is OS level sysadmin stuff.  In my personal opinion, the number one thing about DevOps is to know what your role is: Enable developers to develop and operate an application as efficiently and reliably as possible given time and budget constraints."
devops,33yhqk,jmccree,1 point,Mon Apr 27 03:07:07 2015 UTC,"I agree with this, I'm a Linux + Windows systems admin, and while my team is me and 1 other, I do all of the devops in our department, our other bigger departments, they are all developers.  I have found learning the skills for devops has been hard work. Lots of nights up late trying new things and studying.  I'd recommend asking for a trial with them find out what its actually like. As you might not enjoy it, I wish I had done this 8 years ago, and not trying to make the transition now."
devops,33yhqk,imsundee,2,Wed Apr 29 23:12:56 2015 UTC,Learn more about Linux. Linux from Scratch is a great start.  Learn git.  Learn about Continuous Integration and Continuous Delivery and how to set up a build pipeline that gives you these things.  Learn about the most common security issues.  Learn about automation tools like Ansible/Chef/Puppet/Salt.  Learn how to automate things in AWS through Cloudformation and the CLI tools  Learn about containers.  Keep in mind that devops is about developers and operations people working together. To be good at devops you need to be good at working with other technical and non-technical people. You will need to be able to work with people who also want the work you're doing to succeed but are coming at it from a different perspective and with different priorities.
devops,33yhqk,DrMantisTobboggan,1 point,Mon Apr 27 07:33:41 2015 UTC,"This sounds different than the devops team at my company, I saw them doing mostly linux AWS chef stuff, have not see them interacting with other teams much at all, also not much security either but the company is actively looking for an information security officer to join the devops team for that matter."
devops,33yhqk,rawrphish,3,Mon Apr 27 17:49:36 2015 UTC,Try to think of DevOps as more of a mindset than a toolset.   Here's an article that I think you would benefit from:  https://puppetlabs.com/blog/devops-team-no-devops-toolchain-yes
devops,33xyos,jhand24,4,Sun Apr 26 18:34:07 2015 UTC,"I'm a freelance developer (primarily with Ruby on Rails), and I was able to add a ton of value by not just creating the applications for my customers but also hosting them. Managing high double digit amounts of servers while also having time to do some development work would have been unthinkable ten years ago, but with current tooling and a devops mentality it's absolutely possible.  Since you can basically ignore the whole communication / cooperation thing, focus on automation.  In every shop there are huge pain points that can be solved by a very basic configuration management system, and that's where I would start (getting some early wins is great for morale as well). Personally, I went with Chef, but any of Chef, Puppet, Ansible or Salt will be perfectly fine. Chef, Ansible and Salt run on Windows, Puppet support used to be very limited ~7 years ago, not sure about today.  The CM system will be the backbone of pretty much every technological gain you get from devops, so choose wisely.  Focus on automating simple tasks you're currently doing manually. For example, after you've installed Windows, you will probably need to install .NET before you deploy your .NET application, right? So automate that, and everything else you need to install. Huge win right there.  Basically, everything you do with a checklist now, automate it. Everything you do without a checklist, codify it into a checklist, then automate it.  Next up would be application deployment. I genuinely have to idea how .NET applications get deployed, but I would be surprised if it's not 100% automatable. This might also be where the ""dev"" part really kicks in, as you might have to change parts of the application to be friendly to automated deployment.  If he gets this far, he probably has a good idea of what's going on, and can decide on the next steps himself."
devops,33xyos,NilsLandt,1 point,Sun Apr 26 22:02:03 2015 UTC,Boxstarter/chocolaty look like the best .net deployment method at the moment.
devops,33xyos,Letmefixthatforyouyo,5,Mon Apr 27 15:10:29 2015 UTC,"I did this for a while at my old job. Initially I was a PHP dev, sysadmin and office IT support. In the dev and sysadmin it was crucial for me to have a slick workflow to keep on top of everything in the limited time I had.   My team eventually grew to three, the devops strategies of breaking down walls were never needed because there never were any walls it was just the natural progression of things - as a team grew it was one team including developers and sysadmins, no reason to hide one side from the other.  In terms of things I think it's good to put in place:   Ensure the testing / build / deployment pipeline was a fully automated one click process, this meant I could spend all my time building the feature in question. I also meant I could bring in help and get them up to speed much more quickly (no complex deployment process to learn / break). Monitor everything - I was responsible for ~10 servers Windows and Linux, web and internal, way too many to keep track of without some backup so I implemented Opsview which saved me from disaster a few times.   I don't think being a .net shop changes anything it's just more common for devops to be open source based, the same processes of automated testing and deployment can be applied."
devops,33xyos,chemicaloliver,6,Sun Apr 26 19:03:32 2015 UTC,"I think if you are a one man team, by definition, you are the epitome of DevOps."
devops,33xyos,jmccree,2,Mon Apr 27 01:15:54 2015 UTC,"I'm a one-man shop. Being a 'OMS' means that you already have the culture side down - you can't build cultural silos unless you have multiple personality disorder! - so you get to focus more on the technological side of things. Hell, I'd say that it's even more important to get a devops pipeline set up as your man hours are really limited."
devops,33xyos,linuxydave,2,Mon Apr 27 04:50:37 2015 UTC,"Check out the Windows Azure Pack. More specifically the SMA portion of the pack. It has made it possible to Automate Windows in ways that were difficult if not impossible a few years ago. It actually has me somewhat excited to be working in a Windows environment.  The Orchastrator product is the somewhat handicapped older brother of SMA. Steer clear of it.  SMA kind of sucks without integrating it into some sort of CI environment. I currently do all of my code edits in sublime, I save and commit changes to a Stash based Git repository then bamboo (Jenkins) identifies the commit, checks out the code and publishes it into SMA. I then have a push bullet script that notifies me that the commit is published and ready to run.  Sometimes debugging is a pain in the ass but its the best I can do until MS un-fucks their toolset."
devops,33xyos,vitiate,4,Tue Apr 28 16:34:12 2015 UTC,"DevOps can't be implemented to a 1 man team, IMO.  Do you really mean implement continuous delivery?  I've done a lot of work as a Dev and CD guy on small .NET teams.  Here's what you need to answer:    Are you going to use a separate machine for MSBuild based command line builds?  It's a very good idea to do so.   if so...    Are you will to spend some time doing automated tests?  There's probably some tests that can be written to be used as smoke tests.   if so...    Do you want automated deployments?  Are you building Web Services with IIS?  If so, learn how to deploy using MSDeploy.   I'm a big fan of Jenkins for Windows based small teams.  It would be a one day job to deploy a jenkins server, create a msbuild based build job, a job to run tests with, and a job to deploy to your code.  Also, it's worth the effort to learn a bit of PowerShell!  You can do anything in Windows with a PowerShell script."
devops,33xyos,BannerDay,2,Sun Apr 26 23:46:13 2015 UTC,"I think a big part of getting it right at this point is structure.  The point of devops is to break down the silos in organizations where those silos already exist, but in your case, you're just starting out, so the key here is to ensure that they never get built to begin with!  From a technical / tooling perspective (these are not strictly speaking part of devops, but good tools can definitely make it easier.  As you build your infrastructure, think through the architecture as it grows, being sure that you're not creating barriers to automation for yourself as you go.  Using things like a good configiratuion management tool (Chef, Ansible, Saltstack, whatever) can certainly help - I know the Chef community has been doing a TON of work of late to work really well in the Windows world.  Hope this helps and good luck!"
devops,33t537,manager_dave,2,Sat Apr 25 10:55:51 2015 UTC,Splunk is best.
devops,33t537,coldshuts,1 point,Sun Apr 26 03:01:32 2015 UTC,Graylog is a great alternative to Splunk.
devops,33t537,ras0ir,1 point,Sun Apr 26 08:56:29 2015 UTC,Datadog is the best by far.
devops,33t537,SupermansOlderBro,2,Sat Apr 25 21:54:38 2015 UTC,Big ups to datadog.
devops,33t537,mansquid,1 point,Thu Apr 30 00:41:04 2015 UTC,It's not even close.
devops,33t537,SupermansOlderBro,1 point,Thu Apr 30 00:44:32 2015 UTC,And expensive
devops,33t537,asurah,1 point,Thu Apr 30 05:22:07 2015 UTC,Yeah it's a little on the expensive side I think they need to tweak their pricing model. At a startup when you only have a few servers it's manageable but if you had a few thousand there's no way
devops,33t537,SupermansOlderBro,1 point,Thu Apr 30 11:58:51 2015 UTC,"I am confused cloud chimp. Being facetious on the internet is difficult to detect, fellow chimp."
devops,33t537,mansquid,1 point,Thu Apr 30 21:00:24 2015 UTC,What?
devops,33t537,SupermansOlderBro,1 point,Thu Apr 30 21:43:32 2015 UTC,"We used StackDriver for a while, which has nice AWS integration. But they were expensive compared to running our own, and got bought by Google. So we are back on Graphite+Nagios.  I would love to replace Nagios though."
devops,33t537,BraveNewCurrency,1 point,Sat Apr 25 23:43:29 2015 UTC,We move from nagios to omd with check-mk couldn't be happier
devops,33t537,grumble_au,1 point,Sun Apr 26 07:09:21 2015 UTC,What is OMD and what is check-mk?
devops,33t537,jmreicha,0,Tue Apr 28 14:57:12 2015 UTC,http://lmgtfy.com/?q=omd+check-mk
devops,33t537,grumble_au,1 point,Tue Apr 28 15:19:31 2015 UTC,"Tellki has just been recently launched. Have a look at it (http://tellki.com). It also has an AWS integration and it's not expensive at all as you pay per metric. Send me a private message, if you would like a promo code to try it."
devops,33t537,BraveNewCurrency,2,Thu Apr 30 18:19:02 2015 UTC,"I like the ""full-service"" concept, and think there is probably a niche that wants this. But for me personally, having some remote service that can send scripts onto my server won't fly at all."
devops,33t537,jmreicha,1 point,Thu Apr 30 22:05:27 2015 UTC,"Logstash, Graphite, PagerDuty, Sensu, Sentry."
devops,33t537,imsundee,1 point,Sun Apr 26 05:13:30 2015 UTC,"Ganglia, we use it for the graphs ect so we can monitor load, look at patterns in useage, and for putting proposals for more hardware.   Its disigned more for grid computing, but for us, I have 1 section for cloud nodes, 1 section for storage cluster.  We do run nagios alongside for alert management too."
devops,33t537,dataloopio,1 point,Wed Apr 29 23:16:18 2015 UTC,"Please have a look at our new version of Tellki: http://tellki.com:   Easy, fast and centralized monitoring setup for your servers, DBs, Apps and sites. Deploy any monitoring for 1, 10, 100 or more than 1000 servers in seconds. Custom monitoring: write your monitoring scripts, immediately test on your servers and check the result - all from the web browser. External monitoring: check your sites, APIs and Apps from different locations around the world using our public agents Comprehensive alerting: instant email and sms notifications. Run corrective actions. Own, disown and annotation operations. Define user instructions and customize messages. Visualize & Analyze: real time fully customizable operational board and dashboards. Compare any metrics/servers/apps with our trending analytics reports. Integrate and monitor Amazon CloudWatch metrics, Google Analytics statistics and DigitalOcean Droplets.  Automation: create schedulers in order to automate recurring tasks. Android and iPhone Apps: real time push alert notifications. Start corrective actions. View all your metrics in real time.    Give it a TRY at https://app.tellki.com/User/Register"
devops,33rqr9,jdwithit,4,Sat Apr 25 00:05:51 2015 UTC,"I was in the audience for this. Great panel! Most chat bots I've encountered existed only to dish out insults or something else gimmicky. This really opened my eyes to how they could be used for serious work. And in some ways do it better than a more traditional interface like a CLI or web page. Seemed like every 30 seconds my coworkers were elbowing me to say ""holy shit we could run XYZ through a bot!""  Now if the Errbot guy would just finish up Slack support..."
devops,33rqr9,jhand24,1 point,Sat Apr 25 05:58:20 2015 UTC,"Glad you enjoyed the panel. I love to hear comments like the ""elbowing me"" one.  That's how I felt when I first started hearing about ChatOps. Let me know if there's ever any way I can help."
devops,33pqvu,smw355,1 point,Fri Apr 24 14:31:15 2015 UTC,It's amazing how many people are able to use these tools. I wonder if any of these people work on protected IP that they wouldn't trust AWS with.
devops,33pqvu,burning1rr,1 point,Fri Apr 24 22:41:48 2015 UTC,Hashicorp has a CI workflow product that's worth looking at. It has the benefit that we can do CI without reinventing the wheel for each client.  https://atlas.hashicorp.com/
devops,33pqvu,jdwithit,1 point,Fri Apr 24 22:49:32 2015 UTC,"Hashicorp is really crushing it these days. Haven't used Atlas personally but I adore Vagrant and Packer. And was just turned on to Terraform at DevOps Days Rockies and that looks solid, too."
devops,33prwc,robsonsnjr,16,Fri Apr 24 14:39:21 2015 UTC,Monitoring Tools Development Team.
devops,33prwc,zeroXten,2,Fri Apr 24 15:07:40 2015 UTC,"Typically I've seen this called ""Site Reliability Engineering"" in the larger web shops."
devops,33prwc,laurier57,1 point,Fri Apr 24 15:19:07 2015 UTC,"The original name was ""Platform Reliability"", but we would like to have a coolest name."
devops,33prwc,lwh,1 point,Fri Apr 24 15:29:36 2015 UTC,"Yeah, see SRE more frequently than anything"
devops,33prwc,rizzlybear,2,Fri Apr 24 21:44:44 2015 UTC,Worked at a place for a while where we called it sysmoms (system mothers).
devops,33prwc,vinni_f,1 point,Fri Apr 24 16:34:03 2015 UTC,Mon
devops,33prwc,BannerDay,1 point,Fri Apr 24 21:00:37 2015 UTC,Big Brother Team
devops,33lgdy,erikemanuelli,3,Thu Apr 23 14:10:10 2015 UTC,"I'd be curious if this was broken down by region.  These salaries in San Francisco would be medium income, but in Twin Cities MO, they would be well to do."
devops,33lgdy,blahism,2,Thu Apr 23 15:55:00 2015 UTC,I thought overall the salaries were on the low side given the skills required
devops,33lgdy,ashimmy,1 point,Thu Apr 23 17:18:54 2015 UTC,"They are broken down into North America, Europe, Asia Pacific, Latin America, Rest of the world. They could probably break it down further if there were interest. We could ask."
devops,33lgdy,growmap,1 point,Thu Apr 23 18:59:35 2015 UTC,"Yeah, that would have been helpful.  If you're making 135k doing hybrid SA/dev work with 10 years of experience in SF you probably haven't tried to advance your career too much."
devops,33lgdy,FireReadyAim,1 point,Fri Apr 24 07:51:27 2015 UTC,A friend of mine already suggested Incapsula to do a follow-on white paper breaking down the data by major cities.
devops,33lgdy,growmap,2,Fri Apr 24 09:21:45 2015 UTC,I suggested that to someone I know who knows them.
devops,33lgdy,ivix,2,Fri Apr 24 13:42:20 2015 UTC,"To me, it's particularly interesting that devOps is a male- dominated field, with almost 96% of those choosing to identify their gender were men.  I'm also surprised about the age, ""somewhere between the ages of 25 and 44"". Quite young."
devops,33lgdy,weedv2,3,Thu Apr 23 14:13:21 2015 UTC,Why is that interesting?
devops,33lgdy,growmap,-1,Fri Apr 24 06:32:28 2015 UTC,"Well, why devOps industry is a male-dominated field? Why only 4% of women? Is it because women are not skilled enough to do this job?"
devops,33lgdy,tyrostone,3,Fri Apr 24 09:20:26 2015 UTC,Before even taking that number into account you need to think what percent of the field is male dominated already
devops,33lgdy,growmap,4,Fri Apr 24 12:55:04 2015 UTC,It is likely that the field is hostile to women. It cannot be that women are not capable as there have always been women programmers. Men often do not realize how difficult they make it for women to work in their field. I know because I was the first woman technician in the IBM office that hired me; the first woman trained by a particular instructor; one of the very first women ever hired as a Customer Engineer (CE) at IBM. I could tell you a lot of stories about the challenges women face when they work in a field dominated by men.
devops,33lgdy,coachnotes,3,Fri Apr 24 13:45:28 2015 UTC,"Can confirm, field is hostile. Systematically, institutionally, as well as occasionally personally. I've noticed too, that it gets worse the further ""down the stack"" you go. This explains the 96%, since DevOps (aside from being a philosophy and culture) focuses on tools that have to do with Systems Administration and server-side development."
devops,33lgdy,brokenpipe,2,Fri Apr 24 17:53:25 2015 UTC,"I suspected as much. The men I worked with didn't even notice when customers, co-workers or managers said things that were totally inappropriate. I had to explain to them WHY they were offensive for them to understand.  It reminded me of Reddit :-)"
devops,33lgdy,LinFTW,2,Sun Apr 26 03:18:03 2015 UTC,"No surprise about the age when you think about the current landscape and the culture of ""DevOps."" Age 25 represents a few years out of college having done a bit of sysadmin work; up to mid-forties represents the gamut between the Dev and the Ops -- they'd have gained that skillset highlighted in the white paper.  In a discussion over on Spiceworks, there was a lively debate on ""who"" is a DevOp. Of interest is that ""old guys"" (think older than 44) couldn't be DevOps because they were too entrenched in one or the other and couldn't straddle/master both!"
devops,33lgdy,growmap,1 point,Fri Apr 24 19:13:06 2015 UTC,For those not wanting to sign the extremely lame sign up page: http://lp.incapsula.com/rs/incapsulainc/images/Salary-Survey-DevOps.pdf
devops,33lgdy,Letmefixthatforyouyo,1 point,Wed Apr 29 00:05:50 2015 UTC,Always a bummer when these surveys are hidden behind a sign up form.
