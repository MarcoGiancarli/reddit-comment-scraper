cscareerquestions,3e21wu,vt100me,42,Tue Jul 21 10:27:30 2015 UTC,Could some of this be the fact that you work from home for yourself?  Working from home can suck!  Maybe try getting a position where you are physically around more people.   Or maybe your motivations have just changed and you need a full career change!  What makes you passionate now?
cscareerquestions,3e21wu,CharBram,12,Tue Jul 21 11:49:05 2015 UTC,"Could some of this be the fact that you work from home for yourself?   Not interacting with people takes a toll on one... Took me a bit to realize it.  Coworking spaces, even coffee shops work great for this.  Just make it a point to get to know the people and be social :)  I sometimes stay home, and sometimes go to a coffee shops. I like 4 coffee shops in the area :)  Also, have something that routinely takes you out. Gym, dates, movies with friends? Anything."
cscareerquestions,3e21wu,mrcaptncrunch,8,Tue Jul 21 14:10:52 2015 UTC,"Could be, at least in part (I don't think it's the whole issue). I think I need both a change of scenery and something else to do.  As for what makes me passionate - very few things in technology do that right now, except perhaps when I get to build a computer or work with server hardware, things like that. That's when time just flies by. Seems like there are less and less jobs that let you work with hardware though..."
cscareerquestions,3e21wu,geebr,8,Tue Jul 21 14:36:45 2015 UTC,"I know of a lass that started a PhD in neuroscience at the ripe age of 50-something. Think she got tired of building useless stuff for companies and wanted to do something new, different and interesting. Food for thought! She worked on the crab nervous system."
cscareerquestions,3e21wu,timworx,5,Tue Jul 21 16:46:17 2015 UTC,"Working from home definitely has that effect. A bit of a crappy feedback cycle is going on too (been there):  Lack of motivation -> unproductive time -> staring at the screen for hours draining your eyes and such (with only so many of those hours generating $$) -> funds low from low $$ billed -> stress builds from tight $$ -> disliking your situation and what you're doing -> lack of motivation  I think jumping back into the job world would be a good first choice. It will get you back to a feeling a bit more stable and a bit less stressed. Then you can think again, without pressure.   Personally, I find a good programming challenge can keep me occupied like nothing else. If you're doing web dev in the sense of html+css+javascript+same-php[or other language]-stuff-you've-done-a-million times, then a good challenge that you have to solve might feel quite rewarding too."
cscareerquestions,3e21wu,casey12141,3,Tue Jul 21 15:31:16 2015 UTC,"Not only working from home, but you've been doing the same thing for 8 years. That's quite a while. Part of your motivation issue could just be boredom. Also working in an office will add motivation to rise above your peers if you're the competitive type. It's worth a shot unless you know for certain you have no love for programming anymore."
cscareerquestions,3e21wu,Dudemanbro88,2,Tue Jul 21 16:49:24 2015 UTC,"Hmm, maybe a sys admin roll at a company could help with that?"
cscareerquestions,3e21wu,CharBram,5,Tue Jul 21 18:07:32 2015 UTC,"No, I mean what makes you passionate period?  It's a big world and there a lot of jobs you can do that are not tech focused."
cscareerquestions,3e21wu,sarahlooloo,7,Tue Jul 21 14:55:56 2015 UTC,passion is overrated.
cscareerquestions,3e21wu,CharBram,4,Tue Jul 21 14:58:04 2015 UTC,"I respect what you are saying because what I think you are implying is that it may be better to find something that you can stand and just do that.  However, I would argue that passion is what makes life livable and that people who don't follow their passions are giving in to their fears and selling themselves short.  I may not ever be the best programmer in the world but it is something that I have found that I am passionate about.  And I am finding that as I interview more that people can sense that passion and it influences them.  On the flip side I am in finance right now and it is okay.  I don't hate my job and I could see myself doing it for the next 20 years and getting fairly high in a company.  It could be a decent life.  Maybe a bit boring.  But really, what kind of life is that?  I just settle for something that I am just okay with!?  Who wants to work with a person like that?  People like that don't change the world.  I say find what you like to do and just go for it.  Forget what everyone else says.  Find people that share your vision and keep them close and don't do anything to ruin those relationships.  Passion is everything."
cscareerquestions,3e21wu,Zuir,6,Tue Jul 21 15:32:37 2015 UTC,"I think that people who say passion is overrated (which I agree with) are people who haven't found anything they're passionate about. If you've found something that you feel passion for, more power to you, and I agree that you should do that if at all possible. I haven't found anything like that, despite searching for a long while.  I feel that passion is overrated, because I think it's more important to find something you enjoy and can stand to do, and not worry about trying everything to try to figure out what you're actually passionate about.   I don't know if I'll ever find something I'm truly passionate about, and that's okay with me. I'm happy where I am, and I enjoy what I'm doing, so I'm not concerned with finding something else that I feel passion for."
cscareerquestions,3e21wu,CharBram,3,Tue Jul 21 18:33:06 2015 UTC,Fair point!  And great explanation on what you mean!
cscareerquestions,3e21wu,godless_communism,3,Tue Jul 21 18:57:03 2015 UTC,Revenue is underrated.  :)
cscareerquestions,3e21wu,timworx,2,Tue Jul 21 17:42:00 2015 UTC,and can be really tough to nail down.
cscareerquestions,3e21wu,YvesSoete,2,Tue Jul 21 15:23:18 2015 UTC,That is so true.
cscareerquestions,3e21wu,username_my,3,Tue Jul 21 19:19:23 2015 UTC,"I have been working from home/alone for the past 4 years I agree 100%.  Usually working in tech isn't really that hard, and if you work at a large company you may not need to learn new stuff that frequently that it annoys you.  Find the largest web team around you, join them, and in couple of years you can move to different management positions given your experience and age (maybe get an MBA while working)."
cscareerquestions,3e21wu,CharBram,7,Tue Jul 21 17:10:09 2015 UTC,That is a fantastic idea!   I know a guy who readily admits that he was the worst programmer ever and wasn't big on it even though he had a bachelors and masters in CS.    Guy got into management where he REALLY excelled.  He was perfect for it.  Great at explaining concepts basically to layman and great with people.  Very friendly and not the type of guy to screw you over.  I would work for him!
cscareerquestions,3e21wu,username_my,1 point,Tue Jul 21 17:43:05 2015 UTC,"IMHO management is inherently better given it pays better. given that I work to make money mainly.  Which means that even if he was a great or average programmer, a move to management is a win in my book."
cscareerquestions,3e21wu,CydeWeys,3,Tue Jul 21 21:40:41 2015 UTC,"Seconded.  I've never worked from home for more than a few days at a time, but it takes a huge toll on me.  Humans are social animals.  Hanging out with lots of people that I know well for the majority of every weekday satisfies some fundamental need in me.  Even if the OP doesn't get a conventional job, I would highly recommend a co-working space.  I've been to several and the vibe has always been great."
cscareerquestions,3e21wu,TimPowerGamer,5,Tue Jul 21 15:14:27 2015 UTC,"Different people function differently.  I get significantly more work done from home than I ever did in an office.  I've been working from home for about 18 months and the extra time with family, saving on commute money, and lacking the distractions of face-to-face dealings has improved my efficiency incredibly.  Also, working in my underwear is pretty neat."
cscareerquestions,3e21wu,CydeWeys,3,Tue Jul 21 15:34:11 2015 UTC,"My situation sounds closer to the OP's situation than yours, though.  I wasn't saying that remote working is terrible for everyone."
cscareerquestions,3e21wu,CharBram,2,Tue Jul 21 15:47:00 2015 UTC,I work the best when I do every other day in the office.
cscareerquestions,3e21wu,manliest_destiny,25,Tue Jul 21 16:26:29 2015 UTC,Taught math and computer science.
cscareerquestions,3e21wu,diadexus,16,Tue Jul 21 12:38:21 2015 UTC,"I've thought about this actually, seems to have many upsides and be quite rewarding. Thanks for the suggestion!"
cscareerquestions,3e21wu,946789987649,10,Tue Jul 21 14:16:27 2015 UTC,Two words: Summer Break.
cscareerquestions,3e21wu,Not_Ayn_Rand,3,Tue Jul 21 16:04:24 2015 UTC,I've always wondered if it's even that good. School holidays are what? 6 weeks? You'd probably have to go in a week before just to get everything sorted. In the UK you're entitled to 4 weeks and you get to have them whenever you want (rather than you must have them during this holiday) so really just a weeks difference. Then again I guess there's half term and christmas breaks too.
cscareerquestions,3e21wu,Zuir,5,Tue Jul 21 17:23:32 2015 UTC,"The schedule seems to be different, I had at least 10 weeks of summer break in high school. 2 weeks winter break. In college it was 4 weeks winter and 12-13 weeks summer."
cscareerquestions,3e21wu,946789987649,3,Tue Jul 21 17:39:15 2015 UTC,"Summer break in the US (at least where I am) is generally somewhere around 3 months. I know my university started generally first week of September, and finished towards the end of May, giving all of June, July, and August off. That's with a month off for Winter break as well. In high school we had maybe 1-2 weeks less for both Winter/Summer, but more random days off during the year.  Obviously instructors will need to do some work over those breaks, but the time off is still quite a bit more than you'd generally find at most US jobs."
cscareerquestions,3e21wu,Zuir,2,Tue Jul 21 18:37:33 2015 UTC,"I was more referring to schools not universities, you really get 2.5 months for summer when at school?   We also get about 3 or 4 months off for university though. But yeah, US sucks for holidays, god bless the UK"
cscareerquestions,3e21wu,chetlin,2,Tue Jul 21 18:40:15 2015 UTC,"Yeah, high school and grade school generally ended mid-June for me, and started first week or so of September. From what I can tell that's pretty standard across the US, at least among my friends."
cscareerquestions,3e21wu,wagedomain,1 point,Tue Jul 21 18:46:03 2015 UTC,"It definitely depends where you are. My US high school ran from August 2 or 3 to around June 1, so we got all of June and July off. Also got a 2 week break in each of October, Dec/Jan, and end of March."
cscareerquestions,3e21wu,bobthemundane,1 point,Tue Jul 21 19:34:19 2015 UTC,"Yeah in all grades in the US I got out in late May / early June, and returned early September."
cscareerquestions,3e21wu,zomgitsduke,1 point,Tue Jul 21 20:51:24 2015 UTC,"In the US it is two weeks in the winter, one week spring break, and then over 2 months in the summer. Plus, never having to work federal holidays, etc."
cscareerquestions,3e21wu,KyleBumpus,6,Tue Jul 21 20:17:36 2015 UTC,Same here! Minus the math.  It's a rewarding career if you are In a building that actually wants to offer some good stuff.
cscareerquestions,3e21wu,valkyrio,16,Tue Jul 21 14:10:03 2015 UTC,From the sound of your post I'm not quite convinced it's your career that's making you unhappy.
cscareerquestions,3e21wu,diadexus,15,Tue Jul 21 12:35:45 2015 UTC,"I wouldn't say I'm unhappy in general even if it may sound like it in the post. My weekends are usually great, like this last weekend I mostly spent out fishing with my girlfriend, not a care in the world. Not ready to become a fisherman quite yet though :)"
cscareerquestions,3e21wu,ISvengali,4,Tue Jul 21 14:26:15 2015 UTC,"Sort of. Tried for two years or so to find any sort of a programming-related position (I have a CS degree from a relatively unknown school, not a diploma mill.) Didn't find one. Later got recruited to do legal support (basically ediscovery) and have been doing it for 1.5 years. Considering I'm not the type of programmer that spends his free time programming, I'm thinking I'm done with programming."
cscareerquestions,3e21wu,bradfordmaster,5,Tue Jul 21 15:18:21 2015 UTC,"32 year old web dev here - I had a miserable job that I genuinely thought I needed to change careers, and it turned out that I just needed to change jobs.  I'm much happier with my new employer; my work is way more varied and interesting.  However, I do agree that this is not a life-long career for me.  I do burn out easily, hate sitting all day, and I yearn to have a job where I can ""make a difference in the world.""  My 40 year old boyfriend is nearly finished with nursing school, and I've thoroughly enjoyed helping quiz him on the material and learning anatomy & physiology.  His age helps me realize that it's never too late to switch careers!  While I'm not sure nursing is for me (I can deal with vomit and urine, but i CAN NOT deal with feces), it's still nice to think about on hard days."
cscareerquestions,3e21wu,jcoy20,8,Tue Jul 21 16:09:57 2015 UTC,"I have several friends that have switched careers.  So, do it!    One friend was a very good corporate lawyer that became a lead game designer (after doing junior and staff designer positions).    Another friend was a good programmer that is now doing stop motion animation.    Oh!  Another good friend is a great animator that is now doing pipeline programming for Sony Pictures.    Just pick something and apply yourself."
cscareerquestions,3e21wu,Saucette,4,Tue Jul 21 11:03:38 2015 UTC,"I have a friend who went though something similar. He took an entire year off, did some volunteering, traveled a bunch, tried a few things, and at the end of the year he realized that he should stay in tech and that it would be a waste to give up such a specialized career. So now he works at a tech company again, but has a better attitude and a better work life balance.  Not sure it applies to you, but thought I'd share."
cscareerquestions,3e21wu,Saucette,2,Tue Jul 21 16:11:57 2015 UTC,A little perspective can do wonders for your outlook.
cscareerquestions,3e21wu,Madamelic,6,Tue Jul 21 20:21:54 2015 UTC,"I know an ex-dev, he is now owner and bartender of a gaming bar, organizing many events, from techno/house/hardstyle club nights to gaming championship passing by beerpong and RPG events.  Another one went from programming missiles to medical prothesis stuff.  Also, why not working for something that you find helpful instead of working for money ? It could be IT or something else.  Try to work stood up if you feel being sit impacts your health.   As others said, working from home might be the issue."
cscareerquestions,3e21wu,cheddarben,4,Tue Jul 21 12:49:24 2015 UTC,"Actually your third point may be part of the problem... The work I'm doing just isn't rewarding, and I'm not sure web dev (or development in general) could ever be to me."
cscareerquestions,3e21wu,cheddarben,3,Tue Jul 21 14:39:17 2015 UTC,"Then try either to find an interesting job, IT related or not, or at least make it usefull.  If i had to keep the same job, that would be web development for free education, green energies, clean environment...  IMHO, you allready know the answer and you just need someone to tell you that's the right choice. I'd say the only right choice is the one you make. If you don't make one, things will come up to you and you will have a bad time :)"
cscareerquestions,3e21wu,LongUsername,1 point,Tue Jul 21 14:50:46 2015 UTC,Another one went from programming missiles to medical prothesis stuff.   First they get paid to blow limbs off and then they get paid to put them back on. ;)
cscareerquestions,3e21wu,AndreNowzick,6,Tue Jul 21 22:08:43 2015 UTC,"Sounds to me that you have a motivation problem more than a career problem.   If you work 4 hours a day, you have plenty of time to find something else and pursue it while you still work. Find something. Pursue it.  Good luck."
cscareerquestions,3e21wu,Mzlovely,6,Tue Jul 21 13:59:25 2015 UTC,"That is exactly what I'm thinking - this is the perfect time to look for something else. And that's why I posted this thread, because I'm not sure what that ""something else"" would be. I'm motivated to change, but it doesn't help when I don't know to change to, know what I mean? :)"
cscareerquestions,3e21wu,clawman9090,4,Tue Jul 21 14:28:16 2015 UTC,"That is a tough one, man...   Maybe make a list of things you DO like about dev and a separate thing you DON'T like about it.  Perhaps a separate list outside of dev of things you like to do (work or not) and make a DO and DON'T list.  Pull out the DO lists and thing about kinds of careers that might get you where you want to go!"
cscareerquestions,3e21wu,nura2011,2,Tue Jul 21 15:01:01 2015 UTC,"I've thought about changing careers a few times, but you hit the nail on the head: I've got a BS in CompSci and 10 years of experience. I can't figure out where I'd change to, at least that would allow me to maintain my lifestyle.  Only hope I have right now is that my wife gets another promotion and I go to SAH Dad who does side-gigs."
cscareerquestions,3e21wu,exprogrammerfaa,2,Tue Jul 21 16:34:12 2015 UTC,"anything in the health field – if you're willing to sacrifice some income for a few years. But in return you'll have job security, and rewarded for age/experience.   Ask yourself where you will be at 50+ then there's your answer."
cscareerquestions,3e21wu,lano1106,2,Tue Jul 21 16:53:13 2015 UTC,"Maybe look at something like ""what color is your parachute"" for ideas. There's lots of jobs or there that you can leverage your current skill set to get."
cscareerquestions,3e21wu,ProgFelchPilkington,-1,Tue Jul 21 18:29:47 2015 UTC,Not sure why you're being downvoted... but this is a computer science sub reddit with a bunch of educated know it alls even though CS is not a science...
cscareerquestions,3e21wu,AndreNowzick,2,Tue Jul 21 15:23:29 2015 UTC,"I am passionate about learning and teaching (mostly mathematics and  the natural sciences). A few years ago I quit my job and became a personal tutor in mathematics. I loved interacting with children - it was extremely refreshing after the usual office politics that I was used to. I quit that phase to go back to my more lucrative coding job in finance, but I might go back to teaching again once I have a bit more cash in my bank account."
cscareerquestions,3e21wu,Banshotennin,2,Tue Jul 21 15:34:52 2015 UTC,"I got my B.S. in computer science. Worked as a programmer for about 3 years, decided I wanted to do a different job.   Now I'm an air traffic controller and am thankful every day that I made the change.  Programming is usually really good money, in demand, and relatively low stress. If you genuinely enjoy it, I think that's fantastic. I also think people who are able to be truly great programmers and love their job are fairly rare in society. The demand for good programmers right now is way higher than the supply IMO."
cscareerquestions,3e21wu,ngly,2,Tue Jul 21 16:04:36 2015 UTC,"I have been through that process. I have always love programming and I still do but the corporate environment was killing me. You start by convincing yourself that there is no job that is always 100% fun. Every job has good side and boring tasks but at some point the boring tasks seemed to be overwhelming.  Scrum meeting and agile methodology did make me waste about a week of my life every month with boring meetings. Meetings in general. Documentation tasks, processes to respect. Managers that do not care about productivity so if you speed up your tasks, there is no way that you can get few hours free. All they care is that you warm your seat at least 40 hours per week. Just hate eating a stupid sandwich really fast because I am waited for a stupid 2 hours long meeting at 1PM where I am sure that I will nothing to say.  At some point a looked at my job and it kinda felt like a prison where I would have to do 20 more years or so before being free. I have looked into converting myself in online marketing. I have just launched an ebook last month: http://hackinglinkedinformula.com/  My goal is to share my experience with younger developers so they avoid my mistakes and skyrockets their own career. So yeah, I am often here as I think I may find people that I can help. It seems that a lot of people attempt online marketing these days. It is a very promising road and literally everyone is an expert at something that you can share but it is tough!"
cscareerquestions,3e21wu,YvesSoete,1 point,Tue Jul 21 16:14:58 2015 UTC,"I wanted to read your site, but it's  nearly impossible on mobile, please pay a front end guy for half an hour of his time."
cscareerquestions,3e21wu,InvisibleEar,8,Tue Jul 21 20:42:49 2015 UTC,"Web development, by and large is not a career. It is a job more than anything else for the ones who are not gifted enough to make it to Google, Amazon, Facebook, Adobe, etc. where there is ""some"" job security and pathway for a career progression imo.   You are a mechanic for all intents and purposes, and to make you feel better they let you call yourself a ""software developer"" (which is a stretch of the term).  The pay is good/decent, but the major issue you will run into is when you're 40+ with major age discrimination in the tech valleys (particularly in Silicon Valley). The main problem is that you have to jump from company to company – this is fine when you're young. Ok, so it may not be 40, but 50+ if you're still doing web development/coding, your job security is going to be at greater risk over the young kid who is willing to do all nighters, work weekends, and take a smaller pay check.  Very few, however, stick with programming their whole lives – they either are forced to go into product management (at which point you're at the mercy of your company to not let you go and with obsolete skills) or to go into another career, or live off of savings if they haven't prepared for any other plans.   I'm not even sure if programming salaries are that great considering the high cost of living & income taxes where they make 6 figures (i.e. Bay Area/NYC). Good income for a single person/if you don't plan on having a family, but not good for a family imo to live a good life.   So to answer your question(s) – you want to ideally go into something where age and experience is valued not stigmatized (i.e. in tech)  1) law is garbage, oversaturated, no jobs available, even from top law schools, and the work is shitty.   2) government work – stable job, pension, benefits, paid holidays, little chance of getting fired  3) health field – anything really. Medicine is great, an NPA, or PA will get you to $120,000+/year, dentistry is good too.   4) create a business – a lot of people in IT decide to finally give up on working in corporate and take a stab in business, however, what goes unsaid is that most businesses in tech/general will fail for whatever reason."
cscareerquestions,3e21wu,YvesSoete,13,Tue Jul 21 13:45:24 2015 UTC,"To OP, there's a lot of young people here on reddit that dislike uncomfortable and unpopular answers, but the other thing I want to warn you is that web development is in a bit of a bubble in terms of salaries, and hype going on. Yes, we will need web developers in the future but there is an influx of people going into the field who will always be younger and more eager than you to work harder and for less money.  Think carefully where you you want to be as you get older, and what opportunities will be afforded to you. This boom in web development will not always be here, and as you get older, and inevitably slower, your employer will unfortunately ding you on that.   Tech is a place where, sadly, age and experience are not really valued unless you go into management."
cscareerquestions,3e21wu,Herro43,1 point,Tue Jul 21 14:36:57 2015 UTC,"I'd argue all of CS is getting an influx of people going into the field who will always be younger and more eager than you to work harder and for less money.   It's not exclusive to Web, that's for sure. CS is seen as a great career and the next generations are already growing up with tech from such a young age. When I was in high school almost no one knew about CS in university. Now I bet it's quite different. I've even heard there are coding classes and clubs in high school now.."
cscareerquestions,3e21wu,YvesSoete,-4,Tue Jul 21 23:12:05 2015 UTC,web development is going to be replaced by C++ in the future. I hope people and especially juniors understand that. The binary web is coming.
cscareerquestions,3e21wu,Herro43,3,Tue Jul 21 19:21:59 2015 UTC,Why would you develop a website in C++??
cscareerquestions,3e21wu,MadFrand,0,Tue Jul 21 20:35:40 2015 UTC,The binary web fixes a lot of problems we have today. That's why it's going to be the next thing.  https://en.wikipedia.org/wiki/WebAssembly  https://github.com/WebAssembly  https://www.w3.org/community/webassembly/
cscareerquestions,3e21wu,AndreNowzick,1 point,Tue Jul 21 20:45:17 2015 UTC,"Did you actually read the web assembly git pages? They actually made a special point of saying ""initially C++"".  If you think that people will be developing anything in C++ a year after WA is released, then you must not know many web developers. The great thing about binary payloads, it doesn't really matter what you wrote the actual code in."
cscareerquestions,3e21wu,MadFrand,1 point,Tue Jul 21 22:27:18 2015 UTC,So what does that mean to you? That they are going to end up with Python or what?
cscareerquestions,3e21wu,AndreNowzick,1 point,Tue Jul 21 23:08:31 2015 UTC,"I could see Python coming soon after given it's popularity, especially with C/C++ developers. Maybe others. Maybe something new. One thing is for sure, I don't see C++ being the only option for long.  Have you read this? It's a very good explanation.  http://www.2ality.com/2015/06/web-assembly.html?m=1"
cscareerquestions,3e21wu,MadFrand,5,Tue Jul 21 23:15:41 2015 UTC,"People seem to be downvoting you a lot, but you make good points. I agree with most of the things you say, and all are good reasons to look for something else. I didn't at all feel like you're disrespecting me, most days I FEEL more like a mechanic than a skilled developer, just bolting bits and pieces together to make yet another similar web app, so that part was spot on too."
cscareerquestions,3e21wu,AndreNowzick,6,Tue Jul 21 15:03:38 2015 UTC,You seem to have not ever heard of Enterprise Software Development (which is nearly entirely web based).   Plenty of jobs. Little age-discrimination. Plenty of job security. Good pay. Plenty of upward movement. Steady paycheck.
cscareerquestions,3e21wu,Herro43,-2,Tue Jul 21 17:21:27 2015 UTC,"how many enterprise web development positions are there versus say at ones consumer oriented startups? Not that many. It's a good/smart move however, I have a friend doing that at Salesforce at the moment."
cscareerquestions,3e21wu,stayonthecloud,6,Tue Jul 21 17:23:05 2015 UTC,"how many enterprise web development positions are there versus say at ones consumer oriented startups?   My company is about 5000 employees and not a tech company. There are currently 15 open positions for software development jobs. Probably over a third of the employees are Software or IT employees.   Overall, I'd probably say there are several orders of magnitude more Enterprise jobs than the ones you're talking about, if you're outside SF or Austin (where most of the world lives). I have always had a hard time finding a job that wasn't an Enterprise position.    Unless you think that there aren't that many Java or .NET jobs (hint: there are) or that most Java development jobs are for trendy mobile startups. (hint: they aren't)"
cscareerquestions,3e21wu,AndreNowzick,-3,Tue Jul 21 17:28:08 2015 UTC,"I'm talking things like ruby on rails or javascript web development which are commanding higher salaries than other programming languages – & are big in San Francisco, and NYC."
cscareerquestions,3e21wu,stayonthecloud,4,Tue Jul 21 17:34:56 2015 UTC,"I'm talking things like ruby on rails or javascript web development which are commanding higher salaries than other programming language   I'm starting to think you're just making shit up or are just an armchair developer.  Startups pay considerably lower on average than established companies in trade for stocks and other options... and when startups fail, like most other ones before them, then those stocks are worth mostly nothing. Even in SF and NYC, where higher salaries are purely due to extremely high costs of living, the enterprise jobs pay more.    http://stackoverflow.com/research/developer-survey-2015 http://www.businessinsider.com/best-tech-skills-resume-ranked-salary-2014-11   There are plenty of other places where this information is the same, but I don't see the point in posting 20 links that all say the same thing for someone who is clearly just role-playing in this thread."
cscareerquestions,3e21wu,ngly,2,Tue Jul 21 17:39:21 2015 UTC,"All your links show is that there are jobs out there – but don't show how many that are in enterprise and in what capacity (Your first link – http://www.indeed.com/jobanalytics/jobtrends?q=.NET%2C+Java%2C+php%2C+ruby%2C+python&l= ) .    Startups pay considerably lower on average than established companies in trade for stocks and other options... and when startups fail, like most other ones before them[1] , then those stocks are worth mostly nothing.   Something we all agree with since something like 92% of start ups fail.    for someone who is clearly just role-playing in this thread.   Ignoring your snide comments, javascript is growing each year needed/used on the client-side and front-end and the very link YOU mentioned says that Javascript is number 1 in most popular technologies in web development – http://stackoverflow.com/research/developer-survey-2015#tech  ""JavaScript remains the most-used programming language. Node.js and AngularJS are busting out. Java is still the #1 server side language (and the most frequently used tag on Stack Overflow). The C's continue to hold on strong.""  Then on the SAME page you mentioned it says:  http://stackoverflow.com/research/developer-survey-2015#work-occupation  32.4% are full stack web developers, 2.9% are enterprise level services developers  THEN, it says here:   http://stackoverflow.com/research/developer-survey-2015#work-complang  THat node.js has an average salary of $96,539, whereas Java has $89,054.  Who's the armchair roleplaying developer now?"
cscareerquestions,3e21wu,WinchenzoMagnifico,2,Tue Jul 21 21:12:49 2015 UTC,"Most .NET and Java stacks are found in the enterprise. I don't know how to prove this, but it's common knowledge. There are various licensing fees and other variables that cause this. Java is the goto language for virtually anything that runs on IBM equipment.  From what I have read and the job postings I have looked at, Node.js is not a Junior friendly, which would skew the salaries to the upper end.   There is no doubt JavaScript is growing, it is the only option to frontend app development. Most JavaScript jobs are not in Node.js and being the only option for frontend web development, it can and does include enterprise environments. This does not support any arguments in either direction.   I work in .NET as a full stack enterprise web developer. But if you came to me as a peer and asked me what language I worked in, I would probably respond with JavaScript. Most web applications, in all languages, are having their backend delegated to serving APIs to the frontend. So the amount of backend C# code I write is very little compared to the amount of JavaScript I write to interpret the server response.  But, according to one of your earlier messages. I'm not an actual software developer anyway, since I choose to serve my GUI through a browser instead of native. Because that makes sense.   Who's the armchair roleplaying developer now?   I think it's still you."
cscareerquestions,3e21wu,AndreNowzick,1 point,Tue Jul 21 22:21:10 2015 UTC,I'm actually looking to move into product management. Can you expand more on your view of it?
cscareerquestions,3e21wu,WinchenzoMagnifico,1 point,Tue Jul 21 16:52:25 2015 UTC,"Here's what I wrote somewhere else in this thread:  https://www.reddit.com/r/cscareerquestions/comments/3e21wu/has_anyone_abandoned_their_cs_career_for/ctb1l1n  Unless you're a highly coveted programmer, bigger companies will tend/try to nudge you into some type of management position. It will mean greater pay, more responsibility, and more career progression. Less technical skill, more people skills.  It gives you a solid pay, but the farther you become removed from programming, the more your skills atrophy, and the more your life becomes contingent on the management position i.e. you better do a good job, and not lose it, because going back into programming at an older age with stiffer/younger/cheaper competition is going to hurt.   It's a double edged sword and a lot relies on how long you can work as a product manager. At least in a programmer role if you lose your job you can always find a job somewhere else, but after a certain age, this becomes much harder.   Of course, this is a generalization, but some of the ""easier"" gigs like web development this is more likely whereas more systems (""more difficult"") it may not be the case."
cscareerquestions,3e21wu,AndreNowzick,2,Tue Jul 21 17:20:35 2015 UTC,Thank you. This was quite helpful. I am looking to move from a job where I'm responsible for all the nitty gritty technical work AND the strategic work... Into a job where I'm using my tech expertise mostly to project manage. But this raises the point that I have to watch out for skill atrophy if I go that route.
cscareerquestions,3e21wu,MilosDog,1 point,Tue Jul 21 19:57:07 2015 UTC,You're saying management is not a skill like programming. I'd argue it's the exact same. Maybe you've never had an experienced manager that can coordinate a team to keep everyone happy and working as hard as possible. You sound like an arrogant programmer who thinks they're better than everyone at their company because no one else can write code as well as you.
cscareerquestions,3e21wu,parlezmoose,1 point,Tue Jul 21 23:06:20 2015 UTC,does what you say about web development also hold true for data scientists/analysts that are more based on statistics/math?
cscareerquestions,3e21wu,AndreNowzick,2,Tue Jul 21 17:21:31 2015 UTC,"It's hard to say/predict – the ones with at least masters, but more preferably, phds are more secure. The ones with a bachelor's/master's level are more data analyst types.   As a programmer (particularly low level ""systems"" kind of engineer), you may be building the infrastructure/backbone of the company i.e. you are more needed for the day to day operations of a company. Data scientists are not as ""essential"" as programmers (systems/software developers, not so much web developers who are more replaceable), but that may be a non issue given the explosion in data that has been and will continue to be produced in the future.   Data science, to be done right, requires a combination of programming chops, statistics, and science background (i.e. a PhD in physics, biology, math, etc.) – it's a rare combination, and there are a lot of people claiming to be data scientists who are really more data analysts (who know how to use the tools, but don't really know how to build models, develop algorithms, etc.).   Right now ""data scientist"" positions are commanding a premium in salary over programmers due to the shortage of qualified people, and it's projected to grow even more over the next 5 years.   So anyways, to try to answer your question, I think data science is a better career path, per se, than say web development. Data science, imo, is not as interesting/fun as web development which is like building lego blocks (in my experience), but data science is more professional, requires more skills that aren't as reproducible imo, and more likely to work at a bigger company (rather than say a small consumer oriented start up). Their salaries have also been increasing more than programmers in general over the last few years too, and I think it's easier to break into a bigger company than through a traditional web developer pathway. Of course, a lot of it depends on how appropriate/doable a data science program is for you."
cscareerquestions,3e21wu,parlezmoose,2,Tue Jul 21 17:30:27 2015 UTC,"Yeah, I'm attending Hack Reactor in SF from August to November 2015, but I actually have an interview lined up for a Masters of Analytics at NCSU right before I head off to San Francisco. This program seems to be very highly regarded(it was one of the first ones) and would start the summer of 2016 if I was accepted.   I've been debating with myself the merits of going back to get the Masters if I do find a web development job in SF after H/R. A friend with a Masters in CS from Stanford told me in SF nobody cares if you have a Master's, but this doesn't hold true for other cities. (this friend was also the same friend who recommended H/R)  I do have the option to defer a year though so I can technically work as a web developer in SF for a year before making a decision.   It's interesting you say data science isn't as fun because I've read you actually work on the more interesting problems in data science versus just trivial web development. Is age discrimination prevalent in a data science career as well?"
cscareerquestions,3e21wu,BobSagetTheFaget,2,Tue Jul 21 17:43:51 2015 UTC,"Yes, NCSU is a solid program, excellent reputation, and 100% job placement like HR too. I personally don't like statistics too much, and enjoy web development more. Maybe it's because web development is easier to me than what data science could possibly be.   Read this thread: https://www.reddit.com/r/datascience/comments/35g7pt/data_science_vs_computer_science_as_a_career/  You could also do the online HR program too – save some money, live at home – the online program is no different than the one in SF unless you live there then go for it. Or you could completely forgo Hack Reactor and do a program like freecodecamp.com which is very high quality.    There's also Zipfian Academy too for data science but not needed if you're doing the Masters in Analytics at NCSU imo."
cscareerquestions,3e21wu,ehead,2,Tue Jul 21 18:51:46 2015 UTC,"Where are you supposed to go if it isn't web development? Backend coding? Can't young college grads do that as well? What's optimal in software engineering, then (C++/Java?)?"
cscareerquestions,3e21wu,avinassh,2,Tue Jul 21 18:26:36 2015 UTC,"I think the people who do make a successful career in this business are those who own projects, building whole products from the ground up themselves, or leading teams to do so. The people who can do that will always be worth their weight in gold. I think the ones who fall by the wayside are those who ""work on"" teams but never make the jump to leading/owning projects. If you have ten years experience but are still just a code monkey then yeah, it's cheaper to hire a recent college grad over you."
cscareerquestions,3e21wu,AndreNowzick,1 point,Tue Jul 21 20:14:14 2015 UTC,"Now ask yourself how many successful startups succeed:   Something like 92% of tech startups fail in 3 years  So for the majority of people who are not going to be in the 8% of successful startups, then what?"
cscareerquestions,3e21wu,parlezmoose,1 point,Tue Jul 21 20:18:01 2015 UTC,"I wasn't talking about startups specifically. All software companies are hard pressed to find people who can drive big projects to completion. Most people in these roles are over the age of 35, in my experience."
cscareerquestions,3e21wu,AndreNowzick,7,Tue Jul 21 20:28:27 2015 UTC,"You're getting downvoted a lot but everything you're saying is spot on. Anyone who's worked in web development and telling the truth will tell you age discrimination is a major concern. I think IT is a good place to make some good money when you're young, but not for a career."
cscareerquestions,3e21wu,parlezmoose,19,Tue Jul 21 14:24:19 2015 UTC,"The reason he is getting down voted is because of the bad attitude. For one, there is no reason to denigrate the entire field of web development. It may be highly formalized and systematized at this point, but that's the goal for any engineered system in it's advanced stages. Not everyone is going to get a job creating systems from scratch or  optimizing algorithms, and it doesn't have anything to do with their talent level.  Plenty of very talented people simply don't want to move to silicon valley, or don't feel like spending so much time jockeying for the best possible job, or perhaps more importantly investing the energy involved in impression management and networking. People have different value hierarchies.  Crapping on the OP and cutting them down to size is not the way to offer people help and support, but then again that probably wasn't the intention of this reply. Usually people who crap on other people are just trying to feel better about themselves.  But, anyway, you are right about age discrimination in IT. I suspect it's not as bad in systems type work as it is in development."
cscareerquestions,3e21wu,AndreNowzick,2,Tue Jul 21 14:56:08 2015 UTC,"It is a job more than anything else for the ones who are not gifted enough to make it to Google, Amazon, Facebook, Adobe, etc.   how different it will be at those compared at other places? Just curious, because I don't know much"
cscareerquestions,3e21wu,Fully34,0,Tue Jul 21 16:43:17 2015 UTC,"It's hard to say – I've decided (at the age of 28) to go back to medical school because of the issues I mentioned beforehand. I've researched this issue sufficiently from having spoken to friends, & family in the industry and from research I've done online that I feel it's worthy of attention.  In particular, at companies like Google, Amazon, Facebook, Adobe, etc. there's a chance to go into management more easily where there is room for more pay but also, more importantly, more job security.   Not so much a concern for you if you're in your twenties, but in your late 30s/40s, it starts to become a major issue.   The reason why I mention these types of companies is because they will be around for the foreseeable future – and once you get your foot through the door, it's reasonable to assume you will have some stability. On the other side, in management, if you do get laid off, and your tech skills atrophy, it will be harder to go back into software development at an older age, with completely new technologies, competing against kids who are much younger, energetic, and cheaper than you.  The good/bad thing with IT/web development is that you jump from company to company typically. They are usually a few year contracts, and then you go somewhere else. For most places, there's no room for upward career progression and you pretty much peak at a certain point.   Of course, every case is different with everyone having different skills, talents, and luck."
cscareerquestions,3e21wu,AndreNowzick,1 point,Tue Jul 21 16:49:48 2015 UTC,"Umm whatever issues there are with job security in tech, they would seem to pale in comparison to taking on ~$200k in debt plus no earnings for 8 years. To each his own though."
cscareerquestions,3e21wu,cshobo,1 point,Tue Jul 21 20:21:03 2015 UTC,"It's not 8 years of no earnings. It's 4 years. You make about $50,000 – $70,000 in residency which is 3 – 5 years. A specialist in medicine can make $300,000 – $500,000 a year if they go into a high paying field like radiology, anesthesiology, dermatology, pathology, and a whole lot of other fields. Average pay for an internist/family doctor is about $200,000. At the age of 40+, having job security, status, and high pay can't be matched anywhere else, and where experience and age are a bonus with more pay compared to in IT.   It's not a $200,000 debt with shit salary like in law where the debt is combined with low pay (average of of like $50,000 – $70,000 a year in law)."
cscareerquestions,3e21wu,spalunk,1 point,Tue Jul 21 20:24:04 2015 UTC,I actually considered going back to med school for a while. Too much damn work/stress for me. Good luck!
cscareerquestions,3e21wu,HackVT,1 point,Tue Jul 21 20:31:45 2015 UTC,"I'm still weighing the pros/cons, I've got a year or two before I get in, but long-term I wonder how things will be at 50+. Yes, there will be more programmers at the age of 50 than there were in the past, but it's hard to say in what role/capacity. There will be a need for managers, but only a fraction of qualified programmers will enter those types of roles.   I don't see myself ever launching a successful company, or programming past the age of 40s or so (for economic/age reasons). Who knows, maybe I will. I enjoy programming more than medicine, per se, but I want to be appreciated for my experience, not penalized for it.   If some major change in mindset happens over the next several years, then maybe I'll stick in web development."
cscareerquestions,3e21wu,KierkegaardExpress,1 point,Tue Jul 21 20:36:05 2015 UTC,I smell salt... Loads and loads of salt.
cscareerquestions,3e21wu,shekib82,1 point,Tue Jul 21 14:11:24 2015 UTC,"false, salt has no smell, but I do smell insecurity around here."
cscareerquestions,3e21wu,systembreaker,1 point,Tue Jul 21 14:12:05 2015 UTC,"Great post. Not web developer per say, but i do worry that I will need to pick up new trade or learn management at some point as ""software engineer"" field is only a stepping stone."
cscareerquestions,3e21wu,YvesSoete,1 point,Tue Jul 21 14:54:09 2015 UTC,"I think the idea that you're ""doomed"" to web dev if you don't land a job at Google is silly, but I do agree with your overall point."
cscareerquestions,3e21wu,1IsNotTooHappy,4,Tue Jul 21 16:59:41 2015 UTC,"Why not try working for someone else. Without having to worry about sourcing clients, overhead, etc. it may be nice to be given work/projects. Any chance you can take some time off to relax.   I've taught students on the weekends as well as worked with fellow military veterans and it has been great."
cscareerquestions,3e21wu,Svorax,1 point,Tue Jul 21 13:11:37 2015 UTC,"Since you're asking for something completely different, I have a good friend who was a developer for like 20 years and is now getting into real estate with his husband.  One of them really enjoys the salesmanship of the whole enterprise, while the other one is really good at handling the internal process (paperwork, business, etc.) They even just sold their first house!"
cscareerquestions,3e21wu,c8j99zn,1 point,Tue Jul 21 15:42:39 2015 UTC,"I am going back to grad school part time for an MBA this year. For the past year, I have been working alone most of the time from home doing web dev.   But in my case, I still like to program. I wanted to have an MBA as a backup if I can't find any more development jobs in Lebanon (where I reside).   But I would say to you, get an MBA. You will have a lot of options open up for you. At least that's what I hear. I am 32 now. Good luck."
cscareerquestions,3e21wu,oppopswoft,1 point,Tue Jul 21 17:21:16 2015 UTC,"While you figure things out, get a part-time job where you are physically active to supplement the freelancing work! I am in fact doing that very thing. My wife and I don't have kids and the house we own is less payment per month than rent for local apartments, so we can easily make ends meet this way.  I got burned out as a software dev after doing it for about 6 years, and now I'm working at a local store while I teach myself game development. I have free time to tinker on game engines, read up a lot on game development, and attend game dev events and do things like game jams. I'm much happier.  With the freelancing you'll be able to keep your web dev skills and resume from atrophying, and an active job for supplementary income (such as server at a restaurant) won't have any long-term stress associated with it. You'll just have to worry about the tasks at hand and when work starts and ends for the day. Also, the social interaction might help in the same manner.  Meanwhile through the whole thing, you'll be able to take your time figuring things out instead of beating your head on a wall. One day while sweeping the floor at the restaurant, a great CS/IT career idea will pop into your head and you can rush home after your shift to get going on that idea.  tldr: Don't worry too hard about emulating everyone else. Do what's right for you and be happy. I think the 1st world sometimes gets a bit stuck up about ""stooping"" below service sector jobs and we forget that there's a lot more worthwhile work and people out there than in our little corner of the world."
cscareerquestions,3e21wu,LugNuggets,1 point,Tue Jul 21 19:14:46 2015 UTC,"My guess from my experience is that at least 50% of the people who start in IT drop out for the reasons you described. You have no choice, it will only become worse, you need to start looking for a new career. Good luck."
cscareerquestions,3e21wu,toast_ninja,1 point,Tue Jul 21 19:17:59 2015 UTC,"Man, I bet you THINK you are tired of it, but aren't. I have been there. I thought I lost passion for programming, but I didn't.  I was tired of my shitty project, team, work environment, language, etc.  Got a job elsewhere and I was fully passionate again!   web dev sucks IMO, I hate it. Lear  C# and .NET (not ASP) and look for large application dev jobs. Try it out? Wont hurt.  You might be surprised."
cscareerquestions,3e21wu,burdalane,0,Tue Jul 21 19:42:48 2015 UTC,"For a moment, I thought this was /r/GlobalOffensive and the question was to people trying to go pro. Little sad it's not."
cscareerquestions,3e21wu,BahamutWC,1 point,Tue Jul 21 20:22:49 2015 UTC,"Have you thought about moving to a new place or state? Are you in a position to get into a new work environment? Can you be surrounded by new people? Can you get some kind of standing/walking desk (this one is big. I hate sitting all day, SO MUCH).  None of those things apply? That's cool. Maybe you should look into using your skills for philantrophy somehow. Could you teach, or build websites for volunteer organizations? Something with the peace core or AmeriCore? Maybe you should take some time to travel... Indefinitely?  Sorry if these aren't great suggestions. But life has a lot to offer, and you shouldn't be unhappy for the sake of money."
cscareerquestions,3e21wu,Rezous32,1 point,Tue Jul 21 20:53:02 2015 UTC,Spend a semester in school and get your EMT. It's a completely different environment and maybe splitting time between both will rejuvinated
cscareerquestions,3e21wu,helpmefindthisbug,1 point,Tue Jul 21 22:27:28 2015 UTC,My plan is to get my degree in software programming get a career out of it and then work on finishing my pilot license. I want to work as a pilot but it is a lengthy and uncertain road which is why I want a degree. Once I get there and finish my piloting I can do that while on the side doing freelance work on my own programs. It seems like a great idea to me. I didn't even really think about the long term consequences of a desk job and something to consider now for my future.
cscareerquestions,3e21wu,nomadProgrammer,1 point,Tue Jul 21 22:33:05 2015 UTC,I recently left my tech job in a concrete box to go wwoofing http://www.wwoof.net/  It's like volunteer farming or a working hostel if you will. Never spent so much time outside and it's become quite a boon for me. A lot of fun.
cscareerquestions,3e3m9u,jamesallen74,16,Tue Jul 21 18:22:42 2015 UTC,Flexible hours.
cscareerquestions,3e3m9u,ExtrasolarEarth,7,Tue Jul 21 20:28:36 2015 UTC,Caffeine...plenty of it...in many forms.
cscareerquestions,3e3m9u,doppelganged,2,Tue Jul 21 19:25:22 2015 UTC,"I really don't understand what's with the developers constantly drinking coffee. I tried it for two months and I was completely destroyed, I managed maybe 6 hours a day of at least trying to work, the other 2 I was just wandering around the internet. And when I got home I wasn't doing anything productive either, usually first thing I had to do is take a nap and I just sat at the tv or computer.   Since I've stopped I don't have a problem with working 10-12 hours a day and still do something when I get home, for example workout, do work around the house etc. I even don't have a problem with staying up for all nighters and still manage to work the next day. The trick is that when I sleep, I sleep at least 8 hours. I do have problems with getting up early but that's not a huge problem with my flexible hours."
cscareerquestions,3e3m9u,maremp,1 point,Tue Jul 21 23:11:05 2015 UTC,Exactly. Nothing beats a little exercise and a good night's sleep.
cscareerquestions,3e3m9u,IAmGabensXB1,2,Tue Jul 21 23:15:16 2015 UTC,What forms?
cscareerquestions,3e3m9u,gtipwnz,5,Tue Jul 21 21:07:20 2015 UTC,Hook it into my veins.
cscareerquestions,3e3m9u,jeffkolez,1 point,Tue Jul 21 21:45:42 2015 UTC,Pills
cscareerquestions,3e3m9u,chadwickerbasket,7,Tue Jul 21 21:44:32 2015 UTC,"We have a snack room with tons of free snacks. We also have a great coffee bar. Oh and we also have several game consoles on each floor of the building. During lunch there are always a couple of people playing Super Smash Bros.  Oh right we also get to choose our own set-up when we start working here. There are a few newcomers that have dual 2560x1600 monitors, a high quality mechanical keyboard, one of those expensive logitech mice, and a very expensive office chair. There are even a few people who brought their own IBM Model M keyboards.  Also, you can draw on literally any of the walls here as they are coated with some clear coat that wipes off dry erase marker. People always use the walls for notes and sometimes even League of Legends game planning and whatnot."
cscareerquestions,3e3m9u,Call_Me_Salamander,1 point,Tue Jul 21 21:21:40 2015 UTC,Who do you work for?
cscareerquestions,3e3m9u,cwolf1038,1 point,Tue Jul 21 22:30:50 2015 UTC,A medium sized software company in the Bay Area
cscareerquestions,3e3m9u,Call_Me_Salamander,0,Tue Jul 21 22:34:54 2015 UTC,Looking for interns? :)
cscareerquestions,3e3m9u,1a2a3a4a5a6a7a8a9a0a,5,Tue Jul 21 23:09:52 2015 UTC,How about not having an office to go to?
cscareerquestions,3e3m9u,jeffkolez,3,Tue Jul 21 21:45:57 2015 UTC,"whiteboard tables.  Whiteboard paint everywhere.  Most surfaces can be used as paper.  A lounge for napping.  A stocked on demand kitchen; you name it, it shows up.  Games, both electronic and offline (darts anyone?)  Remote controlled cars, scooters, pogo sticks that get the kinetic thinkers moving.    As for alone space?  Awesome headphones.  Hotel desk and office space if you need it, but it's rare."
cscareerquestions,3e3m9u,HiTechCity,2,Tue Jul 21 20:46:11 2015 UTC,"Having you fill out ""anonymous"" surveys, then calling you about your answers later. Seriously, I probably shouldn't even be making this post. These people terrify me..."
cscareerquestions,3e3m9u,clutchest_nugget,1 point,Tue Jul 21 22:32:52 2015 UTC,Foosball table.. and coffee (you don't survive without coffee).
cscareerquestions,3e3m9u,posteljooni,1 point,Tue Jul 21 21:37:25 2015 UTC,"I never understood foosball tables.  Foosball tables help foodball players, not developers.  Why do they assume a developer plays foosball?  You wanna make this developer happy, you put a motorcycle racetrack out back."
cscareerquestions,3e3m9u,sebwiers,1 point,Tue Jul 21 21:52:06 2015 UTC,"Good coffee (Caribou) in the office, and a very liberal ""tele-commute"" policy."
cscareerquestions,3e3m9u,sebwiers,1 point,Tue Jul 21 21:48:55 2015 UTC,"Shared offices (doubles) are really awesome.  You can do your work in peace while being near someone to talk with and bounce ideas off of.  I think windows are amazing and I actually really miss them in my new office but some people hate sunlight.  Sadly, I'm on the dark side of the office."
cscareerquestions,3e3m9u,markerz,1 point,Tue Jul 21 22:02:45 2015 UTC,"We have 4 people and 2 dogs. I have no phone, and I've received 2 emails since starting 7 months ago. Headphones on means you're busy, and that's about it."
cscareerquestions,3e3m9u,notkraftman,1 point,Tue Jul 21 23:20:14 2015 UTC,"I work in a totally open space with 4 other tech startups in the same very large, very open space. Some of the things we have:  1) an almost soundproof telephone booth right in the middle to take phone calls.  2) giant seat/swing thing – about the size of a full sheet of plywood, with pillows, big enough to sit on or lay down on, away from the regular work desks.  3) alternative work area – a different large, open space with obscenely large pillow/blankets.  BONUS: fully functional original Nintendo."
cscareerquestions,3e3m9u,Oops_TryAgain,6,Tue Jul 21 19:24:41 2015 UTC,Most of that sounds horrible. I think its been said multiple times on this board things like what you've listed here are completely distracting and sound like a startup trying too hard to be hip and cool.
cscareerquestions,3e3m9u,Lianhua,3,Tue Jul 21 20:41:44 2015 UTC,#2 and #3 sound like they want their developers to spend the night in the office.
cscareerquestions,3e3s5l,cantfindcsinternship,6,Tue Jul 21 19:02:34 2015 UTC,"There are just too much people looking for an internship/job in school or just coming out of school. Just don't give up. Your GPA is fine, your resume is okay. Just keep doing it. I know we've all read and hear how much IT people are needed, but that's about the folks that have 10+ years experience and can be put on a project on day 1. It is what it is. The degree for example in the UK that has the biggest unemployment number is CS."
cscareerquestions,3e3s5l,YvesSoete,3,Tue Jul 21 19:14:48 2015 UTC,"Thanks for the reply, I will keep trying, send out another 20 today"
cscareerquestions,3e3s5l,YvesSoete,3,Tue Jul 21 19:33:55 2015 UTC,"Don't give up, please also try to network. Talk to people, go to fairs, go to meetups, pretend like you 'got this' all of a sudden you'll land a job and you will get that experience. Good luck."
cscareerquestions,3e3s5l,feartrich,4,Tue Jul 21 19:37:18 2015 UTC,"The UK market is much much worse than the US market though....  EDIT: The unemployment rate for new grads in general is 8.5% in the US. For American new grad CS majors, it's 7.8%, going down to 5.6% (full employment levels) for people who have prior experience, like internships. The UK unemployment rate for new grad CS majors is 14%."
cscareerquestions,3e3s5l,YvesSoete,-2,Tue Jul 21 21:48:38 2015 UTC,"Because a lot of people on Reddit are delusional youngsters who can't face reality. Oh well, I warned them."
cscareerquestions,3e3s5l,curiouscat321,4,Tue Jul 21 23:01:29 2015 UTC,"If you're going into your senior year, it's time to stop applying for internships and start looking for real jobs.   My advice is to apply everywhere full-time. After, say, 100 full-time apps, wait and reevaluate your strategy as needed. Maybe you'll need more interview practice or a different project.   Also, use LinkedIn! Contact recruiters and have a strong LinkedIn profile.   EDIT: shorten your bullets. You've done some really cool stuff. The bullet lengths bury the details in there. No more than 1 line tops and have technical names closer to the beginning of the sentence."
cscareerquestions,3e3s5l,curiouscat321,2,Tue Jul 21 20:28:30 2015 UTC,"Thanks for the reply, I will take your advice into account.  Although, I do you think that I would really even get interviews for full time jobs?  If I put myself in the employers shoes I would say 'how can we trust this guy with no experience' which is why I am trying very hard to get an interview"
cscareerquestions,3e3s5l,tomcheat,1 point,Tue Jul 21 20:58:25 2015 UTC,"From personal experience, full time interviews are more plentiful than internships. All companies want full timers in the end. Internships get you temp workers."
cscareerquestions,3e3s5l,tomcheat,1 point,Tue Jul 21 21:07:27 2015 UTC,Where have you applied? And when? Summer 2016 recruiting is just now starting at some of the larger companies. Another thing you can do is draft up a nice cover letter and email smaller companies that aren't necessarily advertising for interns. Leave no stone unturned.
cscareerquestions,3e3s5l,dats_cool,1 point,Tue Jul 21 19:25:39 2015 UTC,"I know that I don't really have a chance at larger companies so I tried to target smaller-mid range companies. I would use intern match, angel list, indeed, dice searching for keywords 'intern'. on top of that I would look up tech companies in the area and look on their career page.  I would then email them too"
cscareerquestions,3e3s5l,dats_cool,5,Tue Jul 21 19:31:15 2015 UTC,"I wouldn't limit yourself like that. I mean this in the nicest way possible, but you should do everything you can to purge yourself of ""learned helplessness"". Make a nice a spreadsheet and just start adding tech companies and their Careers pages. DO NOT not apply to a company because they are large, or high prestige. I go to OSU and applied for an internship at Eventbrite after completing CS161 (intro to CS 1), and made it to the final round of interviews (a group of 15 candidates out of a ~thousand applicants).   You have a lot of options, and your resume is pretty nice. Keep at it. My spreadsheet is filled with rejections, but I don't let it discourage me.   I would consider delaying your graduation in order to get more internship experience, if that is at all possible. You should also find open source projects, and contribute.  edit: Another piece of advice I have always enjoyed is to stalk an elite CS student with a grossly OP resume and work experience, and try to model your resume and professional presence after theirs. It helps to have inspiration, I guess."
cscareerquestions,3e3s5l,dats_cool,1 point,Tue Jul 21 19:58:29 2015 UTC,"When did you start applying for internships? 100 isn't too extreme, if one were to begin applying early/mid-Fall for the following summer 100 is definitely reasonable. Apply broadly and all over the country."
cscareerquestions,3e3s5l,fitman14,1 point,Tue Jul 21 19:39:24 2015 UTC,I applied for this summers internships starting back in november 2014 and I don't know what to do differently this time for summer of 2016
cscareerquestions,3e3s5l,Ickle_Chris,1 point,Tue Jul 21 19:56:53 2015 UTC,"if you're a senior, can you actually apply for internships for the following summer? since you'll graduate in spring of 2016. why don't you apply to other areas in the country? you said you limited your search to two regions (from what I understand from your post)."
cscareerquestions,3e3s5l,feartrich,1 point,Tue Jul 21 20:02:06 2015 UTC,"I will be taking classes until december of 2016 at least (GEs and such), although I could probably graduate in the spring.  Although the other guy said to possibly delay graduation until spring of 2017, so I may do that. Any ideas for what area to apply to? Thanks for the reply  by the way."
cscareerquestions,3e3s5l,KierkegaardExpress,1 point,Tue Jul 21 20:05:34 2015 UTC,"it's funny i'm in a very very similar situation as you. I'm working on a 2nd BS in CS and I'm applying for internships for the first time this upcoming summer. My plan is to begin applying to internships late-September at the latest and shotgun my application all over the country until something bites. I'll probably be 200 applications deep by the time i find something honestly. I'm also working on a personal project that I hope to finalize prior to sending out my resume. Also, I'm heading to my school's career-fair mid-September and hoping to get a lead while I'm there."
cscareerquestions,3e3s5l,Call_Me_Salamander,1 point,Tue Jul 21 20:10:31 2015 UTC,"I would condense your projects down a little. I'm not sure by how much since you have so much extra space on your resume though. Ideally, you would turn each project into at most 1-2 really short bullets (if you had more to put on your resume).   EX: Real Estate Searcher   Scrape, store and track real estate listings with Selenium + Python + MongoDB   You're applying a bit early to smaller companies. They usually don't hire until January/Spring.  You should try applying to Automation QA/ QA/Dev Ops internships later on but it's way too early to be panicking right now. I don't think many companies start interviews until later in August/September/October"
cscareerquestions,3e3s5l,neonpredator,1 point,Tue Jul 21 20:29:15 2015 UTC,"Thanks for the response, yes I knew that I didn't have much to put on there so I added more detail to fill it out a little bit.  I will try to condense it though."
cscareerquestions,3e3s5l,skid_row_bro,1 point,Tue Jul 21 21:00:22 2015 UTC,"Things I'd recommend;  1) try and trim the resume. Whether we like it or not, most employers read a very small percentage of text provided before making a decision as to whether they will continue, and text heavy resumes are off putting (yours isnt too bad, but as concise as possible really helps)  2) can direct links be added to work examples?  3) get out there and network. Whether a company offers internships or not, email them, call them, ask just to go in and see what they do. Act interested and youll be surprised how many employers react well to that genuine curious attitude. Go to events, conferences, try and find a local user group for your favourite language/skill. This point is by far and away the biggest and most important thing you can do. Remember good employers will be getting many resumes, some maybe better on paper, so you need to focus on making your name the one that sticks out.  Source: badgered the shit out of companies for a while, and ended up with a great choice of placements."
cscareerquestions,3e2n5t,5brqc,39,Tue Jul 21 14:11:58 2015 UTC,"The problem with this question is there are literally thousands of companies that you've never heard of that offer solid comp and work/life balance, but they are only known regionally (if that). The only answers you are going to get are going to be F500 companies that everybody knows, or well-known smaller companies that gets lots of press, whereas if you do a job search within any metro job market you'll find many companies that pay very well and offer tremendous work/life balance.   There is much more to life than ""the big 4""."
cscareerquestions,3e2n5t,fecak,-1,Tue Jul 21 15:46:05 2015 UTC,this ^
cscareerquestions,3e2n5t,doppelganged,-3,Tue Jul 21 19:23:27 2015 UTC,that \/
cscareerquestions,3e2n5t,devDoron,22,Tue Jul 21 20:47:43 2015 UTC,"Microsoft is actually the answer I'd give to this question, interestingly enough.   I've written about it countless times on here before, but I usually do about 35 hours a week in the office and get compensated rather well. I've managed to keep that work schedule over five years now at the company.   The truth of the matter is, at the big tech companies, if you're a high-performer providing a lot of business value, it doesn't matter to anyone how many hours you spend at work per week. The trick is to become a high performer. If your performance is questionable or poor, only then do people start paying attention to your hours."
cscareerquestions,3e2n5t,AvecLaVerite,14,Tue Jul 21 14:45:01 2015 UTC,"The trick is to become a high performer   kind of off-topic from the post, but how do you become a high performer, a lot of self-study?"
cscareerquestions,3e2n5t,seajobss,9,Tue Jul 21 16:54:49 2015 UTC,I have this comment from /u/AvecLaVerite/ saved - pretty solid advice no matter where you're working.
cscareerquestions,3e2n5t,c4t3rp1ll4r,1 point,Tue Jul 21 18:05:22 2015 UTC,"great read, thanks!"
cscareerquestions,3e2n5t,seajobss,9,Tue Jul 21 23:00:50 2015 UTC,"The thing people miss is that those that work more than forty hours at Microsoft haven't learned to say no.  I think more emphasis has to be placed on the fact that saying ""no"" for some people is a skill to be learned."
cscareerquestions,3e2n5t,zhay,7,Tue Jul 21 15:49:57 2015 UTC,"I've definitely seen long hours at Amazon spread across the company (some teams are good, some are bad), but the only people that do that at Microsoft are the guys working on the cool hardware (Xbox, Kinect, and Holo Lens). The people I've met working on Windows and Office don't work much more than 40 hours. The Google employees I know also have a pretty good work/life balance."
cscareerquestions,3e2n5t,blablahblah,6,Tue Jul 21 14:39:04 2015 UTC,"http://www.glassdoor.com/Top-Companies-for-Work-Life-Balance-LST_KQ0,35.htm  Most of these are tech companies. There are some companies that do a 4-day work week such as Treehouse."
cscareerquestions,3e2n5t,hilo101,3,Tue Jul 21 15:19:22 2015 UTC,In addition to other comments in this thread government jobs will often do well for work/life/compensation balance.
cscareerquestions,3e2n5t,dat_ninja,2,Tue Jul 21 15:46:44 2015 UTC,"Microsoft definitely strikes gold when it comes to hours worked vs. compensation. On the other hand, you're expected to be extremely productive during those few hours."
cscareerquestions,3e2n5t,PM_ME_UR_OBSIDIAN,1 point,Tue Jul 21 16:45:06 2015 UTC,"Government contracting. Good money, and you'll probably be contractually limited to 40 hours/week."
cscareerquestions,3e2n5t,iampete,1 point,Tue Jul 21 20:15:30 2015 UTC,"I think a lot of this is also dependent on the team you join.  For instance, my company is really widely believed to have terrible work life balance where employees regularly work weekends and stuff.  I've found my hteam doesn't do that at all and specifically only ask for it on rare occasions like near releases (twice a year?).  Sometimes, you just need the right manager."
cscareerquestions,3e2n5t,markerz,2,Tue Jul 21 21:58:46 2015 UTC,"Of course everything is dependent on the team you join. But then far fewer people can answer the question ""Microsoft OSG Live Team vs Facebook WhatsApp backend"". Additionally companies exhibit trends. You are for more likely to have better hours or ""work life balance"" working at Microsoft than at Facebook or Amazon. Also if everyone answered questions with ""it depends"" then we would get no where."
cscareerquestions,3e2n5t,GoldmanBallSachs_,1 point,Tue Jul 21 22:31:44 2015 UTC,"Best at the top to worst at the bottom:  Government jobs  Microsoft  Apple  Google  Old/uncool tech companies (Cisco, Intel, IBM, etc)  LinkedIn/Dropbox/Twitter   Facebook  Amazon/Palantir  Startups < 20 people  I interned at Microsoft and worked 30-35 hours a week (granted this was an internship, but yes I did receive an offer at the end). Note that the less perks (e.g free food) a company offers, they generally have better ""work life balance"""
cscareerquestions,3e2mwk,mystxc,4,Tue Jul 21 14:09:55 2015 UTC,"Mine might vary from yours as my interviewer was late and a bit rushed. He mentioned a statistical concept and asks me to explain it in a way an elementary student could understand, then he presents a problem and asked me to code a solution and then asked if I knew the algorithmic complexity of the solution and asked if the solution could be more efficient. After that we talked about what it was like to be a PM at Microsoft and then explained the projects I'd be working on and told me what the next steps were."
cscareerquestions,3e2mwk,coforce,3,Tue Jul 21 16:39:55 2015 UTC,"For me, it was a whole day interview consisting of both coding and product management-type questions.  Coding was around CS fundamentals, and product questions were around your thought process for designing a product/feature, ie. how do you determine who your audience is, should you make it a leapfrog product or minimum viable product, etc.  Specifically, I got a question about how to design a UI for an ATM for blind people.  Also there was a lunch interview, which was relaxed... but still an interview. Good luck!  Let us know how it goes."
cscareerquestions,3e2mwk,JobspressoTeam,-3,Tue Jul 21 17:21:44 2015 UTC,glassdoor.com
cscareerquestions,3e2wif,zjbird,17,Tue Jul 21 15:24:56 2015 UTC,"Austin, although home/apartment costs are rising at this point."
cscareerquestions,3e2wif,Number127,3,Tue Jul 21 15:38:17 2015 UTC,Love Austin! But I do fear that it's escalating quickly. How's the public transportation?
cscareerquestions,3e2wif,wolf2600,6,Tue Jul 21 15:47:41 2015 UTC,How's the public transportation?   Poor.
cscareerquestions,3e2wif,LOLingMAO,4,Tue Jul 21 19:30:30 2015 UTC,"Life long Austinite here! The housing is way too expensive, public transit is nice and for a simple bus pass for a month is ~40 bucks. Traffic is pretty shit, so is the property crime too. It's a really nice city, but its not cheap at all. I used be able to O buy 1 dollar tacos downtown now you have all these hipster places that charge like 3-4 dollars. I don't mind the growth but its just that with all the people moving in at any price, the sellers do not give you a bargain. If your fine with suburbs you can move to like Pflugerville or Buda with Pflugerville in the North and Buda in the South. If you are fine with living kind of on the East side(not so nice) you can go to the Colony park area, my friends live there and Google fiber is around the corner for that location its right at the edge of the service area and it has a street that can take you directly to downtown."
cscareerquestions,3e2wif,YvesSoete,3,Tue Jul 21 16:00:35 2015 UTC,"Austin is cheap compared to New York City, London and SFBay."
cscareerquestions,3e2wif,LOLingMAO,2,Tue Jul 21 19:53:05 2015 UTC,Anything is cheaper than those cities.
cscareerquestions,3e2wif,YvesSoete,1 point,Tue Jul 21 20:22:40 2015 UTC,At least now you know where Austin's heading too.
cscareerquestions,3e2wif,LOLingMAO,1 point,Tue Jul 21 20:35:37 2015 UTC,"Not really, those are close to water(ports) that's why they blew up so much, Austin is almost smack dab in the middle of Texas."
cscareerquestions,3e2wif,YvesSoete,1 point,Tue Jul 21 22:30:30 2015 UTC,London too :-) Paris too :-)
cscareerquestions,3e2wif,Fun_Hat,1 point,Tue Jul 21 23:00:22 2015 UTC,You wouldn't happen to know how it compares with Dallas and Houston would you? Been looking into Austin but also considering the other two.
cscareerquestions,3e2wif,LOLingMAO,2,Tue Jul 21 16:52:56 2015 UTC,I do not know about housing in those areas :/
cscareerquestions,3e2wif,cscareerqs,1 point,Tue Jul 21 17:25:31 2015 UTC,"Public transit can be really shit depending on where you move. If you live by the rail, that's a nice option for commuting downtown. Most people just drive honestly.  I think the salary you can make vs the cost of living is still pretty good and you can live in a pretty good area here as an engineer. It's certainly way more affordable than NYC, Bay Area, or Seattle.  Plus, the tech community is huge. There's a nice mix of larger tech companies but also a good number of small/mid-sized companies and startups. Austin's ranked number 1 for startups on the Kauffman index: http://www.bizjournals.com/austin/blog/techflash/2015/06/austin-takes-no-1-spot-in-nationon-influential.html"
cscareerquestions,3e2wif,AetherThought,13,Tue Jul 21 18:49:25 2015 UTC,"As a Uwaterloo student I have to say Waterloo - with the disclaimer that it's not actually very interesting, but you can definitely get 1 bedrooms for 600 CAD q month if you venture into Kitchener/Cambridge, away from the student housing."
cscareerquestions,3e2wif,dolphinboy1637,2,Tue Jul 21 16:41:44 2015 UTC,"Second this. Best startup community in the country, one of the top on the world. Google, BlackBerry, open text, EA, are just examples of the big companies not to mention the hundreds of medium to small startups all over the place. Also close to Toronto, there are trains into Toronto every day. I know a guy at Google that works at both the Toronto and Waterloo office and goes back and forth every few days. Rent is relatively cheap in places, good bars and clubs (if you don't mind students), decent food options, not crowded while not too blatantly suburban. All in all, great tech scene and a great place to live."
cscareerquestions,3e2wif,nikroux,1 point,Tue Jul 21 16:58:15 2015 UTC,Orly?  I've got to say it's somewhat unexpected to hear. Could you elaborate a tad on the tech culture there. What stacks are prevalent?  Is it big corporate or mostly smaller shops? How is demand?
cscareerquestions,3e2wif,dolphinboy1637,2,Tue Jul 21 18:57:42 2015 UTC,"Waterloo consistently ranks as one of the top 10-20 startup ecosystems in the world on a lot of lists. Tonnnnsss of smaller shops built by students coming out of UW and then a bunch of larger companies have been moving in. Google is huge here, KW is home to a lot of their gmail work and there a plenty of other big corporate companies (BlackBerry as you could imagine was huge here but their footprint has been shrinking as they downsize, intel, EA, open text etc). Despite that though I feel like a lot of the scene is focused on small shops. Tons of cool stuff is being built by current and former UW students. This is a good run down of the scene right now http://www.theglobeandmail.com/technology/kitchener-waterloo-startup/article25558263/?hootPostID=37285b519622d59883d13af314824ad7&service=mobile and where its headed in the future. Lots of demand in the smaller side, places like Kik, Clearpath robotics etc are growing and this area is only getting more dynamic. With Toronto so close (about an hours drive) theres a lot of bleed over in talent, money and interaction.  Its a really exciting place to be."
cscareerquestions,3e2wif,Sneakymist,1 point,Tue Jul 21 20:20:29 2015 UTC,"Also, if you think Waterloo, Ontario is in the middle of nowhere, it is actually ~1 hour away from the largest city in the country, Toronto. Not to mention that the Waterloo region is growing rapidly right now, with the LRT, downtown Kitchener, and the two universities booming."
cscareerquestions,3e2wif,complex21,7,Tue Jul 21 19:37:45 2015 UTC,"Nashville, Raleigh, Charlotte and Birmingham are all growing areas for Tech and are very inexpensive places to live."
cscareerquestions,3e2wif,needz,1 point,Tue Jul 21 18:21:53 2015 UTC,I live in Birmingham currently and definitely agree. Alabama is ranked 8th in lowest cost of living and UABs excellent computer science program ensures a steady influx of proficient programmers. I'd say average starting salary is roughly 60k.
cscareerquestions,3e2wif,foxh8er,1 point,Tue Jul 21 21:59:40 2015 UTC,Charlotte's only an option if you want to work in banking or the like. Raleigh/Durham/Chapel Hill is more well rounded.
cscareerquestions,3e2wif,omfgwindmill,7,Tue Jul 21 23:11:02 2015 UTC,Chicagoland :)
cscareerquestions,3e2wif,comin-in-hot,2,Tue Jul 21 16:06:23 2015 UTC,"Yep, I have a place on the NW side of the side. $2000 for 4 people, with a guest bedroom, exercise room, garage, 2 baths, yard, washer/dryer."
cscareerquestions,3e2wif,PM_ME_UR_OBSIDIAN,5,Tue Jul 21 20:00:48 2015 UTC,"Seattle isn't particularly cheap, but the high wages offset the rent prices. On the other hand, traffic is a complete bitch."
cscareerquestions,3e2wif,nikroux,3,Tue Jul 21 17:04:31 2015 UTC,Also Seattle freeze
cscareerquestions,3e2wif,echospring,4,Tue Jul 21 19:11:06 2015 UTC,"Kanata, Ontario, Canada."
cscareerquestions,3e2wif,ReaperOfCaliban,4,Tue Jul 21 15:29:04 2015 UTC,This. Kanata has so many tech places it's crazy. And it's relatively cheap considering it's proximity to Ottawa.  and an average of $53k for an entry level CS position.
cscareerquestions,3e2wif,ReaperOfCaliban,3,Tue Jul 21 15:37:23 2015 UTC,I don't really know what's considered cheap housing for Canada. What would a one bedroom or studio run someone trying to save money?
cscareerquestions,3e2wif,ReaperOfCaliban,3,Tue Jul 21 15:41:35 2015 UTC,"uhhhh, I don't know if they have those in Kanata, but in Nepean (which is like a 20-30 min bus ride away) I rented a 12th floor 1 bedroom apartment for $800 all inclusive.  edit: Kanata probably has 1 bedroom apartments, I just never looked."
cscareerquestions,3e2wif,ReaperOfCaliban,1 point,Tue Jul 21 15:45:57 2015 UTC,Oh wow that's a great deal! Now how hard is it for an American to move there...
cscareerquestions,3e2wif,ReaperOfCaliban,3,Tue Jul 21 15:46:55 2015 UTC,"it's not bad. but you have to factor in other costs too, Canada is generally more expensive than the US (as the population is less dense and higher taxes etc)  Bus pass here: ~$110  food: I spend $150 - $200 a week for me, my wife and my daughter  cell phone: mine is ~$60, but is an old plan that got grandfathered in. My wifes plan is ~$70  internet: ~$60 for 25/10, 400GB a month  edit: 14% sales tax on most things. and income tax is pretty high."
cscareerquestions,3e2wif,Farren246,3,Tue Jul 21 15:49:59 2015 UTC,All sounds comparable to NYC where I live except the rent is cheaper so it's a plus so far :P
cscareerquestions,3e2wif,ReaperOfCaliban,1 point,Tue Jul 21 15:51:05 2015 UTC,"I think the main difference is the tax.  Other than that, depending how you live, it can be very affordable.  Me, my wife, and daughter live off of ~$30k a year. live comfortable at that.  Ottawa (which Kanata is a suburb of) is a very safe and small city, especially compared to NYC. We have a population of ~1M"
cscareerquestions,3e2wif,Styrofoam_Cup,2,Tue Jul 21 15:54:26 2015 UTC,"I mean, living by myself at 40k a year is nearly impossible in NYC."
cscareerquestions,3e2wif,12hphlieger,1 point,Tue Jul 21 15:55:49 2015 UTC,"Da fuq. Rent must be outrageous there.... that or you live in the lap of luxury ;)  Also, it get bloody cold here in the winter.... If you choose Ottawa/Kanata, invest in winter clothes."
cscareerquestions,3e2wif,12hphlieger,1 point,Tue Jul 21 15:57:33 2015 UTC,"Me, my wife, and daughter live off of ~$30k a year. live comfortable at that.   Seriously? I had heard that mean salary in Ottawa was upwards of $60K. I'm in a less expensive city, and my wife, dog and I are living comfortably on almost $40K, but there are seriously tough times when the car or the house needs a repair, we have nothing left over to put unto savings, and our entertainment budget consists of Netflix and the cost of electricity to turn on the 32"" TV... only during off-peak hours, of course. I couldn't imagine living off of $10K less than I'm currently making."
cscareerquestions,3e2wif,I_aminternet,3,Tue Jul 21 17:08:24 2015 UTC,"Ah so I already see the differences.   We don't own a car, we bus. So that saves us a ton (insurance + gas + repairs) we rent, so house repairs are covered by the landlord   But we don't go out often, and the only savings we have, is our daughters education savings, and some emergency money (I put like $20 away every pay).  edit: mean salaray for a dev is 60k+, but I'm an intern, I get ~30k  don't get me wrong, when I say comfortably, I mean we don't need anything, not we have tons of extra money. If my phone were to break, I'd be SOL for a few weeks."
cscareerquestions,3e2wif,I_aminternet,4,Tue Jul 21 17:12:51 2015 UTC,"I just moved to Phoenix two months ago for my first job out of college. A lot of the places I had offers or applied to are expanding out here so landing a tech job here is pretty easy. As far as the tech community goes I think we are better than the average city but where Phoenix really rocks is the CoL. Phoenix is probably one of the cheapest large cities you could live in (everything's pretty cheap except for rent in Scottsdale). The one downside to Phoenix is that it's very spread out, so if you joined a tech group on Meetup or something you may have to drive 20m to get there (although most places will have a local tech group)."
cscareerquestions,3e2wif,tankerton,6,Tue Jul 21 18:24:09 2015 UTC,Kansas City. Very cheap and has many new tech companies. Money goes along way here and its a pretty underrated city for people in their 20s.
cscareerquestions,3e2wif,tankerton,3,Tue Jul 21 16:47:24 2015 UTC,"That is a town I'm DEFINITELY interested in learning more about!! Plus, google fiber, right?"
cscareerquestions,3e2wif,SunliMin,2,Tue Jul 21 16:48:26 2015 UTC,Google fiber is pretty dope.
cscareerquestions,3e2wif,billyjenkins,2,Tue Jul 21 16:50:17 2015 UTC,Google fiber is reason enough for me to think the rest of America is a third world country with no internet access. Plus the tech industry is booming in Lenexa and downtown.
cscareerquestions,3e2wif,meanMrKetchup,1 point,Tue Jul 21 19:42:13 2015 UTC,"Damn, I wonder what the most entry-level qualifications are to get a paid internship or something in a development/tech position."
cscareerquestions,3e2wif,zman0900,1 point,Tue Jul 21 19:44:45 2015 UTC,"I couldn't tell you just yet, I'm still a student but I know when I get my degree I have no intention of living in another city besides KC."
cscareerquestions,3e2wif,danintexas,1 point,Tue Jul 21 19:55:39 2015 UTC,"Where are you in school? I've been thinking of kind of just dropping everything, taking out a student loan, and going to college somewhere I'd like to live and work afterwards."
cscareerquestions,3e2wif,cutebabli,2,Tue Jul 21 19:59:30 2015 UTC,"KC native that just moved back after school in Iowa.   KC is absolutely phenomenal combining the appeals of many ways of living depending on the area. It's a very active sports town (Football, Soccer, Baseball pro teams and a very active collegiate football/basketball following for KU, KState, MU, and a smattering of a few other schools geographically close by). It's also a big up-and-coming music area with artisianal food sectors (Food trucks galore, many acts get big here before moving into Chicago or New York, damn good cuisine when BBQ/'Murican just doesn't cut it).  Fiber is basically everywhere in the city you can think now. 70/mo for gigabit and the extra 60/mo for the cable package is a steal with the channel listing and DVR services.   Living...this one is dependant. If you want to spend, say, $1200 on rent/mo you can get a 3bed 3 bath townhome in more isolated areas on the outskirts of the metro or a decently sizable 1 bed 1 bath apartment/loft in the heart of downtown. There's space-y living to rival rural areas to typical suburbs to straight up concrete jungles. Pick your flavor! The joke in KC is that everything is 30 minutes from everywhere, so commutes are never too bad. I work in the very northwest of town and I can get there in ~40 minutes from the very southeast of the metro (Metro area being about 50 miles diameter, off the cuff).   Work...  Startups are sprouting up everywhere in old buildings being renovated in downtown KC from sizes of 5 people to 500. It seems to rival the west coast culture overall. My brother in law works around in these areas a lot out of his personal preference.  Then you've got the big guns like Garmin, Cerner, VML, Sprint, etc. who house incredible amounts of people and yield a more corporate type environment.  Any additional questions?"
cscareerquestions,3e2wif,ajd187,1 point,Tue Jul 21 21:10:45 2015 UTC,Great info!!! How's the gay scene?
cscareerquestions,3e2wif,Wellbehavedneutrino,1 point,Tue Jul 21 21:12:33 2015 UTC,Can't comment :( However I am aware of half a dozen dedicated gay or lesbian bars so the scene isn't unhealthy afaik. Being gay isn't really a stigma out around here either. No one really ever challenged the notion as I was growing up but that's anecdotal at best.
cscareerquestions,3e2wif,TheTaoOfBill,1 point,Tue Jul 21 21:15:04 2015 UTC,Thanks! :)
cscareerquestions,3e2wif,I_aminternet,3,Tue Jul 21 21:15:41 2015 UTC,"If you're willing to rent(not own) or do a bit of travel, the Vancouver area in Western Canada.  Vancouver is expensive to own places right now (and was deemed the most expensive place to live in the world earlier this year), but that stat does not take into account that rent has not gone up despite housing has.  I live on residence here, but my friend and his roommate live in Burnaby in a two bedroom apartment (though we don't pretend it's nice, the building is pretty old) for $800, meaning $400 each.  I spend alone maybe $100~ a month on food, but I am very frugal so that might be why. If you don't make everything from scratch that cost can go up fast.  Salary is roughly $60k-$70k ($68k on Glassdoor) for developers in Vancouver. There are tons of businesses and it really is a big tech hub. It is great to rent, it's just the second you start looking to buy you are looking at $600k for a small rundown home from the 70's.  Tansit is fantastic as long as you are close enough to Vancouver that you're in the skytrain loop. As long as you are in North Van/Van/Surrey/Burnaby/Coquitlam/West Minster, you just need to find a place by the skytrain, then it's a <10 minute skytrain to whichever city you choose and a 15 minute bus ride there unless you are on the pure outskirts.  Sales tax is 13% on everything but food, income tax is decently expensive, misc. stuff like food and random goods are about the American equivalent in prices I believe, if not a tiny bit more. Overall I have friends who happily live on $30k~ a year making $60k and enjoying it.  As I said, the problem isn't so much renting, it's when you are born in BC here and want to raise a family here, buying a house is where it really gets ridiculous..."
cscareerquestions,3e2wif,MoshSauce,3,Tue Jul 21 18:22:31 2015 UTC,"Salt Lake City metro area has quite a booming tech industry (Silicon Slopes) and is relatively cheap to live in. I've looked into Charlotte as well and they seem to be on the rise tech wise, and even cheaper than SLC."
cscareerquestions,3e2wif,casualblair,3,Tue Jul 21 18:37:36 2015 UTC,"I was about to say New York City, but then I remembered you said cheap :-)  I know a few people that live in New Jersey/Connecticut, which are cheaper relatively, and commute in. Audible, owned by Amazon, has an office in Newark.  I had an internship in Kansas City, Missouri and thought it was a really nice little city with a good tech scene."
cscareerquestions,3e2wif,ngly,2,Tue Jul 21 21:12:49 2015 UTC,"Columbus, Ohio has a pretty good and growing tech community."
cscareerquestions,3e2wif,regal8r,2,Tue Jul 21 20:16:25 2015 UTC,You mentioned Austin - but check out Dallas.
cscareerquestions,3e2wif,Tumystic,2,Tue Jul 21 20:42:00 2015 UTC,"Rochester, NY !?!?"
cscareerquestions,3e2wif,jagertoday,2,Tue Jul 21 21:05:21 2015 UTC,Was gonna post this. It's cheap Here and has lots of tech jobs.
cscareerquestions,3e2wif,enkill,2,Tue Jul 21 21:52:11 2015 UTC,san diego- as long as you u stay atleast 10-20mi north of downtown
cscareerquestions,3e2wif,jagertoday,1 point,Tue Jul 21 21:40:29 2015 UTC,Ypsilanti Michigan (or Ann Arbor if you want not so cheap) The property and rent in Ypsilanti is super cheap and Washtenaw County in general has an excellent tech community especially in the healthcare industry.  We're not a big city like the rest of the answers but Ann Arbor and Ypsilanti both have plenty of great things to do. And Ann Arbor has a ton of VERY smart people in it.
cscareerquestions,3e38jr,The_Talisman,4,Tue Jul 21 16:50:14 2015 UTC,"What makes the person ten years your junior a better senior engineer than you? Is it algorithmic, or is it design?   I would recommend books like P of EAA for getting better at senior level architecture."
cscareerquestions,3e38jr,negative_epsilon,3,Tue Jul 21 16:58:17 2015 UTC,"He's just better at solving problems than me. I go to him for help half the time.   EDIT: Thanks for the recommendation. That book is already on my to-read list, so that's good!"
cscareerquestions,3e38jr,buckus69,1 point,Tue Jul 21 17:11:36 2015 UTC,"I wouldn't feel bad about someone younger than me being better.  Some people are naturally better problem solvers than others.  The skill level in CS is highly variable - there's bound to be someone better than you, even if they have less experience.  Keep up on the changes, try to learn something new every six months or so, make sure you're delivering on time."
cscareerquestions,3e38jr,PM_ME_UR_OBSIDIAN,1 point,Tue Jul 21 21:25:35 2015 UTC,"If you just want to get better at problem-solving, you might want to start doing undergrad-level homework in physics, theoretical computer science or discrete mathematics :P"
cscareerquestions,3e38jr,NotASmackAddict,2,Tue Jul 21 23:13:36 2015 UTC,Cheers! I think we're taking the same course!   Have you thought about diving into some personal projects? That's where I tend to learn the fastest.
cscareerquestions,3e38jr,NotASmackAddict,2,Tue Jul 21 17:57:18 2015 UTC,"Is it Algorithms, Part 1?  I do have a personal project I worked on for about a year, but it wasn't terribly interesting and I haven't worked on it since. Been trying to think of another side project idea, but I haven't been able to think of anything other than a dumb to-do list app or something."
cscareerquestions,3e38jr,NotASmackAddict,2,Tue Jul 21 17:58:41 2015 UTC,"Yup!  I know there are some sites out there that have lists of ideas for apps and projects. I suppose you could just pick something you liked and go with that. If I had as much Java experience as you did, I would have fun making some Android apps."
cscareerquestions,3e38jr,PM_ME_UR_OBSIDIAN,2,Tue Jul 21 18:14:57 2015 UTC,"I'd love to do some Android (or iOS, since I have all iDevices) development, but I can never think of a good enough idea for an app."
cscareerquestions,3e38jr,nura2011,3,Tue Jul 21 18:40:48 2015 UTC,"I came across this a little while ago. Some decent ideas here. There are a bunch of posts like this, just Google around!"
cscareerquestions,3e3q0c,keepingit100okc,3,Tue Jul 21 18:48:25 2015 UTC,"This is not an interview, it's a friendly chat. They will probably ask about your background and a summary of your experience (not in an interview-y way, just in a ""what have you done in your career"" way), and what you're interested in doing in the next few years. They want to know if you're looking for a job now, or in a couple of months or years. If you're looking for one now, they want to know what kind of positions you'd want. At the end they'll probably ask you if you're interested in doing a phone interview, and if you say yes they'll start the process of booking an interview."
cscareerquestions,3e3q0c,wololongong,1 point,Tue Jul 21 19:13:57 2015 UTC,Thanks! I assumed as much but I figured it's better to ask.
cscareerquestions,3e3q0c,ehochx,2,Tue Jul 21 20:34:49 2015 UTC,"The recruiter will ask you some questions about your education / experience and will explain the application process. There might be some really trivial questions about algorithms and if you're able to answer those (you shouldn't have applied if you aren't), you'll move forward to the first interview stage.  At least that was my experience when I applied earlier this year.  Good luck!"
cscareerquestions,3e3q0c,GoldmanBallSachs_,1 point,Tue Jul 21 19:17:07 2015 UTC,Thank you for your response and the well wishes!
cscareerquestions,3e4jsq,TheMokaPot,2,Tue Jul 21 22:15:30 2015 UTC,If your PM isn't able to do the work that you do on a a daily basis then he/she shouldn't be a PM. How can you manage a product you know nothing about? It happens from time to time but most PMs have technical experience.  All the PMs I have had have been top notch software engineers previously in their careers.
cscareerquestions,3e4jsq,Call_Me_Salamander,4,Tue Jul 21 22:19:03 2015 UTC,I think you're exaggerating a bit.   Understand your job? Yes.  Do your job? Of course not.
cscareerquestions,3e4jsq,gspleen,1 point,Tue Jul 21 23:00:43 2015 UTC,"Well our company seems to be recruiting devs and PMs separately ... Like they start as PM or Scrum Masters and learn on the job how to ""manage."""
cscareerquestions,3e4jsq,Call_Me_Salamander,1 point,Tue Jul 21 22:20:48 2015 UTC,You should start looking for a new job. It is unhealthy to work for a PM that doesn't know about the work his subordinates are doing. You could just make up a bunch of BS about how hard your task is and be on reddit 3-4 hours a day if your PM doesn't know what you are doing.
cscareerquestions,3e2l74,tvdang7,12,Tue Jul 21 13:55:32 2015 UTC,Don't do this. You need to be mentored as a new hire and brand new developer. This sounds like throwing you in some sort of churn machine.
cscareerquestions,3e2l74,HackVT,4,Tue Jul 21 14:37:38 2015 UTC,Sounds kind of fishy to me. Most new grads can find work without additional training. Make sure you know what you are getting into -- you don't want to be stuck with the bill for 6 weeks worth of training if it doesn't work out.
cscareerquestions,3e2l74,echospring,3,Tue Jul 21 15:04:30 2015 UTC,Take a good look at the small print. They could have some kind of contstruct where you owe them money unless you work a year for them or something like that. It's important to be 100% clear on who you work for and who owes who what.
cscareerquestions,3e2l74,nutrecht,2,Tue Jul 21 14:14:03 2015 UTC,"Pretty much a scam, runaway!"
cscareerquestions,3e2l74,dict_disc,1 point,Tue Jul 21 20:08:02 2015 UTC,"I had a similar situation happen after graduating in May, contacted and the job was paying $50k and included flying you to a place just outside DC to train you (50k is pretty high around here). They did include getting paid while you were getting trained, but you were basically going to get moved to some random location in the US to a company that has interest in you after you're trained.  1) be wary of the offer, standard of living can vary drastically. Found out 50k there was only about 28k equivalent to where I am now. 2) read the fine print!! In mine it had general text along the lines of ""if you quit before 6 months you owe us the money spent to train you and keep you around in DC"" which was about $32,800."
cscareerquestions,3e2l74,erixx,2,Tue Jul 21 15:26:34 2015 UTC,"Here was his reply.   Yes there is a training fee involved, It is $500 and will be refunded back to you on your first pay check once you are in a project. To enroll you can pay $250 and after a week you have to pay the remaining $250. Training Schedule is flexible and it is totally online. It would be according to the Candidate. There is no contract but yes we will expect you to stay with us for period of one year at least as we are investing 100% of our efforts on you to give you a JOB. The training is online. We have clients all over USA however, we will give you a job in your preferred location.    Dont think I will be doing it. If it was free then i would probably do it why not."
cscareerquestions,3e2l74,clawman9090,3,Tue Jul 21 15:29:59 2015 UTC,"Sounds like a ""hey pay us 500$ hur dur, oh shit, sry no job hur durrrrrd;slf;ls"" pyramid scheme type  deal. Also... Training program? Wtf?, you would've just finished school at this point... Red flags EVERY WHERE"
cscareerquestions,3e2l74,alinroc,1 point,Tue Jul 21 19:25:37 2015 UTC,OK so now he said I do not have to pay anything they will just train me for free. they gave me the training program and It looks pretty straight forward. I will be trained in java. they are called  global IT elite. They said they average 60-65k jobs. No contract per say just said I need a 1 year commitment to work at the job they place for me. They will even wait for me to finish School. That does not sound so bad does it guys? help!! I am so overwhelmed right now.
cscareerquestions,3e2l74,Wizzad,1 point,Tue Jul 21 20:39:20 2015 UTC,"so now he said I do not have to pay anything they will just train me for free   First there's a $500 ""training fee"", now there's none? And it's the same person feeding you this information? This is a red flag. He's changing the story, trying to lure you in.  If you copied & pasted his reply above verbatim, his communication is sloppy and I would be concerned about how well he'll present you to prospective clients.   No contract per say just said I need a 1 year commitment to work at the job they place for me   And if you leave at 6 months? If there isn't a contract, what does the ""commitment"" consist of?  Googling ""Global IT Elite"" turns up no usable links. This is a red flag.  You'll get other offers. Pass on this one."
cscareerquestions,3e2l74,Madamelic,1 point,Tue Jul 21 21:11:50 2015 UTC,oops i meant global IT experts  https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=global%20it%20experts
cscareerquestions,3e3xvh,randomacct23232,1 point,Tue Jul 21 19:41:24 2015 UTC,"You can try looking for short term contract work, be advised though, if you become employed (ie take money for work) you will be required to update your SF-86 and contact your recruiter and let them know."
cscareerquestions,3e4clq,iamquack,2,Tue Jul 21 21:24:15 2015 UTC,"For benefits in the US, look for full healthcare. Dental and retirement are good too. You should look for at least 2 weeks paid vacation. Several days of sick leave are also normal. Equity is okay, but it's kind of like a lottery ticket (it could make you wildly rich, but it may be worthless). There may be bonuses too, signing (i.e. you get the bonus for accepting the offer) and retention (e.g. you get the bonus if you stay a year)."
cscareerquestions,3e3s2z,randy__wittman,1 point,Tue Jul 21 19:02:04 2015 UTC,You aren't alone I graduated in may and started working as a developer in June. Still no idea what I want to do or specialize in. I'm using my first few years to gain knowledge of what I like and dislike and hopefully go from there.
cscareerquestions,3e2etq,heyitstanu,3,Tue Jul 21 12:57:36 2015 UTC,"Do you plan on staying in the US or UK after you graduate? If so, follow these steps (for US):   Make a list of all the companies for which you want to work. Find out if they do sponsorship through H1B visas (don't really have a resource for this, maybe other international students would know). Figure out where the jobs are located for these companies. Make a list of the college local to those areas. Look at their career center website and see if they do recruiting at the school. Apply to those colleges.   You could go to a big name school, but outside of somewhere like Stanford, Berkeley, or MIT, it won't make as much of a difference."
cscareerquestions,3e2etq,Arrch,1 point,Tue Jul 21 14:31:29 2015 UTC,"Wouldn't you say that going to a school in the bay area would make a bit of a difference in terms of where to intern and making connections near Silicon Valley ie Berkeley, CSU San Jose, Cal Poly, SFSU? Just wondering."
cscareerquestions,3e2etq,Janeys,1 point,Tue Jul 21 15:40:20 2015 UTC,"The above mentioned method only works if you know which companies  for which you want to work. If you don't, then schools near SV are a good choice because of the options, but they aren't the only choice. There are other tech hubs like Portland, Seattle and Austin/DFW."
cscareerquestions,3e2etq,Arrch,1 point,Tue Jul 21 15:51:02 2015 UTC,"it does make a difference, because in general fewer companies recruit at smaller schools."
cscareerquestions,3e2etq,obscener,1 point,Tue Jul 21 16:01:38 2015 UTC,"it does make a difference, because in general fewer companies recruit at smaller schools.   Which ultimately doesn't matter if you know for which companies you want to work. Otherwise, sure, go to a larger school or one near Silicon Valley."
cscareerquestions,3e2etq,Arrch,1 point,Tue Jul 21 17:06:55 2015 UTC,Allow me to link you to the University of Georgia... I have several good friends from India who have studied CS both undergrad and grad
cscareerquestions,3e1wyz,mrdrprofessorvader,17,Tue Jul 21 09:19:37 2015 UTC,"You could try consulting, for a long stretch of my career I was never home during the week and living out of hotels.  That being said you may not travel to exciting places and get stuck on a project in the middle of nowhere for months, even years at a time.  What is nice though is you rack up a ton of points and become a platinum member with various brands so when you do go on vacation its all points and you get upgraded to the really nice rooms.  The pay is pretty good also."
cscareerquestions,3e1wyz,Guyapino,11,Tue Jul 21 11:19:18 2015 UTC,"Yeah, it's pretty easy to travel in the software field. Plenty of companies are almost 100% remote already and I'm sure such a thing will be even more common by the time you join the workforce. And of course, there's always the freelancing/consulting lifestyle.  But at 17, I have to caution you that what you think will make you happier today might not apply at all in 10 years. Study after study have shown people are horrible at predicting what will make them happy in the future. In other words, you're probably better off worrying about this kind of thing when the time comes and not when you're 17."
cscareerquestions,3e1wyz,KyleBumpus,2,Tue Jul 21 12:38:59 2015 UTC,"Wanted to add to this as well.  Currently for my job, I travel anywhere between 40-80% per month dependent on the current status of my projects. Just this past couple months alone ive been to Boston twice, Fort Smith once, Birmingham once, Toronto once, Cincinnati once.  Before this job, I had always loved the idea of travelling, of getting out and seeing the world, especially travelling and seeing new cities.  But trust me on this, it will wear out fast, really fast. Most of my colleagues also travel, and every single one of them told me when I first started, and hearing about my excitement of travelling, that I would start to hate it.  And after 4 months of it, I did start to hate it.  Google it sometimes, there are 1000's of articles talking about how to cope with business travel, what to expect with business travel, etc. Its called Business Travel Burnout, and it happens to everyone. See this article for example. Or check out This other article  And as others have said, rarely is it anywhere exotic or glamorous. Most of the time, its places like the places I mentioned above. Small boring cities."
cscareerquestions,3e1wyz,HellHound989,4,Tue Jul 21 15:26:28 2015 UTC,"As a CS student, i'd say :    PhD (conferences) company based in different countries company allowing you to work remotely changing your life path, i.e. not ""working"" at all, but just travelling and using your skills to get a job, or even just food and a bed. You can find a lot of example by googling (wwoofing, couchsurfing, guides about how not to work, volunteering...)   Furthermore, you could link IT with your low-paid travelling life goal by working as a developer in ONG's, associations, universities...just have find them and contact them, and be ready to leave everything behind you."
cscareerquestions,3e1wyz,Saucette,1 point,Tue Jul 21 10:05:43 2015 UTC,Ok great!  Options 2 and 3 seems the most enticing and between those I think working on-site at different offices at the same company but different offices seems the most stable. Still if you or anyone else has any suggestions in this I'd like to have a bit more direction.
cscareerquestions,3e1wyz,Saucette,2,Tue Jul 21 10:26:03 2015 UTC,"Example of what i was trying to tell you : start as junior dev during few years, try to move on in the same company on another job on the country you want. This implies checking out the different countries the company is based before applying. You have to know which countries you want to go to before that !  I'd say big companies in general (FB, Amazon, Intel, Dell, huge banks, IBM...) but you can also find smaller companies worth the try.  In France, we also have things like VIE.It's volunteering work paid by french government. Let's say developing a website for an association helping children by way of example. I have no idea about US but you might want to check this out as well.   Three other things :   Don't underestimate the way travelling and working differently (4th option) can make you happy and open your mind, in a positive way ofc. Being competent at school doesn't mean you'll be competent in an internship : 85% sociability & 15% skills. Why don't you try a student exchange with the countries you want to go ? It's a good thing to get interested in travelling, but living and working there is something else.   Lastly, i'm only a french student doing my master's degree, so take my advices with a pinch of salt compared to other experienced redditors.  Edit : i think it would be way easier to work remotely in different companies than travelling with the same company"
cscareerquestions,3e1wyz,chokie_roberts,3,Tue Jul 21 12:28:35 2015 UTC,"This is a little unconventional but I have a friend who spent a year hitch hiking across the U.S., he bankrolled it by doing freelance web design."
cscareerquestions,3e1wyz,deutschHotel,2,Tue Jul 21 12:04:23 2015 UTC,"Right out of college you could also look into field service jobs. You will be expected to spend most of your time on the road, and a reasonable company will take care of things like meals and other travel expenses. Beware of the sirens song of work travel though. Just because you're traveling doesn't mean you're on vacation. You'll be on the company dime, so expect 10-12 hour days average. At least that was my experience."
cscareerquestions,3e1wyz,timworx,2,Tue Jul 21 12:12:55 2015 UTC,"I've seen people work at places for a few years, and then go the freelance route. If you plan that out, it can work well. By plan, I mean network with others ahead of time so you have the people in place to refer you once you make the jump.  A friend of mine went this route so he could focus on a cycling career. The guy is kicking ass with being dedicated to that (which means lots of practice miles, money spent on bike stuff, every weekend away at races, etc.) while also making a living.  Traveling for work could be interesting, but you don't really get to see the place you're at, generally.   Personally, if it were my and I didn't have two dogs and a girlfriend, I might consider this route for a bit:   Get your degree and relocate to a city of your linking with great CS options (NYC, LA, Bay Area, etc. -> bay area is supposed to be underpaid for cost of living, though).  You'll get the big city experience, which is fun, plus you'll get your first few years of real work time under your belt. You'll learn a lot and have a nice notch on your resume.  You could jump to freelancing if you really wanted. However, now is a great time to relocate internationally (or to another city that you're interested in.) Again, more years of experience, and another notch on your resume, and now you have the experience of living somewhere international which is much more interesting than just traveling there.  You should have spent time building a good network, possibly contributing to open source (for network + resume building) up until now. Now, make the jump to freelancing and working remote. You can live wherever you'd like for however long you'd like at each place. Or find a nice cheap city/area and travel a few times a year.    The thing about travel is that it's tough to know how much you'll like it on your own, or if it's something you'd prefer to do with someone. All of which will determine the right path for you.   In general, as another redditor mentioned, it's hard to know what will be important to you some years from now."
cscareerquestions,3e1wyz,lano1106,2,Tue Jul 21 15:21:16 2015 UTC,"It really depends about a lot of factors to determine if travelling will be fun or not.  Destination: I have spent the whole summer working in the RTP near Raleigh in NC. It was probably the most amazing job assignment that I ever had. Every week-end we were going to the beach either at Wilmington or at Myrtle beach. I have discovered Hooters for the first time of my life. Washington, DC was super nice to visit too. I remember one trip, where I missed my flight to the Dulles airport, I got another flight going to Ronald Reagan airport. The rental car company because they did not expected me show up at a different airport and didn't have cars in the category of my reservation, ended up lending me a Mitsubishi convertable spider sport car. I had a very good time with that car!  But trust me if you end up in a hole where there is nothing fun to do, you will find your trips very long  Work conditions: The worse experience is when I was a sub-contractor for the FAA. This was just after 911 attack so security has become ultra strict. Even as a Canadian, I was considered a foreigner and I had to go through security checkpoint every morning like in an airport. Had to be escorted at all time even to go in to the restroom but most of the time I was confined in a computer room with no window. There is something totally senseless in the situation where I was trusted to code in the US Air Traffic Control system but they could not let pee alone. It seems to me that I could have done a lot more damage in the ATC system than in the restroom but anyway.  Oh I forgot to tell you, in my FAA assigment, I sometimes had night shifts.  Frequency: I love to travel and discover new locations and meet new cool people. At the end of my FAA job, I was travelling 2 weeks per month which is too much (especially with the conditions). You always eat restaurants and depending where you go there is not much variety: Mexican, italian, steakhouse, thai and then you start over. If you have the time to visit cool, but if your job is demanding and at the end of the day, you're tired, your social life may get a hit, you either go to dinner alone or with the same collegue that you do not have that much affinity with but it is either eating with him or alone so you tolerate him. After dinner, you head back to your hotel and watch some TV. The other option which I did, is to kick yourself and force you to go out alone and meet new people. Also, I am assuming that you are single but if you have a girlfriend, this is going to be an immense test for your relationship.  The ideal frequency to me would be about 4 trips per year or 1 per season.  To sum up, in order to be cool to do business travelling, it depends on the destinations, work conditions and the frequency. With the right combination, it can be a total blast but it is not the rule. this is the exception. You will have to try out by yourself to find out.  Have fun! PS: Curious to know more about me, I have this personal website: http://www.olivierlanglois.net/index.html"
cscareerquestions,3e1wyz,jbcsee,2,Tue Jul 21 16:49:08 2015 UTC,"If you want to travel for work look into sales engineer roles or other customer facing engineering roles.  You will be expected to travel to customers sites with sales or just in a support role to get everything working.  Frequently these roles also send you to conferences, for setup and/or customer meetings.    I've worked in that role myself, but honestly I didn't find it very fulfilling.  During one eight week stint I was only home on weekends and I just couldn't handle it.  Beyond that you end up putting in a lot of overtime.  Conferences require you to work weekends and nights.  Sales trips require lots of after hours work, dinner/drinks with customers, reports to the home office after the days work is done, etc...  However, it is a good way to travel.  I've been all over the US and a few foreign countries in such roles."
cscareerquestions,3e1wyz,TheTaoOfBill,1 point,Tue Jul 21 18:04:04 2015 UTC,My previous job was 100% remote. I could theoretically have worked anywhere I wanted so long as it had a reliable internet connection.
cscareerquestions,3e3mfz,ReaperOfCaliban,1 point,Tue Jul 21 18:23:45 2015 UTC,"I'm not too versed all of these, but I would guess HTTP, HTTPS, TCP/IP, UDP, and WebSockets to start."
cscareerquestions,3e3jaw,946789987649,1 point,Tue Jul 21 18:02:28 2015 UTC,"If you can learn it in time, Construct 2 is great for teaching kids how to program. A summer game camp in town uses it. It follows a lot of the conventions of coding, so you'd be able to pick it up pretty quickly, but it's more visual, and you can make a lot of neat games with it. There's a free version available for smaller projects."
cscareerquestions,3e3jaw,b-enchante,1 point,Tue Jul 21 22:12:41 2015 UTC,Working together on the first python assignments on codeacademy might be an idea?
cscareerquestions,3e3jaw,nutrecht,1 point,Tue Jul 21 18:18:03 2015 UTC,Thenewbostons  java tutorials on YouTube. Found that so helpful as a novice programmer. Hell make easy stuff and then eventually bucky even makes a simple game. Should keep him occupied for quite some time
cscareerquestions,3e3jaw,Roadsoda350,1 point,Tue Jul 21 19:11:07 2015 UTC,You could show him https://scratch.mit.edu and mess around with it for a while.
cscareerquestions,3e3jaw,jofad,-1,Tue Jul 21 20:37:51 2015 UTC,I would walk them through the basics of javascript and play through this game: http://play.elevatorsaga.com. In general I would choose javascript as the language to teach a high schooler because as long as you've got a text editor and a web browser you're good to go.   In general games are a good thing to pick. https://www.checkio.org/ is another good programming game site.
cscareerquestions,3e4qfr,CSEngineer13,1 point,Tue Jul 21 23:05:37 2015 UTC,"Here I am working 35 hour weeks.   If you want work life balance, ask about it during interviews."
cscareerquestions,3e3ubi,jobjobny,2,Tue Jul 21 19:17:20 2015 UTC,"The key is to manage expectations.   Selling yourself is good.  Selling yourself FAR beyond your ability is bad.   Frontend and Backend, while at a high level have standardized meanings, tend to change moderately whenever you actually apply the context.  So let's apply the common context : web applications.   The frontend of web applications (whose backend is developed in Python, Java, C#, Ruby, etc)  generally ALL use HTML5/CSS3/Javascript.   The frontend of all Windows, Mac OS X, Linux, Android, iOS desktop applications/apps are all different, utilize different libraries, etc. Matlab probably fits in here as well.   Dig into Python or Java, and start building small projects. Some of your knowledge from your previous experience in Matlab will help, I'm sure, but you will encounter things that you have not before."
cscareerquestions,3e3ubi,zdware,1 point,Tue Jul 21 19:43:11 2015 UTC,"Great, thanks, I am not saying I am having those abilities, but until before, I just thought I was ""writing programs"", but then, I was using GUIs and databases, so I do know a bit about the concepts behind what people then might call front and back end, which I could bring across as basics, with the need to build on depending on what is the goal.  I am about to start a project where I build eye tracking software that interfaces with my acquisition in real time. I think I could just do that in Python then instead of Matlab. So you would, with the goal to keep it universal and widen where I can apply to, recommend Python over Java?   Thanks a lot again"
cscareerquestions,3e3ubi,zdware,1 point,Tue Jul 21 19:56:09 2015 UTC,"I really couldn't give you a recommendation without full details of what the software is trying to accomplish.   Key things to look at are :    well supported libraries that will help you, are they in python, java, or both? Java's JVM allows it to be relatively ""cross platform"", but if you need to be close to the metal (system), than you may run into issues. Personal preference, and also team preference."
cscareerquestions,3e29r0,whodat-whodat,7,Tue Jul 21 12:06:31 2015 UTC,"""Computer Science"" would look better on a resume than a specialized degree in gaming. A CS course is also more likely to teach you the fundamentals you need to be a good developer. It's not just about whether you do more (or more ""intense"", whatever that means) programming. But without seeing the degree programs, it's hard to give a strong opinion one way or another."
cscareerquestions,3e29r0,Himekat,1 point,Tue Jul 21 13:00:34 2015 UTC,"Well the degree title is ""Computer Systems"" if that makes any difference.   I'll post links to the two courses in the main post so you guys can have a better look"
cscareerquestions,3e29r0,Himekat,5,Tue Jul 21 13:04:46 2015 UTC,"Eh, it depends on the person whether they will be wary of the degree of not. In general in the US, anything short of ""Computer Science"" or ""Software Engineering"" on a resume these days sometimes looks odd. But, then again, you come from outside the US, so it depends on what's normal for your country. ""Computer Systems"" might just be what they call ""Computer Science"".  As for the actual programs, they both have internships/co-ops, which will be a huge plus for you, especially if they help you to secure a job for that period of time. Internships/work experience often make or break a resume. Other than that, the game development one has a a lot of courses dedicated to game design and graphics. Those probably won't be helpful to you if you aren't going into game development. Whereas the Computer Systems degree has some stuff (especially in the later part of the curriculum) that is more targeted toward professional software engineering (project management, data stuff, professional issues, networking), and your projects (which you have to do multiple of in the degree) will probably be targeted more at traditional software development rather than games."
cscareerquestions,3e29r0,SunliMin,2,Tue Jul 21 14:03:07 2015 UTC,"Here in Canada, ""Computer Systems"" (what I'm taking) is computer science focused on software development/shell/OS/project management/etc. No hardware (other then a architecture course), not super math based, it's basically a degree in computer science focused on software where all the math you do is discreet mathematics and ones that are seen has completely practical or within the realm of practicality for developers, not calculus.  ""Computer Science"" degrees are really general, at least here. My friend at Uni for computer science is taking philosophy, astronomy and some other irrelevant courses to fill the ""required science credits"" needed since the credits aren't ""you need 16 software credits"", it's ""you need 16 science credits"". My buddy told me in his first year he had 2 discreet mathmatics courses, 2 calculus, those sciences and basically Programming 1 (Python) and Programming 2 (Java).  In Computer Systems, we have had OOP1(Java), OOP2(Java), Procedural Programming(C), Web Dev(JS/PHP/HTML and also covering XHTML/XML for older stuff), two discreet mathematics courses, a course on using powershell and *nix terminal, ""Project Term"" (project management term where we complete a polished thing and publish it) with our only ""elective"" being business and business communications (English focused on professional writing, emailing coworkers, writing reports, writing user guides, etc).  One is more math and science, the other is more programming/software/management.  Obviously it changes by school though, so maybe OP's isn't the same.  It may be different where he is, but here that's the gist of it. Computer Systems = Computer Science focused on Software/programming/software management techniques."
cscareerquestions,3e29r0,Himekat,1 point,Tue Jul 21 15:59:39 2015 UTC,"Yeah the Computer Systems course I'm looking at is very similar to the one you mentioned. Quite programming heavy, I did discrete maths last semester etc. Which is great to hear because I'd love to work in Canada some day"
cscareerquestions,3e29r0,Himekat,1 point,Tue Jul 21 16:21:47 2015 UTC,"Well Computer Science is the default name for it here too. I think Systems has just always been called that and it hasn't been changed out if tradition.   Yeah, I should be doing 8 months of work placement in either course, and with my grades (if they stay as they are anyway), I should be able to get something good.   Thanks very much for having a close look at both courses, I really appreciate it because I would've thought graphics could be a good thing to have in general. Would the games programming be kind of redundant or could it be useful? Games does project management too, (as well as projects) but besides that I would've thought those kinds of modules would've been kind of unimportant in the grand scheme so I your input is really valuable to me"
cscareerquestions,3e29r0,Himekat,1 point,Tue Jul 21 14:19:54 2015 UTC,"I'm not saying graphics would be completely useless, but in a lot of places it won't matter much. Although, right now, I work with a kid who loves graphics. He makes games in his spare time and knows a lot about graphics and rendering. This is a bonus for my team, because we specifically work on image rendering on a website. He gets to work on all sorts of interesting image rendering problems that fit well within his skill set. But I wouldn't say that sort of thing is widespread.  When it really comes down to it, the things that will matter are the fundamentals and you get those in both courses."
cscareerquestions,3e29r0,MothersRapeHorn,1 point,Tue Jul 21 14:46:28 2015 UTC,"But would most potential employers understand that I'd have the basic covered with a games degree or would they see the word ""games"" and move on?"
cscareerquestions,3e29r0,MothersRapeHorn,1 point,Tue Jul 21 14:55:55 2015 UTC,"It will depend on the person. They might see the word ""games"" and move on, because game development degrees are usually seen as lesser degrees than computer science degrees (at least here in the US). Unless, of course, your goal is to intern at a game company and then put effort into getting into the games industry and stay there for a while."
cscareerquestions,3e29r0,HansVader,1 point,Tue Jul 21 15:00:28 2015 UTC,Thanks very much for all your help. Thinking about the future and stuff has me all stressed out. Can I ask (if you don't mind) what you do/what your qualifications are?
cscareerquestions,3e29r0,ReaperOfCaliban,3,Tue Jul 21 15:07:22 2015 UTC,"I'm currently a DevOps Engineer. I work on things like building and deploying my team's code, monitoring and reporting on production systems and problems, scripts to make things in the infrastructure happen automatically, and other things surrounding our servers and applications/services. In the past, I've done database development and my strongest technical knowledge is in SQL and database theory. I've also done QA work in the past, too. I have about eight years of experience and a Computer Science degree. I've worked at four companies, including Microsoft, and I work in the Boston area which has a pretty strong tech market.  I wouldn't stress out too much about the future. Focus on getting good grades, doing internships, having projects to put on your resume. That will automatically put you in a much better position."
cscareerquestions,3e29r0,SunliMin,1 point,Tue Jul 21 15:15:41 2015 UTC,"That's one impressive résumé you have there, well done.   I really just need to make this decision and get past it though. But the general consensus seems to be that the Systems degree would be a better launching pad. Regarding projects, we were kind of told that a lot of companies disregard projects that you had to do as part of a course. How true is this?"
cscareerquestions,3e29r0,simon311A,1 point,Tue Jul 21 15:19:32 2015 UTC,"It's not w normal title, so it's a huge negative.  Would you pick a teal apple instead of a red?  It may be fine after all."
cscareerquestions,3e29r0,Himekat,1 point,Tue Jul 21 13:45:41 2015 UTC,"Huge, really? So basically I'm trying to decide which course is less shit to have?"
cscareerquestions,3e29r0,irishcule,1 point,Tue Jul 21 13:47:38 2015 UTC,"I recommend practicing in your free time and getting the normal degree, unless your school is very well known.  A nonstandard title easily gets you filtered out of the application process."
cscareerquestions,3e29r0,irishcule,1 point,Tue Jul 21 14:08:05 2015 UTC,"Would a Computer Systems degree count as normal though, or would it get me filtered out?"
cscareerquestions,3e4g2o,dmb1993,1 point,Tue Jul 21 21:49:07 2015 UTC,"I switched from EE to CS my junior year of college and had no problems at all finding software engineering positions. Actually at most of the internships I have had there have been a good amount of non-CS majors that ended up as developers, like EE and Chem E.  I'll be graduating with a CS degree having taken more math and EE upper div courses than CS, but I will have a BS CS. In the end all that matters is that you have a piece of paper that says you have a degree (unless you want to go to grad school, then courses matter) because everything from graduation onward is dependent on experience, not the courses you took.  All my internships have been programming in C++ so far so I personally like the language, though it isn't very modern and is terrible for some things. I quite like Python. Just get comfortable with some industry standard languages and learning any other language will be very quick and easy. Being a good software developer has nothing to do with the languages you know."
cscareerquestions,3e4cc4,gobearsgobears,1 point,Tue Jul 21 21:22:17 2015 UTC,"There is no start and end. Companies are always recruiting. Though from my personal experience and the experience of others I have heard through my school's CS club, it seems to be easier to get jobs when you least expect it. Not many people graduate in the winter or spring compared to summer, and there are actually a good amount of positions open in the winter/summer. Everyone I know who graduated in winter/spring was able to find a job just as easily as people who graduated in the summer.  I live very close to Google HQ in the South Bay and know several people who work there from my university that got jobs after they graduated a quarter late (graduated in January)."
cscareerquestions,3e47rx,khirok,2,Tue Jul 21 20:49:45 2015 UTC,"Are these 3rd party recruiters? If not, you have no ground to complain."
cscareerquestions,3e47rx,curiouscat321,1 point,Tue Jul 21 21:08:23 2015 UTC,"Yes it is a 3rd party. I do have grounds to complain because so many of them decide to do this then just fall off the face of the planet. It's just downright rude, so I would like to be able to share this with others so they can ignore these recruiters when they come knocking.  Instead of building relationships they treat it like a number, I just want to be able to assist others in ignoring them to show them we won't give them business acting like people aren't people."
cscareerquestions,3e47rx,NotARandomNumber,1 point,Tue Jul 21 21:33:17 2015 UTC,"I'm sorry, but spamming your resume to a company 3 times in a short period of time doesn't reflect poorly on the company. While it is nice, a company is under no obligation to respond back to you."
cscareerquestions,3e37w8,Decker87,2,Tue Jul 21 16:46:04 2015 UTC,"Be polite and take the call in a quiet area. Be ready for the call 5-10 minutes before the call is scheduled. Focus on the call and nothing else, do not be typing away at your keyboard during the interview. Have your resume in front of you in case the interviewer has a question about it. Thank the interviewer when you're done."
cscareerquestions,3dzpij,olds123,26,Mon Jul 20 21:00:44 2015 UTC,I'm a junior myself but I have taken part in hiring discussions.   We are typically pretty lenient when looking at Junior code. But here is what we will look for.  Is your style legible and consistent?   Here we are looking for consistent spacing and intelligent naming. We want your code to read like a story book. We shouldn't have to guess what your variables mean. So naming your Enable Email Notification variable bool EmailNotificationEnabled as opposed to emNot or ene.  Could we pick up your code and modify it easily?  Your code should be modular and easy to add features to without having the change the entire code base.  If your sample code is a coding challenge we gave you then you should follow the directions you're given to the T We've rejected candidates who made their code overly complicated. We asked them to give us code that saved data to a text file. They saved the data to an encrypted text file inside a compressed password protected zip folder. Then they went and missed some requirements we did ask for. So not only did they give us features we didn't want but they missed features we specifically asked for.   Minimal Duplication  Personally I live by a rule. Copy + Paste is the devil. Chances are if you're duplicating code it's something you could be putting in a separate method or a helper class. And the more times you duplicate code the more difficult it will be to maintain and add features to.  Smart commenting We don't want you to comment every line. That makes things extremely difficult to read. Remember we want to read your code like a story book. But you should put a comment summary at the top of any method or class that may be confusing.   You understand the code you put in your project  Every line of your code should be used somewhere in your code. And if you're using it you should have an idea how it works.
cscareerquestions,3dzpij,TheTaoOfBill,10,Mon Jul 20 21:58:59 2015 UTC,"Is your style legible and consistent? Here we are looking for consistent spacing and intelligent naming. We want your code to read like a story book. We shouldn't have to guess what your variables mean. So naming your Enable Email Notification variable bool EmailNotificationEnabled as opposed to emNot or ene.   This is the one that drives me craziest.   Especially if different people don't follow the same coding style in the same project. Or even worse, the same person changes their coding style between projects (Exception: different languages)  I will tolerate insane / horrible coding styles but at least be consistently bad so I can fix / understand it.   camelCase and under_scores are probably the best ways to phrase variables but different languages have different standards put forth by their maintainers.   The worst one I have ever seen was completely uncomprehendable Hungarian Notation in Java... but at least that person was consistent... in 2000... and then it got passed between multiple maintainers for 13 years until I was put in charge of it."
cscareerquestions,3dzpij,Madamelic,6,Tue Jul 21 00:11:42 2015 UTC,"Ya know, I always hear people say that they like to see candidates who comment their code and I feel that way too. But I just started a software engineering job and I have yet to see a single comment aside from a ToDo or FixMe. I mean this is only the second actual place I've worked, but the other did a bit more. Maybe I'm looking in the wrong places, but it gives me the feeling that people really don't much comment their code and simply decide that it's ""self commenting""."
cscareerquestions,3dzpij,kyle2143,3,Tue Jul 21 03:31:51 2015 UTC,"I was reading Clean Code earlier, there is a chapter about comments that really cleared that up for me.   I couldn't find the chapter online, but here is a post someone made about it."
cscareerquestions,3dzpij,TemperamentalPrinter,3,Tue Jul 21 11:28:47 2015 UTC,Did it look something like this?
cscareerquestions,3dzpij,Spoor,1 point,Tue Jul 21 12:13:55 2015 UTC,I code in .Net and visual studio. Visual studio has a nice feature with a triple slash.   Type /// above a message and it'll automatically generate a summary comment xml for your method. And that comment will show up when you hover over a method or variable you used the summary comment on.  So my general rule in .Net is I put a summary comment on all public variables and methods. That way I can hover over a method call and get a summary of what it does and the parameters it accepts.  private methods and variables get no comment because I can read the code faster than a comment.  If you name your variables well enough your code should read just as effectively as any comment.
cscareerquestions,3dzpij,TheTaoOfBill,1 point,Tue Jul 21 11:39:40 2015 UTC,nice!
cscareerquestions,3dzpij,Farren246,1 point,Tue Jul 21 12:52:13 2015 UTC,"For truly complicated things, where normal comments are insufficient, and to understand what it does you truly have to understand what it's for and what it needs to do and how it performs its task down to a line-by-line basis, I like to leave  // Here be dragons"
cscareerquestions,3dzpij,Farren246,2,Tue Jul 21 12:51:10 2015 UTC,"Not often, sometimes I feel like people aren't completely honest on the internet. :/"
cscareerquestions,3dzpij,dpgaspard,1 point,Tue Jul 21 04:16:15 2015 UTC,"I noticed that to. I've had the senior guy tell me to straight up get rid of my comments when I did heavily comment a class.  That being said, naming conventions are huge here and so are style. They basically feel that if they can't understand what it is doing from reading it like a story, then your naming is wrong/you wrote it in a poor way, not that it needs a comment."
cscareerquestions,3dzpij,SunliMin,1 point,Tue Jul 21 21:06:14 2015 UTC,"God the following directions.  I gave a web dev test that specifically mentioned and explicitly required using JSONP instead of ""traditional"" ajax because it was on a different domain, and still like 2 or 3 candidates e-mailed me asking about how to get around the Cross-Origin Policy.  This was supposed to be a single file static web page, but 2 candidates even wrote their own servers (one php the other node) to request the data and send it to the static page with ajax.  Edit: Along with a link to a short quick blurb/tutorial about JSONP and a link to the JSONP wikipedia page."
cscareerquestions,3dzpij,carneslord,2,Tue Jul 21 01:23:47 2015 UTC,You should have a project on it. It should be something you worked on. You should be able to answer questions about that project like you actually wrote code on that project.   You have no idea how many people I interview who can't tell me technical details about a project they said they worked on. I really don't care how elegant your code is. We can work on that. I really want to hear about a mistake you made and learned from. What don't you do anymore now that you have some actual work under your belt.
cscareerquestions,3dzpij,dpgaspard,12,Tue Jul 21 04:11:46 2015 UTC,"Doesn't really matter much at this point. You've gotta be rather lucky just to get to an interview.   The whole ""it's so easy to get a job as a programmer"" thing is utter bullshit. There are barely any junior job postings out there and with the amount of bootcamp grads you have to compete with, you have even less chances. Unless you have some sort of connections, of course. The bar has been raised drastically over the past several years. To attract enough attention you need to have several really well-made projects, preferably those that have actual users. Being a ""quick learner"" is simply not enough anymore.  Good luck to you either way. Maybe you'll succeed and won't have to be a bitter loser, posting angry messages on reddit like I am."
cscareerquestions,3dzpij,Alexeyzab,7,Tue Jul 21 02:04:13 2015 UTC,"I don't disagree that luck is necessary, but that doesn't mean you can't swing the odds in your favor.  Also, I have no projects on my resume, and I have no trouble getting interviews.  Maybe it would help if you had your resume reviewed by this sub?"
cscareerquestions,3dzpij,zhay,6,Tue Jul 21 02:24:16 2015 UTC,Can I see your resume? :) Pretty please?
cscareerquestions,3dzpij,voltaaage,2,Tue Jul 21 02:54:53 2015 UTC,"http://d-h.st/mWPo  Click ""download now"" (semi anonymized resume)"
cscareerquestions,3dzpij,zhay,1 point,Tue Jul 21 15:52:42 2015 UTC,"I've posted my resume three times in a dedicated resume critique thread, got one comment, adjusted the resume accordingly.  I assume you have a college degree then? Since I don't have one, I need to compensate the lack of it with a portfolio. Otherwise I am having a hard time imagining getting any interviews whatsoever."
cscareerquestions,3dzpij,Alexeyzab,6,Tue Jul 21 03:33:08 2015 UTC,"No degree, no connection/network, limited display of skills... Seriously do you think you're putting the odds in your favor? Things take a lot of work, there will always be jobs for truly skilled programmers"
cscareerquestions,3dzpij,xsqr,0,Tue Jul 21 04:04:30 2015 UTC,"Of course they do, not arguing with that.  Does that mean that a truly skilled programmer would perhaps skip the junior step and jump straight to mid level?"
cscareerquestions,3dzpij,Alexeyzab,1 point,Tue Jul 21 04:12:36 2015 UTC,I've found that anyone who thinks of themselves as a truly skilled programmer (without having a job) has a lot to learn about the real world.
cscareerquestions,3dzpij,Farren246,1 point,Tue Jul 21 12:55:50 2015 UTC,"Every Monday this sub has a resume critique thread. CS resumes are necessarily different from other professions. It's worth diving in to. That said, I'm bitter too and I think you're right about the level of talent needed just to break into ""entry level"" work."
cscareerquestions,3dzpij,Farren246,3,Tue Jul 21 12:54:36 2015 UTC,Are they supposed to figure out I'm a mid twenties white guy just from my name? Or do I put a little face picture of my smiling white guy face in the top left of my resume to really play up the favoritism?
cscareerquestions,3dzpij,djn808,3,Tue Jul 21 03:00:26 2015 UTC,"Hey now, you aren't doing yourself any favors by calling yourself a bitter loser. Life is full of rough patches and painful unfairness. But you push on. You have to push on-- otherwise the rest of your life will be miserable. You only get one life, so you might as well make the most of it by cutting away the self-imposed negativity.  Good luck to you, too, friend."
cscareerquestions,3dzpij,c8j99zn,2,Tue Jul 21 07:22:20 2015 UTC,"pretty much everything in life comes down to people skills and having the connection. you cannot simply just learn to program in your basement and then expect to get a job. sorry that you're having trouble but you've gotta work on other skills besides programming. even if you're super amazing with programming but have very little social interaction you're going to have a hard time in the job market. this goes for dating, jobs, etc.."
cscareerquestions,3dzpij,Mathias_Mouse,2,Tue Jul 21 05:20:59 2015 UTC,"I get so fucking pissed off at all the comments like this from people who have given up that drag people down under the guise of ""telling them how it really is"", so here's some tough love from someone who made it and had to do it the hard way. You applied to/passed out your resume to companies saying they are looking for junior developers. Congratulations Alexeyzab, you have put in as much job hunting effort as everyone else which is basically 0. You went fishing in a pond with a million other people expecting to catch a fish and you didn't.  Have you tried cold calling and going door to door at every single tech company in the surrounding area? There's probably a hundred or more of them in a 50 mile radius, and at least one that would take your physical/e-mailed resume, think about it, and decide to take free labor from a hard working college grad even if they are not hiring. What's that? You can't live without making income? Get some bullshit job on the side. That's how I got my first programming job and this is exactly what I did -- cold calling everybody, working my ass off at my first internship, and working a second job so I could live in a shitty apartment in a shitty part of town with 2 shitty roommates until I proved I was worth hiring as a full time employee.  If you want it bad enough you will make it work. You either make something of yourself or you leave your dreams behind and regret it for the rest of your life because ""I wish I put in the effort."" Never forget that nothing worth having in life comes easy, so get off your ass and stop fucking complaining about it on Reddit like the world owes you something because spoiler alert: it doesn't."
cscareerquestions,3dzpij,nalandial,-2,Tue Jul 21 04:05:36 2015 UTC,"You don't really know me and you don't know what I have and haven't done in my search for a job. You do not know my background at all. So please, don't make any assumptions about me being lazy and complaining.   This is the type of thing where employers try to stop people from talking about their salaries. It's shamed. It's ""not what you do"". I am not dragging anyone down. I just want people to not be delusional and believe in the lies about the fairytale world of programming jobs. If this is enough to get them discouraged, well, that's rather sad.  People can benefit from hearing an alternate point of view once in a while, you know."
cscareerquestions,3dzpij,Alexeyzab,3,Tue Jul 21 13:51:15 2015 UTC,"There are barely any junior job postings out there...you have even less chances [unless] you have some sort of connections...  To attract enough attention you need to have several really well-made projects, preferably those that have actual users. Being a ""quick learner"" is simply not enough anymore.   That is what I'm talking about. You talk as if it is impossible to get your foot in the door without some pre-existing conditions or innate ability, and I'm saying that if you want it bad enough, you will get it without them."
cscareerquestions,3dzpij,nalandial,1 point,Tue Jul 21 13:56:34 2015 UTC,"Not impossible, I agree, but a lot harder than the typical ""just be a quick learner and they'll hire you"" I've been hearing here for the past 6 months."
cscareerquestions,3dzpij,Alexeyzab,2,Tue Jul 21 14:22:44 2015 UTC,"Had to down vote on the free labor part... uh, what?"
cscareerquestions,3dzpij,clawman9090,1 point,Tue Jul 21 14:30:48 2015 UTC,That wasn't my experience at all. I went at it hard for 2 weeks applying to basically everyone in my area and had a couple offers in no time. I think if you really exhaust all your efforts (unless you live in an area with very few jobs) you should be able to land something pretty quickly. Also really practice your interview skills.
cscareerquestions,3dzpij,Hoser117,2,Tue Jul 21 15:46:24 2015 UTC,Start with an internship. Many places will hire you on full-time if you work your ass off. That is the road I took and I don't have a degree.
cscareerquestions,3dzpij,nalandial,2,Tue Jul 21 22:18:50 2015 UTC,Usually internships will only go to either graduates or late-stage students with strong portfolios.
cscareerquestions,3e3vy7,HomicidalStick,1 point,Tue Jul 21 19:28:34 2015 UTC,"If you're looking to attend college for comp sci, most programs start with the basics so even with no prior experience you can do well."
cscareerquestions,3e3vy7,needz,1 point,Tue Jul 21 19:30:35 2015 UTC,Thanks for the quick response. Knowing this makes me a lot more comfortable with the CS :)
cscareerquestions,3e3vy7,ichivictus,1 point,Tue Jul 21 19:49:26 2015 UTC,"From my experience though, the average to top performers generally enter intro classes with some understanding. Top performers usually know the basics already.  I suggest doing most of the Python courses on codecademy to get started."
cscareerquestions,3e3vy7,chevybow,1 point,Tue Jul 21 23:12:56 2015 UTC,I know it seems that most people in cs have been programming for years- but there's plenty of people that go into college as a cs major with no prior experience. I had no experience other than java knowledge that was covered within like 2-3 weeks in my intro course. I'm doing fine. Don't worry about it.
cscareerquestions,3e3vy7,Call_Me_Salamander,1 point,Tue Jul 21 20:18:14 2015 UTC,"I didn't even know what programming was when I was 18. I'm 21 now and have had multiple software dev internships and will be graduating with a CS degree, when I first got into college as a Bio major.  You will get there. I feel like I learned way more about life from 18-21 than I did 10-18."
cscareerquestions,3e3uld,utt73,1 point,Tue Jul 21 19:19:21 2015 UTC,"conferences -- either paying the registration fee and/or paying the employee's salary while attending the conference. books -- buying relevant books. self-study time -- make Friday afternoons a free-for-all to try out new libraries, read up on the latest trends, and do cool stuff as long as there aren't any big deadlines looming or fires to put out."
cscareerquestions,3e1q4o,Titanium_Expose,4,Tue Jul 21 07:43:50 2015 UTC,I'm Dutch myself. Where do you currently live? And what kind of timespan do you need to be employed? Because it will take (just a guess) 6 months minimum if you got the talent and enjoy it before some (few!) employers would even consider you.  Do you already have a plan for the route you're going to take? What kind of development jobs you're going for?  Starting something like http://www.theodinproject.com/ might be beneficial because it lets you build a resume.
cscareerquestions,3e1q4o,nutrecht,1 point,Tue Jul 21 09:33:46 2015 UTC,"Thanks for the feedback.  I live in Noord-Brabant, a bit south of Eindhoven, five minutes from Belgium. I don't really have a timeline other than by next spring. Our rent is paid for a year, and we don't really have too much in the way of expenses right now.  I was thinking of doing web development. I'll look into the link you sent me. Do you know how it compares to freeCodeCamp?"
cscareerquestions,3e1q4o,nutrecht,2,Tue Jul 21 09:39:23 2015 UTC,Ah. I'm actually on a project quite close; Philips at the High Tech Campus :)  I'm a professional dev so I haven't looked into code camps and such in depth I'm afraid.  Isn't going back to school an option?
cscareerquestions,3e1q4o,Wizzad,1 point,Tue Jul 21 10:13:03 2015 UTC,"Well, I'm not opposed to going back to school per se but I feel like my life has moved on from that point. Besides, I have no idea how going to school in Holland would even work."
cscareerquestions,3e1q4o,Himekat,1 point,Tue Jul 21 10:51:32 2015 UTC,"You apply at Eindhoven university for Computer Science.  You will need to demonstrate that your level of mathematics is sufficient to start studying there.  If you don't want to study, don't. If you're not motivated for it then don't bother starting."
cscareerquestions,3e1q4o,nutrecht,1 point,Tue Jul 21 21:38:35 2015 UTC,"Came into this thread thinking, ""Dutch! I should call /u/nutrecht over if he hasn't already commented!"" Was not disappointed. (:"
cscareerquestions,3e1wmh,hydesea,2,Tue Jul 21 09:15:17 2015 UTC,What API? Just start contributing to their projects.
cscareerquestions,3e1wmh,baaraclucl,1 point,Tue Jul 21 09:26:57 2015 UTC,Thank you. Do you have specific projects to recommend?
cscareerquestions,3e1wmh,baaraclucl,4,Tue Jul 21 09:29:13 2015 UTC,http://whatcanidoformozilla.org
cscareerquestions,3e1wmh,oreo_man_,1 point,Tue Jul 21 09:39:03 2015 UTC,This is gold. Thank you!
cscareerquestions,3e1wmh,oreo_man_,3,Tue Jul 21 09:45:03 2015 UTC,"Why do you want a job at Mozilla? Because of the name?   I'm non US as well but wouldn't just choose a company without looking at what they already have.  If its any interest to you I've been to three Mozilla seminars at my university and my understanding is that they only hire very, very smart people"
cscareerquestions,3e1wmh,echospring,1 point,Tue Jul 21 09:30:23 2015 UTC,"I went to SF office invited by my friend. I saw people working together freely with a lot of autonomy. Open source contribution + smart employees with autonomy = heaven to work for, isn't it?"
cscareerquestions,3e2m3y,bertweaze,5,Tue Jul 21 14:03:02 2015 UTC,"Why not both? I guess the good thing about a website is that you can make it more interactive and selective (screen grabs, highlights, etc)"
cscareerquestions,3e2m3y,shawnadelic,2,Tue Jul 21 14:05:17 2015 UTC,Do both!
cscareerquestions,3e2m3y,foreverclever,2,Tue Jul 21 14:10:58 2015 UTC,"Do both. I have a website with a bio, interests, etc and it has full descriptions of each project with links to the code on github.  Github is great and makes it easy for recruiters to find you with searches like this. The website gives it a personal touch and shows that you can put together a website."
cscareerquestions,3e2m3y,echospring,2,Tue Jul 21 14:51:22 2015 UTC,how do i get my name to show up? I have github code with readme but i don't show up in search results.
cscareerquestions,3e2hft,everyoneknowsabanana,2,Tue Jul 21 13:22:38 2015 UTC,"Don't list GPA on your resume if it's that low (below 3.0), if it comes up, explain that you had two medical issues come up that distracted you from your studies and leave it at that. No one needs to know what was done or why it was."
cscareerquestions,3e2hft,NotARandomNumber,2,Tue Jul 21 13:52:40 2015 UTC,"I wouldn't discuss past medical issues. If you need special accommodations now, like a certain kind of monitor due to your vision or some special seat/chair, I'd leave that discussion until you are accepting an offer.  As for the GPA, if it's low, don't list it. If they ask, just say that it dipped a bit after a couple of surgeries, but you're back on track now."
cscareerquestions,3e2hft,echospring,1 point,Tue Jul 21 14:20:30 2015 UTC,"Don't bring up your medical history in your interview. Your interviewers don't want to hear about it because they legally can't consider your medical issues in their hiring decision unless the medical issues make you unable to do the job.(assuming you're in the US. Probably in other countries as well, but I don't know for sure). If the subject of your low grades comes up you can mention that you had medical problems, but be vague."
cscareerquestions,3e35y0,bokazhar,2,Tue Jul 21 16:32:23 2015 UTC,"I would make your font smaller so that you can explain your responsibilities as a Software Engineering Intern. To me, that's the most important part."
cscareerquestions,3e35y0,needz,1 point,Tue Jul 21 16:37:34 2015 UTC,Awesome will do.
cscareerquestions,3e35y0,echospring,1 point,Tue Jul 21 16:47:57 2015 UTC,"Here are some changes I would make:   put the experience in reverse chronological order (i.e. most recent experience first). include what you accomplished in your work experience. You can make more room by removing redundant information in the skills section. For example, if you list Java and C++, you don't need to list object oriented programming (it's implied). remove the ""demonstrated"" phrases from the projects section. It makes it seem like you did this one project with threads so that you could say/prove/show/demonstrate you know multithreading. It would come across better if you were more subtle about it: ""Developed a multithreaded game in Java using ___ game development framework..."""
cscareerquestions,3e33l6,robblob,1 point,Tue Jul 21 16:15:48 2015 UTC,"Is SQL all that you know? I feel like you're gonna need a lot more skills under you belt to be employable. Maybe learn something along the lines of SQL. What do you do your queries on? Learn about some of the employable technologies that work with SQL. Oracle, AWS software like Redshift and RDB etc"
cscareerquestions,3e33l6,essce,1 point,Tue Jul 21 16:32:36 2015 UTC,"SQL is all I know currently. I'm slowly dipping into Python, but haven't found a learning platform that fits my style yet. I write my queries in a flash platform that is integrated with our intranet system."
cscareerquestions,3e33l6,CLons,1 point,Tue Jul 21 16:39:59 2015 UTC,"Actually this is a huge field used by many, if not most, major companies.  If you want to stay in transportation and logistics,  Many shipping and packaging companies use Database devs and analysts to develop exactly the type of reports it sounds like you are making.    If you want to branch out, depending on your specific tech, many large banks/investment firms/big pharma employ decent branches of analysts to create SEC/Forecasting/Reporting reports / models.    Even commercial industry / manufacturing requires DBA and Devs, since most factory controls are software based these days.  Also many consulting houses also take people with good experience / portfolios and are willing to train them on other/their specific techs.  However you might have to battle to get out of entry level.  If your experience is sufficiently broad and your SQL is high enough (At least cursor query level or higher) you would have a decent shot of skipping entry level, especially if you have decent parallel skills sets (VBA, Oracle, TM1, Java / Scripting).   Otherwise you might need to pay your dues first, especially if your current role isn't specifically a tech or dev role.  If you reach out and don't get much interest, try polishing other skillsets.  Other great resources to look into are free online classes, also headhunter agencies, like Robert Half technology, have free training and certification programs as well as great tech opening listings.  Lastly, selling individual custom reports is tough.  Many companies are looking for the package: Custom Platform, Custom Reports, and Support.  Just doing custom reporting is the realm of consultants.  If that is what interests you, look towards Business Services or Professional Services branches of consulting houses."
cscareerquestions,3e0p03,spyissappin,4,Tue Jul 21 01:37:05 2015 UTC,"1.) Not at all. If anything, a data engineer internship is a lot harder to come by. I think there's a ton of demand for distributed computing and big data so this could be a big boost for your career, assuming you've got proper mentorship there. I feel like you'll have an easier time coming into something like web dev/mobile from a data engineering background. I think it'd be slightly harder the other way around.  I don't think it matters if it's a non-tech company if you can explain and quantify impressive things you do there on your resume.  2.) It's totally okay to drop the offer. Preferably sooner rather than later. Companies are used to it and have no hard feelings as long as you're professional about it.  Overall, I think ultimately you should choose the company that you feel like you have the most opportunity to learn and grow at. I think that's more important than anything else for an internship."
cscareerquestions,3e0p03,cscareerqs,2,Tue Jul 21 01:56:50 2015 UTC,"Thanks for your reply, point 1 was the most important. Mainly because my last internship was Software QA engineering, which, on top of being very mundane and mindnumbing, turned out to be not that impressive to employers unless they wanted to hire for QA specifically, which is not something I would want to do in the future.  I just wanted to make sure first that Data Engineering is not some boogeyman title that would prevent me from getting any Software Dev jobs in the future. As long as it is the case, I am gonna go for it, mostly because I am not ultra excited by Android because I already worked with it before, and it is not that hard to improve on your own, while big data seems to be one of those topics that would benefit the most from real-world experience/mentorship."
cscareerquestions,3e0p03,markerz,1 point,Tue Jul 21 02:09:09 2015 UTC,"I just wanted to make sure first that Data Engineering is not some boogeyman title that would prevent me from getting any Software Dev jobs in the future.   If that's what you're worried about, just email your recruiter and say you'd love to have a conversation over the phone with the hiring manager about the things you would be working on.  Ask about tasks and potential projects they would put you in.  You should do it for both companies just to be sure you have the right mindset.  If their details sound cool, do it!"
cscareerquestions,3e0p03,obscener,1 point,Tue Jul 21 04:26:46 2015 UTC,"I asked this question in person, and I liked what I heard. I.e., they gave me concrete specific examples of what their current interns were doing and which options I would have, and all of them are straight on point working with distributed storage/computation systems, which is something I would definitely want to learn."
cscareerquestions,3e0p03,GoldmanBallSachs_,6,Tue Jul 21 07:52:48 2015 UTC,"Take the data engineering job. If you write any of the words: big data, Hadoop, spark, etc. and you're still in college, you jump to the top of every recruiters list at the next career fair."
cscareerquestions,3e0p03,Orborde,6,Tue Jul 21 03:06:15 2015 UTC,False. OP will lose to the graduate students with those same keywords on their resumes.
cscareerquestions,3e0p03,Orborde,1 point,Tue Jul 21 05:01:05 2015 UTC,"I don't think I would be able to even apply for the same internships as  grad students do. And regardless, I feel it might give me an upper leg if I decide to pursue a grad degree."
cscareerquestions,3e3a7s,not_throwaway_true,5,Tue Jul 21 17:01:22 2015 UTC,"I mean, I don't see anything malicious with the intent of whomever posted that. He/She wants to ask tough questions, that's his/her prerogative to do so.   If they suck at doing interviews, then they're going to turn away a lot of good candidates or hire bad ones. Being able to interview and screen candidates is just like any other skill that takes time to grow  and learn how to do it properly. The interviewer is screwing themselves equally if they do approach an interview with malicious intent and they will notice it down the road."
cscareerquestions,3e3a7s,NotARandomNumber,5,Tue Jul 21 17:12:48 2015 UTC,You just sound really jealous.
cscareerquestions,3e3a7s,nutrecht,2,Tue Jul 21 17:16:16 2015 UTC,It takes practice as an interviewer to get good at conducting interviews-- moreso than being interviewed!   They're probably not conducting it alone.
cscareerquestions,3e3a7s,negative_epsilon,2,Tue Jul 21 17:38:38 2015 UTC,"I mean, there's nothing wrong with asking difficult questions. It's not about the interviewer proving their intelligence. It's about proving that an interviewee is good enough for the company.   Also, many companies have new people interview after extensive training."
cscareerquestions,3e14xq,mburner21,4,Tue Jul 21 03:50:56 2015 UTC,Just a thought. I know military folks tend to look out for military folks. Know any companies looking to hire junior developers that may have been started by someone in the Navy?   Other than that advice is the same for everyone with little work experience. Work on your portfolio so you have something to show. And do plenty of practice and studying to hone your craft so you can do well in interviews.
cscareerquestions,3e14xq,TheTaoOfBill,3,Tue Jul 21 04:17:12 2015 UTC,"Honestly, by being a member of the military, you have a huge advantage. Don't dismiss the soft skills you learned during your service and use that to shine during behavioral interviews. Many companies make it a point to recruit veterans so you might do a search {company} military or something like that. Reach out to your old mates from college or JHU and don't be afraid to cold-email people. Just be respectful of their time. Good luck!"
cscareerquestions,3e14xq,janoulle,1 point,Tue Jul 21 10:18:37 2015 UTC,Wouldn't you rather work for the Navy or Military? Working for the government has so many great benefits
cscareerquestions,3e2c5i,webdevismythang,3,Tue Jul 21 12:30:41 2015 UTC,"I can't really speak to the salary/benefits, since I'm not familiar with your area.  But other than that, it sounds like you have a lot of respect with your company and clients built up. That can be an annoying thing to rebuild at another company. That's always my least-favorite part of job changes -- suddenly you become a newbie again all over at a new place (even if you have boat loads of experience). It always takes time to rebuild your image as someone who is smart and competent. Honestly, that's always one of my biggest deterrents from getting a new job -- I hate rebuilding my reputation. I would take a moment to consider how much that matters to you.   As for your cons -- is there anything you can do about them? As I said, it sounds like you have a lot of respect at your job -- could you gain some leverage on those aspects of it? Could you ask them to send you to conferences? Could you ask to have a bigger part in defining the interview process for new team members? Can you push back more on people who expect you to produce miracles out of your ass or work on things that aren't part of your job (UX, etc.)? If you were a new kid, I would tell you to have a frank conversation with your manager and assert yourself, but you're a seasoned vet and I'm guessing you would have no trouble bringing up these topics. Has touching upon them with management not gotten anywhere?   As for your last con, that happens everywhere. It's one of the more frustrating things of the corporate world.   To me, this sounds like ""grass is always greener"" material. But I have a few years less experience than you, and I'm also a very conservative person -- it takes a lot to make me change my world around, and that includes a new job. So take my opinion with a grain of salt. Then again, job changes are things that can often bring you leaps ahead in your career in terms of money, power, and knowledge.   The thing that struck me about your post is that you don't seem to have any leads for a new job yet. I would work on that. It's really hard to measure your own job in isolation. It's much easier to see what else is interesting to you, start applying to jobs, start interviewing, and see if anything strikes you as better. There's no harm in looking around to see what other places can offer you. You might find your job looks really good compared to others, or you might find that a new job is exactly what's in store for you. But I would try to see what you can even get first before being too judgmental about your current role.  Sorry if that was rambling; just what came to mind as a read your post."
cscareerquestions,3dywkh,Luke_out,16,Mon Jul 20 17:37:09 2015 UTC,Dan Carlens hard core history.  Phenomenal
cscareerquestions,3dywkh,pole7979,5,Mon Jul 20 19:50:49 2015 UTC,"Cannot agree more. Even after listening to all of them they are still enjoyable re-listening to, especially the longer multi part episodes."
cscareerquestions,3dywkh,ATree23,14,Mon Jul 20 21:06:49 2015 UTC,2-3 hours per day? Start listening to audiobooks. You could get through 1-3 books per week.
cscareerquestions,3dywkh,CompSci_Guy,8,Mon Jul 20 19:20:08 2015 UTC,tried audio books but I end up not paying attention for like 20 seconds then I get completely lost.
cscareerquestions,3dywkh,CompSci_Guy,5,Mon Jul 20 19:30:44 2015 UTC,"Won't you have the same problem with podcasts, especially comp sci ones?"
cscareerquestions,3dywkh,handsoncheeks,9,Mon Jul 20 21:11:55 2015 UTC,"That won't happen, because podcasts are more of a conversation with various topics always coming up where as in books they keep going in the same direction."
cscareerquestions,3dywkh,lingual_panda,1 point,Mon Jul 20 22:33:04 2015 UTC,I listen to nonfiction audiobooks on my commute and this isn't as much of a problem for me. I'd definitely have trouble with audio novels. The Willpower Instinct is on sale and I think it's a great listen for anyone.  Also I usually pause the audiobook when I get off the freeway. I'm not sure what your commute is like but I definitely have more trouble paying attention when I'm maneuvering on city streets as opposed to sitting in traffic.
cscareerquestions,3dywkh,abrarisland,1 point,Tue Jul 21 04:08:49 2015 UTC,"And it's even faster if you listen at two times speed. I did that earlier in the year, and it was pretty great."
cscareerquestions,3dywkh,curiouscat321,28,Tue Jul 21 04:03:54 2015 UTC,"Do you really want compsci podcasts? You already do that all day.   I personally love This American Life, Serial, Invisibilia, and Planet Money - all from NPR. I have a couple theme park podcasts too because I find that interesting.   Your commute should be relaxing, not more work."
cscareerquestions,3dywkh,SteazGaming,5,Mon Jul 20 17:50:59 2015 UTC,"I'll continue your list: Radio Lab, Death Sex & Money, Reply All, Freakonomics"
cscareerquestions,3dywkh,Gephorian,2,Mon Jul 20 22:01:40 2015 UTC,+1 for Freakonomics. One of my staples.
cscareerquestions,3dywkh,zdware,8,Tue Jul 21 01:39:10 2015 UTC,"For some, work is relaxing."
cscareerquestions,3dywkh,barnesandnobles,3,Mon Jul 20 17:57:30 2015 UTC,"I like Hello Internet, though lately it has gotten kind of first world problemy."
cscareerquestions,3dywkh,kingatomic,3,Tue Jul 21 01:12:06 2015 UTC,"My favorites are Dan Carlin's Hardcore History and the Nerdist podcast.  I've recently been listening to We're Alive, which is essentially a podcast version of The Walking Dead; it starts off a little rocky but quickly becomes engrossing.  Personally, it's nice to give my thinky bits some time off, usually it pays off later because I can come back to whatever I've been working on from a fresh angle."
cscareerquestions,3dywkh,tensorproduct,2,Tue Jul 21 01:34:21 2015 UTC,"Theme park podcasts? Could you elaborate?  My favourite podcast fiction are Thrilling Adventure Hour, Welcome to Night Vale, and The Truth."
cscareerquestions,3dywkh,n1c0_ds,2,Mon Jul 20 23:26:10 2015 UTC,Try 99% invisible. It's the best general podcast I ever listened to.
cscareerquestions,3dywkh,Dubandubs,7,Tue Jul 21 00:18:36 2015 UTC,If you like history try Dan Carlin's Hardcore History.  Best podcast of all time.    If you like politics try Dan Carlin's Common Sense.    Only putting these out here because somehow they haven't been mentioned yet.
cscareerquestions,3dywkh,ReneDiscard,4,Mon Jul 20 21:56:13 2015 UTC,Radiolab or The Joe Rogan Experience
cscareerquestions,3dywkh,binarycow,5,Tue Jul 21 00:42:19 2015 UTC,Stuff you should know.
cscareerquestions,3dywkh,nikkisixx2,2,Mon Jul 20 22:41:58 2015 UTC,My favorite podcast of all time. I started listening to Josh and Chuckers during my internship last year and they made the long days of doing nothing go by a lot quicker.  They are also perfectly lengthed (About 30min to 1hr each). And there are over 500 episodes.  I never knew how interesting half of the things they talk about are.
cscareerquestions,3dywkh,binarycow,1 point,Tue Jul 21 01:51:09 2015 UTC,"Yes, my favorite one too."
cscareerquestions,3dywkh,Expi1,2,Tue Jul 21 02:40:07 2015 UTC,"I love listening to Security Now with Steve Gibson on TWiT. Started getting into podcasts a month or two ago for the same reason as you and SN has quickly become a favourite. Also with mentioning: Developer Tea, The Changelog, Shoptalk Show, Hanselminutes and Fragmented. Slightly less related: Partially Derivative, This Week in Enterprise Tech, Linux Voice and Freakonomics Radio."
cscareerquestions,3dywkh,titanmarch,1 point,Mon Jul 20 22:16:58 2015 UTC,"Love the TWiT Network. This Week in Google and Windows Weekly are really great, as well as Security Now (seconded) and This Week In Tech."
cscareerquestions,3dywkh,best_in_life,1 point,Tue Jul 21 08:37:07 2015 UTC,"Absolutely love Steve Gibson's podcasts! I'm a noob when it comes to security, so lots to learn personally as well."
cscareerquestions,3dywkh,thyrst,2,Tue Jul 21 20:41:29 2015 UTC,"I'm a web dev with a front-end focus most of the time, and I listen to Shop Talk which realllllllly front end.  Chris Coiyer behind CSS Tricks and Codepen does it with his pal Dave Rupert.  It's a good mix of stuff but rarely gets into backend.    JavaScript Jabber is super good with a panel of experienced guys that will dip into node as well, which is worth your time if you're at all into keeping up with new frameworks using JS.  Those are the only two I've enjoyed so far related to work, but I also listen to Radio Lab, the Nerdist, and Indoor Kids for pure entertainment."
cscareerquestions,3dywkh,karosas,2,Tue Jul 21 00:08:37 2015 UTC,I love .Net rocks. They focus on C# as name suggests but mostly talk on more generak ideas
cscareerquestions,3dywkh,joshlemer,2,Tue Jul 21 00:22:16 2015 UTC,EconTalk The Joe Rogan Experience Rationally Speaking Developer Tea
cscareerquestions,3dywkh,r_ginger,2,Tue Jul 21 02:24:05 2015 UTC,Software engineering radio is good for the most part.  Hanselminutes is also good but is somewhat dot net focus.  I'd also like to mention ted radio hour. It's ted talks edited for radio.
cscareerquestions,3dywkh,neuroaero,1 point,Tue Jul 21 03:52:58 2015 UTC,Professor Blastoff!
cscareerquestions,3dywkh,SMuicide,1 point,Mon Jul 20 18:11:05 2015 UTC,Tell 'em Steve-Dave.
cscareerquestions,3dywkh,Barrill,1 point,Mon Jul 20 19:11:41 2015 UTC,"I personally do Tech News Today for my commute. It's pretty informative and keeps me up to date on the field. Also, the anchors are fun to listen to."
cscareerquestions,3dywkh,KarlTheSnail,1 point,Mon Jul 20 20:01:40 2015 UTC,How to Start a Startup is incredible.
cscareerquestions,3dywkh,mwhuang2,1 point,Mon Jul 20 22:57:28 2015 UTC,I like Coding Blocks and Programming Throwdown.
cscareerquestions,3dywkh,Brooted,1 point,Mon Jul 20 23:12:43 2015 UTC,"Android Developers Backstage, a16z, HBR IdeaCast, Seminars About Long-Term Thinking. The Android one is tech, but they're all great."
cscareerquestions,3dywkh,dEAthdEAlEr69,1 point,Tue Jul 21 00:13:29 2015 UTC,"a16z, exponent, the jay and farhad show"
cscareerquestions,3dywkh,menello,1 point,Tue Jul 21 01:54:17 2015 UTC,"I've been addicted to the Codepen podcast, it's called Codepen Radio. They talk about what it's like running Codepen.io, it's informative and fun to listen to."
cscareerquestions,3dywkh,shawnadelic,1 point,Tue Jul 21 02:11:52 2015 UTC,"I really like thoughtbot's Giant Robots Smashing Into Other Giant Robots Podcast. They talk about pretty much everything, depending on the guest. I also like the Changelog."
cscareerquestions,3dywkh,hatu,1 point,Tue Jul 21 03:13:19 2015 UTC,"I like the Tim Ferris show, he talks to a lot of startup founders and investors and other people in that scene. It's interesting to hear how the top performers live - kind of lifehack-y but it gets me motivated and I'm using a few of the tips in it during my work day."
cscareerquestions,3dywkh,Appsuelite,1 point,Tue Jul 21 04:04:38 2015 UTC,Talking Machines
cscareerquestions,3dywkh,bertweaze,1 point,Tue Jul 21 10:44:40 2015 UTC,Bill Burr - The Monday Morning podcast. Hilarious as hell and makes my commute enjoyable because I get to listen to Bill Burr rant about shit for an hour.
cscareerquestions,3dywkh,neueavenir,1 point,Tue Jul 21 12:57:40 2015 UTC,Big fan of StartUp. Great look into the experience of building a startup.
cscareerquestions,3dywkh,RockRunner_2,1 point,Tue Jul 21 16:12:35 2015 UTC,"When I had a long commute, I listened to the Dave Ramsey Show Podcast. It's personal finance though, not software."
cscareerquestions,3e19if,v1sual1ze,2,Tue Jul 21 04:34:54 2015 UTC,"I was in the same situation as you, and I've had people directly say to me that made me look as if I was undecided about cs or biology, and made it seem I wasn't serious about the it job I was applying to. Unless it's a bioinformatics position leave it off"
cscareerquestions,3dyy8o,ideas_einstein,32,Mon Jul 20 17:49:09 2015 UTC,nothing really. Companies hand out interviews like candy. Your resume doesn't have to be special to get interviews.
cscareerquestions,3dyy8o,fitman14,4,Mon Jul 20 18:51:25 2015 UTC,"This is true when it comes to the average company. If you're looking for elite companies, you'll need something (like a project) to stand out."
cscareerquestions,3dyy8o,curiouscat321,2,Tue Jul 21 00:42:22 2015 UTC,"The requirement for an internship at an elite company is just 1 SE internship and a few projects (academic or personal). You can probably get away with no internships at all if you are from a top school.   If you apply to 40-50 of the top companies (there's many outside of big 4) with those credentials in October, you'll get at least 4-8 interviews.  The bigger software companies have scaled their recruiting efforts high enough that they can have low standards for the screening interviews."
cscareerquestions,3dyy8o,fitman14,1 point,Tue Jul 21 02:21:36 2015 UTC,Could you point me to these companies that hand out interviews like candy? I've had 2 internships and applied to +150 companies and gotten maybe 7 screening interviews total.
cscareerquestions,3dyy8o,oaklandwarriors,5,Tue Jul 21 05:57:05 2015 UTC,"I think more important than the actual project is whether or not you can speak enthusiastically and intelligently about it. It doesn't have to be earth-shattering.  Most of my projects came from some practical problem I wanted to solve. I also try to take advantage of class projects and go above and beyond the requirements and make it something interesting.  I wanted beer recommendations so I built a little app that took a dataset of beers and used different similarity algorithms to find recommendations and I used that project for my AI class. Had a Software Engineering class so me and some friends from CompE built a web/mobile app that can control a home automation system powered by a RaspberryPi (turning lights on and off, setting a door alarm etc). It's sometimes easier to come up with ideas in the confines of a school project and it can turn out some interesting projects if you put in the effort to do more than the minimal project requirements."
cscareerquestions,3dyy8o,cscareerqs,1 point,Mon Jul 20 19:18:49 2015 UTC,"take advantage of class projects and go above and beyond the requirements   I find this especially important. For my OOP class we had to do a group project that was worth 5pts (could get an A even if I didn't do it). Most groups did something really simple and their points, we took our time and implemented a compression algorithm. It was more work than it needed to be, but it felt good pulling it off."
cscareerquestions,3dyy8o,FlameDra,1 point,Mon Jul 20 21:13:52 2015 UTC,middle out?
cscareerquestions,3dyy8o,Treasy,4,Tue Jul 21 04:20:01 2015 UTC,"I just make games/apps as a hobby, it's the only way for me to have the motivation to see it through til a presentable stage (though polishing still is a drag to me). I make stuff that I see a use for, so either games or something I myself would use.  Example 1: My buddy from school traveled a few hours to visit me this weekend, and we both make games as a hobby. We set a goal to have an engine of a game made by last night (and we mostly did). Friday night we just talked about what games WE like and what we would like to play.  We came up with a 2D Minecraft/Terraria style game visually but RTS unit control, so it's like ""You go work on the mine"", ""You go cut trees"". We both like Starcraft/Stronghold and like that movement, and we both like Minecraft and felt Terraria did a good job of porting the Minecraft visuals to 2D, so it was our way of mixing things we know we like. Will others like it? Maybe not, it's a pretty niche cross we're making for Android/iOS, but it's a thing nonetheless that we can show employers when we finish, and we are enjoying working on it meaning we have motivation to keep working on it.  Example 2: I play League of Legends. I know that I like to play the game in a calculated fashion - I am more about finding the ideal setup and playing the lanning phase (1v1 time before the teamfights) as methodical and calculated as possible instead of aggressively. I am about odds being in my favour.  Because of this, I know an app that I would find really useful is one that calculates the highest winrate build to give you maximum efficiency out of your play. I am currently in the works of writing that (and a Dota equivalent when I finish) so you basically click Champion->Role->Shows you an inforgraphic of the optimum build based on winrates.  Example 3: For our project term we had to make an app for mobile devices using web languages, and the theme was ""Brain Game"". We were trying to come up with a theme/idea and couldn't come up with any. We had to make a Team Charter, and in it I wrote down ""Team bonding activities"" (weekly meeting at the school pub), but accidentally wrote ""boding"" instead of ""bonding"". The guys saw that after I sent it in and wrote ""Boding Activities"" on the whiteboard. One of them went ""Sounds like boating"", then another had this epiphany idea of boats in a harbour, somewhat similar to the brain games Train and UnblockMe(Rushhour). Our completed game ended up being that theme, which all came down to a typo I wrote. Ideas can come from anywhere.    TL;DR part, next two paragraphs  Basically, my advice is not to worry about WHAT you make for employers, but more making SOMETHING that you can be proud of and have the motivation to complete. The idea does not need to be ""cool"" to employers, it does not need to be ""the next big thing"", and it does not need to be unique even. Just something you will have the motivation to complete, since having something is better then nothing, and the skill of showing that you can see things through to completion is much more important to employers then knowing you can come up with ideas (since they don't pay you for your ideas, they pay you for your skillset to make THEIR ideas).  The best way to come up with ideas, as I said, is to make stuff you like or would use (hence my examples above). Maybe you're not a gamer and instead are much more into movies. In that case, maybe make an app/website that scores actors/actresses on some arbitrary scoring system you come up with that calculates it based on movie ratings * screen time (10 minutes in a 2 hour movie rated 4.3 stars on IMDB? +200 points?). Maybe you don't like playing games but find eSports fascinating, or streams in general, you could make a website that lets you ""favourite"" Twitch/Youtube/Azubu streams and then recommends you streams based on what other people who share your favourites watch.  End TL;DR, but I write like I talk, so I keep going...    Just find something you enjoy and build on that, that way you have the motivation to complete what you start. If you still can't think of anything, you can always fall back on asking friends/your parents. Everyones got ideas if you ask, but I would try my advice first to make sure you have the motivation on the project to at least see it through to a presentable state.  Also worth noting that, at least for my current job, they never SAW my projects until I was hired. The senior guy came to my office and asked me to walk through the code of one of the projects so he can get a better idea of what I know/don't know/did inefficiently.  As far as they were concerned when I was hired, I had a finished game in ""JavaScript using JQuery/Cocos2D-JS libraries"" I mentioned during the interview with him, and I had other engines I could show off in Lua(Corona SDK)/C#(Unity)/GML(GM-Studio), along with server applications for those games (C#). The idea was not seen until after the hiring was done.  Only the JavaScript one was even on Github, and none of them are published. They were just things I could say I did and backup the stories if asked for proof."
cscareerquestions,3dyy8o,SunliMin,2,Mon Jul 20 18:11:47 2015 UTC,"Just curious, have you figured out the details of your LoL/DotA idea?   I'd imagine it would be pretty difficult since item build win rates really depend a lot on the opponent's team. Or would you just pull stats from a website like dotabuff.com? Just curious, since I'm a huge DotA player."
cscareerquestions,3dyy8o,NeoWasAProgrammer,2,Mon Jul 20 21:27:17 2015 UTC,"I am not a huge Dota player, so my making it for Dota is mostly cause my friends play Dota and I know most of it is similar between the games so I figured ""If I can make it work for one, I can do the other"".  Few things to note from my experience between the games and talking to friends:   Dota's items are more unique actives and most of their gold-efficiency is in actives, while Leagues item efficiency is heavily in stats with weaker passives. League has Runes/Masteries/Summoner spells, meaning things outside of the game itself that affect your characters setup before the game even starts. It's essentially like a 7th item worth of stats with two actives you can completely customize before the game, so more to customize stat-wise.   Because of these two, looking at it from a League players perspective, your build does not change too much from game to game assuming you have the same role. I know on, say, Diana(one of our heroes) I want AP(magic damage stat), Magic pen(to get through their resistances), and I will get Armor/Magic resistance depending on the team enemy team, but 4/6 of my items won't change between games. If 10% of the time I need a second armor item vs 10% of the time I need a second magic resistance item, then so be it, but that's not the norm. What is the same though is I have 30 items to chose from that all give AP and some resistance with a different misc. thing (be it a slow, spellvamp(healing on dealing magic damage), armor, magic resist, health or what not). Finding the most efficient build path won't be that dependent on the enemy team, since you are just looking for ""In games where the player bought Void Staff instead of buying Abyssal Scepter(two magic penetration items), the Void Staff players average a 3% higher winrate"". I'm not saying it will find the most optimal build no matter what, but it should be easy enough to pair what the winning player ends up buying and making the app display it in an infographic way. Sadly it couldn't be perfect, but I do understand where you're coming from there.  I was talking to a friend about it who is Master tier(ranked 150~ NA, so like, 6k~ MMRish equivalent) and he thinks I should just kick out any anomalies from the data set when trying to figure it out. Like, if one in fifty games a Meepo buys an Ogre Club or w/e, just exclude that item from the data since it's so rare he probably bought it cause he was trolling, so far ahead he was fucking around, or in such a niche situation (like 5/5 enemies being magic damage) that he was abusing it. It's about finding the highest winrate build path/setup on average.  I know Dota's build paths change a lot more then League though, so I am a little iffy on how I'd set it up when I do the Dota part. When I get to that point I'm gonna call up my Dota friends and have them explain to me what they think I should do/work with them, since they are also my classmates.  As for getting the stats, I'm not sure how Dota's API is, but with League Riot has an API set that I've played with before. Pretty easy to use, just GET and POST commands that are like ""I have champ ID this, get me a list of ID's for every match that has taken part in this patch"", then sort through them by requesting for match details by ID. Hopefully Dota has something similar, and considering Valve has specifically made Dota easier for people to play with (via world editors and the like), I am confident they either have as good or better API then Riots."
cscareerquestions,3dyy8o,SunliMin,1 point,Mon Jul 20 22:35:06 2015 UTC,"Interesting, I like the idea about excluding rarely seen builds since experimental builds happens so often.  I played a bit of LoL and several years of DotA, and it is interesting you pointed out that item builds tend to be more static in LoL due to things such as Masteries/misc spells. This would indeed make the app idea a lot easier to implement for LoL than for DotA.  In DotA, since item choices greatly depend on your teammates and enemy team lineups, maybe a list of ""recommended items"" would be appropriate? Then each recommended item could have its reason it would be a good choice (ie: BKB is recommended versus Doom because games as ""your hero"" versus Doom yields over 50% win rate, considering you can pull the data from somewhere). DotA has the recommended items thing built in for each hero, but they are all static and don't change depending on lineups. Sounds pretty difficult to consider all the factors, but I'm very interested. What language are you primarily thinking of using?"
cscareerquestions,3dyy8o,NeoWasAProgrammer,1 point,Mon Jul 20 23:04:40 2015 UTC,"Sorry, miscommunication on what I meant.  Masteries/misc. spells don't make your build static in League, I named those since those are things that are purely customizable, meaning they are perfect for the app.  The reason builds are static in League is because we have less actives, so it becomes purely a numbers game. Unless a situation arises that is different from the norm (IE. Pure AD team, pure AP team, etc), it becomes a pure numbers game about simply having the most cost efficient build.  What I mean by that is, I have the choice between an item that gives 120ap + armour, 80 ap + magic pen, 100 ap + health, 70 ap + magic resistance, etc, for magic items. I also have health items that give some ap, armor items that give health and magic resist and so on.  Because it's just stats and little actives/less impactful actives, it becomes ""Is it more efficient to buy 120ap/30 armor + 80ap/40mr, OR is it more efficient to buy 200ap item and a tank item of 40armor/20mr"". Because it's raw stats, you are just building the most cost efficient path to get those stats. Once one path is more efficient then the other, it becomes the better path in the majority of situations.  200ap for 4k gold is always more efficient then 150ap for 4k gold, if you catch my drift. There isn't a situation where you would go for the less efficient path for the same stats.  I get what you mean and I was thinking of simply doing recommended items for Dota, but haven't decided.  App side C# using Xamarin, either xamarin.forms or xamarin.android+xamarin.ios with a share backend code base, not sure yet. This is just cause my current job is doing development in C#/Xamarin and I would love to learn more and have something to show for my knowledge.  As for server side, probably C# but I might tryout Node.JS or PHP to handle it all since I haven't used those yet. Might be a good learning experience.  The reason I would have a server-side is I figured making every app do the calculations would eat up a ton of CPU usage. (Imagine you are looking for Invoker. You have 40k games worth of gameID's in a list and need to go to the server and check every single one for data. this would eat up a lot of CPU usage and I don't think it could be calculated in real-time when they use it, not to mention eating their data...). Having a server I host it on would mean I only do the calculating once a day/once every few days/once a patch even, and I don't need to send back to the user a ton of data, just ID's of what to display in the page (like ""for the item slots, fill in item id's 5/12/7/12/76/23""), and the server can just store the information in a database for when the next person wants a heroes data.  This is all my thinking though, as far as ""how much have you done"", I have the UI mostly done for it, been learning Riots API and I have created a basic server application in C#(wanna restart it though) to interact with the user and server.  I have like 3 apps on the go and this app is last priority, so although I REALLY want to finish it, the other two are SO close to being publishable I really need to hold back the urge haha."
cscareerquestions,3dyy8o,SunliMin,1 point,Mon Jul 20 23:59:52 2015 UTC,"Thanks for the detailed response.   I'm in the same boat as OP, so this helped"
cscareerquestions,3dyy8o,IAmGabensXB1,2,Tue Jul 21 03:04:12 2015 UTC,Mine isnt unique at all other than the fact that I applied. Did you apply? The answer has to be no since Im the only one that applied for this position..... I got it by default I guess.
cscareerquestions,3dyy8o,Seeeejaaaay,3,Mon Jul 20 19:42:37 2015 UTC,"So here is the resume that I used to apply with, I was trained by my university on how to make it for internships. http://i.imgur.com/STSM2iT.png Im not sure what stood out to the interviewers but IMO it could have been that I started my own company in high school. yes there are several errors here that I didn't notice until after I got the internship"
cscareerquestions,3dyy8o,adamkw94,2,Tue Jul 21 00:34:25 2015 UTC,Speaking as a recent graduate and employee that has sat in on interviews the main thing that stands out is personal projects that have been completed on your own.  School projects are great and show great proof of concept but creating an app or a project on your own shows you are creative and can be dedicated to a project no matter how much prospect it really has.  Work/industry experience is also a huge plus.  Understanding how to manage lots of data and users at a time helps a lot with getting your resume through the line.
cscareerquestions,3dyy8o,Sdb1228,2,Mon Jul 20 20:38:00 2015 UTC,I started interning as a sophomore in high school as opposed to starting in college so I believe that stood out to employers.
cscareerquestions,3dyy8o,Call_Me_Salamander,1 point,Mon Jul 20 18:52:12 2015 UTC,Were you able to get one easily after your first one?
cscareerquestions,3dyy8o,danksinatrasmkr,3,Mon Jul 20 19:20:31 2015 UTC,Yes. There hasn't been a single summer that I haven't gotten an offer when actively looking for one.
cscareerquestions,3dyy8o,Call_Me_Salamander,1 point,Mon Jul 20 19:27:19 2015 UTC,"My personal projects were just a nice bonus to have, honestly speaking. What allowed me to land the job was the expirience I aquired while doing them. I just had the best solution for the test assignment."
cscareerquestions,3dyy8o,UpAndDownArrows,1 point,Mon Jul 20 20:31:55 2015 UTC,"No need to be unique. I got really good grades at a pretty good uni, had previous work experience (related and not related) and did my best to get involved in social clubs. Don't have a github and don't have any side projects yet got an interview from almost everywhere I applied."
cscareerquestions,3dyy8o,946789987649,1 point,Mon Jul 20 20:39:40 2015 UTC,"I wrote a compiler for a class. Although it wasn't a personal project, its something that is very uncommon."
cscareerquestions,3dyy8o,Newmanator29,2,Mon Jul 20 21:20:41 2015 UTC,Isn't it standard to write a compiler for compilers course?
cscareerquestions,3dyy8o,LiNZero,1 point,Tue Jul 21 00:46:43 2015 UTC,"Apparently not. A lot of schools simply teach the theory behind compilers. I know Oregon State University, the best school for CS in Oregon, doesn't make their students write a compiler from scratch. Most other schools also have it either as an elective or not at all."
cscareerquestions,3dyy8o,Newmanator29,1 point,Tue Jul 21 00:51:34 2015 UTC,Compilers are a sweet all in one experience. There is so much theory involved spanning pretty much every topic in computer science.
cscareerquestions,3dyy8o,ASAPscotty,1 point,Mon Jul 20 21:38:17 2015 UTC,Pretty much nothing. If your school isn't working you properly then do some standard projects like iOS/Android app or a REST API. There are a lot of standard projects out there like this that many university students complete.
cscareerquestions,3dyy8o,ASAPscotty,1 point,Mon Jul 20 21:31:42 2015 UTC,"If you have a side project the best thing is to understand and be able to explain everything you used in your project. Did you use Dagger? Tell me why and what it is used for. Did you have a hardship with your project? Tell me how you overcame that problem or how you solved it.  Also, I got my ideas from what I was interested in. I was interning as an Android Developer and I was really into LoL. So I went with creating an app around their API. I never completely finished it, but I knew what I was using in my application and why.  Your experience and knowledge is more important to companies than the uniqueness of your side project. Know it like the back of your hand."
cscareerquestions,3dyy8o,whynotkurk,1 point,Mon Jul 20 23:38:19 2015 UTC,"I have several award-winning instructables. My LinkedIn profile has them way down buried in one of the sections. It was almost all the interviewer talked about.   Sitting on the hiring panel for another candidate, side-projects, especially one where you teach other people about technology are huge bonuses. Shows that you're passionate about what you do, and love sharing that passion."
cscareerquestions,3dyy8o,Apollo56,1 point,Mon Jul 20 23:51:14 2015 UTC,"Uh... I showed passion?  That was about it. Nothing special, really."
cscareerquestions,3dyy8o,CJKay93,1 point,Tue Jul 21 00:57:29 2015 UTC,"Resume plan : the company, me, then why i fit."
cscareerquestions,3dyy8o,Saucette,1 point,Tue Jul 21 06:52:50 2015 UTC,I mentor a high school robotics team. I've gotten all my internships with connections from that.
cscareerquestions,3dz3s9,Jimmy422,11,Mon Jul 20 18:27:04 2015 UTC,"I was able to get an internship with 3 programming classes under my belt. It sounds like your knowledge exceeds mine, so I don't think the problem is that you don't know enough.  Start a project of your own and I think you will find the gaps in your knowledge will be filled in pretty quickly."
cscareerquestions,3dz3s9,Fun_Hat,4,Mon Jul 20 18:58:01 2015 UTC,"I only had 1 (technically 2, the other was irrelevant) before I landed my current position. When I interviewed, only 1 company actually asked about coursework. Don't underestimate yourself OP."
cscareerquestions,3dz3s9,foxh8er,2,Mon Jul 20 21:37:49 2015 UTC,Could you guys talk more about how you got this to work out. Plenty of us graduated with plenty of coursework and never found a single company that was interested in us.
cscareerquestions,3dz3s9,strathmeyer,0,Tue Jul 21 03:07:36 2015 UTC,"I've been coding since late Sophomore year in high school. I have a handful of published apps on the Play store (1 semi popular because of Reddit), research from a summer program I did and some Node projects on my Bitbucket. My school isn't the best but we have a lot of local contacts.   I sent out my resume at least 50-60 times online, at hackathons, or during my school's career fair. I also knew someone pretty significant at the company I'm in now.   I got 6 callbacks - Microsoft (Because of research, 1 interview, bombed it), a YC Hardware company (Because of Android experience, got to the last interview, but the position went to a Stanford freshman), Cisco (Because I go to NC State, went horribly, still got contacted by 3 teams, 1 serious), IBM (Because I had Node experience, went very well) , this company (I had contacts, went bad, still got offer), and some company for PennApps fellows (passed on it).    I ended up with 2 offers just after my finals ended, and I picked the one with the exploding offer and declined the rest that had pending decisions.  I'm still kinda pissed that Square, Twitter, and Quora didn't even send me a rejection email, but whatever."
cscareerquestions,3dz3s9,foxh8er,2,Tue Jul 21 03:20:16 2015 UTC,I had 3!
cscareerquestions,3dz3s9,adamkw94,7,Tue Jul 21 02:43:55 2015 UTC,"I've never made anything with a GUI in the last 7 years. It's not as important as you might think.  I constantly find myself having to look up syntax of languages when I go to program, and I've been programming C++ for a decade.  Yes, you're very bad compared to what you'll be with a year or two of professional experience, but you're on track if you're willing to learn.  I don't think you need more classes, you just need to program more. Hit some problems, solve them. Lather, rinse, repeat."
cscareerquestions,3dz3s9,harveypekar84,1 point,Mon Jul 20 21:59:35 2015 UTC,"yep, how often to people even make these anymore? I feel like everything is moving to the web"
cscareerquestions,3dz3s9,adamkw94,7,Tue Jul 21 02:44:47 2015 UTC,So basically you know as much as every other entry-level programmers out of college. You'll be fine.
cscareerquestions,3dz3s9,KyleBumpus,3,Mon Jul 20 19:17:11 2015 UTC,"I'm confused about your CS program. You've done three years and have only taken 4 CS classes?  I'm not going to contradict any of the encouragement in this thread, but really?"
cscareerquestions,3dz3s9,ahh_yiss,3,Tue Jul 21 09:13:13 2015 UTC,"4 Programming classes, yeah. It's frustrating. The rest of my classes have been either math & science classes (physics, calculus, etc) or computer theory classes like computer architecture or circuit logic design."
cscareerquestions,3dz3s9,TetrisArmada,2,Tue Jul 21 13:33:17 2015 UTC,"Alas, this must be what people rightly dub ""Imposter Syndrome"" :)  One thing I am excited and nervous about trying to get my feet wet into the comp sci field of study is how technology will continue to evolve; that means I'll need to stay on top of everything as much as possible to remain relevant as a programmer, but at the same time that means there's always something new and interesting to learn as well.  You should focus on the fact that you do know a few languages, few theories and processes, etc. and market that to the best of your ability. Internships are there as a method of introducing you to what the real world jobs will entail in the first place, at least specifically in the company you're interning for with some general applications regardless of where you work, so that means you SHOULD be going in there expecting to learn a whole lot more and realize how much more you have left to learn.  Get yourself into an internship and ask questions like you've never asked before! Aside from other gains like being paid to be an intern, you have so much more to benefit from by not knowing everything, because you get to learn how the things you've studied in school are actually applied in a proper programming job."
cscareerquestions,3dz3s9,huck_cussler,2,Tue Jul 21 00:20:00 2015 UTC,"If you realize that you don't know jack shit, then you're doing it right."
cscareerquestions,3dz3s9,Droi,1 point,Tue Jul 21 02:04:12 2015 UTC,"Exactly, I'd be more worried about a graduate that thinks they know everything there is to know."
cscareerquestions,3dz3s9,dubiousfan,2,Tue Jul 21 05:33:19 2015 UTC,Get an internship.  You'd be surprised at how (little) much is actually required to do a job.
cscareerquestions,3dz3s9,obscener,4,Tue Jul 21 14:11:12 2015 UTC,"If I were you, I would look into taking part of this school year off to do an internship and delaying your graduation by 6 months.You certainly don't have to do this, there are plenty of companies that hire new grads with no experience. But internships are nice because the bar of acceptance is lower than a full time offer, and they know that you're there to learn so the expectations aren't high. I learned far more at my internships than I ever did in college classes. And when you do graduate, you'll be auch more attractive candidate for full time positions."
cscareerquestions,3dz3s9,staticassert,1 point,Mon Jul 20 21:28:42 2015 UTC,"Don't worry about GUI. Rather thank trying to think of things like that, think 'what program would I want to use?' or 'what would be cool to build?' and then build that."
cscareerquestions,3dz3s9,Kosooki_mrav,1 point,Tue Jul 21 01:03:29 2015 UTC,"We're in the same boat op :) (is that even expression, in a same boat?). I started learning on my own this summer to feel a bit better plus I applied for a summer.camp and student internship so we'll see.  Anyway, people keep telling me I'll be fine. You don't have practical knowledge, but college probably taught you to think, and some work efforts and if you're willing to learn you'll be fine.  You know what's great about us graduates? We'll.work.for free if it means we'll.learn something and a lot of companies will see you can be taught stuff, you're young and.motivated and soon you'll become useful to them."
cscareerquestions,3dz3s9,TheTaoOfBill,2,Tue Jul 21 05:30:10 2015 UTC,I don't know enough to be useful.   You're right. You don't. No entry level programmer does. Just try your best to get an internship so you can at least show some progress towards being useful by the time you graduate.   Most companies hiring fresh graduates don't expect them to know much of anything except how to make expensive mistakes. But what they will expect is an enthusiasm to learn how to be useful.
cscareerquestions,3dz3s9,IbanezDavy,-1,Mon Jul 20 21:39:32 2015 UTC,"I didn't know college was suppose to make you useful. I thought it was just a right-of-passage type of thing, that ""if"" you learn something useful, then YAY!!!"
cscareerquestions,3dz3s9,utuxia,0,Mon Jul 20 20:33:30 2015 UTC,Study algorithms. It's all you'll need to know.
cscareerquestions,3dy2br,careers_throwaway123,22,Mon Jul 20 13:55:50 2015 UTC,"I'm considering telling him simply that I'm working through personal circumstances that are impacting work, and it's temporary and being worked on?   How is this being worked on? I don't see anything in your post about seeking the help of a mental health professional. But I'll give you the benefit of the doubt and assume that you are.  Your boss may be great & understanding after you tell him you're going through personal issues, but at the end of the day, he's running a business, if you can't perform, he'll find someone else you can. I'm just reiterating the importance of taking positive steps towards solving this issue.    quite frankly I'm feel ashamed and am afraid I sound whiny and lazy   Don't beat your self up, don't wallow in self pity. Your mental health is no joke. Your most important task right now is to work on your mental health with the aide of a professional and get yourself back on track."
cscareerquestions,3dy2br,Truestor,2,Mon Jul 20 14:32:18 2015 UTC,"Is your advice not to mention it?   I'll give you the benefit of the doubt and assume that you are.   I'm working through insurance right now on this, since I don't have a prior relationship with a care provider for this.  Edit: I did have a psychologist in the past that I was seeing regularly, but I think they've since retired."
cscareerquestions,3dy2br,Truestor,13,Mon Jul 20 14:41:34 2015 UTC,"I wouldn't mention anything until you know what you're dealing with via the mental health professional.   But if giving your boss a vague description of what you're going through, followed by a decisive promise of pushing through will help you, then I don't see anything wrong"
cscareerquestions,3dy2br,kindofapigdill,2,Mon Jul 20 14:54:41 2015 UTC,"Seems reasonable, I guess wait until I have results from the appointment.    until you know what you're dealing with via the mental health professional   I should add, I'm not self-diagnosing here -- I worked with mental health professionals when younger, and with their help was able to get my life together without medication.  However, the situation I'm in now is a lot harder than where I was at the time."
cscareerquestions,3dy2br,KyleBumpus,6,Mon Jul 20 15:12:30 2015 UTC,"I started therapy without insurance - I have pretty bad anxiety and knew I needed to get help no matter what. I found a therapist who is really great for me(it's important that you like them) and I've made a lot of progress and basically turned my life around.  Finally my therapist recommended that I see a psychiatrist - I was reluctant to do so because I didn't want to take drugs and had negative previous experiences with them. I had a consultation and I am now taking stuff that works for me. Don't see your GP for this kind of stuff - see a real psych.  Honestly, as a developer you probably make decent money and can afford to see a therapist regardless of whether insurance covers it. It's not cheap, it's an investment. If your issues are impacting you enough to threaten your job security then I would say it's probably a wise investment.  Until then all you have is excuses for your employer - and even when you have a doctor's note or whatever you still have to take charge of your circumstances and power through."
cscareerquestions,3dy2br,UpAndDownArrows,0,Mon Jul 20 19:47:41 2015 UTC,"I'd mention you are seeking treatment from an actual doctor because it makes you basically unfireable even if there are performance problems. You'll need proper medical documentation, of course."
cscareerquestions,3dy2br,KyleBumpus,18,Mon Jul 20 15:57:05 2015 UTC,I have both of them too and I am not planning to talk about these issues to any of my coworkers/bosses. Less they know less problems I have
cscareerquestions,3dy2br,UpAndDownArrows,6,Mon Jul 20 15:39:49 2015 UTC,"You aren't protected by the ADA unless you tell HR you have been diagnosed and are undergoing treatment. Please, tell HR. You DON'T have to tell your boss. Just HR."
cscareerquestions,3dy2br,timworx,7,Mon Jul 20 15:59:07 2015 UTC,"I am not living in the US, so ADA doesn't apply to me.  And frankly, I am having my problems under control thanks to the medications. No problems reflecting on my work."
cscareerquestions,3dy2br,KyleBumpus,4,Mon Jul 20 16:02:41 2015 UTC,"Wait, if you have ADD, you gain some protection via ADA?"
cscareerquestions,3dy2br,QoQers,1 point,Mon Jul 20 17:23:33 2015 UTC,"You generally have protection if you are diagnosed and seeking treatment for a mental illness by a qualified professional. I know know if ADD specifically is covered, but in principal it seems as though it should be. You should definitely look it up, as I'm not a lawyer."
cscareerquestions,3dy2br,KyleBumpus,1 point,Mon Jul 20 18:52:13 2015 UTC,"I don't agree. HR has no obligation to keep information confidential, so you still risk having your boss find out. ADHD is not like other disabilities because there is a stigma attached to it. It's one thing to tell your boss that you have diabetes, and it's another to say you have any sort of mental disorder. The stigma of ADHD will only hurt those who share that they have it at their workplace. It's better to ask for ""reasonable accommodations"" without mentioning it's related to a disability. If the boss says, ""why?"", say it helps with productivity or works with your work habits."
cscareerquestions,3dy2br,QoQers,5,Mon Jul 20 19:02:37 2015 UTC,"HR is under no obligation to keep the information confidential, but they are under an obligation to make sure you aren't terminated or disciplined because of it. If you don't trust HR that's one thing, but then you have an easy 7 figure settlement. It's a win-win.  If you don't inform HR why you need reasonable accommodations, they're under no obligation to comply and you don't have the same legal protections. Keep it a secret at your own risk."
cscareerquestions,3dy2br,KyleBumpus,3,Mon Jul 20 19:11:57 2015 UTC,"So if businesses were ethical, they would follow the spirit of the law. However, I am realistic (or cynical, same difference) in thinking that HR is there to support the business, not the employee. They'll know the rules better than the employee and find ways to get a person fired without having a good case against them. If OP trusts his supervisor and expects with some reasonable accommodations that he'll be able to do his job well, then yes he should talk about it. But in OP's case, I think even he doesn't know that reasonable accommodations will help him, so he needs to come up with another solution."
cscareerquestions,3dy2br,QoQers,1 point,Mon Jul 20 21:27:22 2015 UTC,"Yes, it's exactly that HR is there to support the business that you have nothing to worry about. They are trying to prevent the company from being successfully sued. Once notified of this kind of thing, companies go into ""no fire under any circumstances even if the employee shows up drunk every day"" mode. I'm only slightly exaggerating."
cscareerquestions,3dy2br,KyleBumpus,2,Mon Jul 20 21:36:31 2015 UTC,"""no fire under any circumstances even if the employee shows up drunk every day"".... ""until we can think up a good reason to get rid of him.""  I think telling HR would be a good idea if it's a very large, bureaucratic company that doesn't have much to lose by accommodating an employee. But at start-ups, small and even medium sized companies, keeping medical and personal information to yourself is important. Again, that might be the cynic (realist) in me."
cscareerquestions,3dy2br,QoQers,1 point,Mon Jul 20 21:44:08 2015 UTC,I would say there's a very wide gap between cynic and realist in this case.
cscareerquestions,3dy2br,KyleBumpus,1 point,Mon Jul 20 21:52:46 2015 UTC,Not at all. I have seen it happen.
cscareerquestions,3dy2br,jhartwell,1 point,Tue Jul 21 03:49:48 2015 UTC,Link?
cscareerquestions,3dy2br,wolf2600,14,Tue Jul 21 12:33:34 2015 UTC,"I will start off by saying that my advice is solely applicable in the US.   Frankly, I feel like I'm being lazy and I'm ashamed of it, but am not sure what to do. I know that counseling / medication will probably help things, and am working to get this set up, but it takes time to get that working. Also, exercise and fixed work environments should help, and I'm working on that too.   Until you get a diagnosis from a psychiatrist there isn't much you can do. Once you do get that diagnosis, I would suggest you have a talk with the HR department. This can allow for the ADA process to start. You may need to talk with HR and your boss about what kind of accomodations you need and what would work for both of you. Please note that they just need to make reasonable accomodations. If you need extra time working on stuff, that would be reasonable. If you require several weeks off every month, that would not be reasonable.   While you are waiting for your psych appointment, I would suggest reading up on the Americans with Disabilities act and what kind of provisions they will help you with. However, until you have an actual diagnosis there is nothing that can legally help you.  Source: Struggle with issues related to a mental illness and have gone through this process."
cscareerquestions,3dy2br,jhartwell,6,Mon Jul 20 14:45:11 2015 UTC,"Until you get a diagnosis from a psychiatrist there isn't much you can do. Once you do get that diagnosis, I would suggest you have a talk with the HR department.   Exactly.  When you have a medical diagnosis, talk to HR and give them a heads up."
cscareerquestions,3dy2br,627534,2,Mon Jul 20 15:09:27 2015 UTC,"I'm curious what the ADA will do to assist here?  Are you thinking taking time off, or similar?     My goal here is not so much to take time out, but to buy some time to sort things out."
cscareerquestions,3dy2br,cathline,8,Mon Jul 20 15:21:51 2015 UTC,"Not time off but would give you leeway in your due dates. You are only protected after a diagnosis and formally talking with your HR. For me, my boss extends my due dates and says I can cut my hours if need be. That being said, my boss is a stand up guy and that isn't part of ADA but him just wanting to make sure his employees are happy."
cscareerquestions,3dy2br,hefflig,2,Mon Jul 20 15:24:34 2015 UTC,"Thanks!  This makes sense, I didn't even realize this was formally an option."
cscareerquestions,3dy2br,fecak,6,Mon Jul 20 15:36:44 2015 UTC,"An important caution--you said you work at a startup.  Unless I'm mistaken, I believe the ADA only applies to companies with over a certain number of employees.  I know that was the case when it was originally written.   I think the number is 50 employees, but look it up on the gov't website to be certain before you take any action to make sure you're protected.  Either way, know that the feelings you're having of being overwhelmed are common in new jobs.  There's even a name for it:  imposter syndrome.  It does go away as you adjust to the new job, but you do have to make progress in it (see below).  You've done similar work in other jobs and interviewed extremely well, so you likely have what it takes.  Until you can get help, try breaking your tasks down into very small parts and focus on just one small part at a time.  Forget about the big picture that's overwhelming you.  If you get stuck, ask for help quickly so you keep moving and don't start ruminating about your skills.  You can do it.  I'm in the SW industry and have worked at startups with top notch people before as well.  Do what I suggest and you'll see that you fit right into that elite atmosphere soon as well, too.  Good luck."
cscareerquestions,3dy2br,fecak,4,Mon Jul 20 17:43:50 2015 UTC,but now find that the change in circumstances leaves me flailing.   Revisit medication.  Adderall could be the best thing for you in this situation.  You just don't know until you talk to your doctor.
cscareerquestions,3dy2br,M4053946,2,Mon Jul 20 17:19:58 2015 UTC,"This. Had a similar situation to OP, and it made all the difference in concentration and performance. Talk to a professional though, self medication is not the way to go."
cscareerquestions,3dy2br,negative_epsilon,7,Tue Jul 21 06:46:00 2015 UTC,"Mental health issues are obviously a very serious condition, and if you feel you are having issues you should talk to a professional. That being said...   I have been struggling with mental health issues specifically ADHD and depression. This began when I took a big risk jumping to a new startup job 2 months ago, and I am afraid of being fired.   Did you have any mental health issues before joining this startup? You don't allude to that, so it sounds like what you are saying is that you've lived your life for n years and suddenly began suffering from ADHD and depression after taking a startup job with high expectations.   ...I'm working through personal circumstances that are impacting work   Doesn't it sound like it's the other way around? Your work is impacting your personal (mental health) circumstances.  Definitely seek professional help if you truly feel you are suffering from ADHD and depression, or any other disorder. Before settling on a self-diagnosis of ADHD and depression (which can be very serious), consider the possibility that this could also be anxiety about a new job with unfamiliar pressures.  Good luck to you."
cscareerquestions,3dy2br,M4053946,4,Mon Jul 20 15:19:26 2015 UTC,"Did you have any mental health issues before joining this startup?   Yes, I did, please see edit #3 in the OP, and not self-diagnosing, I have a previous history which I learned to manage well enough to function.   Doesn't it sound like it's the other way around? Your work is impacting your personal (mental health) circumstances.   Sure, there's some back and forth there... I'd say that pre-existing issues represent challenges, and this job is now hammering on weak points in a destructive way.     New jobs always represent a solid challenge."
cscareerquestions,3dy2br,negative_epsilon,3,Mon Jul 20 17:20:51 2015 UTC,"Thanks for clarifying the previous history, which (for future reference) makes a significant difference to your story. Before the edit, this could simply be chalked up to someone having a couple bad months and thinking they had a potentially more serious situation.   We see a lot of posts here about young professionals with stress about a job change, so with pieces of your story missing it's more difficult to assess."
cscareerquestions,3dy2br,M4053946,3,Mon Jul 20 17:58:34 2015 UTC,"and the other new developers work like 60 hours.    Please be aware that this is just a crappy work environment. Don't beat yourself up for struggling with this sort of thing; if anything, be concerned if you ever find yourself not bothered by a 60 hour week.    When I do get plugged in on tasks, it's very easy to get distracted and lose and entire afternoon of work to trivial things.   This is very common for developers (especially those trying to work 60 hours a week!). This is why good companies will let developers work without constantly being interrupted, as mental focus is hard to get and easy to lose. Joel Spolsky wrote a great post about this years ago, but it is definitely still applicable. On the other hand, there are strategies improving on this which I'm sure you are familiar with, such as turning off any sort of alerts, not monitoring email, keeping reddit closed, etc."
cscareerquestions,3dy2br,PM_ME_UR_OBSIDIAN,1 point,Mon Jul 20 17:27:07 2015 UTC,It's a startup.
cscareerquestions,3dy2br,userx9,1 point,Tue Jul 21 00:26:14 2015 UTC,Understood. Does that change anything I wrote?
cscareerquestions,3dy2br,kindofapigdill,1 point,Tue Jul 21 00:31:55 2015 UTC,"In my opinion, 60 hour work weeks when you're working for a very early stage startup is expected."
cscareerquestions,3dy2br,casualblair,1 point,Tue Jul 21 00:39:29 2015 UTC,"I agree it is expected, at lousy companies. Yes, I'm aware of the number of companies I'm criticizing, but I don't see the point of making people give up having a life outside of work, especially companies that claim to be progressive (which many do). And, at many companies that feature long hours, people don't actually spend that much time working. They go to meetings, they fill the time because the company puts on pressure to stay late, not because of actual work. Yes, there are clearly exceptions to this, but the research suggests that people simply aren't as productive when they're exhausted from working long days.  edit: another piece about decreased productivity with more details: http://cs.stanford.edu/people/eroberts/cs201/projects/crunchmode/econ-crunch-mode.html"
cscareerquestions,3dy2br,1IsNotTooHappy,3,Tue Jul 21 01:32:41 2015 UTC,"I don't see you mentioning medication in your OP? Everyone is different, but being on Wellbutrin XR 100mg + Adderall XR 15mg everything is okay."
cscareerquestions,3dy2br,dcousineau,2,Mon Jul 20 17:34:13 2015 UTC,"No professional experience, but to me rather than ADHD this sounds more like anxiety combined with inferiority complex. I've got both and experience the same problems."
cscareerquestions,3dy2br,GvsuMRB,2,Mon Jul 20 17:35:34 2015 UTC,"I'm sure you're trying to be helpful, but the ADHD diagnosis was from a battery of (rather expensive and time-consuming) testing by a professional.   There's a wide range of different conditions that can cause the same results, but treatment and medication for anxiety & ADHD are vastly different."
cscareerquestions,3dy2br,KyleBumpus,1 point,Mon Jul 20 18:52:57 2015 UTC,"Well, as someone who as getting treatment for anxiety, it's still something that needs to be treated and can have a huge impact on a person's life.  Anxiety vs ADHD is for the psychiatrist to figure out."
cscareerquestions,3dy2br,kindlebluemoon,2,Mon Jul 20 19:58:04 2015 UTC,"I just told my boss. I said I'm dealing with adhd pi and that I have meds for it and if he notices anything, positive or negative, to let me know proactively because I am here to work and the meds are to help me work without causing me further mental distress.   For depression I haven't told him but I think he suspects. Regardless, I just avoid people and apply cbt to things that pass me off or make me upset. Was the decision to assign work I asked for to someone else personal or was it because I was too busy with things I was best at? When I was ignored and my suggestion turned out to be right, was my suggestion not explained well enough and the chosen path the better idea, or was it personal or perhaps ""I'm right and casualblair doesn't know shit, so my way or the highway""?   It's hard to share depression because of how little people understand it,and it's not just"" stop being sad"" stuff. I don't have a best solution, see how your boss handles adult adhd first then move on based on your comfort level."
cscareerquestions,3dy2br,KyleBumpus,2,Mon Jul 20 16:36:33 2015 UTC,"I've been in this situation before where mental health GREATLY impacted my work.  I told my manager and he was very understanding.  So gauge your manager.  Is he level headed?  Is he empathetic?  Or is he cold and concerned only with the bottom line?  Secondly, never come to a manager with only a problem.  Come with a solution.  If you do go to him tell him what is occuring, why it's impacting your work and how and then present a course of action ""Seeking professional help.""  Seperately if I could talk specifically to you.  Mental health should be your first priority.  The added stress of 60 hours a day is MASSIVE!  Just a regular day can feel like the weight of the world on your shoulders.  This adds anxiety and stress and probably sleeping problems, worsening your condition.  You don't want to reach the bottom and start losing control of your life.  I don't know your financial situation but you could consider working somewhere that is not as demanding.  I know startups can be VERY demanding of your time.    I work somewhere that is 7 hours a day. They really helped me through my mental issues."
cscareerquestions,3dy2br,bengalfan,3,Mon Jul 20 17:50:10 2015 UTC,"I do not have anything personal to add however I wanted to make you aware of a resource put together by a good friend of mine named Ed Finkler. It's a talk series called Open Sourcing Mental Illness and is built specifically for and by someone like you: a software engineer struggling in the industry while also tackling depression and other mental illnesses.  He has recordings of the talks he's given, I suggest giving at least one a watch, as well as check out the resource links (and blog posts) he has at the bottom of the site I linked. There's also a series of links in the footer labeled ""Partners in Crime"" that include things like a forum called Devpressed and more resource breakout sites.  Basically the theme of my post is you're definitely not alone in your experiences, especially with your fears about going to your boss about your issues, and there are resources where you can get advice and reassurance and tips.   I really hope you're able to make use of these links and I'm really happy to see you reaching out for help!"
cscareerquestions,3dy2br,asstatine,3,Mon Jul 20 23:02:00 2015 UTC,"Well I know how you feel. Been in similar situations. I'm actually curious if it's even a mental thing or not. It feels more like just shitty work environments and unrealistic expectations of stuff to deliver. Lots of IT projects fail all the time and the shit that does get done... Is usually terrible.   It takes a stellar class or group of people to get stuff done efficiently and what not or a lone wolf. Personally, I can't stand sitting at a desk for 8 hrs straight. I'm way too energetic for that shit. I think development is very creative (art) combined with the science to get it done... Meaning... That a lot of us have to mull over the issue at hand or have our subconscious process the problem and figure it out before we put a finger to keyboard and code. Maybe drawing things out or writing it out will make you more efficient, that way you have a written plan and it feels less daunting...  For me, I don't think its adhd, it's ocd with perfectionism. I can compete at world class levels in competitive activities, but sit me at a desk and have me be a developer... I'm just a middle of the pack dude... And I think it's because I need more experience and practice coding ... Which is hard to get a consistent flow to that practice, because every day our job has us learn something new or fix something old... Basically our problem solving skills are top notch, but our experience doing things isn't as robust... Well maybe I'm just projecting myself here.   Only thing I can say is, best of luck buddy, don't sweat it. Life goes on. Do what makes you happy."
cscareerquestions,3dy2br,asstatine,1 point,Mon Jul 20 14:36:03 2015 UTC,"If you tell your boss you are seeking treatment for mental health issues, you immediately become a protected class. You will NOT be fired by telling your employer you're seeking treatment, and if you are, you'll get an easy 7 figure settlement. Lawyers drool over this kind of open-and-shut discrimination case.  A non-douchey manager will want you to get better as a person, not fire you."
cscareerquestions,3dy2br,BlackDeath3,2,Mon Jul 20 15:55:35 2015 UTC,"It's very tough to prove this kind of discrimination, and employers are smart enough not to make it obvious that the reason you were fired was due to discrimination. Also a seven figure settlement is really unlikely, I would guess five figures at best.   I'm not saying it's impossible to win a lawsuit in this kind of scenario, but don't count on it."
cscareerquestions,3dy2br,Dank_801,0,Mon Jul 20 23:37:00 2015 UTC,Citation that employers are smart enough to not make it obvious that the reason you were fired was due to discrimination? I've never seen anything to lead me to believe this is true.
cscareerquestions,3dy2br,TheAdventMaster,1 point,Tue Jul 21 00:00:43 2015 UTC,"Having mental heath issues is not Lazy. This is the second time in a week someone has said a very similar thing. Your brain works differently. That's all. Mental Health is important. More important than the job. Figure it out. Go see someone. Add ""tools"" to your tool box. Right now you are in a super stressful place, this has got to add to your mental health issues. Maybe you need meds again, just to get to a more even place, maybe not. But you are not lazy. What you are is not taking care of yourself. This field will wreck you if you don't figure out fast that you are the most important thing. Jobs come and go but you gotta handle your business first."
cscareerquestions,3e231t,3Finker,4,Tue Jul 21 10:43:07 2015 UTC,"This is the sort of question you need to ask your contact at the company.  In CS, if you're ever given requirements which are unclear, you need to ask questions and get clarification so that the program you write fulfills the requirements.  Reddit's opinion of what the requirements are doesn't matter; the only opinion that matters is that of the person who assigned you the project."
cscareerquestions,3e231t,wolf2600,1 point,Tue Jul 21 12:22:07 2015 UTC,the count of the most filled hosts (having the smallest number of empty slots > 0)   So basically one of the results (in readable form) would be:   M1 = 3 hosts with 1 empty slot each M2 = 5 hosts with 2 empty slots M3 = 2 hosts with 4 empty slots  that's how I see it atleast
cscareerquestions,3e231t,UpAndDownArrows,1 point,Tue Jul 21 10:56:29 2015 UTC,"For each instance type, the count of the most filled hosts (having the smallest number of empty slots > 0). Both the host count and number of empty slots must be written out in that order.   Consider that FleetState.txt might contain data for 100,000 hosts.  Chances are, 2 or more hosts of the same type (M1, M2, M3) will have exactly the same number of empty slots.  I'm thinking that what they are looking for is 1) The count of how many hosts share that number of empty slots, and 2) the actual number of empty slots common to those hosts.  So, if there are 100 M2 hosts in the input, and 50 have 5 empty slots, 25 have 4 empty slots, 20 have 3 empty slots, and 5 have 1 empty slot, then you'd want to put ""M2=5,1""."
cscareerquestions,3e03jv,YoungAdultFriction,9,Mon Jul 20 22:44:15 2015 UTC,"I can't believe the ""nothing left to do"" part. At every company I have been in, there has always been a huge backlog of ""nice to have"" tasks that engineers have been putting off while working on other, more important stuff, even during the slowest periods.  If you really want to be productive, go around and talk to people. Ask what you can do to help the team/company. Try and reduce the build time by X%. Write scripts to make the build/test/release pipeline smoother. Improve service logging and error detection. Write a new test suite/framework. Or even get involved in high-level planning/prototyping for the next release (it is definitely happening already).  Sure you can go the do nothing/browse Reddit/watch tutorials route, and I doubt anyone is really going to care if you do. But don't expect glowing reviews or a full time offer without demonstrating that you (1) are smart and (2) take initiative and get things done."
cscareerquestions,3e03jv,IMovedYourCheese,9,Tue Jul 21 04:06:30 2015 UTC,I'll go ahead and say it.. browse reddit.
cscareerquestions,3e03jv,gravytrain2012,4,Tue Jul 21 01:59:08 2015 UTC,Maybe you can ask what specific skills will be needed for the next project so you can focus your learning on those?
cscareerquestions,3e03jv,saynotovoodoo,2,Tue Jul 21 02:42:45 2015 UTC,"Is the deadline for the current project going to be before your internship ends? Do you know anything about the upcoming project? If you know anything about the concepts it employs or the functionality it is likely to require, you could probably justifiably bill for pre-researching and experimenting those future concepts.  You could also review and tinker with code in a previous or even the current project, if you have access, by testing features you're not familiar with or adding new ones, which would technically be work-related. If you can pass this, you could then even work on outside code (generic stuff you recreate later from memory or pseudocode notes if there are checks on any kind of off-station data transfer)."
cscareerquestions,3e03jv,darkflagrance,2,Mon Jul 20 23:49:20 2015 UTC,"Suggestions:   Write a tool that helps in debugging the system, displaying counters, analyzing logs, etc. Write a tool that does performance analysis and find improvements that can be made.  You'll need to make any improvements in a branch.   Beyond that, think about the weaknesses of the architecture in the system.  Can you think of ways it could be improved?  Is there some interesting idea that you think could be possible?  Try writing up a document on some of your ideas.  Show it to a more senior architect on the project and ask for advice on your suggestions  (Be sure not to make it look like you think you're smarter than they are)."
cscareerquestions,3e03jv,readams,2,Tue Jul 21 00:37:41 2015 UTC,learn some technology or language that your team uses.
cscareerquestions,3e03jv,Glud,2,Tue Jul 21 03:51:21 2015 UTC,"Learn Django, or another tool. Django is hella' fun and it allows you to shape ideas that you had but never knew how to do it or had time to."
cscareerquestions,3e03jv,useryourname,1 point,Tue Jul 21 04:25:09 2015 UTC,"I'd just find a relevant book to read, maybe browse relevant coding articles."
cscareerquestions,3dzb4d,ecopally,20,Mon Jul 20 19:18:27 2015 UTC,"Not the answer you want to here but, very, very slim.   A completely self taught programmer, with zero experience, represents a huge chance for a company to take (it costs money to onboard someone). Your best bet would be looking for an internship (again, going to be hard get), doing a lot of self projects, or getting a few certifications to get into the CS/IT field.   I would strongly urge looking into Code Academies (be very careful with these, search this sub for reviews), getting a 2-4 year degree in the field, or something similar."
cscareerquestions,3dzb4d,NotARandomNumber,6,Mon Jul 20 19:54:36 2015 UTC,"I'll have to agree with this. You always hear about those self-taught programmers bootstrapping themselves out of nothing but not enough about the self-taught programmers who didn't make it. Unless you're a complete rockstar, companies aren't going to want to take on the risk of hiring you. You just have so much more to prove than someone who has a degree.  It'll honestly probably come down to pure dumb luck if you're able to get an internship with shitty pay to get your foot in the door.  Bootcamps might be an option if you can't afford a full 4 year degree. The benefit there is that they probably teach you full stack web dev but more importantly, have connections and a network to try to place you at a job. Make sure whatever bootcamp you join has a track record of placing their students and a career services program to help you find a job. The quality of bootcamps can be really variable so be very critical."
cscareerquestions,3dzb4d,cscareerqs,1 point,Mon Jul 20 20:38:45 2015 UTC,Thanks. I've also read the same anecdotal accounts of self taught developers going off to full-time positions after months of studying so I was starting to think perhaps I could achieve the same.
cscareerquestions,3dzb4d,jonab12,4,Mon Jul 20 20:59:36 2015 UTC,"Bear in mind also pure JS alone is nothing. Will you learn Angular/NodeJS/Meteor? Do you know what a MVC is or how to make your own REST API using JS?   What terms I just mentioned are in the domain of JS. And JS isn't everything. What about design?  Sass, CSS, Bootstrap, Templating is design. A good frontend developer knows design too  You have ALOT to learn to be good"
cscareerquestions,3dzb4d,sharkattack85,1 point,Mon Jul 20 21:14:17 2015 UTC,Thiiiiiis
cscareerquestions,3dzb4d,Prime_1,2,Tue Jul 21 03:55:17 2015 UTC,"A completely self taught programmer, with zero experience, represents a huge chance for a company to take (it costs money to onboard someone).   It also costs them time and money to get rid of them if they don't pan out."
cscareerquestions,3dzb4d,rubyruy,2,Tue Jul 21 00:51:18 2015 UTC,"Instead of just focusing on JavaScript for 6 month straight I would instead focus on learning just enough web development to get some shitty contract work under your belt. Put up Drupal or WordPress for some local businesses, maybe start with non-profits if need be, that sort of thing. Pay will be poor and many people will fuck you over (and frankly, your wok will probably be pretty shitty too at first) r, but as long as you're getting work experience banked for your future resume, and you are actively going out of your way to actually get better at programming, you can build up to something."
cscareerquestions,3dzb4d,Hoser117,1 point,Tue Jul 21 06:16:19 2015 UTC,"Depends on the company, but pretty low. I think you'd be better off applying for QA positions and then working your way towards a developer role over time. Definitely make sure you have side projects so whenever you do try to make the transition you can point to code on GitHub etc. and prove that you are capable of putting something together."
cscareerquestions,3dzb4d,proliberate,1 point,Tue Jul 21 06:25:12 2015 UTC,"You don't mention whether you have any prior experience with or exposure to programming. I feel that is a very relevant factor. Without any, you're going to just barely be putting together an understanding of programming at all. If you've already been sort of learning it for awhile, or if you already know, like, PHP and HTML, it'll still be hard, but slightly less so."
cscareerquestions,3dzb4d,offsetjj,1 point,Tue Jul 21 10:19:39 2015 UTC,"Knowing only JS would definitely not be enough. But if you're really devoted and spend at least 8hrs a day learning in 6months you'll probably be able to land an internship and some work on freelance sites, which could lead to full employment."
cscareerquestions,3dzb4d,KyleBumpus,2,Tue Jul 21 14:35:50 2015 UTC,"A job? Your chances aren't great, but also not 0. But it won't be a decent job unless you turn out to be a prodigy.  Agree with the advice on bootcamps you've already received."
cscareerquestions,3dzb4d,bradfordmaster,1 point,Mon Jul 20 20:54:47 2015 UTC,"I agree with the other posters that a bootcamp or an internship are a much better bet, but you if you want to do it all yourself, it is possible. You can't just say ""I studied X"" though. You'd need to build something awesome, put it up on github, maybe have a working demo and blog post about it, and put that on your resume. Even then, it will be a huge challenge to get noticed, and many bigger companies will throw your resume out at HR for not having any experience / degree.  Chances are, 6 months of study can make you competent at something, but not good enough to put something really nice together with well structured and commented code. Those kind of things take experience."
cscareerquestions,3dzkht,quartern,10,Mon Jul 20 20:25:43 2015 UTC,"Interviewing is an important, yet hard to learn skill. If you ever find yourself needing to interview, you'll get some practice. I don't know how I feel about interviewing when you are not looking for a job. I'd probably avoid taking people's times unless you at least have some minimal interest in taking the position. Perhaps networking in general would be a better solution, than attending interviews for jobs you don't want."
cscareerquestions,3dzkht,IbanezDavy,11,Mon Jul 20 21:27:19 2015 UTC,"I interview, but I'm always very clear: I'm always open to new opportunities, but I'm extremely happy where I currently am and it would take a lot to get me to leave.   And I'm not lying. If someone was willing to make a good enough offer I would leave. It hasn't happened yet, but a few places have been willing to have interviews."
cscareerquestions,3dzkht,riplikash,5,Mon Jul 20 22:13:27 2015 UTC,"I don't interview for practice. I'll interview when I'm not looking if someone comes to me with a good opportunity. I've done that several times over the 3.5 years I've been at my current company. But it's always been ""in good faith"" -- as in, I was actually interested in the jobs and may have taken them if things worked out.   In my experience, declining a job offer isn't burning a bridge (unless the company is crazy or you were really rude). And while I am concerned about wasting other peoples' time, I'm more concerned about wasting my own time. I don't need interview practice, so interviewing unnecessarily just means I need to waste time on the phone/in-person, maybe take PTO, not get stuff done at my current job, not be available for production issues, or take time out of other stuff I want to do."
cscareerquestions,3dzkht,Himekat,5,Mon Jul 20 21:44:33 2015 UTC,"As long as you are clear about your position there is no problem. I have often been approached for interviews and even after saying that I was not looking they kept insisting to meet me. Beside when you are not looking this is exactly when you are going to be offered the best offers exactly because you have an excellent bargaining position. ie: you are not looking. I reframe the whole thing as a networking activity where I meet people in another company. This also removes a lot of pressure, you are not looking.  Compared that to when you are unemployed and you need to find a job..."
cscareerquestions,3dzkht,lano1106,4,Mon Jul 20 21:58:28 2015 UTC,"I do, I like to hear about other job opportunities even if I don't want to leave my current position"
cscareerquestions,3dzkht,mmanrique,4,Mon Jul 20 22:58:01 2015 UTC,I don't think you should ever really consciously decide that you aren't looking.  How do you know there isn't anything better out there if you aren't looking?
cscareerquestions,3dzkht,CyclonusRIP,3,Tue Jul 21 01:45:40 2015 UTC,"I don't/wouldn't. I don't need interview practice, and I'd rather not go through the inconvenience and waste people's time."
cscareerquestions,3dzkht,SmartassRemarks,2,Mon Jul 20 22:43:36 2015 UTC,"I always talk with recruiters and hiring managers. Half the time I bow out because something they said raised a few flags. It takes me about 6 months to find a decent job that matches all my requirements. Also, if you don't interview,  you won't know what you're missing."
cscareerquestions,3dzkht,utuxia,1 point,Tue Jul 21 03:09:53 2015 UTC,I actually think this is sort of required. Fresh out of college I was very good in data structure and algorithmic problem solving asked in interviews. Now 4 years in job life I am almost out of touch and it takes me more time to even understand most problems.   I feel I would have done better had I kept on interviewing during these 4 years. Even if you don't want a new job you never know if you are offered a new interesting challenge to work on something exciting .
cscareerquestions,3dzkht,minusSeven,0,Tue Jul 21 10:00:24 2015 UTC,I do. I just make it very clear that I'm not looking for another job but am interested in having a chat. As long as you're honest they tend to not mind at all.
cscareerquestions,3e0yu1,_pathetic_cs_student,4,Tue Jul 21 02:57:48 2015 UTC,"Yeah, this is way too much. Even as a regular engineer, I feel like I'd be hard pressed to bother completing this just in terms of the time investment. Do they have other parts to the interview process?  It's kind of shady to me, it seems like they could potentially exploit this amount of detail as free labor, honestly. I'd pass, there's other internships out there."
cscareerquestions,3e0yu1,cscareerqs,2,Tue Jul 21 03:10:07 2015 UTC,"Thanks for your comment. The only other part of the interview was a ~20 minute introduction type deal, where they asked me about my motivation, my educational background, what I wanted to accomplish during my internship.   I had asked in advance whether the interview would be technical or not, and I spent a considerable amount of time brushing up on my Ruby. I'll chalk it up as interview practice, but I would've rather spent all day inverting binary search trees than answer ""what makes you tick?"" bullshitty questions."
cscareerquestions,3e0yu1,ShittyFrogMeme,4,Tue Jul 21 03:25:31 2015 UTC,"Personally, I'd back off.   First of all, that is way too involved for an internship application. I've only had one interview that asked me to complete a programming project on my own time, and it definitely did not ask me to complete a fully functional product like this.  On that end, they are literally asking you to create a fully functional product. This should be a huge red flag. This is way too specific and large of a scope for what would be considered an interview project. I would bet they are asking you to complete this so that they can take the result and use it themselves without having to pay you. This sounds very sketchy. How big/reputable is this company?"
cscareerquestions,3dy6l9,dt084,8,Mon Jul 20 14:29:50 2015 UTC,"If you already have a degree don't go back for another one. Learn what you need to learn by practicing. Practice every single day.  Learning to code is similar to learning how to play an instrument. You won't get anywhere if you don't practice. That's true whether you go to school for it or not.  There are plenty of resources that you can learn from for free. Including free online courses, youtube tutorials and large communities like Reddit to ask questions.  Decide what you want to try to make and run it with."
cscareerquestions,3dy6l9,TheTaoOfBill,7,Mon Jul 20 17:03:46 2015 UTC,"Learn what you need to learn by practicing. Practice every single day.   A lot of the time, what a degree offers is the ability to live off of student loans, avoiding your 40+ hour job in favour of... practicing new skills 5 days a week, with a weekend to pursue your own projects or just pay-down some of the debt. While we'd all love to practice more, it all depends on your work situation on whether or not you have time to pursue it."
cscareerquestions,3dy6l9,Farren246,1 point,Mon Jul 20 17:32:21 2015 UTC,"I remember there was a kid back in my undergrad days who tried to get enough money from student loans to pay his rent on top of schooling. Sallie Mae approved him, but when the school got that info from Sallie Mae, they didn't accept that, denied the loan, and basically screwed his whole year.   Is this common? From what I understood, I thought it was fairly common to only get enough to cover tuition + fees. Thoughts, anybody?"
cscareerquestions,3dy6l9,ooronning,2,Mon Jul 20 17:37:56 2015 UTC,"Hmm..that doesn't seem right. He may have been denied a Sallie Mae loan (which is a private loan) based on some issue with the school, but he should have been eligible for federal loans up to the total estimated cost of attendance (which includes room and board) less any other aid received."
cscareerquestions,3dy6l9,Arrch,2,Mon Jul 20 19:21:26 2015 UTC,but he should have been eligible for federal loans up to the total estimated cost of attendance (which includes room and board) less any other aid received.   That's simply not true. Federal loans have yearly limits.
cscareerquestions,3dy6l9,MurlockHolmes,1 point,Mon Jul 20 19:39:11 2015 UTC,"You are correct. I should have said:  Subject to federal borrowing limits, he should have been eligible for federal loans up to the total estimated cost of attendance (which includes room and board) less any other aid received.  I was just focusing on the claim that loans can only cover tuition and fees. Depending on your specific situation, federal loans can cover up to the total estimated cost of attendance. If you max this out, private loans--such as the Sallie Mae loans referenced--generally will also cover the difference up to the estimated total cost of attendance. What's generally not true is that you can only get loans to cover tuition.  In my experience, situations similar to what the OP referenced are the result of people expecting to receive loans for the estimated cost of attendance, but not factoring in reductions due to other aid received."
cscareerquestions,3dy6l9,Farren246,1 point,Mon Jul 20 20:36:29 2015 UTC,"I get enough from my poor-people grants and work study to pay most of my tuition, and my total aid package covers my total cost of attendance including room, board, and ""transportation"", whatever the heck that is. Since I'm living off-campus the room and board becomes rent and food, am I doing something against the rules that I didn't know abut?"
cscareerquestions,3dy6l9,TheTaoOfBill,0,Mon Jul 20 22:37:07 2015 UTC,"True, but it depends on how much he has saved up. I managed to get through 3.5 years of school through loans and by working dual 12-hour shifts on the weekends with the gf working part-time as well. Together we had enough income to actually put some away too."
cscareerquestions,3dy6l9,Farren246,1 point,Mon Jul 20 17:44:22 2015 UTC,"Except what you do for school may have nothing to do with the kind of software development you want to do for a living.  You can go an entire career without having to learn about Assembly language or Binary Search Trees or linux Kernel compiling.  If all you want to do is create high level apps for a living your time would be more effective if you spent 1-2 hours a day programming a pet project.   But time is one thing. Money is another major factor. 2 years of university level school is going to cost about 16,000 - 28,000 dollars depending on the school. Better to be making money while you learn coding with a 40 hr a week job than to be losing 16,000 dollars."
cscareerquestions,3dy6l9,TheTaoOfBill,1 point,Mon Jul 20 17:43:17 2015 UTC,"Better to be making money while you learn coding with a 40 hr a week job than to be losing 16,000 dollars.   Absolutely! But what if you're working 70 hours a week and have no time to teach yourself coding? In that case, the school with loans is preferable."
cscareerquestions,3dy6l9,Farren246,2,Mon Jul 20 18:34:44 2015 UTC,People working 70 hours a week generally do so out of a need for money.
cscareerquestions,3dy6l9,TheTaoOfBill,1 point,Mon Jul 20 18:38:10 2015 UTC,"Yes... and a student loan is a way to earn more money, assuming you can graduate and find a job and pay it back with interest."
cscareerquestions,3dy6l9,Farren246,2,Mon Jul 20 19:43:26 2015 UTC,No I mean they do it because they need money as in now. They have kids to feed or mortgage payments to make. These aren't the types of people who are going to be able to afford to run off to college. Most people working 70 hours a week are not the type of people that can just give up their income like that.  It's not difficult to change to a 40 hour a week job so you can spend some time learning programming on your own time. But chances are people working 70 hours a week are doing so because they have to and giving up that income to go run off to college is not going to be an option for them. A better option for them would still be trying to teach yourself.
cscareerquestions,3dy6l9,timworx,1 point,Mon Jul 20 20:22:14 2015 UTC,I suppose so.. assuming they can find the energy.
cscareerquestions,3dy6l9,Farren246,2,Tue Jul 21 11:31:35 2015 UTC,"It all depends, really.   Remember, a loan isn't free money, and that scenario is totally contingent on getting enough to cover most of your living expenses (if it's only covering tuition, then you're no better off than learning on your own, except that you'll be in debt).  It seems you'd be better off cutting your hours down to 30-40/wk (or finding a new job that only requires that) and spending 20-30 on learning programming. Which is about as much as time someone going to school for it, coincidentally!  Not saying there isn't a reason to go the school route, I'm just speaking to what you mentioned specifically."
cscareerquestions,3dy6l9,KierkegaardExpress,1 point,Mon Jul 20 18:48:38 2015 UTC,"if it's only covering tuition, then you're no better off than learning on your own, except that you'll be in debt   And you'll have a degree. You can talk all about your portfolio, but at the end of the day, a lot of hiring decisions are done by HR who have no idea about technology. They read ""contributed to API"" and don't know what to make of it. They read ""Graduated with BSc in computer science with honors"" and they'll bring you in for an interview.  But seriously, I don't know of anyone who could still make rent and put food on the table after cutting their hours down to only 40."
cscareerquestions,3dy6l9,narwahlmedia,5,Mon Jul 20 19:13:33 2015 UTC,"When I was working in another field, I tried to do the self-taught thing for a while, but I found it honestly exhausting and a bit aimless.  If you have the resources to focus on learning full time and the discipline to teach yourself, that is absolutely a fantastic way to go, though that wasn't for me.  I decided to return to school and I found the structure to be incredibly helpful for my education.  It's also helping me develop my network, teaching me a ton and has given me a leg up on those without a proper degree."
cscareerquestions,3dy6l9,mixophrygian,3,Mon Jul 20 21:46:48 2015 UTC,"Going back to school worked out great for me. Almost done with my Masters, 2 internships and almost 100% have a job after graduation. I started with a music degree. The most important thing is hard work, experimenting with technologies, and if you can, experience with an internship. I've learned loads more just observing experienced developers and how they tackle difficult problems."
cscareerquestions,3dy6l9,mixophrygian,2,Tue Jul 21 04:24:43 2015 UTC,"I changed careers from something completely unrelated and am entirely self-taught.  If you have the discipline and drive to study daily, plumb your network for software developers (friends, friends of friends, meetups and free workshops) and put yourself out there, there's work.  After about a year, year and a half of self-study I received two offers.  Have been happily working for two months and love it.  A great starting place for the self-taught: www.theodinproject.com"
cscareerquestions,3dy6l9,owlsonhats,1 point,Mon Jul 20 16:54:47 2015 UTC,Congrats! I'm assuming your portfolio was pretty important in interviewing. Would you agree?
cscareerquestions,3dy6l9,mixophrygian,2,Mon Jul 20 17:05:12 2015 UTC,"Sure was!  You need to have an array of projects in various languages that you can demonstrate, it goes a long way."
cscareerquestions,3dy6l9,owlsonhats,1 point,Mon Jul 20 17:16:01 2015 UTC,"I had 3 projects that were all in the same language. I also used one that came from a previous job interview 'work product' interview.  I don't disagree with your thrust, but you probably don't need multiple languages."
cscareerquestions,3dy6l9,mixophrygian,1 point,Mon Jul 20 20:25:14 2015 UTC,"Sure, but it can't hurt."
cscareerquestions,3dy6l9,shortscapenyc,2,Tue Jul 21 00:43:21 2015 UTC,"I don't disagree that it can't hurt, but it takes time. There's no reason to wait until you've learned 3 languages to start applying for jobs."
cscareerquestions,3e05pz,KingTrebor,4,Mon Jul 20 23:00:33 2015 UTC,"The hospital will be fine if you leave it, they has 6 internal candidates and 10 external for your position 5-6 months ago and undoubtedly have similar number now.  You described the hospital job in mostly negative terms and the startup job in only positive, I think you know exactly what you want to do. Do it and do it for yourself, you don't need external validation for this."
cscareerquestions,3e05pz,apfelbeck,1 point,Tue Jul 21 00:43:51 2015 UTC,"Thank you for the feedback. I kind of assumed the feedback would be this way, and had a pretty distant hope someone may of been in this position before (big promo, another opportunity, etc) but I thank you for your perspective. Actually never thought they could take any of the other 15 people and move on. Appreciate it!"
cscareerquestions,3e05pz,PhatKiwi,4,Tue Jul 21 00:49:58 2015 UTC,"I agree, judging by the way you describe the jobs, your mind is made up, you just need a nudge.  In your shoes, I would go with the new company.  I leave things as organized as possible at the hospital, and if they choose to get all butt sore, then that is their deal.  One of my IT idols once said, ""If a techie is applying for a job with me, and says they have 20 year experience because they worked as a dev for ABC company for 20 years, I tell them no, you have 1 year experience repeated 20 times.  I prefer to see techies that changed job every 5 years or so ...."""
cscareerquestions,3e05pz,InYourBox,1 point,Tue Jul 21 01:40:46 2015 UTC,"Great response, I appreciate it. Thanks for the constructive feedback. Hoping the stars with align."
cscareerquestions,3dz8t6,artificialdong,6,Mon Jul 20 19:01:45 2015 UTC,"And on a side note, how do I know if I'm 'ready' to start applying for C#/.NET jobs?   As soon as you can build something that approximates what your employer would believe makes you capable for the job. If you're focused on web development, send me a PM. I'll send you an actual work product test that an employer gave me. If you can build that in less than 30 hours you're more than ready to start interviewing."
cscareerquestions,3dz8t6,owlsonhats,5,Tue Jul 21 00:21:21 2015 UTC,"i delivered pizzas before my first .NET job shortly after college. I wish I had a background in IT but i don't really think that's necessary here seeing as this certification/training will take time away from your initial goal of being a programmer. I would just pickup a part-time job and practice an hour a night.  How you'll know when youre ready? I guess when you can read and write data from SQL Server via C# and potentially display it to the user through web or windows app, figure out how to use conditions, loops, data structures to solve problems, etc.."
cscareerquestions,3dz8t6,monkeycycling,1 point,Mon Jul 20 20:14:07 2015 UTC,"Well damn, is that all? Does VB.NET count?"
cscareerquestions,3dz8t6,kowalski10,1 point,Tue Jul 21 02:04:49 2015 UTC,"I really wouldn't recommend it but you can prob find a job using vb.net. they'll probably be in the process of rolling over to c# and asp.net mvc. But yeah that's all, know the basics, know what programming concepts are available to you to solve a given problem, and spend the rest of your career on Google/stack overflow!"
cscareerquestions,3dz8t6,monkeycycling,1 point,Tue Jul 21 03:04:24 2015 UTC,I'm assuming this comes with the caveat of needing any degree.
cscareerquestions,3dz8t6,kowalski10,1 point,Tue Jul 21 18:24:00 2015 UTC,"eh probably. but fun fact, no employer has every asked me to show proof of a degree. im not suggesting anything..."
cscareerquestions,3dz8t6,monkeycycling,2,Tue Jul 21 18:42:56 2015 UTC,"IT won't help getting into software. An IT job will show that you're ""employable"" more than delivering pizza does and that is more important but if you're really set on software it would be best to find an office temp job or data entry."
cscareerquestions,3dz8t6,athosghost,1 point,Mon Jul 20 23:37:19 2015 UTC,Do you think IT could help with getting into DevOps?
cscareerquestions,3dz8t6,athosghost,1 point,Tue Jul 21 17:50:43 2015 UTC,If you can find a DevOps job...  I don't see too many of those (not that I go looking for such jobs).   Edit: hit submit to fast
cscareerquestions,3dz8t6,statsjunkie,2,Tue Jul 21 18:10:21 2015 UTC,"I think it would be more important to complete a few side projects than it would be to work in ""Tech"". Do whatever makes you the most money in the least amount of hours so you can teach yourself the fastest.   I would say you are ready (for a junior position) if you can create a simple page with dynamic data (particularly from SQL), and be able to create a custom class and control and impliment it all.   Addidionally, it would make you much more marketable to learn MVC (but not at all necessary), as well as know Bootstrap (which is really easy to learn -- because of the extensive documentation). I would say both of these things would make your job search easier but you shouldnt wait to apply until you know those.   If you don't mind sharing, which market are you in?"
cscareerquestions,3dz8t6,tallandgodless,-2,Tue Jul 21 00:44:10 2015 UTC,I would get a degree in CS and then move if you need to to find a job.
cscareerquestions,3dz8t6,tallandgodless,1 point,Tue Jul 21 01:24:33 2015 UTC,"I'm not getting another degree, at least not right now. It's just not feasible."
cscareerquestions,3dz8t6,tallandgodless,1 point,Tue Jul 21 01:57:20 2015 UTC,"What defines feasibility?  Financial problems?  Your long term finances will be more detrimentally effected if you end up as a pizza guy for 3 years.  Pizza guy also doesn't look very impressive on a resume.  If you looking into these certs then your lacking good direction for your career, those certs will take you into a different field that is more competitive and pays less.  Also keep in mind the types of places that are more willing to hire folks without degrees (who aren't savants with huge impressive projects).  These are the programmer-mill consulting outfits that pay 60-70 percent market rate for developers, and don't train there people or provide any means of improving their status at the company.  These places usually heavily abuse immigrant workers by holding a carrot in the form of a work visa in front of them.  Going back to school will get you better connections, prepare you better to be a professional developer, and get you the resources of the institution to help you find a job.  I was working in a warehouse as a college drop out, and chose to bite the bullet and go back to school.  I have 40k in debt, but I now make over twice that a year in salary with a little less then 2 years on the job.  If you are a hard worker and your actually good at development, paying off accumulated debt isn't an ""if"" it's a ""when"".  So I'll say it again, if your serious about becoming a developer, you should do whatever it takes to get back into a 4 year school and get a degree in CS."
cscareerquestions,3e1rj8,throwawoo83473248324,3,Tue Jul 21 08:02:54 2015 UTC,"ALWAYS do as much as you can, not as much as is required."
cscareerquestions,3e1rj8,the-garden-gnome,2,Tue Jul 21 08:55:15 2015 UTC,"they commonly use some ""take home"" coding and design problems to assess candidates, and he was willing to send me the couple that they use for their different positions so that I could take a look.   My moral compass is spinning on this one. It seems analogous to someone asking if you want a copy of an upcoming exam at school. It seems like it would be an unfair advantage.   ""Gee, I know you probably had some problem in mind to quiz me about, but how about we talk about my solution to your challenge problems?""   I don't know what it is (maybe trying to direct the conversation, maybe assuming I'd use those problems, maybe trying to show superiority, etc), but this type of attitude would put me off from hiring someone."
cscareerquestions,3e1rj8,echospring,1 point,Tue Jul 21 13:17:13 2015 UTC,"My moral compass is spinning on this one. It seems analogous to someone asking if you want a copy of an upcoming exam at school. It seems like it would be an unfair advantage.   I'm not sure whether I simply talked them out of a particularly naive recruiter, or whether they usually give enough time on these problems that a couple extra days really doesn't matter. If it helps, these are tough problems, tough enough that I would expect the divide to be between people who can or can't do them at all, not between ""can do it given 24h"" and ""can do it given a week"".  And, well, remember that I'll need to sink a lot of time into working on them ahead of time if I'm to get any substantial portion done ahead of the phone interview. I'm certainly not taking a shortcut in applied effort here.  I kinda take the attitude that there is only so far that I can go to make sure that I'm working with them fully above board; if I ask their recruiter to have a look at the challenge questions they'd use on me, how far should I go in questioning whether their recruiter screwed up by saying, ""yes""? Assuming that I'm not supposed to see them at this point requires me to figure that the recruiter I was talking to is really, outstandingly stupid, and I'm not sure that's the best conclusion to draw from his ""yes"". It's also possible that they don't really care at all when I see them. I admit that I don't know for sure, though.  I definitely appreciate that you're making a point of mentioning ethical issues; I can't claim to be an angel, so the outside perspective is very useful.   I don't know what it is (maybe trying to direct the conversation, maybe assuming I'd use those problems, maybe trying to show superiority, etc), but this type of attitude would put me off from hiring someone.   Maybe I should word it differently. The idea is that a lot of engineering phone screens use toy problems whose only applicability to the company's work is, ""can you code? like, at all?"" and, well, I can code. Rather than spend interview time talking about toy weedout problems, I think both them and I would be better served discussing my ability to solve actual problems drawn directly from their work.  The point of engineering interviews is to work out whether you can do the job they're thinking of paying you for, not to quiz you on CS trivia, so I'm trying to make this interview more about whether I can do the job, which should benefit both them and me."
cscareerquestions,3e1rj8,Himekat,2,Tue Jul 21 15:40:43 2015 UTC,"Then I'll say to the engineer that calls me, ""Gee, I know you probably had some problem in mind to quiz me about, but how about we talk about my solution to your challenge problems?""  My question is: is this a sane idea? Is this going to impress them at all, or will they shrug, wonder who this lunatic is who did their challenge problems, and ignore that I did them ahead of time?   I would do them in order to get the practice, but I wouldn't bring it up with the interviewer unless a good opportunity comes up. The interviewer is already going to be prepared for the interview with his own questions, and it's really up to him to guide the interview. He probably has specific things he needs/wants to ask. Hell, he might not even be familiar with the problems you did, or even know they exist as coding challenges for candidates (especially at a larger company, where not everyone is involved in the hiring process). Just let him do his thing.  If he asks something like, ""What have you been working on lately?"" or ""How much do you know about the company?"" you might have a chance to fit your work in with ""Well, this past week I've actually been working on some advanced challenge questions my recruiter gave me from your company's hiring process, I've been really enjoying them"" or ""I'm getting a real look into what you guys do there from these challenge questions my recruiter gave me"". And then just see where it goes from there. He might ask you to elaborate, he might not. But don't force it."
cscareerquestions,3e0nom,Girafarigging,2,Tue Jul 21 01:25:50 2015 UTC,It's courtesy to give at least 2 week's notice (which occurs after you've already landed and accepted another job offer).  It's almost never appropriate to tell a company that you're actively applying elsewhere.
cscareerquestions,3e0nom,lightcloud5,1 point,Tue Jul 21 01:55:52 2015 UTC,"Okay so if I were applying elsewhere, I would keep it under the radar until I landed a new job, then hand in my 2 weeks notice, and tell the new company when I will be available after those 2 weeks?"
cscareerquestions,3e0nom,nutrecht,2,Tue Jul 21 02:38:53 2015 UTC,"My question is, should I notify my company that I am applying elsewhere?    No, never do that. What if you change your mind and want to stay? If you say you're leaving you should be leaving."
cscareerquestions,3e0nom,Truestor,1 point,Tue Jul 21 05:36:32 2015 UTC,Good point thanks!
cscareerquestions,3e1b6t,Thatyahoo,4,Tue Jul 21 04:51:14 2015 UTC,"Not going to lie, but you have all the odds stacked against you in finding a job. I don't know about your time line, but studying an hour or two a day might not be enough to get you a job within 6 months, or even a year (more or less, depending on your learning ability).   That being said, I think Web programming has jobs with the lowest barrier to entry (though even that's changing, with all the new technologies coming out for it). I recommend you start off with The Odin Project. Go through it, do the projects, make projects of your own, and after however long it takes you to get through everything, you should at least have some sort of portfolio to show potential employers and the skills to handle some entry level freelancing gigs for web dev.   Good luck."
cscareerquestions,3e1b6t,Linooney,1 point,Tue Jul 21 05:29:11 2015 UTC,"Sounds like the worst time to consider a career change with a lot going on in your personal life.   If you do want to try to get a job in software development without a degree, you will need to build a substantial portfolio, which will require a significant amount of time and effort each day.  I recommend that you first get your personal and financial issues in order, then consider your options. If you still want to get a developer job at that point, try to get a degree part time (degrees offer stability in the long run) or start with the Odin Project as Linooney said."
cscareerquestions,3e1a6y,Omega_927,4,Tue Jul 21 04:41:27 2015 UTC,"Is it going to cost anymore or take anymore time to complete? If so, then don't bother. There is enough overlap that it isn't going to make much difference from a job prospects perspective. You'd be better off choosing one and building skills related to the other."
cscareerquestions,3e175f,rvbmrdonut,3,Tue Jul 21 04:11:56 2015 UTC,http://cjqed.com/blog/do-you-own-side-projects-you-create-when-working-for-a-company/
cscareerquestions,3e175f,negative_epsilon,1 point,Tue Jul 21 04:13:51 2015 UTC,Thank you
cscareerquestions,3e15ru,XGSleepWalker,-1,Tue Jul 21 03:59:11 2015 UTC,The first step is to tell everyone you're European. You are already halfway there. The second step is to build a portfolio showing projects you have worked on with your time here on this Earth as a European.
cscareerquestions,3dywhg,bonesawceviche,5,Mon Jul 20 17:36:32 2015 UTC,"What career prospects do you want? Do you want to do R&D in computer science? Then yeah you'll need a degree.  Do you want to make websites and applications in high level languages like C# or Java?   In that case I wouldn't worry about the degree. Practice on your own time and in your own direction.  You say money is not an issue and maybe it's true you won't go into debt. But you will spend 16000 dollars on what may or may not improve your career prospects. That 16,000 would make a mighty fine downpayment on a house. Or on a nice reliable vehicle. Or some investment account to make even more money.  Money should always be a consideration in these talks because you will be spending a lot of it if you go back to school."
cscareerquestions,3dywhg,TheTaoOfBill,3,Mon Jul 20 18:01:57 2015 UTC,"Thank you very much for taking the time to respond to this post.  What I want to do is work at a big tech company for a few years, and then branch off and work doing software development for a smaller firm, eventually starting a software dev company of my own. I have over $100,000 at the moment, so I am not worried about going into debt from these ~2 years of schooling. Do you have any further knowledge on other kinds of doors that would open from a CS degree besides doing research? My father is a very well known trader, and wants me to get into high frequency trading. I'm interested in this as well, so if you have any personal information on HFT, that would be appreciated as well!"
cscareerquestions,3dywhg,TheTaoOfBill,3,Mon Jul 20 18:12:52 2015 UTC,A CS degree will always look nice. No company ever takes a CS degree at face value. They're always going to try to answer the big question. Can you program at the level I need you to program at?   There will definitely be companies that won't even bother with you without a degree. But there are far more companies that will at least give you a chance to show your sample code and let you prove you can hang out with the CS graduates.   You have the added benefit of having a degree. So you are a step above people who didn't go to college at all.
cscareerquestions,3dywhg,TheTaoOfBill,3,Mon Jul 20 18:32:09 2015 UTC,"There will definitely be companies that won't even bother with you without a degree. But there are far more companies that will at least give you a chance to show your sample code and let you prove you can hang out with the CS graduates.   Ok, thanks for the advice. I'll take all of this into account. I really do appreciate this. If you don't mind my asking, what do you currently do for a living? And also, do you enjoy it?  Thanks again."
cscareerquestions,3dywhg,soulslicer0,2,Mon Jul 20 18:34:53 2015 UTC,I'm a software engineer. Currently I work on WinForms and Asp.Net applications. I enjoy it more than other jobs that's for sure. It's still a job though and can get pretty boring working on forms all day long.  I recently got a new job offer that I start in August and that'll be working on physics based training simulators for the military. That sounds a whole lot more interesting than webforms so I'm pretty stoked.
cscareerquestions,3dywhg,Soreasan,1 point,Mon Jul 20 18:45:31 2015 UTC,"That is awesome. You're right, that does sound infinitely cooler... Although I admit I don't know much about either at this point. Thanks for the advice, and good luck to you!"
cscareerquestions,3dywhg,Soreasan,5,Mon Jul 20 19:01:07 2015 UTC,Do it. I couldn't start my degree until I was 22 due to conscription among other things
cscareerquestions,3dywhg,KyleBumpus,2,Mon Jul 20 18:32:51 2015 UTC,"Thanks for the support, I'm pretty positive that I will do it. How old are you now? Graduated yet?"
cscareerquestions,3dywhg,KyleBumpus,1 point,Mon Jul 20 18:35:21 2015 UTC,I also didn't get to start my CS degree until I was 22 and honestly due to financial constraints I couldn't really attend full-time until I turned 24 (FAFSA stuff) and when I graduate I'll be 27.  Getting a late start isn't ideal but it's been better than doing nothing.
cscareerquestions,3dywhg,ehead,1 point,Mon Jul 20 19:02:05 2015 UTC,"Ok, I agree with you. Definitely better than nothing... and who knows, with a CS degree, anything is possible."
cscareerquestions,3dywhg,Arrch,3,Mon Jul 20 19:19:27 2015 UTC,"If nothing else a CS degree will make it infinitely easier to get past Human Resource Departments.  Additionally there are a lot of topics you learn in a CS program that are harder to become self-taught at such as data structures, algorithms, and parts of Operating Systems.    Also here's a YouTube video that talks about why you should major in Computer Science although not every point will apply to you since you already have a degree. https://m.youtube.com/watch?v=p53N8GTAy2o"
cscareerquestions,3e0wwv,BostonHokie,5,Tue Jul 21 02:41:33 2015 UTC,"I feel like a large part of it is that the people who are finding jobs don't really have many pressing CS career questions. :)  I think there's also kind of an expectation for part of this sub too that expect a big 4 job or nothing. Big 4 interviews are notoriously difficult but most places aren't anywhere near like that.  Other than that, it can really just vary greatly by university, location, and technical talent, interview skills etc"
cscareerquestions,3e0wwv,cscareerqs,3,Tue Jul 21 02:53:46 2015 UTC,"I've been reading this subreddit since I began my freshman year last August, and it seems like people are constantly talking about how many jobs they are applying for and how hard it is to get an offer.   That's because the people who are problems finding the jobs are much MUCH more likely to post here obviously. Why would someone who had no issue finding a job just post here ""Hey guys, I got 3 offers and signed the best one""? He'd probably be downvoted for 'bragging'."
cscareerquestions,3e0wwv,nutrecht,1 point,Tue Jul 21 05:35:43 2015 UTC,"Being a Hokie means you get the benefit of the CSRC, which is basically cheating :)"
cscareerquestions,3e0wwv,pitibow,1 point,Tue Jul 21 03:56:15 2015 UTC,Do you think it's worth applying to a CRC place to work during the school year?
cscareerquestions,3e0wwv,foxlisk,1 point,Tue Jul 21 13:36:54 2015 UTC,"Hello! Fellow Hokie developer. Dunno if I can be any real help, but feel free to PM me."
cscareerquestions,3e0wwv,heiland,0,Tue Jul 21 05:38:40 2015 UTC,"I suppose it depends on what kind of job you're trying to get, and where you're trying to get it at. I live in Ohio and searched for an internship that I could do over the summer. I was looking from January to May and only found a handful (15?) of jobs that I could drive to each day and not be loosing money from the commute. I applied to all of them and only 3 even bothered to tell me that they had received my application. In the end none of them ended up hiring me and I'm not working in the IT department at my University, only because I knew the head."
cscareerquestions,3dxzsk,jobjobny,2,Mon Jul 20 13:33:42 2015 UTC,"I made a similar move about 7 years ago. I'm willing to talk, but I have fairly limited in person availability, my wife just had a baby."
cscareerquestions,3dxzsk,jbetten,1 point,Mon Jul 20 18:01:06 2015 UTC,"If you are in the area, we can meet, but also of course we can just email, if so, PM your email. Thanks a lot"
cscareerquestions,3e0q13,bigduck420,1 point,Tue Jul 21 01:45:14 2015 UTC,Yes.
cscareerquestions,3e0q13,Call_Me_Salamander,0,Tue Jul 21 02:02:01 2015 UTC,"so they're not strict with that requirement? Because it is a requirement, after all"
cscareerquestions,3e0q13,Call_Me_Salamander,1 point,Tue Jul 21 02:05:13 2015 UTC,"Not at all. I know several non STEM majors who are engineers at Google. My dad's friend studied Linguistics and Philosophy at a state school in the midwest and he is a senior software engineer at Google. They care a lot about how well you do in their technical interview, as well as your past work experience."
cscareerquestions,3e1c0a,kevinmarenger,4,Tue Jul 21 04:59:42 2015 UTC,"1) It's not true, it can be much cheaper for indie developer. For prices look site. 2) ASP.NET is multiplatform now and works on Linux and MacOS. Also Azure is in demand today and it works in cloud, so you don't care. 3) Node.js is already here, but as usual some guys are overreacting. Node.js is nice instrument, but given flaws of Javascript and simplicity of Node.js it can't be easily used for big projects like C#. Node.js is very good for prototyping and for some microservices. Also not all programmers do like javascript(I personally do no like it). 4) .net framework is a free platform, your main expense is developers, I don't believe that ruby or java developers are cheaper so in general I don't believe that C# is more expensive than ruby or java development. And yes, C# is used by big companies(as Java), but it is used in indie development as well.   Also there is multi platform game engine Unity3d, which is free and very nice. Inside it is using Mono + C#. You can create different games in it, from simple 2D scrollers to big 3D games with nice graphics.   So I don't believe that C# becoming obsolete given resent Microsoft strategy making it fully multi platform."
cscareerquestions,3e1c0a,Kilgort,4,Tue Jul 21 05:24:26 2015 UTC,2) ASP.NET is multiplatform now and works on Linux and MacOS.   It *will work. It does not yet (not officially). RTM is expected for Q1 2016.
cscareerquestions,3e1c0a,AngularBeginner,2,Tue Jul 21 06:35:34 2015 UTC,"Yeah, it is in beta right now, but I've tried it on my MacOS and it actually works, but tools is not there yet. Hopefully they will make Visual Studio Code better till 2016"
cscareerquestions,3e1c0a,Kilgort,1 point,Tue Jul 21 06:46:04 2015 UTC,"Could I get feedback for lycheeJS from you? Would be nice to get some dev feedback, it's currently in some kind of beta state until the editor is ready - but it tries to solve all issues with the javascript compiler toolchains and it's a standalone package without any dependencies and shipping all required runtimes as binaries for porting your DOM-free applications to SDL/OpenGL and HTML5."
cscareerquestions,3e1c0a,rainbowlazerunicorn,2,Tue Jul 21 16:30:17 2015 UTC,I second hating JavaScript.
cscareerquestions,3e1c0a,lphomiej,2,Tue Jul 21 05:38:31 2015 UTC,"Answering from my personal experience only:  2) Windows isn't ""losing"" market share in mobile; Microsoft has never had any. I don't see .NET disappearing from the server room any time soon as a result.  3) The guy who used to say that at our shop got laughed at a lot and then got canned for unrelated nonsense. You can do everything with any language. That doesn't mean you should.  4) Software licenses can be expensive when you're on a shoestring budget. However, I work for a startup, and we have yet to actually pay for any of our software licenses. The bizspark program is pretty nice like that. For larger companies, I don't imagine there is a huge difference (support begins to eclipse licensing as a cost, right?), but I have no experience with that.  Having said all that, knowing just one language/platform/friend to bail you out of jail is probably a bad plan for a zillion reasons besides this one."
cscareerquestions,3e1c0a,savage884,3,Tue Jul 21 05:30:40 2015 UTC,"This is actually a funny and pretty important question. A lot of people see Microsoft open sourcing large parts of the C# stack as a sign that the .Net framework is on the right track. I personally see it as a sign that they realized they screwed up big time and are now trying to correct their mistakes.   In my opinion as a dev who did a lot of programming in both C# and Java, of the two C# is the 'nicer' language but Java has the 'nicer' community by a long shot. The Java open source ecosystem is huge and releasing generic libraries 'for free' is more or less the defacto standard. The C# ecosystem is no where near as open, people don't share stuff, and as such they are way behind. Heck, C# on the back-end is falling behind JavaScript on the back-end even, go figure. That just proves the better language doesn't always result in the better ecosystem.   A good overview of popularity on github for example: http://githut.info/  Obviously the amount of repo's doesn't 'prove' anything but it is a good indication of the popularity of a programming language in the open source world and that popularity is a good indication of how well it'll do in the future."
cscareerquestions,3e1c0a,nutrecht,1 point,Tue Jul 21 05:31:18 2015 UTC,"If Linux is really a true first class citizen for Microsoft going forward for .NET, the open source community will come around.   You're right, right now though."
cscareerquestions,3e1c0a,negative_epsilon,1 point,Tue Jul 21 11:56:47 2015 UTC,"If Linux is really a true first class citizen for Microsoft going forward for .NET, the open source community will come around.   Why would they ""come around""? That ship has passed. Why on earth would any company that can actually make a tech switch opt for C#? What would the benefit be over all the other tech stacks?"
cscareerquestions,3e1c0a,nutrecht,1 point,Tue Jul 21 13:20:23 2015 UTC,"I work for a company that is all about Microsoft technologies. SharePoint, (shutter) Silverlight apps, and Web Forms sites are normal. However, they're just progressing into MVC and other cool stuff. C# is great! Not to mention you can learn 'em both and decide for yourself (or use both!). I personally make WPF apps in C# all the time - it is so fun and easy."
cscareerquestions,3e1c0a,lphomiej,3,Tue Jul 21 05:42:52 2015 UTC,shutter shudder   FTFY
cscareerquestions,3e1c0a,PM_ME_UR_OBSIDIAN,1 point,Tue Jul 21 06:05:36 2015 UTC,"I had a long response typed out, but it really just boils down to: no, C# and the .NET platform are not dying or become obsolete. C# is still widely in use and being adopted. F# is being adopted, too. .NET is becoming more and more open-source, gaining the approval of a lot of members of the tech community. Microsoft's stack and tooling (like Visual Studio) are very good and robust.  While it is true that working in Windows can be more expensive than open-source alternatives, there are plenty of discounts and breaks for indie developers, start-ups, and small companies.   People will always have language and stack preferences. Java has been around for a long time and will continue to be around for a long time. C# will be, too. Ruby will be there. Node.js will find a place, etc.   The main point to take away, I would say, is that learning C# is not going to be a detriment to you. There are plenty of good skills to learn there, and a good developer can easily transition between stacks and languages."
cscareerquestions,3e1c0a,Himekat,-4,Tue Jul 21 13:48:41 2015 UTC,"Java is the dying platform,  banks use it because they don't want to upgrade and it's cheaper to keep limping along old applications.  The language you choose will have less effect on cost ad much as the platform you choose to develop for.  C# can be programmed in notepad.  Microsoft announced that .Net is going open source for all platforms including OSX and Linux.  If you are looking solely for mobile then there are several other languages suited for mobile but most business and standard programs (which are not going anywhere for a long time) use C#.  While C in general has been around for a while in various forms,  C# is actually a relative newcomer.  Edit: Felt like I needed to add this here as my original retraction got burried in the replies. I misspoke in making the comment that Java is dying. I was wrong in my thinking and want to own that."
cscareerquestions,3e1c0a,whitecatwandering,4,Tue Jul 21 05:23:37 2015 UTC,"It is not true that Java is dying. Android is still there and growing, you can't forget about that. And android apps is written by anyone.   Also JVM is pretty nice platform which have such nice languages as Scala, Clojure, Ceylon and Kotlin."
cscareerquestions,3e1c0a,Kilgort,1 point,Tue Jul 21 05:26:12 2015 UTC,Why Java is dying ?  can oracle hurt Java ?
cscareerquestions,3e1c0a,nutrecht,2,Tue Jul 21 05:42:44 2015 UTC,"Why Java is dying ?   It's not, it's bullshit from someone who obviously has no actual experience in the enterprise world. Java is much bigger than C# and is currently only growing. The Java OS ecosystem is loads bigger than that of C#, mainly thanks to Microsoft never having been a big fan of 'open source' up until recently."
cscareerquestions,3e1c0a,nutrecht,3,Tue Jul 21 06:17:28 2015 UTC,Java is the dying platform   Yeah. Bullshit.
cscareerquestions,3e1c0a,whitecatwandering,1 point,Tue Jul 21 06:15:28 2015 UTC,"Your right, my bad. I jumped the gun on the Java comment.  Had a bit of a brain fart."
cscareerquestions,3e1c0a,ajd187,1 point,Tue Jul 21 06:48:02 2015 UTC,"Thanks. I'm going to go tell that to the massive Java project I'm working on that's part of a couple million like Java product. Along with the other product that's being rewritten in Java from COBOL.    Sorry Mr business some guy on reddit said that Java is a dying platform, gotta redo all this"
cscareerquestions,3e0lb8,WizardofRockies,2,Tue Jul 21 01:06:22 2015 UTC,"I think your CS degree matters less and less the further into your career you are as your job experience is a better proxy for how good you are. With that said, a CS degree does affect your likelihood of getting a good first job. And your first job can be pretty crucial in affecting the quality/types of jobs you can take.  For your second point, I do think there's a lot of value in having a specialty as part of your degree IF you know what specific field you want to go into. There's definitely a majority of engineering jobs where a general CS degree does just fine. However, it'd be very difficult to move from something like web dev to something with heavy data science or embedded programming or something without education to back it up."
cscareerquestions,3e0lb8,cscareerqs,1 point,Tue Jul 21 01:36:25 2015 UTC,Thanks cs! Do you think it is possible to use internships as an alternative route to a degree for getting a good first job?
cscareerquestions,3e0lb8,fullofschmidt,1 point,Tue Jul 21 03:23:43 2015 UTC,"I agree that your degree becomes less important as your career ages, but it may still open up opportunities that would be otherwise unavailable. At the company where I work, we essentially have SE I through SE VI, and anything past SE III requires at least a master's degree. I'm also not sure we'd even consider a candidate without a relevant bachelor's degree for SE I-III. This will obviously vary from company to company, and you can argue the validity of these practices, but there are plenty of similar companies out there. Just something to consider."
cscareerquestions,3e0lb8,fullofschmidt,1 point,Tue Jul 21 03:24:12 2015 UTC,Thats good to know. Thanks! I'm guessing you work at a larger company?
cscareerquestions,3e0lb8,catastrophe,1 point,Tue Jul 21 14:18:58 2015 UTC,"Yeah, we have about 20k employees. You'll tend to see more of the corporate requirements at larger companies."
cscareerquestions,3e0gpl,ToddMcNab,9,Tue Jul 21 00:28:39 2015 UTC,"I think they are a shameless attempt to separate suckers from tens of thousands of their hard earned money, trying to sell them the promise of a high-paying job with minimal time and moderate effort.   Talking to someone from a ""boot camp"" is like talking to a parrot who has memorized a set of buzz words and can scratch out a couple IF statements. The fundamentals aren't there.   I don't see how flooding the market with sub-par candidates is at all a good thing. This is why we filter for CS degrees. It doesn't prove you are a great developer, but it does show you can stick with something for years and see it through. In my eyes a CS degree is a 15 week boot camp that happens twice a year for 4-5 years. Someone comes out of ""Joe-Blow's Ultra Hip Code Ninja Academy"" with just one semester's time worth of work, and no CS/math fundamentals, and no internships. So it's one boot camp vs. 8-10 plus internship work. Why would any hiring manager pick the boot camper? The only reason is if you have a bias against CS degrees (and there are a lot of people that do)."
cscareerquestions,3e0gpl,RailsIsAGhetto,3,Tue Jul 21 01:16:06 2015 UTC,"So many of them are boasting 90-100% hiring rate after graduation, which seems obviously bogus. Unfortunately most of them in my area are so new, like 2-3 years old at the most, that it's hard to find any information on them. I feel like if you went through one after completing a significant amount of self study in a particular language, you could maybe land an internship which you could then use to at least have a chance at proving your worth. But like you said up against someone with a CS degree it's a lot weaker."
cscareerquestions,3e0gpl,cscareerqs,1 point,Tue Jul 21 13:46:15 2015 UTC,"I think I'm ok with bootcamps if they didn't attempt to position themselves as direct competition against traditional jobs CS students get.  There are jobs that would fit the things taught by bootcamps fairly well. Like CRUD app type of web development jobs and things like that. The problem is that some people go into bootcamps thinking they can have the same trajectory as someone who has a degree and internship experience. They don't realize that there's a pretty significant ceiling on the things they can do just with the stuff they learn in bootcamp. If they're still fine knowing that information, then more power to them."
cscareerquestions,3e0gpl,NotARandomNumber,4,Tue Jul 21 02:10:43 2015 UTC,"Please search, this gets asked like once a week almost.   See the results here"
cscareerquestions,3e0gpl,NotARandomNumber,0,Tue Jul 21 00:31:24 2015 UTC,once a week? most of these results are 3 months to a year old?
cscareerquestions,3duwvc,maddenallday,38,Sun Jul 19 18:40:33 2015 UTC,Wat ICSE 2015 Keynote Perfectly executing the wrong plan Clean Architecture Birth and Death of Javascript
cscareerquestions,3duwvc,sleepybychoice,14,Sun Jul 19 19:51:57 2015 UTC,wat was going to be a choice of mine as well.  One of my favorite CodeMash lightning talks ever.  Jon Skeet's abuse of C# session at CodeMash was also hilarious.
cscareerquestions,3duwvc,william_fontaine,5,Sun Jul 19 22:59:35 2015 UTC,Jon Skeet's abuse of C# session at CodeMash was also hilarious.   That sounds amazing! I tried searching youtube but couldn't find it. Got a link?
cscareerquestions,3duwvc,sleepybychoice,3,Sun Jul 19 23:08:39 2015 UTC,"Unfortunately I don't think anyone recorded it, it was just a normal Thursday/Friday hour-long session instead of a lightning talk."
cscareerquestions,3duwvc,william_fontaine,3,Sun Jul 19 23:16:45 2015 UTC,Very few codemash talks get recorded :(
cscareerquestions,3duwvc,carols10cents,3,Sun Jul 19 23:28:34 2015 UTC,"Here's one I found. Not the one I've seen before, but still has some good moments in it: https://vimeo.com/68320506"
cscareerquestions,3duwvc,FizixMan,1 point,Mon Jul 20 01:10:17 2015 UTC,"Awesome! Thanks, bro!"
cscareerquestions,3duwvc,sleepybychoice,3,Mon Jul 20 01:14:02 2015 UTC,"just finished ""perfectly executing the wrong plan"". Great talk!"
cscareerquestions,3duwvc,the_original_cliche,2,Sun Jul 19 20:53:50 2015 UTC,The first thing that came to mind was the wat talk. Glad to see I'm not the only one.
cscareerquestions,3duwvc,aWiaWiaWi,1 point,Mon Jul 20 02:10:48 2015 UTC,https://www.youtube.com/watch?v=8To-6VIJZRE  Truly inspirational
cscareerquestions,3duwvc,bekroogle,1 point,Mon Jul 20 09:59:49 2015 UTC,"So far, Perfectly executing the wrong plan sounds like it could be interesting, but I'm having to play it 1.25x speed. I guess I could just go out for a cigarette during the silence between each slide instead."
cscareerquestions,3duwvc,owlsonhats,9,Mon Jul 20 17:20:25 2015 UTC,"You might find this interesting...http://confreaks.tv/videos/rubyconf2014-madam-sandi-tells-your-future  Not just about programming, but about something bigger than your self."
cscareerquestions,3duwvc,obscener,10,Sun Jul 19 19:52:17 2015 UTC,"Growing a Language, by Guy Steele (worked on Java and created Scheme)"
cscareerquestions,3duwvc,markerz,1 point,Sun Jul 19 20:32:56 2015 UTC,"Stewardship: the sobering parts by Brian Goetz is pretty good and fairly related to your talk.  He's a Java language architect and lead the project for lambdas, the Java REPL, value classes, and generic type reification.  In some ways, I see it as a sequel or an epilogue."
cscareerquestions,3duwvc,desertSniper87,7,Mon Jul 20 02:00:29 2015 UTC,r/ConTalks
cscareerquestions,3duwvc,ProfOak_,1 point,Sun Jul 19 21:36:14 2015 UTC,Thank you. I'm going to have a busy day tomorrow.
cscareerquestions,3duwvc,ngly,1 point,Mon Jul 20 08:03:33 2015 UTC,That subscribe button took me way too long to find on that subreddit.
cscareerquestions,3duwvc,vvf,5,Tue Jul 21 01:33:44 2015 UTC,The Myth of the Genius Programmer
cscareerquestions,3duwvc,Probono_Bonobo,4,Sun Jul 19 23:49:03 2015 UTC,Simple Made Easy by Rich Hickey The Future of Programming by Bret Victor We Don't Really Know How to Compute! by Gerald Sussman
cscareerquestions,3duwvc,siretu,3,Sun Jul 19 20:21:07 2015 UTC,"I really liked this talk from PyCon: https://www.youtube.com/watch?v=hIJdFxYlEKE It's touches upon impostor syndrome, which is very common in the industry."
cscareerquestions,3duwvc,razzmicberry,3,Sun Jul 19 22:41:29 2015 UTC,"No matter where you are in your training/career as a developer, you can gain something from this talk. I definitely recommend it!"
cscareerquestions,3duwvc,shad0w0bserver,4,Mon Jul 20 00:59:48 2015 UTC,"Here is a list of videos that I've watched them all over the past few years and I shared it here on some Quora answer question.  So here ya go you aspiring programmer, hopefully it enlightens the way :)!     How algorithms shape our world by Kevin Slavin(Some ,(most), software engineers forget how important Algorithms are) . Simplicity Ain't Easy -](https://www.youtube.com/watch?v=cidchWg74Y4) by Stuart Halloway The Myth of the Genius Programmer by Brian Fitzpatrick, Ben Collins-Sussman Keynote: Writing Software](https://www.youtube.com/watch?v=9LfmrkyP81M) by David Heinemeier Hansson The Essence of C++ by the one and only Bjarne Stroustrup Apple, Apache, Google, Oracle and the Future of Java by James Gosling Facebook and memcached - Tech Talk by Mark Zuckerberg How We've Scaled Dropbox by Kevin Modzelewski Twitter: Scaling Beyond 100 Million Users by John Adams Lessons of Scale at Facebook Dynamic Languages Wizards Series  (Freaking AWESOME panel: Paul Graham, John Maeda, Jonathan Rees, Guy Steele) NYC Tech Talk Series: How Google Backs Up the Internet . (meh)     Found most of the parts of these two:   Bjarne Stroustrup: Why I Created C++ Bjarne Stroustrup: Why the Programming Language C Is Obsolete Bjarne Stroustrup: A Unified Programming Language? Bjarne Stroustrup: How C++ Combats Global Warming Bjarne Stroustrup: The 5 Programming Languages You Need to Know Bjarne Stroustrup: Advice for C++ Developers Bjarne Stroustrup: How to Code Like Bjarne Stroustrup      Larry Wall: How to Code Like Larry Wall Larry Wall: Computer Programming in 5 Minutes Larry Wall: 5 Programming Languages Everyone Should Know Larry Wall: Why Perl Is Like a Human Language Hobbits Would Make Great Programmers Apple Tries to Be the Arbiter of Good Taste     Update:  Referencing another answer:  This is interesting as well, Kartik Ayyar's answer nails it:  What are some must-see Google Tech Talks?    Update: Jan 16   An overview of HTTP/2 by Daniel Sommermann (Author of Proxygen) Awsome talks form the Wiz => Jeremy Edberg  about: Scalable Cloud Architectures   Airbnb have got awesome Talks.  Tech Talks at Airbnb   Challenges Chances In Polyglot Programming  by Stefan Tilkov Adventures in Functional Programming by Jim Weirich How To Design A Good API and Why it Matters](https://www.youtube.com/watch?v=aAb7hSCtvGw)"
cscareerquestions,3duwvc,shad0w0bserver,1 point,Mon Jul 20 06:07:22 2015 UTC,wow what an awesome list. I'm gonna be busy this weekend
cscareerquestions,3duwvc,True-Creek,1 point,Mon Jul 20 23:06:50 2015 UTC,"Haha, for sure :)!  I can append rest of the ones I've watched, but honestly these top it out for me."
cscareerquestions,3duwvc,carols10cents,2,Mon Jul 20 23:27:15 2015 UTC,"Alan Key: Is it really ""Complex""? Or did we just make it ""Complicated""?"
cscareerquestions,3duwvc,carols10cents,2,Sun Jul 19 21:05:30 2015 UTC,Russ Olsen's closing keynote at Keep Ruby Weird. 50 in 50 by Guy Steele and Richard Gabriel (might be better if high).
cscareerquestions,3duwvc,Mentioned_Videos,2,Sun Jul 19 23:27:59 2015 UTC,Ooh thought of another: Glenn Vanderburg on Real Software Engineering.
cscareerquestions,3duwvc,cygn,1 point,Sun Jul 19 23:35:49 2015 UTC,"Videos in this thread: Watch Playlist ▶    VIDEO VOTES - COMMENT    (1) Wat by Gary Bernhardt [with Captions] (2) ICSE 2015 - Grady Booch Keynote (3) Google I/O 2014 - Perfectly executing the wrong plan (4) Robert C Martin - Clean Architecture 34 -  Wat ICSE 2015 Keynote Perfectly executing the wrong plan Clean Architecture Birth and Death of Javascript   Growing a Language, by Guy Steele 7 - Growing a Language, by Guy Steele (worked on Java and created Scheme)   Google I/O 2009 - The Myth of the Genius Programmer 5 - The Myth of the Genius Programmer   Bret Victor   The Future of Programming 4 -  Simple Made Easy by Rich Hickey The Future of Programming by Bret Victor We Don't Really Know How to Compute! by Gerald Sussman   Jon Skeet: Abusing C# 3 - Here's one I found. Not the one I've seen before, but still has some good moments in it:   Keynote - Jacob Kaplan-Moss - Pycon 2015 3 - I really liked this talk from PyCon:  It's touches upon impostor syndrome, which is very common in the industry.   (1) Simplicity Ain't Easy - Stuart Halloway (2) RailsConf 2014 - Keynote: Writing Software by David Heinemeier Hansson (3) Bjarne Stroustrup - The Essence of C++ (4) James Gosling on Apple, Apache, Google, Oracle and the Future of Java (5) Facebook and memcached - Tech Talk (6) How We've Scaled Dropbox (7) Operations at Twitter: Scaling Beyond 100 Million Users (8) Lessons of Scale at Facebook (9) Dynamic Languages Wizards Series - Panel on Language Design (10) NYC Tech Talk Series: How Google Backs Up the Internet (11) Bjarne Stroustrup: Why I Created C++ (12) Bjarne Stroustrup: Why the Programming Language C Is Obsolete (13) Bjarne Stroustrup: A Unified Programming Language? (14) Bjarne Stroustrup: How C++ Combats Global Warming (15) Bjarne Stroustrup: The 5 Programming Languages You Need to Know (16) Bjarne Stroustrup: Advice for C++ Developers (17) Bjarne Stroustrup: How to Code Like Bjarne Stroustrup (18) Larry Wall: How to Code Like Larry Wall (19) Larry Wall: Computer Programming in 5 Minutes (20) Larry Wall: 5 Programming Languages Everyone Should Know (21) Larry Wall: Why Perl Is Like a Human Language (22) Hobbits Would Make Great Programmers (23) Apple Tries to Be the Arbiter of Good Taste (24) An overview of HTTP/2 with Daniel Sommermann (Sourcegraph Hacker Meetup) (25) Airbnb Tech Talk: Jeremy Edberg - Scalable Cloud Architectures (26) Challenges Chances In Polyglot Programming - Stefan Tilkov (27) How To Design A Good API and Why it Matters (28) Jim Weirich: Adventures in Functional Programming 2 - Here is a list of videos that I've watched them all over the past few years and I shared it here on some Quora answer question.  So here ya go you aspiring programmer, hopefully it enlightens the way :)!     How algorithms shape our world by ...   YOW! 2010 50 in 50 Keynote Guy Steele and Richard Gabriel 2 - Russ Olsen's closing keynote at Keep Ruby Weird. 50 in 50 by Guy Steele and Richard Gabriel (might be better if high).   Is it really ""Complex""? Or did we just make it ""Complicated""? 2 - Alan Key: Is it really ""Complex""? Or did we just make it ""Complicated""?   Brian Goetz - Stewardship: the Sobering Parts 1 - Stewardship: the sobering parts by Brian Goetz is pretty good and fairly related to your talk.  He's a Java language architect and lead the project for lambdas, the Java REPL, value classes, and generic type reification.  In some ways, I see ...   Steve Ballmer - Developers 1 -   Truly inspirational    I'm a bot working hard to help Redditors find related videos to watch.    Info | Chrome Extension"
cscareerquestions,3duwvc,mangekyou7,1 point,Mon Jul 20 10:02:36 2015 UTC,good compilation of talks: https://github.com/JanVanRyswyck/awesome-talks  I enjoyed the spotify engineering culture one.
cscareerquestions,3e0dcg,worldsarmy,1 point,Tue Jul 21 00:01:26 2015 UTC,"Yep.  After 20 years as a carpenter, I went to local community college and got Associates in CS.  Was hired a month before I graduated as a software tester.  Six months later I was a full time app developer, and I've been employed full time ever since.  So go for it."
cscareerquestions,3e0dcg,PhatKiwi,1 point,Tue Jul 21 01:22:20 2015 UTC,"Wow, that's great. Thank you. Did you have previous experience on the coding side?"
cscareerquestions,3dwukf,throwaway23492840293,28,Mon Jul 20 04:57:50 2015 UTC,"It really doesn't mean much.  It means you would own 1% of the shares of the company.  The reason it doesn't mean much is...  -There could be (and likely is) a shareholder agreement that would restrict who you could sell the shares to (i.e. you may be required to sell them back to the company before anyone else)  -They may not actually vest for some time or until some milestone.  I.e. it could be a promise to give you shares if ""X"" happens (where X could be they go public, or get investment, or reach $100MM in revenue).  -Your shares are only worth whatever you can sell them for.  Even if you are free to sell them... it doesn't mean you will or could find a buyer.  -They can (and likely would) issue more shares in the future, which dilutes you.  So if they have 1 million shares today and are offering you 10,000 shares (1%), they could issue 99 million more shares a year from now and now you own 0.01% of the company.    -There can be different kinds of shares.  You may be getting offered a class of share with no voting rights, or with limited dividend rights.  So just because you ""own"" 1% of the company, if the company earns $100 million, it doesn't mean you are getting $1 million.  There are many many more reasons and things to consider as well, but the above are some of them.  In short, it's not a bad thing that they are offering you shares necessarily, but you should very carefully consider your best estimate on the future value of those shares if you are thinking of accepting them in leui of salary.  In other words, if you would normally earn $100k a year but are going to accept $75k a year... and you estimate the shares will be valuable in 5 years, it means you are giving up $125k in salary for those shares.  That is the value you are placing on them today.  It's extremely high risk and venture capitalists in this situation are usually looking for 10 to 20 times their money back or more, so a good starting place might be... do you think the value of those shares will hit $1.25 to $2.5 million over those 5 years?"
cscareerquestions,3dwukf,Corporate666,9,Mon Jul 20 05:15:41 2015 UTC,"Good overview but missing one important detail. That 1% almost certainly is not an outright equity grant, it's what are called options. And option is the privilege to purchase X amount of shares at Z dollars per share. This lets employees plan their tax cost more easily, as you typically exercise (buy the shares from the company) at the same time you sell (for more than the Z dollars per share that your option is at) and pay the taxes out of the profit. It also lets you walk away if the company isn't doing well, without the administrative and tax burden of owning equity in a failing company.   In general, equity as an engineer in an early stage startup will not be life changing. Even if the company does extremely well, your equity will be diluted by fundraising and when the company sells or goes public, it'll be more like a big bonus. So, as someone who works in these kind of jobs, I prefer salary to equity. The equity is a nice ""what if"" but I don't think about it much."
cscareerquestions,3dwukf,thenmar,1 point,Mon Jul 20 13:09:01 2015 UTC,"Good overview but missing one important detail.   My second bullet point was about options, but I didn't spell it out clearly - thanks for the reinforcement of that important point.    The OP should keep in mind that options can also potentially be rescinded either based on policy or contract, or just based on change of heart if they are not granted in a set-in-stone manner.    As with any negotiation, the person offering the deal is offering something that is to their benefit.  If they were certain the shares were going to be worth more than the salary, they would rather keep the shares and pay the salary.  The only time that would not be the case is either if the OP is so critical that they want to dangle a huge carrot in front of him/her, or they are short on cash and are ""financing"" salary through equity instead - something to consider."
cscareerquestions,3dwukf,Corporate666,3,Mon Jul 20 16:56:51 2015 UTC,"They can (and likely would) issue more shares in the future, which dilutes you. So if they have 1 million shares today and are offering you 10,000 shares (1%), they could issue 99 million more shares a year from now and now you own 0.01% of the company.   I always try to clear up dilution a little bit because people get unnecessarily scared/upset by it.    While it's true that raising more money will mean you have a smaller percentage of the company the value of your equity does not actually go down.  This is because the company is instantly worth more now that they have all the cash they raised.  For example, let's say you have 10% of a company that's worth $1mm making your share worth $100,000.  Now the company raises another $1mm.  With the existing $1mm company plus the new $1mm in cash the company is now worth $2mm.  So, for that $1mm the new investors get 50% of the company (they contributed 50% of the worth of the combined company).  So all current shareholders get diluted by 50%.  This means you how have 5% of a $2mm company which works out to the same $100,000!    And in fact, with an extra million in the bank, the company is likely worth MORE than $2mm because of the additional operational flexibility that all that cash would get you.  In addition to all of this you have another protection as well.  The board must act in the best interest of shareholders.  Screwing over the existing shareholders by having some crazy dilution event where everyone loses a ton of value would be a violation of this responsibility.   Some of the investors might have anti-dilution protection but the founders are going to have the same shares as regular employees and they would have no incentive to fuck themselves over either by intentionally taking a bad deal.  The way that dilution hurts people is when they are projecting out into the future.  You get a job at a startup and are given 1% of the company.  You do the math of ""ok, let's say we grow to be a billion dollar company, my share will be worth .01 * 1,000,000,000 which is 10,000,000"".  In reality there will probably be some dilution on the way and you might only have 0.1% of the company by the time there's a liquidity event.   You didn't ever lose any actual value, you just dreamt too big."
cscareerquestions,3dwukf,OHotDawnThisIsMyJawn,1 point,Mon Jul 20 18:29:07 2015 UTC,"I think your example is a little simplistic, based on what little I understand of the process:  Money invested INTO a company isn't likely to STAY a part of the company's value. Typically companies are funded because they need more money to spend on growth initiatives, not because they are trying to pad their net worth. If a company you work for dilutes your shares by 50% for five million dollars which they then proceed blow on advertising and rockstar managers and don't get a return on that investment, you're S.O.L. The dollar value of your shares isn't tied to how much money has been put INTO the company, it's tied to how much money future investors will think can be taken OUT.  Secondly, dilution and investment are not necessarily tied. The company can issue a fuckton of new shares for new employees or for new board members (neither of whom are giving the company a dime) and your shares are halved or quartered or whatever WITHOUT a commensurate increase in company value, leaving you high and dry."
cscareerquestions,3dwukf,zesty_zooplankton,0,Mon Jul 20 19:42:01 2015 UTC,"Well, allow me to disagree with you :)  (not in a combative way, but a discussion way).  It would not be normal for a VC to be buying a company at above market value.  If someone owns 10% of a company valued at $1MM, and they are seeking $2MM of investment - that is an investment that won't happen because the company isn't valuable enough to support it.  There are many ideas out there that just aren't financially feasible and a company that needs more than it's worth would be one result of embarking on such a venture.  Usually an investor will want to buy below market value - knowing that their investment will increase value.  But if the investment is funding operations or marketing or R&D or anything that doesn't have immediate and direct results, then that investment doesn't correlate to an immediate increase in value of that amount.  Also, keep in mind that dilution doesn't just happen because they are raising capital.  Let's say the company has 1 million shares and gives 10,000 to a developer.  Then they want to hire a few more developers, so they just issue 10,000 shares to each.  The pie hasn't grown in size, but the size of each slice has gotten smaller.  There are many ways in which a small shareholder can get diluted without much/any say in the matter and that can happen without management breaching their fiduciary duty to shareholders - for example giving an ownership stake through issuance of shares to a marketing/PR firm, or a key supplier, etc.  And keep in mind that someone is always worth (only) what you can sell it for.  A company that is ""worth"" $100MM with 1MM outstanding shares doesn't mean each share is worth $100.  A share traded on the NYSE is infinitely more liquid than a share in a private company.  And there are likely to be strict rules on what one can do with that share.  And finally, if the company anticipates going public (which is a very very very long shot), the number of shares that exist don't necessarily have anything to do with how many shares will be issued in an IPO or what ownership will be.  The underwriting bank will take a (huge, potentially) cut of the issuance and the company may issue an order of magnitude more stock than it has going into the IPO."
cscareerquestions,3dwukf,Corporate666,10,Mon Jul 20 21:05:30 2015 UTC,"How big is this company? 1% is a huge amount, especially for somebody who isn't familiar with how equity works. I don't mean this as an attack against you - just something seems very strange here. What's the actual wording they gave you?"
cscareerquestions,3dwukf,pet0sh,9,Mon Jul 20 05:14:04 2015 UTC,"I used 1% to make calculations easy. We haven't discussed this yet, but the job ad said ""0.1 - 1%""."
cscareerquestions,3dwukf,curiouscat321,6,Mon Jul 20 05:32:19 2015 UTC,"Basically, a company is divided into shares. Those sharespl are given or sold to people in exchange for money.   You'll be receiving 1% of the shares of this company. You can sell them in two instances. First, the company goes public or is acquired. In this instance, somebody has dictated a price per share and will give you that price for every share you own. The second is that you resell the shares to the company for a certain price.   Investors dictate the current ""price"" by how much they invest in the company. Reselling shares to the company is rare for small startups.   Basically, you want to know the current price, vesting schedule, and (preferably) the company's cap table and liquidation terms. Expect serious issues getting those last two. Typically reserved for VCs only."
cscareerquestions,3dwukf,njtrafficsignshopper,1 point,Mon Jul 20 05:09:15 2015 UTC,"So just to make things clear, if a company receives (say) 1 million in series A funding the company itself is ""worth"" 1 million and my 1% is worth (roughly) 10k?   What if I don't know how much they received in funding? I can't find anything online and they're not on Crunchbase."
cscareerquestions,3dwukf,ajd187,4,Mon Jul 20 05:30:34 2015 UTC,"No - the company will be worth (or more accurately, valuated) at more than one million. The investors will say, we think your company is worth 5 million at this point, and we would like 20% ownership in the company - hence the 1 million in cash. So your 1% would be (don't get too excited) 1% of 5 million, or $50,000.  BUT it's not a very useful measure at that stage. You can't transfer it, you might not be fully vested, almost certainly there are going to be strings attached to your ownership of those shares, etc."
cscareerquestions,3dwukf,mingp,0,Mon Jul 20 06:13:11 2015 UTC,"Yes, that's what it means.  But it is really worth $0 to you.  It's essentially all fake money on paper unless the company goes public or gets acquired.    Most times this means that it ends up worthless sadly.  I had it happen once.  got some shares in a company, company ended up diluting the shares so much that mine were fractional and worthless.  But then another time I got options in a company at $2.16 a share in April.  In August, they annotuced a merger with an existing public company.  And when the options were vested the following April, the stock was now at $12/share.  Made a nice profit on that one!"
cscareerquestions,3dwukf,pet0sh,1 point,Mon Jul 20 14:06:48 2015 UTC,"What others have said is pretty accurate. I just want to add the following.  The percentage figure represents the current issued shares. The company can issue new shares on whatever terms it desires. As a very, very minority shareholder, you do not typically have a say in this.  ""To invest $X at a $Y valuation"" usually means ""to invest $X to receive a proportional amount of shares as if the total of shares were worth $Y"". This is a very, very different statement than, ""the company, if it were sold right now, would be worth $Y"". There are many reasons for valuation, and it's a complex matter, but generally, the company is not worth nearly as much as its valuation says.  Depending on the company, its investors, and their prior demands, there may be additional conditions regarding the company's stock. There are potentially multiple different types of stock, and some of them may have advantages in certain situations. The most common one is called ""liquidation preference"", which usually means, ""in the event of a sale, before anyone else receives anything, the preferred institutional investors receive the first up to $X amount of the sale"".  Your shares are still private and will remain private for likely the foreseeable future. Even if they had a hypothetical fair market value of $X, your actual ability to sell them for $X is highly dependent on many, many factors outside your control.  Are you getting shares or options? Shares have tax consequences on granting. Options have an associated strike price which you would eventually need to pay to exercise them, and so this would effectively come out of any returns you otherwise made.  Those factors may or may not influence the outcomes that your shares may encounter.  (Full disclosure: I'm currently an engineer at a mid-stage startup. I am not a professional financial advisor. The above is not financial advice, in the legal sense of the phrase. If you want that, you will probably need to pay a professional a consulting fee.)"
cscareerquestions,3dwukf,HeadspaceA10,1 point,Mon Jul 20 06:13:17 2015 UTC,"One other thing nobody seems to have mentioned: equity can mean many things, including rsus, stock options, phantom stock, etc. These are all majorly different - figure out what type of equity you are getting  and then read up on how it works."
cscareerquestions,3dwukf,lano1106,1 point,Mon Jul 20 06:24:34 2015 UTC,"It may mean something, on the other hand it may mean nothing.  If there is a clause in your shareholder agreement that says that the shares can be taken away for any reason, or no reason, or for that matter if you will lose the shares upon being fired (and you work in an at-will state) then the shares are not worth the paper that they're printed on, even if you're in possession of physical stock certificates. You can say you own X amount of the company all you want; and that would technically be true, but the owners could simply fire you and take them back at any time. This kind of thing is more common than you might think.  If you get offered equity in lieu of salary, the best thing to do would be to talk to an attorney specializing in this, to determine what that equity would really be worth. Sometimes it's worth absolutely nothing, and is just a ploy to get you to work for less than you're worth."
cscareerquestions,3dwukf,readams,2,Mon Jul 20 16:10:35 2015 UTC,"knowing the % that they are offering you is exactly what you want to know. What would have been meaningless is if they would have given you a number of options. Lets say a 1000. If they are 100,000 shares, it is good but if there is 10M shares, it is a drop in the ocean but you do not know it unless you know the % your options represent  I am assuming that the startup is a private company. That means that the value of your options is unknown until the company is sold or goes through an IPO. After that your options are worth: ((Sale price/# of shares) - strike price)*# of options  Basically, with the strike price of your option and the number of shares, you can calculate the worth of the company at which your options start to be worth something. Right with that information, you can figure out if the offer is realist or lunatic and worthless.  Second, I am assuming that you met with the CEO or someone from the executive board since it is usually them that discuss stock options.  A good question to ask them is according to them what is the value of the company in the future, lets say in 5 years. Then you listen and say nothing. No feedback to what they say, no head nodding, nothing. A real poker face and you just let them explain you their objective. What this will do, is that it will answer your question of what the options are worth and if the situation make them uncomfortable, they may even bonify it on the spot as they'll try to convince you. They want you and this is why they are offering you the options in the first place.  1% is generous considering that usually startups have 10% of their shares reserved for key staff retention.  Hey, I am planning to write a free report on that exact topic, if you would like to be notified when it is going to be available, just join my mailing list at: http://hackinglinkedinformula.com/free-job-description-advices-offer.html"
cscareerquestions,3dwukf,randomcod3r,2,Mon Jul 20 16:11:03 2015 UTC,"It's good that they told you the percentage instead of a number of shares, so at least you're ahead there.  But you need to know:   How many shares outstanding are there?  You want to know the number of ""fully-diluted"" outstanding shares.  This means the number of shares you'd have if all the option pools that have been allocated are fully distributed. At what stage of development is the company?  Have they raised a seed round, Series A round, etc?  How much money in total has been raised?  You need to evaluate how much additional money will be required in order to understand how much your stock will be diluted before all is said and done.  If they raise a new round, they might dilute your stock substantially.  Depending on how favorable the terms are, this could mean your stock is a smaller slice of a larger pie, or a smaller slice of a smaller pie.  If you join and they're just about to raise a new round, your stock will be diluted almost immediately, but you'll get a lower strike price on your options. What do the liquidation preferences look like?  When companies are sold, often the investors will have deals that mean they get their money back before other investors.  A common arrangement is called ""participating preferred"" which means the investors actually get paid twice (or more!). A good way to understand all this is to ask the founders to walk you through a scenario such as ""say the company is sold for $100 million 2 years from now.  Assume you need to raise a B round before then.  How much would these shares be worth under various assumptions?""  If the founders don't want to tell you this, RUN.  But most will be more than happy to do so and may be impressed by your sophistication. Remember also that it could be many years before these shares can be sold or worth anything.  You need to discount the value of the shares back to today's dollars.  Don't assume your shares are worth $2 million and then divide that by 4 and say wooo $500k a year!   This is overall a complex topic, so this just scratches the surface, but hopefully this gives you enough to get googling to learn more."
cscareerquestions,3dwukf,pedodleche,0,Tue Jul 21 00:18:36 2015 UTC,"Anyone able to point me to some good resources to learn more about stocks, and finance in general?"
cscareerquestions,3dwukf,c4t3rp1ll4r,2,Mon Jul 20 08:28:43 2015 UTC,r/finance and r/stocks ?
cscareerquestions,3dyxlk,braflis,2,Mon Jul 20 17:44:20 2015 UTC,"I don't see why you can't do both. If you view studying algorithmic stuff as if it was studying, you should be fine with saying ""I will solve one problem a day, 15 minutes"" kinda thing, just like sitting down for studying. If you can try and solve one a day Monday to Friday and get that to be part of your studying routine, you could get 200~ down by next summer and be more then prepared for the algorithmic questions.  Projects outside of school should not be ""studying"" in my eyes as a fellow student, cause then it's just another chore. They should be enjoyable hobbies and not clumped into that category. You can set aside 15 minutes a day (half of a TV episode, reading one less thread a day, etc) to doing the algorithmic stuff without hurting your hobbies."
cscareerquestions,3dy93u,relio2014,2,Mon Jul 20 14:49:30 2015 UTC,"What country are you in? If it's in the US:   Do you have have any work experience at all on your CV? If not, that's perfect! US employers can't ask your age or how long ago you graduated. Just tell them you're a graduate looking for your first job and remove all dates from your CV.  If you aren't in the US, I'm not sure what questions employers can legally ask in your country."
cscareerquestions,3dy93u,KyleBumpus,3,Mon Jul 20 19:16:18 2015 UTC,"You're not required to explicitly state when you graduated. Sell yourself as a graduate looking for his/her first job. If it comes up, tell them you had some medical issue that is now resolved."
cscareerquestions,3dy93u,odin673,1 point,Mon Jul 20 16:45:28 2015 UTC,"You are not required to explicitly state when you graduated, but I wouldn't intentionally mislead others either. Despite not actually speaking a non truth, you are still representing a non-truth. Therefore you would be lying still. I would just not focus on it. If asked don't lie, but try to steer the focus away.   That is my advice regarding any type of ""blemish"" you may identify. Your job as an interviewee is to accent your strengths. Explain, but deflect anything else that you feel might be a decrement. Try to avoid flat-out misrepresenting information though. If it is discovered that you are fabricating things even a little bit, it will look even worse than what you were trying to cover up."
cscareerquestions,3dy93u,IbanezDavy,1 point,Mon Jul 20 21:29:57 2015 UTC,"If he puts a 5 year gap on his resume, it will get tossed straight in the trash. Hiring managers are their for the benefit of their company. They avoid risks as much as possible."
cscareerquestions,3dy93u,odin673,1 point,Tue Jul 21 14:17:13 2015 UTC,"I was not taking issue with your first sentence. I was taking issue with your second sentence.    Sell yourself as a graduate looking for his/her first job.   If he presents himself as a college graduate and they check in on when he graduated and find it to be many years back, it will look far worse than having a 5 year gap. Not only will they notice the gap, they will also feel he wasn't honest with him. Now he'll have two marks against him, rather than one. Gaps aren't always unemployment related. Sometimes people were doing something else that is not relevant experience. Sometimes people go back to school. Sometimes its a combination of things.   I'm not going to lie to him. If there is a flood of resumes going into a place, it might get tossed in favor of something that is better on paper. But depending on the area and company this probably won't always be a problem. One thing he can do to remedy this a little bit is to work with a recruiter. They often times are in direct contact with the hiring manager. So it's a way around the typical HR problems of things being passed through silly filters."
cscareerquestions,3dy93u,IbanezDavy,1 point,Tue Jul 21 14:34:34 2015 UTC,Gap or no gap you should definitely have a few sample projects to show off your skills.
cscareerquestions,3dy93u,TheTaoOfBill,1 point,Mon Jul 20 18:14:38 2015 UTC,"Your confidence isn't going to do it for you. You need actual projects and work to point to, and to explain them in an impressive way. You say that you have kept your skills up, but haven't worked or done personal projects. How is that possible?"
cscareerquestions,3dy93u,SmartassRemarks,1 point,Mon Jul 20 22:51:07 2015 UTC,"I'm not going to lie to you.  That gap in your resume will be very concerning to employers and everyone is going to ask you about it if you get to the interview stage.  But the part that will be the hardest is that you'll not get many interviews since your resume will just be rejected off hand without an interview.  You also say that you have kept your skills up, but haven't worked on any projects.  How have you kept up your skills without doing any projects?  To overcome a barrier like this, by far the best way is to go through personal contacts.  Any software engineer at any company that you know personally can generally get you an interview, as this is considered a professional courtesy to screen any candidate recommended internally.  If you don't know anyone, you can try networking at meetups or industry events, or try working on open source projects.  If you have a good reputation in the open source community you can ping people in that community for job leads.  Here's another secret: don't be shy about networking.  Most people are more than happy to help you land a job if they can.  It makes you feel good about yourself if you can help someone out, and lots of companies have referral bonuses if you're hired."
cscareerquestions,3e09qs,CMannem,3,Mon Jul 20 23:31:49 2015 UTC,"If you get too far down that road you'll struggle to get back on track as a developer.  If you take that job for 6 months, a year, and then try to get into development, I don't think anybody'd hold it against you, but once you get a couple years of disconnect, it's going to make people question your career path choices, as well as how much knowledge you've lost in that time.  I doubt you'll move laterally into a development position at that company in such a short timespan.  I think it's OK to take that job but I would do it as a temporary solution to get some money, not as a career play."
cscareerquestions,3e09qs,dougan778,1 point,Tue Jul 21 00:16:26 2015 UTC,"A transition from QA to dev is possible, it depends on the company. Is there anyone there currently that has made such a switch? In my experience, it's difficult to make the switch whilst still staying on top of your QA duties.  I don't think it harms to have on the CV at all, but like /u/doughan778 says, it may go against you if you do it for too long.  My first job was in QA. I tried to transition to a developer within that company, but it wasn't happening fast enough, so I left and found a developer role somewhere else.  But saying that, it is automation engineering, not just manual QA so that's not so bad. Also, you say you are a university student as well as holding this job, how do you manage that?"
cscareerquestions,3e09qs,GelertJ,2,Tue Jul 21 06:16:03 2015 UTC,"In Canada we have have an internship program, where for ~1 year you intern at companies working in your field of study and then come back and finish your degree. For the first semester I interned as a software developer. This semester I have found an intern position as a test developer."
cscareerquestions,3e09qs,GelertJ,1 point,Tue Jul 21 13:56:57 2015 UTC,"Ah, I see - cheers. In the UK they're called ""sandwich degrees/years"" but you take a year out rather than a semester.  Well in that case, I don't think you've got anything to worry about. You've not started your career but are getting a breadth of experience across the software lifecycle. Seems good to me. And again, it's test automation, not manual QA."
cscareerquestions,3dyrch,Muramama,4,Mon Jul 20 17:01:01 2015 UTC,The job entails all of the normal duties along with a good amount of web development.   No. You did web development with some network adminning on the side ;)
cscareerquestions,3dyrch,nutrecht,1 point,Mon Jul 20 19:02:54 2015 UTC,"Will my system/network administrator job experience benefit me when applying for programming jobs?   More-so than a McJob, less so than a development internship.   Will my system/network job experience be valued less than it would be if I had a degree while working the same job?   Can't speak for every recruiter, but I wouldn't care."
cscareerquestions,3dyrch,Arrch,1 point,Mon Jul 20 17:56:49 2015 UTC,"If it's any help, I did check out my supervisor at my internship. He started as a network admin for 1.5 years, went into DevOps at a different company (one I'm at), but left that for a software dev position elsewhere within the last few months. So I think you'll do just fine if you have the motivation, which I think you do."
cscareerquestions,3dyrch,ThatGuyqwq,0,Mon Jul 20 18:38:09 2015 UTC,"Not in the industry yet, but my guess would be that it could be beneficial for certain roles. I'm sure in certain jobs, understanding how a network works will be beneficial when writing code."
cscareerquestions,3dxsi4,csthrowaway456,3,Mon Jul 20 12:23:51 2015 UTC,"Great company + more interesting industry + dev work sounds good. If it's Java Dev/Analyst, I think it might sound a bit juvenile to ask if it involves coding, but you can ask. Why would a job title have a programming language in the title if no coding were required? Having a title of ""Programmer/Analyst"" is pretty common, and I've never seen that title not involve coding.   You could try to negotiate the offer."
cscareerquestions,3dxsi4,fecak,0,Mon Jul 20 14:07:05 2015 UTC,"Oh it will certainly involve coding, I'm just unsure how much. The job advertised was for a junior developer but it seems they've adjusted the role slightly after interviewing me which just seems a bit unusual."
cscareerquestions,3dxsi4,fecak,3,Mon Jul 20 14:17:27 2015 UTC,"Why do you think this is unusual? Without knowing how much experience you have in the industry, I'll tell you that it's quite common. A company invites someone in for an interview (whether they reached out to the person or the person applied), and after an interview it turns out that the person might be a better fit for another team or role internally.   Happens all the time, trust me."
cscareerquestions,3dxsi4,fecak,0,Mon Jul 20 14:56:40 2015 UTC,"Ah ok, it's just never happened to me before. Then again, I've always worked in the public sector which is perhaps a bit more rigid about these kinds of things."
cscareerquestions,3dxsi4,BahamutWC,1 point,Mon Jul 20 15:14:51 2015 UTC,"Understood. And you're correct, public sector jobs are probably less likely to change the title/role."
cscareerquestions,3dzxsi,TheBestYet91,1 point,Mon Jul 20 22:00:23 2015 UTC,Look for internships. Usually it's a lot more common to have summer internships but they have some during the year that are aware that they have to work around your college schedule. Also helps to start in the summer and see if you can extend it part time during the year.
cscareerquestions,3dxv4h,goodstuff10,4,Mon Jul 20 12:49:43 2015 UTC,"I'm from the area - what type of advice are you looking for?  Maybe you can list the programs you're considering, and I can tell you what I know about them.  What are your aspirations for after graduation?"
cscareerquestions,3dxv4h,JobspressoTeam,1 point,Mon Jul 20 13:55:42 2015 UTC,So here are the programs I am looking at applying to:  Computer Systems Technology Software Development and Network Engineering at Sheridan  Software Engineering Technology at Centennial   Computer Programmer Analyst at Fanshawe  My goal 5+ years down the line after graduating would be a Software Architect. I want to be the guy that creates. Am I going in the right direction? Thank you for taking the time to answer.
cscareerquestions,3dxv4h,JobspressoTeam,1 point,Mon Jul 20 14:09:58 2015 UTC,"Out of the ones you listed, Sheridan and Centennial are definitely the more well-known colleges.  I Googled both programs, and content-wise both look relevant and current.  Also, Centennial seems to offer a co-op program, and that's something you definitely, definitely want.  Experience is king around here, and that's something I cannot stress enough.  But like another poster (Farren246), I would also suggest looking at programs offered by more renowned universities.  You don't have to do another degree, but even continuous education programs with the University of Toronto will give you a leg up.  For some reason, the job market in Toronto (if that's where you plan to work) is quite brand name-driven, at least in my experience. I don't have widespread proof of it, but anecdotally I've heard multiple hiring managers talk about focusing their hiring on UofT and Waterloo grads.  So keep this in mind.  Also, becoming a SW Architect within 5 years may be a bit of a stretch.  You can probably land a senior dev role with architectural responsibilities, but to be an actual architect (along with the name and the money), you're probably looking at 10+ years of experience.  It's usually regarded as a very senior position, at least around here.  Architects need to command the respect of his/her team, and be seen as an authentic expert with deep expertise, and this is something that comes only with experience and wisdom."
cscareerquestions,3dxv4h,JobspressoTeam,1 point,Mon Jul 20 17:52:59 2015 UTC,"Thanks for the response. I was probably a bit...""shooting for the stars"" with the timeline for SW Architect. Upon more research, seems like the guys who get those types of positions are looking at 10 thousand+ hours of experience which, as you say, is at least 10 years.  I would assume UW and U of T are going to be the big players. As much as I have heard that their recognition is key, I've also heard how the schooling doesn't matter and the portfolio matters. I'm starting to find it is a mixture of both and, of course, networking."
cscareerquestions,3dxv4h,Horatio_ATM,1 point,Mon Jul 20 18:13:41 2015 UTC,"Yeah, it just comes down to the fact that people succeed in different ways.  Some people land jobs because they attended a famous school, while others succeed because they built an app that was downloaded 100,000 times.  Having one or the other should help you establish a long-term dev career."
cscareerquestions,3dxv4h,Horatio_ATM,1 point,Mon Jul 20 20:56:04 2015 UTC,"Schooling does matter. A lot. Anyone that tells you differently is doing you a disservice. It's not impossible to get a job in software without schooling, but when you say it's your portfolio that matters, that's true if you made an app that generic people on the street have heard about and actually tried, or if you're absolutely prolific in your contributions on GitHub or elsewhere.   At least at the big software firms, without a CS/CE degree on your resume, your resume will likely be dropped in the circular file before a hiring manager ever sees it. Sometimes it will get dropped if you do have such a degree, just not from a top name school. It sucks (for you), but such is life."
cscareerquestions,3dxv4h,Horatio_ATM,1 point,Mon Jul 20 21:56:14 2015 UTC,"So it's not worth it to go to a college, with co-op, and actually learn the skills as opposed to a theory based CS undergrad? I am a bit unique...I do have a Master's of Science....it's just not in CS. And working at a big software firm isn't the be all, end all...legitimately every company needs people in some capacity. I understand, the big players throwing 100K at an undergrad want the U of Waterloo student, but that isn't me right now. Doesn't mean success isn't possible....or am I way off? Thanks for the response."
cscareerquestions,3dxv4h,JobspressoTeam,1 point,Mon Jul 20 22:00:20 2015 UTC,"If you're passionate about CS, then it's not worth it to go to college, IMO - university is the place for you. What I look for in candidates is the ability to solve problems and the ability to learn - I don't care about specific languages, frameworks, etc. If you're just looking to do LOB apps for a non-software industry company, then sure, skills come more into play.  Where does your passion lie?"
cscareerquestions,3dxv4h,Farren246,1 point,Mon Jul 20 22:19:13 2015 UTC,"Well, I want to create, and solve problems. I want to be able to take ownership in what I am doing...have a bit of purpose. Been exposed to the real world in jobs that nothing concrete comes out of it. That's why I am interested in this particular sector. Ability solve problems with tangible results."
cscareerquestions,3dxv4h,Farren246,1 point,Mon Jul 20 22:25:40 2015 UTC,"Given what you've said, I don't know that working as a programmer in a non-software company would be personally fulfilling for you. Yes, they solve problems, but the scope and breadth of them is usually narrow. Though, if you want to solve problems creatively, and build your GitHub portfolio, why just just find an itch and scratch it?"
cscareerquestions,3dxv4h,echospring,1 point,Tue Jul 21 16:56:05 2015 UTC,"So I found something at U Windsor...they offer a one-year program for people who have a 4 year honours in a different subjecy..a B. CS (General) and from there you can feed into one of their two Master's courses. Realistically, no one ever puts ""general"" on a resume anyways, and it is an extension course. As long as I can prove the knowledge and skills I learned. I would be able to do this. Moving to Windsor ain't grand but there's worse. Would having even that one Windsor program look better than a college diploma?"
cscareerquestions,3dxv4h,echospring,1 point,Mon Jul 20 23:52:57 2015 UTC,"It's going to be a close call, but if I were the hiring manager, I would consider Windsor to be better than Centennial or Sheridan, just purely based on the fact that a university degree should offer more ""hard"" CS fundamentals than that of a college.  But that's just me.  You'll probably find people in both camps."
cscareerquestions,3dxv4h,Rito_Cop2,3,Tue Jul 21 02:40:13 2015 UTC,"As someone who got those diplomas (3-year Programmer Analyst + 3-year Network Technician, both from St. Clair College), my honest advice is to go to university. I did get a tech support job from them, but this was a job gladly given to high school grads with no post-secondary education (or plans to get one), whom I had to walk through a variety of entry-level tasks like how to run ipconfig because our training only covered customer service and not tech. Even with both programs under my belt, I could not get so much as a callback from my resume when applying to programming, networking, or sysadmin positions, and so I was forced to head back to school with my tail between my legs.  I know that one data point does not make a trend, but a startlingly high number of my friends from college were in the same boat for several years after graduation, and some still are in that position; never able to find meaningful work with just a college diploma. It sounds strange as companies clamour for more IT people, but they want their IT people to be of a certain caliber, and they don't believe that colleges fulfil that need. I actually found the college-level programming to be more in-depth than the university Computer Science programming courses, but I don't make hiring decisions. The cold hard truth is that employers do not consider college diplomas to be worthy of any CS or IT-related jobs. It was only after I was able to write ""degree"" on my resume that I started to get callbacks.  The simple truth is that although college will give you skills to be a ""Software Architect"" 5 years down the road, you will never be able to get to that position because you'll never even be hired as a junior programmer if all you have is college. So yes, the education is better and cheaper, but you'll only end up wasting 3 years of your life with nothing to show for it. If you want to break into IT, you'll have to bite the bullet so to speak and go into thousands upon thousands of dollars into debt at a university."
cscareerquestions,3e0xdd,heiland,14,Tue Jul 21 02:45:23 2015 UTC,Yes. In China. Paying like $0.50/hr.
cscareerquestions,3e0xdd,kckcbbb,-19,Tue Jul 21 03:20:54 2015 UTC,Well fuck you too.
cscareerquestions,3e0xdd,kckcbbb,6,Tue Jul 21 03:47:42 2015 UTC,"It's not an insult.   PC assembly is highly commodity-like labor. No major PC manufacturer is going to alter their supply chain to accommodate you, and the few people who want custom PCs tend to be the kind who want to assemble it themselves."
cscareerquestions,3e0xdd,curiouscat321,3,Tue Jul 21 04:18:56 2015 UTC,"Comment is spot on though. It's pretty mechanized and has very poor pay. Maybe repair shops will let you do some of this, but the focus is going to be more on fixing software issues."
cscareerquestions,3e0xdd,ThrowItOutTwice,2,Tue Jul 21 04:06:30 2015 UTC,"If you really enjoy it, consider getting a dell technician certification. You will be hired to arrive places and replace faulty computer parts. This involves assembly/disassembly, and working for a respected name in the IT industry in case you're interested in growing. Beats geek squad by a ..lot, that place is a shithole."
cscareerquestions,3e0xdd,catastrophe,2,Tue Jul 21 06:53:27 2015 UTC,"Not building the whole thing, but there are still mom and pop computer repair ships that will let you do similar things."
cscareerquestions,3dyeg3,cbslinger,5,Mon Jul 20 15:29:26 2015 UTC,"If you have 3 yrs of startup experience and a BS (regardless of major), another degree is probably not a great investment for you. You're already in the industry, and can move around without needing much else.   If you were thinking of investing time in classes, I'd suggest investing that time in building things relevant to what you want to do. Mobile dev, security, whatever you decide."
