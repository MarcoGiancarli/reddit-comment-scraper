androiddev,3e3n3g,donnfelker,3,Tue Jul 21 18:27:59 2015 UTC,"I like the new alternative format.   It would be interesting to hear some topics on working with remote teams, UX teams (e.g., non-developers creating app designs), and doing Android dev on agile projects."
androiddev,3e3n3g,akodiaksun,1 point,Tue Jul 21 22:53:59 2015 UTC,"Enjoyed the latest episode on my way home from work today.  Good topic -- I'm lucky that my current employer already set all this stuff up, because I can't imagine developing without it!  The number of times the build broke at my previous company & wasn't caught until someone pulled the latest code was incredible.  Love the new short format as well.  I think it's a good compromise, and in some ways, can be a nice change of pace from the longer shows.  The longer episodes can take more time to get through/parse, so having some bite-sized topics from a listener perspective is nice too.  One other thing you might want to consider to help support the time you spend is a service like Patreon.  I listen to a few podcasts that use Patreon to support the development of new episodes.  The money is used to buy licenses, tradeshow tickets, and recording equipment, as well as to help 'justify' the amount of time it takes to produce an episode.  I'd definitely be willing to pay a subscription to help support all the work you and Kaushik put into the show."
androiddev,3e31g4,_K2_,8,Tue Jul 21 16:00:40 2015 UTC,"This sounds highly unusual. Is your linkedin profile well maintained? If you showcase your apps in your linkedin profile, and they are sophisticated enough - you should be approached by several head hunters every week.  Would you mind sharing links to your apps here? are maybe send link to them via PM ?"
androiddev,3e31g4,crowbar87,3,Tue Jul 21 16:17:23 2015 UTC,You just inspired me to work on my Linkedin profile thanks.
androiddev,3e31g4,sourd1esel,1 point,Tue Jul 21 17:28:25 2015 UTC,"Same here, I've been contacting a lot of people through LinkedIn, but my profile is definitely not up to standards."
androiddev,3e31g4,sourd1esel,1 point,Tue Jul 21 18:15:06 2015 UTC,What are you doing when contacting people? I have not really used linkedIn as a tool?
androiddev,3e31g4,mattlogan,1 point,Tue Jul 21 18:55:15 2015 UTC,"mostly, when applying to jobs, I look the company up on LinkedIn and find the HR person and reach out to them (or if the job posting was on LinkedIn to begin with, the recruiter/person that posted the job is listed right there)."
androiddev,3e31g4,bertweaze,5,Tue Jul 21 19:15:37 2015 UTC,Check out angel list (angel.co). Lots of super early stage startups desperate for developers.
androiddev,3e31g4,mattlogan,2,Tue Jul 21 19:38:50 2015 UTC,Do they have reliable pay though?
androiddev,3e31g4,alostpacket,0,Tue Jul 21 23:25:48 2015 UTC,It depends?
androiddev,3e31g4,fredgrott,3,Tue Jul 21 23:53:27 2015 UTC,"Stackoverflow is a great place to find jobs -- better than linked-in if you ask me.  Work on your ""points"" on SO as well to help your chances.  Keep a few example projects on github.  Unit testing experiments or RxJava experiments where you just write enough code to see how they work look very good in a candidate.  If you were staying in NYC, message me on here -- my company is always looking for Android devs.  Good luck!"
androiddev,3e31g4,sourd1esel,7,Tue Jul 21 18:26:42 2015 UTC,my best advice:  Apply to funded startups and ask for remote 1099..  DO NOT CLASS YOURSELF IN INTERVIEWS AS INTERN OR ENTRY LEVEL..you are not
androiddev,3e31g4,sourd1esel,2,Tue Jul 21 18:11:13 2015 UTC,Hi. I am in a similar boat. I would suggest asking cscareerquestions.  Are you getting interviews?   Also consider doing freelance work. I am trying to get into the field and it looks like doing freelance will be my entry.   Keep making stuff. It will happen.
androiddev,3e31g4,akvashi,2,Tue Jul 21 16:15:32 2015 UTC,"I had one interview through my recruiter and the guy really really liked me, but after everything he told me there were no positions available at the moment, he just wanted to interview me in case any new projects came up. Since then I've got nothing."
androiddev,3e31g4,p3t3r_f1l3,2,Tue Jul 21 16:21:13 2015 UTC,I have two released apps and have been working on android about a year. I am yet to get a job . I apply to everything I see. I have had maybe 5 interviews. I am not discouraged.  I will conquer.
androiddev,3e31g4,TheKeeperOfPie,3,Tue Jul 21 16:25:28 2015 UTC,"Fuck LinkedIn. Dont classify yourself as anything. Intern, entry level or otherwise. Just apply for any position that is asking for your skill set. If they want a student then just say you're a student, I interned my summer after college, so i was technically not a student. enroll yourself in a single class, boom student hahaha. Dont need to lie just dont be so open about everything if you dont need to. BTW been seeing a lot of coverage of Miami startup scene dont fret too much. Use sites like AngelList to reach out. Apply to anything and everything and make sure you're resume has only real applicable skills. That internship got me the foot in the door for my next job which is unbelievable, definitely not entry level, at least not in pay. You need to grab your balls and be aggressive. dont undersell, say what you can do and what you want. Freelance is a good stop gap, have a bunch of friends who are so efficient at it, its all they do now. Make sure you really have the skills you need to have to develop in a workplace, TDD, at least basic linux shell knowledge, the list is long. Also I wouldnt talk to recruiters, sketchy bunch of folk if you ask me. If you're really that good you'll be approached directly by the company. Btw, i never released a single app until that internship, worked on apps but most never released, not a bad thing. I just explained every experience I had in the field and what I learned from those experiences. Much more useful then, I have this app are you impressed? (learning the web stuff to do a web client is gold).  sorry if its a bit incoherent, just wanted to spew everything i know at you but didnt care to really organize it hahaha"
androiddev,3e0zp4,JakeWharton,20,Tue Jul 21 03:04:58 2015 UTC,wow this article is legit. really interesting. Do android releases often alter implementations of core java classes like this?
androiddev,3e0zp4,Cg2XHPxz,23,Tue Jul 21 03:39:04 2015 UTC,"Not like this, no. This is a crazy (awesome) optimization that only makes sense for String as it's the most instantiated type inside the VM."
androiddev,3e0zp4,lelarentaka,4,Tue Jul 21 03:56:14 2015 UTC,And I hope that people will look at this and appreciate the importance of interface and OO abstractions. The fact that you can completely change the internal implementation of a class without changing its public interface was groundbreaking.
androiddev,3e0zp4,pjmlp,9,Tue Jul 21 05:12:08 2015 UTC,You can have it without OO as well. It is called Abstract Data Types and heavily used in languages with module support.   Usually I only see this not being possible in C as developers tend to grab structure fields directly.
androiddev,3e0zp4,steamruler,1 point,Tue Jul 21 05:46:16 2015 UTC,You can typedef a type to a void pointer and use that with external functions without knowing the internal representation (assuming the external function knows the internal representation)
androiddev,3e0zp4,pjmlp,2,Tue Jul 21 10:27:09 2015 UTC,"Of course you can, or use incomplete structure definitions as well.  But there is something in the C culture that makes developers use fields directly, because one needs to micro-optimize field accesses.  Every time I coded C, I always made use of ADTs with input parameter validation, using translation unit => module concept.   Never had a situation where direct field access would matter in terms of profiling."
androiddev,3e0zp4,Widdrat,1 point,Tue Jul 21 11:04:30 2015 UTC,Can you make a simple example?
androiddev,3e0zp4,pjmlp,1 point,Tue Jul 21 11:39:16 2015 UTC,"Yes, this one will only work for heap based ADTs.  Using the usual stack example.  // stack.h typedef struct stack_t stack_t; // Incomplete type   stack_t *stack_make(void); void stack_release(stack_t *stack); void stack_push(stack_t *stack, int value); int stack_pop(stack_t *stack); bool stack_isempty(const stack_t *stack); ...   // stack.c  // provide the concrete implementation typedef struct stack_t {     // stack fields } stack_t;  // common stack code   The additionally have a stack_$(OSNAME) for implementation specific functions, instead of litering the code with #ifdefs.  This is just one possible way to do ADTs in C."
androiddev,3e0zp4,SquireOfFire,3,Tue Jul 21 22:18:14 2015 UTC,"The fact that you can completely change the internal implementation of a class without changing its public interface was groundbreaking.   And that's exactly what Android has done here.  The ""char[] value"" was a private attribute in the String class. You can find the source code for all Android versions at http://android.googlesource.com -- and you can find the Android 5.1.1 Lollipop source here.  On line 96:  private final char[] value;   The LeakCanary code is using reflection to access private instance variables. They have no right to complain when it stops working -- and to their credit, they aren't: the post is informative, and doesn't whine at the Android team for changing it. In fact, the post is a very good example for why you should not rely on internal implementation details unless absolutely necessary.  And for the love of Odin, don't touch the internal variables!  Story time: I've once investigated a bug with some chinese app that was messing with the Resources class' internal preload caches for drawables (bitmaps), which completely broke down when the Asset Atlas was introduced (some time in KitKat, maybe?). The Asset Atlas lookup is done based on native bitmap pointers, and that map is generated once on boot.  Well, the crappy app was clearing the preload lists, causing garbage collection of the Bitmap objects, which in turn meant that the native bitmaps were freed. And as they loaded their own bitmaps, they would sometimes get an address that was previously used by a preloaded bitmap. And that would produce a hit in the Asset Atlas, making the rendering code draw the original preloaded bitmap (which was uploaded as a GPU texture since boot) instead of the intended contact image.  Ugh. Don't touch the internal variables! They're private for a reason."
androiddev,3e0zp4,SquireOfFire,1 point,Tue Jul 21 17:58:07 2015 UTC,The LeakCanary code is using reflection to access private instance variables.   Not quite true. It's using data inside of a heap dump which is in a structured format.
androiddev,3e0zp4,leggo_tech,1 point,Tue Jul 21 19:13:44 2015 UTC,"Ah, that makes sense. Thanks for the correction."
androiddev,3e0zp4,SquireOfFire,2,Tue Jul 21 19:39:26 2015 UTC,"Might be a dumb question. But work with me here. I just started reading into frequently used Java classes like String. 1. Why does does out of the box java not use native calls for strings ""as it's the most instantiated type inside the VM""? 2. Couldn't this just be done in ART? Since ART tries to compile down to native code on install time?"
androiddev,3e0zp4,ZakTaccardi,2,Tue Jul 21 12:44:10 2015 UTC,"Why does does out of the box java not use native calls for strings ""as it's the most instantiated type inside the VM""?    Maybe they do. Android bases its core classes' implementations on Apache LUNI, not the Sun/Oracle or OpenJDK implementations.  However, native is not always faster. In particular, there's a cost for transitioning between Java and native execution. But I have a lot of respect for the Android core guys, so I will assume that they've done the necessary profiling here.  Finally, the statement that it is the most instantiated class may be true for Android, but is not necessarily true for other VMs or workloads.    Couldn't this just be done in ART? Since ART tries to compile down to native code on install time?    This is kind of done in ART. Well, it's in the 'libart' folder of the libcore git: https://android.googlesource.com/platform/libcore/+/android-m-preview-1/libart/src/main/java/java/lang/String.java  But let me reinterpret your question: why couldn't this be done automatically?  Well, there is a limit to what can be done automatically. Automatic optimizations must of course preserve the original behavior (ignoring the consequences of 'undefined behavior' for now). For example, it would not be a valid optimization for the VM to join the String and char[] object into one (as has been done manually here), because there may be some code that relies on keeping just one of them while the other is garbage-collected.  Manual analysis and optimization can take advantage of extra information that the automated tools cannot know, and make more drastic changes in things like data structures and algorithms. The only downside is, of course, that manual work is more... well, work. :)"
androiddev,3e0zp4,SquireOfFire,1 point,Tue Jul 21 18:14:03 2015 UTC,but they stole it from Oracle!
androiddev,3e0zp4,Cg2XHPxz,2,Tue Jul 21 14:08:24 2015 UTC,"Do android releases often alter implementations of core java classes like this?   Android uses Apache LUNI for their core Java classes. Or, at least, it's based on LUNI -- there's probably been some modifications along the way.  So yeah, all of them will have a completely different implementation. Shouldn't matter as long as they stick to the documented APIs."
androiddev,3e0zp4,SquireOfFire,1 point,Tue Jul 21 18:02:15 2015 UTC,wow thanks didn't know. that site looks super dead
androiddev,3e0zp4,kuoa,1 point,Tue Jul 21 18:14:06 2015 UTC,"Yeah, it says ""there is some support for new Java 5 APIs and enhancements"". Some support. And Java 5 is pretty ancient by now.  Maybe they just moved. In any case, the Android teams are continuing development on their version of things."
androiddev,3e0zp4,Zarlon,1 point,Tue Jul 21 18:15:47 2015 UTC,"As I understand it, Android basically forked Hamony and Luni and continued the development on their own."
androiddev,3e0zp4,trevor-e,7,Tue Jul 21 19:16:27 2015 UTC,The title made me laugh ) Nice article!
androiddev,3e0zp4,pjmlp,1 point,Tue Jul 21 12:40:08 2015 UTC,title was reason alone for my upvote :)
androiddev,3e0zp4,_bluecup_,11,Tue Jul 21 17:23:46 2015 UTC,"Cool read, thanks!  It's neat to know that the framework team is still optimizing core classes like String."
androiddev,3e0zp4,MisterJimson,7,Tue Jul 21 03:38:56 2015 UTC,"I wonder when they will get some extra time to make Android understand Java 8, now with Java 9 alphas already available."
androiddev,3e0zp4,OfF3nSiV3,5,Tue Jul 21 05:47:42 2015 UTC,"Well, they recently commited lambda tests for Jack compiler, so I'd say they're working on it."
androiddev,3e0zp4,DrJerkberg,1 point,Tue Jul 21 09:07:35 2015 UTC,The problem is it wont be back compatible.  Lets say it was added in Android 5.2.  You wouldn't be able to use any java 8 features in apps targeting < API level 23.
androiddev,3e0zp4,drabred,3,Tue Jul 21 23:33:25 2015 UTC,How does someone find something like this?
androiddev,3e0zp4,Cg2XHPxz,11,Tue Jul 21 11:45:18 2015 UTC,"As Jake said, this caused a crash with Leak Canary so they started debugging."
androiddev,3e0zp4,tomjb_,2,Tue Jul 21 12:21:52 2015 UTC,Minecraft style - always dig deeper.
androiddev,3e48bj,bart007345,3,Tue Jul 21 20:53:45 2015 UTC,thanks for that.  original talk  Here's an ever better talk and he explains MVP around 36:00
androiddev,3e48bj,morihacky,2,Tue Jul 21 21:25:16 2015 UTC,Uncle Bob is as smart as they get. But I feel his solution amounts to death by abstraction.   There's got to be a simpler way!!!
androiddev,3e48bj,john_drake,1 point,Tue Jul 21 23:22:03 2015 UTC,The link's missing. Reddit does this thing where if you add text the link doesn't appear.
androiddev,3e48bj,caleb_dre,1 point,Tue Jul 21 21:05:21 2015 UTC,tldr?
androiddev,3e48bj,sourd1esel,1 point,Tue Jul 21 22:50:30 2015 UTC,Cheers. I need this.
androiddev,3e20n4,pandanomic,3,Tue Jul 21 10:09:33 2015 UTC,This is great to have. I do hope they keep it up to date with each new version
androiddev,3e20n4,eValval,2,Tue Jul 21 12:18:45 2015 UTC,"I'm happy Google has moved to a model where updates are delivered not at OS but bundled with the app. On the downside, it'll still be 5-10 years until Dalvik is gone and we can forget about the 65k woes due to GCM + Support taking 50% of the cap."
androiddev,3e20n4,pakoito,1 point,Tue Jul 21 14:52:03 2015 UTC,ART doesn't remove the 65k method limit from the dex format.
androiddev,3e20n4,tadfisher,1 point,Tue Jul 21 15:53:44 2015 UTC,"No, but when you compile against newer APIs each library spits a separate dex file. ART knows how to handle multiple dexes. Dalvik requires the patch, which is imperfect at best."
androiddev,3e4x95,jtgilkeson,1 point,Wed Jul 22 00:00:19 2015 UTC,"So the new fragment is in an entirely new activity? If so, try putting the fragment in the xml, not adding it dynamically, maybe that will add it to the hierarchy in time for the transition."
androiddev,3e4x95,swag_stand,1 point,Wed Jul 22 00:26:36 2015 UTC,"No, the fragments are part of the same activity as the drawer (similar in function to the Google Play app).  Parent Activity:  -- Drawer Layout  --- Toolbar  --- Frame (for fragments)  --- Left Drawer  Fragments get added / shown in Frame based on selection from left drawer."
androiddev,3e4x95,swag_stand,1 point,Wed Jul 22 00:40:45 2015 UTC,Then fragment transaction animations would only apply when a view is coming one fragment to another that's replacing the old one in the frame. You would need a traditional animation at or above the frame layout to animate the view from within the drawer it's place in the frame. I'm not sure how possible this is wrt clipping children.
androiddev,3e2aiz,sylsau,1 point,Tue Jul 21 12:14:25 2015 UTC,A PDF version of the ADB Survival Guide is also available here : http://goo.gl/8yVmpJ
androiddev,3e2aiz,ItWasAValuedRug,1 point,Tue Jul 21 12:14:52 2015 UTC,adb shell input keyevent 26 adb shell input keyevent 82    Mind == Blown!
androiddev,3e41cj,artem_zin,1 point,Tue Jul 21 20:05:08 2015 UTC,For those who like building projects from the Terminal but don't like when Gradle's forked process (such as test runner) steals focus from currently active app. #StopItGradle!
androiddev,3e41cj,JakeWharton,1 point,Tue Jul 21 20:10:27 2015 UTC,File a bug as well?
androiddev,3e2w46,Pembar,4,Tue Jul 21 15:21:59 2015 UTC,shameless plug: http://vishnurajeevan.com/2015/07/12/using-recyclerview-with-multiple-items.html  :)
androiddev,3e2w46,burntcookie90,1 point,Tue Jul 21 15:58:36 2015 UTC,"Saw this a few days ago as well, and I think it's a pretty good approach.  One thing I didn't like was how verbose onCreateViewHolder and onBindViewHolder could get if you have a lot of classes.  I created a simple mapping API that allows the developer to add a mapping between a ViewHolder and a particular class type.  With that, onCreateViewHolder just looks at the viewType, looks up the corresponding ViewHolder, and applies creates it appropriately.  I think you'd want to have a common interface for the create/bind methods with that approach.  Anyway, good design - thanks for sharing!"
androiddev,3e2w46,slothwerks,2,Wed Jul 22 00:17:50 2015 UTC,Here are mine adapters from the project I'm working on now. I moved all basic staff to the abstract EndlessAdapter which I used in the other projects.  https://gist.github.com/ewintory/ef2ff3e05d0e42f35558 https://gist.github.com/ewintory/3e4ebda4e152be068461
androiddev,3e2w46,ewintory,1 point,Tue Jul 21 21:21:37 2015 UTC,"""The Busy Coder's Guide to Android Development"" book has several samples of RecyclerView mini-apps and they're public available.  If the samples are not enough, the book and subscription are very affordable and it really worth they value.  No affiliation with Commonsware, I'm just a happy customer."
androiddev,3e3rjm,Crlan,2,Tue Jul 21 18:58:38 2015 UTC,Try a banner ad?  Even if users aren't in your app long they'll still see it.
androiddev,3e3rjm,bonkersz,1 point,Tue Jul 21 20:57:39 2015 UTC,Thanks!!
androiddev,3e3rjm,HaoChen,2,Tue Jul 21 21:46:03 2015 UTC,If they use your app only for a short period of time a banner ad is a good idea but I'd only show it every tenth run or so. If you show it every time people will get annoyed. It is also more likely to get clicks because if you are used to open the app and click a button immediately but from time to time an ad shows up you will sooner or later accidently click on it.
androiddev,3e29cm,fadelakin,1 point,Tue Jul 21 12:02:36 2015 UTC,"I'm trying to implement FileObserver into a service. When my MainActivity is launched, the instance of FileObserver that I have there is launched and I know it works due to the toast messages that I get.   However, when I launch an instance of FileObserver in the onCreate() method of my service, I don't get anything. No toast messages or even log messages. The only log message that seems to work is the message that lets me know that the service has been created.   Any thoughts? Is there something extra that I need to do to make FileObserver work with my service?"
androiddev,3e29cm,MrHeavySilence,1 point,Tue Jul 21 21:56:53 2015 UTC,I'm trying to create the circular reveal ripple effect seen in the Material commercial but I can't get it quite right. Anybody have a good tutorial for doing this kind of transition?
androiddev,3e29cm,Zookey100,1 point,Tue Jul 21 20:35:00 2015 UTC,Is allowed to use Amazon Associate API (referral links to products) with the app on Google Play?
androiddev,3e29cm,caleb_dre,2,Tue Jul 21 18:24:42 2015 UTC,How would you animate something into a view from nothing? Say you want to animate a hidden element after another element is clicked. How would you set that up?
androiddev,3e29cm,jtgilkeson,1 point,Tue Jul 21 17:17:45 2015 UTC,"If you want a reveal - you can do things like a scale from small to normal size and/or animate the alpha to fade it in.    Perhaps the easiest way is to set the alpha to 0 on the item in your layout, then you animate it to go to 1.0 alpha when it needs to show up."
androiddev,3e29cm,getonmalevel,1 point,Tue Jul 21 20:53:38 2015 UTC,"Care to elaborate? In my own opinion when i animate ""cross-view"" meaning jumping accross the screen i do things like this  <FrameLayout> <AnimationObject/>  <View1/> <View2/> .... </FrameLayout>"
androiddev,3e29cm,sourd1esel,1 point,Tue Jul 21 18:16:18 2015 UTC,"I am studying android. How much of what you do is outside of strictly android development. To clarify,  how much of making an android app is done outside android studio. I'm not talking art. I imagine it depends but I am very interested."
androiddev,3e29cm,jtgilkeson,2,Tue Jul 21 16:09:14 2015 UTC,"The amount of work outside of AS is largely dependent on the size of the team developing an app.  When you get into a team environment, more tools come in to play.  The larger the team, you may get people dedicated to managing some of these things, but you will still likely have work to do involving them.  Here are some of the areas off the top of my head that come in to play:   Research - looking things up on stack overflow, Google I/O, reddit, etc. Design - mock ups, assets, use cases Source Control - pull requests, code reviews, etc.  Feature & Bug tracking Back end development - APIs, production vs dev environments Testing - Device coverage, Bug Reports, Feedback, Distribution Release Management - uploading to Google Play, updating info on there when Google requires new things Automation - Automated building and unit testing  Native Development - depending on the app, you may need to use some native libraries and do customization.   On a team with a dedicated product manager, designer, project manager (scrum master), separate team for back end, and testers, I'd estimate coding in Android Studio occupies about 75% of my time."
androiddev,3e29cm,sourd1esel,1 point,Tue Jul 21 18:30:12 2015 UTC,Thanks. I found this insightful.
androiddev,3e29cm,shackyAak,1 point,Tue Jul 21 18:54:25 2015 UTC,"Outside of Android Studio? (henceforth AS) Not a ton, but...  First, lets exclude standard software dev things like code reviews, planning (!!!), source control, support/feedback, distribution, analytics, and builds.  That leaves:   Testing & interacting with server APIs used by my apps: usually use Chrome w/ the Postman plugin/app, and curl from the command line. Build scripts: I usually fiddle with Gradle & Travis build scripts in a text editor instead of AS. Local builds & unit tests:  half the time I run from command line instead of AS.   Not sure what else you really wanted to know/dig into...?"
androiddev,3e29cm,sourd1esel,1 point,Tue Jul 21 17:07:02 2015 UTC,I just wondered if an Android developer was responsible for things outside of the Android environment like creating an API or doing the backend stuff.
androiddev,3e29cm,jbcsee,1 point,Tue Jul 21 17:31:04 2015 UTC,"It depends on where you work.  We expect all our developers to be full stack developers, so you will be asked to write C++, C, JNI.  You might be asked to modify the Android BSP to support a new feature in the app.    Depending on release needs you may actually be pulled into work on the server (REST API stuff).  Even when that is not the case I expect my developers to be able to mock up the REST APIs using Go/Python/Etc... so we can do integration tests of the error cases more easily."
androiddev,3e29cm,kaisims,2,Tue Jul 21 17:51:59 2015 UTC,"I want to have a endless scrolling implementation in my app. The problem: I get the data per JSON, so in one Json there is a x number of objects (mostly ~20). I request the JSON per URL so if I type &page=1 after it, it loads the second page, with &page=2 the next and so on. I have to change the URL while scrolling down and do all over again (downloading). And I want to combine it with imageCacher, but thats almost working  How do I accomplish this?"
androiddev,3e29cm,getonmalevel,1 point,Tue Jul 21 14:10:40 2015 UTC,"Use a recyclerView, load when someone gets close to bottom, insert items into recycler view."
androiddev,3e29cm,EvolvedBacteria,1 point,Tue Jul 21 18:17:52 2015 UTC,"I am not sure at what stage of implementing this you are but first I would have a variable keeping track of last loaded page. When view first appears I would load the data of the first page and display it in ListView (or better, Recyclerview). Then all you have to do is set up the listener to detect when your ScrollView has reached the bottom and fire up the loading event for lastLoadedPage + 1. Append the loaded data to existing ListView and that is it."
androiddev,3e29cm,kaisims,1 point,Tue Jul 21 17:58:24 2015 UTC,"It first loads one without the &page addition, for the second time you should just have to add &page=n, I thought of using some sort of for loop, or something like this, but I am not sure how to implement this. Should I add the onScrolllistener in my Fragment or in the adapter?"
androiddev,3e29cm,Nexic,1 point,Tue Jul 21 19:23:47 2015 UTC,"I have this feature in my app with a rather simplistic solution. My REST api returns the current page and total number of pages. So I have a simple 'APIPageState' object in which I update these values when receiving a response.  Then when the user scrolls, in my scroll listener I use this object to check if there are more pages, if so determine the next page and then I make the API call. Make sure this state is persisted on device rotation."
androiddev,3e29cm,CaddoSierra,1 point,Tue Jul 21 16:46:04 2015 UTC,"Is memory usage something that is really important usually?  Say I have a timer, and I'm updating a TextView every second with a String - I'm also updating a couple of other things. Now in my app the allocated memory goes up by 0.01 MB about every second. Is this a problem? How fast does garbage collection get on this?  Also, how much does method calling cost? Using a service for the timer and using a callback that takes a String, then using that String to update text. Is this bad?  Getting into Android, and I'm paranoid about things like this."
androiddev,3e29cm,getonmalevel,1 point,Tue Jul 21 13:01:37 2015 UTC,"Er, are you saying your ONE string variable is eating that much memory?! Must be a large string. It shouldn't matter too much, usually a regular app gets about 30-40 mb before it gets an out of memory error, and if that's not enough you can add a large-heap flag.  Are you using a timer-task??"
androiddev,3e29cm,CaddoSierra,1 point,Tue Jul 21 18:19:49 2015 UTC,"Ok, I figured out that the memory usage comes more from other objects being used not just the String. Using a StringBuilder to send the string from a service to activity then update textview only uses 0.01 MB every 20 seconds.  I'm using a CountDownTimer actually. I guess it's just other objects I'm not using right.  On a side note, I also have major issues with notifications. When the user leaves the app while it's running, a foreground notification is created and updated every second. Only setting the text and updating it causes at least 0.01MB increase. I have no clue what's causing this."
androiddev,3e29cm,getonmalevel,1 point,Tue Jul 21 21:17:06 2015 UTC,"No idea how to help, sorry man, it's hard to guess without code in front of me."
androiddev,3e29cm,thepoosh,2,Tue Jul 21 21:25:33 2015 UTC,"every time the GC runs, it takes time from the UI, therefore you might experience some jumps and jitters in the UI.  in the long run, memory usage might throw OutOfMemoryException which are not as fun as could be."
androiddev,3e3c2y,caleb_dre,4,Tue Jul 21 17:13:52 2015 UTC,"We went the library route. Currently we have two, one that handles all our standard login / registration processing and another that holds common utility code, some custom controls we wrote and a standard set of colors.   Was a bit of a bear to set up at the start but then figured out the magic for build.gradle settings using a local Maven repository and all is well.  Any time I catch myself doing a copy / paste of a layout, drawable, activity or chunk of code I stop and decide which library it belongs in and move it there."
androiddev,3e3c2y,MKevin3,1 point,Tue Jul 21 20:23:26 2015 UTC,Can you give me more information about how your gradle setup works and a really greta place I can learn more about having my own setup?
androiddev,3e3c2y,hitler_kardashian,1 point,Tue Jul 21 22:30:58 2015 UTC,"The library route works for large duplications. But I'd imagine going through the process of creating a library for small ones can get annoying real fast and then importing it, too.  You could look into code snippet managers. Android Studio lets you define snippets (called Templates). I know of Dash which I've used for quickly looking up documentation but they also offer a handy snippet tool."
androiddev,3e3c2y,capilot,1 point,Tue Jul 21 18:03:06 2015 UTC,"Creating a library with Android Studio is a relatively simple task. (File -> New -> New Module -> Android Library) Copy and pasting is a terrible idea imo. It might help you get up and running faster, but the amount of time you'll have to dedicate in the future out weighs the short term benefits. The two code bases will slowly start to digress from one another, every bug fix will need to be duplicated in two places, creating two projects that you now have to maintain."
androiddev,3e3c2y,s1lv3rd3m0n,0,Tue Jul 21 20:24:35 2015 UTC,"Came here to say this. Unless it's a lot of code and you use it in a lot of places, it's usually better to just cut and paste."
androiddev,3e34bs,Programmer_Frank,2,Tue Jul 21 16:20:52 2015 UTC,context.getResources().openRawResource(R.raw.name_of_thingy) gives you an InputStream.  And you put it in /res/raw/name_of_thingy.txt.
androiddev,3e3vq9,danielgomez22,1 point,Tue Jul 21 19:27:19 2015 UTC,"Papertrail is not what you're looking for, it's a log aggregation service for servers. I like Bugsnag for crash reports."
androiddev,3e2nl0,Reyny,1 point,Tue Jul 21 14:15:29 2015 UTC,"i haven't worked with it personally, but maybe https://www.photonengine.com/en/Turnbased supports what you need.  Also: check out /r/gamedev it's an awesome community about making all kind of pc/mobile/console games :)"
androiddev,3dzoq4,Blackcurls,3,Mon Jul 20 20:55:34 2015 UTC,try searching on android arsenal or https://github.com/wasabeef/awesome-android-ui
androiddev,3dzoq4,sagarsiddhpura,1 point,Tue Jul 21 06:45:39 2015 UTC,"WOW, that's a FANTASTIC repository! Thank you for sharing!"
androiddev,3dzoq4,eValval,2,Tue Jul 21 14:45:22 2015 UTC,You could see if https://materialdesignicons.com has something that you could use.
androiddev,3dzoq4,kerbals_must_die,2,Tue Jul 21 12:20:43 2015 UTC,"Droid Icon probably suits your needs best, it uses FontAwesome."
androiddev,3dzoq4,kerbals_must_die,1 point,Tue Jul 21 18:18:03 2015 UTC,"That's pretty much EXACTLY what I needed! Thank you! Although I do have a couple of questions:   Can you change the size of the social badges? For example, I added the Facebook badge to my app but I want to decrease the size since the default is a little too big for my taste. How do I make the badges linkable? I want it so that when the user clicks on my Facebook badge it will take them to my Facebook page. Can this be done through Java?"
androiddev,3e2l79,r7v,2,Tue Jul 21 13:55:34 2015 UTC,"You could add a boolean buildConfigField for each of your app's productFlavors, and set it to false only for the production flavor. Depending on your app's architecture, using Dependency Injection to differentiate between flavors would be a better way to go though, I think (in case you're already depending on libs like Dagger)"
androiddev,3e2l79,aurae_ger,1 point,Tue Jul 21 15:15:45 2015 UTC,"Yes, just today /user/stefanhoth post link to article  In few words - you can declare some resources in flavors sections and use them as a flags, or better create one abstract class for your Presenter and two implementation's of them, one for production use, second for debug or staging builds and depending on the flavor change main project dependencies. As recommended by /user/aurae_ger - use DI (how to do it - see here https://github.com/JakeWharton/u2020)"
androiddev,3e2l79,i0way,-11,Tue Jul 21 18:07:08 2015 UTC,please don't ask questions that have been answered 1000 times before
androiddev,3e2l79,Paradiesstaub,3,Tue Jul 21 14:07:48 2015 UTC,"I wanted to see if there is an alternate approach , without having this check in the main folder and in just one of the flavors ?"
androiddev,3e2l79,Paradiesstaub,-6,Tue Jul 21 14:18:39 2015 UTC,"r/android is not Stack Overflow, if you have a question ask there"
androiddev,3e0642,stefanhoth,5,Mon Jul 20 23:03:46 2015 UTC,Why not use the contents of the variants.gradle file to actually create the product flavors instead of duplicating the names for definition?
androiddev,3e2f6z,Chackal,1 point,Tue Jul 21 13:01:12 2015 UTC,"how is this an issue?  as long as developers don't store public information in the account there shouldn't be any issues, and I guess that if you store your information publicly in the account it's your own fault for getting your users hacked"
androiddev,3e2a8m,anon0108,2,Tue Jul 21 12:11:26 2015 UTC,"As far as I know, the Android OS handles everything to do with Bluetooth audio. The only possible way you can ""open a socket"" is if the device supports RFCOMM (which I highly doubt would be the case with a headset)."
androiddev,3e2a8m,40ft,1 point,Tue Jul 21 12:27:11 2015 UTC,"yeah, that's the impression i'm getting  are there any bluetooth enabled devices that support RFCOMM that i could purchase for this little experiment?"
androiddev,3e2a8m,40ft,1 point,Tue Jul 21 12:37:44 2015 UTC,"Anything that communicates over RFCOMM usually does so with a proprietary protocol. It might be ""open"" and documented, or it might not. I have an old heart rate monitor that uses RFCOMM and its binary protocol is documented, so I was able to decode it pretty easily. (Of course HRM is these days done over BLE with a standardised specification). I also have a bike computer that uses a proprietary binary serial protocol which is undocumented. Using traces and a bit of hard work, I was able to reverse engineer it and get it to work.   A common thing with devices is to have an undocumented RFCOMM port that is used for firmware upgrades, or special features that only ""the special app"" supports, but you want to be careful playing around with those.  You could get a Bluetooth module from those hobby electronics stores which would allow you to program both ends of the connection.  But the easiest way is to use the Bluetooth on your laptop. It should be pretty straightforward to setup an RFCOMM connection to it."
androiddev,3e2a8m,40ft,1 point,Tue Jul 21 12:56:00 2015 UTC,But the easiest way is to use the Bluetooth on your laptop. It should be pretty straightforward to setup an RFCOMM connection to it.   i'm not following.  can you explain this a bit more?
androiddev,3e2a8m,40ft,1 point,Tue Jul 21 13:10:39 2015 UTC,"hmmm...maybe not so straightforward. I was thinking of how pairing my MacBook with a Bluetooth device will create a new serial file descriptor, which allows you to open and write to it like any other file. Pretty easy.  But you would want to connect an Android phone to your laptop over RFCOMM I guess? I feel like it should be possible to do this, but I'm not sure how off the top of my head. Both Android 5.0+ and OSX allow the Bluetooth stack to operate in ""peripheral"" mode whereby the phone or the laptop can pretend to be a ""device"", but I'm not sure if this works with RFCOMM.  Anyway, why do you want to connect to a serial port? BLE is the future for most things."
androiddev,3e2a8m,40ft,1 point,Tue Jul 21 13:28:37 2015 UTC,"this is a research project for a buddy.  he wants to connect to a bluetooth enabled device (i'm 99% sure its proprietary), read data from it and spew it to the phone screen  based on the research i've done, i thought the only way to connect to a bluetooth device was via a socket."
androiddev,3e1qwh,voreny,2,Tue Jul 21 07:54:13 2015 UTC,"Take a look at Apache Cordova. It allows you to create native apps using HTML, CSS and JavaScript. You could then publish the app to various platforms.  I'm not sure how well it would handle games though.  And you will not be able to take advantage of some of Android's design features."
androiddev,3e1qwh,internetgoblin,2,Tue Jul 21 09:58:59 2015 UTC,Thank you for at least presenting the possibilities. I will definitely look it up and try it!
androiddev,3dztx5,philosophicalhacker,3,Mon Jul 20 21:32:19 2015 UTC,"rx.Single is interesting. One of the reasons I don't use Rx is because Observables seem like overkill for my use case. I only ever wait for one value to arrive, never a stream of them. I wrote my own Future class for this, fairly short (just over 200 lines) and helped me understand monads a bit more. I'm definitely gonna use Rx in my next project."
androiddev,3dztx5,mnjmn,1 point,Tue Jul 21 03:41:41 2015 UTC,"JFYI David Karnok discovered bug right after the public release of v1.0.13  Here is the PR, looks like it may affect Android apps (our usage patterns looks similar to problem case), so be careful."
androiddev,3dztx5,artem_zin,1 point,Mon Jul 20 22:42:11 2015 UTC,@akarnokd   2015-07-20 21:34 UTC  Why do I discover bugs just after a version has been released to the public?     This message was created by a bot  [Contact creator][Source code]
androiddev,3dztx5,TweetsInCommentsBot,1 point,Mon Jul 20 22:42:17 2015 UTC,I like rx.Single idea! (...running IDE to play with it) I think that I will use it instead of Observable in 30% cases.
androiddev,3dztx5,jackhexen,1 point,Tue Jul 21 11:39:55 2015 UTC,"Does anyone know if you can still call onError from your rx.Single code? If that is the case, this might just replace all our API calls."
androiddev,3e21it,entropio,1 point,Tue Jul 21 10:21:54 2015 UTC,"A self-made implementation is trivial, no libraries needed.  You will just need a service that is showing a notification message to prevent getting killed."
androiddev,3dylcq,r7v,4,Mon Jul 20 16:19:03 2015 UTC,"so this question leads on nicely from the previous question about architecture a few days ago.  /r/ZakTaccardi touched on it.  There's an architectural model called Ports and Adapters/Onion architecture.   Imagine an onion. The inner most circle is your business layer. It contains the pojos and classes that define the business processes. The next layer is the adapter layer. It serves as a transformation layer between the business layer and the outer layer, the infrastructure layer.  The idea is you can actually write most of your logic in the business layer with unit tests. In fact on Android, you can do it in pure Java and gain the benefit of speed since you don't need a device.  The infrastructure layer is where the real world comes in. If its been reduced to mostly plumbing, then you can gain confidence that once correctly wired up, it should work.  In your case, I would create a pojo specifically for the GSon payload. Then I would create a factory for converting it into a domain object, including validation for the business layer to work with. This is the adapter layer.  When it comes to writing to the db, I would write a method that takes the domain object, converts it to a data pojo and save that.  I know that's a lot of work but with experience you know when you want all of it and when you don't. Recently on a project I was getting objects from the network and writing them to the db. The GSon annotations and the ORMLite annotations on one class did not seem right. Also, some fields did not need persisting. So I had the GSon pojo be the domain object as well. If I added more methods to the pojo then I would have separated them.  You're probably thinking that's a lot of abstraction for not much gain. Maybe for simple apps it is. But imagine an app that requires multiple devs many man months to write and has a roadmap of features into the future. I would absolutely do it fully because any time spent up front organizing code like this will be nothing compared to ongoing maintenance and the testability of the infrastructure. It scales.  Read more here."
androiddev,3dylcq,bart007345,1 point,Mon Jul 20 22:08:37 2015 UTC,"By far the best and most complete answer, I applaud the lack of any buzzwords like MVP in your explanation!"
androiddev,3dylcq,code_mc,4,Tue Jul 21 01:51:43 2015 UTC,What I like to do is make everything in the models private and then make accessor methods to get at the information I actually need.  You can also use these methods for formatting / error checking weird stuff from the API.  No need to make a bunch more classes IMO.
androiddev,3dylcq,stkenkere,1 point,Mon Jul 20 18:01:02 2015 UTC,"If you're not going to be changing the value after creation, making a getter is a waste. Better to make the member public final."
androiddev,3dylcq,s73v3r,3,Mon Jul 20 20:13:21 2015 UTC,"True, but if the GSON model doesn't actually match the format of what you want to interact with, you can get around creating a second object with it by encapsulating the object schema and creating whatever access methods you would want.  It really just depends on how far off the object is from what you need, I've definitely had times where I had to chop up/reorganize object hierarchies after loading them to create something that better fit my needs."
androiddev,3dylcq,konk3r,4,Mon Jul 20 20:16:24 2015 UTC,"You can write custom transformers for GSON so that you don't need the extra objects even, i.e. if you want to convert from a member of a json object that is a String to an object of some sort and back, you can define custom serializers for it."
androiddev,3dylcq,jaredpetker,2,Mon Jul 20 21:45:09 2015 UTC,"That's awesome, I knew you could do some extra serialization logic but I didn't realize it was that powerful."
androiddev,3dylcq,konk3r,1 point,Mon Jul 20 22:18:00 2015 UTC,here's a bit of an explanation from the gson docs
androiddev,3dylcq,jaredpetker,2,Mon Jul 20 22:31:23 2015 UTC,"Sorry, this is a bad idea. Always encapsulate your pojos with getters.   you're not going to be changing the value after creation   today, but in the future?  I've had to deal with legacy code that does this and its a mess. Anyone can change the field to making it hard to work out whats going on and debugging difficult."
androiddev,3dylcq,bart007345,1 point,Tue Jul 21 07:21:44 2015 UTC,"Anyone can change the field   While I agree with the sentiment, if the field is final, then this shouldn't be an issue (unless there's some reflection going on)."
androiddev,3dylcq,bart007345,1 point,Tue Jul 21 10:26:15 2015 UTC,my sentiment is doing it right. Its a bad design decision.  You can read more here.  Also final doesn't work on collections.
androiddev,3dylcq,ohsothisisreddit,2,Tue Jul 21 11:54:16 2015 UTC,You're starting to sound dogmatic
androiddev,3dylcq,bart007345,1 point,Tue Jul 21 14:45:04 2015 UTC,"How is saying don't do something with no benefits and only potential problems later, dogmatic?"
androiddev,3dylcq,ohsothisisreddit,2,Tue Jul 21 18:46:25 2015 UTC,"Being dogmatic doesn't imply you're necessarily wrong, just that you can't offer any reasoning for the conclusion outside of repeating axioms"
androiddev,3dylcq,bart007345,1 point,Tue Jul 21 19:08:50 2015 UTC,"Pointing to resources that explain better than I can, is invalid? Now who's being dogmatic?"
androiddev,3dylcq,ohsothisisreddit,1 point,Tue Jul 21 20:05:42 2015 UTC,Now who's being dogmatic?   ... Starting to think you don't know what that means...
androiddev,3dylcq,ZakTaccardi,5,Tue Jul 21 21:13:36 2015 UTC,"Even if it represents the same object, use separate classes for your    transport layer (incoming/outgoing json) your data layer (local serialization) your presentation (view) layer.   I am not sure what type of data you are retrieving through GSON, but let's say it's an Article. Maybe in a later version of your app you want to let users bookmark an Article, or mark it as read. That affects your data layer. But this class is tied to your transport layer and data layer now, which poses a problem. If you know your requirements won't ever change than this could be okay, but I would recommend against using the same model class for both.  100% use a different class for your view though."
androiddev,3dylcq,Phreakhead,4,Mon Jul 20 21:25:51 2015 UTC,"Why though? If you're adding a property to the data model, it doesn't matter to the other layers, because they can safely ignore it. You can even tell GSON that some fields are optional.  Plus, eventually you'll want a UI for the user to be able to mark that property. What is the advantage of recreating the property in 3 different layers instead of sharing the model between all layers?  EDIT: Not trying to be confrontational, I've just seen this recommended several times, but no one has really explained the pros/cons to each approach."
androiddev,3dylcq,ZakTaccardi,1 point,Mon Jul 20 21:46:56 2015 UTC,"Using one class for .json, db, and view is nice. It can save you a lot of time early on. But can cause lots of problems down the road.  Decoupling code has initial overhead, but reduces possible issues down the road. This allows your transport, data, and view layers to evolve separately."
androiddev,3dylcq,Phreakhead,4,Mon Jul 20 22:09:15 2015 UTC,"problems down the road   This is what I mean. What are those problems specifically? I share the same models between all 3 layers and it's fine as far as I can tell. If I have to update a model, I usually don't have to update the other two layers because it just propogates through and I can use the extra functionality if I need it.  If you do separate models for each layer, don't you still have to update the other two layers whenever you change one layer's model, because the transition/glue code that translates one layer's model to the other model needs to account for that new model? How do you share model classes between layers without having those layers as dependencies anyway? i.e. your middle layer needs to depend on the other two layers, because it needs to know what their model classes look like and how to translate them."
androiddev,3dylcq,ZakTaccardi,3,Mon Jul 20 22:30:58 2015 UTC,"yes, but you only have to modify that glue.  Your changes may propagate down nicely now, but in other cases they may not. By reusing the same class model in 3 places, you reduce extra code, but create a central point of failure. This may be great now, but your requirements could change down the road. What happens if for whatever reason you need to use XML instead of JSON? What if later on you need to get that same json data from two different sources instead of one?  Multiple layers can be developed independently of each other with a limited number of interconnection points.  The advantages of decoupling code becomes much more apparent when you start automating testing, too. If each view has a single view model, you can easily provide mock data to test it without having to worry about it your JSON or database. Also, imagine a scenario where modifying your JSON not only broke your data or view layer, but the tests for those layers as well. That's a lot of code that can be affected with one unexpected change.  EDIT: Use a pure java domain layer that all your other layers can be dependent on. This should usually contain a lot of interfaces. Mask each data retrieval class behind an interface. For example (this isn't necessarily model related), put an ArticleRepo (I call classes that access a db a repo) in there. Your data layer can implement this interface, call it ArticleRepoImpl. Maybe it has a method .getAllArticles(). Your presentation layer would never have any idea about an ArticleRepoImpl class - just the ArticleRepo interface. The presentation layer doesn't care what happens when you call .getAllArticles(), just that you get some articles. Behind the scenes in the ArticleRepoImpl.getAllArticles implementation, I am retrieving the articles from the network, disk, or memory (whichever makes the most sense at that moment). This decoupling makes that type of task a lot easier."
androiddev,3dylcq,teenageriotgrrl,3,Mon Jul 20 23:15:03 2015 UTC,"Beware, YAGNI"
androiddev,3dylcq,Shockwave_,2,Tue Jul 21 00:05:10 2015 UTC,"Honest question here, what is an example of an issue one might face by not decoupling these layers?"
androiddev,3dylcq,code_mc,5,Mon Jul 20 22:27:24 2015 UTC,"I really don't understand why people keep asking this question.... This is one of the first things I learned in my computer sciences studies and it is a problem you stumble upon quite a lot when you create larger sized projects.   For completeness sake I will try to give a simple example: imagine you are creating an application that uses a data storage based on a collection of json files. Be it online or offline, that doesn't really matter. Your data keeps getting bigger and the json files are getting bigger in size. This overhead is no longer justifiable and it even lags your device. What do you do??? Simple: you transfer your data to a database and use that instead of the bulky files. BUT all your methods are using the json files and they are all over the place because you didn't seperate your layers. Ha, better start over from scratch because nobody wants to do that.   Now imagine you have your data retrieval code completely seperated in its own layer. There would be a select amount of methods to interract with the data e.g. create a new user, get a list of all books, update the title of a movie. BUT I haven't even mentioned where and how it stores that in this paragraph as it DOESN'T matter. It's a seperate layer, what happens behind the scenes is of no importance. So if you wanted to change from json to database you just change that layer and you don't even need to touch any of the code outside of it. It just works as long as you follow the initial contracts you made.   If that doesn't explain it just Google it and read up on some articles..."
androiddev,3dylcq,Shockwave_,2,Tue Jul 21 01:28:27 2015 UTC,Edit: thank you for the explanation :)
androiddev,3dylcq,code_mc,2,Tue Jul 21 01:31:49 2015 UTC,Just finished editing my post I hope it is clear!
androiddev,3dylcq,Shockwave_,2,Tue Jul 21 01:41:20 2015 UTC,Thanks! That's what I was asking for!
androiddev,3dylcq,bart007345,1 point,Tue Jul 21 01:42:56 2015 UTC,"just to add another example. Its completely possible to also go from:  Shared preferences -> SQLite -> Realm -> Couchbase Lite  Making those changes would be painful.  Also, no one has mentioned testability. An architecture decoupled from its platform, is easier to test."
androiddev,3dylcq,dimsuz,2,Tue Jul 21 05:59:41 2015 UTC,"if you have some attributes which won't be used at all, why keep them in your GSON classes? Gson does not require you to specify everything you see in json otherwise I'd say that if you don't expose those classes in your public API (in case you are writing a library), then you can leave those extra fields there for the sake of reusing same classes and not creating a lot of new ones (especially if you have a lot of entities) also there are some compromises - for example if in the end you will have a 10000 objects in your buisness logic, it would be better if they have less fields rather than more fields just taking up memory. I.e. you parse once with extra fields, and then convert to more memory efficient class with less fields. So in this case it is a good decision to create another layer or if you just don't feel like it, you can go and have a cleaner set of classes. Sometime I am doing this extra abstraction, because I just feel comforting to use cleaner API in my buisness logic. And often such decisions (which bring you a 'programming joy') pay off later."
androiddev,3dylcq,leggo_tech,1 point,Mon Jul 20 21:37:51 2015 UTC,"Actually... I'm in the same exact boat. Started using retrofit, don't know whether I should model everything or not, or create new objects or not, private or not.   please retrofit and gson users, grace me with your past experiences"
androiddev,3dylcq,ZakTaccardi,1 point,Mon Jul 20 19:10:13 2015 UTC,see https://www.reddit.com/r/androiddev/comments/3dylcq/should_i_use_the_classes_created_for_gson/cta5q9c
androiddev,3dylcq,RemindMeBot,0,Mon Jul 20 21:26:27 2015 UTC,Messaging you on 2015-07-20 21:49:53 UTC to remind you of this comment.  CLICK THIS LINK to send a PM to also be reminded and to reduce spam.    [FAQs] | [Custom Reminder] | [Feedback] | [Code]
androiddev,3dzyyx,Penstien,4,Mon Jul 20 22:09:03 2015 UTC,"You'd just have to have a server set to query the table and delete every row that was created over a week ago or whatever time frame you decide. (Set a date created field)   Delete FROM ""tablename"" WHERE datecreated < currentdate - time"
androiddev,3dzyyx,dantheman91,3,Mon Jul 20 23:03:19 2015 UTC,You can use triggers for this: https://www.sqlite.org/lang_createtrigger.html
androiddev,3dzyyx,code_mc,2,Tue Jul 21 09:45:03 2015 UTC,There is no other good answer besides this.
androiddev,3dzyyx,Furkhail,1 point,Tue Jul 21 14:51:06 2015 UTC,"Create a timestamp which you can check everytime you query the table, then maybe have a task on start up to delete expired rows.  If having to check the timestamp for each query becomes cumbersome, you could create a view (that filters the rows) instead and use that."
androiddev,3dxznv,Rockmaninoff,16,Mon Jul 20 13:32:24 2015 UTC,"""We don't know who you are. We don't know what you want. If you are looking for high rent or a long commute, we can tell you we don't have those. But what we do have are a very particular set of skills, skills we have acquired over a very long and successful time.  Skills that make us a nightmare for companies like the ones you're currently working for.  If you join WillowTree now, that'll be the end of it.  We will build great software together.  But if you don't, you will build mediocre software, you will loathe your cost of living, and you will want something better.  Good luck.""  (AMA)"
androiddev,3dxznv,Richie681,9,Mon Jul 20 14:21:31 2015 UTC,"Company: WillowTree, Inc  Job: Android Software Engineer  Location: Charlottesville, VA & Durham, NC  Allows remote: No  URL: http://www.willowtreeapps.com/careers/android-software-engineer/  VISA: Maybe?"
androiddev,3dxznv,AnubisJcakal,6,Mon Jul 20 14:28:39 2015 UTC,"If you are looking for high rent or a long commute, we can tell you we don't have those.   then   Allows remote: No   I confused."
androiddev,3dxznv,boomchaos,6,Mon Jul 20 14:55:57 2015 UTC,"Current intern here: You'll probably be living in Charlottesville because they don't allow remote. Charlottesville has a pretty low cost of living and if you're living in Charlottesville, your commute will probably be under 10 minutes."
androiddev,3dxznv,Richie681,3,Mon Jul 20 15:01:23 2015 UTC,"This. Same with Durham. Traffic is pretty non-existent in either place usually, so commutes are nice (if you don't want to live within walking distance, which is pretty nice)."
androiddev,3dxznv,AnubisJcakal,2,Mon Jul 20 15:47:52 2015 UTC,"I should Clarify, I was being satirical in where any commute is a long commute.  I should not write satire with out more coffee."
androiddev,3dxznv,Rockmaninoff,2,Mon Jul 20 20:03:49 2015 UTC,"In addition to what a few others have mentioned, our offices are on pedestrian malls/campuses with apartments within a few blocks.  A huge percentage of us just walk to work!"
androiddev,3dxznv,hyunwoopark,1 point,Mon Jul 20 17:34:41 2015 UTC,"Hey guys! I'm currently an android dev in NYC and I'm really interested in joining your company in Durham, NC. I have about 9 months experience working on apps for clients for an ad agency.   I've been following you guys for a bit and every week I see you guys post. I have some questions for you guys.   I really want to work here however I can't leave my current work place for a couple more months. What is the likely hood that you guys will still be hiring around October/November-ish? How long is the interview process and how long does it take from first to last interview to receive an offer or hear feedback? Since I don't have any personal apps to show at the moment (swamped with work projects), I would like to create a sample app to demonstrate what I've learned. What libraries would you like to see being incorporated (I know the Square libraries were mentioned in the job post)? Although I have some experience from work now, I'm self taught with no CS background so I am still trying to learn as much as I can. My number one concern is becoming a better developer and I was was wondering if you guys were cool with hiring someone who is passionate and decently experienced with creating apps but still improving and learning all the best practices?  Kind of piggy backing off the last question, I was wondering in what ways you guys encourage and support further learning. Do you guys do any kind of code reviews (something that I wish I had but I work as the solo dev here), send even low level developers to conferences (google i/o, droidcon)?  Lastly what can I do to best increase my chances of getting a job with you guys?!"
androiddev,3dxznv,Richie681,4,Mon Jul 20 15:07:53 2015 UTC,"Very good. We're in the process of opening up that office, so we'll be hiring pretty aggressively until we build out teams down there A couple weeks is generally enough time for he whole process, but a lot of that has more to do with scheduling (in person meetings and what not). This is obviously not a guarantee, because it's usually pretty flexible.  Follow your dreams. We heavily use a lot of the common libraries (Retrofit, Dagger, etc) but more look for solid core coding practices than what libraries you use (although using the right libraries for the right problem could be a plus). We're all learning. Mobile is too fast paced to ever be done learning and trying to become better developers. Passion is definitely important, and if you're driven to be better it's usually a plus.  We do have code review, and we have weekly team lunches where we spread the word on any new or interesting pieces of knowledge we've picked up over the week. (Free food doesn't hurt either). We get one conference a year paid for by the company. We have a process for who goes where, since not everyone can go to Google IO at once. There is a way around that, where if you want to speak at a conference you can generally go to it even if you have another planned.  Send me eleventy billion dollars. Seriously though... be prepared, know some stuff, be passionate about making awesome apps.     If you're interested, you can PM me here and at least get a dialog going :)"
androiddev,3dxznv,Cg2XHPxz,1 point,Mon Jul 20 15:36:17 2015 UTC,not to be a douche (but I'm willing to be). It's really not smart to move from NYC to NC to work on mobile apps unless you actually have another reason to move to Durham.
androiddev,3dxznv,cariusQ,1 point,Mon Jul 20 19:31:02 2015 UTC,Also don't want to be a douche but why not? Is NYC really that much better than NC in term of career progression?
androiddev,3dxznv,Cg2XHPxz,1 point,Tue Jul 21 23:32:15 2015 UTC,In my opinion yes. especially for mobile apps. NYC is the second best tech market in the country. Of course it depends on a lot of individual factors
androiddev,3dxznv,firstsputnik,1 point,Tue Jul 21 23:54:05 2015 UTC,"Guys, do you have any relocation assistance?"
androiddev,3dxznv,Richie681,1 point,Mon Jul 20 15:10:56 2015 UTC,I believe we do.
androiddev,3dxznv,Rockmaninoff,1 point,Mon Jul 20 15:40:32 2015 UTC,"Yes, we definitely do. :)"
androiddev,3dxznv,Sleepwlker,1 point,Mon Jul 20 21:50:01 2015 UTC,"Just curious, but I noticed your requirements doesn't list a 4 year technical degree.  Does this mean you guys are open to hiring non degree developers?"
androiddev,3dxznv,Richie681,1 point,Mon Jul 20 18:44:30 2015 UTC,"We have a few very good developers that are all self taught. A degree is a definite plus, but not a deal breaker if you're an awesome developer without one."
androiddev,3dxznv,BikerMouseFromMars,4,Mon Jul 20 18:53:46 2015 UTC,"oh god dammit, your weekly whos wiring posts get better from week to week. To bad that I'm on the other side of the ocean."
androiddev,3dxznv,Richie681,2,Mon Jul 20 18:04:39 2015 UTC,If you start swimming now you'll get here in no time!
androiddev,3dxznv,BikerMouseFromMars,1 point,Mon Jul 20 18:34:50 2015 UTC,"guess it would be easier to take a plane. Surprisingly there even is a direct connection to Durham, NC from my home town.... Oo"
androiddev,3dxznv,bertweaze,1 point,Mon Jul 20 18:58:42 2015 UTC,"Hey ya'll, I've noticed you guys have been posting this same post on every thread for weeks now...how is the job search coming along? And why haven't you been able to fill positions? Just curious."
androiddev,3dxznv,Rockmaninoff,4,Mon Jul 20 18:44:59 2015 UTC,"Well, a few things here I'd say:   Our company has experienced a ton of growth and is showing no signs of stopping, so we are essentially in an ""always hiring"" mode A lot of us are frequent /r/androiddev lurkers, so it makes sense to post here each week I enjoy expressing myself creatively by coming up with ""fun"" comments to post in this thread that are different from the template   For what it's worth, we've had three new people join our Android team in the past six weeks or so. So we are definitely filling the positions, there are just a lot of positions to be filled."
androiddev,3dxznv,Richie681,1 point,Mon Jul 20 19:28:40 2015 UTC,"We've been hiring :) We have a whole second office to fill now, so it's not like we're looking for a single dev."
androiddev,3dxznv,lacronicus,1 point,Mon Jul 20 18:58:00 2015 UTC,"Since we're a client services company, our business scales with how many developers we have to put on projects. Our iOS team almost doubled in size over the past year, now up to more than 20 developers, and I'm sure we'd be happy to do the same with our android team.   It's not like we've got one or two spots to fill, and when you're looking to hire 5-10 new android developers, you're going to be looking for a long time."
androiddev,3dxznv,drkcsm,7,Tue Jul 21 14:26:45 2015 UTC,"Company: Metalab / Flow   Job: Android Developer  Location: Victoria or Vancouver B.C.  Remote: YES!  Job page: http://metalab.co/careers/    We're an Android team of 2 here and are looking for someone who's experienced enough to be fairly autonomous, create deadlines for themselves, and get things done to a high level of quality. If that someone sounds like you then we should talk!   | Please email tim@metalab.co | fancy resume's are not necessary, in-fact we'd rather just see your past projects or a link to your website :)"
androiddev,3dxznv,AtherisElectro,3,Mon Jul 20 21:36:11 2015 UTC,Just wanted to say it looks like you guys do beautiful work.
androiddev,3dxznv,drkcsm,1 point,Mon Jul 20 21:55:03 2015 UTC,Thanks! we try
androiddev,3dxznv,agonist59,1 point,Mon Jul 20 22:22:37 2015 UTC,"Look great ! When you say Remote, you want remote people from US or anywhere is ok ?"
androiddev,3dxznv,tsuharesu,2,Tue Jul 21 09:11:56 2015 UTC,Anywhere :)
androiddev,3dxznv,agonist59,2,Tue Jul 21 12:46:56 2015 UTC,Great to know ! I'll send my application soon :)
androiddev,3dxznv,prite,7,Tue Jul 21 13:01:07 2015 UTC,"Company: PSTakeCare Job: Android Software Engineer Location: Mumbai, India Allows remote: no"
androiddev,3dxznv,markyosullivan,2,Mon Jul 20 15:06:14 2015 UTC,Think this is the first time I've seen someone hiring from India. Good to see!
androiddev,3dxznv,psyphen,2,Tue Jul 21 01:40:19 2015 UTC,"Company: Open Whisper Systems  Job: Android Software Engineer  Location: San Francisco, CA  Allows remote: No  URL: https://whispersystems.org/workworkwork/  Is the pleasure center of your brain directly wired to the experience of a slick UX or a nice animation? Do you hunt down memory leaks and StrictMode violations for fun? We're looking for someone with deep knowledge of the Android framework and an equally strong intuition for pairing beautiful app experiences with beautiful code. You'll be the architect of major features, making your code available to the world. You don't need to be a security expert; it's knowing how to make complicated systems simple to use that's at the heart of what we do.  Send us a note at workwithus@whispersystems.org. We look forward to hearing from you."
androiddev,3dxznv,alostpacket,1 point,Tue Jul 21 01:03:56 2015 UTC,"The Hackerati  Android Engineer  NYC, NY  http://grnh.se/tr7yo3  The Hackerati is a high-end, boutique consulting firm delivering Engineering as a Service to diverse clients, from Fortune 250s to startups.   We’re different. With mottos like be fearless and weird is good, our unique perspectives on life and technology make us great people to learn from and work/party with. We sponsor lunches and happy hours, band practice, electronics like Glass/Oculus/Myo, and we’ve presented at the UN—twice. We rock that familial vibe, and you should join us if you enjoy a blurred line between work and play.  Hackerati consultants are like The Wolf from Pulp Fiction: we solve problems. Hard ones. To do so, we deploy teams of Hackerati to work onsite with clients around NYC, and also build products in-house, both for ourselves and clients. A typical project lasts between 6 and 9 months—say goodbye to getting stuck doing the same shit!  No visa sponsorships, sorry. No remote, but we sometimes WFH."
androiddev,3dz23p,androidguy1234,1 point,Mon Jul 20 18:15:16 2015 UTC,"If you'd like some freedom and unstable income but without the 40hr/week, a startup company might be a great place to work.  You get to make a lot of decisions on your own and generally have a big impact on the company - at least in the early stages.  It is however a high risk job since a lot of those companies don't have much more than equity to offer in the beginning. But that could definitely pay off in the long run."
androiddev,3dz23p,jarlefo,2,Mon Jul 20 22:24:48 2015 UTC,Maybe you've had different experiences but I've found that startups are more geared toward 50+ hour work weeks. At least when I've worked at startups that was the case.
androiddev,3dz23p,jarlefo,1 point,Tue Jul 21 05:05:28 2015 UTC,"That is probably correct. If you are the lead developer, or something, they want you to work while you're sleeping as well.  But in my experience there are startups that take advantage of students and offer them part time jobs which can be between 10 and 30 hrs/week. So there might be something out there."
androiddev,3dz23p,timusus,2,Tue Jul 21 13:24:40 2015 UTC,"It probably depends a little on where you're based.   Anyway, I reckon there's plenty of work out there for all kinds of Android developers. If a company could use someone for 20 hours a week, they're probably not desperate enough to go seeking someone out, so I would recommend you just get in touch with a bunch of small development companies, preferably nearby if you're not too remote.   Be proactive, you'd be surprised how many places want someone but don't advertise it."
androiddev,3dz23p,slimedues,1 point,Mon Jul 20 22:22:26 2015 UTC,Im in Canada and can legally work in the US as well.
androiddev,3dynlq,marksizzle,2,Mon Jul 20 16:35:02 2015 UTC,I haven't used it with NDK but I did port Google's IO app to it - https://github.com/madisp/iosched/tree/gradle-experimental.  What error are you seeing?
androiddev,3e1elh,bitgriff,1 point,Tue Jul 21 05:26:37 2015 UTC,Relative Layout and then add some padding.
androiddev,3e1elh,Zookey100,2,Tue Jul 21 05:45:48 2015 UTC,No. Not RelativeLayout.  This method works with any layout. And it doesn't require to put banners into layout xml or create them from code. Just one line of code in Activity's onCreate method.
androiddev,3dyrkh,sellers04,7,Mon Jul 20 17:02:27 2015 UTC,"Depends on app you have assigned. Add offline mode if it presents some content. Add animations for screen changes, support of different themes if applicable. Add search functionality.  deep linking with share links etc. Android Wear integration for some common use cases or actions."
androiddev,3dyrkh,Magillus,3,Mon Jul 20 20:13:56 2015 UTC,"As a student in a very similar situation (except that our app is never ""finished"", we keep making improvements and updating), definitely do UI and fringe things like the above poster recommends. Being able to animate and make transitions look smooth and professional is something they don't teach you in class, and will put your portfolio way ahead of the others. Trust me, I already have a job after I graduate this upcoming May."
androiddev,3dyrkh,sonictt1,2,Mon Jul 20 22:26:46 2015 UTC,We definitely have a focus on design and visual appeal. Something we don't underestimate the value of! Thank you both for your helpful comments.
androiddev,3dyrkh,akgamecraft,4,Mon Jul 20 23:29:26 2015 UTC,"Start another project, preferably something very different to your current one. More for your resume and it'll develop skills you may not have needed until now."
androiddev,3dyrkh,boonexus,3,Mon Jul 20 19:23:33 2015 UTC,I'm sorry it was difficult to express my situation fully in the post. I can't simply start a new project (although I'd love to!). I have full control over how I spend my time working on the app assigned to me.
androiddev,3dxl2k,pandanomic,5,Mon Jul 20 10:57:59 2015 UTC,"ViewPagers - Why not have a presenter per fragment in the pager/tab?  PreferanceFragment - You might get away without needing any MVP/Injection here if it's purely SharedPreference based. However if you have a ""clear cache"" option for example, you can have the DataManager injected into the presenter so that you can manipulate the data if necessary. Essentially just treat it as a typical Fragment. Distributing API results to multiple views - Otto? Typically when I perform a network request I broadcast the result. Anyone listening can get hold of the result and do what they like with it. An example of this is downloading data, storing it in the database, broadcasting a success event and any listener receiving the event can load the data from the database."
androiddev,3dxl2k,Glurt,2,Mon Jul 20 11:23:58 2015 UTC,All good points. Could you elaborate more on a general fragment approach though? Considering the design support lib example:  Activity -- Fragment ---- CoordinatorLayout ---- TabLayout/ViewPager ------ Tabs/child fragments -------- fragment's view   Are these all going to have their own presenters? Especially given that the fragments require an activity context to be available to manage them. Might be an Activity scope/module/component implementation I'm missing
androiddev,3dxl2k,ridsatrio,2,Mon Jul 20 11:56:41 2015 UTC,"Fragments should be the only ones that need a presenter for each of them. So in your case, it's gonna be the topmost Fragment (the direct child of your Activity) and, if you feel like you need it, its children (the tabs/child ones).  If you want to keep it simple, you can just make a presenter for the top-most one and just manage its ViewPager children as a View. (Yes, yes you can use ViewPager without Fragments.)  That said, keep YAGNI and KISS in mind when dealing with things like this. MVP adds a quite an amount of complexity and, more often than not, could make it harder for you to fully utilizing the platform-specific features (your ViewPager is a good example)."
androiddev,3dxl2k,GGDev,2,Mon Jul 20 12:21:57 2015 UTC,"Welcome to a world of pain. But seriously we (/u/Glurt is my colleague) had around 3 weeks of suffering trying to figure this out for ourselves. I agree with your assessment of online examples being a bit lax when it comes to the nitty gritty. Hopefully now that the project that we used MVP and Dagger 2 for is coming to an end i can get an example up showing how we went about it. And trust me it won't be the ""best"" way but a way we managed with.   Considering your example above:   Activity would have a presenter (not neccessary if it's not displaying anything in our opinion, e.g. it's just loading fragments, but that's up to you)  Fragment would have a presenter CoordinatorLayout (see /u/Glurt upcoming response) TabLayout/ViewPager don't really need one, they are just like an activity loading a lot of fragments Tabs/Child Fragments would all have presenters Fragment's view? Not necessary with the Tab/Child Fragment having a presenter   Just be prepared for your code base to explode. This is the biggest code base for an Android project i've ever worked on. Then again i haven't worked on many!  Surely the activity that hosts the fragments can deal with managing them? We didn't user ""Interactors"" in our project, instead just passed everything back to the relevant activity to load up whatever we needed using Otto."
androiddev,3dxl2k,konk3r,1 point,Mon Jul 20 12:54:56 2015 UTC,"I've been using Otto a lot for passing data and I'm starting to phase it out almost entirely for that. The current usage I've been playing around with is using Otto to manage communication from views/fragments back to activities, but using Rx observables for data passing.  Otto feels like it gets complicated easily and doesn't feel like the right approach when you have to start doing things like filtering by item ID in a view pager to make sure you're updating the right view.  That aside, I like having a base Activity that has a presenter to manage the CoordinatorLayout, Toolbar, placing items into the main content view, then each main view which is placed into the content view would have its own presenter. (I'm also moving away from fragments and trying to manage everything with just views and activities, but everything would work the same way with fragments)."
androiddev,3dxl2k,Glurt,1 point,Mon Jul 20 20:10:25 2015 UTC,"The CoordinatorLayout is essentially a fancy LinearLayout, you wouldn't have a presenter for a LinearLayout so you wouldn't have one for the Coordinator.  Looking at your hierarchy I suspect you could simplify it a bit, have a look at Cheesesquare. It has a similar architecture to what you seem to be going for.  Activity -- CoordinatorLayout --- TabLayout / ViewPager ---- Child Fragments   So in essence you have an Activity that has tabs/viewpager, you may have a Presenter to help handle the logic of the tabs depending on what you're displaying. Each Fragment within the tabs has its own Presenter that takes care of that Fragment."
androiddev,3dxl2k,insane-cabbage,2,Mon Jul 20 12:59:22 2015 UTC,"First of all: I wouldn't consider MVP as an application architecture, but more as a UI pattern.   ViewPagers: If the ViewPager contains Fragments, the Fragments themselves should have their own presenters. Otherwise, the Fragment which holds the ViewPager should have a presenter per view or maybe even the PagerAdapter.  Fragments: I use to inject the presenter into the Fragment. This way I have better control over the lifecycle via binding/unbinding to the presenter. Distributing API results to multiple views: Let the presenters observe the same Loader or RxJava-Observable.   Sorry, I don't go into detail. There are a lot of articles about this stuff which are more comprehensive than I could write it up."
androiddev,3dxl2k,insane-cabbage,1 point,Mon Jul 20 11:56:15 2015 UTC,Inject the presenter beyond some simple callbacks (create/destroy)  How do you expose that to the presenters through several layers of UI? Should a ViewPager fragment know that much about its parent's parents?  Care to share those articles? The main reason I'm posting this is because most of the ones I come across tend to be very simple examples.
androiddev,3dxl2k,getonmalevel,2,Mon Jul 20 12:01:17 2015 UTC,"Well if you use dagger the Fragments won't need to know their parent's parent.  I do injection in Fragments like this:   The Fragment defines an ""Injector"" Interface which is extended by the dagger Component-Interface which does the injection. The parent Activity must implement the ""ComponentProvider<T>"" Interface which just defines a ""T getComponent()"" method  public class UserSearchResultFragment extends Fragment {      @Inject UserSearchResultPresenter presenter;      @Override     public void onActivityCreated(@Nullable Bundle savedInstanceState) {         super.onActivityCreated(savedInstanceState);         injectFields();     }      private void injectFields() {         try {             ((ComponentProvider<Injector>) getActivity()).getComponent().inject(this);         } catch (ClassCastException e) {             throw new ClassCastException(getActivity().toString() +                     "" must implement ComponentProvider<> and provide a component which extends "" +                     getClass().getSimpleName() + "".Injector"");         }     }      public interface Injector {         void inject(UserSearchResultFragment fragment);     } }    Unfortunately I never keep those articles around after I've read them. I'm sorry :("
androiddev,3dxl2k,insane-cabbage,1 point,Mon Jul 20 12:49:07 2015 UTC,Out of curiosity what do you consider a application Architecture?
androiddev,3dxl2k,getonmalevel,1 point,Mon Jul 20 20:57:00 2015 UTC,"Well, good question. I don't really know. Maybe MVP is part of it but. Probably it's more about how you structure business logic, data persistence and UI.  The only thing I'm sure, it's that - for me - MVP is not the architecture ;-)"
androiddev,3dxl2k,insane-cabbage,1 point,Tue Jul 21 05:36:58 2015 UTC,"So i suppose in your mind you care about how one goes about specific implementations, say Glide vs Picasso, Sugar vs SQLite, GSON vs Jackson, so forth"
androiddev,3dxl2k,konk3r,1 point,Tue Jul 21 05:45:24 2015 UTC,"Uhm... perhaps? However, I'd want to abstract those components as far as possible (although there's never time for that -.- ).  To be honest I never looked up the proper definition of application architecture nor did I make up my mind about it how I see it.  How do you see it? What makes an application architecture for you and how does MVP fit into it?"
androiddev,3dxl2k,getonmalevel,1 point,Tue Jul 21 06:38:11 2015 UTC,"Application architecture is basically just the way you organize classes. Like you said, the way you piece together your business logic, data persistence and UI all goes into play with it. MVP is a big part of architecture as it's how you connect the business logic to the UI, although it's definitely just one piece."
androiddev,3dxl2k,prlmike,1 point,Tue Jul 21 15:31:20 2015 UTC,"In my opinion architecture is every decision in regards to why and what you choose to use in the back to what sort of design you want to have in terms of the flow of the app (root activity with a fragment pattern, etc).   That's why I think MVP/ MVVM is the architecture combined with the decisions of which libraries to use etc. That's where the interactor part comes in, wrapping your database layer/disk."
androiddev,3dxl2k,spectrl,1 point,Tue Jul 21 16:20:38 2015 UTC,"Here's my example I use to teach rx.   Features: using view Observables, reacting to scroll events (endless scroll) controlling 2 views with 1 presenter, RxDAO with caching, using publish subjects as a bus and wiring everything together with Dagger1.  https://github.com/digitalbuddha/RxStarter"
androiddev,3dxl2k,HannesDorfmann,1 point,Mon Jul 20 14:19:04 2015 UTC,"A lot of the examples also seem to gloss over handling configuration changes - usually by just reloading the data in the case of a listview.  I know some libraries, like Mosby and Nucleus, like to persist Presenter instances through config changes either by retaining Fragments or caching the presenter instance, then restoring the view state (another potential issue).  To re-create a more complex UI after a config change I was thinking that it may not be entirely necessary to keep the presenter instance around, but instead simply reload data - I'd do it via a Repository pattern - when the presenter is re-created. Long-running operations can be handled using the RxJava cache and replay operators.  If I was to restore the view state though, I think I'd probably create a ViewModel object to represent the UI state at any given point in time. It can be updated ""automatically"" by binding your android views to your ViewModel fields using RxJava Observables. I would then save/restore it via lifecycle methods that called through to my Presenter. Or something like that!  I'm just working through this now, and would be interested to hear how you lot handle this and any pros/cons etc..."
androiddev,3dxbky,MCSenss,10,Mon Jul 20 08:39:57 2015 UTC,"Yes, you should register a ""Gewerbe"". And no, I didn't go to a tax adviser. Until you make a certain amount of profit a year (look it up), you can make use of the ""Kleingewerberegelung"". It makes your life a lot easier in terms of taxes and bookkeeping, so you don't really need a tax adviser at first.    EDIT: In case you're from a country outside of the EU, keep your Aufenthaltsgenehmigung ready, you will need it for the registering process."
androiddev,3dxbky,crunchy1992,13,Mon Jul 20 09:29:00 2015 UTC,Whenever I see German words mixed into English like this I can't help but feel like they're being made up on the spot
androiddev,3dxbky,Stoic_stone,4,Mon Jul 20 17:00:24 2015 UTC,"Hahaha thanks for the reply. Sounds fair enough!  Just a short question. Today I ordered a graphic tablet, is it possible to retroactively write it off against the tax? Otherwise I send it back and buy it again."
androiddev,3dxbky,PlutoSucks,9,Mon Jul 20 09:40:41 2015 UTC,"You're worrying about taxes way too soon. 99% of apps won't ever amount to something even worth trying to legally protect. I don't mean to be discouraging, but just look around a while before settling in. The android playground is brutal."
androiddev,3dxbky,erwan,2,Mon Jul 20 10:21:06 2015 UTC,"It's not about legal protection, is about not breaking the law.  Even if you only make $1 with your app, this dollar must be declared.  Granted, you don't risk much if you're only hiding small amounts to your tax administration (very small penalty if caught) but that doesn't mean it's a good advice to give."
androiddev,3dxbky,Stazalicious,-3,Mon Jul 20 18:28:54 2015 UTC,You haven't answered the question in any way at all.
androiddev,3dxbky,crunchy1992,1 point,Mon Jul 20 17:30:52 2015 UTC,"I couldn't tell you, other than what I need to know for my tax declaration, I'm not too familiar with tax code. But I bet that would be something you can find using Google :)"
androiddev,3dxbky,renanferrari,1 point,Mon Jul 20 09:44:07 2015 UTC,"It's amazing how Google Translate had to use 5 words to translate ""Kleingewerberegelung"" to my native language."
androiddev,3dxbky,geft,1 point,Mon Jul 20 15:26:33 2015 UTC,It's a bunch of different German words glued together.
androiddev,3dxbky,erwan,1 point,Mon Jul 20 16:21:57 2015 UTC,"In German it's common to make up words by gluing several together, so it's not that surprising."
androiddev,3dxbky,HaoChen,4,Mon Jul 20 18:31:12 2015 UTC,"German student here working in app business for over a year. If you just want to develop apps for other people or create websites -> ""Freier Beruf"". If you want to sell apps -> ""Gewerbe"". I'd recommend (as already mentioned) the ""Kleinunternehmerregelung"". It basically means you don't need to pay taxes if you earn less than 18.500€ per year but it also means you can't write your new device off. If you want more information your local ""Industrie- und Handelskammer"" will offer a free ""Beratungsgespräch"".  EDIT: No tax advisor needed. The ""Finanzamt"" offers a website called ""Elster"" which is easy to use. When registering for ""Gewerbe"" you need to pay a small fee to your local ""Gewerbeamt""."
androiddev,3dxbky,Abascus,3,Mon Jul 20 13:08:45 2015 UTC,That's some proper Denglisch xD
androiddev,3dxbky,stefanhoth,1 point,Mon Jul 20 14:19:40 2015 UTC,"Thanks for the information! I probably go and ask them because of a quite difficult situation with a child, a scholarship and a paid internship.  E: Unfortunately the consulation costs 45€. That's a  little bit too much I guess."
androiddev,3dxbky,HaoChen,1 point,Mon Jul 20 17:48:54 2015 UTC,"Just to clarify: There are different meanings of ""writing off"" mixed up here:   writing off taxes usually means: You count your income. Count your expenses. Pay tax on the difference (= profit). When you buy something for your business you can either use the full amount or a percentage of it (depending on the product and value) to increase your expenses for the year thus effectively reducing your tax. This can be done also as a Kleingewerbe (small business clause). writing off the VAT (Umsatzsteuer): When operating under the Kleingewerberegelung (small business clause) you don't invoice with VAT so in return you can't request a refund on paid VAT for things you buy, meaning everything is 19% more expensive for you than for a ""normal"" company. In return you don't need to collect VAT from your customers and send to the Finanzamt (tax office) every month/quarter.   Hope that helps."
androiddev,3dxbky,stefanhoth,1 point,Mon Jul 20 22:04:15 2015 UTC,You can't write off something you buy to reduce your tax as Kleinunternehmer as you don't pay any taxes.
androiddev,3dxbky,HaoChen,1 point,Mon Jul 20 22:25:44 2015 UTC,"Plain wrong and common misconception. You pay taxes as soon as you have more income than the ""Existenzminimum"" which is a tax free zone (something along the lines of 7-8K/year, updated each year). There is a region in which you earn more than that but not enough to loose the status of the Kleingewerbe and that's when you start to pay Einkommenssteuer (income tax)."
androiddev,3dxbky,ueman,1 point,Mon Jul 20 22:29:18 2015 UTC,After looking it up it seems you are right. Taxation is such a complex topic!
androiddev,3dxbky,stefanhoth,3,Mon Jul 20 22:47:10 2015 UTC,"I'm also a student from germany. I've made a ""Kleingewerbe"" for my business. However it doesn't make sense if you just started. Just register a ""Kleingewerbe"" if you start making some money. Send me a pm if you have further questions."
androiddev,3dxbky,PlutoSucks,1 point,Mon Jul 20 12:25:42 2015 UTC,I'd say that's the winning answer.
androiddev,3dxbky,DoctorDbx,11,Mon Jul 20 22:06:55 2015 UTC,"You and about a 100k others are trying to do the same thing.  The gold rush is over. If your sole motivation is money, then there are less masochistic ways to earn money.  Seriously, at this point, I no longer recommend people START android development. Right now there's 1.5 million apps on the play store. By the time you're actually capable of making a decent product, after playing catch up with the constant new releases for a couple years, you still probably won't make any money. You're living in germany? I honestly think the minimum wage would be better pay than android development. (Statistically speaking)"
androiddev,3dxbky,MotokoKami,12,Mon Jul 20 09:40:33 2015 UTC,"Yes and No.  I think the idea of:   Step 1 - write shitty app. Step 2 - publish shitty app. Step 3 - profit.   Is long gone and will never come again, but there is still a huge demand for quality developers who can write apps properly and build solid applications, either B2B and B2C.  Just looking at the schedule, over the next month I have 3 app updates, 2 new apps, and continuing development of another 2 apps.  Am I millionaire? No, but I'm making a 6 figure income in the backwaters of Australia."
androiddev,3dxbky,MotokoKami,6,Mon Jul 20 09:46:12 2015 UTC,"Bingo, app development is still huge and startups etc. look constantly for developers. Even if you don't make that one in a million app you will still have a job that puts you in the high income bracket of every first world nation.  Just this year a German developer team cashed out after 3 years on their app and made roughly 200 Million €."
androiddev,3dxbky,sutto85,3,Mon Jul 20 09:58:04 2015 UTC,"No need to be a smartass. Yes, it won't happen to any of us with 99,9% chance, but being an Android Developer is still a very good job and the money is still flowing, hence my example."
androiddev,3dxbky,DoctorDbx,1 point,Mon Jul 20 10:11:29 2015 UTC,"back waters of Australia you say? me too, looking for an intern? ;)"
androiddev,3dxbky,oreo_man_,1 point,Mon Jul 20 10:13:11 2015 UTC,Where are you based?
androiddev,3dxbky,sutto85,1 point,Mon Jul 20 13:11:41 2015 UTC,I'll just drop in here. I'm from NZ. I'd be happy to cross the ditch over summer. I have one app in the play store
androiddev,3dxbky,fadelakin,1 point,Mon Jul 20 13:38:18 2015 UTC,"Im in Bundaberg QLD, probably moving toward Brisbane soon, Im still pretty noob though, a lot to learn :("
androiddev,3dxbky,DoctorDbx,1 point,Mon Jul 20 23:14:33 2015 UTC,How do you find work to pull off that kind of income? Sorry if that's rude to ask. I want to get into freelance/contract work or fulltime work working remotely but I haven't found anything yet.
androiddev,3dxbky,fadelakin,1 point,Tue Jul 21 00:28:10 2015 UTC,"These days it is all word of mouth. My last few projects all found me through previous clients, so I can say I have been fortunate there... but hey, if you do good work then that advertises your business.  And um... not working for free. I know it seems difficult to get into the game, but doing free work just devalues your services and puts you at amateur level."
androiddev,3dxbky,cjrun,1 point,Mon Jul 20 19:29:09 2015 UTC,Totally understand. Guess I just have to keep building things and spread my name around.
androiddev,3dxbky,internetgoblin,5,Mon Jul 20 20:43:36 2015 UTC,"You are limiting your domain to smartphones, and smartphones that are primarily available in the Western World at that. As India, the middle east, and Africa become mobilized, Android will be the platform that they use.   The technology itself upgrades every 12 months or so as devices get more powerful and more features. Many apps made in 2012 currently need major overhauls just to be optimized for that. Cultural shifts like front facing cameras, giant phablet screens, material design, etc were predicted years ago but did not exist and apps could not make use of them. Technology and cultures shift. Android is definitely in the right place to take advantage of this future.  You are also writing off that almost every new car sold now comes with an Android based operating system, smart homes are using Android, and television sets. Then there are wearables like Android watches, digital eyewear, fitbit trackers etc.   Finally, minimum wage would be better? Statistically speaking? You are just making things up now."
androiddev,3dxbky,pakoito,3,Mon Jul 20 20:44:38 2015 UTC,less masochistic ways to earn money   Out of curiosity are these ways in the self-employed developer world? I always assumed my best chance would be Android Apps.
androiddev,3dxbky,Nilzor,1 point,Mon Jul 20 13:08:16 2015 UTC,"Noodles, or noodles and taxes? Tough choice."
androiddev,3dxbky,drabred,1 point,Mon Jul 20 12:48:15 2015 UTC,"Basically I want to program apps and eventually earn money with it, does that mean I have to start a business before I can even do that?   No.  Like people in this thread state, it's hard to make a living out of own products (I've tried) but not impossible. But don't waste your precious time on paper work before you've got an income the government care about."
androiddev,3dz78u,jusleg,4,Mon Jul 20 18:50:51 2015 UTC,Here's a good link for getting started Collapsing Toolbar.
androiddev,3dz78u,Glurt,1 point,Mon Jul 20 19:36:03 2015 UTC,Thanks for the info I will definitely look at this.
androiddev,3dz78u,HashFunction,3,Mon Jul 20 19:49:04 2015 UTC,http://antonioleiva.com/collapsing-toolbar-layout/
androiddev,3dz78u,HashFunction,0,Mon Jul 20 19:34:30 2015 UTC,Thanks for the info. I'll figure out a way to make this work with 4.0+ devices
androiddev,3dz78u,getonmalevel,5,Mon Jul 20 19:49:39 2015 UTC,"it uses the support library, it should work fine with 4.0+ devices"
androiddev,3dyad4,sivarttech,5,Mon Jul 20 14:59:07 2015 UTC,"I am a fan of Fragmented. I know that there is a new one I've seen on Pocket Casts called Material, but I haven't checked it out yet"
androiddev,3dyad4,krs00pxy,4,Mon Jul 20 17:23:33 2015 UTC,Thanks for the mention and thanks for the listen! :)
androiddev,3dyad4,donnfelker,1 point,Mon Jul 20 21:34:38 2015 UTC,Based on the first show Material seemed less developer oriented and more just about Android in general.
androiddev,3dyad4,boralyl,4,Mon Jul 20 19:52:25 2015 UTC,Android Backstage is the other one to add to your listening schedule.
androiddev,3dyad4,codeledger,2,Mon Jul 20 17:45:29 2015 UTC,"Android Backstage   Yeah, that was on the list."
androiddev,3e0vwy,askthepoolboy,1 point,Tue Jul 21 02:32:52 2015 UTC,"Yeah, you can download the docs using the SDK Manager and open them from the docs directory."
androiddev,3e0vwy,veeti,1 point,Tue Jul 21 03:14:39 2015 UTC,"Cool, thanks!"
androiddev,3e0vwy,siddharth96,1 point,Tue Jul 21 03:28:09 2015 UTC,"If you're on Mac, you can try: https://kapeli.com/dash"
androiddev,3e0qtk,seanvhennessey,4,Tue Jul 21 01:51:34 2015 UTC,http://developer.android.com/develop/index.html
androiddev,3dzbkw,instantbitsapps,2,Mon Jul 20 19:22:15 2015 UTC,You have non-gaming apps doing well on the MoPub marketplace? I tried it for a while and got absolutely awful returns. Way lower than admob for me.
androiddev,3dzbkw,stevepw,2,Mon Jul 20 21:13:04 2015 UTC,MoPub marketplace does the best for me in terms of cpm but they don't show as many ads per day as AdMob or Millennial. I went through MoPub support to setup all their recommendations in terms of minimum cpm and creating a special order just for Marketplace and that helped a lot but it was already performing well before that.
androiddev,3dzbkw,stevepw,1 point,Mon Jul 20 21:17:44 2015 UTC,Ahh interesting okay. I found their whole setup to be extremely complicated and just ended up rolling my own built in waterfall.. which isn't as good but at least I understand exactly how to use it.
androiddev,3dzbkw,stevepw,1 point,Mon Jul 20 21:24:47 2015 UTC,"Yeah their setup is complex. I used their support a lot, thankfully they actually helped.   So if you don't mind me asking, which ad networks perform well for you?"
androiddev,3dzbkw,scangwinnett,1 point,Mon Jul 20 22:32:54 2015 UTC,"My apps are very niche non-gaming apps. I've tried the mopub network and app lovin. Had WAY better results with AdMob. But, admittedly, I didn't give app lovin very much time to sort itself out before I switched back to admob as the primary. Their algorithm I think works better given some time. I might try it again with one app when I'm in a more comfortable financial position to experiment."
androiddev,3dzbkw,scangwinnett,1 point,Tue Jul 21 01:10:45 2015 UTC,Thanks for the info.
androiddev,3e1nba,NathanWick,3,Tue Jul 21 07:07:00 2015 UTC,not that Visual Studio 2015 is good or bad but Android Studio is already very good and plus it is officially supported by Google. Not sure why you'd want another IDE
androiddev,3e1nba,jedld,0,Tue Jul 21 08:37:18 2015 UTC,Not just yet.
androiddev,3dx0s4,okmkz,12,Mon Jul 20 06:09:39 2015 UTC,"I'd caution you to not take that as gospel. Rxjava is a flavor of the month (not that that is necessarily a bad thing). Loaders do have advantages in integrating with the activity/fragment life cycle better than almost anything. Best thing you can do is learn as much as you can, experiment, and make your own discerning decisions about the best tool for your needs"
androiddev,3dx0s4,Cg2XHPxz,3,Mon Jul 20 10:21:38 2015 UTC,"Oh I get it. Loaders have the advantage of originating outside of the activity lifestyle (for all intents and purposes) but they're still pretty narrow in scope. Rx on the other hand has to originate from within the activity lifestyle, and I'll be damned if I use it without fragments or possibly a service"
androiddev,3dx0s4,stefanhoth,4,Mon Jul 20 10:38:12 2015 UTC,"activity lifestyle (for all intents and purposes)   Wanted to upvote twice for ""lifestyle"" and the pun on ""intents""."
androiddev,3dx0s4,HaMMeReD,1 point,Mon Jul 20 21:37:06 2015 UTC,"You can use rx outside the activity, put it in the application or a service."
androiddev,3dx0s4,jackhexen,5,Mon Jul 20 15:05:55 2015 UTC,"I use SyncAdapter with a stub ContentProvider. SyncAdapter makes your synchronization battery-friendly, so no reason to drop it. It also provides a nice control with AccountManager for user."
androiddev,3dx0s4,Thanael,7,Mon Jul 20 08:05:42 2015 UTC,"The JobScheduler API replaces most of the functionality (except the 'sharing data between apps' part) of what you want from SyncAdapter, the only problem is that it's API level 21+, but that will become less and less of a problem as time passes..."
androiddev,3dx0s4,JakeWharton,1 point,Mon Jul 20 06:19:57 2015 UTC,Backport pls
androiddev,3dx0s4,JakeWharton,12,Mon Jul 20 06:27:48 2015 UTC,Already in Play Services.
androiddev,3dx0s4,ZakTaccardi,2,Mon Jul 20 06:38:04 2015 UTC,"Thanks dude  Edit: it sure isn't easy to Google. Wait, Network Manager? Is that what you're talking about?"
androiddev,3dx0s4,stefanhoth,9,Mon Jul 20 06:43:21 2015 UTC,It's called something strange like GcmNetworkManager (I think).
androiddev,3dx0s4,scanarch,1 point,Mon Jul 20 06:46:02 2015 UTC,"Ah, the gcm bit threw me off."
androiddev,3dx0s4,kosokun,2,Mon Jul 20 06:53:02 2015 UTC,yeah it's a weird wording. I wonder why Google Analytics doesn't use GcmNetwork Manager.
androiddev,3dx0s4,Shayba,1 point,Mon Jul 20 12:41:30 2015 UTC,I think although it's part of the GMS distribution dev-side Google Analytics is not bound to the existence of Google Play Services on the device (so it will work for Kindle etc). Might be wrong though.
androiddev,3dx0s4,kosokun,2,Mon Jul 20 21:39:39 2015 UTC,Link for interested ppl: https://developers.google.com/cloud-messaging/network-manager
androiddev,3dx0s4,Shayba,1 point,Mon Jul 20 10:33:53 2015 UTC,"Very good question, I'd love to see an elegant alternative to SyncAdapter, like RxJava is for the Loaders."
androiddev,3dx56t,ssk360,2,Mon Jul 20 07:06:17 2015 UTC,"It's relatively secure and safe to use. Google, Facebook, Outlook, etc. all use the AccountManager APIs, to give you an idea of their adoption.  Obviously a compromised device can't guarantee any security, but the AccountManager performs its job well."
androiddev,3dx56t,RugbyDev,1 point,Mon Jul 20 22:01:02 2015 UTC,It depends what you mean by secure. Anything stored on the device is not secure if a malicious person has said device. At that point not even https will save you because the connection can be proxied. The security is entirely dependent on the user.  On the other hand if you use something like oauth2 you only save a token that can be invalidated if noted as being stolen. The real sensitive information is stored on the server. This way the security issues are all things you control.   tldr security on the device is only as good as the user makes it.
androiddev,3dx56t,Dr_Jimmy,2,Mon Jul 20 15:50:58 2015 UTC,"This doesn't come close to answering OP's question. OP wants to know whether or not, assuming client-side storage is necessary and considering alternatives, AccountManager is a suitable solution."
androiddev,3dx56t,ohsothisisreddit,4,Mon Jul 20 19:42:31 2015 UTC,"This is /r/androiddev mate, I think you didn't read the subreddit name 😛"
androiddev,3dx56t,rikardo_92,2,Mon Jul 20 08:26:07 2015 UTC,Oopsies. Sorry!
androiddev,3dx56t,Boppel,1 point,Mon Jul 20 10:17:07 2015 UTC,what did he post?
androiddev,3dxfup,PlutoSucks,6,Mon Jul 20 09:43:28 2015 UTC,"Sometimes things don't just come to you on a silver platter.  Google for Java MP3 libraries that can do both decode and encode. Learn the library API. Then integrate it into your app.  If there is no existing Java library that suits your needs, grab a C library (like LAME), and bridge it into your app using JNI."
androiddev,3dxfup,gamestothepeople,1 point,Mon Jul 20 14:10:51 2015 UTC,"This is how I'd do it...  Download and get to grips with the Superpowered SDK (http://superpowered.com/). There are a couple of Android example bundled in the SDK which are very helpful, study them carefully.  You will want to play both MP3's at the same time using Superpowered, you can then record the output.  This sounds quite simple but in practice it will be tricky even for an intermediate/expert programmer. Good luck"
androiddev,3dxfup,th3bard,-4,Mon Jul 20 16:55:48 2015 UTC,"If you want to do it in Code in an Android App, then I dont have an Idea, but if you can do it manually, software like Audacity is great."
androiddev,3dxfup,kaisims,1 point,Mon Jul 20 12:12:45 2015 UTC,Audacity is great.   And also open source .It can be studied and integrated in your app.
androiddev,3dxfup,lordVader1138,1 point,Mon Jul 20 13:46:00 2015 UTC,"If you want to do it in Code in an Android App   Well, yeah..  I can't seem to find a single source answering this. No code, no library, everyone is pretty much clueless."
androiddev,3dxfup,kaisims,-4,Mon Jul 20 12:42:15 2015 UTC,"But I cant really see the purpose of doing it, maybe you can give us an example?"
androiddev,3dzh9x,iEmerald,1 point,Mon Jul 20 20:03:50 2015 UTC,Eclipse should be more bloated and less optimized than Studio for Android. I don't know why you would want it.
androiddev,3dzh9x,PT2JSQGHVaHWd24aCdCF,1 point,Mon Jul 20 20:15:31 2015 UTC,I want it due to my low hardware specs.
androiddev,3dzh9x,sonictt1,1 point,Mon Jul 20 20:34:22 2015 UTC,Google doesn't even want you to use Eclipse anymore.
androiddev,3dzh9x,mtmv2,2,Mon Jul 20 20:29:08 2015 UTC,What are your system specs?
androiddev,3dzh9x,mtmv2,1 point,Mon Jul 20 22:57:50 2015 UTC,Intel Core2Duo @ 2.10 GHz 4G RAM Integrated Graphics 250 GB HDD @ 5400 RPM  OS is currently Windows 7 Home Premium 64 Bit
androiddev,3dzh9x,mtmv2,1 point,Tue Jul 21 08:33:34 2015 UTC,"That's more than enough to run Android Studio just fine. Some tips:   Don't touch anything while Gradle is working. Basically your initial build and any time you run your app. If your bottoms status bar says that Gradle is running, sit back and watch, no opening/closing windows and clicking around.  You may benefit from using Genymotion or an actual device to debug and test your app instead of the emulator that comes with Studio.  Go into task manager and kill unnecessary tasks that use a lot of memory. If following tutorials and stuff, use maybe an incognito window of Chrome or a second installation of Chromium or Canary with all of your extensions turned off so that they don't hog your RAM.   The first one is really the most important. Working in Android Studio is really not super system intensive at all, it should be butter smooth. For reference, here's the specs for my laptop that I use Studio on:  AMD A8-4500M APU @ 1.9 GHz 4GB DDR3 RAM 500GB 5400RPM 8MB Cache HDD Win 8.1"
androiddev,3dzh9x,sagarsiddhpura,1 point,Tue Jul 21 09:02:56 2015 UTC,Thanks! Will try to follow your tips :-) ..    What about the OS I'm on? Does it make any difference?
androiddev,3dzh9x,sagarsiddhpura,1 point,Tue Jul 21 09:30:55 2015 UTC,Not at all. Windows 7 is probably more efficient and performs better than 8 anyway.
androiddev,3dxqad,kaisims,1 point,Mon Jul 20 12:03:03 2015 UTC,"Hey ho Android Devs!  I have a newbie question that has more to do with the layout, and I don't really know how to accomplish this:  How to make a Column Listview with CardView and custom Cards?  Without long explaination I will just show you some pictures.  This is how it looks like: https://i.imgur.com/xipZGJX.png  And this is how it should look like: https://i.imgur.com/VNWBqZu.jpg  And the code of the layouts: https://gist.github.com/anonymous/2e9e921abf75c9e65839  Thank you!"
androiddev,3dxqad,Thanael,3,Mon Jul 20 12:08:42 2015 UTC,"In general, you want to use RecyclerView instead of ListView, then pass a GridLayoutManager into it with a span count of 3.  For grids like that, you could also use GridView but RecyclerView gives you future flexibility."
androiddev,3dxqad,JohnWowUs,1 point,Mon Jul 20 13:58:02 2015 UTC,You probably want a GridView rather than a ListView.
androiddev,3dxqad,kaisims,1 point,Mon Jul 20 13:57:05 2015 UTC,"Okay wow, that was easy, thanks!~~ How do I make it, that the cards doesnt it the the borders, so there is a bit of space on the top, left and rigth?~~ And if you know it, how do I make the images a bit bigger, or how to make the card itself bigger?"
androiddev,3dxp0s,hipkiss91,1 point,Mon Jul 20 11:50:05 2015 UTC,Please help me out with this. I'm relatively new to android and I'm not sure on the direction I should be taking when trying to tackle this issue. Any help/pointers/mentoring would be GREATLY appreciated.
androiddev,3dxp0s,Thanael,3,Mon Jul 20 11:51:21 2015 UTC,"In what way is the answer (and subsequent comments) on SO not clear?  You make a class that holds both pieces of information (for example Contact), put every 'Contact' in a List, and just pass that list into the adapter.  For the textview you bind the Contact.mName value, for the listener you pass the Contact.mNumber value."
androiddev,3dxp0s,Thanael,1 point,Mon Jul 20 12:23:25 2015 UTC,"Like I said I am fairly new to android. But I don't see what specifically i'd be passing into the adapter. I know you say a ""contact"" list. But wouldn't that technically be an array of JSONObjects? Do adapters allow you to do that? Also, would a hashmap be suitable for generating the ""contact""?"
androiddev,3dwtgp,eru_melkor,1 point,Mon Jul 20 04:45:20 2015 UTC,"""Can you run your Android game on Android TV out of the box?""  Long dramatic pause with a smile...  ""Not quite..""  :) just thought that was funny. Another good dev video though!"
androiddev,3dwtgp,marksizzle,1 point,Mon Jul 20 13:51:38 2015 UTC,Good to see Josh Gordon is doing something productive and staying away from the drugs and alcohol.
androiddev,3dx5dv,appbaatar,3,Mon Jul 20 07:09:02 2015 UTC,"Google only cares if the person/company being stolen from can realistically put them in legal trouble. Even Google simply cannot scan every image and analyze it against the billions of images throughout the internet.   Someone infringed the copyright of a random redditor? Google doesn't give a fuck. The random redittor can ask google to take it down and that's pretty much it.  Plus, reddit is a user generated content platform. When posting, you're pretty much allowing others to link to your work. A smart person would host their stuff on their websites so that they get all the traffic (but that's not practical for everyone). Add watermarks to your work etc. Why are they making it in the first place if they don't plan on showing it to anyone? It's probably in your (abstract 'your') interest to allow your work to spread as far as it can. Again, not everyone might think so."
androiddev,3dx5dv,lordoftherings911,1 point,Mon Jul 20 08:14:38 2015 UTC,I'd just like to add to this - DON'T have anything that could even remotely infringe on anything on your playstore page. screenshots with copyrighted material can get you/your dev account in trouble...
androiddev,3dx5dv,ciny,1 point,Mon Jul 20 12:40:05 2015 UTC,"Absolutely. Google likely has a database of copyrighted images. Or more accurately, a list of trademarks and images (and similar stuff) that are known to belong to big companies. Like album art. Like the cover of Assassin's Creed. Like the EA logo. Like the name 'Microsoft'.  So you can't just go around willy nilly making an app called 'Microsoft's Assassin's Creed' with an app icon that is the EA logo while your screenshot show the cover of Adele's 21.   That is, Google most likely checks our store description against a limited database of copyrighted/trademarked stuff. Any other way would be simply impractical."
androiddev,3dx5dv,lordoftherings911,1 point,Mon Jul 20 15:27:03 2015 UTC,"If I understand correctly, the same way VLC/Bittorrent/Transmission/ffmpeg developers are not responsible for using their software to play/download/encode illegally obtained content. Plus you are in no position to enforce copyrights since you'll be dealing with open APIs. Imgur, (or other host providers, are."
androiddev,3dx5dv,el_bhm,1 point,Mon Jul 20 12:38:34 2015 UTC,"Sync for Reddit was taken down about a year ago, if I remember correctly."
androiddev,3dx5dv,slaystation25,1 point,Mon Jul 20 15:11:04 2015 UTC,Displaying an image uploaded to a public forum isn't infringing on the property rights. In that case you must check the TOS of where it is uploaded. In the case of reddit they say its okay and even offer developers an API to retrieve stuff.
androiddev,3duxo4,brserc,16,Sun Jul 19 18:47:11 2015 UTC,"In the last 18 months I've been doing Android, its been interesting to see the focus move. I saw a move towards testability with the release of Espresso, then RxJava gaining traction and questioning the standard idioms. Recently, its been architecture.  I can't hope to tell you everything you need to know. Learning good architecture comes with experience and many, many mistakes. I learn something new every week and I've been doing development for 20 years.  I can give you some advice though to get you started and you can keep asking questions as you progress. This community is one of the best I've seen in a long time thats always willing to help.   read about the SOLID principles start unit testing learn and use MVP, ruthlessly removing all logic from your activities/fragments/adapters try and modularise your code, especially your business layer. Imagine a core component that does not care if you are an Android app, a CLI or a Swing application or a web server. Here's some info.   Read some of the books that will take you to the next level:   Effective Java Clean Code Growing object orientated software Head first design patterns Art of unit testing   HTH"
androiddev,3duxo4,bart007345,1 point,Sun Jul 19 19:46:36 2015 UTC,Am I the only one who find unit testing difficult with Android?
androiddev,3duxo4,geft,1 point,Mon Jul 20 07:43:29 2015 UTC,No. But that doesn't mean you don't do it.
androiddev,3duxo4,bart007345,1 point,Mon Jul 20 07:50:32 2015 UTC,How do you instantiate a an activity/context?
androiddev,3duxo4,geft,2,Mon Jul 20 07:57:36 2015 UTC,"Personally, I don't. All logic moves t0 classes I can instantiate. If you still want to, look at the test frameworks."
androiddev,3duxo4,bart007345,1 point,Mon Jul 20 08:14:40 2015 UTC,"As someone neck deep in DDD (domain driven design) I have to mention that this should not be an approach used universally. The main use of DDD is for applications or businesses with ridiculously complicated requirements. My work does specialized contracting and tracking of services provided to adults with special needs and has a huge dependency on other branches of government and accounting systems we are not able to change. Using DDD for your average app or business is an invitation to extra work and complicated restrictions that don't provide any benefit to you down the road.   One of your links mentions DDD and I recommend following it in spirit, not to the letter."
androiddev,3duxo4,casualblair,2,Mon Jul 20 01:07:47 2015 UTC,Agreed. In fact you've just highlighted one of those things that lots of people learn by making mistakes - not over engineering.
androiddev,3duxo4,bart007345,5,Mon Jul 20 05:35:35 2015 UTC,"Here's fantastic post I'm currently reading through while I create my own artitecture. If you ignore the generics it should be easy to understand.  Creating a MVP architecture for the first time, especially for android or java novices, requires a lot of forethought and unless you're a genius, you're going to run into a lot of gotchas.  Tip? For me it helped doing it wrong the the first time. That way I can saw my pitfalls and mistakes while doing it the right way."
androiddev,3duxo4,TiberiusAbadon,1 point,Sun Jul 19 19:39:25 2015 UTC,If you ignore the generics it should be easy to understand.   Blasphemy! Generics are awesome. Just know under which situations to use them and all is grand.
androiddev,3duxo4,Cephas00,1 point,Mon Jul 20 08:22:13 2015 UTC,Do you mind sharing the books you read initially?
androiddev,3duxo4,chimichanga9,1 point,Mon Jul 20 06:04:03 2015 UTC,"haha I still do it, muscle memory I suppose"
androiddev,3duxo4,HashFunction,1 point,Tue Jul 21 05:57:02 2015 UTC,"What really helped me out on this is my knowledge of the Spring Framework. The reason why that helped is that Spring doesn't let you create your own objects, the Framework creates them for you based on annotations. For example,  @Repository public interface FancyRepository extends CrudRepository<Fancy, Long> { }   and  @Component public class FancyMapperImpl implements FancyMapper {       @Override       public FancyBO toResponse(Fancy fancy) {             FancyBO fancyBO = new FancyBO();             //blah;             return fancyBO;       } }   and stuff like  @Service public class FancyServiceImpl implements FancyService {       @Autowired       private FancyRepository fancyRepository;        @Autowired       private FancyMapper fancyMapper;        public FancyBO get(long id) {             Fancy fancy = fancyRepository.findOne(id);             FancyBO fancyBO = fancyMapper.toResponse(fancy);             return fancyBO;       } }   and  @Controller public class FancyController {        @Autowired        private FancyService fancyService;         @ResponseBody        @RequestMapping(""/rest/fancy/get/{id}"")        public ResponseEntity<FancyBO> get(@PathVariable(""id"") long id) {              return new ResponseEntity<>(fancyService.get(id), HttpStatus.OK);        } }   Where if you've never seen anything like this, then @Autowired tells the framework that there's an annotated class/interface (@Service or @Component or @Controller or @Repository, these are the four types) somewhere that you'd like to be injected into your managed class, and the framework does it for you!  Why is this great? Because you can literally rip out the logic into its own method, the method into its own class, then provide the class back into your original class with field (or constructor) injection.  Why is that relevant to you? Because DI and IoC is the way to create code where you can actually ""give back"" the dependencies that your classes require. How are you going to do that? By creating them at start, and providing them whereever necessary. How? By creating them in Application subclass's onCreate\(\) method. Read The Android Way in this guide.  How can you make it so that your application doesn't need to keep track of every dependency you provide anywhere in your app?  Well, that's when you get DI frameworks, on Android, that is primarily Dagger2. If you don't make the same mistake I did (I made a component for each module, that is bad), so instead, you'd have a single @Singleton scoped component (with @Singleton scope on the @Provides methods of the modules), then once you bind the modules together and you specify the modules for the component, everything is bound together by magic.  Then, you can just use @Inject whereever you want (or inject the dependencies in the constructor), and you're done! You have everything in separate classes, bound together by the modules of Dagger2."
androiddev,3duxo4,Zhuinden,1 point,Sun Jul 19 19:41:30 2015 UTC,"/continued because once you have the Dagger2 modules in place, your Android code can look like this:  public class MainActivity extends AppCompatActivity {     @OnClick(R.id.button)     public void onClickButton() {           mainPresenter.doSomething();     }      @Override     public void onCreate(Bundle saveInstanceState) {          super.onCreate(saveInstanceState);          setContentView(R.layout.activity_main);          Injector.INSTANCE.inject(this);          ButterKnife.bind(this);     } }  public class MainPresenter {     public MainPresenter(GetStuffDoneInteractor getStuffDoneInteractor) {           this.getStuffDoneInteractor = getStuffDoneInteractor;     }      GetStuffDoneInteractor getStuffDoneInteractor;      public void doSomething() {         getStuffDoneInteractor.writeToDatabaseAndStuff();     } }  public class GetStuffDoneInteractor {     @Inject     FancyRepository fancyRepository;      @Inject     FancyService fancyService;      @Inject     FancyMapper fancyMapper;      private boolean isInjected = false;      private void injectThis() {          if(!isInjected) {                isInjected = true;                Injector.INSTANCE.inject(this);          }     }      public void writeToDatabaseAndStuff() {          injectThis();          Fancy fancy = fancyService.get();          FancyRLM fancyRLM = fancyMapper.toRealmObject(fancy);          fancyRepository.save(fancyRLM);     } }   And your activity is just delegating its calls to the presenter, and the logic is all separated into interactors."
androiddev,3duxo4,Zhuinden,1 point,Mon Jul 20 09:06:57 2015 UTC,"hey! you should upgrade to the latest version of butterknife, the author moved from @injectview annotation to @bind. removes any confusion that might arise when using dagger and butterknife together"
androiddev,3duxo4,HashFunction,1 point,Mon Jul 20 19:44:02 2015 UTC,".....ah, right. ButterKnife.bind(this). Sorry, used .inject(this) so many times it's a reflex. We're already using it, I just didn't get used to it :P"
androiddev,3duxo4,Zhuinden,1 point,Tue Jul 21 05:33:32 2015 UTC,After you have made the application you have a global view of what the application should do. While initially developing the application you sometimes change the design or change other things completely.  When you are done creating an application maybe it is a smart move to check things in your app that you have duplicated or copy pasted (when i need to copy paste code there is always ringing an alarm bel) or views that almost look the same but only have a different API call.  When you notice these kind of things in your code try to copy paste then one last time in a separate object.  For example you have an application with news articles and people can favourite these articles. You probably end up with two classes a NewsFragment and FavouritesFragment. Instead of copy pasting the code from the NewsFragment to the FavouritesFragment try to create a new object like NewsListFragment and let the NewsFragment and FavouritesFragment extend from that one. So then you have all the displaying functionality in one place only the data retrieving (retrieving news and favourites) in the separate fragment.
androiddev,3duxo4,martinmetselaar,1 point,Sun Jul 19 19:28:36 2015 UTC,"This topic has come up many many times in the past few months. I feel that there is a big jump that is not adequately explained from ""I can create an Android app"" to ""I know how to cleanly architect an Android application"". I'm in the same boat at the moment OP. I think the best advice I can give is just to try it. Give it a go. Set up example and hobby projects. But don't try and complete the app to be all polished. Have a goal in mind (looks like it is clean architecture) and stop once you've gained enough experience in it with your hobby projects don't go all bells and whistles and try and incorporate Material Design (do that in another hobby project) because that's where I think you can lose yourself down a rabbit hole.  Also I think part of the issue is that the tutorials online are the project you are working on. Don't know a way around that, try try try again!!  Good luck OP."
androiddev,3duxo4,piratemurray,1 point,Sun Jul 19 20:13:20 2015 UTC,"Material design is fairly easy now with the new Design Library. The key is to remember the Android UI pieces are only a small piece of your actual app, and they should be almost entirely separated from your actual logic."
androiddev,3duxo4,flint_and_fire,1 point,Tue Jul 21 17:28:03 2015 UTC,"Definitely unique in android development, as of now i see my Layout resource files as the views. And additional to the activity Java files i add Models just like the original concept.  I use the model classes to store functions and classes that do the thinking, which i call in my controller (EX:mainactivity.java)  I'm sure someone will create a solid concept for everyone to use in the near future"
androiddev,3duxo4,traxgod,1 point,Sun Jul 19 20:34:32 2015 UTC,"If you want to apply a good architecture then you probably need to start from studying some OOP blogs. I like yegor256.com OOP purist's blog. While I do not agree with everything Yegor wrote, I like his fresh view on problems we're facing in OOP. He is at least trying to define such problems and make some decisions on how to solve them. Most of other developers are just busy thinking on how to use APIs instead of thinking on their code quality.  Then you will need to wrap your head around Dagger2, as it helps with having a decent architecture without having much of experience and spending a great amount of time. Dagger is de-facto an architecture improvement tool number 1.  MVP/C/MVVM framework is a matter of your understanding of how android works and what problems you're trying to solve with them. Different frameworks solve different problems.  The next deep step can be RxJava. RxJava is absolutely opposite to what is considered to be OOP design. RxJava is functional. But. We don't need to have OOP everywhere, OOP is just a tool that we can use. If FP is better fits our needs then the obvious solution is an FP framework. Android is relied heavily on background tasks. RxJava is the best library for background tasks handling."
androiddev,3duxo4,jackhexen,0,Sun Jul 19 20:37:32 2015 UTC,Hi. I have the same issue. I'm trying to work on this now and seek some guidance also.
androiddev,3dvu9v,blackangus00,2,Sun Jul 19 23:23:30 2015 UTC,Very nice of you to opensource your app!
androiddev,3dvu9v,sagarsiddhpura,2,Mon Jul 20 06:30:46 2015 UTC,"Tested it, super fast. Good job."
androiddev,3dvu9v,joshmmo,2,Mon Jul 20 06:50:55 2015 UTC,Awesome! Great to hear :)
androiddev,3dvu9v,eythian,2,Mon Jul 20 12:28:43 2015 UTC,"Awesome, more open source is more better! Any thought to putting it in f-droid?"
androiddev,3dvu9v,eythian,2,Mon Jul 20 08:17:34 2015 UTC,"Definitely, I'll submit it to f-droid today or tomorrow"
androiddev,3dub00,LiteDroid,35,Sun Jul 19 15:26:59 2015 UTC,"Good ol' new project in Android Studio, blank activity with a blank fragment and that's it. I add libraries if I need them on the way."
androiddev,3dub00,agherschon,3,Sun Jul 19 16:25:51 2015 UTC,same here
androiddev,3dub00,matoelorriaga,2,Sun Jul 19 18:13:21 2015 UTC,Blank project best project
androiddev,3dub00,kevelbreh,2,Mon Jul 20 06:44:16 2015 UTC,"Ahh the sweet ""This time I will do everything perfect and by the book"" feeling of brand new project..."
androiddev,3dub00,drabred,1 point,Mon Jul 20 08:56:53 2015 UTC,"""Right, now let's add a bunch of stuff to build.gradle"""
androiddev,3dub00,okmkz,6,Mon Jul 20 11:07:13 2015 UTC,You could use a yeoman generator to do all the stuff for you. Unfortunately there are just a few at the moment. :(
androiddev,3dub00,redyar,2,Sun Jul 19 16:39:21 2015 UTC,Awesome - had not heard of Yeoman before - thanks for the tip!
androiddev,3dub00,d0nkeh,6,Sun Jul 19 18:16:27 2015 UTC,"Android CLI to create new project. Add libs as needed (support/compat, design, dagger, volley/retrofit, ...)"
androiddev,3dub00,capilot,1 point,Sun Jul 19 18:09:55 2015 UTC,What's the command to create a new project? It's been like seven years since I last did it that way and I doubt the old commands still work.
androiddev,3dub00,d0nkeh,6,Sun Jul 19 20:18:19 2015 UTC,android create project -g [...opts...]  The -g uses gradle project templates.  Other args modify how its constructed. Use -h for help.  See also: lib-project and test-project.
androiddev,3dub00,capilot,1 point,Sun Jul 19 21:04:49 2015 UTC,"Cool, thanks. Looking into it now."
androiddev,3dub00,HardlineStudios,3,Mon Jul 20 00:33:36 2015 UTC,"My latest game used the GamePlay3D engine so, started with their sample code, integrated my own game engine stuff and off we went! :)"
androiddev,3dub00,Jayomat,3,Sun Jul 19 20:41:38 2015 UTC,"why would you import your ""favorite libraries"" before you actually need them?"
androiddev,3dub00,markpiller,2,Mon Jul 20 06:29:22 2015 UTC,"Most of my recent projects use the backend-as-as-service approach. For this I use backendless, they have a code generation feature which creates client side project with all the required libraries. Here's a blog post with a description of the feature: https://backendless.com/feature-15-client-code-generation-based-on-defined-tables/"
androiddev,3dub00,Zhuinden,2,Mon Jul 20 01:10:15 2015 UTC,"I have been debating creating a custom template (considering it is just generated based on FTL aka freemarker template) but I have been lazy so far and thus I just use blank activity for a start and add what I need. Making a template would certainly make it much quicker, though."
androiddev,3dub00,capilot,2,Mon Jul 20 06:22:29 2015 UTC,"I copy an existing project -- preferably one similar to what I'm about to build -- lock, stock, and barrel, then delete .git/, gen/, bin/, project.properties, and any other ""meta"" stuff that will get auto-generated by Eclipse. Then I change the name of the project in the manifest, etc. and I'm on my way."
androiddev,3dub00,taggzor,3,Sun Jul 19 20:17:31 2015 UTC,Eclipse?... Brave (wo)man.
androiddev,3dub00,capilot,1 point,Sun Jul 19 22:35:09 2015 UTC,"Yeah, like I say, I'm not an early adopter. I already know Eclipse, and I have no idea if Android Studio would be worth the time it would take to learn it."
androiddev,3dub00,taggzor,4,Mon Jul 20 00:20:28 2015 UTC,How do you reason about this considering Google dropped official support for Eclipse?
androiddev,3dub00,capilot,3,Mon Jul 20 00:41:02 2015 UTC,"Still works for me.  I've installed Android Studio at $dayjob, so I expect to be switching to it at home soon enough.  I'm not an early adopter; that doesn't make me a complete luddite. :)"
androiddev,3dub00,OmegaVesko,3,Mon Jul 20 01:02:26 2015 UTC,"A year ago I would've agreed with you on that, but right now AS is the standard with Eclipse being the legacy option. The longer you wait to switch, the more problems you're going to run into."
androiddev,3dub00,Zhuinden,1 point,Mon Jul 20 00:43:13 2015 UTC,The last version of ADT gives you the option to export the project into a gradle based one.
androiddev,3dub00,dixieStates,1 point,Mon Jul 20 06:20:29 2015 UTC,"gather requirements  tell a plausible, not necessarily accurate, story about a solution.  wave your arms a lot.  draw pretty pictures.  ????  profit"
androiddev,3dub00,j_m_studios,1 point,Mon Jul 20 05:45:23 2015 UTC,I have created a few libraries of my own that I include.  A utilities library for my common functions.  A base app library that includes some other ui libraries and has XML all setup to theme everything so all my app has to do is set colors. This has become a little less important as the google support library has improved. There are some ui helpers in there to reduce boilerplate code as well.  And last I have a library to handle google play services. Obviously only included if my app is using it.
androiddev,3dx607,nethergrim,1 point,Mon Jul 20 07:18:00 2015 UTC,"You're going to want to provide an implementation of GridLayoutManager.SpanSizeLookup that reports your section header views as having a span of 3, and to report your photo cells as having a span of 1. This is assuming you're talking about adding section headers to a GridLayoutManager flavored RecyclerView with a span count of 3."
androiddev,3dx607,okmkz,1 point,Mon Jul 20 07:53:54 2015 UTC,"I think he meant selection not section. The gridlayout is just half the story if he wants to mimic the photos layout. He will also need a List which holds the selected items and an ItemDecoration which handles the margins and ""selection-marker"" in the top left."
androiddev,3dx607,DonMahallem,1 point,Mon Jul 20 11:46:20 2015 UTC,"Yes, I was talking about selection, not about sections. Like here"
androiddev,3dx607,DonMahallem,1 point,Mon Jul 20 17:53:26 2015 UTC,Ok. I just do have a guess here:   You can achieve the visuals as stated above   The Selection:   Intercept touch event and wait for long press and select the first item Until the finger is lifted from the screen get the items from the RecyclerView below the finger with: findChildUnder(). Then put this View again into the RecyclerViews getChildLayoutPosition(). You now do have the ViewHolder from below the finger and can add it to your Array of selected items and decorate it.   I didnt try it myself but this would be my first attempt at accomplishing this.
androiddev,3dvqzp,taggzor,4,Sun Jul 19 22:55:21 2015 UTC,"I think with a period of 5 months you won't have enough time to see much difference between the two. I think you should strive to work somewhere where glass door reviews describes as ""filled with good people"" meaning that even if the upper management is shitty you can still learn a lot from the ""good employees""  That's my current situation, the people i work with on a day to day are incredibly smart and I feel like I've learned an insane amount of the last few months."
androiddev,3dvqzp,getonmalevel,3,Mon Jul 20 04:25:08 2015 UTC,Where are you in the world?
androiddev,3dvqzp,MarcusTheGreat7,1 point,Mon Jul 20 05:04:55 2015 UTC,"Stockholm, Sweden"
androiddev,3dvqzp,MarcusTheGreat7,2,Mon Jul 20 10:21:02 2015 UTC,"I don't know about Sweden, but here in the states I'm interning at a firm that specializes in mobile development.  An internship at a similar company would likely be much better."
androiddev,3dvcov,code_mc,1 point,Sun Jul 19 20:53:58 2015 UTC,I spent way to long figuring this out so I decided to share it so others can benefit from it. Literally went back and forth between emulator and color xml file and adjusted until it looked like one color.  If anyone feels the need to perfect it even further please share your results and I'll be happy to update the repo!
androiddev,3dvcov,OnePersonCo,1 point,Sun Jul 19 20:55:53 2015 UTC,"Nice little tutorial. I've had success going the opposite way: negating with the same gradient only white and flipped.  I think another reason it never looks quite right is due to the different status bar icons. Since we can't change those icons, I just hide the status bar when it's not required."
androiddev,3dvcov,OnePersonCo,2,Sun Jul 19 21:34:35 2015 UTC,"Hiding is a nice solution too indeed. Didn't think about using the white one myself, does that look decent?"
androiddev,3dud9w,Categoria,2,Sun Jul 19 15:49:07 2015 UTC,"one problem of Volley is a lack of documentation, disturbing"
androiddev,3dud9w,iNoles,1 point,Mon Jul 20 04:28:19 2015 UTC,There's a training in Android Developers for quite a while now. Volley training
androiddev,3dud9w,Sottti,1 point,Mon Jul 20 14:29:56 2015 UTC,"Why use Volley when you can use Retrofit, and why use Gson when you can use Moshi?"
androiddev,3dud9w,Zhuinden,1 point,Mon Jul 20 13:34:53 2015 UTC,There's a couple of nice articles on Retrofit vs Volley that I think it's worth to take a look.   1. Volley vs Retrofit 2. Volley vs Retrofit
androiddev,3dud9w,Sottti,1 point,Mon Jul 20 14:01:27 2015 UTC,"Yeah, based on these, I'll just go with what I'm doing with the Fresco/Retrofit/Android-Priority-JobQueue thing instead of Volley."
androiddev,3dud9w,Zhuinden,-1,Mon Jul 20 15:16:03 2015 UTC,"Though Volley has been out longer, I'd say OkHttp is more mature."
androiddev,3dud9w,TiberiusAbadon,4,Sun Jul 19 22:10:03 2015 UTC,OkHttp has been out longer.
androiddev,3dud9w,JakeWharton,3,Mon Jul 20 06:39:47 2015 UTC,They solve two different problems
androiddev,3dud9w,okmkz,2,Mon Jul 20 06:19:51 2015 UTC,You can compare them as long as you realize you are comparing an HTTP client with a REST helper. IMHO OkHttp could be compared with Android Async Http or any other HTTP client.
androiddev,3duebc,ZakTaccardi,3,Sun Jul 19 15:59:07 2015 UTC,I will be using greenhouseci.com in the near future to test my application. It seems it also works with BitBucket :) - http://blog.greenhouseci.com/tutorials/android_tutorial/#specify-git-repository
androiddev,3duebc,nkootstra,1 point,Sun Jul 19 17:06:53 2015 UTC,Drone.IO is something else you could take a look at.
androiddev,3duebc,the_rabbit,1 point,Mon Jul 20 05:30:43 2015 UTC,"Solano CI provides BitBucket support, you can set it up as a Virtual appliance, and is used by dev teams like Airbnb and Stripe.   https://www.solanolabs.com/#features"
androiddev,3duebc,octobersotherveryown,0,Mon Jul 20 18:11:18 2015 UTC,"Hi Zak,  I'm one of the engineers at Ship.io. I'm sorry to hear that you're having trouble getting set up. We focus exclusively on iOS and Android, and we work very hard to make setup a simple process. Usually it is a simple process, but every once in a while there's a small hiccup, and we're happy to step in and help you get set up.  I took a look and you were correct -- we needed to install a new version of the Android Support Libs. I just finished updating it, so it should be working for you now.  As to your bigger question -- are you better off setting up a GCE VM and running your own CI server?  I can't definitively answer that for you, since I don't know about your personal situation. Obviously I would prefer if you (and everyone) used Ship.io :)   If you'll let me suggest an objective framework for making this decision...  I like to consider the costs and benefits when answering questions like this. Usually what I see is that when people run their own CI server, there is a lot of configuration just to get started. After you get through the startup process, there's ongoing maintenance required. I heard one estimate that running CI internally has an equivalent cost of 2 developer-weeks, per developer, per year. If you've got 3 devs, that's 6 weeks of a developer's time, per year.   It just comes down to where you want to spend your time.  We have a free plan, and if you need a simple setup, you can use Ship without paying anything at all. Since we're running this for so many customers, your CI service is basically free. Plus, we have some cool integrations and distribution options.  If you want to chat more, I'm happy to talk."
androiddev,3duxl2,jordanzzz,2,Sun Jul 19 18:46:33 2015 UTC,"You can google ""open source icons"". There are some sites like : https://useiconic.com/open/"
androiddev,3duxl2,brserc,1 point,Sun Jul 19 18:51:55 2015 UTC,Thanks I will give that a try.  I was googling A droid free to use icons as well as just the individual icons through google images.  :)
androiddev,3duxl2,Dr_funny_guy,1 point,Sun Jul 19 19:01:26 2015 UTC,Android Lollipop icons as SVG  I made a grid of them all
androiddev,3duxl2,beermad,1 point,Sun Jul 19 19:17:22 2015 UTC,"How about the standard icon set, available from the Android developer site?  That's always my starting point unless I have to make my own icon where there isn't a suitable one already."
androiddev,3duxl2,naalty,2,Sun Jul 19 19:34:53 2015 UTC,"https://www.google.com/design/icons/  please use these OP, makes everything more coherent."
androiddev,3duxl2,TiberiusAbadon,2,Sun Jul 19 23:09:25 2015 UTC,https://plugins.jetbrains.com/plugin/7647?pr=  Checkout this plugin. I can literally add any icon from the Material Design spec in less than 10 seconds.
androiddev,3duxl2,TheDarkVigilante,1 point,Sun Jul 19 19:42:10 2015 UTC,Try using flaticon.com...they are free if you credit the author or you can pay and not have to pay the author
androiddev,3duxl2,gdw_maniac,1 point,Sun Jul 19 19:49:38 2015 UTC,"Have a look at materialdesignicons they have all of the available (official) Google made icons and are expanding with user made icons. All in the same material style.   Also, of you're using Android Studio, there are some great plugins you could use for implementing icons into your project.   For example the one I use most of the time: Android drawable importer"
androiddev,3duxl2,sagarsiddhpura,1 point,Sun Jul 19 21:16:55 2015 UTC,Awesome responses!
androiddev,3duxl2,dj_darkhorse,1 point,Mon Jul 20 06:51:43 2015 UTC,https://www.google.com/design/icons/  or for the github repo:  https://github.com/google/material-design-icons/
androiddev,3dt35k,leggo_tech,13,Sun Jul 19 04:45:04 2015 UTC,"Do people really use ContentProviders and Loaders for handling data?   You can't avoid ContentProviders if you're using shared data repositories. So unless I absolutely need to (like accessing Contacts) I refrain from using them.  I haven't had the need of using Loaders (thankfully) but CursorLoaders have one huge advantage that everyone looks past: which is auto refreshing content when the source changes. This is tricky to do manually.   For those saying they've replaced Loaders with RxJava and have implemented the auto-refreshing feature : I'm guessing you're using an additional lib like SqlBrite or the sort? If not, would love to hear how you manage to pull it off.   But when possible I run like the wind in the opposite direction from CP and Ls cause they have a ghastly api for 2015 standards."
androiddev,3dt35k,morihacky,1 point,Sun Jul 19 06:44:55 2015 UTC,"There is nothing complex in having rxjava update any request, you just need a subject that will emit updating events, thats all.  I personally use RxQuery for self-updating data requests. The main RxQuery idea has been taken from SqlBrite, it only has been decoupled from database implementation details."
androiddev,3dt35k,jackhexen,8,Sun Jul 19 15:50:18 2015 UTC,"Yes it is. ContentLoaders make it very easy for showing database items to your user. And unlike Rxjava, it handles orientation changes gracefully.   People may argue that the boilerplate needed is a lot, but the best thing is that you can use an ORM library for this purpose. For instance, I use Ollie that makes it possible to create a ContentProvider in < 10 lines."
androiddev,3dt35k,Saketme,3,Sun Jul 19 07:31:00 2015 UTC,"And unlike Rxjava, it handles orientation changes gracefully.    What aspect of the rotation handling do you find problematic with RxJava?"
androiddev,3dt35k,morihacky,4,Sun Jul 19 14:34:35 2015 UTC,"Un-subscribing from the observable, caching it and re-subscribing again on start. I hate managing them :("
androiddev,3dt35k,Saketme,3,Sun Jul 19 18:25:47 2015 UTC,"that's a totally fair point. managing the subscriptions on our own is a pain.   that being said, since it needs to be done anyway with any RxJava usage (regardless of orientation change), it's not a ""new"" unfamiliar api i have to learn for a single purpose. the caching part is the only additional component that needs attention for orientation change. i understand your point though."
androiddev,3dt35k,morihacky,1 point,Sun Jul 19 18:37:46 2015 UTC,"Interesting discussion /u/Saketme and /u/morihacky. One alternative that seems worth mentioning: We can use RxJava with Loaders and ContentProviders. You get to take advantage of the framework's way of handling orientation changes while also hiding the Loader and ContentProvider api behind the Observable's api. Plus, you can have multiple ""listeners"" ready to consume the data loaded by the loader from the content provider."
androiddev,3dt35k,philosophicalhacker,1 point,Sun Jul 19 19:14:13 2015 UTC,Ah Interesting ! Did you have an article or blog post on the subject ? I vaguely recall this strategy from somewhere.
androiddev,3dt35k,morihacky,2,Mon Jul 20 07:20:24 2015 UTC,"I didn't discuss it much, but I did mention it in the blog post I wrote about the TDD-based HackerNews client I'm working on now. It might turn out that using both is a bad idea. I guess I'll find out by the time I'm done with the app. ;)"
androiddev,3dt35k,philosophicalhacker,13,Mon Jul 20 11:55:17 2015 UTC,"Nowadays, the only real benefit to a ContentProvider is if you want to share data between your app and another app.  Otherwise, its much cleaner/simpler to abstract your data logic behind an interface.  Since using RxJava, I haven't felt the need to ever implement a Loader."
androiddev,3dt35k,ZakTaccardi,2,Sun Jul 19 05:16:32 2015 UTC,"And if you need a content provider, I've found cupboard to be a real time saver."
androiddev,3dt35k,okmkz,2,Sun Jul 19 05:21:29 2015 UTC,I just switched over to rxjava from loaders. I would highly recommend to make the switch. The code becomes much cleaner.
androiddev,3dt35k,timothyjc,2,Sun Jul 19 12:43:17 2015 UTC,I believe Android changes ContentProvider export to be disabled by default in certain API level.
androiddev,3dt35k,iNoles,1 point,Sun Jul 19 14:30:11 2015 UTC,Do you have any code examples of this?
androiddev,3dt35k,Voshond,3,Sun Jul 19 17:44:54 2015 UTC,it's worth learning it to be aware of it's use - but personally I moved away from it.
androiddev,3dt35k,crackshot87,2,Sun Jul 19 15:44:14 2015 UTC,"Loaders: Worth it if you need to survive orientation changes. That's what they're made for and its too bad the API is such garbage.  ContentProviders: Worth it if you're doing SQLite anyway. However, most of our data is just flat files that we store directly after fetching from network."
androiddev,3dt35k,asarazan,2,Sun Jul 19 21:10:47 2015 UTC,"I read a comment from Jake Wharton that RxJava replaces loaders and that's pretty much true. I used loaders in an old app, but I don't think I would again."
androiddev,3dt35k,Nexic,1 point,Sun Jul 19 05:04:03 2015 UTC,Loaders for me had gone the way of the dodo with all the great libs out there.
androiddev,3dt35k,bbqburner,2,Sun Jul 19 10:37:07 2015 UTC,Content providers have their uses. Loaders are a bad api. Period.
androiddev,3dt35k,jvrodrigues,1 point,Sun Jul 19 11:39:05 2015 UTC,"So much boilerplate with loaders... I like using content providers whenever I'm using SQL, I think it's a trivial amount of overhead for the structure it gives you if you're already dealing with database management, but as soon as Realm gets a bit more advance I'm hoping to switch over and never look back."
androiddev,3dt35k,konk3r,1 point,Sun Jul 19 16:24:50 2015 UTC,"Yeah, it's a lot of code to get going but it's one of those situations where it just neatly fits in with what the rest of the Android system is doing.  Take as an example creating a detail view in a Fragment backed by a ContentProvider URI:  Say that the Fragment view is backed by a ContentProvider URI of content://com.example/things/123.  When the Fragment is attached to an Activity it executes a CursorLoader to obtain and bind the data.  The Fragment also sets up a ContentObserver to listen for changes on that URI.  So now if in the background my sync adapter receives a push notification of a data change, the adapter can make the network calls and update the database and then notify the UI without any trouble.  The UI just changes.  I am really surprised some people here seem to dismiss using ContentProviders so easily out of hand. I'm not saying everyone should use them every time but there are situations where they really are the most appropriate hammer to use."
androiddev,3dt35k,GreatJusticeForSGU,1 point,Mon Jul 20 00:48:56 2015 UTC,All hail to RxJava and data libraries such as Realm or sqlbrite. Loaders are useless today but you should be familiar with ContentProviders and you totally don't have to use them.
androiddev,3dt35k,entropio,-1,Sun Jul 19 06:47:05 2015 UTC,No
androiddev,3dttwy,facutopa1,1 point,Sun Jul 19 12:02:32 2015 UTC,"I'm new in this world, but I have a little experience, I made some apps basic in the past.  Now, I want start a new project and win experience on this and win skills for a future. Must I start programming and after design? I usually do a mix of programming and design. Must I do first the layouts and the functions on the Java class?  For example, I want start a project using this library: MikePenz/MaterialDrawer But I can't understand or maybe I don't have the enough experience. What I must do?"
androiddev,3dttwy,taggzor,2,Sun Jul 19 23:38:29 2015 UTC,I think if you don't know where to start maybe you need to get some basics down first?  Udacity has a recently released and free course with a follow along example app (Sunshine) + a lot of video content and exercises.  https://www.udacity.com/course/developing-android-apps--ud853
androiddev,3dttwy,endurotech,1 point,Mon Jul 20 00:46:59 2015 UTC,"I am creating an app in which shapes are drawn on a transparent SurfaceView that is on top of a camera preview in a TextureView. Normally a circle would appear on the surface where a touch event has occurred (this is drawn on onSurfaceTextureUpdated() in the SurfaceTextureListener I defined for the camera preview). When I touch at the bottom half of my screen however the circle will either not appear or only part of it will. When I pause and resume my app the shapes that weren't there before appear in the right place. When I lock the canvas to draw on it I pass in a Rect object with a size of the entire screen. How can I make sure the canvas / surface view takes up the entire screen?  Also another problem is that when I want to reset the canvas by using drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR), the shapes will blink even though I removed all coordinates from the ArrayList I am using to store them, but if I pause and resume the app they do disappear.   Here is a screenshot of my application exhibiting the canvas problem. Thanks!"
androiddev,3dttwy,Crlan,1 point,Sun Jul 19 20:59:45 2015 UTC,"I am confident it's just a noob problem, but I have looked all over tutorials and q&a's from stackoverflow, etc. I'm lost.  I'm working in android studio. I made a couple of buttons in Gimp, got them on the app screen as image buttons, but I can't resize them. And I don't think linear layout is the right option.  I just wanted to have a circle button in the center of the screen that will display text (I'd like it a little bigger than it is, but it's working fine) and two buttons side by side with appropriate space in between underneath. I feel like this should be easy, but I can't find a solution to accomplishing that."
androiddev,3dttwy,stkenkere,2,Sun Jul 19 20:49:58 2015 UTC,"I would need a little more info, but it sounds like the ""scaleType"" attribute for ImageView/ImageButton might help.  There are a few different options there depending on exactly what you're trying to do.  Also if you are trying to center a button in the screen, I would recommend putting it in a RelativeLayout and using ""layout_centerInParent"" to center it."
androiddev,3dttwy,Crlan,1 point,Sun Jul 19 22:14:53 2015 UTC,"I can't center the buttons because there are two. I tried using gravity and doing bottom right and bottom left and that didn't work. I tried scaletype xxfit and giving specific dp parameters for width. I have one button centered, and these two need to go underneath it. I'm assuming parent refers to the background at this point? Can I turn the center circle button into the parent?"
androiddev,3dttwy,stkenkere,2,Sun Jul 19 22:26:41 2015 UTC,"Parent refers to the entire layout the view is part of.  So if you have your RelativeLayout covering the entire screen with match_parent, setting your main button in the middle with layout_centerInParent is centering it with respect to the entire screen (which sounds like what you want).  If you want those 2 button directly underneath the centered buttons and right next to each other, you could put those two inside a horizontal LinearLayout and then center that LinearLayout horizontally within the parent RelativeLayout and set it to be below your center button.  Something like this:  <RelativeLayout         android:layout_width=""match_parent""         android:layout_height=""match_parent""/>     <ImageButton         android:id=""@+id/center_button""         android:layout_centerInParent=""true""         android:layout_height=""100dp""         android:layout_width=""100dp""/>      <LinearLayout         android:layout_height=""wrap_content""         android:layout_width=""wrap_content""         android:layout_below = ""@+id/center_button""         android:layout_centerHorizontal=""true"">         <Button             android:layout_width=""32dp""             android:layout_height=""32dp""/>          <Button             android:layout_width=""32dp""             android:layout_height=""32dp""/>     </LinearLayout> </RelativeLayout>"
androiddev,3dttwy,Crlan,2,Sun Jul 19 22:58:21 2015 UTC,Thank you so much! I didn't understand I could have both relative AND linear on one screen! I knew it was just a noob issue! Thanks!!!
androiddev,3dttwy,Redblah,1 point,Sun Jul 19 23:24:16 2015 UTC,"I am storing data in SharedPreferences and I keep calling it in my service. But eventually for some reason I lose the data in my file.  FileInputStream fin = openFileInput(""subs.txt"");                         String objEnc = """";                      BufferedReader input = new BufferedReader(new InputStreamReader(fin, ""UTF-8""));                     StringBuilder sbuilder = new StringBuilder();                     objEnc = input.readLine();                     while (objEnc != null) {                         sbuilder.append(objEnc);                         objEnc = input.readLine();                         if (objEnc != null) {                              // sbuilder.append(""\n"");                          }                     }                     input.close();                     objEnc=sbuilder.toString();                     fin.close();"
androiddev,3dttwy,vestti,3,Sun Jul 19 19:54:08 2015 UTC,"Architectural patterns noob here. I'm having a hard time trying to understand how to organize my domain layer.   Two questions:  1) How do you go about implementing your models classes (considering the MVP pattern) when using GreenDAO? I mean, GreenDAO generates your entities and your DAO classes, but you can only modify the entities. I need to do some validation before persisting on the database and AFAIK that's where models come in (correct me if I'm wrong).  What can I do? Should I create an UserModel class that communicates with User and UserDAO? Should I just use entities classes as models? That doesn't seem right to me, I've never seen anyone doing validations there.  2) Where do you usually implement business logic like ""get all Users from Category X and modify their status to Y if Z is true""? Does it go in the model class? I don't think so, but I don't know where else it would fit.  ? Should I create something like CategoryBusiness (or should it be UserBusiness in this case)? I've never seen anyone doing that either.  Guess I'm missing something here..."
androiddev,3dttwy,entropio,3,Sun Jul 19 16:13:47 2015 UTC,I'm using models only for retrieving and putting data so they are completely independent from views and presenters. Data modifying and validations are usually happening in presenters.  I prefer to make a DAO class that holds simple static query methods to retrieve data:  UserDAO.getAllUsers()   Some people like to keep queries in the entities but I don't like this:   user.getAll()   I'm also new to MVP so be critical.
androiddev,3dttwy,vestti,3,Sun Jul 19 18:39:59 2015 UTC,"Data modifying and validations are usually happening in presenters.   I thought Presenters shouldn't have this kind of responsability, but I think I was wrong. I was getting confused because the Model of a MVP is not necessarily a Domain Model:   ""The domain data that needs to be displayed is separate, and following rough MVC terminology I'll refer to it as a model, although it need not be a Domain Model.""    Martin Fowler's article on Supervising Controller    That being said, I personally think it should be better to separate this logic from the Presenter.  The most famous Android MVP example-projects on GitHub have ""Interactors"" implementing use cases to deal with the business logic and some kind of repository to access the data. While I do like this approach, I think it's easy to make it really cumbersome over time, because it adds one or two extras classes for each use case you have. Here are some examples: Android-CleanArchitecture, androidmvp and Material-Movies.   Besides that, there's the fact that originally in the MVP pattern you should really handle this logic in the Model, as explained really well in this StackOverflow answer:   ""In an MVP/MVC/MVVM architecture, services don't exist at all. Or if they do, the term is used to refer to any generic object that can be injected into a controller or view model. The business logic is in your model. If you want to create ""service objects"" to orchestrate complicated operations, that's seen as an implementation detail. A lot of people, sadly, implement MVC like this, but it's considered an anti-pattern (Anemic Domain Model) because the model itself does nothing, it's just a bunch of properties for the UI.""   Right now I'm considering this presumably simpler approach, but I don't know if it will work well with ORMs like GreenDAO.  I'm still looking for alternatives..."
androiddev,3dttwy,entropio,1 point,Sun Jul 19 22:37:42 2015 UTC,"Good research, I would add that I prefer the ""Interactors"" way because I think it's more clean (pojos already have dozens of methods) and easier to refactor. Also one of my apps is using Realm and RealmObjects can't hold anything except getters and setters."
androiddev,3dttwy,entropio,1 point,Mon Jul 20 03:07:29 2015 UTC,Is it ok to keep Presenters in fragments?
androiddev,3dttwy,TiberiusAbadon,1 point,Sun Jul 19 15:56:47 2015 UTC,setRetainedState(true) and it will only destroyed on activity destroy. Only process restarts you'll have create a new presenter.
androiddev,3dttwy,bart007345,2,Sun Jul 19 23:56:56 2015 UTC,"No, it needs to separated so you can instantiate the presenter, without the fragment, so you can unit test it. You are unit testing the presenter right?"
androiddev,3dttwy,entropio,1 point,Sun Jul 19 19:49:51 2015 UTC,I'm not unit testing (but I want to learn it someday) so keeping Presenters in activities will require additional layer of callbacks with no benefits. Should I put them in activities anyway so I can easily add tests in the future?
androiddev,3dttwy,bart007345,1 point,Mon Jul 20 02:35:29 2015 UTC,Did you write that correctly? You need callbacks if the presenter is in the activity? Don't you mean the opposite?
androiddev,3dttwy,candidcold,1 point,Mon Jul 20 05:38:37 2015 UTC,"Where do you guys put your networking code, for both safety from leaks and from having redundant calls?   I've read some people's writing like this and this that say you should get them out of the activity lifecycle, which makes sense, but the conclusion it comes to is you still end up having to dance around things in onResume to make sure you're not overdoing your calls. Is this just something I'd have to deal with? When I look at some apps that are up on Github that aren't purely for educational purposes it's so hard trying to find where they put their API calls, because naturally I don't know where to look. I've also watched the recent video on Realm talking about Android Threading, which had a really complicated outcome, although I understand some of that could have been eased with the use of an EventBus. I'd just like to hear how some of you guys do it, thanks."
androiddev,3dttwy,bart007345,2,Sun Jul 19 15:51:02 2015 UTC,"Divide the app into layers.   The Activity initiates the call by calling a method on the presenter. The presenter calls the model layer, passing in a callback (or use RxJava). The model layer makes the call and creates the model objects that the presenter then passes to the Activity to display."
androiddev,3dttwy,farmasek,1 point,Sun Jul 19 19:52:10 2015 UTC,"I have this layout structure and for some reason items in my ListView in NetchedScrollView are  showin from bottom, and i want them to show right after toolbar. Do you know why ?"
androiddev,3dttwy,farmasek,2,Sun Jul 19 14:21:01 2015 UTC,"android:layout_gravity=""fill_vertical""  solved my problem"
androiddev,3dtt0y,AFChimpanse,21,Sun Jul 19 11:49:34 2015 UTC,"PhoneGap and similar frameworks do not compare to native performance. Period. Until it does, doesn't stutter, and follows Android design guidelines, I will feel that they are a substandard user experience that I feel isn't worth wasting time with."
androiddev,3dtt0y,justinharrison1337,3,Sun Jul 19 13:50:54 2015 UTC,"Alright, I have tried to follow android material design to the best of my ability. His design is pretty good to, not material but very utilitarian which is quite fitting for this app."
androiddev,3dtt0y,ZakTaccardi,14,Sun Jul 19 14:21:15 2015 UTC,phonegap is bad and any developer of a phonegap app should feel bad.
androiddev,3dtt0y,r4md4c,5,Sun Jul 19 14:59:41 2015 UTC,"phonegap is bad and any developer of a phonegap app should feel bad.   I've been developing Phonegap applications for about 1 year for iOS/Android, and I can confidently fully agree with you.  Your application is under the mercy of the underlying WebView (which usually was crap in pre-KitKat), and most of the time the designers tended to always provide me with crap designs as if they were designing a web page."
androiddev,3dtt0y,ZakTaccardi,1 point,Sun Jul 19 18:02:34 2015 UTC,"for iOS/Android, and I can confidently fully agree with you.   nothing worse than each platform implementing a different version of the webview too. Crosswalk does help with that though, too.  Yeah, a lot of designers don't understand how easy it is to use the built in components compared to rolling our own UI elements."
androiddev,3dtt0y,r4md4c,1 point,Sun Jul 19 18:04:43 2015 UTC,"Crosswalk does help with that though, too.   Yeah Crosswalk will help but depending on XWalk, would make your APK size jump to at least >= 20 MB.  So you are in disadvantage while using it, unless you are developing an In-House application."
androiddev,3dtt0y,dccorona,1 point,Sun Jul 19 18:10:04 2015 UTC,"If designers admit that it's ok to just use the built in elements, they're diminishing their own value. Layout is still important, but when you come out and say ""half of what I do isn't necessary anymore"", then you're going to find that people won't want to keep paying you the same amount of money.   Basically, they have a vested interest in rolling their own UI elements."
androiddev,3dtt0y,ZakTaccardi,1 point,Sun Jul 19 20:06:14 2015 UTC,"That's completely incorrect. There's a lot more to design than making pretty layout elements.   It's about designing apps that create good UX. How an app flows from screen to screen. What the app does.  Mastering the material design library is a huge asset for an Android designer, because it helps facilitates a good UX.  It's the designer's job to make it so the developer can not worry about design and only have to focus on programming the app."
androiddev,3dtt0y,dccorona,1 point,Sun Jul 19 20:32:17 2015 UTC,That is what I meant by layout. I just didn't find it necessary to go into the specifics of what that portion of design entails.
androiddev,3duj7u,mcgowagd,1 point,Sun Jul 19 16:43:44 2015 UTC,"The way I've seen it done (not saying its right, but I don't have a problem with it) is to separate the calls. I tend to have to deal with multiple rest adapters for each back end I use. The one for analytics gets just one thread, the others have more."
androiddev,3duj7u,bart007345,1 point,Sun Jul 19 19:55:34 2015 UTC,"Thanks, that might be the way to go. Alternative is creating a custom scheduler which might be overkill for my requirements at the moment."
androiddev,3duj7u,getonmalevel,1 point,Mon Jul 20 08:40:06 2015 UTC,"Out of curiosity, don't Analytics normally get batched? So it shouldn't be a common problem. Perhaps I'm not familiar enough with them though :P"
androiddev,3duj7u,ZakTaccardi,1 point,Sun Jul 19 18:46:26 2015 UTC,"they get batched, and the default time period is 30 minutes.  I wonder if Analytics integrates with the GCM Network Manager at all."
androiddev,3duj7u,jackhexen,1 point,Sun Jul 19 19:05:27 2015 UTC,"You mean Google Analytics? I am talking more in a general sense, you have a app, that uses rx java for the the api calls to your server and you want some of them to be low priority (an analytics api call was just an example). What mechanism in rx java do you use? That's what I'm asking."
androiddev,3dvbkm,foxdye96,2,Sun Jul 19 20:44:30 2015 UTC,"Maybe off topic. But with TabLayout in the design support library, I found it's simpler to do tabs. Just setup it with a view pager."
androiddev,3dvbkm,aaronmix,1 point,Sun Jul 19 22:01:22 2015 UTC,How do i do that. Im new to android.
androiddev,3dvbkm,DonMahallem,2,Sun Jul 19 22:03:17 2015 UTC,Just look at this Sample-Project. It has some nice samples on how to use the design library. Just use 22.2.0 and not 22.2.1. On the latest the release the tabs seem broken.
androiddev,3dvbkm,farsidesoul,1 point,Sun Jul 19 23:23:35 2015 UTC,"aight, thanks buddy"
androiddev,3dvbkm,farsidesoul,2,Sun Jul 19 23:50:36 2015 UTC,"Have a look at the imports for your fragments, check they are extending android.support.v4.app.Fragment; rather than android.app.Fragment"
androiddev,3dvbkm,farsidesoul,1 point,Sun Jul 19 22:04:04 2015 UTC,ok  edit: doesnt work
androiddev,3dvbkm,farsidesoul,2,Sun Jul 19 22:04:37 2015 UTC,Can you post the code for one of the fragments you're trying to host?
androiddev,3dvark,traxgod,3,Sun Jul 19 20:37:44 2015 UTC,I use retrofit for networking. Really good.
androiddev,3dvark,bart007345,1 point,Sun Jul 19 20:40:19 2015 UTC,"Say I need to connect to an endpoint I'm not in control of. All HTTP responses are 200 no matter the request. On bad requests and even database failures, the response body contains a single closing bracket. Is there an easy way to handle this?"
androiddev,3dvark,TiberiusAbadon,1 point,Sun Jul 19 22:07:29 2015 UTC,"assuming a correct request returns something that can be converted into a Java object, then you could catch the exception thats thrown when it fails in your code.  For example, retrofit has built in support for GSon. GSon will throw an exception because it can't convert to the object."
androiddev,3dvark,bart007345,1 point,Sun Jul 19 22:20:44 2015 UTC,Spring Android or Retrofit
androiddev,3du0jm,supBot,2,Sun Jul 19 13:31:25 2015 UTC,I think everytime you enter an url into it's search it sends that url back to it's servers and adds it to the database. So that next time a person can find that blog/rss channel by searching using keywords instead of the whole url.  It clearly keeps a tally of how many people are subscribed to a blog within feedly as it shows you an approximate count.  I think feedly downloads all it's RSS data onto it's own servers then feeds it back to the user in it's own format.
androiddev,3dthoh,iEmerald,9,Sun Jul 19 08:20:59 2015 UTC,"Gonna tell you now it'll be painful.  Mines a 3 year old laptop, 8gb ram and an ssd and turning on Android Studio is cpu intensive for a few minutes while everything indexes and initialises.  Android sdk, libraries, studio settings/project/doc tooltips, genymotion emulator.  Even a cheap low end laptop from last year will be much better to dev on than your 6 year old device."
androiddev,3dthoh,twigboy,1 point,Sun Jul 19 08:39:26 2015 UTC,Looks like I need to invest in a good custom PC then.
androiddev,3dthoh,twigboy,2,Sun Jul 19 09:29:02 2015 UTC,"Not really. It's just that devs need modern hardware to run more than most people would normally. Usually it's stuff like cross referencing big libraries, trimming down builds, compressing/compiling and extra memory required for debugging.  You don't need an impressive gaming rig to do that stuff, just modern hardware. Stuff that's 6 years old is ancient by computing age. Your HDD alone should already have passed it's expected lifespan of about 3-4 years."
androiddev,3dthoh,WingnutWilson,4,Sun Jul 19 11:34:25 2015 UTC,"My laptop is 7 years old running the same specs, Android Studio has become torturously slow ever since about the time AS came out of beta. Luckily I have a home PC, but I find it very hard to get anything done on the laptop today."
androiddev,3dthoh,Veboy,2,Sun Jul 19 11:02:42 2015 UTC,"What about trying Android Studio on a more minimal OS, like a linux distro that has small footprint and a light desktop manager?     eyes on Linux Mint 17.2 MATE"
androiddev,3dthoh,cylon_u87,4,Sun Jul 19 11:27:53 2015 UTC,"You might get minor improvements, but it's not going to be THAT different."
androiddev,3dthoh,jvrodrigues,3,Sun Jul 19 16:15:27 2015 UTC,"To have the IDE a little bit faster, I use File > Power Save Mode to disable inspections and some background tasks."
androiddev,3dthoh,awwwwwwsick,1 point,Sun Jul 19 11:17:44 2015 UTC,That sounds promising! Wish I couldn't of uninstalled it so I could try it. Anyways I'm getting Mint 17.2 MATE on this Notebook and I'll try Android Studio on that too with this option enabled.
androiddev,3dthoh,jvrodrigues,3,Sun Jul 19 11:29:02 2015 UTC,The ammount of time you're going to waste with long compile times freezes etc would pay for a new computer in about 2 months making the average android dev hourly rate.
androiddev,3dthoh,awwwwwwsick,1 point,Sun Jul 19 11:54:10 2015 UTC,What is the average android dev hourly rate?
androiddev,3dthoh,jvrodrigues,2,Sun Jul 19 15:52:14 2015 UTC,30-40 bucks in first world countries. If youre not on a first world country you can always do Freelance and make the same amount.
androiddev,3dthoh,awwwwwwsick,1 point,Sun Jul 19 16:25:20 2015 UTC,"I was just wondering because I just started negotiating an hourly rate with a company, asked for 40-45 expecting to be haggled down to 35."
androiddev,3dthoh,jvrodrigues,2,Sun Jul 19 16:48:23 2015 UTC,Thats decent. Junior level? Senior should be twice as much.
androiddev,3dthoh,nacholicious,1 point,Sun Jul 19 16:53:25 2015 UTC,Freelance. Occasionally some startups reach out to me to make their apps and I'm still in school so it's pretty nice.
androiddev,3dthoh,Wispborne,2,Sun Jul 19 16:57:22 2015 UTC,Good amount congratulations mate.
androiddev,3dthoh,eighthCoffee,1 point,Sun Jul 19 17:01:34 2015 UTC,"I don't think 4GB will be enough, I had that and had to switch to 8GB in order to do anything. Though as long as you don't run the virtual machine I think it should be fine, I used my 4 year old laptop and it worked fine just for compiling"
androiddev,3dthoh,Wispborne,2,Sun Jul 19 09:47:51 2015 UTC,"I can still install and run Android Studio, but the unresponsivness of the IDE is just horrible!!"
androiddev,3dthoh,eighthCoffee,2,Sun Jul 19 10:11:32 2015 UTC,"Make sure you increase the default RAM available to it. Mine freezes up sometimes on my 16GB RAM, i7 4790K CPU, SSD-only laptop until I remember that I forgot to increase the default RAM after an Android Studio update (which blows away the app settings).  Instructions here: http://tools.android.com/tech-docs/configuration  I increase from 750m to 2048m and the IDE is smooth as silk. Gradle is another story.  ALSO I frequently find my RAM usage at 9 GB between Chrome, Android Studio, and Genymotion, so I wouldn't recommend 8GB to anybody. You can do it, but RAM's not too expensive and is easy to upgrade."
androiddev,3dthoh,eighthCoffee,1 point,Sun Jul 19 11:41:52 2015 UTC,"The reason you find yourself at 9GB ram is because the computer is using it even for things that could be freed up.    My desktop has 4GB of ram that handles Firefox, AS and Genymotion just fine. I'm going to buy 8GB stick just so that I can have both tablet and phone genymotion running with decent ram."
androiddev,3dthoh,didacticpoetry,1 point,Sun Jul 19 20:54:38 2015 UTC,"Eh, I had 8GB on my work computer and I was constantly hitting the ceiling with Firefox, AS, and Genymotion. Since I had a 5400 RPM HDD, if it started swapping then it was gg.  I'd be surprised if your desktop had an HDD. With only 4GB, you should start swapping pretty quick."
androiddev,3dthoh,didacticpoetry,1 point,Sun Jul 19 21:12:32 2015 UTC,"That might be the case also, yeah. I'm have both AS and the project files on SSD. Genymotion on HDD."
androiddev,3dthoh,pjmlp,2,Sun Jul 19 21:19:23 2015 UTC,"The memory is not an issue. My netbook has 4GB, I tried running AS today, giving it 2.5GB of ram. It never uses anything like that. The problem is CPU.    My desktop is pretty old as well, only has 4GB of ram, but it can run AS with zero issues, alongside with tablet/phone emulator because of the CPU."
androiddev,3dra8p,bart007345,19,Sat Jul 18 18:19:24 2015 UTC,"I always get confused on whether or not the use a fragment or activity. Most of the internet says to always use fragments whenever you can but when I try to use a fragment, the language that tutorials makes it seem like it's not something to be used all the time - only when you have a view that can be reused. That really seems like the best use for a fragment."
androiddev,3dra8p,caleb_dre,3,Sat Jul 18 19:31:38 2015 UTC,my question is whether to create multiple activities that control fragments for some feature or have one activity that controls multiple fragments across features.  Using fragments at all is another question for another time!
androiddev,3dra8p,superPwnzorMegaMan,1 point,Sat Jul 18 19:35:01 2015 UTC,"The way I did it in a recent app was using activities for individual screens and fragments for stuff that was being shared or that had to be fragments because of technical reasons (tablayout for example).   I used a shared fragment in the view xml which worked pretty good, although the error reporting sucked. It destroyed the underlying exceptions."
androiddev,3dra8p,mrjammer,1 point,Sat Jul 18 21:05:15 2015 UTC,"I swiched to one main activity to control each fullscreen fragment in order to have a navigation drawer aka side menu, which shouldnt reload each time i navigated to a new ""page""."
androiddev,3dra8p,alienwraith,2,Sun Jul 19 03:42:31 2015 UTC,"Fragments are always useful, if you intend to slide components around to fit different screen sizes"
androiddev,3dra8p,pakoito,2,Sat Jul 18 20:43:03 2015 UTC,"You mean Views? Because orchestrarting master-slave fragments with intercommunication is still a PITA. Lift that logic to the activity, fragments can be replaced by stateless views."
androiddev,3dra8p,noobermcgee,2,Sun Jul 19 10:04:46 2015 UTC,Agreed. Fragments were an interesting idea but they added too much complexity when all most people needed were custom ViewGroups.
androiddev,3dra8p,Arighea,1 point,Sun Jul 19 23:07:47 2015 UTC,"Something I've done recently is put my main content into activities and inflate dialogs with custom layouts for anything temporary like menus and text entry. I've never even used fragments before, I'm not sure I understand the advantage over an activity."
androiddev,3dra8p,zemmekkis,-4,Sun Jul 19 01:19:03 2015 UTC,"There is no real debate between a Fragment vs Activity. All apps should be using a mix of activities and fragments.  I like to think of Fragments as sub activities. If they were designing Android dev again I'm sure Activities would simply be fragments and have all the functionality. But where we are now fragments have lots of little things that help you organize your user interface.  When deciding between Fragment or Activity you have to go back to your original user interface. And sometimes it isn't clear. For example with reddit suppose you are viewing a comment and you want to see a user's profile. The comment viewing can be it's own Activity. The question is whether the action ""viewing the user's profile"" is a fragment or activity.  If I were to design it I would probably use a Fragment because the user experience I want is to be able to show the user's profile details and then quickly hit back.  However I could be convinced to use an Activity if there was a lot of stuff I could do on the user's profile page. Suppose it was an administrator's view of the profile page (like editing e-mail/name/etc). This seems ""bigger"" in scope and thus may warrant an activity with more fragments.  The problem with tutorials is that they don't go much into what experience you are trying to achieve and where the app might grow architecturally.  Activities are good for larger things. Fragments are good for smaller tasks/screens.  I would say anecdotally that there is about 1 activity for every 2-4 fragments. If you have 10 activities and no fragments I think that is a bad code smell. Same way with 1 activity and 10 fragments. It means you didn't think about how you are organizing the information."
androiddev,3dra8p,supbroimbad,-2,Sat Jul 18 21:57:25 2015 UTC,From what I understood the fragments are harder to right but let you do all sorts of changes that would require major activity overhaul otherwise.Think of the fragment like a whiteboard and the activity like a piece of paper-would you rather right it for good or leave yourself the option to easily rewrite it?
androiddev,3dra8p,okmkz,10,Sat Jul 18 22:08:41 2015 UTC,This is a terrible analogy.
androiddev,3dra8p,Zehhu,11,Sun Jul 19 01:34:10 2015 UTC,"Balance I think is the key.  One god activity is not a good idea however I do agree in keeping activities limited. The same goes for one fragment per activity. Thats a ton of boilerplate code.   The app I'm working on has multiple pages for sign up which are just multiple fragments contained to a sign up activity.   We do the same for an Add Friends flow we have. Where we have multiple screens and break it out into multiple fragments contained to one activity.   This has kept our activities pretty small (200-300 lines) and made our fragments pretty easy to work with.    The goal I believe is finding a good balance where it makes sense. Trying to do one size fits all for every Android app you work on isn't going to work. If it doesn't sound like a good fit for your app maybe it isn't. Try it out if you can and if it doesn't work, keep with what does work."
androiddev,3dra8p,donnfelker,9,Sat Jul 18 19:51:34 2015 UTC,"I use this pattern in a few apps. You can separate routing  logic out into a routing controller and then put main screen interaction into a Supervising Controller. Each fragment can the. Have logic in the Fragmented for ui stuff or it can have a presenter. I need to create a test project to demo this. Actually, I'll just update Android Bootstrap to do this probably as a demo."
androiddev,3dra8p,bbqburner,7,Sat Jul 18 21:50:28 2015 UTC,"Since I've been using both extensively, if you started doing more advanced stuff with nested fragments, multiple activities extending from a singular base is the way to go.   Simplistic fragments with one god activity is fine for simple cases (plus silky smooth transitions) but once you started going more deeper into it, you will realize the seams holding it all is very thin and brittle, especially with nested fragments (the fuckiest of them all)."
androiddev,3dra8p,Dr_funny_guy,1 point,Sun Jul 19 00:53:30 2015 UTC,"if you started doing more advanced stuff with nested fragments, multiple activities extending from a singular base is the way to go   That's mostly because googles implementation of fragments is pretty buggy. Nested fragments, is a cool feature but it's buggy as hell, you still can't have a nested fragment start an activity for result. Not to mention complete fail with popping transactions on the fragments stack."
androiddev,3dra8p,leggo_tech,5,Sun Jul 19 22:10:42 2015 UTC,"Don't look too far into what he's saying. I don't think he's saying to have only 1 single activity, he's just saying to make sure that they're meaningful entry points into your application."
androiddev,3dra8p,zoranor,3,Sat Jul 18 22:35:23 2015 UTC,"I have during the last couple of years worked with two different large Android apps, that both have a fair amount of legacy code (one of them was initially supporting android 1.5). As you can imagine both of them utilize Activities quite a bit, which has made things challenging when you do major refactoring works or add large features.  And I can quite definitively say that I vastly prefer keeping a very low Activity count, and instead highly utilizing Fragments. This is due to a few reasons.  Fragments allow you to easily keep critical objects around when you swap screens. For example a socket connection, which was what we needed to keep alive between our screen switches.   Refactoring the flow of an app can become so much easier if the app is mainly composed of Fragments, if the fragments are kept unaware about their environments, free from assumptions, or if the assumptions are well documented and understood.  When it comes to managing screen navigation I have done so by assuming base functionality of any activity in the app, by for example  having a BaseActivity class that simply inherits from Activity, and that keeps all my fragment transaction code and knowledge about what should happen when one fragment for example asks to be removed. And any activity could of course override any of those methods to change the behavior from the default (for example showing some other fragment when one asks to be removed, popping the back stack or whatever).   The way I see it, keeping things modular when using fragments is based a lot on not allowing a fragment vision outside of itself unless it's very specific. Try to standardize how you create different fragments. Use a factory pattern for example, that way you can even remove some boiler plate there, and it requires you to specify what the fragment requires to perform it's function. Rule of thumb that I like is: A fragment should be able to function wherever in the flow you place it, as long as you have the required inputs to create the fragment from the Factory. This allows me to turn the above into a question I ask myself every time I convert something into a fragment or create a new one. Extra bonus: Testable stuff!  Oops. Wall of texts. Ah well."
androiddev,3dra8p,mavdev,6,Sun Jul 19 01:19:03 2015 UTC,"Yes, I use one single activity and use Fragments to change views. is that what you are referring to?"
androiddev,3dra8p,mavdev,3,Sat Jul 18 19:41:59 2015 UTC,correct.
androiddev,3dra8p,Exallium,1 point,Sat Jul 18 19:50:29 2015 UTC,"Yea, its so much easier to manage the app. I do it because it's easier, for me."
androiddev,3dra8p,YeomansIII,11,Sat Jul 18 19:55:18 2015 UTC,"can you elaborate on how you manage this? What patterns do you use to represent a set of fragments for a particular ""screen""?"
androiddev,3dra8p,zemmekkis,1 point,Sat Jul 18 20:06:11 2015 UTC,Check out squares flow library on github. I use that with RX to build a router for my app.
androiddev,3dra8p,getonmalevel,1 point,Sun Jul 19 11:55:01 2015 UTC,"I recently began my first full scale app and am using one activity with multiple fragments.  I have a full height and width container inside of my main layout for full screen fragments. I shall use a fragment for the slide navigation and a sorry media controller at the bottom of the screen (that stays there over all fragments). The full screen fragments are what I change out, I swap between a home screen, a screen for a user's ""group"", and a settings screen.  Since I am just using one activity, the media controller and navigation can persist on all screens."
androiddev,3dra8p,getonmalevel,2,Sat Jul 18 21:40:14 2015 UTC,Can you link to the podcast?
androiddev,3dra8p,entropio,1 point,Sat Jul 18 18:48:07 2015 UTC,here
androiddev,3dra8p,Phreakhead,1 point,Sat Jul 18 18:57:42 2015 UTC,"I agree with him. Currently finishing up working on a production application which is almost all fragments. Once you write a fragment utils class to help with navigation it comes pretty intuitively. An activity should represent a ""contextual"" change. E.g. you go away from rootscreens to a flow, or a modal, etc."
androiddev,3dra8p,mrdibby,1 point,Sat Jul 18 19:35:19 2015 UTC,"Also keep in mind, unless i'm mixing up my testing, you unit test the VM/Presenter, and do regression testing/ monkey testing on views.."
androiddev,3dra8p,2nd_reddit_account,2,Sat Jul 18 19:43:57 2015 UTC,It depends on the app. I'm using fragments for complex navigation and if I need to keep some objects alive while changing views or if I need flawless transition animations. I prefer activities for simple navigation apps when I have a database and I can just pass id in the intent to load data in a new activity.
androiddev,3dra8p,mrdibby,1 point,Sun Jul 19 05:28:24 2015 UTC,"This. It's very hard to do custom animations between Activities. With Fragments or views you have lots of flexibility. Especially with the focus on motion design in Material Design, you want that degree of flexibility.  This is similar to what happened to web sites years ago. People used  AJAX to load new views without actually change the page in the browser. Now it's pretty much standard practice."
androiddev,3dra8p,2nd_reddit_account,2,Sun Jul 19 17:06:27 2015 UTC,"The way things generally go for me is if you're doing horizontal navigation you'll probably just need a new fragment, if you're doing vertical navigation you will probably help yourself by creating a new activity."
androiddev,3dra8p,mrdibby,1 point,Sun Jul 19 09:19:00 2015 UTC,"so for example, when you have a navigationdrawer that has multiple screens which have tabs, you would make an activity for each item in the navigationdrawer?"
androiddev,3dra8p,2nd_reddit_account,3,Sun Jul 19 09:22:32 2015 UTC,"Not necessarily. In many apps where I have a nav drawer, I'll have the MenuActivity and lets say the nav drawer has Home, News, and Settings buttons - those 3 screens will be fragments held in the MenuActivity, because you're navigating horizontally between the 3. But lets say the NewsFragment is a list of news article headlines, you click on one of those and it takes you to the full article, I'd have that next screen in a new activity (because its vertical navigation) - so I'll have this new NewsActivity which hosts a NewsArticleFragment or many (perfect opportunity for a ViewPager that swipes between articles - because navigating from one article to another would be horizontal navigation).    You might want easier to understand class names (NewsFragment and NewsActivity for example are a tad vague in this instance) but I think you should get where I'm coming from."
androiddev,3dra8p,mrdibby,1 point,Sun Jul 19 09:31:53 2015 UTC,Thanks!  What if both Home and News need to host tabs. Would you still go with one MenuActivity?
androiddev,3dra8p,2nd_reddit_account,1 point,Sun Jul 19 09:37:45 2015 UTC,"Not sure exactly what you mean by ""host tabs"" in this case."
androiddev,3dra8p,crackshot87,1 point,Sun Jul 19 09:44:04 2015 UTC,"I meant to have a viewpager. if Home and News would both have a swipable viewpager in this example, would you still go with one MenuActivity?"
androiddev,3dra8p,dccorona,2,Sun Jul 19 09:47:07 2015 UTC,"I probably would, yes. But, depending on the content of what's hosted in those ViewPagers, I'm not sure whether it would be the correct design decision.    The thing is you may also get to a point where you want the same NavigationDrawer to be visible on two levels of the navigation, e.g. both the Root level which has Home, News, Settings and the next level that has the NewsArticleFragments - here is where it gets messy and you might end up using a single Activity for both levels, or two activities where you are then creating the NavigationDrawer in both. Personally I don't like creating the same views multiple times, however if you have a single activity then you have to manage the fragment stack and the back button navigation behaviour more.    I think unless a new way of navigating easily appears, there won't be a perfect way to go with all apps. I am interested in the Fragment-less navigation solution using Flow and Mortar, but haven't had the opportunity to experiment yet."
androiddev,3dra8p,alienwraith,1 point,Sun Jul 19 10:07:49 2015 UTC,Thank you!
androiddev,3dra8p,nemec,1 point,Sun Jul 19 10:27:40 2015 UTC,That's my rough rule of thumb for what to choose - activities to navigate up/down the tree and fragments for navigating across siblings (obviously there are exceptional cases).
androiddev,3dra8p,dccorona,4,Sun Jul 19 16:10:36 2015 UTC,"My guess is that Google Android developers don't unit test anything so its not something they consider important.   I would be very surprised to learn that. Pretty much all tech companies that reach a certain size (which Google definitely has, and even if you considered Android to be its own company, it would still qualify) end up putting at least a moderate emphasis on testing.  It's been a while since I developed for Android, so I don't really know what best practices are anymore, but I can see where the ""one activity"" pattern might stem from. There's not really a concept of an ""app"" on Android once you get down to the runtime level...it's just a bunch of activities that have been bundled together. There might be advantage, then, in using a single activity...after all, the only availability guarantee you can really make to yourself on Android is that if the user is in your activity, that activity will be kept alive and as-is...everything else can be booted by the system at any time, but they're never going to kill the foreground activity. If you get into the habit of using a string of activities and expecting that they'll all stick around so long as your user is in your ""app"", you could end up getting burned.   That said, I think those rare scenarios are worth dealing with in exchange for the advantages multiple activities gives you like easier navigation and a better way to compose activities to make multiple UX paths through your app."
androiddev,3dra8p,konk3r,3,Sat Jul 18 19:38:01 2015 UTC,"We unit test.. but we don't UT Activities.  Activities are covered by instrumentation and integration testing, or straight-out automated UI testing (e.g. robotium)  TBH our SDETs can never quite decide, especially as personnel churn over months and years, so we seem to use everything under the sun (and we never get fully away from the clickity-klack (manual testing))"
androiddev,3dra8p,warl0ck08,2,Sat Jul 18 20:42:00 2015 UTC,a moderate emphasis on testing   indeed it is moderate and mostly blackbox with emulators and real devices. There's plenty of examples of Google Android engineers not writing unit tests and Activities that are thousands of lines long.
androiddev,3dra8p,geecko,1 point,Sat Jul 18 19:56:31 2015 UTC,"Pretty much all tech companies that reach a certain size   I think (OP can correct me if I'm wrong) that OP was referring to Android developers in general (calling the OS ""Google Android"") rather than specifically referring to Google employees. I wouldn't have a hard time believing that most devs don't unit test their Activities..."
androiddev,3dra8p,ASKnASK,3,Sat Jul 18 20:04:59 2015 UTC,"Oh, in that case, definitely. Partly because unit testing isn't yet as commonplace as it should be, and partly because it's just not that easy to get going with it on Android."
androiddev,3dra8p,bubbleguuum,1 point,Sat Jul 18 20:17:00 2015 UTC,"And it's easy to be lackluster about keeping up on it even once you get things set up. It's not like frameworks such as rails where it's practically effortless, and I don't think we're going to see it get there anytime soon."
androiddev,3dra8p,jackhexen,1 point,Sun Jul 19 00:11:00 2015 UTC,"I keep one main, and then activities for anything I am going to want to open from a web redirect or notification as an activity if it makes sense for the app.   Most apps can easily get away with a singular activity.   Have a navutils class that handles opening and starting all of the activities for me that need to come from the other intents."
androiddev,3dra8p,MutualExclusion,1 point,Sat Jul 18 22:07:53 2015 UTC,I strongly agree with Chet. It's harder but it's the right thing to do.
androiddev,3dra8p,iNoles,1 point,Sun Jul 19 03:09:22 2015 UTC,I always create activities :( Never got into fragments. I don't use them unless it's unavoidable.
androiddev,3dra8p,Cg2XHPxz,1 point,Sun Jul 19 05:41:58 2015 UTC,"""Firstly, by having one activity, you are forced to write some sort of screen navigation logic. Not trivial, and can get messy.""  You mean, like every desktop computer program ? How could developers write software on these platform before Google invented ""Activties"", I do not know..."
androiddev,3dra8p,konk3r,1 point,Sun Jul 19 13:31:32 2015 UTC,"I'm not saying its impossible, I'm just saying it would need to be done if I moved to a single Activity model."
androiddev,3dra8p,Zhuinden,1 point,Sun Jul 19 14:40:04 2015 UTC,"I've tried both approaches, both work well, and I see no big difference in practice.  The only thing why I use multiple activities approach now is that I like to see how android applies standard activity animations on different android versions, this makes my app to look more 'native'.  P.S. I use fragments for sidebar navigation on my current project because of customer requirements."
androiddev,3dtidc,iEmerald,7,Sun Jul 19 08:32:37 2015 UTC,"TheNewBoston tutorials is actually what got me started with Android development. I know some people aren't a fan of his stuff but each to their own. If it works for you, use TheNewBoston. If not use Udemy."
androiddev,3dtidc,markyosullivan,13,Sun Jul 19 14:39:04 2015 UTC,Definitley thenewboston :-)
androiddev,3dtidc,thepoosh,1 point,Sun Jul 19 11:19:39 2015 UTC,"Is there a specific reason that makes you choose thenewboston? AFAIK udemy is made my Google so it's a bit more ""Official"", I just wanna get your opinions about this .. :/"
androiddev,3dtidc,thepoosh,7,Sun Jul 19 11:30:04 2015 UTC,"Well I am probably a bit biased since I made them, but the new series is really great for beginners. I made it for people who were completely new to Android development. Just make sure to watch the new playlist because the old one we made a few years ago is out of date: https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBsvRxJJOzG4r4k_zLKrnxl"
androiddev,3dtidc,tres_bien,3,Sun Jul 19 11:42:38 2015 UTC,"Bucky (or Travis), why keep the old version live? it lead me to write my comment here, and might be exposing new developers to old material.  that being said, thanks for the playlist that was my initial exposure to developing in this world and is a major part of me being what I am today in this world (developer in an app that has over 10M installs)"
androiddev,3dtidc,thepoosh,1 point,Sun Jul 19 13:12:36 2015 UTC,"Aside from some things (like using Eclipse, setting up a project, etc...) a bunch of the material in the older tutorials is still relevant. A lot of the core concepts that he taught back then are still used today."
androiddev,3dtidc,Aeon2303,2,Sun Jul 19 14:15:57 2015 UTC,"well, yes and no. back in the day, your videos were all about Eclair and the way to do things with the relevant Activity models.  since then we got so much improvements and tools to build everything! (i.e. think about the use of DefaultHttpClient to make network calls or NetworkOnMainThreadException)  In any case, they were awesome and I haven't watched the newer ones but I don't know if there was use of things like RecyclerView and Toolbars that are in very common use out there"
androiddev,3dtidc,jvrodrigues,2,Sun Jul 19 16:54:09 2015 UTC,Oh! I didn't see that coming :)    I will try following yours first then enroll in the udemy course.    Big thanks for the response! :)
androiddev,3dtidc,Money_on_the_table,1 point,Sun Jul 19 11:48:20 2015 UTC,You must be thinking of the Udacity course. That one is by Google. And it's free.
androiddev,3dtidc,bertweaze,4,Sun Jul 19 18:56:20 2015 UTC,"thenewboston is super cool!  edit: I was not aware of this new playlist that was published not too long ago when I wrote this.  /u/thenewboston is single handily in charge of me staying in this world after a very rough start for me in this world back in 2011, thanks a bunch dudes!"
androiddev,3dtidc,Vanguvang,4,Sun Jul 19 09:15:54 2015 UTC,"He has new videos, he shot them in 2014/11 so they're pretty new and based on Android Studio."
androiddev,3dtidc,mtmv2,4,Sun Jul 19 09:28:04 2015 UTC,"I remember watching some of the new boston videos and the repeated the phrase ""for the most part"" in pretty much every video (I watched more than 30). Sometimes repeatedly."
androiddev,3dtidc,YouShallNot_Parse,4,Sun Jul 19 10:31:10 2015 UTC,"Between you and me, a few years ago I made the new boston android tutorials, on the same month I got an android developer internship (based on the app I developed during the tutorials), went on to develop a few apps and move up the ladder. At this point I am a lead android dev in a fairly big company making more money in a month that I did in a year before thenewboston.  So cheers for him."
androiddev,3dre41,firetie,45,Sat Jul 18 18:52:26 2015 UTC,"Here are some of the best libraries that apply to almost any app. To me, these are must haves.   Android Support Libraries RxJava Dagger Retrofit An image loading library of choice - I think the best one currently is Glide, but that's up for debate. Google uses Glide 4.0 in Photos JSON/XML processing library, such as GSON/Jackson/SimpleXML ButterKnife (don't embarrass yourself with findViewById() calls LeakCanary (catch those memory leaks before you realize you have them)   Some nice-to-haves are   AutoParcel/AutoValue IcePick Timber (better logging)   Testing   JUnit Espresso Mockito Robolectric Hamcrest matchers   Last but not least - an understanding of a multi-layered architecture (separating the data layer from your presentation layer. For architecting the presentation layer, an understanding of MVP is pretty important. Saves you from a lot of spaghetti code in your activities/fragments"
androiddev,3dre41,ZakTaccardi,5,Sat Jul 18 19:45:04 2015 UTC,Well now I have embarrassed myself...
androiddev,3dre41,apollocanis,9,Sat Jul 18 23:22:10 2015 UTC,"I have to confess that although I've been a professional Android developer since the beginning, I've never even heard of most of those. I guess I should just bookmark this and start reading.  My own list:   Eclipse or Android Studio Git Support library Maven   I actually only know the first two, but the rest are on my list.  Frankly, the real list is:   How to program"
androiddev,3dre41,capilot,9,Sun Jul 19 00:10:29 2015 UTC,You've been a professional since the beginning and you've never used the support libs? What kind of crazy shop do you work in!?
androiddev,3dre41,okmkz,9,Sun Jul 19 01:48:30 2015 UTC,and never heard of most of the most popular libraries? doesn't make much sense
androiddev,3dre41,Cg2XHPxz,3,Sun Jul 19 02:29:44 2015 UTC,"I've been around since Android 1.2 and I'm gonna tell you now it's worth switching to Android studio (if you haven't already). Eclipse is great but it just can't get annotations right, and it seems that's where Android development has headed.  I've done the maven migration and I spent far too much time trying to get the pom.xml files ""just right"". Gradle kills it purely on simplicity alone.  Support library has become a staple after the inclusion of actionbar. Before you could get away without it by using actionbar Sherlock.  Retrofit let's you chain async server calls and synchronise responses of two or more in a clean manner. If you've ever done anything with jquery promises/deferred then it's like that.  Icepick is an autoparceler. Most of the time you'd be writing your own parcelling and unparcelling code. Icepick does it for you automatically (I prefer Parceller though)  And butterknife is highly recommended as a library to try out if you're new to annotations.  I've also got one that's called ""easy adapter"". Makes it super easy to render listviews compared to the usual adapter method."
androiddev,3dre41,twigboy,4,Sun Jul 19 08:29:37 2015 UTC,"Yeah, I guess I'm not what you call an early adopter. I learned to program with API 1 and rarely see the need to learn anything new.  I'm not a huge fan of libraries. It takes so long to find the right one, learn how to use it, and figure out how to get around its quirks to do what I really want to do, that for something simple I could have coded it up myself. Plus libraries have to handle so many cases that they tend to get bloated, and even proguard can't strip out all the cruft and so your app winds up becoming huge.  But yeah, I really should be learning the available libraries. I'm trying to become a better person.  I do use the support library when my task calls for it."
androiddev,3dre41,capilot,1 point,Sun Jul 19 16:20:48 2015 UTC,Relevant Codeless Code
androiddev,3dre41,capilot,4,Tue Jul 21 20:13:39 2015 UTC,"Obviously you can do anything yourself. But it's much more efficient to use a library. Sure, I could manually wire up network requests, or I could just have retrofit easily handle that for me.  By using retrofit, my code gains the power of the brilliant engineers that wrote the library, and I can spend more time on my more important task - making the app."
androiddev,3dre41,ZakTaccardi,2,Sun Jul 19 02:54:16 2015 UTC,"I worked on app a few months ago that made a lot of network requests to one of our backends. The code was using httpconnection (it was quite old). There was a bug (I think around multiple calls being made and one of them failing). I did my best to fix it but in the end I rewrote it using retrofit and rxjava. It worked well.  My colleague who I wrote it with moved to a different team and they had the same issue with calling this backend. He took the code (it was in a module so pretty painless) and I got a thank you from one of the manager's in that team for helping to making their app more stable.  Writing everything yourself sounds like a good idea but no one is perfect. Always be on the look out for good, stable open source libraries to use."
androiddev,3dre41,bart007345,2,Sun Jul 19 07:45:44 2015 UTC,Thank you for taking the time to put together this list. This is exactly what I'm looking for.
androiddev,3dre41,proachute,2,Sat Jul 18 19:58:05 2015 UTC,"There is not a single thing wrong with using findviewbyid rather than butterknife. Also, I would not include Rx as a 'must have'.  Not only that, but understanding OkHttp is probably more essential than Retrofit itself. Again, not a must-have.  I would counter too on Leak Canary considering the fact that the library itself even has leaks in it haha. Still a great library to know and use a bit, but by no means is it a must-have."
androiddev,3dre41,mrjammer,1 point,Mon Jul 20 17:49:09 2015 UTC,"Yeah thanks! I am currently having memory problems due to a custom surface view,  I'm going to look into these tools. Also do you happen to know a good tutorial for unit testing in android studio?"
androiddev,3dre41,ZakTaccardi,1 point,Sat Jul 18 21:52:39 2015 UTC,"Check out leak canary to avoid memory leaks. I recommend setting it to automatically watch for all activities. In your base fragment, you can watch for all fragment leaks too."
androiddev,3dre41,ZakTaccardi,1 point,Sun Jul 19 03:10:15 2015 UTC,unit testing what? pure java? or stuff with android dependencies?
androiddev,3dre41,mrjammer,1 point,Sat Jul 18 22:04:32 2015 UTC,Stuff with android dependencies.
androiddev,3dre41,ZakTaccardi,0,Sat Jul 18 22:13:03 2015 UTC,"There's no one good tutorial. You will have to Google around. Everything needs to be tested different ways  If you want to test Android views, use Espresso.  To test your data layer, use Robolectric. Version 3.0 plays nicely with Android studio and Gradle.  Testing is a long journey, and it becomes easier when you layer and decouple your code. That means - use interfaces! Even for things that may have only one implantation.  I have a ArticleRepo interface that has a methods for article data retrieval, implementation by an ArticleRepoImpl class. My views know nothing about implementation classes, just the interface. This makes testing for classes that use an ArticleRepo very easy because I can implement a custom interface just for that test."
androiddev,3dre41,mrjammer,1 point,Sun Jul 19 03:08:10 2015 UTC,"Yeah as my project grew i started to impliment interfaces. It's my first project so in kinda learning it all at once. I use a lot of time to figure the right approach for each new step wheter it'd be testing or other things. Thank you for your directions, these are much appreaciated."
androiddev,3dre41,ZakTaccardi,2,Sun Jul 19 03:19:23 2015 UTC,"yep! I know what you mean. My 2nd project was a lot better than my 1st, haha."
androiddev,3dre41,lacronicus,1 point,Sun Jul 19 03:20:51 2015 UTC,"I disagree with most of these as ""must haves"" and you left off the one that I would consider a ""must have"" (okhttp)  A ""Must have"" literally means ""must be in your app, or it's bad,"" and I think only the support libs (which I'd argue are just part of the platform more than a library), okhttp (which is being merged into android anyway), and some image loading library are necessary (google even uses picasso in their documentation for the data binding library).   The rest range from really convenient to not worth the time. I use retrofit, rxjava, dagger, gson in practically all of my apps, but I wouldn't reject a test project outright that failed to use any of them.   I didn't even bother using butterknife in my last project due to how little time it would have saved me, I rolled my own timber-like class, and icepick felt like more trouble than it was worth when I gave it a go. Autoparcel could just as easily be replaced by the parcelable IDE plugin, I'd consider it a matter of preference.   Don't get me wrong, these libraries are useful, but it's overblowing it to say they're absolute must-haves. You can create a stable, full-featured app without them. Familiarity with them is great, but that's not the same thing."
androiddev,3dre41,ZakTaccardi,1 point,Tue Jul 21 14:09:53 2015 UTC,"technically, nothing is a must have. you can just use the framework for everything.  ButterKnife is very important for code quality because then you don't have to worry about memory leaks with listeners. ButterKnife.reset() clears out all your listeners."
androiddev,3dre41,lacronicus,1 point,Tue Jul 21 14:12:20 2015 UTC,"Even in a general sense, nothing is a must-have, and that's my point. You can do a great deal with just the framework, and I believe that jumping in with libraries when you don't really understand what they do or why they do it is potentially dangerous.   You don't have to worry about memory leaks anyway. Barring a really weird setup, the only thing holding a reference to your views should be your activity/fragment, and so when those get GC'd, so too do your views, along with their listeners. You don't have to clear them out manually.   IIRC, the reason that unbind() there is because, if you don't call it, your fragments might get injected with stale views, attached to an old fragment, and then when you try to do something with them, bad things happen. I know I've had it happen to me when I forget to call unbind.   Which brings us back to my point: most libraries are just a layer of abstraction over some set of details, and if you don't understand the details, you're liable to make mistakes you might not otherwise have made.   Sure, on some level you just have to trust the framework and libraries to do what they should, but most android developers know the troubles inherent to that (you can't go a day here without someone complaining about how some phone doesn't do what it's supposed to)."
androiddev,3dre41,jrummy16,7,Tue Jul 21 14:42:26 2015 UTC,IMO you will be more marketable by understanding concepts and not showing that you have mastered some tool or you are familiar with a specific library.
androiddev,3dre41,ZakTaccardi,3,Sun Jul 19 04:53:57 2015 UTC,"Concepts are important, but I think a very important concept to understand is how to use libraries. No one should ever write their own image loading code when a library like Glide exists. Or manually parse a JSON file while they could be using GSON.  It's very important to understand how to use tools developed by others to enhance your own product."
androiddev,3dre41,jrummy16,0,Sun Jul 19 07:44:20 2015 UTC,"I agree with you. However, I think people overuse JSON parsing libraries. If you know the JSON format why not use org.json? No libraries needed."
androiddev,3dre41,ZakTaccardi,0,Sun Jul 19 08:28:00 2015 UTC,"Umm... Why would you ever manually extract data from a JSON file?  Make a Java class that mirrors your JSON file, then deserialize your file directly into your class via a library. Saves a lot of time and bugs."
androiddev,3dre41,jrummy16,1 point,Sun Jul 19 08:37:27 2015 UTC,An example of why you would want to do this is from a library project I found on android-arsenal yesterday.  json2Notification uses Jackson to parse some JSON. What if I'm not using Jackson but want to use the json2Notification? That's an extra dependency that I don't want or need. IMHO he should have just used org.json instead of Jackson.
androiddev,3dre41,eiais,6,Sun Jul 19 09:20:24 2015 UTC,"A version control system, most likely git."
androiddev,3dre41,rogthedev,1 point,Sun Jul 19 05:24:18 2015 UTC,"I suggest focusing more on general knowledge rather than being experienced in a set of tools or libraries. For example be familiar with  1.Interacting with APIs and/or some sort of backend   Android SDK and support libraries Design patterns and how they apply in the mobile context with all the added constraints Testing strategies (unit testing, behavioral-driven testing, etc) Being able to interact with creative and business resources to weight in your knowledge with the platform for any major decisions affecting the product"
androiddev,3dre41,BorgDrone,1 point,Mon Jul 20 01:33:13 2015 UTC,A straightjacket ? ;)
androiddev,3dre41,Anderson82,-4,Tue Jul 21 20:01:24 2015 UTC,Unity 5 with C# scripting if you are interested in games or graphics heavy applications.
androiddev,3dre41,Horonigai,2,Sat Jul 18 19:06:44 2015 UTC,C# is not a scripting language.
androiddev,3dti7t,2nd_reddit_account,4,Sun Jul 19 08:30:16 2015 UTC,You can achieve it by implementing nested fragments and not activities.
androiddev,3dti7t,dubsmash,2,Sun Jul 19 09:35:37 2015 UTC,"I achieved this by using a MainActivity that has a NavigationView in the layout. The tabbed viewpager is in one of the navigation fragments, which holds 3 child fragments. This is common, from most examples I've seen, as viewpagers only work with fragments.   When working with viewpagers though, make sure the child fragments are easy to recreate, as one trouble I've had with this nav+tab setup is they tend to get destroyed often. It is only recently that I've used this setup, but it's been a little hard to configure properly. I still have a bit more to learn/debug myself, in terms of keeping things together after configuration changes."
androiddev,3dti7t,TheSamich,1 point,Sun Jul 19 17:26:05 2015 UTC,"My app is a NavDrawer with ViewPager and Fragments.  I'm probably in the same boat as you, but I might be able to lend some of my experience with ""keeping things together"" and saving state etc.  I use a FragmentStatePagerAdapter for mine, as I think it is better on memory. I don't use saveInstanceState, because I also want to persist the data next time the application is launched, but essentially the way it works is fairly straightforward (once you get your head around it)."
androiddev,3dui3l,jb53845,1 point,Sun Jul 19 16:34:01 2015 UTC,I believe you want the second formula explained here: http://www.thecalculatorsite.com/articles/finance/compound-interest-formula.php
androiddev,3dt1l5,FasterThanTW,5,Sun Jul 19 04:27:16 2015 UTC,"Not sure what you are talking about, because the general consensus is Android Studio blows Eclipse out of the water. For hardened Eclipse warriors, the change can be confusing of course.  What type of development are you doing? NDK? or pure java? Multidexing murders build times, because it breaks incremental dexing.  Android Studio autosaves your files I believe. I actually don't even use tabs, because they slow you down: http://hadihariri.com/2014/06/24/no-tabs-in-intellij-idea/  Under the Project tab (ctrl+1), I have the Android view selected (top left). I see file extensions for all my non-java files. Seeing .java file extensions would be too redundant, and not having them is a great UX call in my mind.  Learn and master all these Android Studio shortcuts: https://plus.google.com/+KatherineKuanPlus/posts/4nVcb5JHVrk (they also work across all other JetBrains IDEs, too)."
androiddev,3dt1l5,ZakTaccardi,1 point,Sun Jul 19 04:56:45 2015 UTC,Thanks for the info and the link to the shortcuts.  I guess it comes down to just getting used to it. I can't expect to pick it up and be as comfy in it as I've been in Eclipse all these years.
androiddev,3dt1l5,jishhd,1 point,Sun Jul 19 06:11:24 2015 UTC,"I've found that AS will have some lag upon initially loading it up as it indexes all your project's files, with an additional little wait time when pushing your app to an emulator for the first time (since it has to build gradle and compile everything). I'm running an i3-4160 with 12GB RAM and it tends to run pretty smoothly overall, and that's with several instances of AS open, pushing to three emulators and my N4 simultaneously. It usually takes less than 30 seconds.  If you imported your project from something you made in Eclipse, perhaps there's some residual files leftover that may cause some slow-ups? I remember when I first switched from Eclipse to AS I ended up just rebuilding projects from scratch (pasting over files, letting gradle rebuild, etc) but that was only possible because it was a pretty small project I was working on at the time.  AS tends to save everything automatically (before closing and while building and running apps), so you shouldn't have to worry about things being unsaved before you quit - if it worries you, a quick CTRL+S will save everything.  Lastly about the file extensions: I'm pretty sure AS ignores file extensions, but I haven't checked if there's an option to display them. Test it out with a drawable for instance. I made an XML drawable and a PNG with the same name and AS complained.  Good luck adjusting! I recommend staying with AS since Google's dropped Eclipse support. It does keep getting better though!"
androiddev,3dt1l5,ThePickleMan,2,Sun Jul 19 05:02:27 2015 UTC,"Thanks for the insight. I am starting to see some of the lag dissipate now, so that's good.   Unfortunately I cannot successfully run my project, which I'm trying to work out now."
androiddev,3dt1l5,Zhuinden,1 point,Sun Jul 19 05:27:55 2015 UTC,"You may need to override Android Studio's settings to use more RAM. If I recall correctly, it doesn't request very much, which can cause performance issues."
androiddev,3dt1l5,ciny,1 point,Sun Jul 19 06:13:26 2015 UTC,"The Gradle build is sometimes being a bitch and takes 2 minutes while sometimes only 30 seconds, but other than that, AS performance hasn't had any issues for me with 8 GB RAM and an i5...  And it's definitely heaven and earth in terms of development speed. On Eclipse, whenever you press Ctrl+Space, it FREEZES FOR 5 SECONDS! I honestly don't know how people can develop anything like that.  Also, I hate spaces in directories. I prefer _. Things break without _  typically everywhere."
androiddev,3dt1l5,tomjb_,1 point,Sun Jul 19 07:58:09 2015 UTC,"I have a Core i5-2500k with 8Gb RAM   I have i5-2500k with 16GB ram and it works without problems. try having a look at the idea tuning guide maybe it will help   In addition to the performance issues, it doesn't seem to have an unsaved changes indicator on editor tabs, which in turn makes it impossible to know whether a save took effect or not   you don't save. everything you do is saved instantly, you don't have to do it manually."
androiddev,3dtiqu,Nyxtia,2,Sun Jul 19 08:39:18 2015 UTC,"The biggest job will be the back-end, which isn't really an Android development question. (Sorry not being very helpful)"
androiddev,3dtiqu,mrdibby,5,Sun Jul 19 09:20:40 2015 UTC,The biggest job is getting people to use it instead of Tinder
androiddev,3dtiqu,kaze0,1 point,Sun Jul 19 13:17:52 2015 UTC,This is a personal project and endeavor and would not directly compete with Tinder as it isn't for what Tinder is for.
androiddev,3dtiqu,JinSantosAndria,1 point,Sun Jul 19 15:55:29 2015 UTC,Yea which is why I figured I'd go with mongo db. Figured androidev could help me answer whether or not that is adequate but I can see it being out of scope.
androiddev,3dtiqu,Money_on_the_table,2,Sun Jul 19 15:00:14 2015 UTC,"Stick with what you know, at this stage there is no reason to value MongoDB over MySQL or PostgreSQL. Each of them will get the job done, even with multiple million users."
androiddev,3dtiqu,JinSantosAndria,-2,Mon Jul 20 17:16:47 2015 UTC,"I'm just starting to get into app development and while I'm starting to gain confidence in the actual app bit, I have 0 experience with back end and server work. What tools should I be looking at?"
androiddev,3dtiqu,mrdibby,1 point,Sun Jul 19 09:48:49 2015 UTC,"An easy REST-API framework based on a language of your liking (and yes, even PHP is OK). Some kind of data storage, easiest would be MySQL to get a good grasp about data integrity with some decent development tools."
androiddev,3dtiqu,Money_on_the_table,0,Mon Jul 20 17:15:44 2015 UTC,As an Android dev I'm not really going to be much help. r/webdev maybe?    I've worked on projects where people have used frameworks such as Rails or Spring to build the backend. That's about as far as my help can go unfortunately.
androiddev,3dtiqu,senzenmuc,0,Sun Jul 19 10:36:30 2015 UTC,"Sorry, I realised from what you'd said you were unlikely to know the answer, but sort of asked the question for anyone to answer. thanks though!"
androiddev,3dt0ix,aceofskies05,1 point,Sun Jul 19 04:15:20 2015 UTC,"SVG, maybe. VectorDrawable doesn't expose path information so it'd require some reflection hacks."
androiddev,3dt0ix,tadfisher,1 point,Sun Jul 19 04:22:37 2015 UTC,I dug around on this https://code.google.com/p/androidsvg/  But I didn't see a way to get the id of the path. Unless I am missing something...
androiddev,3dpwyr,plusCubed,5,Sat Jul 18 08:16:24 2015 UTC,"Looks great! I've been waiting for someone to give my old, neglected app a facelift. ;)  Too bad about getting rid of ""select partial"" - too difficult to port to Material? Or are you thinking of another design?"
androiddev,3dpwyr,nolan_lawson,1 point,Sat Jul 18 13:53:41 2015 UTC,"Thanks! I renamed ""Select Partial"" to ""Save Partial"" under the File menu. I think that's a more suitable name for what it does."
androiddev,3dpwyr,Quinny898,2,Sat Jul 18 14:15:05 2015 UTC,"Looking good, was going to materialize it (I Holo-ified it) but have had hardly any time recently (sorry /u/nolan_lawson!)"
androiddev,3dpwyr,instantbitsapps,2,Sat Jul 18 21:02:25 2015 UTC,So is this an app I would have my users download when I need them to capture logs?
androiddev,3dpwyr,instantbitsapps,1 point,Sun Jul 19 01:01:51 2015 UTC,"For that I would recommend Crashlytics for automatic log reporting when your app crashes, though you can certainly use this app in this way."
androiddev,3dpwyr,Saketme,1 point,Sun Jul 19 10:40:38 2015 UTC,I use Crashlytics but sometimes I just need logs because of weird things users report. I've gone as far as to send a fake exception to Crashlytics where I think the issue might be happening but collecting logs would be much better.
androiddev,3dqa0c,farmasek,1 point,Sat Jul 18 12:02:33 2015 UTC,"Hi, is there any library, that provides just day of week picker, something like this but only for days. i coul make it with some checkboxes, but it wouldnt look that great."
androiddev,3dqa0c,TODO_getLife,1 point,Sun Jul 19 09:24:48 2015 UTC,"What do you guys use for push messages? Our backend seems to be highly unreliable. We're thinking about dropping them all together, but surely it's something that's fixable?"
androiddev,3dqa0c,malkyl,1 point,Sat Jul 18 20:47:03 2015 UTC,there's always GCM - Google Cloud Messaging...
androiddev,3dqa0c,grutoc,1 point,Sat Jul 18 21:02:14 2015 UTC,Is there anyway to bypass Google Apps to push messages from a server?
androiddev,3dqa0c,TODO_getLife,1 point,Sun Jul 19 01:13:55 2015 UTC,"That's what we use. That and Apple's one for iOS. Handling it in the backend is what's fucking it up and getting them lost. We've been battling a big bug with them on our demo server because one specific notification wasn't showing up. That's sort of unrelated because its fixable, but we had issues with our real app too and we know PNs are not 100% reliable. It's a backend issue, but would affect my work just in general something I have to look into for the overall usability of our app.  I suppose this is more of a question about the whole idea of push notifications, do you guys use your own servers to manage them or use any systems already out there?"
androiddev,3dqa0c,malkyl,1 point,Sat Jul 18 21:15:09 2015 UTC,I wrote an app that uses a Service (http://developer.android.com/guide/components/services.html) to communicate with my own server. The Service runs as a seperate process and uses up memory.
androiddev,3dqa0c,malkyl,1 point,Sat Jul 18 21:21:59 2015 UTC,you know those apps that make you go thru a tutorial of how to use the app? Typically seen on apps that just went thru a significant redesign...  is there a library or project that developers use to build these?
androiddev,3dqa0c,jverm,1 point,Sat Jul 18 20:18:01 2015 UTC,Hi Reddit! I just finished my first game (a simple puzzle game) with pixi.js. I noticed it had limited capabilities for what I was trying to do.  What do you recommend making a full fledged 2D puzzle game with physics and particle effects. I've heard good things about Cocos2d. Any experience?
androiddev,3dqa0c,kokeroulis,1 point,Sat Jul 18 16:52:48 2015 UTC,"Hello,  I am using Otto + leakcanary in a demo application that i have made. I have try a lot of stuff but i cannot understand why otto is leaking... Any advice ? Thanks.  Here is my code, http://stackoverflow.com/questions/31390850/recyclerview-leaks-on-recreate"
androiddev,3dqa0c,bart007345,1 point,Sat Jul 18 16:21:22 2015 UTC,the SO answer i think tells you why. Otto is never garbage collected since its a static reference. Remove the static modifier. There's only ever one Application subclass anyway.
androiddev,3dqa0c,kokeroulis,1 point,Sat Jul 18 18:22:09 2015 UTC,"ok, thank you i see. I used the above approach based on mizuu.   https://github.com/MizzleDK/Mizuu/blob/master/app/src/main/java/com/miz/mizuu/MizuuApplication.java#L287"
androiddev,3dqa0c,bart007345,1 point,Sat Jul 18 19:20:08 2015 UTC,just had a look. My guess is the author of that library wanted to get the components statically rather than by getting the instance. Pretty sure leakcanary would complain about that approach too.
androiddev,3dqa0c,kokeroulis,1 point,Sat Jul 18 19:31:28 2015 UTC,So both getBus and _bus shouldn't be static. Then is something like MyApplication().getBus() legit or there is a better way to access the Bus?
androiddev,3dqa0c,bart007345,2,Sat Jul 18 19:39:48 2015 UTC,"well you could just ignore leakcanary on this because its not really a memory leak. The application object is special as there will only be one and won't die without killing your whole app anyway.  If you really want to do this without statics, get a reference to the Application instance via activity.getApplication() then cast to your sub class implementation. I suspect the boiler plate is why people use statics."
androiddev,3dqa0c,kokeroulis,1 point,Sat Jul 18 19:49:29 2015 UTC,OK thank you very much!
androiddev,3dqa0c,supBot,2,Sat Jul 18 19:55:21 2015 UTC,"So if I have two flavours; pro and free, and if someone buys the pro version, how do I have the app implement the pro features? I only just read about flavours, so I understand this is a very basic question.  Do I just make 2 folders under src called 'pro and 'free', and from the 'main' folder call classes from the flavour to use depending on what the package name is?"
androiddev,3dqa0c,bart007345,1 point,Sat Jul 18 15:30:37 2015 UTC,the way it works is there are two implementations. The first will be the one where its free and maybe returns to your main code that the feature is not available and the other will do the task.
androiddev,3dqa0c,supBot,1 point,Sat Jul 18 18:25:57 2015 UTC,"Yeah I get the concept. I meant to ask how to check if I should be providing the paid feature or not? Say I have an ad in the free version, and don't have one in the pro version. So I have three folders; main, free and paid. If the user is on paid version, I do not want to initialize an ad, and if the user is on a free version, I want to. Since the Ad class lies in the 'free' folder (or the free flavour), how would I call it from my main folder? Is there a specific way to call code from a difference flavour like there is a way to check the buildconfig?"
androiddev,3dqa0c,bart007345,1 point,Sat Jul 18 19:05:48 2015 UTC,"a lot depends how you architect the code. For example, the free and paid folders contain a class called AdManager. The free one has methods that show ads, while the paid one has methods that do nothing. That way, the main app is calling methods but has no idea what will happen.  And yes, I would add BuildConfig properties to say if free or paid so the main code knows whether to show a fragment or not for ads."
androiddev,3dqa0c,supBot,1 point,Sat Jul 18 19:27:18 2015 UTC,"Thanks, mate. So if it were the free version, I'd call BuildConfig.<package name of free version>, is that right? And that would use the 'free' flavour, so how exactly is buildconfig different from flavours?  I hope I'm not bothering you too much with these question. I've tried google-ing quite a bit, but cant wrap my head around. If there's a read you recommend, let me know."
androiddev,3dqa0c,bart007345,1 point,Sat Jul 18 20:16:42 2015 UTC,"in the gradle block for paid, I would create a String variable called isPaid, set it to true.  In the gradle block for free, I would create it again but set it to false.  Then, in my main code, when I need to know, I just say   if(BuildConfig.isPaid()) {..."
androiddev,3dq5ut,entropio,7,Sat Jul 18 10:50:56 2015 UTC,I have a similar situation. We're trying to reuse code across projects more.   So the plan is to have a separate project for each module. We would add a task to gradle to publish the binary jar to artifactory.  Other projects would then just have a dependency to the artifact in artifactory. What do you think?
androiddev,3dq5ut,bart007345,2,Sat Jul 18 12:20:54 2015 UTC,"I've never used artifactory but it looks interesting, I'll try it."
androiddev,3dq5ut,CuriousCursor,1 point,Sat Jul 18 13:04:05 2015 UTC,It's super simple to setup and maintaining modules becomes a breeze in different projects.
androiddev,3dq5ut,smasoumi,3,Sat Jul 18 15:58:52 2015 UTC,"It depends on your apps. For example if you want to create Free and Paid versions of your application it's better to use flavors because it's very easy (just adding some lines of codes) and there is no need for creating another module, also if your apps are very similar and use same layouts, modules and APIs then use flavors again because modules needs maintenance for example if you want to change one line of code in one module then you should do this for all other modules and it wastes your time."
androiddev,3dq5ut,smasoumi,2,Sat Jul 18 11:20:23 2015 UTC,"My apps are not that simple. They have different style and views but can use same list adapters and sometimes same fragments, so it's tricky. I'd like to use flavours but the project will be huge and it will contain multiple apps that has no relation to each other."
androiddev,3dq5ut,zmarkan,2,Sat Jul 18 11:28:14 2015 UTC,"It's very optional, if it's annoying you (have a huge module) then use first way. Also different styles, views, activities and ... need different modules. Better way is trying to create another library module for your list adapters and fragments then add it to your projects dependencies."
androiddev,3dq5ut,smasoumi,1 point,Sat Jul 18 12:44:40 2015 UTC,"Now I think multiple independent modules is the best approach, flavours does not sound logical for not related projects."
androiddev,3dq5ut,Yotta92,1 point,Sat Jul 18 13:08:58 2015 UTC,"If apps have no relation to each other then that's not ideal for flavours, and modular design seems the best option."
androiddev,3dq5ut,withoutclass,1 point,Sat Jul 18 12:48:26 2015 UTC,"Yes, actually flavors are used for related projects like free/paid."
androiddev,3dq5ut,martinmetselaar,1 point,Sat Jul 18 12:56:02 2015 UTC,"If I understood correctly, you basically have two different apps. However, they can use the same resources. Why wouldn't you bundle same resources  into one module that can be imported into two different projects. In that case you still have opportunity to extend fragments, adapters etc. for a specific project. (I believe that would be the same as option 1 in your suggestions)"
androiddev,3dnibt,sonorangoose,23,Fri Jul 17 18:35:18 2015 UTC,"Fingers crossed for fixes of all the crazy bugs I'm dealing with right now...  EDIT: https://plus.google.com/+AndroidDevelopers/posts/XTtNCPviwpj    A healthy dose of bugs and edge cases now fixed FloatingActionButton’s new show() and hide() methods to allow triggering the appropriate animations programmatically Snackbar gains LENGTH_INDEFINITE for continuing to show a Snackbar until it is dismissed or another Snackbar is shown TabLayout now allows you to retrieve the currently selected tab via getSelectedTabPosition() NotificationCompat.MediaStyle now uses a fully fluent API, allowing chaining methods together RecyclerView’s SortedList now has convenience methods to batch insert items"
androiddev,3dnibt,sargunster,12,Fri Jul 17 18:44:16 2015 UTC,FINALLY LENGTH INDEFINITE
androiddev,3dnibt,DoctorsHateHim,2,Fri Jul 17 23:33:09 2015 UTC,I'm just curious... but what would you use an indefinite length Snackbar for?
androiddev,3dnibt,jishhd,1 point,Sun Jul 19 05:05:14 2015 UTC,"like showing SnackBar with error message, and Retry button, so when the user clicks Retry it will trigger the network again.."
androiddev,3dnibt,mosh_java,1 point,Tue Jul 21 14:13:18 2015 UTC,"Couldn't a user still just swipe it away when they choose, though, and lose the option to retry?"
androiddev,3dnibt,jishhd,1 point,Tue Jul 21 15:12:31 2015 UTC,Idk
androiddev,3dnibt,mosh_java,2,Tue Jul 21 16:03:19 2015 UTC,Is there a full list of a improvements. Or will I have to diff it.
androiddev,3dnibt,TiberiusAbadon,1 point,Fri Jul 17 19:36:36 2015 UTC,I don't know of any list other than the one I linked there.
androiddev,3dnibt,sargunster,1 point,Fri Jul 17 19:41:36 2015 UTC,Yes!  Indefinite snackbar and show and hide for the Fab!
androiddev,3dnibt,ZyranosaurusRex,0,Sun Jul 19 02:47:36 2015 UTC,Do snackbars stack correctly now...
androiddev,3dnibt,epicstar,5,Sat Jul 18 03:57:49 2015 UTC,"I'm not 100% on this, but I don't think snackbars are supposed to stack."
androiddev,3dnibt,Shockwave_,2,Sat Jul 18 17:35:27 2015 UTC,"You're right. According to Material guidelines there can only be one Snackbar at a time, and they behavior similarly to Toasts (in that once one is done being displayed, the next is shown)."
androiddev,3dnibt,jishhd,1 point,Sun Jul 19 05:06:01 2015 UTC,"Cool. I hadn't read the spec, but I assumed that they were the same as toasts. They seem to mostly be replacing toasts (see Google Now's new ""undo"" snackbar)."
androiddev,3dnibt,Shockwave_,1 point,Sun Jul 19 05:13:05 2015 UTC,"Even though the section is called ""Snackbars & Toasts"", they don't even have a spec for Toasts, so I assume they're discouraging their use (they say they should be used for system messages).  http://www.google.com/design/spec/components/snackbars-toasts.html#snackbars-toasts-usage"
androiddev,3dnibt,jishhd,1 point,Sun Jul 19 05:19:18 2015 UTC,"well... toasts will consecutively display in order, while snackbars just stack on each other the last time I used it. When I mean stack, I don't mean on top of each other but in front of each other."
androiddev,3dnibt,epicstar,15,Mon Jul 20 21:29:38 2015 UTC,"They still haven't fixed the FAB margin bug, making it practically unusable unless you code in some values / values-v21 workaround as a temporary hack.  https://code.google.com/p/android/issues/detail?id=175330"
androiddev,3dnibt,achuinard,8,Fri Jul 17 21:34:07 2015 UTC,"Yeah that one is quite awful. It's funny, in Google io when they presented the FAB the guy says that he doesn't get why they release one, ""it's just a circular button with some shadow""... right."
androiddev,3dnibt,agherschon,1 point,Sat Jul 18 05:39:42 2015 UTC,Pretty sure he was making a joke out of their original thinking (since that was their original thinking)
androiddev,3dnibt,pandanomic,1 point,Sat Jul 18 06:00:53 2015 UTC,"Wow, that is disappointing."
androiddev,3dnibt,Rhed0x,2,Sat Jul 18 13:27:44 2015 UTC,"It says it was fixed! CTRL+F ""175330"" https://code.google.com/p/android/issues/list?can=1&q=label:Version-22.2.1"
androiddev,3dnibt,jishhd,5,Sun Jul 19 05:32:01 2015 UTC,"Sadly it doesn't appear to have fixed the NavigationView header ripple issue, even though it was marked FutureRelease a month ago."
androiddev,3dnibt,tanis7x,1 point,Fri Jul 17 19:53:04 2015 UTC,"I'll probably find out tomorrow, but did they get a chance to fix that navigation view bug when applying a selected item drawable? (https://code.google.com/p/android/issues/detail?id=176570)"
androiddev,3dnibt,TheSamich,7,Sat Jul 18 07:36:41 2015 UTC,"Finally, a complete bug fixes list: https://code.google.com/p/android/issues/list?can=1&q=label%3AVersion-22.2.1"
androiddev,3dnibt,grutoc,3,Sat Jul 18 10:48:39 2015 UTC,Any idea if they fixed the edit text hints bug? http://stackoverflow.com/questions/30537413/textinputlayout-not-showing-edittext-hint-before-user-focus-on-it
androiddev,3dnibt,instantbitsapps,1 point,Fri Jul 17 20:08:37 2015 UTC,I was told it's fixed
androiddev,3dnibt,shinagle,3,Sat Jul 18 02:57:32 2015 UTC,"FINALLY... all I needed was Snackbar.LENGTH_INDEFINITE, LENGTH_LONG is so damn short it's not even funny."
androiddev,3dnibt,lolkittens,-5,Fri Jul 17 19:42:30 2015 UTC,So you usually laugh when something is shorter than it can be?
androiddev,3dnibt,dimsuz,3,Fri Jul 17 22:43:54 2015 UTC,Finally! I hope CoordinatorLayout is actually working decently now. I will test it out when i get a chance
androiddev,3dnibt,Gak2,1 point,Fri Jul 17 20:05:09 2015 UTC,Still some other crippling bugs that haven't been addressed. https://code.google.com/p/android/issues/detail?id=178471
androiddev,3dnibt,chadefarseer,0,Mon Jul 20 04:51:37 2015 UTC,so far it seems that the bug that would randomly position things after things like a rotation is gone.
androiddev,3dnibt,ZakTaccardi,3,Fri Jul 17 21:43:06 2015 UTC,I'm getting a persistent error notification and this error  Warning:Conflict with dependency 'com.android.support:support-annotations'. Resolved versions for app (22.2.1) and test app (22.2.0) differ.
androiddev,3dnibt,TiberiusAbadon,1 point,Fri Jul 17 20:14:16 2015 UTC,are any of your test gradle dependencies referencing the 22.2.0 version?  EDIT: actually I have the same problem. Do you use espresso? I believe espresso references the support library
androiddev,3dnibt,ZakTaccardi,7,Fri Jul 17 20:50:00 2015 UTC,espresso-core is the cause. I added this to my gradle file  configurations.all {     // Currently espresso is dependent on support-annotations:22.2.0     resolutionStrategy.force 'com.android.support:support-annotations:22.2.1' }
androiddev,3dnibt,buckstalin,2,Fri Jul 17 21:08:15 2015 UTC,womp. looks like they removed android.support.percent.PercentRelativeLayout from the support library. I was just about to use it too!
androiddev,3dnibt,ZakTaccardi,2,Fri Jul 17 20:52:24 2015 UTC,isn't that in the percent support lib?
androiddev,3dnibt,burntcookie90,2,Fri Jul 17 21:16:18 2015 UTC,"well after updating to 22.2.1,  I got a builder error saying that the percent support lib could not be found."
androiddev,3dnibt,ZakTaccardi,3,Fri Jul 17 21:35:06 2015 UTC,Wow. You couldn't be any more wrong.
androiddev,3dnibt,QuestionsEverythang,2,Fri Jul 17 22:00:37 2015 UTC,It absolutely is (was?) a real lib from Google. I have the docs locally at m-preview-1-developer-docs/reference/android/support/percent/PercentRelativeLayout.html
androiddev,3dnibt,iPaulPro,1 point,Sat Jul 18 01:32:19 2015 UTC,It is most definitely a real support lib from Google. Why else would be included in the android repository in the SDK manager?
androiddev,3dnibt,desmin88,1 point,Sat Jul 18 00:28:27 2015 UTC,Might it be in  compile 'com.android.support:percent:22.2.1'?
androiddev,3dnibt,Zhuinden,2,Sat Jul 18 00:19:19 2015 UTC,Does anyone know where to get updated source code of the design library?
androiddev,3dnibt,jackhexen,3,Sat Jul 18 09:59:14 2015 UTC,"Changelog :  This release is focused on product quality and stability, with a healthy dose of bugs and edge cases now fixed, particularly for users of the Android Design Library (http://goo.gl/ZgmA99) introduced in version 22.2.0.  You’ll also find a number of API improvements as well:   FloatingActionButton’s new show() and hide() methods to allow triggering the appropriate animations programmatically Snackbar gains LENGTH_INDEFINITE for continuing to show a Snackbar until it is dismissed or another Snackbar is shown TabLayout now allows you to retrieve the currently selected tab via getSelectedTabPosition() NotificationCompat.MediaStyle now uses a fully fluent API, allowing chaining methods together RecyclerView’s SortedList now has convenience methods to batch insert items   Please continue to file any Support Library bugs at https://goo.gl/QHIwpH﻿"
androiddev,3dnibt,howling92,4,Sun Jul 19 17:59:09 2015 UTC,"TabLayout seems broken, all the tabs have zero width after a transition unless you request an additional layout. Sticking to 22.2.0 for now.  Star issue: here"
androiddev,3dnibt,cypressious,2,Fri Jul 17 18:55:19 2015 UTC,"Yes, it disappear from my fragment everytime I replace it, seems like they can't stop making bugs with this design library..."
androiddev,3dnibt,grutoc,2,Fri Jul 17 22:01:24 2015 UTC,Please star the issue here.
androiddev,3dnibt,cypressious,1 point,Sat Jul 18 12:17:34 2015 UTC,Thanks for reporting.
androiddev,3dnibt,grutoc,1 point,Sun Jul 19 10:45:40 2015 UTC,I was about to report it but the issue was already there.
androiddev,3dnibt,cypressious,2,Sun Jul 19 14:58:38 2015 UTC,yup same here. totally broken
androiddev,3dnibt,Cg2XHPxz,1 point,Sun Jul 19 15:03:22 2015 UTC,Please star the issue here.
androiddev,3dnibt,cypressious,1 point,Sat Jul 18 14:57:24 2015 UTC,Eagerly waiting for an update to the Design Support Library.
androiddev,3dnibt,iBasit,6,Sun Jul 19 10:45:42 2015 UTC,"it's part of the support library. the support library is updated as a whole, which includes the design library.  like google play services"
androiddev,3dnibt,ZakTaccardi,1 point,Fri Jul 17 19:57:59 2015 UTC,Awesome! Is there a changelog there somewhere? I need to know if they fixed some common bugs with new TextInputLayout and FAB.
androiddev,3dnibt,iBasit,1 point,Fri Jul 17 19:59:36 2015 UTC,This post is a start: https://www.reddit.com/r/androiddev/comments/3dnibt/support_library_2221_released/ct6vekt
androiddev,3dnibt,konk3r,1 point,Fri Jul 17 20:08:16 2015 UTC,I want to set TabLayouts Indicator color programmatically (without reflection) and I hope those Fab shadow bugs are fixed.
androiddev,3dnibt,Rhed0x,2,Fri Jul 17 21:20:11 2015 UTC,https://code.google.com/p/android/issues/detail?id=175182  Didn't actually make it into this version.
androiddev,3dnibt,ManticoreX,1 point,Sat Jul 18 13:27:23 2015 UTC,Yeah I'm currently using the workaround posted there. The fact that those FAB shadow bugs aren't fixed is pretty disappointing.
androiddev,3dnibt,Rhed0x,1 point,Sat Jul 18 22:31:06 2015 UTC,there is a bug report in the tracker for this but I can't seem to find it right now
androiddev,3dnibt,Cg2XHPxz,2,Sun Jul 19 21:10:58 2015 UTC,/u/ManticoreX already posted the link.
androiddev,3dnibt,Rhed0x,1 point,Sat Jul 18 15:01:53 2015 UTC,"hrmmm, upgrading breaks my app with a NoSuchMethodException with my showDatePickerDialog method in one of my Activity"
androiddev,3dnibt,Wonnk13,1 point,Sun Jul 19 21:13:20 2015 UTC,Does anyone know if this fixes the extra margins on FABs and CardViews pre-Lollipop? I believe they were caused by an extra view that's added to produce the shadows...  Or how about the fact you can't set a color for Navigation Drawer icons pre-Lollipop either??
androiddev,3dp5w7,n3xas,4,Sat Jul 18 02:53:23 2015 UTC,"Oh man there's lots of small things you're getting wrong.   Views belong to the context (think of it as an instance that is controlled by android) of the activity or fragment they are created in. As such, they should never be static.  You should not try directly manipulate a view in an activity, from another.  To get the activity in which the fragment is created, call getActivity(), you can then cast it to MainActivity if you want access to its non private methods.   You should not be worrying about Message, Handler and Thread at this point.  But to satiate your curiosity. I'll only tell you what you need to know.  Views can only be modified on the the main thread. e.g view.setVisiblity(VISIBLE) can only be done on the main thread;  Background/long running tasks should be on a separate thread as to not block the main thread.    Creating a background thread is as simple as new Thread(yourLongRunningRunnable).  Running code on the main thread is as simple runOnUiThread(aRunnableThatCanManipulateViews)   As you can see, runOnUiThread(Runnable action) is a method of the Activity. To get that utility method while in a fragment you'll have to call getActivity().runOnUiThread(aRunnableThatCanManipulateViews);  http://stackoverflow.com/questions/11140285/how-to-use-runonuithread  If you're really serious about concurrency, start from pure Java, then make your way to Android. Even then, most common android and java libraries will handle it better than you ever could."
androiddev,3dp5w7,TiberiusAbadon,3,Sat Jul 18 15:26:23 2015 UTC,Do you mind posting some code? Preferably in a gist https://gist.github.com/
androiddev,3dp5w7,TiberiusAbadon,1 point,Sat Jul 18 06:45:59 2015 UTC,I've posted the code in OP.
androiddev,3dp5w7,hitler_kardashian,1 point,Sat Jul 18 13:33:58 2015 UTC,"When trying to reference the handler from a thread I get an error ""non static field cannot be referenced from a static context""   It's kinda difficult without seeing what your code looks like but check to see how you've initialized your fragments, handlers, runnables. Try and see which ones are static and how you're communicating between them."
androiddev,3dp5w7,ZakTaccardi,1 point,Sat Jul 18 07:44:38 2015 UTC,I've posted the code in OP if it helps
androiddev,3dp5w7,ZakTaccardi,-5,Sat Jul 18 13:34:24 2015 UTC,RxJava is perfectly suited for this task.  Good primer on RxJava here https://youtu.be/k3D0cWyNno4  EDIT: why the downvotes?
androiddev,3dp5w7,ZakTaccardi,8,Sat Jul 18 03:44:01 2015 UTC,I was kinda avoiding that thinking that I should probably first learn all the basics before diving into Rx. Or is it a good idea to try to learn everything as  I go?
androiddev,3dpatm,mattrobust,14,Sat Jul 18 03:41:42 2015 UTC,You do this   method() {  }   This   method()  {  }   This   method(){}   And this   if (...)   {  }  else if ()  {   Pick a code style you heathen.
androiddev,3dm6r5,Nilzor,13,Fri Jul 17 11:58:41 2015 UTC,I'm not sure if I like this. Xml in Android is already not something beautiful I would say so why add more complexity to it? I wonder how it works with very complex adapters and views.
androiddev,3dm6r5,entropio,7,Fri Jul 17 13:26:05 2015 UTC,"If with ""adapters"" you mean ListAdapters, then that is a question that I have as well. This guy has written a module for RecyclerView, which is cool, but it really needs to be a core part of the Android Data Binding Framework.  As for the XML-part, the key is to keep the ""binding code"" to a minimum. Don't use the Expression Language Google talks about here. Keep logic code to Java."
androiddev,3dm6r5,ZakTaccardi,2,Fri Jul 17 13:39:03 2015 UTC,https://code.google.com/p/android-developer-preview/issues/detail?id=2097 should make it a lot cleaner
androiddev,3dm6r5,dccorona,3,Fri Jul 17 18:11:11 2015 UTC,"That expression language is, in a lot of ways, just a way of writing in-line converters. Converters are a major part of MVVM, and being able to do simple ones in-line doesn't seem like that big a problem to me."
androiddev,3dm6r5,eleven_t,5,Fri Jul 17 23:41:42 2015 UTC,Being enlightened by React after working countless hours with Angular I will not  touch this databinding monster with a ten foot pole.
androiddev,3dm6r5,dccorona,5,Fri Jul 17 17:19:28 2015 UTC,"Can you be more specific? I loved data binding when I was working with .NET and I loved it again when working with Angular. It's really just a mechanism for reducing the amount of code you have to write by making UI bindings declarative instead of requiring a developer to write the boilerplate ""stuff this into the UI now"" logic."
androiddev,3dm6r5,burntcookie90,1 point,Fri Jul 17 23:50:58 2015 UTC,"on this topic, rc1 was just released today"
androiddev,3dm6r5,vladlichonos,1 point,Fri Jul 17 22:31:54 2015 UTC,I think Data Binding is nice library and as any other library can be used in wrong way. I think it is not a replacement for MVP. Neither ButterKnife is replacement for MVP. I would say keep MVP and Data Biding can only complement View Models and less code for view. But you are always free to choose to use just android sdk aka findViewById or other libraries like ButterKnife. No need to take each new library to extreme and make it core of the app architecture.
androiddev,3dm6r5,jackhexen,1 point,Fri Jul 17 18:55:48 2015 UTC,"What you say resonate with me as well. As you can see from my ""Don’t we need frameworks now?""-paragraph, I'm less bombastic than my title implies. But I do believe the Presenter will be needed in fewer cases than before. Maybe it can be decided on a per-view-basis (some need it, some don't), but the frameworks should be flexible enough to support leaving the presenter out in some cases. I'm not sure for instance Mosby does that today."
androiddev,3dm6r5,zyrnil,-1,Sat Jul 18 08:53:08 2015 UTC,"I don't see how ViewModel can supersede a proper MVP implementation. ViewModel is just another name for MVP, so no reason to say ""goodbye"".  Data binding frameworks are not popular because they lack of flexibility - this is a very old pattern that has been adopted widely by Microsoft about 20 years ago. The pattern didn't even work well for database-related applications.  Do not expect something better with Android data binding - the code pollution into xml is a very big problem, I don't even understand why google guys decided to release this ugly workaround to public.  I like the article itself as it gives a nice review for combining data binding with MVP/ViewMode."
androiddev,3dm6r5,jackhexen,12,Fri Jul 17 13:05:50 2015 UTC,Databinding is very flexible.  WPF has been using it since 2006 and it really allows you a clean separation between your declarative UI and code.   It is a little weird at first but once you get used to it it makes a lot of sense.  I find that I write a lot less code when using databinding either with WPF or Android with MvvmCross.
androiddev,3dm6r5,burntcookie90,-5,Fri Jul 17 13:30:52 2015 UTC,"""Separation"" is a word that has an opposite meaning to ""binding"".  I had enough of such ""flexibility"" on another systems, thanks, I don't need it anymore."
androiddev,3dm6r5,HomemadeBananas,8,Fri Jul 17 13:38:03 2015 UTC,"Luckily, this is a library and not framework so you can pick and choose."
androiddev,3dm6r5,Yotta92,2,Fri Jul 17 13:40:49 2015 UTC,"ViewModel is just another name for MVP   ViewModel can definitely be the ""M"" in ""MVP"", but the point I'm making is that the Data Binding Framework does much of the View-To-Model-communcation which you often would write in the Presenter."
androiddev,3dm6r5,jackhexen,5,Fri Jul 17 13:44:21 2015 UTC,"A view-model would be like a presenter, as in MVVM architecture. I'm still not sure how that's any different than MVP..."
androiddev,3dm6r5,kensuke155,1 point,Fri Jul 17 16:05:30 2015 UTC,"That's true, presenter and view-model are basically the same: two way communication with a view and usually you have one view-model/presenter for a view. However, the main difference between view-model and presenter is how communication with a view is done: In MVP the view communicates with the presenter by directly calling functions on an instance of the presenter.  The presenter communicates with the view by talking to an interface implemented by the view. In MVVM there is no IView reference in the ViewModel.  Instead, the view binds directly to the ViewModel.  Because of the binding, changes in the view are automatically reflected in the ViewModel and changes in the ViewModel are automatically reflected in the view.  Essentially, no IView and boiler plater."
androiddev,3dm6r5,jackhexen,2,Sun Jul 19 08:51:33 2015 UTC,"I never put data binding into Presenter. I think that Presenter should know nothing about View. This is a basic principle of the clean architecture - a lower layer does not know about a higher layer. Data binding is something that happens in a View, so MVP and data bindings can live together.  I think ViewModel is Presenter. (I didn't study well the library you're referring to but it looks like a typical MVP library, it is only named differently.)"
androiddev,3dm6r5,kensuke155,2,Fri Jul 17 13:52:54 2015 UTC,"They aren't the same. MVVM is basically Presentation Model with generated data bindings. It's a virtual representation of the view, not a supervising controller."
androiddev,3dm6r5,jackhexen,1 point,Fri Jul 17 17:25:56 2015 UTC,"Presenter is not a supervising controller. Who makes Presenter control views just didn't get the MVP idea right.  There are so many theories on what is what and who controls whatever, so there is no reason to compare all that patterns. I compare implementations and I see that ModelView looks like Presenter."
androiddev,3dm6r5,vladlichonos,4,Fri Jul 17 18:01:16 2015 UTC,"They may appear the same, but definitely are not. Regardless of which is better (this is subjective), we can compare these two patterns because they are accomplishing a similar task but are definitively different in approach.  MVP: Presenters have a reference to a view and give that view data to render. The view responds to directives and is responsible for its own state.  MVVM: View models don't reference views, but rather they hold a virtual view state. The view attaches/binds to the view model in order to render the virtual view state."
androiddev,3dm6r5,morihacky,1 point,Fri Jul 17 18:17:39 2015 UTC,"MVP: Presenter does not issue ""directions"" - it just provides requested data back to view.  MVVM: state? OK, thanks. I will look at the concept from this point of view."
androiddev,3dm6r5,vladlichonos,2,Sun Jul 19 12:35:35 2015 UTC,"I think View Model is view state basically. Where Presenter is handler of events and formatter of model to view model. I agree data binding is not presenter. I would say data binding is great with view model (bind view state to view) but we still need presenter, otherwise view model will bloat. What do you think? I'm really hard trying to figure out this mess. Everyone saying MVP and MVVM and seems like there is still no real final solution on how exacty to use them."
androiddev,3dm6r5,ZakTaccardi,5,Fri Jul 17 21:14:35 2015 UTC,"the problem is theoretically what you say is perfectly right,  ""View Model"" = view state. The problem is: the term View Model was used in WPF land to encompass more than just that.    model = state view model = view state presentation model = presentation state (~= view state) presenter = dictates what is shown to the ui controller = accepts inputs from the ui, possibly delegating to a presenter for sending instructions back to the ui (thus taking on the name ""supervising"" controller).   In a recent episode of the Fragmented podcast we spend a huge time deconstructing these definitions, preferring Martin Fowler's usage of the terms."
androiddev,3dm6r5,dccorona,2,Fri Jul 17 23:52:05 2015 UTC,I like your podcast. I will definitely check this one out if I missed it before.
androiddev,3dm6r5,jackhexen,1 point,Sat Jul 18 20:02:12 2015 UTC,"I have interfaces whose implementations are dedicated to retrieving data from a database. For example, I may have an ArticleRepo that retrieves articles from the DB. Then I have an ArticlePresenter interface whose implementation requires an ArticleRepo. My ArticlePresenter will then format the data into view appropriate form for an ArticleView.  I think we differ in that you would have the ArticleView be responsible for formatting the ArticleRepo data,  where I have the ArticlePresenter doing it.  I wonder which approach is better."
androiddev,3dneq8,ye_olde_androiddev,8,Fri Jul 17 18:08:36 2015 UTC,"AppCompatActivity is probably the best choice right now. Kind-of. It now has a more flexible version called Toolbar. Not needed any more, as far as I know. Yeah, it has got slightly better since then, in my opinion. The support library is your friend. Depending on what your apps are, you'll likely end up using some libraries from Square because they're bloody awesome."
androiddev,3dneq8,superhappyrobots,6,Fri Jul 17 18:12:56 2015 UTC,"AppCompatActivity  Kind of,  NoActionBar is preferred and using a Toolbar instead.  No Yeah. Still is.  Use support libraries,  Retrofit,  Fresco or Glide, Otto if you need it, OkHttp, ButterKnife"
androiddev,3dneq8,Zhuinden,1 point,Fri Jul 17 18:55:08 2015 UTC,Could you elaborate on 2?
androiddev,3dneq8,teenageriotgrrl,2,Sat Jul 18 05:07:01 2015 UTC,"Toolbar is basically a more advanced version of ActionBar that you can define better, and has more support for material functions. I think we're maybe going to see the last days of AB soon enough."
androiddev,3dneq8,CaddoSierra,2,Sat Jul 18 06:19:19 2015 UTC,"ActionBar isn't really used anymore, the new support library added this thing called a ""Toolbar"" which works kind of like an ActionBar, except it's actually a ViewGroup in which you can position things with gravity or a relative layout.  If you ever have issues with the topleft corner having padding that it shouldn't, you need to set the absolute insets to 0, 0 (but there's a Stack Overflow post about that somewhere).  In order to have a Toolbar in your layout, you however need to disable the Action Bar with the NoActionBar version of the theme."
androiddev,3dneq8,Zhuinden,1 point,Sat Jul 18 07:56:44 2015 UTC,"(and in terms of structuring the code, using Dagger2 with MVP is the big fad, and also RxJava but I haven't figured that out yet - also Fragments came out, and so did its competitors)"
androiddev,3dneq8,Zhuinden,5,Sat Jul 18 10:08:17 2015 UTC,Check out the AppCompat libs from Google and start extending from AppCompatActivity. ABS is dead.
androiddev,3dneq8,achuinard,4,Fri Jul 17 18:12:22 2015 UTC,Others answered the specific questions but I have just gotten through a similar reintroduction to Android in the last month or so.    Things I've been finding useful as I get back up to speed:   https://www.google.com/design/spec https://github.com/google/iosched https://github.com/chrisbanes/cheesesquare https://github.com/googlesamples/android-topeka   Also the official support libraries are usually very good. Android Studio and Gradle with proper dependency management is awesome. Community libraries like Glide and Retrofit are very awesome.
androiddev,3dneq8,GreatJusticeForSGU,2,Sat Jul 18 03:20:20 2015 UTC,It's strange no one here has mentioned Fragments. You can sort of think of them as Activities inside an Activity.
androiddev,3dneq8,Acrostis,1 point,Sat Jul 18 09:10:55 2015 UTC,While fragments are definitely new after 2.3 they are also awkward to use and are best ignored in favor of custom viewgroups and presenters.
androiddev,3dmxvx,tejon,1 point,Fri Jul 17 16:02:26 2015 UTC,Am I the only one who uses andengine?
androiddev,3dmxvx,wr3stler,3,Fri Jul 17 17:48:26 2015 UTC,Don't most people recommend libgdx over andengine?
androiddev,3dmxvx,will_r3ddit_4_food,2,Fri Jul 17 18:46:07 2015 UTC,Yes.
androiddev,3dmxvx,topherp,1 point,Fri Jul 17 17:54:40 2015 UTC,"At the very least, nobody who's contributed to this list uses it. You could change that if you're so inclined. :) Does it have any particularly outstanding features, or do things in ways the other options don't?"
androiddev,3dmxvx,wr3stler,1 point,Fri Jul 17 18:04:24 2015 UTC,I'm not really sure to be honest because I haven't tried any of the others. I like it a lot but it's also the only one I've used.  I'm more just wondering if maybe I should switch engines. Some of those cross platform ones like Monkey sound tempting but I'm not too excited about learning a new language.
androiddev,3dmxvx,wr3stler,1 point,Fri Jul 17 18:11:46 2015 UTC,"I'm not too excited about learning a new language.   Is Java the only one you know currently? This is purely personal opinion, but I think you'll have a better time with nearly anything else."
androiddev,3dmxvx,TauLogy,1 point,Fri Jul 17 18:39:49 2015 UTC,"Java is the only one I know WELL. I like it a lot but like andengine it's really the only one I have much experience with. What do you mean when you say I'd have a better time with something else? Like more enjoyable, better for making games, or just easier?"
androiddev,3dmxvx,badlogicgames,1 point,Fri Jul 17 18:50:36 2015 UTC,"Like more enjoyable, better for making games, or just easier?   With regards to anything used by game engines in this list, probably all three; but especially the first. I find Java to be insufferably tedious... too much time spent jumping through hoops, repeating the same boilerplate instead of getting any satisfying work done."
androiddev,3dm32w,alexfu1,1 point,Fri Jul 17 11:10:12 2015 UTC,There's a slight issue with this article. The resulting APK does not actually get the updated version numbers.
androiddev,3dm32w,ZakTaccardi,1 point,Fri Jul 17 17:16:46 2015 UTC,Updated blog post with corrections
androiddev,3dm5hc,donrhummy,1 point,Fri Jul 17 11:42:21 2015 UTC,BobbyHil...@gmail.com is an asshole
androiddev,3dm5hc,mouthus,4,Fri Jul 17 19:16:35 2015 UTC,"He has a point though.  This is a big bug affecting lots of people since Lollipop and they still haven'f fixed it, in fact someone had to open another bug report just to get it across Google's desk.  Google's QA is notoriously bad (see the Design Support library) and I'd be pretty mad if I spent 600$ on a phone that has terrible battery life."
androiddev,3dm5hc,Atlos,4,Sat Jul 18 03:31:15 2015 UTC,"yes, but that's what google gets for not paying for enough real humans to monitor the bug database and properly triage bugs. Mozilla earns a tiny fraction of what Google does and their bug database admins (and devs) triage and respond to bugs at about 60 times the rate that the Android team does."
androiddev,3dmdnw,atioxx,16,Fri Jul 17 13:14:55 2015 UTC,"Depends on the purpose of why you were making the app in the first place. If you were trying to challenge yourself or learn something new, then by all means finish it and maybe consider even putting it up for open source. It won't be bad to add it to your resume.  However, I won't say the same if you were trying to create a new revenue stream. I've been in the same situation more than once and find myself in that position again recently. I've come to this conclusion the hard way. That's the way I see it."
androiddev,3dmdnw,the_rabbit,7,Fri Jul 17 13:39:23 2015 UTC,"There's always room for improvement, here are some features I still want to see in a app,  Functionality for mods. If I am a mod of some sub and want to manage it through app.  In app bot, which could be really helpful or nasty, which can be programmed from with in app to do things.  AMA feature for a novice, may be I know someone whom reddit might find interesting but doesn't know how it all works, so I can just suggest them to host the AMA through app, where question pop in nice manner one by one which can be answered, maybe a section for unanswered question later and notifications.    On the fly markdown from within input, to display exactly how the message is going to look after submit.    A way to finding new subs of matching interest."
androiddev,3dmdnw,4silvertooth,4,Fri Jul 17 14:32:04 2015 UTC,"at the very least, release it so you can show it off to potential clients/job opportunities. don't shelf your hard work just because it's a saturated market."
androiddev,3dmdnw,adrock3000,5,Fri Jul 17 14:53:10 2015 UTC,"If you're working on it for the past couple of months, I'll suggest you complete and finish it off. Maybe it will be the next best thing, who knows anyways.  Good luck."
androiddev,3dmdnw,prakashdanish,6,Fri Jul 17 17:07:10 2015 UTC,Make your reddit client have the ability to convert miles to km and pounds to kg in all comments and posts and I'd buy it.
androiddev,3dmdnw,spacemanza,3,Fri Jul 17 21:31:19 2015 UTC,"Is it a wrong thing to take this seriously, given the already up-to-date reddit clients in the market? Will be there users willing to migrate to my app for some reason?     Keep working on it. I've been jumping ship from app to app because they offer different features. Most Reddit apps have a subreddit. A sure way to up on the competition is to go into their subs and look at the complaints and features that users are requesting but haven't been implemented into the app."
androiddev,3dmdnw,ReyEra,2,Fri Jul 17 14:56:10 2015 UTC,"Hey there! I haven't even made my first app yet but I plan on doing what you did whenever I get better. So my thought would be to keep working on it because the goal of making this app is exactly what you said... to learn new things. There might be a hundred different reddit apps but what could you do to make it different? Does one have something the other doesn't? Is one missing something you wish it had? Well then make it your own and how you like it. Make the UI better, or just do something that when you push the button you can tell it's your app. You'll learn a lot of neat stuff hopefully, and then you can really make a unique app with all the new stuff you learned."
androiddev,3dmdnw,Tall_Polak,2,Fri Jul 17 13:41:09 2015 UTC,"I am dissatisfied with all the reddit clients I have tried, I don't know any without bugs that irks me or antipatterns. So I think it is possible to build a better client. It is probably not the kind of project you want to start if you are a novice developer though, it looks like a pretty big task to tackle."
androiddev,3dmdnw,xqjt,1 point,Fri Jul 17 15:57:00 2015 UTC,"Maybe try adapting it for a voat.co client?  There aren't a huge amount of users, but there aren't anywhere near as many clients for it."
androiddev,3dmdnw,ikidd,1 point,Fri Jul 17 18:09:56 2015 UTC,"Definitely not, if your goal is to learn Android development.. I started writing Flow for reddit just to start learning Android development / Java.  Best part about reddit, is that it is complex enough that you cover various different aspects of mobile application development."
androiddev,3dmddr,lordVader1138,5,Fri Jul 17 13:11:56 2015 UTC,"You could take a look at the Recipes page on the wiki.   I haven't done anything too ambitious, but I like the Authenticator interface for automatically refreshing tokens or showing a login screen, and the RequestInterceptor interface for adding standard headers like Accept or Authorization.   Cacheing is also very easy to set up, even if you don't have control of your Cache-Control header server-side. You can set up an offline mode by conditionally adding a max-stale Cache-Control header in your RequestInterceptor too."
androiddev,3dmddr,jimeux,3,Fri Jul 17 13:51:15 2015 UTC,"+1 for caching..here is my implementation  edit: I never knew about the Authenticator! Will look into it, thanks."
androiddev,3dmddr,atioxx,2,Fri Jul 17 19:23:32 2015 UTC,There is an excellent presentation about how okhttp works by Jake Wharton it will tell u why its better.   https://www.youtube.com/watch?v=WvyScM_S88c
androiddev,3dmddr,curiousberg,2,Fri Jul 17 17:54:01 2015 UTC,"Pretty sure Android HTTP is now backed by OkHttp, so theres no reason not to use it. Great lib and api that even google thought was good enough for Android."
androiddev,3dmddr,leggo_tech,1 point,Fri Jul 17 15:08:16 2015 UTC,Isn't it post 4.4? Or they are available on 16+?
androiddev,3dmddr,leggo_tech,1 point,Fri Jul 17 16:19:22 2015 UTC,"It's post 4.4, but it's not that it's ""available"". AFAIK the Android Http Client is using OkHttp in the background, not that you can necessarily use OkHttp out of the box in 4.4+. But with that being said, if you're using Android HTTP, then you're stuck with shit api."
androiddev,3dmddr,Cg2XHPxz,1 point,Fri Jul 17 16:30:35 2015 UTC,"Of course there are reasons to use it. It's very important for an http library to be upgradable outside of the OS. Otherwise once the next heartbleed, etc happens you'll be powerless until the user updates the OS on their phone"
androiddev,3dmddr,schwiz,1 point,Fri Jul 17 19:06:24 2015 UTC,"combined with retrofit you'll get some transparent features such as caching, cookie management, etc."
androiddev,3dmcgu,8bitmaster,4,Fri Jul 17 13:02:35 2015 UTC,"well, if anything goes, then my first app came out as of about an hour ago! https://play.google.com/store/apps/details?id=com.jlevysoftware.refridgeraide1"
androiddev,3dmcgu,Magillus,2,Fri Jul 17 16:11:11 2015 UTC,"cool, what other functions does the app? from screenshots it is only about scanning bar code I assume, add more screenshots of usage (date entry or scanning and OCR of date posted on items)."
androiddev,3dmcgu,8bitmaster,2,Fri Jul 17 18:21:39 2015 UTC,"That's a good idea! I forgot to upload more screenshots when I went live, but I'll work on that."
androiddev,3dmcgu,Magillus,1 point,Fri Jul 17 18:27:05 2015 UTC,"Voice commands would be awesome.  ""The milk is gone""  ""Milk is best by two weeks""  Having that with optional Android Wear would be killer feature."
androiddev,3dmcgu,thiswood,3,Sat Jul 18 01:54:21 2015 UTC,"I'm on mobile, so my access to the sticky posts are iffy to say the least.  What android subreddit do we post to, to ask for review of our newly published apps without fear of someone claiming we're advertising it?"
androiddev,3dmcgu,markyosullivan,2,Sat Jul 18 01:44:55 2015 UTC,I think /r/androidapps is a place which would allow this.
androiddev,3dmcgu,AFChimpanse,3,Sat Jul 18 10:43:28 2015 UTC,"As a mod on /r/androidapps we have a few rules which needs to be followed in the sidebar, but in general we try to be more welcoming than /r/android to developers"
androiddev,3dmcgu,Snyggt,4,Sun Jul 19 12:27:19 2015 UTC,"I have a question.   Im currently a student of android development and i'm getting to the point if closing in on a release of my first app.   So my question is: when making money on google play; either by charging straight up for the app or having ads/iap. How would i go around with the finances. I mean like tax on earned money(1) and how will i be recieving the payment?(2) Is there some video or text i can read about this kind of stuff?(3) if it helps i live in Sweden, so if any (pref) swedish redditor here knows about this then please let me know.  Have a good day you whom might read this."
androiddev,3dmcgu,leggo_tech,2,Sat Jul 18 23:27:34 2015 UTC,"I wrote a C method that returns ""Hello World"". Using the newest release of Android Studio 1.3 (with C/C++ support), how would I set up a Button in Android to run that C call onClick() and then return it and set a textView to it (""Hello World"")?  Note: I'm new to C, I've only ever done java android dev, and I'm really curious on using the NDK just as an example. I know the NDK is expensive and I shouldn't be doing this for this simple of a method, but all of the guides I see for Android NDK are outdated as of now. Wondering if someone could just give me a run down here. Thanks!"
androiddev,3dmcgu,sthagios,2,Fri Jul 17 13:37:44 2015 UTC,This is a pretty good start: http://inthecheesefactory.com/blog/new-gradle-build-tools-with-gradle-2.5/en
androiddev,3dmcgu,leggo_tech,1 point,Fri Jul 17 14:09:39 2015 UTC,Thanks. That looks like basically what I want. ANother question. I've used .so's before. Does this mean that I won't have a .so in my app? I'll just have the actual files themselves?
androiddev,3dmcgu,sthagios,1 point,Fri Jul 17 15:18:58 2015 UTC,The so files are always in your APK. They get packed inside there. The difference with the new gradle is that you don't need makefiles anymore. Gradle takes care of the compilation now.
androiddev,3dmcgu,leggo_tech,1 point,Fri Jul 17 15:48:35 2015 UTC,"Oooh. I don't know what makefiles are, but does Gradle do ""make"" on the sos? basically would gradle compiling be different than make compiling? Could I have the same code with different outputs since its two different compilers?"
androiddev,3dmcgu,syntax_erorr,1 point,Fri Jul 17 16:07:12 2015 UTC,"I am also just starting to get into this area of development.  This guide is the best resource I've found for using Android Studio with the NDK.  Make sure to change the abiFilter ""x86"" to abiFilter ""armeabi"" if you are running it on a real android device."
androiddev,3dmcgu,leggo_tech,2,Fri Jul 17 17:27:37 2015 UTC,Thanks
androiddev,3dmcgu,Dreamonauts,1 point,Fri Jul 17 17:29:17 2015 UTC,"Hello Devs ! ! Is Getting reward for social sharing still accepted on google play ? I can't seem to find anything about it on the google developer rules but my english is bad so i'm not sure, also i read that on IOS it's not accepted anymore.  Anyone knows ? also if you use this feature in your game/app, do you think it really helped promoting your app trough social platforms such as twitter / facebook ? What i would like to do is : twitting about the game and get X items. same thing for facebook. Also, i would like that if the player is connected to his/her google play game service, he/she get an extra bonus when completing the level.  Is this breaking google developer's rules ?  Thank you !"
androiddev,3dmcgu,lordVader1138,1 point,Fri Jul 17 13:27:43 2015 UTC,"Are you talking about rewarding users to share your app? You may want to check out google app invite which allows your users to share your app using email and sms and available for both iOS and android.  For rewarding the users to talk about app is a normal functionality. In fact timely alarm clock does this nicely, more your social shares are, more you can get some premium features.   he/she get an extra bonus when completing the level. Is this breaking google developer's rules ?   As a user I can say it's normal functionality. I am yet to develop for google play games, but yes when you complete certain levels or you perform certain actions you will be given a point..."
androiddev,3dmcgu,Hermes_Achilles,1 point,Fri Jul 17 14:03:28 2015 UTC,"Does anyone have any recommendations for storing simple user data? I'm trying to decide whether to store a username, email, generated user id, and password (encrypted, of course) on SQLite or a MySQL database on my server.   Is there a rule of thumb of some type?"
androiddev,3dmcgu,MisterJimson,2,Fri Jul 17 21:07:46 2015 UTC,Shared pref for anything thats 1 record. Like username and hashed password.  SQL lite for data lists or any mass storage that you would need to query for.
androiddev,3dmcgu,dandc87,1 point,Sat Jul 18 23:06:49 2015 UTC,"Are you asking how to store data on your server, or the best place to store information (phone or server)?  SQLite isn't acceptable for a server database, its only useful for local or embedded database.  You should also look at SharedPreferences for an easy key-value storage. It eventually writes to an xml file on the device, but it keeps the data in memory so it's quick to access."
androiddev,3dmcgu,Hermes_Achilles,1 point,Fri Jul 17 22:33:46 2015 UTC,"Let me elaborate a little:  What I'm trying to do is store some of their login info on SQLite, so the app can interact with some of the user's info (i.e. comparing a user id with an id on a server) offline. That way, if the user isn't connected to the internet, they could still use parts of my app rather than having to be connected 24/7 to use it, which was why i brought up the idea of using SQLite to store some of it.  So the Question is: Is it okay to store some of the user data inside an SQLite Database, or is this bad?"
androiddev,3dmcgu,getonmalevel,2,Fri Jul 17 23:59:57 2015 UTC,That seems like an over-implementation. Why not just store an encrypted json serialization of the object in shared preferences??
androiddev,3dmcgu,nardi-LAS,2,Sat Jul 18 01:10:32 2015 UTC,"As /u/getonmalevel said, for what you are describing the best thing would be to just store it on SharedPreferences. If you REALLY want to use a database (which I don't recommend in this case, but w/e), there is an awesome library that uses SQLite called Sugar. It's really easy to use and works great."
androiddev,3dmcgu,getonmalevel,1 point,Sat Jul 18 02:00:22 2015 UTC,"I've heard good things of Realm as well. I personally have never worked with either, but figured i'd throw in another candidate if that's the desired direction :P"
androiddev,3dmcgu,markyosullivan,1 point,Sat Jul 18 02:36:37 2015 UTC,"Just want to say that I much prefer seeing the sticky threads staying until the next sticky thread arrives although the ""who's hiring"" thread is still stickied so not sure if it's supposed to be stickied still or if the Mods are going to keep them until the next ""who's hiring"" thread?"
androiddev,3dmcgu,lordVader1138,1 point,Sat Jul 18 10:45:20 2015 UTC,"Stetho is lovely, I have just started using it. Not only it allows you to see what's there, it lets you to change as well. Atleast it works for shared preferences. This is the first time I am thanking facebook for. If you are not aware about it, go and check it."
androiddev,3dmcgu,sourd1esel,1 point,Sat Jul 18 12:43:35 2015 UTC,"Is anyone in NYC?I would love it if you checked out my bus App. It offers the fastest delivery of live bus distances in NYC, one press(launch).  https://play.google.com/store/apps/details?id=clearfaun.com.pokebuspro&hl=en"
androiddev,3dmcgu,myNSFW11,1 point,Sun Jul 19 00:37:49 2015 UTC,"I have some app ideas and I want to create them. I have xcode but it uses Obj-C. I was looking for anything on app development. All the tutorials I found have been the basics of it.   Specifically (if it helps) I'm looking for get linked list info, grab/access GPS location.  Languages learned: Java, C, C++, Scheme, Prolog   Tl; dr: Where to learn app development"
androiddev,3dmcgu,anwaaransari,1 point,Sun Jul 19 06:52:59 2015 UTC,I need some help learning java for developing android apps..  Here is my curriculum to follow:   learning java using Derek Banas' tutorials on YouTube and reading Head First Java Follow other tutorials on YouTube for more android related development..   What do you guys think?
androiddev,3dmcgu,Crizzle777,1 point,Sun Jul 19 15:29:56 2015 UTC,"I'm a senior CSE student, I'm graduating in May. My third internship this summer is crap in terms of programming experience.   I'm trying to develop an app as a personal project. My idea is a timer that will limit the amount of time my daughter can use my phone. So, I set the timer for 2 hours, after 2 hours you need to enter a password to continue or something. She is only 5, it doesn't need to be real secure, just basic.   I'm overwhelmed, I'm following like udacity and some online tutorials but between the emulator not working sometimes, strange errors that pop up despite following a tutorial exactly, it extremely frustrating and I'm not making much progress.   Anyone have a clear concise tutorial? Maybe my app is too complex, I have programming experience but really just need a personal project under my belt."
androiddev,3dl2vx,lordVader1138,2,Fri Jul 17 03:31:37 2015 UTC,"So is this true external storage, or just what Google considers 'External'.  Basically, will it write to the SD card?"
androiddev,3dl2vx,Acrostis,1 point,Fri Jul 17 07:57:33 2015 UTC,What google considres external. i.e. for moto e on kitkat it won't be sdcard but internally mounted external storage(sdcard0) where we can create and write to files. I have yet to work with any kitkat specific APIS ans Storage Access Framework. These two points are in future roadmap.
androiddev,3dl2vx,Cephas00,1 point,Fri Jul 17 08:30:45 2015 UTC,"Some of the features   Support all the way from API 1. (Tested in a GB phone) Reads the external storage state, and if storage is not available, it will throw an exception Create the directory with Application name, and support creating directories and files in external storage and cache storage easily.   Edit: Apologies, this library can't be downloaded through jcenter or any other repository, I have messed up with naming. I will try to resolve it as soon as possible (max by monday)."
androiddev,3dm9h8,chessme,2,Fri Jul 17 12:29:40 2015 UTC,"thanks for the link,  ive been wondering for a while what a snackbar was called.  Ive been wanting to implement one when network connection is lost but screw me if you dont know the name and try and search for what is called based off what it does."
androiddev,3dm75h,oreo_man_,2,Fri Jul 17 12:02:46 2015 UTC,"How do I have a server multiple people can connect to? I've read I need a proxy and need to host a server. Each person has a local db, so is it convention to pull the data from the online db while the splash screen is showing?"
androiddev,3dm75h,braflis,1 point,Fri Jul 17 20:24:02 2015 UTC,"Q1) In the starting an activity page, it says that when running the app quickly goes from onCreate >>> onStart >> onResume where it stays. However, in my tutorial I dont even have a onStart or onResume and the sample app is still working. How?  Q2) When do we use R.id.something vs R.directoryname.xmlFilename?  Q3) Is the official tutorial enough for me to start building apps or should I do other tutorials first?"
androiddev,3dm75h,leggo_tech,1 point,Fri Jul 17 12:59:32 2015 UTC,"onStart and onResume are there, they're just not overridden. See the @Override annotation on your onCreate()? Thats you (the developer) telling it that you want to override the behavior of onCreate(). onResume and onStart will still run because the Activity class that you are extending has them, so they will run. This is more of a lack of fundamental java than Android. Not trying to be an ass. It's a valid question, but you might be better off trying to read one book of java dev (I recommend Head First Java), and then come back to Android. R.id is for ids that have been declared in your xml. R.directoryname is not really for a directory name. You can access a string called R.string.hello from the strings.xml file or you can make a cupcake.xml file and have a string in there called world, and you would still access it with R.string.world. It really has nothing to do with what directory it's in. But essentially, you will access Views using R.id, Layouts with R.layout, Strings with R.string and Drawables with R.drawable. Again, I'd just give a read through Head first java, I struggled with Android for like a year before I read that book, and then realized it wasn't android I wans't understanding, it was really java. Android is definitely still it's own beast, but if you can't understand java, then you're just making it hard for yourself. Take 30 days to read that book, and then start on Android. Official tutorials are fine, there are a ton of blogs and video learning services. What is always comes down to is... getting your hands on the keyboard and make something. Make anything."
androiddev,3dm75h,braflis,1 point,Fri Jul 17 15:16:05 2015 UTC,"1) Wow I feel so stupid now. Although I'm no master of Java, I'm definitely familiar with the syntax. I should have realized this one.  2) In my my_activity XML file, I have this written :  <EditText         android:id=""@+id/sample_message""         android:layout_weight=""1""         android:layout_width=""0dp""         android:layout_height=""wrap_content""         android:text=""@string/sample_message""/>  and obviously defining sample_message as ""Hello"" in my strings XML. So I can display/reference ""Hello"" by both R.id.sample_message and R.id.sample_message. If yes, then what's the point of id?   3) As I've said, that first question was dumb. I didn't really try to figure it out myself. I am familiar with Javas syntax etc. I know whats going on. How much of Java should I learn?   Thank you for the response!"
androiddev,3dm75h,leggo_tech,1 point,Fri Jul 17 15:26:21 2015 UTC,"okay cool You're confusing yourself. The id declaration is so that you can make a reference of the view in java. example: EditText myEditText = (EditText) findViewById(R.id.sample_message); if you wanted to set the text of edit text, you could now do myEditText.setText(""hell there""); Alternatively you could set the text to a string in your strings file. you could say myEditText.setText(getString(R.string.hello_there)); What you mean to do (I think) is... <EditText android:id=""@+id/myEditTextView""  android:layout_weight=""1""  android:layout_width=""0dp"" android:layout_height=""wrap_content"" android:text=""@string/my_sample_message""/> Your string is used for strings (text) and your id is used as an id (unique identifier of sorts). Technically your code is valid as long as your strings file contains a string called sample_message. Commonsware had a good article about what parts of java you should understand. Gimme a sec to find it.   EDIT Here you go: https://commonsware.com/blog/2010/08/02/java-good-parts-version.html"
androiddev,3dm75h,braflis,1 point,Fri Jul 17 16:03:30 2015 UTC,Whoops sorry I meant to say R.id.sample_message and R.string.sample_message. Would both of these be same?
androiddev,3dm75h,leggo_tech,1 point,Fri Jul 17 16:07:13 2015 UTC,"You can have them both be the same. You wouldn't want to though because an id is not a message. An id is a unique identifier. when you do @+id/sample_message you literally just created R.id.sample_message. This points to the View though. R.string.sample_message points to your strings file and the actual string with that name. Again, what you are really looking for is   <EditText android:id=""@+id/myEditTextView""  android:layout_weight=""1""  android:layout_width=""0dp"" android:layout_height=""wrap_content""  android:text=""@string/my_sample_message""/>   Now your ""unique"" id of your view makes sense. and your text of the editText makes sense because it's a string. Again, the @string/sample_message is a string. If your xml layout file had 10 editTexts and all of the had text=""@string/my_sample_message"" that'd be perfectly fine. You would get a compilation issue if you had 10 editTexts with the same id @+id/everyEditTextHadThisID. Technically your @+ids and your @strings can overlap in there names. They don't see each other. They don't know what each other are. They can overlap in names. Don't matter."
androiddev,3dm75h,braflis,1 point,Fri Jul 17 16:09:44 2015 UTC,Makes a lot more sense now. Thanks a lot!
androiddev,3dmtqo,danielgomez22,3,Fri Jul 17 15:30:32 2015 UTC,Take a look at https://plus.google.com/+IanLake/posts/SW7F2CJvAmU
androiddev,3dmtqo,H3x0n,1 point,Fri Jul 17 15:51:33 2015 UTC,great thanks!
androiddev,3dmtqo,HashFunction,2,Fri Jul 17 16:12:08 2015 UTC,"while I'm not some anti-splash screen crusader, this old article has influenced our group to avoid using them. the primary argument was for brand awareness, but as the author states they already clicked your icon, they know what app they are in (at least initially).  as for the idea that you can use it to ""load stuff"", we found that users don't mind waiting for data to load if you give visual cues that the app is doing work. we also use some fun material animations to delight them while they wait (toolbar/ui elements waterfalling down)"
androiddev,3dmtqo,Izacus,1 point,Mon Jul 20 20:43:51 2015 UTC,"It depends on the app too because if the app is one of those that you go in all the day... then see a splash screen that takes time every time will be ahghgghrrr, right?"
androiddev,3dmtqo,svenofix,2,Tue Jul 21 15:47:33 2015 UTC,Launch screens ARE a bad pattern. They only hide the incompetence of developers which can't make their apps start quickly.
androiddev,3dmtqo,i0way,3,Fri Jul 17 16:30:26 2015 UTC,"Or don't want to. Trust me when I say there are people who actually want them to be shown for a set amount of time on launch. For Corporate Identity I suspect.  Also, Google has added one to Maps. At the same time it feels as if the App loads faster because of it."
androiddev,3dmtqo,bart007345,1 point,Fri Jul 17 16:39:52 2015 UTC,"Is a normal pattern, when you need initialize your app's internals better to show to the user's what is going on, instead of showing empty first activity for several seconds."
androiddev,3dimlm,ahmed_alamir,9,Thu Jul 16 15:58:38 2015 UTC,"This guide misses one very important detail. inflate(int resource, ViewGroup root) inflates the layout into your root, so the root LinearLayout in your xml is put into your custom view. This creates an unnecessary layout. To avoid this, change the root element to merge, though this will break your layout in the visual designer. Other than that, it looks like a solid beginner's guide. I could use one for more advanced stuff, overriding onDraw, measurement."
androiddev,3dimlm,SuperRandomExplosion,2,Thu Jul 16 19:42:40 2015 UTC,"Very good point. Honestly I have read about that but have not implemented it before, plus I thought it is important for beginners to maintain UI designer's functionality."
androiddev,3dimlm,SuperRandomExplosion,1 point,Fri Jul 17 07:57:05 2015 UTC,"You can swap your desired root with merge while working, at least that's what I do."
androiddev,3dimlm,TheRealKidkudi,-1,Fri Jul 17 08:06:07 2015 UTC,"this will break your layout in the visual designer   No! Not my precious visual designer! Seriously though, does anyone really use that or take it seriously? Because I find the only times I've ever actually opened it are on accident.  Good tip, though! Thanks for sharing it."
androiddev,3dimlm,buyacasha,3,Fri Jul 17 04:18:45 2015 UTC,"I absolutely do. If you did some more complex layouts, you can preview them on all different screen sizes at once. That's extremely helpful."
androiddev,3dimlm,crackshot87,2,Fri Jul 17 07:20:37 2015 UTC,"Definitely. Having a UX designer looking over your shoulder for every ""pixel"" that is out of place on different screen sizes can become tiresome if all you have is plain XML and real-time app inspection."
androiddev,3dimlm,bac0nbac0n,1 point,Fri Jul 17 07:58:16 2015 UTC,I use it to get a rough eyeball that everything is roughly where it should be. Faster than checking it on every deployment.
androiddev,3dimlm,bac0nbac0n,1 point,Sun Jul 19 16:15:47 2015 UTC,"One other thing, instead of:  LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);   You can do:  LayoutInflater.from(context);   or even:  LayoutInflator.from(getContext());"
androiddev,3dimlm,perez89,1 point,Sat Jul 18 00:58:55 2015 UTC,"Does it have an advantage, I mean beside being shorter and easier-to-read?"
androiddev,3dijlb,mavdev,11,Thu Jul 16 15:36:52 2015 UTC,An app that notifies you of other singles in your area wanting to meet.
androiddev,3dijlb,hitraj47,2,Thu Jul 16 21:01:28 2015 UTC,I think you're looking for Tinder
androiddev,3dijlb,Ashish879,0,Thu Jul 16 22:34:40 2015 UTC,I thought of simialr ideas but the API is not that actually. It is only for phones that are on the same Wifi network. that seriously limits the applications (compared to what I am sure many of us thought)
androiddev,3dijlb,hitraj47,1 point,Thu Jul 16 21:05:15 2015 UTC,"Just phones? Any other devices? Maybe a remote controller for powerpoint presentations? Smart tv remote?  Maybe a sort of 'key' that locks/unlocks your PC.  Maybe more useful if it can connect to other devices, if cars also had wifi you could remote start, set AC before you get in etc.   If you want some more shady ideas, playing Watch_Dogs would be a good start lol."
androiddev,3dijlb,Tall_Polak,12,Thu Jul 16 21:35:42 2015 UTC,I'm just barely starting out in android dev (learning java through head first) but I thought an app for social media would be cool. I don't know if it would be possible but think of an app that would store all of your social media accounts. Then when you are near someone else it notifys them and gives them the option to follow you and you could have the option to either automatically follow them or just manually select it. Just an idea that I might do after I learn java and build my first app.
androiddev,3dijlb,jk3us,5,Thu Jul 16 17:18:30 2015 UTC,"Then when you are near someone else   It turns out ""nearby"" isn't defined by location, but being on the same network that has multicast enabled).  So unless you a your friend happen to be on the same wifi network that is configured that way, that won't work."
androiddev,3dijlb,Serandel,3,Thu Jul 16 18:05:29 2015 UTC,"I don't think so, being that nearby messages are supposed to work with the new Bluetooth LE beacons. In fact, rumor is they detect nearby devices through WiFi, Bluetooth and even inaudible sounds."
androiddev,3dijlb,jk3us,2,Thu Jul 16 18:44:56 2015 UTC,"Note: For devices to discover each other, they must be connected to the same network with multicast enabled. By default, most home routers have this setting enabled. If you experience connectivity issues while using this API, please consult your router device manufacturer documentation for more information on how to enable this setting.   https://developers.google.com/nearby/connections/android/get-started"
androiddev,3dijlb,JonXP,3,Thu Jul 16 18:45:57 2015 UTC,"That's nearby connections, a different but related API. Digging around in the docs shows references to nearby messages in the Bluetooth LE API stuff."
androiddev,3dijlb,Serandel,4,Thu Jul 16 18:59:46 2015 UTC,"Sorry, I was talking about the new Nearby Messages API. Nearby Connections works as you say, in fact."
androiddev,3dijlb,jk3us,1 point,Thu Jul 16 19:01:37 2015 UTC,"Ah, I didn't realize they were different.  I assumed you would need a connection before sending a message :)"
androiddev,3dijlb,Tall_Polak,1 point,Thu Jul 16 19:05:36 2015 UTC,Ahh okay. I was reading the comments and saw this too. I guess it wouldn't even work at a college unless they had multicast enabled on the wifi.
androiddev,3dijlb,ChronicElectronic,7,Thu Jul 16 18:07:16 2015 UTC,"I've had a game idea based on something like this for a while. Everyone is carrying around some organism with DNA. Your organism swaps DNA with other organisms it encounters.  There would be a big evolutionary component. Maybe even designing ""genes"" and trying to get them spread the most."
androiddev,3dijlb,Draiko,5,Fri Jul 17 01:27:11 2015 UTC,Proximity mating game involving massive virtual pet orgies.  Nice.
androiddev,3dijlb,McSick,5,Fri Jul 17 01:37:02 2015 UTC,"My first thought would be to use this for games. Especially the Nearby Connections.  Boargames and card games with a shared screen in the middle type situation.  Shame its limited to being on the same network.  Personally I feel like if they made it use api keys or something along the lines, you could have ended up with really awesome notification systems.  However I understand security first."
androiddev,3dijlb,Draiko,5,Thu Jul 16 17:44:17 2015 UTC,"Music streaming apps could allow other users to hear what people nearby (in ""share"" mode) are listening to.  More specifically, you'll throw your app into ""receiver mode"" and hear the content that a person in ""sender mode"" nearest to you is listening to.   Bonus: Doppler and/or fade in/out based on distance if possible."
androiddev,3dijlb,ChronicElectronic,3,Thu Jul 16 21:27:25 2015 UTC,"Very cool idea. Even just stitching together playlists of music people next to you are listening to. That ""share"" mode would be very important."
androiddev,3dijlb,Draiko,3,Fri Jul 17 01:24:10 2015 UTC,"Thanks.  I thought about that a while back. I was on a long drive and saw someone jamming out in their car.   ""I wonder what the hell they're listening to? ...  Heeeey! Wouldn't it be cool if..."""
androiddev,3dijlb,ChronicElectronic,3,Fri Jul 17 01:30:49 2015 UTC,It would be great for parties. Just plug one person's phone in and listen to music from everyone there.
androiddev,3dijlb,Draiko,2,Fri Jul 17 01:32:53 2015 UTC,Like group play but easier.
androiddev,3dijlb,trying222,1 point,Fri Jul 17 01:45:25 2015 UTC,This app does something like that
androiddev,3dijlb,morgazmo99,2,Sun Jul 19 00:20:44 2015 UTC,"I was hoping and looking for an API, but so far no luck, that will pull specific businesses in an area. Does something like this exist for use?  Say my app user is in San Fran, I want to provide rental car companies in the area, hopefully even linking contact details. Is this as hard as it looks, without standing on a Google APIs shoulders?"
androiddev,3dijlb,teslator,2,Thu Jul 16 22:36:20 2015 UTC,Yes look up Google places API
androiddev,3dijlb,JamesBarnes007,2,Thu Jul 16 23:23:55 2015 UTC,"messages to the gm in a role playing group, complete with die rolls n stuff."
androiddev,3dijlb,TheRealKidkudi,2,Fri Jul 17 00:03:02 2015 UTC,StreetPass for stupid fun stuff
androiddev,3dijlb,ndguardian,1 point,Thu Jul 16 20:08:52 2015 UTC,My first thought was StreetPass for Android.
androiddev,3dijlb,sonorangoose,1 point,Thu Jul 16 20:24:45 2015 UTC,"So...for some reason, my first thought was using this as a platform for malware distribution. That would be theoretically possible, right? Of course, not something I would even want to implement, but I can't shake the idea of that as a possibility."
androiddev,3dijlb,Turtlecupcakes,2,Thu Jul 16 15:44:14 2015 UTC,"Related, the Wifi-Direct code does have a bug which can reboot 4.x  devices. Seems low severity / mildly annoying.  http://www.zdnet.com/article/no-fix-in-sight-for-android-wi-fi-direct-vulnerability/"
androiddev,3dijlb,arilotter,1 point,Thu Jul 16 17:14:44 2015 UTC,How so? To me it looks like it's primarily a text message passing system. So if you're writing a game you can broadcast the I'd of a game room out to the network and other devices will see that game pop up. It's basically an API that lets you make LAN-browser type of interactions easily.  It also requires you to be on the same WiFi network (with multicast enabled) so there's some inherent security there
androiddev,3dijlb,ndguardian,1 point,Thu Jul 16 15:52:53 2015 UTC,"You guys are all reading the wrong API docs! These new Nearby APIs let you talk to nearby phones via WiFi, Bluetooth LE, and ultrasonic audio! http://googledevelopers.blogspot.ca/2015/07/connect-with-world-around-you-through.html"
androiddev,3dijlb,Turtlecupcakes,-1,Fri Jul 17 06:49:20 2015 UTC,"Oh, if it requires people to be on the same WiFi network that mitigates the problem rather easily. I did not read a lot into it, but I was understanding it as kind of a messaging broadcast kind of API, similar to something like Nintendo's Streetpass. I guess I got that one wrong. I was thinking of something like that where one could just arm a malware file for distribution, and then just walk around and passively send people malware."
androiddev,3dijlb,PaddyWhacked,3,Thu Jul 16 15:55:36 2015 UTC,"I didn't mean SMS by text message passing, I just meant that the information is text strings. But yes, it is a broadcast API. Your app can publish messages to the network and other instances of your app can act on those floating messages. (But not like streetpass where it can do it ad-hoc without any actual networks around)  It's basically the technology behind how chrome & Android discover Chromecast devices on a network, but exposed as an open API."
androiddev,3dijlb,FearTheCron,1 point,Thu Jul 16 16:01:12 2015 UTC,"In the back of my mind, all I can see is this being used for is for gay hookup apps."
androiddev,3dijlb,Icerman,1 point,Thu Jul 16 21:02:32 2015 UTC,"Perhaps write a differential GPS implementation with cheap android phones scattered around as base stations.  Would be cool if you could put the time into making one that would automatically correct your signal based on the closest ""base station"".  Perhaps you could even make something that allows you to only need to get an absolute position of a couple of the base stations and figure out the location of the rest.  https://en.wikipedia.org/wiki/Differential_GPS"
androiddev,3dijlb,geecko,1 point,Thu Jul 16 22:18:16 2015 UTC,"I can see a few different applications for this, but really, there's very few cases where I can think of where you'd be on the same network as somebody else you didn't already know. Especially if its primarily a messaging api.   But still. Local gaming like board games would probably work. Or say a convention event where you could push ads or similar content to attendees.  I don't know. Its seems cool but limited in real world usefulness."
androiddev,3dmf2y,artem_zin,1 point,Fri Jul 17 13:28:35 2015 UTC,Because standard Jacoco Gradle Plugin does not have option to fail the build if coverage is not enough -> it makes test coverage almost useless.
androiddev,3dixu9,tanninginmay,4,Thu Jul 16 17:21:12 2015 UTC,"Holy hell, I just downloaded this 10 minutes ago and the initial download is at like 40%.  What is it even downloading?  If it's just 2 mb, why don't you just pack it up with the app itself? (Increase the apk size by 2mb) Like, download whatever you're downloading, create a database, or stick it in json (or whatever you are doing) and just dump it in the assets folder. And on the initial launch you can just unpack the data you already have (no need to download it).  Still, I'd recommend you put this (the download) in a background thread. Because right now it stops on orientation changes and if the screen goes off too long.   The user is not going to consume all the data at once. Download a little bit. Show a little bit. While a showing a little bit, download the next bit and so on.  Shit. Now it's at 43%. And my internet speed is 10Mbps. Again, what is even taking so long? When you say in the app the download is 2mb, your users expect it to be done in a couple of seconds. Any other app and I would be uninstalling this right now.  I read another comment of yours and it seems you're getting the data directly from xkcd right? Why not compile the data ONE TIME by yourself. Host a file online (Hell, even a dropbox or MegaUpload link would work temporarily) Ideally, you want to host this on your own server. There's tons of free plans out there, you can look into AWS."
androiddev,3dixu9,lordoftherings911,1 point,Fri Jul 17 05:40:21 2015 UTC,"Fix is in the next update, it only takes about 10s to download everything"
androiddev,3dixu9,theshapersarecoming,2,Fri Jul 17 17:04:48 2015 UTC,"I highly recommend pooling concurrent requests on the initial download or preloading what you can. It took me 4 minutes for 2mb, something is obviously wrong."
androiddev,3dixu9,kokhouser,2,Fri Jul 17 03:36:16 2015 UTC,"Have you got any ideas on how to go about doing this, cuz I am making about 1500 requests to get all the data as xkcd does not have a get all api. I am using okhttp for networking"
androiddev,3dixu9,pandanomic,3,Fri Jul 17 05:05:42 2015 UTC,"I am making about 1500 requests to get all the data   Yeah that'll be a problem. Maybe load only the latest 5-10 comics, and either load them as the user reads beyond that, or load them in the background once the first batch completes?"
androiddev,3dixu9,theshapersarecoming,1 point,Fri Jul 17 06:59:09 2015 UTC,Either this or create a bounded IO scheduler for your requests
androiddev,3dixu9,Quinny898,1 point,Fri Jul 17 09:46:49 2015 UTC,Not loading them all will break search functionality
androiddev,3dixu9,Quinny898,2,Fri Jul 17 14:37:08 2015 UTC,I am making about 1500 requests   Holy shit - I'd advise setting up a small webserver where you can scape XKCD - then have the app hit the webserver to get comics in batches (and lazy load them as the user scrolls down).
androiddev,3dixu9,b_r_h,1 point,Fri Jul 17 10:48:00 2015 UTC,"I don't wanna spend money on a webserver for a free app, lazy loading will completely break the search and random  functionality, I have got a pull request which will make the downloads significantly faster"
androiddev,3dixu9,kcoppock,1 point,Fri Jul 17 14:33:08 2015 UTC,https://github.com/tanallnight/Blip/pull/4
androiddev,3dixu9,XPostLinker,1 point,Fri Jul 17 13:44:30 2015 UTC,"Hey thanks, I'll merge it once I review the code"
androiddev,3dixu9,yankeeken,1 point,Fri Jul 17 14:26:22 2015 UTC,"it took me a while to understand what you did, but now i understand what happened and its super smart, great idea"
androiddev,3dixu9,KatsumeBlisk,1 point,Fri Jul 17 18:06:08 2015 UTC,Have you considered having the download up until the last comic at the time of release included in the app? Then continue from there and add to the file. Would save everyone loads of time
androiddev,3dljay,Natanus122,6,Fri Jul 17 06:29:05 2015 UTC,"It's awesome, that you're new and whatnot. But please read the Wiki and FAQ of this subreddit."
androiddev,3dljay,SuperDNRS,1 point,Fri Jul 17 07:07:52 2015 UTC,"Thank you very much, I was not aware"
androiddev,3dljay,Phennylalanine,5,Fri Jul 17 16:29:51 2015 UTC,"Andromo is satan and it does not teach you programming. Andromo is just a drag and drop lego set that builds something that works, but you shouldn't build a car outta legos..."
androiddev,3dljay,iwannahug,5,Fri Jul 17 07:57:13 2015 UTC,"in my opinion, you should start with java programming which is the language used in android development. but if you are too impassionate about it, you can have a look at MIT app inventor that is a lot better than andromo I guess."
androiddev,3dljay,Zhuinden,3,Fri Jul 17 07:58:52 2015 UTC,"I believe you should just avoid Andromo, and watch the video tutorials on Java and Android programming (in that order) by Derek Banas, and some Android programming videos by Slidenerd."
androiddev,3dljay,22fortox,2,Fri Jul 17 09:39:40 2015 UTC,"I'm 16 and have a little Java experience. I use https://www.udacity.com/course/viewer#!/c-ud853, is that any good?"
androiddev,3dljay,iwannahug,1 point,Fri Jul 17 14:13:56 2015 UTC,"Yeah, it's a good point to start. If I'm not wrong, these videos are created by Google, so what can it be better? Beside this, if you are stuck in some specific topics broadcast receivers for example, you can google it, millions of videos and tutorials are waiting for you. Derek Banas, vogella, tutspoint are a few of them."
androiddev,3dljay,atioxx,-3,Sat Jul 18 06:42:39 2015 UTC,"as a heads up, your app won't be released in a year from now, that if your idea was complex enough and that you're serious about it."
androiddev,3dl6dl,mavdev,13,Fri Jul 17 04:04:27 2015 UTC,"No, YouTube developers just simply don't give a flying fuck about the layout."
androiddev,3dl6dl,ds84182,0,Fri Jul 17 05:36:14 2015 UTC,"well they do care about the layout because when the app launched for the first time it has a Tutorial type showing how to use different parts of the UI. I guess they just dont care to stick to Google's Style, which is ok and refreshing."
androiddev,3dl6dl,MayorOfFartonia,-1,Fri Jul 17 05:51:09 2015 UTC,Wrong. No point trying to sugar coat it.  They simply do not care
androiddev,3dl6dl,hitler_kardashian,4,Fri Jul 17 07:31:22 2015 UTC,"Nav Drawers are still used in a bunch of Android/Google applications. I think there might be some examples in the Material Design Spec.  Also, Why does it matter if it's a trend? Design and build your UI for your application, don't just stuff things in there because it's a trend."
androiddev,3dl6dl,hitler_kardashian,1 point,Fri Jul 17 14:52:52 2015 UTC,this is not about following the trend. It's about user familiarity. Most Design UI Elements are not about your own design but also what users are familiar with. Many of the Android UI Elements (heck the entire material design) is pushed by Google and therefore familiar to users. That's the reason to pay attention.
androiddev,3dl6dl,candidcold,2,Fri Jul 17 14:54:45 2015 UTC,"Anyone know if Google announced or mentioned something if this is going to be a trend?   You're asking whether you should implement something because you're confused as to whether it's still a trend. That is exactly about following a trend.    Most Design UI Elements are not about your own design but also what users are familiar with.   Google/Android/Material Design did not introduce nor invent the idea of a navigation drawer. If they get rid of it, people won't just suddenly find a hamburger menu some alien concept"
androiddev,3dixoi,kdb223,10,Thu Jul 16 17:20:07 2015 UTC,"OK, you got a bad review. Everyone who has real users get them. Most of them don't make any sense. But how does it imply that the review system sucks?"
androiddev,3dixoi,klitcurse,2,Thu Jul 16 18:16:09 2015 UTC,"In general, I would agree that the review system isn't great.  It should be threaded (like reddit, Amazon, Steam, etc.) - then users should be able to help each other out with issues (and call out BS reviews).  Upvotes/downvotes should be clearly visible too."
androiddev,3dixoi,Terazilla,0,Fri Jul 17 10:41:33 2015 UTC,"I'm sorry but I should have elaborated on this.  There should have been a system in place which lets you flag reviews as spam or irrelevant or at least allow us to initiate a proper conversation with the reviewer to straighten things out if at all they can be straightened out.   But no, if you reply to a review on Play Store all the reviewer gets is an email from Google saying that I responded to his review. As a smalltime dev this worries me.  EDIT: Perhaps saying ""totally sucks"" was overkill, eh?"
androiddev,3dixoi,dreamroadproductions,13,Thu Jul 16 18:23:56 2015 UTC,"Play does have a spam/unhelpful button, in the store itself."
androiddev,3dixoi,GermainZ,2,Thu Jul 16 22:03:10 2015 UTC,"I have something to show you: http://i.imgur.com/7uHG2Fg.png This guy is saying that my app have virus... My app have 260.000 downloads, on play store, any other complain about it but this guy thinks he's right.. what can i do? nothing! When you deal with people you have to be REALLY pacient"
androiddev,3dixoi,dreamroadproductions,8,Thu Jul 16 19:27:11 2015 UTC,"""you may be mistaken"" means that you're saying he might be right. Just pointing it out in case you didn't notice. Perhaps you want ""you're mistaken"" instead?"
androiddev,3dixoi,geecko,1 point,Fri Jul 17 02:08:54 2015 UTC,"Oh, thank you! i didn't realized at all!"
androiddev,3dixoi,vladlichonos,1 point,Fri Jul 17 02:11:40 2015 UTC,Your best bet is to be patient and explain it step by step to him. Maybe invite him to email you.
androiddev,3dixoi,klitcurse,0,Sun Jul 19 03:07:05 2015 UTC,You think I didn't already?
androiddev,3dixoi,vladlichonos,1 point,Sun Jul 19 03:23:53 2015 UTC,"Say: ""We refunded your half a cup of coffee"""
androiddev,3dixoi,superhappyrobots,11,Thu Jul 16 17:26:52 2015 UTC,No. Don't fuck with users even when they fuck with you. You can only lose doing that. Swallow your pride.
androiddev,3dixoi,vladlichonos,1 point,Thu Jul 16 19:01:48 2015 UTC,It was a joke. Is it okay on reddit comment like this? Still learning rules.
androiddev,3dixoi,JDSlim,6,Thu Jul 16 20:37:08 2015 UTC,It's fine but keep in mind that humour doesn't always get conveyed well through text. I read your comment as a serious reply as well.
androiddev,3dj60g,Pyrotemplar,7,Thu Jul 16 18:19:33 2015 UTC,"You have it correct.  Sending a request to www.apiurlhere.com/service/data constitutes as one.  Sounds like it's enough to do local development work on, but once you release a production ready app, they want your $$."
androiddev,3dj60g,trandav,5,Thu Jul 16 18:28:19 2015 UTC,"You could ""cheat"" depending on your use case. WARNING: you might be violating terms of service. You could proxy the API calls through your server and cache the results. Say for example you are calling the service to get the 10 newest news stories. Instead of having the devices do it, your website could do it and then cache the results to your database. Then when devices query for news stories, your server sends them instead of the API.  This won't work for you if the API calls are something customized for each user."
androiddev,3dj60g,will_r3ddit_4_food,6,Thu Jul 16 21:36:17 2015 UTC,"This is how we've gotten around those limits in the past. provided the data is all going to be the same, just have your own server hit the api, then your devices query your server."
androiddev,3dj60g,dj_darkhorse,2,Thu Jul 16 22:11:11 2015 UTC,It depends on the API.  Some services give 500 api calls per user token.  Others limit based on application ID.
androiddev,3dj60g,PeEll,1 point,Thu Jul 16 19:37:08 2015 UTC,"That is a really bad limit to be honest, considering the free tier of Parse limits you to 30 calls per second. Although all of their DB operations also count towards that limit, it's still pretty hard to reach even with a fair amount of users."
androiddev,3dj60g,eValval,1 point,Thu Jul 16 19:48:22 2015 UTC,Sounds like you know it's easily not enough. Without more information on the kind of app and what API has the limit it's hard to offer any advice though.
androiddev,3dj8br,jackhexen,2,Thu Jul 16 18:35:57 2015 UTC,Couple questions:   Why is it Controller an abstract class and not an Interface? What about methods like onDestroyView or onOptionsItemSelected and the whole bunch of other lifecycle methods?
androiddev,3dj8br,murki,1 point,Fri Jul 17 00:31:27 2015 UTC,"Because you're not going to override all of 100500 activity methods. They all can be delegated this way. This is just an example, not a library for all android components."
androiddev,3dj8br,murki,1 point,Fri Jul 17 08:32:21 2015 UTC,"I'm not sure I get #1, why would changing the words 'abstract class' to 'interface' force you to override 100500 methods?"
androiddev,3dj8br,murki,1 point,Fri Jul 17 16:28:26 2015 UTC,Because when you inherit an interface you can't instantiate the class without implementing all of them.  If you are going to use a full activity delegate (a real life example) it should have all 100500 methods. But normally you only need about 4 methods.
androiddev,3dj8br,Zhuinden,1 point,Fri Jul 17 17:54:20 2015 UTC,"I see, good point."
androiddev,3dj8br,Zhuinden,1 point,Fri Jul 17 18:18:16 2015 UTC,"It still depends on activity, so I am not sure if this actually gets us closer?"
androiddev,3dj8br,bart007345,1 point,Fri Jul 17 06:20:22 2015 UTC,"I didn't get your question. Are you asking if we can apply the delegation principle for all cases? I think yes. Even butterknife works, so no troubles."
androiddev,3dhv60,fadelakin,1 point,Thu Jul 16 12:02:28 2015 UTC,I've done background services before where I monitor what the user is doing and alarm type things but I want to write a background service that allows me to monitor folders on a device or whichever folder the user let's me monitor.  I know Google does it with Photos and I know Microsoft does it with OneDrive where they monitor your pictures folder for backups. I just don't know how to write my own implementation to monitor folders for new additions.  Any help to point me in the right direction?
androiddev,3dhv60,leggo_tech,4,Thu Jul 16 22:21:55 2015 UTC,"So what the hell do I use now? ActionBar, AppBar, ToolBar?"
androiddev,3dhv60,farmasek,1 point,Thu Jul 16 21:35:04 2015 UTC,"Does anybody know some tutorial or library, where i could learn how to use InputTextLayout with flexibleToolbar ?"
androiddev,3dhv60,IPA_on_30th,1 point,Thu Jul 16 19:59:59 2015 UTC,"Should the ""Unknown Resource"" option be required to install an application from the Play Store? It doesn't seem right. I'm trying to help the developer of a newer service. They released an updated version yesterday and I can't install on my 5.0.1 lollipop. The application just keeps opening my Security settings page with no notification of what is required. I brought this up to the developer and they told me that I need to have that setting enabled. Really? This seems like it should go against something with Google as an application available on their platform still requires unknown sources for installation. Anyone?"
androiddev,3dhv60,getapost,1 point,Thu Jul 16 15:36:37 2015 UTC,I'd report the app.  That doesn't sound like something google would approve.
androiddev,3dhv60,ASIC_SP,3,Thu Jul 16 16:24:56 2015 UTC,Does a free app (with or without ads) have to be selective when it comes to choosing countries in developer console before publishing? Or simply choose all countries? Anything to be kept in mind?
androiddev,3dhv60,renanferrari,2,Thu Jul 16 15:12:13 2015 UTC,"I don't think there's any harm choosing all countries.  But you do have to keep in mind that if your Google Play page isn't properly localized to a certain country, your downloads there will most certainly be negligible."
androiddev,3dhv60,ASIC_SP,1 point,Thu Jul 16 16:18:44 2015 UTC,thanks :)
androiddev,3dhv60,trandav,3,Thu Jul 16 16:23:59 2015 UTC,"So in regards to yesterday's thread, and this specific comment here: https://www.reddit.com/r/androiddev/comments/3dedaj/dear_android_developer_this_is_an_intervention/ct4djqj   Any request that requires your app-only keys should be stored and handled only by a system you trust (i.e. your backend server).    So.. I understand it makes sense to store something like a private API key on a web server and to dynamically return the value of it in your app, so it won't show up when it's decompiled.  However, what I still don't understand is: ""What's preventing someone from decompiling the apk, see where it's trying to request the key from, and manually sending out a request to your own web server to retrieve the key?""  I'm not planning on having any type of user credentials, so validating that the user has access to the web server doesn't make sense."
androiddev,3dhv60,if_man_is_5,2,Thu Jul 16 15:00:30 2015 UTC,"What's preventing someone from decompiling the apk, see where it's trying to request the key from, and manually sending out a request to your own web server to retrieve the key?""   Because your web service does not return the key, the web service does whatever action it is that requires the key.  Here's a real-world example from a project of mine at work:  Imagine you are making a chat app. People can share images in the conversations, and the images are hosted on Amazon S3.  One way to upload to S3 is to use your AWS keys as your credential. You could keep your AWS keys in the APK and use them to upload to S3, but someone will go hijack that.  And if you were dumb enough to have your root level AWS key in there, then someone's now spinning up bitcoin mining rigs in EC2 on your behalf.  However, another method of uploading to S3 is to use your AWS key to cryptographically pre-sign a URL, and if you do so, then you can upload a file to appear at that URL without having to have the AWS key.  So your app makes a call to http://example.com/api/uploadUrlRequest and maybe includes a blob of JSON with whatever metadata is necessary to decide what bucket, name, etc the file should be. Your server-side code uses the AWS key to generate a pre-signed url and returns it back to the app.  The app makes an HTTP PUT request at that URL with the image.  The image got uploaded, the app knows what the final URL is, and you can't reverse the app APK to get the AWS credential.  Facebook recommends something similar.   Therefore the App Secret or an App Access token should never be included in any code that could be accessed by anyone other than a developer of the app. ... We recommend that App Access Tokens should only be used directly from your app's servers in order to provide the best security. For native apps, we suggest that the app communicates with your own server and the server then makes the API requests to Facebook using the App Access Token."
androiddev,3dhv60,trandav,1 point,Thu Jul 16 15:34:29 2015 UTC,"Very interesting.  Thanks!  I never thought about using a web server as the middleman to forward requests back and forth from the app to the API.  Just doing a little googling however, it seems like presigning the URL is specific to AWS?"
androiddev,3dhv60,if_man_is_5,1 point,Thu Jul 16 16:17:30 2015 UTC,"Just doing a little googling however, it seems like presigning the URL is specific to AWS?   Yeah, that's just something you can do with S3 and was basically just a simple example that was up on the top of my head."
androiddev,3dhv60,trandav,1 point,Thu Jul 16 16:19:36 2015 UTC,"Ok, thanks again."
androiddev,3dhv60,SquattingWalrus,1 point,Thu Jul 16 17:11:26 2015 UTC,"So basically your app will be calling a URL that has been signed by your server, without requiring an access token to be passed? If that's the case, doesn't it become the situation where anyone can call your endpoint to get back a signed URL?"
androiddev,3dhv60,if_man_is_5,1 point,Thu Jul 16 15:43:26 2015 UTC,"If that's the case, doesn't it become the situation where anyone can call your endpoint to get back a signed URL?   And if they do, all they can do with that is post contents of a file to the S3 bucket you use for uploading user-generated content. Which is what your app is supposed to do, right? You've limited the potential outcome to what's going on normally, and the credentials can't be hijacked to escalate beyond that because no user has the actual credentials.   Now, if you want, you could put that endpoint behind your own authentication scheme (for instance, my app used authentication and you had to include the access token along with the url request).  Or if you don't want any authentication, say we're  we're making a Yik-Yak-esque anonymous photo chat service, we just have to accept the fact that the very purpose of the app is that any rando can upload a file."
androiddev,3dhv60,sourd1esel,1 point,Thu Jul 16 16:00:48 2015 UTC,Sometimes my app drops in frame rates. I think this is because I have small bits of code on the main thread. This is my only guess.  I have tried to put anything intensive on a worker thread.  How do I look into whats causing the drop?
androiddev,3dhv60,nebari,1 point,Thu Jul 16 13:57:33 2015 UTC,"If you're troubleshooting operations on the main thread, I'd suggest using StrictMode - you set thread policy detection specifically for long-operation detection.  Here's an example from the developer docs linked above:  public void onCreate() {     if (DEVELOPER_MODE) {         StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()             .detectDiskReads()             .detectDiskWrites()             .detectNetwork()   // or .detectAll() for all detectable problems             .penaltyLog()             .build());          StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()             .detectLeakedSqlLiteObjects()             .detectLeakedClosableObjects()             .penaltyLog()             .penaltyDeath()             .build());         }     super.onCreate(); }   I run StrictMode under various conditions before releasing anything (before official handoff to QA or for my own final testing).  edit: formatting"
androiddev,3dhv60,sourd1esel,1 point,Thu Jul 16 13:37:18 2015 UTC,Thanks for taking the time to respond. I will try StrictMode.
androiddev,3dhv60,if_man_is_5,2,Thu Jul 16 21:35:58 2015 UTC,"Things to try: Turn on rendering profiling to see if you can't do some detective work to see if there's a particular action or condition that's causing it to consistently drop frames.  If the frame rate indicator goes over the flat line, then you're taking too long and you're not getting 60fps.  Try traceview and look at what's going on in your main thread, too.  Definitely so if you've figured out some specific reproducible action that causes it to get choppy; profile that part."
androiddev,3dhv60,sourd1esel,4,Sun Jul 19 01:05:14 2015 UTC,"Self taught developer here. I'm about to finish an app. So I'm thinking about doing some more foundation studying. My goal at the moment is to get a job working with android. Im wondering what I should focus on, design pattern (I have not studied dp in any regard, I would study them for java) algorithms (I have not read a book or taken a class) or I could start on my next app. Keeping in mind the goal is getting a job what would benefit me the most?   Im leaning toward design patterns."
androiddev,3dhv60,bart007345,1 point,Thu Jul 16 15:47:49 2015 UTC,I would say patterns over algorithms. They're more useful.
androiddev,3dhv60,oneEyedOdin51,2,Thu Jul 16 13:33:56 2015 UTC,"With the goal of getting a job, if I had to pick, I would pick algorithms.  Most developer interviews that I've been in have asked questions related to both algorithms and design patterns so ideally you would have a basic understanding of both.  One thing you could do for your next app is pick a design pattern and use it in your next app as well as implement some well known algorithms.  That way you could make another app and have practical knowledge of algorithms and a design pattern."
androiddev,3dhv60,OogieFrenchieBoogie,2,Thu Jul 16 17:50:29 2015 UTC,"Hello guys, I work on an old app ( developed circa end 2012),  Q1) Are fragment listener still widely used ? Is there any better solutions ?   Q2) Is there a ghist/doc with all the best android patterns ? I only found best practices but not specific patterns.  Thanks !"
androiddev,3dhv60,kaisims,1 point,Thu Jul 16 14:01:54 2015 UTC,"Hey guys!  is there a library that combines image caching and that I can load more while swiping down?  In my example the app gets a json after startup, in this JSON there are names of a brand and there equivalent images as a URL. So I have to get the URLs out of the JSON (done) loading and caching them in an listview and when I scroll down it should load another JSON with another picture urls, and so on and so on.  If there is not such a nice library, which ones I can use to accomplish both tasks and how do I have to change them.  Big thanks!"
androiddev,3dhv60,lordVader1138,3,Thu Jul 16 13:06:08 2015 UTC,Glide is a best option for that. The other option is Picasso. They are good to start with and popular. This blog post has a good comprehensive summary of both.   If you can listen to podcast Fragmented Podcast's Episode 5 discuss many libraries in detail.  My pick among these libraries is Glide.
androiddev,3dh10l,Jawnnypoo,12,Thu Jul 16 05:13:49 2015 UTC,[cat intensifies]
androiddev,3dh10l,aurae_ger,3,Thu Jul 16 07:23:51 2015 UTC,Negative friction?
androiddev,3dh10l,Highsight,1 point,Thu Jul 16 15:41:27 2015 UTC,You got it 😅
androiddev,3dh10l,Highsight,2,Thu Jul 16 18:00:06 2015 UTC,I did this once in Box2D.  I considered never going back lol.
androiddev,3dedaj,notsilverfox,10,Wed Jul 15 16:46:47 2015 UTC,"There's a few comments here about all kinds of 'clever' things to make getting at the sensitive bits of your application more difficult. Taking such an approach comes with a lot of downsides, specifically:   It makes managing your app a lot more difficult. Throwing native libraries with a proprietary encoding scheme is my definition of a maintenance nightmare. While you may make a hacker moderately more frustrated, you'll likely piss off 10x more legitimate users when your 'clever' solution doesn't work on their phone or device. In any case, it'll probably result more so in a false sense of security than any real protection.    The easiest solution is just not to play the game. Don't include anything in your app that you wouldn't want someone to see/modify. Move the operations you care about to the server side. I get that this isn't a perfect solution, but it should absolutely be your first choice.  Just remember that app developers aren't the first to face this problem. The gaming, music, and movie industries have tried for years and spent untold fortunes creating their own 'clever' DRM solutions. You are not likely to solve this problem any better than they did. (Related note: The most successful DRM schemes are, you guessed it, tied closely to server-side operations.)"
androiddev,3dedaj,will_r3ddit_4_food,25,Thu Jul 16 02:08:46 2015 UTC,"Good information but I have a question. You say not to store your API keys in your code. Where do you store them? If you store them in the database, hackers can access them from a tool like stetho. I'm asking about facebook and twitter API keys especially.  Thanks!"
androiddev,3dedaj,pwastage,18,Wed Jul 15 17:24:36 2015 UTC,"It depends. Are you talking about user keys or your own service keys?  Storing a user's OAuth token locally that you receive from Twitter/Facebook isn't a bad thing and is expected. These user keys are the ones that enable you to post on someone's behalf, get user information, etc. Storing your own service or application-only tokens, however, would be a very bad thing. Any request that requires your app-only keys should be stored and handled only by a system you trust (i.e. your backend server).   Also realize that certain IDs, like a Crashlytics or Google Analytics ID, should be okay to include in the app. Sure, someone theoretically could monkey around with your stats or logging if they extract it, but the risk is relatively low and it doesn't enable access to sensitive information."
androiddev,3dedaj,ballofcheese,8,Wed Jul 15 17:48:37 2015 UTC,"One thing to piggyback on here:  Always verify user input/data. Never trust user input  User-> I am 'XYZ', here is my token/hashed password  Server-> yes, I can verify your identity   User -> I am 'XYZ', I have admin access, give me list of all users  Server-> no XYZ doesn't have admin access, you don't get the list of users"
androiddev,3dedaj,pwastage,1 point,Wed Jul 15 21:25:38 2015 UTC,Don't do the hashing client side
androiddev,3dedaj,ballofcheese,0,Thu Jul 16 21:52:05 2015 UTC,"What are you going to do, send the password clear text over the (encrypted) wire every time?  https://en.m.wikipedia.org/wiki/Cryptographic_nonce  (Sending password might still make sense initially: see oauth- you need user to log onto https webpage to get oauth token, but you use that token to authenticate after initial setup)"
androiddev,3dedaj,njetwerk,1 point,Thu Jul 16 22:11:02 2015 UTC,"the goal of a hashed password (which should be done with a proper KDF and not any other hash function, even if cryptographic) is to limit the ability of an attacker to brute force given the database of <usernames, passwords> has been leaked.  An ideal setup would be to use form of asymmetric public key certificate but there has yet to be a version of this with proper UI.  oauth solves a completely unrelated problem: how do you pass off ""permission"" to access something or ""proof of identity"" to an untrusted third party.  When doing typical web auth: the user has a username & password you should (a) not roll your own and (b) ensure that the open sourced audited code base your using uses PBKDF/bcrypt/scrypt/the winner of the password hashing competition (unannounced at this time), correctly salts the passwords to avoid rainbow tables, and is otherwise resistant to timing attacks."
androiddev,3dedaj,Pzychotix,1 point,Thu Jul 16 22:49:55 2015 UTC,"User-> I am 'XYZ', here is my token/hashed password   Never do this over an unencrypted connection."
androiddev,3dedaj,bart007345,1 point,Thu Jul 16 09:03:19 2015 UTC,Any request that requires your app-only keys should be stored and handled only by a system you trust (i.e. your backend server).   The question then becomes how to get this key in such a way that:   Only your trusted app gets the key. No one can grab the key from memory.   How would you handle this?
androiddev,3dedaj,bart007345,1 point,Thu Jul 16 19:35:51 2015 UTC,"You never send your application keys to the client/mobile app. Instead, you broker client requests through your servers (I gave a simple example earlier)."
androiddev,3dedaj,AtherisElectro,1 point,Fri Jul 17 17:51:12 2015 UTC,What about hmac keys?
androiddev,3dedaj,eythian,1 point,Fri Jul 17 06:40:19 2015 UTC,"What about them specifically? If you're embedding a password or key in your app in order to generate or verify HMACs, then you should assume that anyone can get to it."
androiddev,3dedaj,SuperRandomExplosion,1 point,Fri Jul 17 17:54:51 2015 UTC,So what to do? They can get the keys and see the algorithm. What are my options?
androiddev,3dedaj,port53,1 point,Fri Jul 17 20:29:43 2015 UTC,PM'ed you.
androiddev,3dedaj,eythian,4,Fri Jul 17 20:47:42 2015 UTC,"Agreed, this is a great ""warning,"" but to those of us who are unfamiliar, a nice ELI5 tutorial on setting up an AWS instance and doing things like verifying payments, oauth, etc, would be much much much more helpful."
androiddev,3dedaj,xenonx,2,Wed Jul 15 17:53:25 2015 UTC,"You need to know they ""why"" before you start looking into the ""how."""
androiddev,3dedaj,SuperRandomExplosion,-1,Thu Jul 16 00:59:46 2015 UTC,I was thinking about storing in native with a custom encoding algorithm. That way you'll need to reverse engineer the algorithm from assembly.
androiddev,3dedaj,xenonx,3,Wed Jul 15 21:20:07 2015 UTC,"Remember not every ""device"" your app will ever run on is even an actual android device.  It's dead simple to run it in an emulated environment, pause the emulation at the right point and dump the device's memory.  If your secret is worth keeping then it's worth the effort to re-discover it."
androiddev,3dedaj,SuperRandomExplosion,6,Thu Jul 16 02:41:41 2015 UTC,"Back in the day of copy protection on games (like, C64 games I'm thinking here), this was done by people all the time. It's not a particularly special skill.  I would just assume that my software is open source (also, it is in my case) and design accordingly."
androiddev,3dedaj,pwastage,1 point,Wed Jul 15 23:40:39 2015 UTC,Obfuscated assembly is the most time consuming way to reverse engineer something. Unsure what you mean by custom encoding - you talking about custom-obfuscation or custom-encryption?
androiddev,3dedaj,SuperRandomExplosion,1 point,Thu Jul 16 14:56:28 2015 UTC,Custom encryption.
androiddev,3dedaj,xenonx,1 point,Thu Jul 16 15:18:05 2015 UTC,"I would avoid - custom encryption is never going to be strong unless your a super-genius - better to reply of peer-reviewed crypto instead. See http://security.stackexchange.com/a/18198/77065. Where will you store the decryption key also? Also, where would you store the decrypt code? Why would you want to roll your own in the first place?"
androiddev,3dedaj,epicstar,0,Thu Jul 16 15:29:09 2015 UTC,"Sorry, I meant custom encoding without a key, something like base64. The attacker has to RE the algorithm and that might convince them. I'd use this just to hide my api keys and whatnot, data I have to keep in the apk."
androiddev,3dedaj,TheRealKidkudi,2,Thu Jul 16 16:00:02 2015 UTC,"You're talking about security through obscurity  https://en.m.wikipedia.org/wiki/Security_through_obscurity  It'll only slow down the attacker... A determined attack will spend the time to figure stuff out, and java doesn't really offer the best protection against reverse engineering  Also, Xposed allows a lot of help for reverse engineer... Look at the example below; if you don't inline your custom algorithm, I can basically use xposed to overwrite/listen to the results of your decryption methods   http://blog.attify.com/2015/01/04/xposed-framework-android-hooking/"
androiddev,3dedaj,TheRealKidkudi,0,Thu Jul 16 18:11:00 2015 UTC,"I am aware of this, but I don't know other ways to hide information inside the apk."
androiddev,3dedaj,pandanomic,1 point,Thu Jul 16 18:29:01 2015 UTC,You could use something like dexguard and save yourself some time and have stronger protection!
androiddev,3dedaj,pakoito,-5,Thu Jul 16 16:29:25 2015 UTC,"I dunno if there's a fail-safe mechanism, but the gradle.properties method is the best from what I've seen. Specific information is here:  http://www.rainbowbreeze.it/environmental-variables-api-key-and-secret-buildconfig-and-android-studio/  How I do it in my app (bus tracking... sorry for the http guys there's no https...):   Make a variable in your gradle.properties Define your variable in your app's build.gradle (see lines 12-16) then use BuildConfig.<name_of_variable_from_gradle_build> to get the value.   EDIT: K I'm wrong... this is the best way to keep your keys away from git but not from the eyes of reverse engineers. You need a backend solution to do requests"
androiddev,3dedaj,trandav,10,Wed Jul 15 18:13:11 2015 UTC,"You'd still not want to do this with any keys that you'd consider sensitive/secret. All this does is add some indirection to setting the key at build time, potentially beneficial if you're worried about accidentally including the key in your Git/source repository. Once the apk is built, however, it'd still be very easy to extract it."
androiddev,3dedaj,Cg2XHPxz,1 point,Wed Jul 15 18:36:03 2015 UTC,So what's the best way to do it? Have your app request the key from your server? That could easily be intercepted.
androiddev,3dedaj,koujm,5,Thu Jul 16 03:31:55 2015 UTC,"You don't let the app have the key. Instead, keep the key on your server and broker requests for your app as needed.   An example- While our app (PillFill) allows users to authenticate into their accounts using 3rd party logins from Google, Facebook, or Twitter, none of our OAuth credentials for those services are embedded in the APK. Instead, the app hands off the user to a web login page managed by our servers (where our OAuth credentials are held). Our backend ensures that the user gets routed to the right 3rd party service, OAuth code/token exchanges complete, and that his/her account is updated with the latest information if necessary.  Only once the backend login process completes is a user routed back to our app. That's done via a custom URI scheme with a session token that's then used by our app to access their account data. It greatly simplifies things overall because our android app is intentionally ignorant to nuances of the login process. We even are able to reuse the same backend-driven login process for our iOS app."
androiddev,3dedaj,medakk,2,Thu Jul 16 04:22:07 2015 UTC,"Ah, got it. In retrospect, that seems obvious. Thanks!"
androiddev,3dedaj,SquattingWalrus,3,Thu Jul 16 12:02:02 2015 UTC,This doesn't provide any security beyond keeping those values out of source control. It's still in your app.
androiddev,3dedaj,Ooodin,2,Wed Jul 15 19:02:41 2015 UTC,"Even hardcoded, plainly legible after APKtool."
androiddev,3dedaj,kaylebot_br,1 point,Wed Jul 15 20:48:57 2015 UTC,"I'm a little confused... wouldn't the decompiled class files still have the actual value in them because it's replaced with the literal string?  Or would it still show up as BuildConfig.<name_of_variable>.  And if so, how does it actually determine the key?"
androiddev,3dedaj,can_i_have,19,Wed Jul 15 18:37:27 2015 UTC,only quibble is this:   A skilled RE (Reverse Engineering) hacker will quickly convince your app to give up all of its closely guarded secrets   it's doesn't really take a skilled hacker. unless you've gone to extreme lengths it only takes someone who is determined and has a little technical knowledge and google
androiddev,3dedaj,SquattingWalrus,5,Wed Jul 15 17:42:16 2015 UTC,You can even pull apk without rooting your device. Simply list installed packages and adb pull the exact path.
androiddev,3dedaj,Youre_Cool,2,Thu Jul 16 03:50:11 2015 UTC,"Hell, you don't even need adb. ES File Explorer can pull the apk of any installed (free) application."
androiddev,3dedaj,NS_nidhishah,3,Thu Jul 16 16:01:34 2015 UTC,"This one thing that's bugged me and I've been looking for an answer. Say I have an API which requires an access token to retrieve data. However, my app does not require user sign up or sign in. I don't want to store the access token in the source code as you said, should the server send out the token when the app starts up and then store it locally, then include it in subsequent calls?"
androiddev,3dedaj,pandanomic,1 point,Thu Jul 16 05:46:03 2015 UTC,I have the same question.  If we should do an initial request to obtain a token. How do we authorize that?
androiddev,3dedaj,emuneee,1 point,Thu Jul 16 13:30:05 2015 UTC,"I have an app that needs that too. We use two tokens, one is the app token that is a String in the source code, nothing fancy. And after the user login the API sends me an user token, so I use both to do my requests. Still this is far from safe, anyone could register on my service. Anyhow, with this system, we could simple track whoever is doing any request on our API. With the app token alone the only thing one can do is login/register.  I think my main concern would be if someone could access another user info without knowing its tokens. Not possible when you only have access to our app. Also, the database in the phone is encrypted using the user token the API sent to the app, so the only way of one to open the database would be if they knew the user password, if we reached that point is kind hard to prevent anything. But I would like to know if someone has more options to me.   Also I'm almost dropping proguard, my proguard-rules file is so huge these days, it's PITA to maintain it and I have that felling that it doesn't achieve anything that would justify its usage."
androiddev,3dedaj,emuneee,1 point,Thu Jul 16 14:16:33 2015 UTC,"I'd do it in this way:  Use the signing certificate's SHA to authenticate with the API. Since it is easy to get out this information too, obscure the SHA while sending and use the same method to match on the server too. Do this over SSL.   If the app has to use some other tokens that need to be kept secret, let the server issue those tokens after authenticating by the method I mentioned above"
androiddev,3dedaj,wysiwyg23,1 point,Thu Jul 16 16:07:13 2015 UTC,"All good information to keep in mind, thanks everyone."
androiddev,3dedaj,emuneee,10,Thu Jul 16 17:33:16 2015 UTC,Can we sticky this?
androiddev,3dedaj,mars3142,2,Wed Jul 15 22:26:34 2015 UTC,Great info! The sad bit is market for cloned apps is huge. We can only follow some precautions and steps to safeguard our app from getting cloned. Here's a good read about this topic: http://arkenea.com/blog/app-cloning/
androiddev,3dedaj,emuneee,4,Thu Jul 16 13:52:26 2015 UTC,Does anyone know of a good example project for a server-side verification of play store purchases? Curious to see what that implementation would look like
androiddev,3dedaj,mars3142,6,Wed Jul 15 19:09:11 2015 UTC,"I recently did this in Node.js, it took me a while, but I essentially ported the example, in app verification, in the example IABv3 sample in Node.js and it works perfectly. I'll throw a post up tonight."
androiddev,3dedaj,pandanomic,2,Wed Jul 15 19:36:25 2015 UTC,Posted - http://emuneee.com/blog/2015/07/15/google-play-in-app-billing-server-purchase-verification/
androiddev,3dedaj,pandanomic,1 point,Thu Jul 16 04:39:20 2015 UTC,How about the Android code?  Are there any methods in java that return true or false?  Cause its pretty easy to modify that and it nullifies your node.js code.
androiddev,3dedaj,JTronLabs,2,Thu Jul 16 05:05:59 2015 UTC,I don't return true or false. The server returns data unique to the purchase being made. I track all of my user purchases server side once it's a verified Google Play purchase.
androiddev,3dedaj,zmarkan,1 point,Thu Jul 16 11:55:44 2015 UTC,"You didn't check the purchase against the Google servers or miss I something. I only see a signature check, but this is only half the trues. Right?"
androiddev,3dedaj,trtryt,1 point,Thu Jul 16 06:26:13 2015 UTC,"The sample I posted (and implemented in the sample app posted by Google) verifies that the purchase data / signature was signed with your private key, which Google presumably has and stores on their servers. The public key is available for in the Google Play developer console. As far as I know, that's all you need to verify."
androiddev,3dedaj,vladlichonos,1 point,Thu Jul 16 11:51:18 2015 UTC,"We go an other way and checks the data on the Google servers, because how do you reverify an IAP on a second device or after uninstall/install? Because you only get this message once as far as I know."
androiddev,3dedaj,defconoi,1 point,Thu Jul 16 12:13:27 2015 UTC,Care to share an example of your way?
androiddev,3dedaj,emuneee,1 point,Fri Jul 17 02:52:31 2015 UTC,"Awesome, thanks! PM me a link to the post when you do if you don't mind :)"
androiddev,3dedaj,iNoles,0,Wed Jul 15 19:45:08 2015 UTC,"I'd appreciate a PM as well, thanks!"
androiddev,3dedaj,eythian,3,Wed Jul 15 23:54:18 2015 UTC,Great summary!
androiddev,3dedaj,iNoles,2,Wed Jul 15 17:24:31 2015 UTC,"Long ago Google use to provide talks and information on how to better secure your app, but now they just ignore it."
androiddev,3dedaj,CodingGorp,1 point,Wed Jul 15 23:33:38 2015 UTC,"They still do though, may be not as much as before."
androiddev,3dedaj,iNoles,1 point,Thu Jul 16 17:06:08 2015 UTC,Is there a list of insecure across  to avoid that leak data?
androiddev,3dedaj,bubbleguuum,1 point,Thu Jul 16 02:12:30 2015 UTC,You can use the API to query for purchases the user has already made.   http://developer.android.com/google/play/billing/billing_integrate.html#billing-requests
androiddev,3dedaj,bakageta,1 point,Thu Jul 16 12:17:54 2015 UTC,Good old java bytecode.
androiddev,3dedaj,bubbleguuum,6,Wed Jul 15 19:57:15 2015 UTC,"What does that have to do with anything?  (Also, it's not java bytecode on Android.)"
androiddev,3dedaj,bakageta,0,Wed Jul 15 23:44:03 2015 UTC,"The Android DEX Tools convert java bytecode into dex bytecode. This is why, dex bytecode made easier to look into it from any text editors."
androiddev,3dedaj,pjmlp,2,Thu Jul 16 03:15:47 2015 UTC,"Look on the bright side. If you are looking for how to implement a specific feature and really can't dig it out online, you could decompile an app and see how someone else did it, right?"
androiddev,3dedaj,Izacus,1 point,Thu Jul 16 03:59:04 2015 UTC,Yeah
androiddev,3dedaj,FrezoreR,0,Thu Jul 16 16:42:53 2015 UTC,"There are several cool ways to verify at runtime that the code has not been tampered with. Sure, a determined hacker that has unlimited time can defeat any protection. The idea is to make this task so annoying and time consuming that he gives up.  Assume that your license verification scheme will be easily cracked and instead put all your resource on evil runtime tamper checks."
androiddev,3dedaj,eythian,1 point,Wed Jul 15 21:49:55 2015 UTC,"Yep, a common play store mod will pass verification with little effort, often defeating most paid apps with no modification. Runtime checks can be bypassed, but will delay piracy as someone has to crack them. It could buy you hours, or it could buy you weeks, but it helps with initial sales to not have a pirated copy out quickly."
androiddev,3dedaj,kireol,0,Wed Jul 15 23:28:31 2015 UTC,"In my experience, it can buy months or can prevent an app to be fully cracked at all (because crackers which are not an illimited resource, gave up). And if it is finally cracked you can change the protection slightly in an update, playing with the cracker's patience. Also, a cracker may think to have cracked the app while it did it partially and there are some runtime bombs still left. One could think that pirate users of an app will never buy it anyway, so why protect it ? Adding anti-tamper measures is useful beyond this an  However, adding all these checks is initially time consuming and really unfun to do (and test), and may be not worth it depending on the app."
androiddev,3dedaj,APimpNamedAPimpNamed,1 point,Thu Jul 16 08:07:18 2015 UTC,"The type of checks that buy months or bore crackers into giving up are going to be pretty extreme, props if one of your apps made it that long. I haven't dabbled in android cracking, but did some psx, dc, and xbox work back in the day, and the harder stuff just got most others more interested. The longer a crack takes, the better it is for your app - some portion of pirates will buy the app rather than wait, assuming your app is up to par and reasonably priced. I'd suggest single devs and indie groups still invest some time into runtimes, but no need to get crazy.  Spectral Scrolls is a good example of a game that took months to crack, and offhand I haven't seen South Park Pinball out. I bought the first near launch and crackers have it down now, maybe I shojld pick up South Park and see if there's a reason it's not around."
androiddev,3dedaj,Pythe,1 point,Thu Jul 16 11:19:29 2015 UTC,"But I only use C++ with as little Java as I can.  It is not part of your FAQ.  Yes, it is still possible to reverse engineer, but way lot harder than DEX. And it is portable to iOS, Windows Phone as well."
androiddev,3dedaj,APimpNamedAPimpNamed,0,Thu Jul 16 06:33:53 2015 UTC,So if I troll a little: It's impossible to ensure sensitive data security on Android and we should just focus on iOS for all our usability apps that requre dealing with sensitive data and sensitive service access locally? :)    (This post is rather light on actual advice.)
androiddev,3dedaj,FrezoreR,1 point,Thu Jul 16 08:20:42 2015 UTC,"Not at all. Objective-c makes some RE techniques harder, but iOS is not at all immune. You can just as easily grab interesting strings like API keys, URLs, etc) from the iOS binary or packaged resources. Similarly, you can still debug app execution and patch apps  thanks to Objective-c's method swizzling.   Fair point about lack of advice though. In true intervention style, my intention was first to get developers to accept that we have a problem. :)"
androiddev,3dedaj,eythian,-2,Thu Jul 16 11:58:20 2015 UTC,One is never safe! If something is really scared one could always utilizes the NDK and hide information in there. A lot harder to reverse engineer that.
androiddev,3dedaj,FrezoreR,9,Wed Jul 15 23:28:30 2015 UTC,"Don't think like that. Thinking like that is the problem. Instead, make it so that reverse engineering won't achieve anything because there are no secrets in your app.  Everything in your app is something that you're giving to the end user. They can do whatever they like with it."
androiddev,3dedaj,eythian,6,Wed Jul 15 23:43:32 2015 UTC,This is definitely the approach I recommend. Don't put anything in your app that you wouldn't want someone to see and you'll avoid the arms race altogether.
androiddev,3dedaj,FrezoreR,-19,Thu Jul 16 00:02:55 2015 UTC,I appreciate the awareness.  But most of us that do this for a living know this already.  And more.  It's not really any more secure than the client part of a web site.
androiddev,3dedaj,bakageta,2,Wed Jul 15 19:43:41 2015 UTC,"What do you mean by,    It's not really any more secure than the client part of a web site   ?"
androiddev,3dedaj,eythian,2,Thu Jul 16 00:03:29 2015 UTC,"Have you ever played around in the developer console on your browser? You can read every scrap of javascript running on a page. You can even interact with it on the command line in there. If someone dumped, say, an S3 access key in there so the app could pull assets on demand, you'd have direct access to it.   Minification is popular nowadays, making the code difficult to read, but it doesn't actually obfuscate beyond chewing on symbol names  and removing whitespace. It's all there, and some sites even put job advertisements in their source. They know what's up."
androiddev,3dedaj,FrezoreR,0,Thu Jul 16 05:50:46 2015 UTC,That is client side code. I was wondering if the commentor above was implying that server side code was just as exposed/vulnerable.
androiddev,3dedaj,eythian,-9,Thu Jul 16 06:06:39 2015 UTC,That's not true though. In a browser you have full control of all code running that is not true with a release signed apk.
androiddev,3dedaj,FrezoreR,3,Wed Jul 15 23:30:54 2015 UTC,"Eh? I could easily patch running code in a browser, or fake requests. Hell, I do this regularly for testing purposes."
androiddev,3de30f,rainsstudios,3,Wed Jul 15 15:31:40 2015 UTC,"Bom the Ninja! Just release today, sitting at a 4.9 rating (18 reviews) https://play.google.com/store/apps/details?id=com.BomTheNinja.DustinHyden  I made the game to test the waters of android development. I was working full-time but I quit to make games instead. Not sure if android is the way to go, but I figure I'll try with something super simple to learn the ropes.  Cheers,"
androiddev,3de30f,dhyd,2,Thu Jul 16 04:21:37 2015 UTC,"Very cool, excited to try it out!"
androiddev,3de30f,dhyd,1 point,Thu Jul 16 14:18:21 2015 UTC,Woo thanks :D xD
androiddev,3de30f,ehaykal,2,Thu Jul 16 23:54:40 2015 UTC,That is quite an awesome idea and I just subbed to your channel  I'll be sending you my soon to be released app.
androiddev,3de30f,DrPhilJr,1 point,Wed Jul 15 18:03:55 2015 UTC,Thanks for the sub! Can't wait to try your app :)
androiddev,3de30f,bakutogames,2,Thu Jul 16 00:08:19 2015 UTC,I'll submit an app and a game Solar Danmaku sits at 600 downloads https://play.google.com/store/apps/details?id=com.deepspaceexile.solar_danmaku  And pocket pool boy. A pool maintance app that is kinda a niche market  https://play.google.com/store/apps/details?id=com.deepspaceexile.Pocketpoolboy
androiddev,3de30f,cr5315,2,Wed Jul 15 21:44:52 2015 UTC,"I'm getting a new app ready for release (hoping before the weekend), and I love this idea. I'll be sure to submit it once it's out!"
androiddev,3de30f,cr5315,1 point,Wed Jul 15 23:43:50 2015 UTC,It's out!
androiddev,3de30f,ASIC_SP,2,Sat Jul 18 06:16:56 2015 UTC,"thanks! I just released my first game few days back.. It has three variations of Tic Tac Toe, board size ranging from 3x3 to 12x12 and a powerful AI  I have filled the docs, hope you'll have a nice time reviewing it :)"
androiddev,3de30f,lordoftherings911,2,Thu Jul 16 02:22:24 2015 UTC,"Excellent! I hope this takes off.   where we'll take an app with less than 1000 downloads   That seems awfully restrictive, but you're giving exposure to those who need it.  I guess you've left android development behind right? I couldn't help but notice every single one of your app was .. weak.   Honestly, the apps I make, I put in 2 weeks setting up a working minimum viable product. I can just dump that on the play store since it already has the core functionality I want to deliver. But I don't. I put in another few months, researching competition, asking my target audience questions, making my app different. This is the second 90%. And then comes the hard part. That for me is UX, the third 90%. This is what makes an app sell.   My point is, your apps seem like something I could pretty much put together in a day or less (with my two years of experience). With the amount of competition in the play store, you simply cannot expect that to work. There's 1.5 million apps on the play store. There was ONE flappy bird.  Before I stop writing..   1) Has to have less than 1000 downloads   I just can't get over this. Okay, yes, like I said, you are giving traffic to those who deserve it. That's very good. But, you need to consider that the apps that you're promoting are inherently unpopular. There's a reason they haven't taken off yet. Perhaps if the apps are very new, then it's fine I guess.   The reason most of the apps never get any attention is because they are crap. And what you're targeting is, what's essentially the least popular apps. (Again, yes, some might deserve the recognition you're giving them). I don't want to discourage you, but realistically, you will  simply not be getting a whole lot of views. I'm sorry for being blunt and rude, but given how quickly you abandoned android development, Youtube is going to be ten times harder to take on. I just don't see a whole lot of effort here.   I hope I'm wrong, because I too am one of the little guys you're making videos for. If you're going to do it, do it right. But it's going to be very hard."
androiddev,3de30f,dreamroadproductions,1 point,Thu Jul 16 16:58:41 2015 UTC,"I 100% agree with everything you said. Giving up on game and app making was partially because I just lost interest. I still sort of enjoyed it, but I never felt like putting that extra 100% into cleaning and polishing. I do know that this channel and my website will be hard, but already I'm enjoying it more. I also have a partner this time around in Phil, and I think that will also push me to work hard. I realize that I don't get many views or really much out of this series, but since it's only weekly its really only one videos worth of work every two weeks because Phil and I will be trading off.   Thank for your honest opinions, I do agree completely. We will continue to do regular app reviews and other content as well to build our audience up. We also will try to sort of avoid apps that obviously look really unfinished or very low quality.   Thanks, and hope to see your app soon :)"
androiddev,3de30f,eneve,2,Thu Jul 16 22:34:35 2015 UTC,Thank you for this opportunity. I really appreciate what your are doing.
androiddev,3de30f,eneve,1 point,Thu Jul 16 05:16:56 2015 UTC,"No problem man, Its something I wished existed back when I developed. Happy to help :)"
androiddev,3de30f,old_kestral,1 point,Thu Jul 16 14:17:18 2015 UTC,nice!  submitted one of my apps.  the other has too many d/ls :)
androiddev,3de30f,BikerMouseFromMars,0,Wed Jul 15 16:38:48 2015 UTC,Awesome! Hope to review it soon :)
androiddev,3de30f,old_kestral,0,Wed Jul 15 16:40:43 2015 UTC,"I lied I actually just submitted the other too b/c it might make for a more interesting review.  It's got around 30k downloads but has ~1,700 reviews with 4.6/5 rating :)"
androiddev,3de30f,BikerMouseFromMars,1 point,Wed Jul 15 16:46:02 2015 UTC,https://play.google.com/store/apps/details?id=com.unfairtools.craigsmaster  I submitted this app of mine. cool idea! let me know if you select my app :)
androiddev,3de30f,old_kestral,2,Wed Jul 15 18:52:45 2015 UTC,This app is incompatible with all of your devices.   Guess there is a first time for everything (Nexus 5) :D
androiddev,3de30f,BikerMouseFromMars,1 point,Wed Jul 15 19:45:13 2015 UTC,"weird, it runs fine on the nexus 5 emulator... what version of android is on your nexus?  edit: what country are you in?"
androiddev,3de30f,DrPhilJr,1 point,Wed Jul 15 21:45:01 2015 UTC,"the message is from google play, i can't even install it. germany and 5.1.1"
androiddev,3de30f,old_kestral,1 point,Thu Jul 16 04:26:43 2015 UTC,"app isnt available in germany. only uk, aus, can, us"
androiddev,3de30f,DHOWELLPRODUCTIONS,2,Thu Jul 16 06:24:10 2015 UTC,Funny that the store doesnt say that :/
androiddev,3de30f,DHOWELLPRODUCTIONS,2,Thu Jul 16 07:17:56 2015 UTC,"Sorry, it seems like it's unavailable in my country (Mexico). Probably Sahen can review it"
androiddev,3de30f,iFoM,2,Thu Jul 16 00:09:12 2015 UTC,Works on my phone! I can check it out/review it
androiddev,3de30f,iFoM,2,Thu Jul 16 14:17:41 2015 UTC,I would be thrilled!
androiddev,3ddya6,bmwracer0,4,Wed Jul 15 14:56:43 2015 UTC,"Very handy, specially the @keep one. Thanks for sharing!"
androiddev,3ddya6,walmyrcarvalho,1 point,Wed Jul 15 17:54:31 2015 UTC,"Yeah, @Keep is nice. I hadn't seen that before."
androiddev,3ddya6,Nemisis82,1 point,Thu Jul 16 12:25:38 2015 UTC,@Nullable and @NotNull are 2 of my favorites and most frequently used.
androiddev,3dgjeb,onlyunless,6,Thu Jul 16 02:27:45 2015 UTC,"ViewPager, simple as that.  http://developer.android.com/training/animation/screen-slide.html"
androiddev,3dgjeb,fodawim,1 point,Thu Jul 16 05:05:06 2015 UTC,"Great! Thank you for this, I appreciate it a lot."
androiddev,3dgjeb,jimeux,3,Thu Jul 16 11:54:27 2015 UTC,It's called onboarding. Try searching for that and you should find some good ideas. There was a good post recently about sleek onboarding animations.
androiddev,3dgjeb,jedirock,2,Thu Jul 16 05:38:39 2015 UTC,"I don't know how long it would have taken me to consider that as a search term. I really appreciate that, thank you!"
androiddev,3dgjeb,Lordblaze,1 point,Thu Jul 16 11:55:09 2015 UTC,"I understand you actually have some experience with On-Boarding, so you should be able to hit the ground running with this."
androiddev,3dgjeb,apkqueen,2,Fri Jul 17 17:42:22 2015 UTC,"You can also try to use this library, https://github.com/PaoloRotolo/AppIntro. Try the sample app to see if it fits your needs."
androiddev,3ddnle,hitherejoebirch,6,Wed Jul 15 13:26:45 2015 UTC,"I wish there was a better way of explaining WHY my app needs certain permission. Like, passing a custom message to the permissions request so when they get prompted for permission, the dialog would also show my custom message. So on the top it would say ""Allow app to access your location?"" and on the bottom my message would be displayed, e.g., ""We need your location to provide you with the list of gas stations nearby""."
androiddev,3ddnle,tyros,3,Wed Jul 15 16:31:53 2015 UTC,"Yeah, some apps do this, and from now on, all of the apps must do this. Imaging Astro File Manager, and not giving it the Storage permission.   Congratulations user, now you have a useless app, please proceed to complain how this app is garbage."
androiddev,3ddnle,ryuzaki49,1 point,Wed Jul 15 16:55:06 2015 UTC,Yea this is going to be a really big problem for pre-M applications unfortunately...
androiddev,3ddnle,tacomonstrous,3,Thu Jul 16 08:46:55 2015 UTC,I think the explanation was that they don't want to have the user think that this custom message is system generated. It is up to you as the developer to make the case for why you need the permission before you ask for it.
androiddev,3ddnle,ddennis5,1 point,Wed Jul 15 18:51:55 2015 UTC,"Yea I see your point, I think I read that there are plans to look at this in the future. However for now, I believe that if it is made clear before hand (presenting the user with a warm welcome, explaining what it is your app does) then it should be clear as to why you need those permissions.   Also, you can check if they have previously been asked the permission using shouldShowRequestPermissionRationale(), so maybe this is a chance to show a more detailed explanation in your UI as to why you require that permission before asking for it again :)"
androiddev,3ddnle,ryuzaki49,1 point,Thu Jul 16 08:46:17 2015 UTC,"There is the ability to do this (if you're asking the user a second time). Check out https://developer.android.com/preview/features/runtime-permissions.html on the section, ""Explain why the app needs permissions"". As hitherejoebirch mentioned, you can use Activity.shouldShowRequestPermissionRationale(String) and pass in your reason for requesting the permission."
androiddev,3ddnle,ryuzaki49,1 point,Fri Jul 17 13:25:48 2015 UTC,"The install flow of apps on the play store has always felt a little broken. Clicking Install would never actually install the app, you first have to accept a number of permissions before the actual install can take plac   Uh? Was there something wrong with this? It's like clicking Install on a .exe, and first having to read the TOS."
androiddev,3ddnle,ThinkBritish,2,Wed Jul 15 15:56:35 2015 UTC,"I see what you mean! To me it's always felt a little odd / overwhelming, I feel granular permissions will help to provide a much better experience than that."
androiddev,3ddnle,pakoito,1 point,Wed Jul 15 16:19:54 2015 UTC,"Yes, as a user I agree. As a dev, not so much.  But my point was: What is wrong with Clicking install showing the permissions?"
androiddev,3ddnle,PT2JSQGHVaHWd24aCdCF,1 point,Wed Jul 15 16:53:18 2015 UTC,A nice write up.  I imagined it was going to be a lot easier for the developer that having to write all that code to check & request.
androiddev,3dg3f3,JohnJohnster,2,Thu Jul 16 00:15:20 2015 UTC,"I'm not sure how paid apps work, but there isn't a way to give them a promo code to download your game adFree for free?  I also strongly recomend you watch this video before sending the email. It's a lecture by IndieGameGirl about marketing your indie game: http://www.indiegamegirl.com/no-budget-marketing/"
androiddev,3dg3f3,dreamroadproductions,2,Thu Jul 16 01:55:01 2015 UTC,"Since there is no promo code available, you can them to join the Alpha channel and receive the unlocked app there."
androiddev,3dg3f3,gfp7,1 point,Thu Jul 16 18:46:39 2015 UTC,"That might work, but joining alpha or bets tests is a somewhat painful process. But maybe reviewers are used to it."
androiddev,3dg3f3,efalk,1 point,Mon Jul 20 23:47:32 2015 UTC,"At least I haven't seen an option for generating a promo code in the google play store yet.  And thanks for the link, I will check it out."
androiddev,3dg3f3,ciny,1 point,Thu Jul 16 02:09:42 2015 UTC,I think there is no way to give out promo codes. But you could create a beta channel and invite interested reviewers as beta testers
androiddev,3ddkcc,philosophicalhacker,3,Wed Jul 15 12:55:54 2015 UTC,"Not a bad start (assuming this is new-ish?), but I think they'd do better to make this a podcast and buy a couple decent mics. Two people talking in an overlit room with white walls isn't really a nice video."
androiddev,3ddkcc,pandanomic,1 point,Wed Jul 15 17:33:19 2015 UTC,the Coursera demo app she wrote has one unit test! And its not great.  Interesting architecture though.
androiddev,3ddkcc,bart007345,1 point,Wed Jul 15 20:28:36 2015 UTC,Here I was thinking it was about UI dialogs. Interesting nonetherless.
androiddev,3dey6d,zeeshanak,3,Wed Jul 15 19:11:55 2015 UTC,"I refer to this every now and then, I think it's useful. :)  Good tools to build your own.  https://github.com/wasabeef/awesome-android-ui"
androiddev,3dey6d,KillTheIdols,1 point,Wed Jul 15 20:51:00 2015 UTC,"That's a wonderful list and I may use some later, for fun when I am done with the project. Currently I just wanted something related to buttons and text fields. Thanks!"
androiddev,3dey6d,Glurt,3,Thu Jul 16 18:52:02 2015 UTC,For design inspiration I use https://www.materialup.com/.  It doesn't give you tutorials on how to create the designs but the most difficult thing for me is coming up with the designs in the first place.
androiddev,3dey6d,filecabinet,2,Thu Jul 16 08:02:48 2015 UTC,has some UI related stuff - https://android-arsenal.com/
androiddev,3df7no,jason_rootid,2,Wed Jul 15 20:16:01 2015 UTC,"On my last project (25 screens with presenters) the maximum amount of memory my app was using was 10Mb. You're not showing all of your screens at the same time, right? When the user leaves a view, the presenter normally should be removed."
androiddev,3df7no,jackhexen,2,Wed Jul 15 21:56:47 2015 UTC,How were you managing your presenters?
androiddev,3df7no,jackhexen,1 point,Thu Jul 16 00:00:17 2015 UTC,nucleus
androiddev,3df7no,vladlichonos,1 point,Thu Jul 16 06:19:23 2015 UTC,That's static solution  UPD: it was.
androiddev,3df7no,jackhexen,1 point,Thu Jul 16 16:11:50 2015 UTC,"You're right. It is perfect. Much better than injected with dagger or tied with views.  It also uses reflection to make all the boilerplate job. Empowered with RxJava and recovers even after process restarts. All the ""android black magic"" tricks, (except of code generation) to provide the best."
androiddev,3df7no,vladlichonos,1 point,Thu Jul 16 17:31:00 2015 UTC,"Lol, I guess it is just got updated. It is not static anymore. But as far as I see presenters still do not survive config changes. Below I've tried to explain approach, it is same but presenters survive config changes."
androiddev,3df7no,jackhexen,1 point,Thu Jul 16 18:04:53 2015 UTC,"Nucleus presenters DO survive config changes and they always survived. The entire purpose of nucleus is to provide all means to survive config changes and process restarts absolutely seamlessly for user and easy for programmer.  If you wonder where they are stored now:   https://github.com/konmik/nucleus/blob/master/nucleus/src/main/java/nucleus/factory/PresenterStorage.java  They are still in the static context, just packed into a singleton. Static context is the right place for presenters that survive config changes because they die at the same time with background tasks, so when they recover you're absolutely sure that you need to restart that tasks."
androiddev,3df7no,vladlichonos,1 point,Thu Jul 16 18:15:33 2015 UTC,"I see. That's correct. Only one thing I am really afraid of. In this file there is line  presenterDelegate.onPause(getActivity().isFinishing());   Well, if I remove fragment, presenter will not be destroyed. In order to destroy presenter I need to finish the activity. I think instead of checking getActivity().isFinishing() it should check Fragment.isRemoving() or I am missing something?  UPD: Do not get me wrong, this library (framework?) seems nice. So far I am just wiring all by myself per project."
androiddev,3df7no,jackhexen,1 point,Thu Jul 16 18:25:57 2015 UTC,"You're right, this is the single point where we need to manage the stuff somehow. Here is an example of how: https://github.com/konmik/nucleus/blob/master/nucleus-example-with-fragments/src/main/java/nucleus/example/main/FragmentStack.java  The library has an introduction article where the data about such things is described."
androiddev,3df7no,vladlichonos,1 point,Thu Jul 16 18:29:01 2015 UTC,"One of the approaches, I personally like, is to have presenters (and their states) in separate holder fragment. Holder fragment is regular fragment with setRetainState set true. Then wire it through interface to activity and by activity provide it as interface to all fragment who needs their presenters."
androiddev,3df7no,vladlichonos,1 point,Wed Jul 15 20:27:51 2015 UTC,"Right now I can use Dagger to attach my presenters to the application scope and inject them into my fragments, which accomplishes the same thing. I just don't know how this will run with a large number of presenters."
androiddev,3df7no,bart007345,1 point,Wed Jul 15 20:47:14 2015 UTC,"Where do you keep Dagger component with presenters? If it is longer living than the corresponding fragment, then it is not the same thing. By approach I described, presenters dies when fragment (View) dies (on config changes presenter survives)."
androiddev,3df7no,bart007345,1 point,Wed Jul 15 20:53:52 2015 UTC,"I would guess (please tell me i'm wrong) that typically, a running app has hundreds of classes in memory. Adding a few more won;t make much difference.  Whats wrong with new'ing them up each time and letting the garbage collector deal with the old ones?  Long running tasks should be decoupled anyway. A bus seems like a good approach - the presenter puts an event on the bus to start the task and also subscribes to the result."
androiddev,3df9j6,Nilzor,2,Wed Jul 15 20:29:05 2015 UTC,"Those are the three major libraries that I know of, personally.  Some insight on Mortar (based on my tinkering with it, Mortar does three things:    it creates a scope for a particular Context which is retained across configuration change (and you can tie the getSystemService(String) call to return stuff from the scope of the activity if you so desire) it provides the BundleServiceRunner which can be used to save and load data from custom views it provides the ViewPresenter<T> class which automatically is called by the BundleServiceRunner to load and save the data of the custom view that it is bound to, and also has access to onEnterScope(MortarScope) method which I think allows it to access services as well."
androiddev,3df9j6,Zhuinden,1 point,Wed Jul 15 20:57:22 2015 UTC,"Cool. I'm not sure I get why we'd need the scope thingy. Any fragment can call getActivity().getSystemServce(String). How does this differ?   The ViewPresenterand BundleServiceon the other hand, sounds like they do useful MVP-boilerplate-stuff which is also found in Ted Mosby and Nuclues"
androiddev,3df9j6,Zhuinden,1 point,Thu Jul 16 06:18:21 2015 UTC,"The purpose is to ""mock""  the scope and its services into the getSystemService call, but technically I think you can directly make the scope accessible if you make some kind of BaseActivity,the usage of getSystemService is just for convenience. In fact,  I am pretty sure a call akin to MortarScope.get(context).getService(string) would get you the same result. The purpose is to bind a scope to an activity that doesn't get destroyed on rotation.   This way,  you can retain the presenter on rotation. Although what they did is that the scope of the presenter is actually provided by Dagger, and the Dagger component is retained by the mortar scope."
androiddev,3df9j6,jackhexen,0,Thu Jul 16 06:28:47 2015 UTC,I find dagger-injected presenters to be not handy. How am I supposed to act when I have the same view twice? They will share a presenter. How I should act in case if my activity closes and opens fast? (in this case you get onAttachedToWindow before previous onDetachedFromWindow) Presenters that are bound to views by id are much better.
androiddev,3df9j6,Zhuinden,1 point,Thu Jul 16 06:46:28 2015 UTC,"The way the Mortar/Flow examples did it was that each view has its own subscoped component., and while each component has only one instance of a provided class per scope, each component has its own for its own subscope.   For example, it receives the SingletonComponent as a dependency which is shared across components, but it also has its own ViewScoped provided ViewPresenter that has only one instance in a given component, but each component has its own instance."
androiddev,3df9j6,jackhexen,1 point,Thu Jul 16 07:13:17 2015 UTC,"Hm, interesting. So they are using Path as an id? Looks valid."
androiddev,3df9j6,Zhuinden,1 point,Thu Jul 16 08:51:29 2015 UTC,"Technically, this is a Mortar/Flow example (that I put together as there were a bunch of oddities going on in the samples that just weren't clear to read, so I simplified it).   the Path identifies the ""screen"" within the Activity, and contains the following data:  which layout it needs to inflate when set for Flow   how to create its presenter-providing Dagger2 Component (this factory method could be an interface for custom views),    the scope name that identifies for Mortar whether there is a scope associated with this particular custom view that stores the component for orientation changes (this is the ID you are looking for!)    Of course, the scopes and dagger components can be used even without flow and flow-path. You just need to specify the string ID for the name of the mortar scope that is bound to the activity scope (which is also retained on orientation change in the root scope)."
androiddev,3df9j6,jackhexen,1 point,Thu Jul 16 12:07:02 2015 UTC,"OK, now it is a little bit clearer. Thanks."
androiddev,3df9j6,Zhuinden,1 point,Thu Jul 16 13:10:38 2015 UTC,"I'm mostly surprised that I'm the first to actually write this down. The people who've figured out Flow+Mortar+Dagger2 aren't too verbose about the ""how and why""."
androiddev,3df9j6,jackhexen,1 point,Thu Jul 16 14:23:16 2015 UTC,"It is too complex for everyday usage, from my viewpoint."
androiddev,3df9j6,daniel_sk,2,Thu Jul 16 14:39:55 2015 UTC,https://github.com/inloop/AndroidViewModel
androiddev,3df9j6,daniel_sk,1 point,Thu Jul 16 19:52:45 2015 UTC,This looks interesting (although it techincally isn't an MVP frameworks since it doesn't have the P). Sounds like it would fit like a glove with Data Binding though. Are you the guy behind this?
androiddev,3df9j6,daniel_sk,1 point,Fri Jul 17 07:26:51 2015 UTC,"Yes - we are behind it (inloop.eu). It's definitely not a strict MVP but we were focusing on real-world use cases (as we are doing a lot of apps for customers). This can be implemented even in existing apps and architectures, it doesn't have any impact on the existing screens and you don't need to migrate the whole architecture. And it's very easy to implement, there is almost no boilerplate code needed and it's quite straightforward."
androiddev,3ddicm,tunjos,8,Wed Jul 15 12:35:51 2015 UTC,Horrible formatting and color choices. My eyes hurt trying to read black and white code.
androiddev,3ddicm,aceofskies05,5,Wed Jul 15 13:44:09 2015 UTC,"Just to provide some contrast to your comment, I love dark themes which display a dark background with light coloured text and I think the site in general looks great! Having said that though, the code samples could do with some keyword highlighting and correct formatting."
androiddev,3ddicm,The_IT,7,Wed Jul 15 16:33:39 2015 UTC,I can't stand the scrolling and the code blocks are formatted terribly so I didn't bother reading the entire thing :(
androiddev,3ddicm,powerje,3,Wed Jul 15 15:13:51 2015 UTC,I actually came across this before and it's a decent (introductory) explanation of MVP. The scrolling made me want to hit the back button repeatedly though. It's just not something you mess with.
androiddev,3ddicm,jimeux,2,Thu Jul 16 02:36:13 2015 UTC,"Read the entire thing, there are typos everywhere in the code."
androiddev,3ddicm,awwwwwwsick,2,Wed Jul 15 15:53:29 2015 UTC,"Magenic! Nice. I used to work there. Say hi to Jason Bock, Rocky and Brent Edwards. Brent and I cut our teeth with Android back in 2008/2009 on a lot of fun little projects. Cool to see Magenic posting stuff.   I do agree with some of the other comments though - code blocks are hard to read. I'd use a gist and embed each snippet as its own file with the github embed code. That would make it much easier to read and grab the code at the end!   Thanks for contributing to the community!"
androiddev,3ddicm,donnfelker,2,Wed Jul 15 18:12:10 2015 UTC,Great tutorial. Thanks to the author for not making it a 5000 word wall of text.
androiddev,3ddicm,lordoftherings911,2,Wed Jul 15 13:31:14 2015 UTC,One of the most clear and concise explanations of MVP I've read so far.
androiddev,3df4j0,redthunda69,1 point,Wed Jul 15 19:54:30 2015 UTC,Libraries? Google Translate API.  Are you looking for a way to translate your string resources into something that doesn't sound like a robot? Google Play offers an App Translation service. You could also look into Fiverr
androiddev,3df4j0,hitler_kardashian,3,Wed Jul 15 20:10:05 2015 UTC,"Google translate API costs money, though. I can translate my string resources just fine, I want it to translate user input."
androiddev,3dg79b,berolak,4,Thu Jul 16 00:46:37 2015 UTC,"Just start coding and keep on reading your books, posts and any other Java/Android related stuff daily. Overtime you will get a lot better at it and it will make more sense to you. For me personally just reading a lot of new material without applying it doesn't stick beyond just the main concepts."
androiddev,3dg79b,Frz4,1 point,Thu Jul 16 03:52:09 2015 UTC,"I'm the same way, and I'm trying to force myself to read before 'jumping in'. I think I'll try more hands on stuff and playing around with code as I go. Cheers!"
androiddev,3dg79b,donnfelker,3,Thu Jul 16 04:15:29 2015 UTC,"Honestly, check out some video stuff through one of the many education sites like one of the following:     treehouse.com udemy.com pluralsight.com    That should help a ton."
androiddev,3dg79b,SSG47,1 point,Thu Jul 16 03:08:39 2015 UTC,"I haven't heard of any of these sites before. I'll check them all out, thanks!"
androiddev,3dg79b,SSG47,1 point,Thu Jul 16 04:14:19 2015 UTC,Loved the treehouse thingy! :)
androiddev,3dg79b,SSG47,2,Thu Jul 16 15:22:49 2015 UTC,"Same problem with me!  Though I do not think about it much; with about 2 minths of self teaching I have come to understand the project structure, views and viewgroups and more important activity lifecycle.   Have joined this Kickstarter course for a mere £15 to further strengthen my basics. https://www.kickstarter.com/projects/908213631/the-complete-android-m-developer-course-with-andro/description  I like to think about it that the more time I spend with the basics; the easy it is going to get in the future!  Hope this helps motivate you!"
androiddev,3dg79b,40ft,1 point,Thu Jul 16 14:57:34 2015 UTC,"Looks very interesting, I think I'll check it out. Thanks!"
androiddev,3dds4n,lordoftherings911,1 point,Wed Jul 15 14:07:39 2015 UTC,What I would suggest is go through the 1500 lint results and remove the inspections you don't consider worth fixing from your profile. It's going to be a PITA the first time but it's probably the best solution.  Edit: The reason being is that what I consider critical might not be critical for you.
androiddev,3ddsok,smalltortoise,1 point,Wed Jul 15 14:12:35 2015 UTC,"For displaying images,  picasso is pretty awesome and easy:  http://code.tutsplus.com/tutorials/android-sdk-working-with-picasso--cms-22149  As for the backend hosting,  Amazon S3 or something similar."
androiddev,3ddsok,unethicalposter,1 point,Wed Jul 15 19:55:22 2015 UTC,for the wallpaper app with changing background images you cannot use the standard wallpaper as you cannot change the background image once its set.  Instead you will use GLWallpaper instead and thus be able to change the 2d texture applied dynamically
androiddev,3dblmo,viperean,15,Wed Jul 15 00:27:22 2015 UTC,"Let's be clear about what Proguard does: Running Proguard on your code only makes it ""more difficult to reverse engineer"". It does not prevent someone from producing a nearly identical cloned app. It also will make creating any meaningful code modifications more difficult- but you can decompile a proguard-protected app, make changes to the layouts, resources, etc. and still have a perfectly functioning app when you repackage it.  Proguard is not a silver bullet against clones or any other client-side mischief. In fact, it often just provides a false sense of security for many developers.   So What now?  Risk to users? Should be minimal. The ""cloners"" had to sign the faked app with separate private key and Android's sandboxing between apps should prevent any cross-pollination. Unless you included some sensitive resources in the app (like unprotected server URLs to user information- see next risk), then they should be fine. Just provide a warning to let them know that there's an imposter out there that they should avoid.  Risk for you? Did you include any hard-wired keys, URLs, or other things that someone could abuse if they had access to them? If so, consider them compromised. Never, never include anything in a client app that you wouldn't want someone to see if they had access to the source code. No matter what precautions you take on a mobile app, always assume that someone's broken it.  Risk for in-app purchases? It depends on how you implemented them. In any case, you should be verifying purchase receipts on a server you own, especially true before releasing any purchases that you'll incur a cost yourself in fulfilling."
androiddev,3dblmo,notsilverfox,2,Wed Jul 15 13:49:22 2015 UTC,"I don't have a server, the cost of running one would probably outweigh what I get in purchases. I'm only pulling like $10-$15 a month.   I used the TrivialDrive v3 guide to implement in app purchases. If they have my base64EncodedPublicKey would that be dangerous to myself or users?"
androiddev,3dblmo,notsilverfox,2,Wed Jul 15 14:15:03 2015 UTC,"Nope, then you should be fine. Public keys are just that (read: public)."
androiddev,3dblmo,ZakTaccardi,1 point,Wed Jul 15 14:20:52 2015 UTC,Oh good!
androiddev,3dblmo,gyroda,1 point,Wed Jul 15 14:21:09 2015 UTC,app engine would likely be free in your case
androiddev,3dblmo,LookAtMyDuck,1 point,Wed Jul 15 16:39:49 2015 UTC,"I'll check that out, thanks!"
androiddev,3dblmo,m1ss1ontomars2k4,3,Wed Jul 15 16:54:37 2015 UTC,"A Digital Ocean Droplet can also be had for $5 a month, and you can get $100 worth of credit for free if you have access to the github student pack."
androiddev,3dblmo,madnurse,11,Wed Jul 15 19:05:57 2015 UTC,What's your app?
androiddev,3dblmo,Iheartmastod0ns,28,Wed Jul 15 04:26:02 2015 UTC,obstruficate   Obfuscate.
androiddev,3dblmo,Glurt,59,Wed Jul 15 07:57:12 2015 UTC,He obfuscated the word.
androiddev,3dblmo,i0way,5,Wed Jul 15 10:29:16 2015 UTC,It's a perfectly cromulent word.
androiddev,3dblmo,TheJudgeOfThings,4,Wed Jul 15 13:21:59 2015 UTC,That's why autocorrect complained!
androiddev,3dblmo,notsilverfox,7,Wed Jul 15 14:08:55 2015 UTC,I like to image that you've been pronouncing it like that this whole time.
androiddev,3dblmo,notsilverfox,3,Wed Jul 15 15:34:23 2015 UTC,Yes I have been!
androiddev,3dblmo,TheRealKidkudi,3,Wed Jul 15 16:18:20 2015 UTC,Obfuscation for noobs. OBSTRUFICATION is a new age of gripetography %)
androiddev,3dblmo,notsilverfox,14,Wed Jul 15 17:03:26 2015 UTC,"I would change passwords and any data holding server URL's, just in case they can see your URL'S in the code and try to do the next logical criminal act"
androiddev,3dblmo,veeti,14,Wed Jul 15 01:13:38 2015 UTC,"Please, for the love the security gods, never ever include passwords, keys, URLs, or anything else sensitive in a client app that you wouldn't want someone with the source code to see. Teasing out the sensitive bits of an app is ridiculously easy no matter how ""protected"" it is.   Repeat after me: I will never trust a mobile app, even my own."
androiddev,3dblmo,Nilzor,0,Wed Jul 15 13:55:43 2015 UTC,"Security wise, the only thing I'm worried about is my base64EncodedPublicKey.  Nothing else security wise I'd be concerned with I suppose, just shocked that this happened."
androiddev,3dblmo,Nilzor,3,Wed Jul 15 14:16:30 2015 UTC,"As I mentioned below, your public key isn't a security risk. It's designed to be the way you publicly identify yourself and prove your identity. Your private key, however, you should protect like it's your first born child."
androiddev,3dblmo,konk3r,3,Wed Jul 15 14:24:41 2015 UTC,Put it up for adoption?
androiddev,3dblmo,mars3142,1 point,Wed Jul 15 18:58:36 2015 UTC,I guess that works if you don't want to be responsible for it. Just beware of private key diddlers in the mean time.
androiddev,3dblmo,NS_nidhishah,6,Wed Jul 15 19:03:39 2015 UTC,"I have a claim in with Google and am waiting to hear back from them.    Just to make sure, is this a DMCA claim or something else? Anything else is a waste of time."
androiddev,3dblmo,samiraekrami,4,Wed Jul 15 04:09:30 2015 UTC,It's a DMCA claim.  Never thought I'd ever have to file something like that.
androiddev,3dblmo,dreamroadproductions,5,Wed Jul 15 04:16:34 2015 UTC,How did you find out about it? How do one easily go about checking for copies of your app?
androiddev,3dblmo,boiledfrog,11,Wed Jul 15 04:50:11 2015 UTC,"It's virtually the same name, I was looking at its reviews in the store when another one popped up.  Mine is the only app on the store for my audience."
androiddev,3dblmo,Cg2XHPxz,2,Wed Jul 15 05:05:58 2015 UTC,"I've never published an app with in-app purchases, but wouldn't that be tied to your google account - which still is safe, right? Where is the database which stores the purchases of each customer - is that provided by google or something you had to implement yourself?"
androiddev,3dblmo,markyosullivan,7,Wed Jul 15 05:30:23 2015 UTC,"They could have decompiled the APK and replaced the in-app purchases with their own account information before recompiling and releasing it on their own. I guess it depends on how they're doing auth checks on it though, like you said."
androiddev,3dblmo,guillaumeyp,1 point,Wed Jul 15 05:43:56 2015 UTC,"They had to change it, because it's tied to the signing hash and package name."
androiddev,3dblmo,fallofmath,2,Wed Jul 15 06:20:53 2015 UTC,That's real sad!  App cloning is getting bigger day by day. Here are some steps  to bring down the guilty: http://arkenea.com/blog/app-cloning/  Hope this helps! All the best
androiddev,3dblmo,guillaumeyp,1 point,Thu Jul 16 14:04:38 2015 UTC,Thanks!
androiddev,3dblmo,arcticblue,3,Thu Jul 16 15:37:39 2015 UTC,my condolences
androiddev,3dblmo,Quinny898,1 point,Wed Jul 15 07:40:49 2015 UTC,"If you google search your bundle id you'll find bunch of links with your apk. I'm not sure about the secret key and align, but it's something to give some attention, and I was reading about someone who had his game published in the ""MI"" app store. It was exactly the same game."
androiddev,3dblmo,Poutrator,1 point,Wed Jul 15 22:50:29 2015 UTC,hmm I'll check that out.
androiddev,3dblmo,ttonyp,1 point,Wed Jul 15 22:53:46 2015 UTC,Is that even possible? How does someone steal your source code?
androiddev,3dblmo,electrocamel,25,Wed Jul 15 02:26:42 2015 UTC,"decompile apk. drag classes + resources into new project. change configuration options, etc. sign with your own certificate. done"
androiddev,3dblmo,ttonyp,3,Wed Jul 15 02:43:11 2015 UTC,Does this happen often?
androiddev,3dblmo,Cg2XHPxz,1 point,Wed Jul 15 09:59:12 2015 UTC,"How can you get the apk if the app is only on the PlayStore, anywhere else ?"
androiddev,3dblmo,electrocamel,11,Wed Jul 15 08:11:19 2015 UTC,I think you can just pull it from /data/app on the device.
androiddev,3dblmo,ttonyp,1 point,Wed Jul 15 08:20:52 2015 UTC,"Thanks, I didn't know."
androiddev,3dblmo,mfosker,1 point,Wed Jul 15 08:34:49 2015 UTC,That works for free apps.  Paid apps are encrypted.
androiddev,3dblmo,MercurysMessage,10,Wed Jul 15 08:42:46 2015 UTC,"Doesn't take much on a rooted device still. Hell, even using Titanium Backup works for almost every app"
androiddev,3dblmo,Clemaniac,3,Wed Jul 15 08:51:10 2015 UTC,"I know several websites that allow to get the apk from play store. It is very handy to push apps without  having connection. I used them at least 3 times a week in my work  Edit: I think I use this one most http://apps.evozi.com/apk-downloader/ I don't know if this is what you were looking for. If it is not, be kind enough to explain me what you need."
androiddev,3dblmo,MercurysMessage,1 point,Wed Jul 15 10:27:49 2015 UTC,Links please
androiddev,3dd8hg,zachmandable,2,Wed Jul 15 10:34:05 2015 UTC,"If you don't find one, you could use a headset/microphone so the sound doesn't feedback over the vocal."
androiddev,3dd8hg,lemonfresh33,2,Wed Jul 15 11:31:39 2015 UTC,"Using headset, as already suggested,  is a good start to lower the volume of echo.  The ""the frequency range"" that you mentioned, will not help you much because music appears on all frequencies including human speech.  SDKs that are good for VoIP communication can also work in your case since you simply have to feed them with two streams of audio signal one that is rendered to the speakers and one that is captured from the microphone. There are few SDKs that you can try, depending on the type of your project you can try open-source free SDKs (e.g. Speex) or commercial SDKs (e.g SoliCall)."
androiddev,3dd8hg,timn2015,1 point,Thu Jul 16 05:42:11 2015 UTC,Thanks!
androiddev,3ddf6z,ContiGhostwood,1 point,Wed Jul 15 12:02:36 2015 UTC,"Since encountering issues with fragments last year(VideoView not appearing where exact same code worked on activity, RecyclerView not drawing), I have found myself using them less frequently, to the point that I realize I haven't used one in months. Instead I have been  using custom views. When I started out learning Android I used Fragments all the time. Am I veering in the wrong direction?"
androiddev,3ddf6z,getapost,1 point,Thu Jul 16 08:55:24 2015 UTC,Does the improved Unit Testing features in Android Studio 1.2 allow us to mock android final classes without additional libraries?  If so does anyone have a link to a tutorial or sample github repository that they can share?
androiddev,3ddf6z,GreatJusticeForSGU,1 point,Wed Jul 15 16:42:16 2015 UTC,You're probably heading towards needing something like PowerMock but if it was me I'd start wondering if I was trying the right approach.  Generally if I need to mock final classes/methods I would first try wrapping how I interact with those classes/methods and mock that wrapper instead.  After all it's the interaction between their code and mine I'm testing not their code itself.
androiddev,3ddf6z,getapost,1 point,Thu Jul 16 03:59:25 2015 UTC,"Yup I agree, was hoping to avoid adding additional code outside of the test for the sake of testing."
androiddev,3ddf6z,dantheman91,1 point,Thu Jul 16 13:40:18 2015 UTC,"When should I use a fragment with a listview, vs using a listfragment? Is there any real advantage to one over the other? Also, should we still be using listviews? or going forward would it just be a better use of my time to go with a recyclerview"
androiddev,3ddf6z,GreatJusticeForSGU,1 point,Wed Jul 15 16:41:42 2015 UTC,I reckon you should be using RecyclerView just because that's where the development focus seems to be happening now.  Personally I am now using a Fragment with a RecyclerView instead of a ListFragment but I don't know for certain if that's a problem or not (I haven't pushed it to the breaking point yet).
androiddev,3ddf6z,DuyBach,1 point,Thu Jul 16 03:46:01 2015 UTC,"i am trying to to do my own costum(inherited from example: AppCompat). I can edit actionBarStyle, actionBarTabTextStyle. What else can I edit? Where can I read about it?"
androiddev,3ddf6z,shanegerous,1 point,Wed Jul 15 14:46:09 2015 UTC,I work in digital analytics at a large company and I am trying to figure out some of the screen names being passed into our analytics tool but don't want to bother our developers. Is there an easy tool I can use to just see what screen names are being passed by our app?
androiddev,3ddf6z,eoin_ahern,2,Wed Jul 15 14:31:53 2015 UTC,"hi all. been trying to learn dagger 2 on android. I think I have the general idea at this stag but a small unforeseen error has arisen with a progressdialog iam using, or will be using to show that the user is registering. Basically, the thing doesnt appear when my Register button is pressed?? this all happens in my ""RegistrationActivity"" in my Views folder. I havent implemented the registration process yet so I just sleep my thread for a few seconds and post back to the UI thread using a handler.  I was wondering if any of you lovely people could take a look at my code a tell me what Iam doing wrong?   https://github.com/eoinahern/IM_App_prototype/tree/master/app/src/main/java/com/example/eoin_a/im_app20  P.S. I wont be using an asynctask either as the registration process could potentially take a while. Thanks again!"
androiddev,3dec4w,YouShallNot_Parse,2,Wed Jul 15 16:38:22 2015 UTC,"Music player apps usually extend Service and run playback from there.  Most notably, Google Music even spawns the Service in a different process, so your UI-related memory usage can be reclaimed if needed and music playback will continue uninterrupted. This is especially important for low-end devices.  IntentService is an easy pattern to extend if you're handling individual tasks. For a longer-lived type of work you want to extend Service directly and manage your lifecycle.  Read the Android Developers entries about Services and the Service base class very carefully."
androiddev,3dcu7x,root_su,4,Wed Jul 15 07:15:19 2015 UTC,You can use tools like Trepn from Qualcomm and Battery Historian from Google to analyse your battery usage
androiddev,3dcu7x,zmarkan,2,Wed Jul 15 10:14:35 2015 UTC,Thanks for Trepn! I somehow missed that until now.
androiddev,3dcu7x,DonMahallem,1 point,Wed Jul 15 12:33:21 2015 UTC,I am already using battery historian and trepn right now. As for battery i am using Better Battery Stats. Just wanted to know if anyone have used any different tools/scripts than normal tools
androiddev,3dcu7x,xqjt,2,Wed Jul 15 12:44:47 2015 UTC,measure measure and measure again. Battery Historian is your friend.
androiddev,3dcu7x,Alien1993,1 point,Wed Jul 15 12:31:17 2015 UTC,https://github.com/google/battery-historian  I never tried it tho.
androiddev,3df5pc,nooboob_,1 point,Wed Jul 15 20:02:22 2015 UTC,"adds kudos to your CV/resume. As long as you're not writing garbage, I think its a good idea.  But if the choice is between that and making money then money wins. Try to do both."
androiddev,3df5pc,bart007345,1 point,Wed Jul 15 20:36:35 2015 UTC,"It is a good idea if you have time to post. You can share your knowledge, make new friends and if your goal is to publish apps and you have a blog with great followers that always come back to read your posts, you have an excelent marketing tool."
androiddev,3desy5,konrad-iturbe,1 point,Wed Jul 15 18:35:21 2015 UTC,Clean and rebuild.
androiddev,3dcr1m,orangedylan,1 point,Wed Jul 15 06:34:36 2015 UTC,Is there an expat forum for china like the Japanese one r/japanlife? If there is that is your best place to ask.
androiddev,3dcr1m,MercurysMessage,1 point,Wed Jul 15 09:26:48 2015 UTC,yep. it's r/china. ok. I'll ask there too.
androiddev,3d9ggq,bukster,6,Tue Jul 14 15:22:08 2015 UTC,This looks freaking amazing! Here's the doc:  https://developers.google.com/nearby/
androiddev,3d9ggq,Saketme,3,Tue Jul 14 18:44:22 2015 UTC,Would this allow for something similar to the Nintendo 3DS's Streetpass feature?
androiddev,3d9ggq,BLourenco,2,Tue Jul 14 22:52:38 2015 UTC,"I think so, from the way it's been described."
androiddev,3d9ggq,mrimite,4,Tue Jul 14 23:07:17 2015 UTC,"I'm interested to see how this works with Wifi-Direct, which I gave up on (simple in concept, but bugs galore and incompatibilities between Samsung and non-Samsung devices)."
androiddev,3d9ggq,sonorangoose,1 point,Tue Jul 14 23:46:22 2015 UTC,I know right. I'm hoping that Nearby offers a simpler implementation than WiFi-direct that's also more robust.
androiddev,3d9ggq,Saketme,3,Wed Jul 15 04:48:10 2015 UTC,Can. Not. Wait. This is gonna be so much fun to work with.
androiddev,3d9ggq,mrimite,4,Tue Jul 14 22:47:09 2015 UTC,"Quick, someone give me an app idea so I can capitalise on this"
androiddev,3d9ggq,Glurt,20,Tue Jul 14 21:19:13 2015 UTC,You should make an app that uses Google's Nearby API!
androiddev,3d9ggq,DartKietanmartaru,9,Tue Jul 14 22:12:45 2015 UTC,You're a genius!
androiddev,3d9ggq,Glurt,2,Tue Jul 14 22:27:19 2015 UTC,Whoa. What else?
androiddev,3d9ggq,Saketme,5,Wed Jul 15 04:47:16 2015 UTC,"Tinder, but in real life!"
androiddev,3d9ggq,clavalle,2,Wed Jul 15 00:03:18 2015 UTC,I have an MVP up and running but for some reason people don't like it when I swipe their faces
androiddev,3d9ggq,wittywombat,1 point,Wed Jul 15 14:36:20 2015 UTC,They'll get used to it.  Users always have trouble with new UX paradigms.
androiddev,3d9ggq,clavalle,2,Wed Jul 15 15:07:51 2015 UTC,About time.  I was hoping for something on android to compare with iOS Peer to Peer library.
androiddev,3d9ggq,mobileDevKing,4,Tue Jul 14 21:39:30 2015 UTC,"Local multiplayer, FINALLY! No need to rely on external servers, bluetooth or wifi!"
androiddev,3d9ggq,rez337,1 point,Tue Jul 14 21:41:23 2015 UTC,Dont you still have to rely on wifi (local connection)?
androiddev,3d9ggq,roctiv36,2,Wed Jul 15 02:46:34 2015 UTC,"From Get Started page: Note: For devices to discover each other, they must be connected to the same network with multicast enabled.  Yes, you still use wifi, I believe."
androiddev,3d9ggq,Yotta92,1 point,Wed Jul 15 07:46:18 2015 UTC,"Not to be sassy, Rez337 said ""no need to rely on wifi"", which is the reason i replied..."
androiddev,3d9ggq,roctiv36,1 point,Wed Jul 15 15:18:59 2015 UTC,"awesome, I need that local multiplayer gaming"
androiddev,3da9xi,philosophicalhacker,5,Tue Jul 14 18:45:39 2015 UTC,"Everyone, please let /u/morihacky and I know if you liked this episode. We wanted to go super in depth but we were not sure if everyone would like to hear the nitty gritty details. If you like this and want more of this style let us know and we'll get on it."
androiddev,3da9xi,donnfelker,2,Wed Jul 15 03:28:37 2015 UTC,You guys taking suggestions? I would love to hear one about debugging. Logcat has soo many messages that I don't know how to interpret.
androiddev,3da9xi,Batmantosh,2,Wed Jul 15 08:23:50 2015 UTC,"We do take suggestions, you guys/gals (audience) actually help us drive where the show goes. Your feedback is crucial to /u/morihacky and I."
androiddev,3da9xi,donnfelker,2,Wed Jul 15 18:13:12 2015 UTC,Cool! Another one is heuristics for developing on particular devices. I always hear about developing for x is hard because of y.
androiddev,3da9xi,Batmantosh,1 point,Thu Jul 16 03:55:06 2015 UTC,absolutely! always looking for suggestions. also /u/Batmantosh = very cool name.
androiddev,3da9xi,morihacky,1 point,Wed Jul 15 18:44:51 2015 UTC,Thanks!
androiddev,3da9xi,Batmantosh,2,Thu Jul 16 03:47:25 2015 UTC,Enjoyed learning about supervising controller and passive view. Haven't got around to looking at the detailed posts yet. Going in depth with the terminology helped to lay down some foundation (hopefully for more in depth podcast's).  :)   Great work and welcome to the Garden State!
androiddev,3da9xi,TheMadTom,1 point,Wed Jul 15 22:04:49 2015 UTC,Thanks!
androiddev,3da9xi,donnfelker,3,Thu Jul 16 01:23:26 2015 UTC,Yay finally the architecture one! And it includes the VIPER-like talk I posted a couple of days ago! Time to spread it in the office ^ ^
androiddev,3da9xi,pakoito,2,Wed Jul 15 01:32:33 2015 UTC,Thanks for the support and we hope you enjoy!
androiddev,3da9xi,donnfelker,2,Wed Jul 15 03:27:45 2015 UTC,Super pumped for this episode
androiddev,3da9xi,burntcookie90,2,Tue Jul 14 19:07:42 2015 UTC,It was fun we hope you like it.
androiddev,3da9xi,donnfelker,2,Wed Jul 15 03:28:46 2015 UTC,"Only found out about this fantastic podcast recently, so I'm still slowly working my way through some of the past episodes. Architecture has been a big discussion and pain point at work as of late though, so this episode will probably jump to the top of my list."
androiddev,3da9xi,yankeeken,3,Wed Jul 15 05:02:32 2015 UTC,"Awesome, thanks for listening."
androiddev,3da9xi,donnfelker,1 point,Wed Jul 15 18:13:25 2015 UTC,Says episode 12 in Pocketcasts?
androiddev,3da9xi,tykin,2,Thu Jul 16 02:16:34 2015 UTC,I screwed up. Once picket casts updates their RSS it will say '11'. Oops.
androiddev,3da9xi,donnfelker,1 point,Thu Jul 16 04:46:02 2015 UTC,My favourite podcast. Can't wait to listen.
androiddev,3da9xi,markyosullivan,2,Wed Jul 15 01:59:43 2015 UTC,Thanks for listening! :)
androiddev,3da9xi,donnfelker,1 point,Wed Jul 15 03:29:06 2015 UTC,"Great episode, as always. Since I started forcing myself to strictly exclude the framework within my Presenters (i.e. any ""import android.*"" is not allowed  whatsoever), the overall MVP execution has become much clearer and way more testable."
androiddev,3da9xi,aurae_ger,2,Wed Jul 15 06:14:31 2015 UTC,It is definitely cleaner and more testable. Though there is a lot of ceremony and code you have to get through sometimes ... as always - its about tradeoffs.
androiddev,3da9xi,donnfelker,1 point,Wed Jul 15 18:15:52 2015 UTC,Donn and Kaushik should be cloned so that we'd get more episodes of Fragmented. Keep it up!
androiddev,3da9xi,mrz,6,Wed Jul 15 07:59:06 2015 UTC,while(youthinkpodcast==awesome) {   hosts = donn^2 + kaushik^2;   shipNewShowWith(hosts); }
androiddev,3de0zg,leggo_tech,2,Wed Jul 15 15:16:23 2015 UTC,Dependency inversion != Dependency injection. Which do you mean?
androiddev,3de0zg,sonorangoose,1 point,Wed Jul 15 18:42:25 2015 UTC,isn't dependency injection just the dependency inversion principle?
androiddev,3de0zg,bart007345,1 point,Wed Jul 15 19:40:14 2015 UTC,to do dependency inversion you can use a dependency injection framework like dagger. Or do it yourself (like me).
androiddev,3de0zg,gatorviolateur,1 point,Wed Jul 15 20:40:41 2015 UTC,"Yeah, that's what I want to do. Do it myself.   I try to do a lot of things myself before I rely on a library. This really helps me learn about what the library solves and what its really good at. So How would i ""do it myself""?"
androiddev,3de0zg,bart007345,0,Thu Jul 16 21:36:23 2015 UTC,Do you know any good open source apps that do DI manually? I plan to move away from dagger for my next app.
androiddev,3de0zg,gatorviolateur,1 point,Thu Jul 16 06:09:35 2015 UTC,"Sorry no, I roll my own. It's not that hard."
androiddev,3de0zg,bart007345,0,Thu Jul 16 07:33:51 2015 UTC,Do you know any good open source apps that do DI manually? I plan to move away from dagger for my next app.
androiddev,3db8ag,tonikami,2,Tue Jul 14 22:44:16 2015 UTC,As a beginner I would definitely watch it.
androiddev,3db8ag,shzftw,1 point,Wed Jul 15 03:42:21 2015 UTC,Android dev's! I'm wondering what you guys think of this new tutorial series i started.
androiddev,3db8ag,MumpsXX,1 point,Tue Jul 14 22:44:51 2015 UTC,"Ok, I'm interested. But where are the puzzle problems for each video?"
androiddev,3dauan,veryconfuseded,7,Tue Jul 14 21:03:17 2015 UTC,"Games are basically a loop that runs until you lose or win. Accept input, process input, calculate game state, draw to screen. Repeat forever.   Every single thing a game can do fits into one of these phases. Each phase can be broken down into subphases such as pre render/render.   What your job as a learning game developer is to make a game and understand the phases, then add assets and animations and interactions. You can do this first using libraries to make the job easier, then replace the libraries with your own code to understand what the library did for you.   Repeat by adding assets and interactions and removing (or adding) libraries (ad nauseum) until you have a sellable product."
androiddev,3dauan,casualblair,6,Wed Jul 15 01:46:28 2015 UTC,Libgdx is quite nice and has some good samples.
androiddev,3dauan,lemonfresh33,3,Tue Jul 14 22:20:19 2015 UTC,this. you should definitely pick an engine and use that. Coding from scratch is fairly difficult for games since you also have to learn a graphics API which is Open GLES for mobile development
androiddev,3dauan,Mucucu,3,Tue Jul 14 22:26:54 2015 UTC,"Second this, libgdx is the way to go"
androiddev,3dauan,aeseeke,7,Wed Jul 15 00:11:00 2015 UTC,just use unity
androiddev,3dauan,thenumber1punk,2,Wed Jul 15 02:58:28 2015 UTC,"If you prefer coding in C++, SDL is a nice cross-platform solution."
androiddev,3dauan,code_mc,1 point,Wed Jul 15 12:15:01 2015 UTC,You could look at the Lollipop Easter Egg source code for an example. https://github.com/android/platform_frameworks_base/tree/master/packages/SystemUI/src/com/android/systemui/egg
androiddev,3dauan,ueman,1 point,Wed Jul 15 08:29:18 2015 UTC,Beginning Android game development by Mario Zechner (2nd edition) is a good starting point.
androiddev,3dauan,AlexeyBrin,1 point,Wed Jul 15 15:28:00 2015 UTC,You should watch this video. https://www.youtube.com/watch?v=NTHl_vW1EMY  It's a great video and it'll show you what you'll have to face as a gamedev.
androiddev,3d7gfc,ConMan77,37,Tue Jul 14 02:49:48 2015 UTC,Similar happened with my friend.   http://i.imgur.com/M5HmJif.png
androiddev,3d7gfc,mmmatt3120,9,Tue Jul 14 04:32:33 2015 UTC,Good ol' friends amiright?
androiddev,3d7gfc,tymscar,6,Tue Jul 14 04:36:14 2015 UTC,This one is actually pretty funny. Kudos to your friend
androiddev,3d7gfc,emuen,3,Tue Jul 14 05:51:32 2015 UTC,Now I want that clock. Ah man.
androiddev,3d7gfc,googles_dev_bitch,2,Tue Jul 14 10:38:24 2015 UTC,"Look at all those juicy Keyword link-juice ASO...  Thanks, friend!"
androiddev,3d7gfc,about90frogs,25,Tue Jul 14 16:30:56 2015 UTC,Alright looks like I need to expand this to friends as well...
androiddev,3d7gfc,about90frogs,6,Tue Jul 14 04:12:46 2015 UTC,"Gotta tell ya, I really want this app now."
androiddev,3d7gfc,amxn,12,Tue Jul 14 04:22:13 2015 UTC,Enjoy
androiddev,3d7gfc,hereticmoox,6,Tue Jul 14 04:23:17 2015 UTC,Well I am on a bulk.
androiddev,3d7gfc,GoPirate,7,Tue Jul 14 04:31:03 2015 UTC,"As am I, may your gains prosper!"
androiddev,3d7gfc,eythian,1 point,Tue Jul 14 04:37:14 2015 UTC,Any help for those on a cut? ;(
androiddev,3d7gfc,satanismybacon,8,Tue Jul 14 04:44:47 2015 UTC,Changes title to Don't Eat
androiddev,3d7gfc,DatoDave,8,Tue Jul 14 05:00:54 2015 UTC,"Same thing, but a reminder every 2 hours that you're fat and shouldn't eat."
androiddev,3d7gfc,DatoDave,2,Tue Jul 14 05:02:44 2015 UTC,Maybe show you a picture of a pile of shit or vomit
androiddev,3d7gfc,relay126,15,Tue Jul 14 11:33:07 2015 UTC,Also beware when you complain to a friend that he only gave you a 4 star review: http://i.imgur.com/ww8kWVt.png
androiddev,3d7gfc,slackpipe,9,Tue Jul 14 05:04:36 2015 UTC,Asking peers to rate your app seems to be a dangerous task.
androiddev,3d7gfc,drabred,3,Tue Jul 14 05:08:29 2015 UTC,lol that is awesome
androiddev,3d7gfc,Ghostree,6,Tue Jul 14 19:28:35 2015 UTC,"Out of curiosity, what do you need network access for?"
androiddev,3d7gfc,epicstar,10,Tue Jul 14 04:27:52 2015 UTC,"Oh thanks for reminding me about that, something I need to remove. I was playing around with ads before I published it and I guess I forgot to get rid of some code. Even though it does require that at the moment, there are no ads."
androiddev,3d7gfc,null-byte,7,Tue Jul 14 04:36:01 2015 UTC,"Yep, just rip it out of the manifest for the presmission-weary people. :)"
androiddev,3d9rsg,vinaygaba,4,Tue Jul 14 16:42:24 2015 UTC,"Why do you want to put Months and other calendar type things in a string array like that? You can, for a quick example, get the days of the week in a localized format like this  private static String[] namesOfDays = DateFormatSymbols.getInstance().getWeekdays(); // Used to keep DOW localized   Why duplicate the effort?"
androiddev,3d9rsg,MKevin3,1 point,Tue Jul 14 19:55:38 2015 UTC,"My intention was to just give an example of how string arrays could be used, hence went with this. This repo is certainly work in progress and I am hoping people share what they used in their projects. They were created as a means to give some inspiration. Some good example are the list of countries, or the localities in Mumbai, etc."
androiddev,3da29e,PlutoSucks,4,Tue Jul 14 17:53:46 2015 UTC,I previously worked at a social gaming company. We weren't allowed to add a new feature without providing analytics and creating 3 variants of that feature. Worked well though in practice.
androiddev,3da29e,androidguy1234,1 point,Tue Jul 14 18:02:40 2015 UTC,"It doesn't sound like I'm quite as thorough as you, but I do like to instrument my app with at least all screens they can view and the significant actions they may take. Be careful about capturing things like search queries in case there could be sensitive information in them."
androiddev,3da29e,mikenomn,1 point,Tue Jul 14 21:45:52 2015 UTC,Dont worry i check Crashlytics every 30 minutes after I release an app ;)
androiddev,3da29e,drabred,1 point,Wed Jul 15 07:12:57 2015 UTC,"Personally I think its not such a good idea to track everything. It's better to ask a question about your users experience, then think about how to answer that question using analytics. A great example is AB testing (@androidguy1234) where you are asking a question, ""which user experience fits best?"". Tracking everything results in a lot of traffic, a lot of data and may not give you answers to your user experience experiments, especially is you are not extremely methodical in your naming conventions for categories and events. Quite often logging simple clicks is not going to give you useful answers and indeed might give you so much data that its hard to interpret."
androiddev,3da29e,skeltonn,1 point,Wed Jul 15 07:20:21 2015 UTC,"We have a clear communicated ui flow, and then tune it at certain places to accommodate the flow the user expect, less than what we expect.   Google/Apple spend lots of money and designers on design choices and ui flow, read for example about Googles Material Design for Android or Apples excellent tour on Appdesign in their IOS Developer Handbook.  In the companies app we track the completeness of functions, not slides or buttons. If we have 20 functions and only 15 are used, its rather our assumption about the functions we added. It doesn't matter what we designed how, because they are never used. We also have people who read the comments on the stores and in the forum.  Thats makes more sense then tracking everything. Apps exists, because people want to do something with it. Analyze the easiness to use the functionality, not the technical implementation.   Besides some very quirky specialty apps, there aren't many ways you can convey and use information without breaking the ""best"" app guidelines that are inherent to the platform."
androiddev,3d9p2n,bukster,1 point,Tue Jul 14 16:23:16 2015 UTC,The name Eddystone probably refers to : https://en.wikipedia.org/wiki/Eddystone_Lighthouse
androiddev,3da1rj,SuperSenBoy,3,Tue Jul 14 17:50:37 2015 UTC,"Try writing something that uses a web api. Like a weather app, or a Reddit client. You could start simple with both, then later add widgets for the weather app, or login for the Reddit one.  Look into some of the more popular libraries as well, such as dagger, butterknife, mosby, or rxjava if you're feeling very adventurous."
androiddev,3da1rj,SatNav,2,Tue Jul 14 18:42:07 2015 UTC,Weather app sounds interesting. I will get started on it right away. And I will check out the libraries as well. Thanks
androiddev,3da1rj,sonorangoose,3,Tue Jul 14 19:01:32 2015 UTC,Maybe check out forecast.io API; Dark Sky for iOS is beautiful but I haven't seen anything as nice on Android.
androiddev,3da1rj,sudhirkhanger,1 point,Wed Jul 15 00:21:26 2015 UTC,I would say start with contributing to any open source app you use.
androiddev,3da1rj,jay_gaz,0,Wed Jul 15 03:15:22 2015 UTC,I don't think there is a weather app out there....you can attempt to complete such a difficult task.
androiddev,3da1rj,gotbiggums,1 point,Wed Jul 15 01:36:13 2015 UTC,I swear! A million dollar idea xD
androiddev,3d8hbj,smithc42,5,Tue Jul 14 09:27:59 2015 UTC,Do you know Alt + ~
androiddev,3d8hbj,drabred,1 point,Tue Jul 14 10:24:34 2015 UTC,What's this for? I'm on Mac & it doesn't seem to be a keymap.
androiddev,3d8hbj,drabred,2,Tue Jul 14 11:10:35 2015 UTC,VCS Operations http://i.imgur.com/32WQbWj.png  Should be Ctrl+V on MAC by default
androiddev,3d8hbj,googles_dev_bitch,4,Tue Jul 14 11:33:47 2015 UTC,"GIT seems to get screwy when renaming files, especially caps to lowercase.  Delete file, and re-add corrected file to avoid ""file not found"" on git commits."
androiddev,3d8hbj,HeWhoKnowsTooLittle,2,Tue Jul 14 16:35:57 2015 UTC,Are you on Windows?  I have had this in Windows. I think it is a file system thing. It should not happen on iOS or Linux. Someone please correct me if I'm wrong.   Good tip. I think most people have that problem sometime.
androiddev,3d8hbj,googles_dev_bitch,1 point,Tue Jul 14 19:39:28 2015 UTC,"I'm on mac, mostly happens in Drawables, but I've had a stubborn Class."
androiddev,3d8hbj,evantatarka,2,Tue Jul 14 23:39:09 2015 UTC,Yeah this is a problem when working on case-insistivie file systems. You can do git mv oldname newname to fix it without deleting the file.
androiddev,3d8hbj,evan1123,1 point,Wed Jul 15 00:32:32 2015 UTC,Sounds like a Windows issue since NTFS is a case insensitive filesystem.
androiddev,3d8hbj,BitMastro,1 point,Tue Jul 14 22:02:21 2015 UTC,"Some of the obvious ones:   Right bottom tool bar allows you to switch to different branches/create new branches/etc Right click on the project -> Git -> Repository -> ""Merge changes"" allows you to merge using Android studio, that offers, in my opinion a better interface to mergetool when there are conflicts Mergetool has a ""merge all non-conflicting changes"" button to ease merging leaving just the conflicts"
androiddev,3d8hbj,BitMastro,1 point,Tue Jul 14 10:28:29 2015 UTC,"Good tips! 1 & 2 I've already stumbled upon, 3 is very useful. Do you mouse all of those? I'm trying to stick to keyboard shortcuts if possible and also avoid using CMD-Shift-A for everything."
androiddev,3d8hbj,prlmike,1 point,Tue Jul 14 11:15:03 2015 UTC,"Most of the time, I don't use them often enough to need memorising a shortcut right now. There shortcuts also change between systems, and key promoter will tell you the correct one if there is one"
androiddev,3d8hbj,sudhirkhanger,1 point,Tue Jul 14 11:22:58 2015 UTC,Theres an interface for rebasing which could also be used to squash commits.
androiddev,3d8hbj,KevCron,1 point,Tue Jul 14 11:17:07 2015 UTC,What's the benefit of one over the other?
androiddev,3d8hbj,kaisims,1 point,Tue Jul 14 12:32:06 2015 UTC,"In my experience, they have been mostly the same.   I would not use both though. Switching between the two of them led to some silly errors with stashing changes on my part."
androiddev,3d8hbj,skeltonn,1 point,Tue Jul 14 14:51:34 2015 UTC,"I would say Android Studio has a UI, so no cammd lines etc. and handling conflicts is easier, in my opinion"
androiddev,3d8hbj,LordOfBones,1 point,Tue Jul 14 15:41:29 2015 UTC,"The Android Studio merging tool is one of the best merging tools around. The project tool window also has a view called ""Changed Files"" which is useful for seeing your modifications. I still use SourceTree however for most Git operations - it has what is possibly the most useful feature - the commit graph"
androiddev,3d8hbj,40ft,1 point,Wed Jul 15 09:07:08 2015 UTC,Right-click on the left bar (with line numbers) to annotate files. This will show the commits & culprit of the changes. See here
androiddev,3d8tdm,fadelakin,1 point,Tue Jul 14 12:02:31 2015 UTC,"I'm dynamically adding a view to a linearlayout that's in the row layout for my recyclerview. However many views that are added to the linearlayout depends on however many objects are returned from the server.   Due to recycling views and my code being in onBindViewHolder, the injected views aren't removed when I scroll up or down. so when I come back to the position I was previously at, however many views were in the linearlayout are now doubled.   So if my linearlayout has 3 textviews like this in a row [textview][textview][textview] when I scroll up and that row is not longer visible, everything seems fine but when I scroll back to the position that row is at, everything is doubled so now I have [textview][textview][textview][textview][textview][textview] in my row.  Any idea/help on how I could keep the same amount of views whether I scroll up or down away from the row. This is in relation to this question that I posted yesterday.  EDIT: I added a call to removeAllViews() on my LinearLayout before populating the linearlayout. That seems to have fixed it for now but I'm not sure if it's the best way to go."
androiddev,3d8tdm,epicstar,2,Tue Jul 14 20:18:23 2015 UTC,"I'm trying to convert my toasts into the Design lib's Snackbars. Anyone know how to handle consecutive snackbars? Material design loves to tell me that you should do it this way: http://www.google.com/design/spec/components/snackbars-toasts.html#snackbars-toasts-usage  But when I actually program it, They just end up stacking behind each other so I'll only end up seeing one snackbar.... Toasts will automatically print in order.... Is this like a bug with the design library or do I have to manually program to stack correctly?"
androiddev,3d8tdm,TiberiusAbadon,0,Tue Jul 14 17:59:32 2015 UTC,"It seems like you should really be using a Toasts. It's not an anti pattern. Does the user have to interact with snackbar? e.g retry, undo."
androiddev,3d8tdm,epicstar,1 point,Wed Jul 15 03:11:41 2015 UTC,"Eventually yeah.... I will have them select something, then the snackbar pops up, and then they have the option to unselect it."
androiddev,3d8tdm,Asalas77,1 point,Wed Jul 15 13:18:41 2015 UTC,How do I synchronize my app database on different devices? I'm using Realm as my database.
androiddev,3d8tdm,bart007345,1 point,Tue Jul 14 17:25:27 2015 UTC,Get the app to request changes since some last timestamp. Push updates to the devices. Couchbase mobile supports keeping the db in sync.
androiddev,3d8tdm,__Ryan_______,1 point,Tue Jul 14 21:04:42 2015 UTC,"Hi, how can I implement a navigation view to have the dynamic menu items and groups like the one in Relay for reddit.  Reddit Sync 1 Reddit Sync 2  What I want to achieve is to have one menu item like ""Go to..."" in Reddt sync, when tapping on it, it will expand and show a list of items (items can be dynamically created by users)"
androiddev,3d8tdm,trevor-e,1 point,Tue Jul 14 17:16:03 2015 UTC,"I'm working on an app right now that is basically the same as another app in the store, except mine has a way better UI.  The UI for the other app is seriously bad, even for Gingerbread standards.  I'm having a hard time naming the app.  Should it just be ""Material <app name>"", where <app name> is the app I'm copying?  The problem with that is the name gets cut off, and it gets put with the M apps in the app list."
androiddev,3d8tdm,bump_elephant,1 point,Tue Jul 14 17:14:16 2015 UTC,I'd advise against this as well. Is it worth risking all the hard work you put in just to have your app listing jeopardised over some infringement issue? Something else to consider is that users might view either your app or your company as being disreputable if they feel (justified or not) that you're trying to piggy-back on another person's work and success.
androiddev,3d8tdm,trevor-e,1 point,Wed Jul 15 06:05:54 2015 UTC,"Yea, I don't want any hassle over this app.  I mentioned in the other reply that I didn't see a trademark registered, and the name is just two common words.  I'll do some more research into app names just to be sure, but it's probably not worth the risk like you said."
androiddev,3d8tdm,TiberiusAbadon,0,Wed Jul 15 15:44:41 2015 UTC,If the app name is trademarked don't copy the name. Use synonyms!
androiddev,3d8tdm,trevor-e,1 point,Wed Jul 15 03:17:55 2015 UTC,"I checked the USPTO and didn't see anything, and it's just two generic words which would be hard to trademark, but I guess it's not worth the risk."
androiddev,3d8tdm,ArtBookNumberFour,2,Wed Jul 15 15:42:00 2015 UTC,I am having a little difficulty cycling through stacked popups on google maps v2 api. Currently I am doing something really complicated and it does not work 100. I plan to work on this today.  if Anyone Knows of an easy way to Switch stacked markers I would Like to know.
androiddev,3d8tdm,epicstar,1 point,Tue Jul 14 15:03:19 2015 UTC,"I'm trying to learn this, too........."
androiddev,3d8tdm,kaisims,1 point,Tue Jul 14 17:12:08 2015 UTC,"What are good libraries to load and cache images but also continue to load when scrolling? So When I start my activity it should load, lets say 20 images, and as I scroll down it should load more.  In my head it sounds pretty easy, because I could just add a section to the url and I get the next 20 images as URLs in a JSON."
androiddev,3d8tdm,MKevin3,1 point,Tue Jul 14 14:56:07 2015 UTC,http://stackoverflow.com/questions/19396852/volley-image-caching  I use volley and have been happy with its image caching. That link explains how to use it as in memory or disk based cache.
androiddev,3d8tdm,DelusionalX1,1 point,Tue Jul 14 16:09:08 2015 UTC,I'm developing an app that shows data from a Bluetooth LE connection.  I want to keep receiving and acting upon the data even when the activity is stopped/killed (for example vibrate when the data reached a certain threshold).  Do I just use a service? How do I keep it from getting stopped (I know I can just not stop it in onDestroy() but I suppose that isn't good practice)?  I wouldn't mind having a button to start/stop the logging/service.
androiddev,3d8tdm,imsrslyyouguys,3,Tue Jul 14 14:13:31 2015 UTC,"How do you create string resources when there is a dynamic part of a sentence? Hard to explain, so I'll just give an example.  Let's say there is a sentence in my app that says:   This will be XX € if you pay right now.   XX is a variable.  Should I create 2 seperate string resources:   <string name=""part1"">This will be</string>  <string name=""part2"">€ if you pay right now</string>   And then create string by calling part1 + variable + part2?  Or should I do it like this?   <string name=""my_sentence"">This will be {price} € if you pay right now</string>   And then I can do something like this:   myStringResource.replace(""{price}"", myPriceVariable);   What do you think?"
androiddev,3d8tdm,TiberiusAbadon,0,Tue Jul 14 12:47:46 2015 UTC,In general read this: https://docs.oracle.com/javase/tutorial/java/data/numberformat.html
androiddev,3d8tdm,KiDoki,13,Wed Jul 15 03:14:06 2015 UTC,"The string resource should look like this:  <string name=""my_sentence"">This will be %s € if you pay right now</string>   Then this  getString(R.string.my_sentence, 15);   will return This will be 15 € if you pay right now.  If you need multiple parameters in the string, then it should be something like this:  <string name=""my_sentence"">This will be %1$s € if you pay before %2$s</string>  getString(R.string.my_sentence, 15, ""Tuesday""); // returns ""This will be 15 € if you pay before Tuesday""   See more examples here."
androiddev,3d8tdm,thepoosh,2,Tue Jul 14 13:01:59 2015 UTC,this is a very good read about this subject
androiddev,3d8tdm,ASIC_SP,2,Tue Jul 14 13:47:33 2015 UTC,"thanks, I didn't know this..   I was using   part1 + variable + part2?"
androiddev,3da9g5,marketplacemeet,1 point,Tue Jul 14 18:42:30 2015 UTC,I don't understand what your website does.
androiddev,3da9g5,will_r3ddit_4_food,1 point,Tue Jul 14 21:54:33 2015 UTC,"We help coordinate social media promotions for apps and mobile games by letting you choose who you want to promote your app based on their followers and your target audience at a flat rate of $3/1000 followers. We offer other services like mass promotions called Multiplays, advising for your promotion campaign, and communication goes both ways, so you can contact influencers and influencers can contact you."
androiddev,3da9g5,will_r3ddit_4_food,1 point,Tue Jul 14 22:01:04 2015 UTC,So if I paid you $21 you'd get me 7000 followers on facebook/twitter?
androiddev,3d9lup,johnmountain,8,Tue Jul 14 16:00:29 2015 UTC,"Pretty clear that Bruce doesn't know much about Android, both technically and culturally (Kotlin seems to have already taken the place as #1 non-Java candidate on Android).  More generally, anyone suggesting to replace a JVM language with a non-JVM language probably doesn't have enough technical understanding to make this kind of claim."
androiddev,3d9lup,crate_crow,2,Tue Jul 14 16:57:51 2015 UTC,"As nice as Golang is, the one thing it doesn't have is a big of a community around it as Java and current Android. This leads to a current lack of tooling, libraries, and helpful resources to solving a problem and/or learning.  I for one am looking at Kotlin on the future because of it's goal of 100% interoperability  with Java, thus making it easier to jump languages.  edit for grammer but not for speeling"
androiddev,3d9lup,AnubisJcakal,3,Tue Jul 14 16:36:16 2015 UTC,What exactly is so nice about Golang? It's basically java 1.4 with lambdas and structural types.
androiddev,3d9lup,Categoria,1 point,Wed Jul 15 01:20:33 2015 UTC,"It's fast, cross compile to almost any platform without the target platform needing any dependencies on the machine (Don't need ruby/jvm/php installed + correct version), and makes concurrency a breeze (Go routines). This makes for great micro services."
androiddev,3d9lup,AnubisJcakal,0,Wed Jul 15 13:19:24 2015 UTC,"I haven't used it, but it runs at near native speeds with garbage collection.  No generics though.  I like me some generics."
androiddev,3d9lup,ZakTaccardi,3,Wed Jul 15 02:46:44 2015 UTC,Those aren't advantages though wrt Java because Java has those as well (speed and GC). Go's selling points are fast compile times and concurrency primitives.
androiddev,3d9lup,mnjmn,2,Wed Jul 15 03:59:48 2015 UTC,"Java also has fast compile times and very solid concurrency libraries.  Basically, I see Go as a better C and a better Python/Ruby, but it's not really in the same league as Java."
androiddev,3d9lup,crate_crow,-1,Wed Jul 15 16:40:40 2015 UTC,Golang is system programming language.
androiddev,3d9lup,Mittalmailbox,2,Wed Jul 15 10:27:53 2015 UTC,"No generics = massive deal breaker. You can say goodbye to a good number of popular libraries with that, not to mention it's also bad if you enjoy using them in your own code."
androiddev,3d9lup,pandanomic,2,Wed Jul 15 08:35:04 2015 UTC,Wait it seriously has nothing like generics?  Edit: Wow
androiddev,3d9r9q,mehster433,3,Tue Jul 14 16:38:38 2015 UTC,You can easily use only HTML+JS to build android app. Try searching for frameworks like Cordova or similar.! You can also have single webview in app and show website inside it.
androiddev,3d9r9q,sagarsiddhpura,3,Wed Jul 15 07:11:05 2015 UTC,Ionic would be a good place to start: http://ionicframework.com
androiddev,3d62cl,jackhexen,4,Mon Jul 13 20:25:46 2015 UTC,When unit testing is this hard it shows how crappy the android API really is.
androiddev,3d62cl,flukus,3,Tue Jul 14 03:24:05 2015 UTC,"Exactly, this is very convoluted and it is really hard to establish what is being tested because 90+% of that class is devoted to mocking out  the effects of what you are doing. That and, upon a platform update, your tests may start failing because new side-effects are not mocked."
androiddev,3d62cl,defer,2,Tue Jul 14 10:29:11 2015 UTC,Basically this is due to inheritance. We inherit from a god object. This does not differ from procedural programming much. Sometimes we can replace inheritance with delegation.
androiddev,3d62cl,NMAndroid,2,Tue Jul 14 07:25:10 2015 UTC,I've just found this awesome article on unit testing.
androiddev,3d62cl,marco-rs,2,Mon Jul 13 20:26:07 2015 UTC,I get Webpage not available. Is the link correct?
androiddev,3d8nao,sagarsiddhpura,1 point,Tue Jul 14 10:46:35 2015 UTC,uiohmy or I randomly hit up google images for exactly what I'm looking for.  Google design spec is also a place to look at.
androiddev,3d8nao,kevelbreh,1 point,Tue Jul 14 11:13:59 2015 UTC,Thanks for uiohmy suggestion.
androiddev,3d8nao,superhappyrobots,1 point,Tue Jul 14 12:03:28 2015 UTC,"For inspiration, I usually look at dribbble and Pinterest.  The tablet section of the material design docs probably feels like it doesn't havs enough information because designing for tablets is essentially just designing for any other device. Think about using scalable elements in your UI, not having ListViews with very long rows, etc."
androiddev,3d3f3r,Saketme,6,Mon Jul 13 05:16:52 2015 UTC,"no.2 worries me a bit. I'm using Retrofit, RetroLambda and RxAndroid and have code like this all over the place in Fragments and activities:    new SomeRetrofitService().subscribe(         (result) -> { processResult(result); },         (error) -> { processError(error); }     );   Lambdas are just a shorthand for anonymous classes, which in turn will keep references to the enclosing Fragment/Activity, right? Am I in trouble and how should I refactor?"
androiddev,3d3f3r,Zarlon,14,Mon Jul 13 08:21:12 2015 UTC,"Lambdas are just a shorthand for anonymous classes   Actually that's not entirely true. Lambdas are Java 8 constructs that were designed with specific conscious functionality. But you're right in that the Anonymous inner classes are written to simulate lambda like functionality.    which in turn will keep references to the enclosing Fragment/Activity, right? Am I in trouble and how should I refactor?   Lambdas (even the ones written with retrolambda) will keep a reference to the enclosing class ONLY if they are ever used inside the scope of the lambda unlike Anonymous inner classes. So if you don't explicitly reference anything outside of the scope no references will be kept.    As is usually recommended. Remember to unsubscribe as this frees the observable from the observer thus allowing then to be collected whenever they're done doing what they need to do.  Problems occur only if someone from outside keeps a reference to those Anonymous inner classes. As long as you make sure that doesn't happen you should generally not have any problems."
androiddev,3d3f3r,morihacky,3,Mon Jul 13 09:26:03 2015 UTC,"This is really useful information, thanks.  Just to be clear about your #1: Are you advising to unsubscribe immediately upon receiving the HTTP response (given that use case)? If we wait until onDestroyView as /u/ewintory suggest, wouldn't the Observable and View be garbage collected anyway?   Let's say the reference chain is App -> Activity -> View -> Observable. Once the link between Activity and View is broken, both the View and the Observable will be GC'd anyway - it doesn't matter that the Observable keeps a back reference to the View.  I'm assuming here that no other classes reference the Observable and that the HTTP library (Retrofit) doesn't keep unneccessary references after the response is received"
androiddev,3d3f3r,Zarlon,2,Mon Jul 13 10:19:33 2015 UTC,"This is really useful information, thanks.   My pleasure. :)   Are you advising to unsubscribe immediately upon receiving the HTTP response (given that use case)?   Ah! So the plot thickens. Nope, you don't have to unsubscribe immediately on getting a network response. This is because more often than not RxJava uses what is called a SafeSubscriber. Upon ""completion"" (I mean the Rx complete here not the generic english word) of the observable the subscriber is auto un-subscribed. Unless you're doing some super funky custom stuff you're good. If your observable is guaranteed to complete before your activity goes out of life cycle  you don't have to bother with the unsubscription either. But it can be tricky understanding when your observable completes so it's generally recommend that you unsubscribe onPause/onDestroyView etc. anyway.   Let's say the reference chain is App -> Activity -> View -> Observable...   Yup you're reasoning looks solid to me. That was well explained and pretty succinct btw.   I'm assuming here that no other classes reference the Observable and that the HTTP library (Retrofit) doesn't keep unnecessary references after the response is received   Yup the whole ""this is safe"" goes out of the door if a reference is being maintained from outside. At that point things get more complicated to reason about."
androiddev,3d3f3r,morihacky,1 point,Mon Jul 13 16:13:58 2015 UTC,"""Lambdas (even the ones written with retrolambda) will keep a reference to the enclosing class ONLY if they are ever used inside the scope of the lambda unlike Anonymous inner classes."" Are you sure? I thought AIC will only keep a ref if they are used inside the scope of the AIC."
androiddev,3d3f3r,leggo_tech,1 point,Tue Jul 14 19:19:25 2015 UTC,"Are you sure? I thought AIC will only keep a ref if they are used inside the scope of the AIC.   Yup, i'm pretty sure. Nope they always keep a reference."
androiddev,3d3f3r,morihacky,1 point,Tue Jul 14 19:25:56 2015 UTC,thanks for the SO link to use as a reference.
androiddev,3d3f3r,leggo_tech,3,Tue Jul 14 19:34:42 2015 UTC,Observable#subscribe returns a Subscription. You should keep it and unsubscribe in onDestroy or onDestroyView. More about RxJava leaks can be found here: https://github.com/dlew/android-subscription-leaks
androiddev,3d3f3r,ewintory,1 point,Mon Jul 13 08:51:14 2015 UTC,"Bind the observable to the view/activity/fragment lifecycle. If you implement it in a transformer, then you can effectively one-line it into a compose operator."
androiddev,3d3f3r,pandanomic,10,Tue Jul 14 08:01:45 2015 UTC,"This article clearly uses a click-bait title, but I found some of the tips really really useful, especially #3 where I learned that I can configure Android Studio to not include ""m"" in getters for class members. (getmMyObject())"
androiddev,3d3f3r,Trotzke,14,Mon Jul 13 05:18:43 2015 UTC,In my highly subjective opinion using 'm' prefix is a bad practice in the first place. Because member variables are highlighted by colour in IDE anyway. Those 'm's just pollute semantic space of your code with redundant information.
androiddev,3d3f3r,ballinismyhobby,1 point,Mon Jul 13 14:02:47 2015 UTC,Its either the preceding m's or this.'s everywhere in setters at least. E.g. a simple method called setName(String name) is either going to be mName = name or this.name = name
androiddev,3d3f3r,Trotzke,7,Mon Jul 13 14:26:08 2015 UTC,"Yes, sometimes you are forced to use this.foo, but just sometimes. With mFoo you have to use this variant every time."
androiddev,3d3f3r,OceanOfSpiceAndSmoke,0,Mon Jul 13 14:50:25 2015 UTC,"Sometimes when I'm looking for an instance variable I can't quite remember the name of, I'll just type m then Ctrl + Space and look through the list."
androiddev,3d3f3r,OceanOfSpiceAndSmoke,2,Mon Jul 13 19:05:08 2015 UTC,What's click-baity about it?
androiddev,3d3f3r,TheRealKidkudi,15,Mon Jul 13 10:17:06 2015 UTC,"Articles having their titles as ""X things I wish I knew before I <> my first <>"" are very common and usually go into the set of clickbait listicles. Did you not feel the same?"
androiddev,3d3f3r,OceanOfSpiceAndSmoke,10,Mon Jul 13 10:40:07 2015 UTC,"I agree that it is a common format. But to me, for something to be click-bait it must fail to deliver. Being a cliché isn't enough. He seemed to honestly deliver what the formulaic title implied. It's not always bad to use tropes and variations of common phrases. It can quickly establish expectations and aid context and comprehension.  Maybe you think of it differently? That click-bait is synonymous with that-kind-of-title? :)"
androiddev,3d3f3r,epigrammedic,6,Mon Jul 13 10:47:36 2015 UTC,"To be fair, he said that it has a click-baity title but that the article itself was good."
androiddev,3d3f3r,kerbals_must_die,0,Mon Jul 13 12:50:36 2015 UTC,That's a good point.
androiddev,3d3f3r,hfatih,2,Mon Jul 13 13:52:01 2015 UTC,You're right. :)
androiddev,3d3f3r,ContiGhostwood,2,Mon Jul 13 13:16:22 2015 UTC,tl;dr: OP delivers!
androiddev,3d3f3r,IWantToBeAProducer,1 point,Mon Jul 13 16:06:56 2015 UTC,Haha right!
androiddev,3d3f3r,IWantToBeAProducer,7,Mon Jul 13 17:12:08 2015 UTC,What would be wrong with holding an application context in the Application class? #1 seems to discourage against it but doesn't give any reasoning.
androiddev,3d3f3r,IWantToBeAProducer,6,Mon Jul 13 07:38:53 2015 UTC,"Application context is an exception i guess. Because there is only one instance of application class and it is running as long as the app is running, so it is not garbage collected and there is no need for it."
androiddev,3d3f3r,epigrammedic,5,Mon Jul 13 08:16:16 2015 UTC,"I was about to ask this very question in the weekly question thread. I always use the Application Context for everything except for things like dialogs which need the Activity context. It's not causing any GC to the best of my knowledge, I would like to know if there are any downsides to it."
androiddev,3d3f3r,davebren,4,Mon Jul 13 08:52:18 2015 UTC,"Nope, there's no downside AFAIK.  The Application singleton will always be in memory, so another reference to it won't hurt.  Use away!"
androiddev,3d3f3r,artem_zin,1 point,Mon Jul 13 19:51:17 2015 UTC,"I think the point is memory management. Static variables are kept for the entire lifetime of the process. This means that even when the app is completely off screen you could be holding a reference to an Activity, which could have a lot of child objects.  I think the author's point is that holding onto this memory isn't helpful to the code, and hurts the user experience by using too much memory."
androiddev,3d3f3r,greenday5494,2,Mon Jul 13 14:01:44 2015 UTC,The parent post specifically mentions the Application Context though - which is fine to hold on to (it will exist for the lifetime of the application anyway).
androiddev,3d3f3r,artem_zin,1 point,Mon Jul 13 19:03:10 2015 UTC,"Hmm... well, I mean its not like its hard to get a reference to the application context, so you don't really need a static reference. That said... it seems silly to name that as one of the ""big mistakes"" when it has no consequences... I'm not sure what to say about that."
androiddev,3d3f3r,bubbleguuum,4,Mon Jul 13 19:36:22 2015 UTC,"I didn't actually read the article, just searched for the part you mentioned.  Found this:    Note: Technically, you can hold a static reference to an application Context without causing a memory leak, but I wouldn’t recommend that you do that either.    You're right - this is kind of silly.  There's absolutely no problem with holding on to a static reference to the Application Context.  In fact, I do it in every single app, so I can do something like MyApp.get() and access instance methods without having to ((MyApp) context.getApplicationContext())."
androiddev,3d3f3r,raxel82,1 point,Mon Jul 13 19:46:05 2015 UTC,"Oh, I like that. Nice and clean."
androiddev,3d3f3r,bubbleguuum,3,Mon Jul 13 19:49:41 2015 UTC,"I am a nub and am learning android dev and this helped a lot! Just went and implemented 5 out of the 6 things in the list. Haven't bought the books though, yet."
androiddev,3d6yng,danielgomez22,3,Tue Jul 14 00:28:00 2015 UTC,What does that title even mean?
androiddev,3d6yng,bmwracer0,1 point,Tue Jul 14 03:23:08 2015 UTC,"This actually fixed a different issue for me due to espresso contrib conflicts, so thanks!"
androiddev,3d4ew2,burntcookie90,1 point,Mon Jul 13 12:59:41 2015 UTC,"I like the idea of tidying up the on OnBindViewholder, some of mine are getting rather cluttered."
androiddev,3d4ew2,charrondev,1 point,Mon Jul 13 18:56:49 2015 UTC,Yeah it's nice as that item type count starts going up
androiddev,3d4ew2,KmatthewC,1 point,Mon Jul 13 22:05:38 2015 UTC,I needed this last week. Where were you then
androiddev,3d4ew2,KmatthewC,3,Tue Jul 14 03:06:21 2015 UTC,Probably on my couch
androiddev,3d4ew2,atioxx,1 point,Tue Jul 14 03:23:22 2015 UTC,Fair enough
androiddev,3d4ew2,atioxx,1 point,Tue Jul 14 03:30:57 2015 UTC,:)
androiddev,3d4ew2,aaemman,1 point,Tue Jul 14 03:33:48 2015 UTC,"I did something really similar. Each item includes several include tags for static XML files, and another one is a Framelayout which I would inflate different views in based on the data I get from the API (~ 6 item types). It works really well, but I am trying to make it more generic.   Let me know what you think:  https://github.com/Redgram/redgram-for-reddit/tree/master/Redgram/app/src/main/java/com/matie/redgram/ui/home/views"
androiddev,3d7e43,-Matt--,3,Tue Jul 14 02:31:21 2015 UTC,"Follow the Android docs, write shitty code, finish an app. Look at the code from the previous app and figure out what needs to be better. Research solutions for what you want to improve and implement it on the next app.   Repeat steps 1-3 until you are master android developers.  Edit: It may be worth noting for step 2.. don't go trying to change everything at once, take the biggest pain point or two and focus on that the next time around."
androiddev,3d7e43,lolkittens,2,Tue Jul 14 02:38:20 2015 UTC,Use version control if you have idea about it.. Focus one thing at a time. First try to make simple app individually. Then start with next app and use version control between you three working on single app. Then focus on code quality and using a library etc.
androiddev,3d7e43,sagarsiddhpura,2,Tue Jul 14 06:02:53 2015 UTC,"In the best practices column, lots of what has already been said is pretty good. You should definitely use source control - I recommend git, and get a github account. Before you start coding, however - decide on what you're going to do and come up with the minimal success metrics (e.g., what each step looks like when it's ""done"") and stick to that. Planning is actually doing something, and some planning early will save you lots of headaches later."
androiddev,3d7e43,myaliasisrithm,2,Tue Jul 14 16:40:29 2015 UTC,definitely use source control like GIT. Consider using CI and writing tests.
androiddev,3d7e43,bart007345,1 point,Tue Jul 14 09:10:50 2015 UTC,If you plan on doing any server stuff you can use a Heroku dev account... really cuts out a lot of BS you probably won't care too much about in in the beginning - http://heroku.com
androiddev,3d6e5o,MrHeavySilence,3,Mon Jul 13 21:50:37 2015 UTC,"Read up on the VideoView  documentation, it should have everything you need to know."
androiddev,3d6e5o,EyeLostMyOldAccount,1 point,Mon Jul 13 22:53:11 2015 UTC,"Thanks EyeLostMyOldAccount, I read the documentation and managed to figure it out- even though it would've been nice if they included some code examples in their documentation."
androiddev,3d6e5o,ilikeredkidneybeans,3,Tue Jul 14 00:17:38 2015 UTC,Can you make a tutorial and put it on YouTube as it will help others if you want to. (I'm trying to not sound like couch potato)
androiddev,3d4ia1,amroth,6,Mon Jul 13 13:32:24 2015 UTC,"Company: TomTom B.V.  Job: Android Audio Embedded Software Engineer  Location: Amsterdam, The Netherlands  Allows remote: No (There's a neat relocation offer)  URL: on tomtom.jobs  We're working on new toys, with new technologies, and we want you to be part of it!  Our new awesome Amsterdam offices provide you with a great view on the most bike-friendly city of the planet, and one of the best cities of Europe! It offers an incredible experience for its citizens. Everybody speaks good English (Dutch is not actually needed at all), nightlife is very diverse and vibrant, housing is affordable, and most importantly the quality of life is incredibly high, due to the friendliness and coziness of the city and of its people.  It's a big but innovative company, and it's expanding - so it is looking for a lot of people for the most disparate roles. The posting I made is only one of the 14 currently open for Android devs and testers!  If you want more info, message me! I could also help you get a referral  Edit: sorry, remoting can only be an extraordinary option, mainly for current employees."
androiddev,3d4ia1,psyphen,5,Mon Jul 13 20:45:14 2015 UTC,"Company: Open Whisper Systems  Job: Android Software Engineer  Location: San Francisco, CA  Allows remote: No  URL: https://whispersystems.org/workworkwork/  Is the pleasure center of your brain directly wired to the experience of a slick UX or a nice animation? Do you hunt down memory leaks and StrictMode violations for fun? We're looking for someone with deep knowledge of the Android framework and an equally strong intuition for pairing beautiful app experiences with beautiful code. You'll be the architect of major features, making your code available to the world. You don't need to be a security expert; it's knowing how to make complicated systems simple to use that's at the heart of what we do.  Send us a note at workwithus@whispersystems.org. We look forward to hearing from you."
androiddev,3d4ia1,Richie681,10,Mon Jul 13 21:07:52 2015 UTC,"Company: WillowTree, Inc  Job: Android Software Engineer  Location: Charlottesville, VA & Durham, NC  Allows remote: No  URL: http://www.willowtreeapps.com/careers/android-software-engineer/  VISA: Maybe?   WillowTree. It's an amazing company with some smart people that create some really great apps. We have a fun culture and I'd get a beer with anyone here.   I've been here for about 4 years, and it's been a wild ride. Easily the most fun I've ever had at a workplace. We're looking to bring on more great minds to help us out with expansion. We have a main office in Charlottesville, VA and a satellite office in Durham, NC that we've just started. Charlottesville is a great area, full of fun and excitement. The home of UVA and many different concert venues that always have live music and stuff. Durham office is a great opportunity to get in on the ground floor at one of the best mobile development shops in the world.   Oprah once sent us a box of bees, which we promptly dumped on the Team leads head. True story(ish).    We hope to hear from you. You can also feel free to message me directly if you have any questions or concerns about the life at WillowTree or the areas we're hiring in. I'm all ears. Well not all ears. I only have two. The rest is just my face, but you know what I mean."
androiddev,3d4ia1,Rockmaninoff,7,Mon Jul 13 14:45:47 2015 UTC,"Today in True WillowTree Facts:  Every Friday or so (at our company-wide Happy Hour event), we host a game called Friday Shots.  You pay $1 for one shot from a Nerf gun to hit a gong about 20 feet away.  You can only shoot once per week, and the prize pool carries over week to week.  We've now gone two weeks without anyone hitting, and the pool is up to $75.  We use a couple of Python scripts (forked) to track our progress.  I'm hoping we up our game to an Android TV app later this summer."
androiddev,3d4ia1,TheRealKidkudi,3,Mon Jul 13 14:52:29 2015 UTC,"Oprah once sent us a box of bees, which we promptly dumped on the Team leads head.   Oh perfect, that's only my #1 greatest fear.  Edit: in an actually related note, how much experience are you looking for in an Android developer? I read your description of your test project in last week's thread, and that seems very simple to do, but I would still consider myself a total Android novice. Do you accept developers who will admittedly be doing a lot of learning on the job? Or am I looking to high here?  I've taught myself Android development and I think I'm proficient enough to write a simple app without mich problem, but I don't know what the industry standard is.  Sorry if this is more of a general career advice question than specifically about your opening(s), but I am curious and I'm sure you have good insight."
androiddev,3d4ia1,Richie681,3,Mon Jul 13 18:45:20 2015 UTC,"We hire anywhere from newbsauce to old grizzled veterans. A desire to learn and a passion for what you do is pretty important, especially for starting out. A lot of our team started out not knowing a whole lot of Android, and everyone gets trained up. Have you done any professional development before, or is it more of a hobby/side-project?"
androiddev,3d4ia1,firstsputnik,1 point,Mon Jul 13 19:04:49 2015 UTC,I checked willowtree reviews on the glassdoor and with addition of comments in this topic it looks like a dream job to me:)
androiddev,3d4ia1,Richie681,1 point,Mon Jul 13 19:35:13 2015 UTC,"It's not bad. As I mentioned, I've been here 4 years and it hasn't gotten boring or tedious. Maybe that's a perk of being client services. New things happening all the time."
androiddev,3d4ia1,TheRealKidkudi,1 point,Mon Jul 13 19:59:58 2015 UTC,"A desire to learn and a passion for what you do is pretty important, especially for starting out.   That's good to hear. That's something I have and that I think is important myself, but it's good to hear that a professional thinks the same thing - especially a team lead.  I've never done any professional development, but it's something I've been interested in for a long time which is how I came to teach myself to begin with. As much as I enjoy my current job, the real fun begins when I go home to continue learning. It is, unfortunately, a side project for me right now. I imagine that probably makes it harder for me to get into a professional Android development environment."
androiddev,3d4ia1,Richie681,2,Mon Jul 13 20:29:40 2015 UTC,"Eh, not necessarily harder. Really when looking at newer folks, it's always nice to have a few examples of your work on github. Doesn't even really need to be anything too complicated, just something to demonstrate that you know some basic stuff. That'd probably be my biggest suggestion. Have stuff that we can look at. We have a few devs that are completely self taught though.   I've run some workshops at a few schools where we made a Reddit client for folks that want to learn Android, and a few of them have used that as a basis for creating something unique. (It's really simple, and just kind of hits on some Android basics, but it's here if you want to see what I'm talking about).   Also, I'm not the team lead. That'd be /u/Rockmaninoff and yes he got covered in bees (even if they weren't real bees)."
androiddev,3d4ia1,TheRealKidkudi,1 point,Mon Jul 13 20:54:08 2015 UTC,"I see, thanks for the advice. What are some of the big things you guys (or anyone) would be looking for in an example app?  Sorry for mistaking you and Rockmaninoff, I must not have been paying close attention to usernames. These are useful answers just the same!"
androiddev,3d4ia1,Richie681,1 point,Tue Jul 14 18:56:18 2015 UTC,"Mainly it's nice to see how you handle certain things (networking, lists, basic architecture, etc)."
androiddev,3d4ia1,ch0wn,3,Wed Jul 15 01:50:04 2015 UTC,"Company: Twitter UK  Job: Android   Location: London, UK  Allows remote: Nope, sorry, but we have a lovely office  URL: https://about.twitter.com/careers/positions?jvi=oN5B0fwd,Job  I'm not a recruiter, just an engineer but reach out to me directly for questions. We have a lot of cool projects here in London and we're trying to grow the engineering team here massively."
androiddev,3d4ia1,markyosullivan,1 point,Tue Jul 14 09:56:13 2015 UTC,"It's really awesome seeing a big company having an Android based job in the UK. Do you know when the closing date is for the application and when the start date would be?  I'm due to graduate in Summer 2016, so I'm guessing I'd miss out on this one but here's hoping another vacancy will come up closer to when I'm due to graduate.  Edit: Quick question. Hows your commute to work? Do you have to travel far to get to and from work? That's my biggest fear about working in London, well that and the price of rent."
androiddev,3d4ia1,Cephas00,2,Tue Jul 14 22:43:38 2015 UTC,"London is such a huge place it'll vary a lot. My brother lives in Ealing and it takes him about 40 minutes to get to work by tube, whereas you could live in Orpington and get the train in the same amount of time."
androiddev,3d4ia1,ch0wn,2,Wed Jul 15 09:04:05 2015 UTC,"It's really awesome seeing a big company having an Android based job in the UK. Do you know when the closing date is for the application and when the start date would be?   There's no fixed closing date. We are getting a lot of applications and we may stop looking for Android devs for a while once we have hired enough new people. We try not to over-hire here and then let people sit in the corner twiddling their thumbs for a couple of months until we have a project they can work on. But don't worry, there'll be opportunities in the future. :)   Quick question. Hows your commute to work? Do you have to travel far to get to and from work? That's my biggest fear about working in London, well that and the price of rent.   I live pretty central, it takes me less than 20 minutes to get in and out of work. Some people travel in from Brighton every day which is 90 minutes per tour. I'm quite sensitive to that as well."
androiddev,3d4ia1,Cephas00,1 point,Wed Jul 15 11:24:23 2015 UTC,Nice to see something UK based. Couple of general questions - what do you think makes working at Twitter appealing? How do you find the working hours?
androiddev,3d4ia1,ch0wn,3,Wed Jul 15 09:26:54 2015 UTC,"I worked at a really small company (<15 people) before and was a bit worried when joining a massive billion dollar company, but the good thing about Twitter it to this point feels pretty small. You have access to amazing people, the individual teams tend to be really small - so you can have a lot of impact there, and then there are all the nice nice perks you get from working in the tech industry. Amazing free food, all sorts of activities and benefits.  We are super flexible with the working hours here and I'm not just saying that. I tend to be in the earliest on my team, at around 8.30 to 9; some come in at 11. Most of us leave at around 18.00 / 18.30ish. We trust each other. There isn't really much talk about when someone shows up or leaves."
androiddev,3d4ia1,_bluecup_,2,Wed Jul 15 11:20:45 2015 UTC,"This sounds really good actually, much better than I thought. I'd hit you guys up, but don't have a degree yet unfortunately. Hope you guys are going to look for more in the future, I'd really love to be working on twitter. And good luck in search for the new CEO :)"
androiddev,3d4ia1,ch0wn,1 point,Thu Jul 16 10:01:42 2015 UTC,And good luck in search for the new CEO :)   Thanks! :)
androiddev,3d4ia1,Cephas00,1 point,Thu Jul 16 10:25:21 2015 UTC,Thanks for the answer! Seems reasonable. Any pointers or information you'd give to someone considering applying?
androiddev,3d4ia1,ch0wn,1 point,Wed Jul 15 11:50:54 2015 UTC,I read a some algorithm and data structure books to prepare and did a lot of exercises on various coding challenge sites online like Hacker Rank or Project Euler. That has definitely helped me. :)
androiddev,3d4ia1,eoin_ahern,1 point,Wed Jul 15 12:06:27 2015 UTC,Hacker Rank or Project Euler. That has d   found hacker rank pretty useful.
androiddev,3d4ia1,palaktx,3,Wed Jul 15 12:19:08 2015 UTC,"Company: Phunware Job: Android Developers and Android Architects (multiple for both) Location: Austin, TX, USA Allows remote: No URL: www.phunware.com/careers VISA: Yes    If you're looking for an really fun company that is a monster in the mobile world then you should come join the team. We're looking for more talented android devs in multiple parts of our business. We're a super fun environment (table tennis, wii, snacks, etc) and we're building really cool apps and platforms. We've also been around for over 6 years so we're very stable but still have the startup feel. And everyone gets the best gear here too so don't worry about a terrible comp to work on :)    Phunware's services organization builds apps for some huge companies like CW, WWE, Olympics, NBC and more. We usually build android and iOS apps including the watch and android wear devices. Some of our customers are even looking for integrations with IoT devices (Nest, Echo, etc). The fun part of this business is that every few weeks you get to work on an entirely new app with some really cool requirements that have to be figured out and built.    The team I'm on is the platform business for Phunware and we're building the 1st mobile location as a service platform with mapping, proximity, position triangulation, location messaging, location-based dynamic content and more. Its really exciting since nothing like this exists right now and the team basically defines the vision ourselves (not some executive).    PM with your linkedin profile if you're interested and I can get you in quickly. We need quite a few people asap.  If you have any questions about what we need or the company, PM me and i'll fill you in."
androiddev,3d4ia1,benjaminlhaas,2,Tue Jul 14 21:18:30 2015 UTC,"Company: Control Group (http://www.controlgroup.com)  Job: Android Developers  Location: New York, NY, USA  Allows remote: No  Visa: Maybe  URLs: http://www.controlgroup.com/careers-embedded-android-developer.html, http://www.controlgroup.com/careers-android-developer.html  Hi, I'm a software engineer and team lead at Control Group. We're the company behind LinkNYC -- we're turning all of NYC's outdoor pay phones into free, high speed wifi hotspots.   We also recently announced that we are merging with Titan to form a new company called Intersection, and are being acquired by a group of investors led by Sidewalk Labs, the recently launched venture by Dan Doctoroff and Google. It's shaping up to be incredibly exciting - it will definitely change the face of this city and many others around the world. There are opportunities to make a big contribution to the project, including significant Android work.  Relevant Links:   http://www.controlgroup.com/ http://www.intersection.com/ http://www.sidewalkinc.com/ http://www.link.nyc/ http://titan360.com"
androiddev,3d4ia1,vinnie_james,2,Tue Jul 14 15:16:52 2015 UTC,"Company: Vungle  Job: Software Engineer, Android  Location: San Francisco, CA, USA  URL: Android Engineer  Responsibilities:  Day to day, this person will make sure our Android SDK is bug free and is following the best practices as specified by Google, as well as keeping our SDK feeling ""native"" within an app experience (this means, help us achieve a good UX, with a native feel and something that Google would've designed).  Essential Experience:  Java.  Shell scripting. Git or another version control system. Experience building libraries is a plus.     Perks:  We have a fun, entrepreneurial culture and strive to provide awesome benefits that reflect our premier status accordingly. Bring your dog(s) to work. Laugh and have fun with a company full of cool people making crazy things happen. Ability to play games and sports from ping pong to league dodgeball. Invent and print anything you can imagine on our 3D printer. Expenses paid such as gym, transportation, etc. Matching 401K. Great Health care, Vision, and Dental plans. Work for a startup that is actually making money and building the next generation advertising platform! Did we mention that we’re backed by Google Ventures, AOL Ventures, and 500 Startups?"
androiddev,3d62cv,LandofBoz88,2,Mon Jul 13 20:25:49 2015 UTC,Not Android related but still quite horrendous and I have to work with it every day: A database interface where EVERY method is called getData and has no comments and all parameters have the same names. There are abour 100 such methods spread over multiple interfaces (all accessing the same database). Have a good time to find out what the one getData does that gets called with one mere int. Most likely something completely different from the one that takes a float...  Or a core library where the developer removed all comments and even the names of the parameters to obfuscate the library so that people stop using it without asking him (most bugs revolved around people using those functions without knowing what they do)...
androiddev,3d62cv,Fellhuhn,1 point,Tue Jul 14 05:06:39 2015 UTC,The second one would get tortured until he would reveal it's secrets and then gruesomely murdered.
androiddev,3d62cv,ciny,1 point,Tue Jul 14 17:04:36 2015 UTC,I had this guy that gave me the api documentation in a pdf with 50 pages. Horrible to navigate. Couldn't interact and test calls. Spent a lot of time trying to get the information i needed. Not to mention object structure...  I've come to appreciate public apis so much. My favorite must be the  foursquare api
androiddev,3d7ej3,nickfhs,1 point,Tue Jul 14 02:34:59 2015 UTC,I am also interested in this!
androiddev,3d7ej3,sagarsiddhpura,1 point,Tue Jul 14 06:05:31 2015 UTC,"Depending on which Android version you are, the camera information can be read by the new Camera2.class, which is much more capable than the old Camera.class http://developer.android.com/reference/android/hardware/camera2/package-summary.html  The true problems are: a) some non-rooted devices simply ignore attached cameras or any extra usb devices besides storage, keyboards etc. b) not every usb camera itself marks itself to the usb stack as a camera c) default supplied camera tools (not extra installed by the market) maybe hardwired to usb ids provided in the official kernels.  With  a) you can't do anything without a own rom and maybe extra drivers. this is supported by some earlier stock rom experiments, where without an included driver by the manufacturer, the apps could not find the camera(s). b) you can't do without adding an own camera app that forces a camera access on a non-camera device (plus everything on a) c) you also would need an own camera app or custom rom with selectable ids. most camera apps only allow swapping back and forth, not any camera.  I would guess just experiment with it, ideally on a full working custom rom where you have some control over usb.  Also read this for deeper understanding: https://developer.android.com/guide/topics/connectivity/usb/index.html"
androiddev,3d9exl,changingminds,2,Tue Jul 14 15:11:15 2015 UTC,"With large userbase, Ads would be worth considering."
androiddev,3d9exl,sagarsiddhpura,3,Wed Jul 15 07:12:03 2015 UTC,"What? When google and facebook do it, then it's fine?   They don't. Neither does Snapchat.  As for your question. You can approach data brokers or marketing, sales for relevant companies.   With that being said though there are laws dealing with user privacy and it's not just as simple as putting a line in your ToS. Many different jurisdictions have different privacy laws. You also have to ask yourself whether the data you have is even valuable."
androiddev,3d7bqp,SomeoneisWondering,1 point,Tue Jul 14 02:12:02 2015 UTC,"Perhaps only upload the location to the server when they are more than 500 ft from their last uploaded location?  You would lose some precision but 500 ft still seems like enough to find a lost kid.  Off the top of my head the two ways I can think to do this would be A) set up a geo fence each time or B) calculate distance to the last point by converting to ECEF coordinates and doing some trig.  edit: you may need to do something smart for large groups of kids walking together, at the very least stagger the distance updates occur at to prevent pulsing."
androiddev,3d7bqp,FearTheCron,1 point,Tue Jul 14 03:27:04 2015 UTC,Mouseover to view the metric conversion for this comment
androiddev,3d7bqp,ConvertsToMetric,1 point,Tue Jul 14 03:27:25 2015 UTC,"ECEF:       ECEF (""Earth-Centered, Earth-Fixed""), also known as ECR (""Earth Centered Rotational""), is a Cartesian coordinate system, and is sometimes known as a ""conventional terrestrial"" system.  It represents positions as an X, Y, and Z coordinate. The point (0,0,0) is defined as the center of mass of the Earth,  hence the name Earth-Centered. Its axes are aligned with the International Reference Pole (IRP) and International Reference Meridian (IRM) that are fixed with respect to the surface of the Earth,   hence the name Earth-Fixed. This term can cause confusion since the Earth does not rotate about the z-axis (unlike an inertial system such as ECI), and is therefore alternatively called ECR.    Image i - Earth Centered, Earth Fixed coordinates in relation to latitude and longitude.     Relevant: Geodetic datum | Geographic coordinate conversion | Geographic coordinate system | Earth-centered inertial   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
androiddev,3d7bqp,autowikibot,1 point,Tue Jul 14 03:27:51 2015 UTC,"Maybe you could reduce the frequency? If they could potentially get lost, they would have to move away quite far. Every minute?"
androiddev,3d7bqp,bart007345,1 point,Tue Jul 14 06:20:51 2015 UTC,Also consider the scenario where there is no coverage or battery is low. You can impement logic based on dynamic polling interval. Increase polling interval if kid is moving too fast(can be determined by two previous co-ordinates) and battery is healthy. Polling interval may be increased if two co-ordinates are not much far and battery is low!
androiddev,3d7bqp,sagarsiddhpura,1 point,Tue Jul 14 07:02:07 2015 UTC,"On one of our projects we needed to do this a couple of ways: To provide real time location information for users and also log/show where they were before we lost their ""track"".   We had a database where we'd write position location information for each user, updated every 5 seconds or 5 meters of movement (our requirements needed to provide precise location info - you could probably reduce that to 30 sec and 50 meters).   When a user would grey out due to lost GPS position or connectivity, we would still show their icon on the map but change its state (grey out) to show last known position and stale data.   Every icon would display in a pop up view details for that user and time of last report, as well as the exact coords.   We did not use ECEF, but instead HAE (height above ellipsoid).   There is no need to do anything different whether your users are in groups or not. Only issue you might have is if you try to show position locations in excess of 250 users at a time-you could run into some performance issues depending on the device, map, and map engine. I am a huge fan of clustering-if more than xx% of one icon overlaps another then you show one icon for the group with an indicator of how many your new cluster icon represents. That method allowed us to show 15,000+ symbols on a Froyo single processor android phone with zero delay. Without clustering, it took 30+ min for the map to even open.  We wrote our own map app/engine as part of our delivery."
androiddev,3d4yh6,Cyber34,2,Mon Jul 13 15:46:02 2015 UTC,"put the frame layout in a nestedscrollview then have the child of the framelayout inside a scrollview. I have pretty much exactly this, where I'm adding a fragment to the framelayout programmatically and all is working fine.  See this as a good example: https://github.com/chrisbanes/cheesesquare"
androiddev,3d4yh6,dj_darkhorse,1 point,Fri Jul 17 03:52:44 2015 UTC,"Try add   app:layout_behavior=""@string/appbar_scrolling_view_behavior""  into the xml of items like the framelayout I've found this helps with a similar situation  Don't use the nested scrollview as they don't work with recyclerviews.  Also make sure your build.gradle is using at least version:     compile 'com.android.support:recyclerview-v7:22.2.0'"
androiddev,3d4yh6,andrewpmoore,1 point,Wed Jul 15 08:02:21 2015 UTC,"I did try this and seemed to get no reaction, and I was using the latest version, I ended up just giving up on CoordinatorLayout for now and wrote my own custom implementation of scroll handling."
androiddev,3d757x,NeonXero,1 point,Tue Jul 14 01:20:34 2015 UTC,It seems like silly mistake somewhere. Also add list.removeAll() and List.addAll() and then notifyDataSetChanged to double check the freshness of data. Try cleaning and re-organizing code and you will find the mistake.
androiddev,3d4ja3,harry12326,6,Mon Jul 13 13:42:10 2015 UTC,"Loaders, content providers, urimatchers, etc aren't required to communicate with the database. Just call openOrCreateDatabase and then communicate with execSQL for something quick and dirty.  Try and wrap your head around loaders and content providers though. It'll really, really pay off later when you need to implement efficient loading, widgets, sharing data with other applications, sync adapters, or enabling search within your application."
androiddev,3d4ja3,hitler_kardashian,1 point,Mon Jul 13 14:05:43 2015 UTC,well i heeded your advice and actually learned content providers. Thanks!
androiddev,3d4ja3,artem_zin,5,Sat Jul 18 18:16:16 2015 UTC,"If you don't need to share your data between different processes and apps, you can just use SQLiteDatabase or other dbs like Realm.  But if you want to use full power of multiprocess application — hide your db under ContentProvider.  Just think about ContentProvider as REST API for CRUD operations, for example if your app can work with multiple accounts, you can  access it's data as regular query to the REST API (via ContentResolver of course): content://your.app/emails/?accountId=2 and so on."
androiddev,3d4ja3,leggo_tech,2,Mon Jul 13 15:34:27 2015 UTC,oh shit. never thought of ContentProvider that way. thanks
androiddev,3d4ja3,lyfted,1 point,Mon Jul 13 19:26:45 2015 UTC,Really great way to look at the content providers. It is only because of this that i was able to learn content providers. Thanks a ton!
androiddev,3d4ja3,prlmike,2,Sat Jul 18 18:17:17 2015 UTC,"Arca core, builds on top of these items, while removing many of the confusing elements.  https://github.com/cfmobile/arca-android/tree/master/arca-core"
androiddev,3d4ja3,CuriousCursor,1 point,Mon Jul 13 14:38:25 2015 UTC,Check out dbflow
androiddev,3d4ja3,mecid,1 point,Mon Jul 13 21:59:42 2015 UTC,Ollie
androiddev,3d4ecp,nomadProgrammer,4,Mon Jul 13 12:54:02 2015 UTC,"I started doing Swift back in January and am honestly very impressed and happy with the language. It's pretty easy to pick up (no matter what background you're from) and it is a pleasure to use. I generally find I have to write a lot less boilerplate code in order to accomplish something with it and I get my tasks done faster. Since version 1.2 it's got a lot more stable and I think with version 2 coming soon it'll solidify it as a great language choice.  My job atm is 50% Android and 50% iOS so I alternate between the two regularly and I enjoy my Swift time more - it's just a newer language that has a lot of nice features and it doesn't have the baggage of Java. Saying that, I do prefer writing Android apps more.  To answer your question - I think learning iOS with Swift will be easier than how your previously had to do it with Obj-C. The fact that you knew another programming language before that can only help you. It won't harm you in any way.  P.S. If you've had a look at Kotlin - it has a lot in common with Swift - I've even seen people calling it ""The Swift of Android"".   EDIT: Since there has been some backlash on my final statement: I meant it purely in terms of the syntax of the languages."
androiddev,3d4ecp,eValval,3,Mon Jul 13 13:30:30 2015 UTC,"java => kotlin is NOT the same as obj-C => Swift.  Obj-C => Swift is like: ""thank gods, now we have an entire new shining world with syntax that humans can understand!""  Java -> Kotlin is like: ""wow, a couple of new trix! Nice!""   Java is already like Swift. Kotlin just adds some nice syntax sugar."
androiddev,3d4ecp,jackhexen,2,Mon Jul 13 14:28:30 2015 UTC,"It's more than just syntactic sugar, some of the things shown in this video should make that point:  https://www.youtube.com/watch?v=-BvN0X5tqjw  That said, I don't think it is the swift of android, they're two different things."
androiddev,3d4ecp,davebren,2,Mon Jul 13 17:08:20 2015 UTC,Java is already like Swift.   ಠ_ಠ
androiddev,3d4ecp,stackinpointers,2,Tue Jul 14 01:01:07 2015 UTC,"To be fair, it's a LOT of nice syntax sugar. Lambdas and val someIntValue = 0 are just scratching the surface."
androiddev,3d4ecp,Wispborne,1 point,Mon Jul 13 14:54:02 2015 UTC,Fair enough - I can agree with that description.
androiddev,3d4ecp,eValval,1 point,Mon Jul 13 14:41:59 2015 UTC,"Objective C syntax was perfectly readable. It was C, except for the bits in square brackets. Those were Smalltalk messages."
androiddev,3d4ecp,s73v3r,3,Tue Jul 14 05:51:40 2015 UTC,don't call it that
androiddev,3d4ecp,ZakTaccardi,1 point,Mon Jul 13 13:37:46 2015 UTC,nice thanks for the explanation
androiddev,3d4ecp,bubbleguuum,1 point,Mon Jul 13 14:25:13 2015 UTC,'The Swift of Android' would rather be Swift compiling to Java bytecode.
androiddev,3d4ecp,KapaLala,10,Mon Jul 13 14:49:20 2015 UTC,"When iOS developers say they ""like swift"" what they really mean is ""good riddance, objective-C""."
androiddev,3d4ecp,hesham8,2,Mon Jul 13 13:43:49 2015 UTC,"I used to do some non-Android Java work before I jumped ship to iOS.   A lot of new iOS developers look at Objective-C and start sweating. They don't seem to illicit the same reaction about Swift. Having built applications with both languages, they're actually more similar than dissimilar: you can write Obj-C code as Swift by just removing the pointers and square braces, replacing explicit variable types for ""var"" or ""let"" along the way.   Swift in general is easier than Java, I would say. It has a somewhat Pythonic feel, but has the added benefit of being a compile language. Give it a shot -- picking up the language takes no time. Learning the frameworks and APIs inherent in iOS/OSX development may take ages."
androiddev,3d4ecp,wapz,1 point,Tue Jul 14 15:39:11 2015 UTC,"I've been learning swift for a little while now and think it's a fairly easy language to pick up. I'd say Android and iOS are definitely quite different (as expected), but the learning curve should be much less than jumping into objective C (you'll probably want to learn the basics of it, though. A lot of tutorials I see are still only in Obj-C)."
androiddev,3d4ecp,hitler_kardashian,1 point,Mon Jul 13 14:08:27 2015 UTC,"It's a pretty sweet language. I never encountered Optionals before Swift so that was a bit interesting but overall, it's an easy language to grasp."
androiddev,3d4zo6,internetgoblin,4,Mon Jul 13 15:54:40 2015 UTC,"Check LibGDX for Java, Cocos2D-X for C++ or MonoGame/CocosSharp for C#."
androiddev,3d4zo6,pjmlp,1 point,Mon Jul 13 16:08:19 2015 UTC,I'll check out LibGDX thanks.
androiddev,3d4zo6,nextqc,2,Mon Jul 13 16:20:15 2015 UTC,"I use OpenGL for mobile. Using Eclipse, I can build the program and emulate it directly on my phone as soon as its done transfering."
androiddev,3d4zo6,aft3rmath,1 point,Mon Jul 13 17:53:28 2015 UTC,"Second for libgdx. Lots of features, great documentation, and an active irc channel."
androiddev,3d4zo6,ibisum,1 point,Mon Jul 13 17:02:54 2015 UTC,MOAI:  http://getmoai.com/  Its awesome.
androiddev,3d4zo6,dreamroadproductions,1 point,Mon Jul 13 17:54:19 2015 UTC,"And there is always a easy way to it. Take a look at Scirra's Contruct 2. The games use webview, i think, but the ""programming"" is like playing with Lego. I did my first game using Construct2, it was fun and the result was good."
androiddev,3d49f2,fadelakin,1 point,Mon Jul 13 12:02:46 2015 UTC,"How would I manually space out dynamically injected TextViews? I'm currently injecting TextViews into a LinearLayout based on how many JSONObjects are in a JSONArray that is returned from the server.   I want the layout to be like this: [TextView] [TextView] [TextView] because I want space between the textviews since the TextView background color is different from my fragment background color. I've tried everything but my TextViews are still jumbled together so they look like: [TextView][TextView][TextView]. The space that I want inbetween them isn't there.   Is there a way to add the empty space between them or no?  Edit: I have LayoutParams on the dynamically injected TextViews. 0 is the width, LayoutParams.WRAP_CONTENT is the height and 10f is the padding."
androiddev,3d49f2,ErectionalOfficer,1 point,Tue Jul 14 00:18:19 2015 UTC,"Do it programatically by extending LinearLayout and adding a TextView + View (empty view with width 1dp or whatever) for each one of your JsonObjects.  Otherwise it sounds like you want a horizontal list, so you can use an adapter to input your template view that contains text plus some spacing."
androiddev,3d49f2,fadelakin,1 point,Tue Jul 14 00:35:45 2015 UTC,Yeah. I want a horizontal list but the amount of things in that list is capped at 4 so I didn't feel like I needed a listview or recyclerview since the dataset is only 4 objects.   Like what I'm trying to replicate is sort of how tags look on StackOverflow where they're in a horizontal list but they are still individual things. I hope that makes some sense.
androiddev,3d49f2,ErectionalOfficer,1 point,Tue Jul 14 00:47:27 2015 UTC,I wouldn't bother with an adapter either. I simply added it as an alternative to the first option as I was not sure how many items you were taking about.
androiddev,3d49f2,slaystation25,1 point,Tue Jul 14 02:09:50 2015 UTC,"I'm looking for project suggestions that have well implemented tests, and can be used to learn the concepts and implementations of testing on Android."
androiddev,3d49f2,LadyTesla,1 point,Mon Jul 13 22:53:28 2015 UTC,"I'm really confused on how to use Caldroid in my project. When I used graphView lib from jjoe64, there was a build in custom view that was in my layout's xml, and I referenced it from that. And they had an example on how to put up points.   When I use caldroid there are about 5 different layouts, custom_cell, and other fragments that I'm not quite sure how it all goes together, and there is no custom view to put into my layout.   Any links to someplace that has a ELI5 version of how to set it up? At this point I'd be willing to switch to any custom calendar lib."
androiddev,3d49f2,schwiz,1 point,Mon Jul 13 21:50:01 2015 UTC,How on earth do you change the Spinner arrow icon? I know it can be changed with the theme attribute but what in the theme changes the arrow graphic?
androiddev,3d49f2,Asalas77,1 point,Mon Jul 13 20:21:43 2015 UTC,"Does anyone know how to call a method on checkbox select, but after the animation is finished?"
androiddev,3d49f2,LadyTesla,1 point,Mon Jul 13 20:11:16 2015 UTC,"If you're working with the method for when the checked value is changed, you probably aren't seeing the check on the GUI change since you're not returning true/false and setting the value after you do your foobar() actions.  Check out this link."
androiddev,3d49f2,Asalas77,1 point,Mon Jul 13 21:53:40 2015 UTC,The problem is I have a change listener on my checkbox and when onChange() is called I want to remove the item from recyclerView. But when I call remove inside onChange() it gets removed instantly and checkbox animation is not visible.
androiddev,3d49f2,mnjmn,1 point,Mon Jul 13 22:03:12 2015 UTC,Have you tried ViewCompat.postOnAnimation?
androiddev,3d49f2,Asalas77,1 point,Mon Jul 13 22:56:51 2015 UTC,"Yeah I did, but it either doesn't help or I don't know how to use it. When I set it like      holder.checkBox.postOnAnimation(Runnable ...); it triggered  the moment my view was created. Is this how I'm supposed to set it?"
androiddev,3d49f2,mnjmn,1 point,Mon Jul 13 23:36:08 2015 UTC,"Reading the description again, it probably won't help. It doesn't say it would wait until the animation finishes. Maybe you could call getAnimation() on the checkbox then attach an Animation.AnimationListener and put the remove logic in the onAnimationEnd()."
androiddev,3d49f2,guillaumeyp,2,Tue Jul 14 01:28:09 2015 UTC,"Have a custom view which extends LinearLayout. I'd like to set a selectable background as I always do with   android:background=""?attr/selectableItemBackground""   but when I touch it, nothing happens. What should I do instead?"
androiddev,3d49f2,KiDoki,3,Mon Jul 13 19:21:19 2015 UTC,"This should still work. Make sure you set an OnClickListener. If you don't need one, then you have to explicitly set clickable=""true"" for it to work."
androiddev,3d49f2,guillaumeyp,2,Mon Jul 13 19:40:06 2015 UTC,Woops. Thank you!
androiddev,3d49f2,hozayhandsome,2,Mon Jul 13 20:16:27 2015 UTC,How would I go about making the entire navigation drawer view  scrollable? As seen with Relay and Reddit Sync. Having a listview inside a scrollview doesn't seem right to me. Thanks.
androiddev,3d49f2,guillaumeyp,1 point,Mon Jul 13 16:47:52 2015 UTC,"Wait, it's not the default behaviour? Do you use NavigationView or a custom Drawer?"
androiddev,3d49f2,hozayhandsome,1 point,Mon Jul 13 17:48:23 2015 UTC,I was using NavigationView but the listview was scrolling instead of the entire view.
androiddev,3d49f2,farmasek,1 point,Mon Jul 13 17:59:21 2015 UTC,"Hi, what is the easiest way to create material desighn divider (just line with fancy design) ? For example full-bleed from google page"
androiddev,3d49f2,Asalas77,4,Mon Jul 13 15:53:54 2015 UTC,"Create a layout file:   <?xml version=""1.0"" encoding=""utf-8""?> <View xmlns:android=""http://schemas.android.com/apk/res/android""     android:orientation=""vertical"" android:layout_width=""match_parent""     android:layout_height=""1dp""     android:paddingTop=""8dp""     android:paddingBottom=""8dp""     android:background=""@color/separator""> </View>   and then simply include it wherever you want it:   <include layout=""@layout/separator""/>   edit: actually I'm not sure if margin instead of padding wouldn't be better"
androiddev,3d49f2,farmasek,1 point,Mon Jul 13 16:36:38 2015 UTC,"Didn't try padding, but margin seems fine so far, thank you."
androiddev,3d49f2,zmarkan,1 point,Tue Jul 14 14:21:34 2015 UTC,"Hello,  does anyone know of a url library/class similar to HttpUrl from Square's OkHttp, that would support custom schemas as well?   Obviously using Java.URI is an option but I really like the nice way HttpUrl handles query params and generally brings common sense into it.   If nothing exists I'll probably just grab the HttpUrl source and modify it to use other schemas."
androiddev,3d49f2,schwiz,2,Mon Jul 13 14:05:18 2015 UTC,Use android.net.Uri
androiddev,3d49f2,kaisims,2,Mon Jul 13 20:19:51 2015 UTC,"Hello again! I am getting a   java.lang.NullPointerException: Attempt to invoke interface method 'int java.util.List.size()' on a null object reference""   At my Project. I am trying to add content from a Json with Volley to a listview in a fragment, but it just wont work. I still have to implement a imagecacher and onClicklisteners, urgh.   Code is in a reply!  If noone find an answer or its too long for you to read through it, di you have a nice tutorial to accomplish that?  Thanks again!"
androiddev,3d49f2,kaisims,1 point,Mon Jul 13 12:07:58 2015 UTC,"My Fragment:  public class HomeFragment3 extends android.support.v4.app.Fragment {   public HomeFragment3() {     // Required empty public constructor }  List<Brands> brandsList; String url = ""http://www.json-generator.com/api/json/get/cdTCIHRNTS?indent=2""; ListView mListView; private void requestData(String uri){     StringRequest request = new StringRequest(uri,              new Response.Listener<String>() {                 @Override                 public void onResponse(String response) {                     brandsList = ContentJsonParser.parseFeed(response);                     updateDisplay();                 }             },              new Response.ErrorListener() {                 @Override                 public void onErrorResponse(VolleyError ex){                     Toast.makeText(getActivity(),ex.getMessage(),Toast.LENGTH_LONG).show();                 }             }     );     RequestQueue queue = Volley.newRequestQueue(getActivity());     queue.add(request); }  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container,                          Bundle savedInstanceState) {     // Inflate the layout for this fragment     View view = inflater.inflate(R.layout.fragment_home_fragment3, container, false);      if (isOnline()) {         requestData(url);     } else {         Toast.makeText(getActivity(),getActivity().getString(R.string.common_google_play_services_network_error_text), Toast.LENGTH_SHORT).show();     }     mListView = (ListView) view.findViewById(R.id.material_listview);      return view; }  public boolean isOnline() {     ConnectivityManager cm = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);     NetworkInfo netInfo = cm.getActiveNetworkInfo();     if (netInfo !=null && netInfo.isConnectedOrConnecting()) {         return true;     }     else return false; } protected void updateDisplay() {      BrandsAdapter adapter = new BrandsAdapter(getActivity(), R.layout.custom_card,brandsList);      mListView.setAdapter(adapter); } }       My BrandsAdapter:  public class BrandsAdapter  extends ArrayAdapter<Brands> {  private Context context; private List<Brands> brandList;  private LruCache<Integer, Bitmap> imageCache;  public BrandsAdapter(Context context, int resource, List<Brands> objects) {     super(context, resource, objects);     this.context = context;     this.brandList = objects;      final int maxMemory = (int)(Runtime.getRuntime().maxMemory() /1024);     final int cacheSize = maxMemory / 8;     imageCache = new LruCache<>(cacheSize); }  @Override public View getView(int position, View convertView, ViewGroup parent) {      LayoutInflater inflater =             (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);     View view = inflater.inflate(R.layout.custom_card, parent, false);      Brands mbrand = brandList.get(position);     //TextView tv = (TextView) view.findViewById(R.id.category_text_view);    // tv.setText(mbrand.getName());      CustomCard card = new CustomCard(context);     card.setTitle(mbrand.getName());      return view; }   class FlowerAndView {     public Brands brand;     public View view;     public Bitmap bitmap; } }   My CustomCard Layout:  <android.support.v7.widget.CardView xmlns:card_view=""http://schemas.android.com/apk/res-auto""     android:id=""@+id/cardView""     style=""@style/MainCardView""     card_view:cardCornerRadius=""@dimen/card_corner_radius"">      <LinearLayout         android:id=""@+id/category_container""         android:layout_width=""wrap_content""         android:layout_height=""wrap_content""         android:layout_weight=""1.0""         android:gravity=""center""         android:layout_gravity=""center_horizontal""         android:orientation=""vertical"">          <ImageView             android:id=""@+id/category_image""             android:layout_width=""wrap_content""             android:layout_height=""0.0dp""             android:layout_weight=""1.0""             android:scaleType=""centerInside"" />          <TextView             android:id=""@+id/category_text_view""             android:layout_width=""wrap_content""             android:layout_height=""wrap_content""             android:layout_gravity=""center""             android:ellipsize=""end""             android:gravity=""center""             android:lines=""2""             android:textColor=""@color/primary_text"" />     </LinearLayout>  </android.support.v7.widget.CardView>   And Finally my Fragment Layout:  <FrameLayout xmlns:android=""http://schemas.android.com/apk/res/android"" xmlns:tools=""http://schemas.android.com/tools"" android:layout_width=""match_parent"" android:layout_height=""match_parent""  tools:context=""com.elfecom.android.spider.HomeFragment3"">  <ListView xmlns:android=""http://schemas.android.com/apk/res/android""     android:id=""@+id/material_listview""     android:layout_width=""fill_parent""     android:layout_height=""wrap_content""      /> </FrameLayout>"
androiddev,3d49f2,BlueArc,1 point,Mon Jul 13 12:13:01 2015 UTC,"The retrieved list is most likely null.    Check out at which line the error is thrown and prevent it, like  if (objects != null) {    this.brandList = objects; [...]   Initialize your list as well.  private List<Brands> brandList = Collections.emptyList();"
androiddev,3d49f2,if_man_is_5,1 point,Mon Jul 13 12:30:37 2015 UTC,"The retrieved list is most likely null.   Yep, sounds like a bug in the ContentJsonParser, whatever that is, since the code isn't here.  Since the actual source json looks perfectly cromulent.  (OP, maybe just use GSON instead and make your life easier there, too)"
androiddev,3d49f2,kaisims,1 point,Mon Jul 13 13:24:07 2015 UTC,"Here you go:  public class ContentJsonParser {      public static List<Brands> parseFeed(String content) {         try {             JSONArray ar = new JSONArray(content);             List<Brands> brandlist = new ArrayList<>();              for (int i = 0; i < ar.length(); i++) {                 JSONObject obj = ar.getJSONObject(i);                 Brands brands = new Brands();                  brands.setPage(obj.getInt(""page""));                 brands.setId(obj.getInt(""id""));                 brands.setKey(obj.getString(""key""));                 brands.setName(obj.getString(""name""));                 brands.setImage(obj.getString(""image""));                 brands.setPrio(obj.getInt(""prio""));                  brandlist.add(brands);             }             return brandlist;         } catch (JSONException e) {             e.printStackTrace();             return null;         }     } }   Could you give me a good tutorial or documentation for Gson? I'm still a noob in Android Dev ;)"
androiddev,3d49f2,if_man_is_5,2,Mon Jul 13 13:36:38 2015 UTC,"So here's your problem, the output of your JSON is not actually an array -- take a closer look.  You get an object that contains page number, the items per page, etc, AND it has an array of the actual objects.  Also, you shouldn't be using e.printStackTrace() or else you'd be seeing the JSONException in your logs.  That would've been the dead giveaway for you because you were trying to get an incompatible type from the JSON. But the other dead giveaway here is you're going through the exception path because that's the only place in your code where a null would get returned -- otherwise you'd pass back a non-null reference to a list that exists, but is empty.  Android's Log calls let you pass in the exception and it'll get put in the logcat for you. Try Log.e(LOG_TAG, ""omg a json exception!"", e)  So just to get you going, use new JSONObject(String content) instead.  Then call getJSONArray(""items"") on that object and iterate over it.  That having been said, here is a simple-ish Gson example that looks helpful for your situation, especially because it's the same use case of taking an object that wraps the list.  If you use Gson here you'll need to define two classes, one being a class to model the top-level result and then one for your brand item.  public class ResultPage {   int totalItems;   int totalPages;   int itemsPerPage;     int page;   List<Brand> brands;     // make your accessors here, i left that out for brevity }  public class Brand {   URL image;   int prio;   String key;   String name;    //and accessors here too }   Then you can just do something like  Gson gson = new Gson(); ResultPage results = gson.fromJson(content, ResultPage.class); List<Brand> brands = results.getBrands();   If you're going to do a lot of parsing then save your Gson object somewhere because instantiating it every time is expensive."
androiddev,3d49f2,kaisims,1 point,Mon Jul 13 13:54:31 2015 UTC,"You were right. With the log call I can see   ""of type org.json.JSONObject cannot be converted to JSONArray""   in the logcat.   Then I added the Json Array outside of the for-loop, changed it, how you said and yes it doesnt crash anymore! Woohoo (I doesnt display the content but it doesnt crash, one step forward!)  Thanks man, have some virtual extrakarma!"
androiddev,3d49f2,kaisims,1 point,Tue Jul 14 10:35:17 2015 UTC,"Thanks for answering, I forgot my error log, whoops!  07-13 15:00:22.801  23599-23599/com.elfecom.android.spider E/AndroidRuntime﹕ FATAL EXCEPTION: main     Process: com.elfecom.android.spider, PID: 23599     java.lang.NullPointerException: Attempt to invoke interface method 'int java.util.List.size()' on a null object reference             at android.widget.ArrayAdapter.getCount(ArrayAdapter.java:330)             at android.widget.ListView.setAdapter(ListView.java:487)             at com.elfecom.android.spider.HomeFragment3.updateDisplay(HomeFragment3.java:121)             at com.elfecom.android.spider.HomeFragment3$1.onResponse(HomeFragment3.java:53)             at com.elfecom.android.spider.HomeFragment3$1.onResponse(HomeFragment3.java:49)             at com.android.volley.toolbox.StringRequest.deliverResponse(StringRequest.java:60)             at com.android.volley.toolbox.StringRequest.deliverResponse(StringRequest.java:30)             at com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable.run(ExecutorDelivery.java:99)             at android.os.Handler.handleCallback(Handler.java:739)             at android.os.Handler.dispatchMessage(Handler.java:95)             at android.os.Looper.loop(Looper.java:135)             at android.app.ActivityThread.main(ActivityThread.java:5274)             at java.lang.reflect.Method.invoke(Native Method)             at java.lang.reflect.Method.invoke(Method.java:372)             at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:909)             at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:704)             at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:117)"
androiddev,3d49f2,BlueArc,1 point,Mon Jul 13 13:01:05 2015 UTC,"So, the updateDisplay method is throwing an NPE, because brandList is null.  Prevent that bug from happening in any case, and track back the reason why it didn't get initialized in the onResponse method,  brandsList = ContentJsonParser.parseFeed(response); //I'd say you have a problem here"
androiddev,3d4hdu,getapost,2,Mon Jul 13 13:24:05 2015 UTC,What does this add that Calligraphy doesn't do for you?
androiddev,3d4nzv,Cogniphile,7,Mon Jul 13 14:23:54 2015 UTC,You'll want to run a service in the foreground. By running in the foreground your service gets a higher priority (higher than anything other than what the user is currently looking at). This means your service is way down on the list of stuff to kill when the operating system needs to reclaim resources. The tradeoff is that you need to leave a notification up while your app is running in this mode. This way the user knows your app is still running and holding resources.
androiddev,3d4nzv,GaryViceroy,2,Mon Jul 13 18:48:43 2015 UTC,You should be using a service for this
androiddev,3d4nzv,hitler_kardashian,1 point,Mon Jul 13 14:54:00 2015 UTC,Any explanation as to why?
androiddev,3d4nzv,th3bard,2,Mon Jul 13 15:23:57 2015 UTC,"Android kills processes to make way for others in RAM by order of importance. Ranking is based largely on user interaction (e.g. first kill apps that were least recently used) and cues from the apps (the app has one or more Activity or Service in an active state).  Both Activity and Service are state machines and are registered in the manifest. Activities are mainly geared towards UI and their lifecycle matches that, whereas Services are for background processing and to be used as binder endpoints (for inter-process communication).  Read these to get more info:  http://developer.android.com/guide/components/services.html  http://developer.android.com/reference/android/app/Service.html"
androiddev,3d4nzv,Shayba,1 point,Mon Jul 13 16:58:01 2015 UTC,"I think I need to make use of this:  http://developer.android.com/guide/topics/manifest/activity-element.html#always  Defaults to false, and I think I mean for it to be true."
androiddev,3d4nzv,j_m_studios,2,Mon Jul 13 14:30:59 2015 UTC,I am betting all that does is preserve your bundle from on save instance state. Your app still will be closed by android after a while and will stop logging data. How long it takes to kill the app is dependent upon the device.  This leaves you with two problems. Logging data and restoring your activity state. This option may work fine for the activity state but not the logging.  To have something actually run in the background you need to use a service. If its only periodic logging then using the alarm manager to wake your app will work better (nicer on the battery).
androiddev,3d4nzv,efalk,1 point,Mon Jul 13 17:02:51 2015 UTC,"GaryViceroy and hitler_kardashian are right.  Once an activity leaves the screen, there's no guarantee that it won't be killed to make room for something else. You need to use a service if you want your app running in the background. Even then, it could still be killed. You can set its priority to ""foreground"" which basically means that the user will notice if it goes away, so kill this one last. Even then, it could still be killed. You can at least request that it be brought back when possible.  All apps should be written with the possibility that they could be killed in mind, and will have to restart gracefully later."
androiddev,3d4nzv,MrBIMC,1 point,Mon Jul 13 22:24:59 2015 UTC,"Alright. I am writing the app using xamarin (+forms) and will have to look into the service stuff. Thank you for your help.  I'll also make it so that when it restarts it handles it decently, even if it won't be ideal."
androiddev,3d5d52,simplestyles012,6,Mon Jul 13 17:31:50 2015 UTC,"A couple of harsh truths:   Thinking your idea is so good that everyone is going to try to steal it is a huge warning flag. The world is full of good ideas, the hard part is actually following through. You should probably be telling everyone you know about your idea so you can get feedback and improve it. No developer worth anything is going to make your app in exchange for a split of the profits. In all likelihood your app will not make any money. If a developer wanted to take that risk, they would make their own app and not give you half of it. If you really want to get a professional to build this app you will need about $10k. Depending on how complicated it actually is, possibly a lot more than that. It sounds like you'll want someone who will also walk you through the planning and design aspects, that will probably cost extra."
androiddev,3d5d52,GaryViceroy,1 point,Mon Jul 13 18:37:25 2015 UTC,"thanks for the advice! i do appreciate it alot.   so the split of profits is out the question. payments are the way to go. would you suggest a written contract?half beginning and other half when its available in the store? and what good is it .... if someone hears your good idea and they actually follow thru...and leaving you in the dust. i believe once i find someone who i believe can develop it by looking at their history of apps already developed, i will be confident in their ability of making mine. to tell someone my idea who THINKS they can make it, is no use to me. also i feel like my app is pretty simple, their is no video encoding or game developing, more simple layout more of a click and type. i know seems like it be easier to just say my idea...but then hundreds of thousands of people now have access to my idea... and what if it shows up..lol (paranoia? it is the internet after all )  any suggestions on a book?"
androiddev,3d5d52,GaryViceroy,2,Mon Jul 13 18:50:06 2015 UTC,"Before you pay anyone you should definitely get a very detailed written contract. The details of that contract will depend on who you work with and what exactly you need done.  The thing about a really good idea, is that you are almost certainly not the only person to have it. I suppose there are exceptions, but in general it's probably more likely that other people have already thought of it and haven't gotten around to actually making it, or some people have tried and done a bad job of it, or it's actually a bad idea and you'll learn why as you start to work on it. The money comes from executing a good idea well, and if you want to do it well, you want lots and lots of feedback. (Also, you have done some googling to verify that no one is already doing this right?)  The way to prevent someone from stealing your idea and leaving you in the dust? Move faster than them. They will only leave you in the dust if you aren't a valuable resource. Don't just be the idea guy, be the hustler/business guy.   As far as learning how to build it yourself, poke around old posts on this subreddit, there are plenty of threads about how to get started."
androiddev,3d5d52,St33fo,1 point,Mon Jul 13 19:07:33 2015 UTC,"Before diving into a book, I'd suggest to watch a couple of tutorials on Android. TheNewBoston will help will coding and SlideNerd will help you understand what's going on. After you feel like you're comfortable with that, then get some books. I'd suggest to go for java programming books, if you have no experience in programming yet."
androiddev,3d3msh,DroidLogician,1 point,Mon Jul 13 06:48:07 2015 UTC,"I think another big question you should ask yourself is what kind of Patreon you want. Do you want a pay-per-item style, where you get money say everytime you add new content? Or a subscription where it's X every month, with higehr amounts maybe adding a big feature to the app.  If you think you can add enough new content every month, the first one will probably get a lot more support because people can actually get something for what they pay. You want to make people feel good about donating to you.  Ads and paid versions are easy because you don't need any sense of community to still make money. If you do go donation route expect to talk to users a lot more.     Also slightly offtopic, make sure they know it's a single developer. You'd be amazed how people go from being really annoyed about problems in the app to quite supportive when they realize it's only a single developer working on it."
androiddev,3d3msh,Acrostis,1 point,Mon Jul 13 09:56:18 2015 UTC,"I think another big question you should ask yourself is what kind of Patreon you want. Do you want a pay-per-item style, where you get money say everytime you add new content? Or a subscription where it's X every month, with higehr amounts maybe adding a big feature to the app.   I had actually forgotten that Patreon supports different subscription models. You're probably right: even though it's more consistent income, a monthly subscription would be harder to sell to users without regular, tangible returns from it. Itemizing is probably smarter from a development perspective.  However, I don't necessarily want to itemize just features because the set of features I could add to the game without getting ridiculous is finite. However, new features could be great as early options for subscribers, with a transition to a focus on getting the best experience out of the game later on.   If you think you can add enough new content every month, the first one will probably get a lot more support because people can actually get something for what they pay.   There's actually a lot of things I could do with the game but wouldn't necessarily have the resources to do so when starting out. Thus, I can start with a solid base game and then introduce new features with subscriber support, which benefits everyone.   If you do go donation route expect to talk to users a lot more.   You almost make it sound like it's a bad thing. I pretend not to be vain, but I love attention and feedback, especially when it's about something I made. I would actually find immense satisfaction in interacting with my game's players, because it would show me that my work means something to someone. That's all I've ever really wanted."
androiddev,3d3msh,Acrostis,1 point,Mon Jul 13 10:37:40 2015 UTC,"I should probably of phrased that as ""find more ways to talk to users"". Talk about features your working on, invite everyone to communities on all the social networks, have a message in your app detailing what the next update will contain."
androiddev,3d3msh,Codrim,1 point,Mon Jul 13 10:45:51 2015 UTC,"For me there are some ad types which are acceptable, one is a button for apps recommendations, or offer wall. People need to click the button specifically to reach the ads so it will not be too annoying. The disadvantage is the conversion for the ad will be lower, since you don't force users to watch them.   Btw, if you interested in such kind of ad types, contact me. I am Blair Song from Codrim DSP, an ad platform. We could also help you monetize your traffic as well. :)  Codrim Global Mobile DSP http://www.codrim.net/en/index.html Always looking for good traffic skype: songyun342034680"
androiddev,3d3msh,sleibadorn,1 point,Tue Jul 14 04:21:18 2015 UTC,Making monetizing decisions based on what YOU like/hate is just stupid. Android users don't hate ads. Most apps are monetized that way.
androiddev,3d49hz,chessme,1 point,Mon Jul 13 12:03:42 2015 UTC,How do you test the activity?
androiddev,3d49hz,bart007345,1 point,Mon Jul 13 17:55:13 2015 UTC,"How do you test the activity?   For the Activity you can use: extends ActivityUnitTestCase<MainActivity>  It's another implementation, but you can take a look at this approach: http://developer.android.com/training/activity-testing/activity-unit-testing.html"
androiddev,3d49hz,bart007345,1 point,Mon Jul 13 18:02:13 2015 UTC,my point being BillFilter is easy to test. Its the Activity now that you have Dagger involved thats more interesting to see how you would test it.
androiddev,3d49hz,jackhexen,1 point,Mon Jul 13 19:57:02 2015 UTC,"I like this reference: http://vexdev.com/2015/05/06/unit-testing-android  No instrumentation, no robolectric, just powermock. Awesome."
androiddev,3d49hz,bart007345,1 point,Mon Jul 13 18:58:33 2015 UTC,interesting
androiddev,3d4qct,pocorall,1 point,Mon Jul 13 14:43:07 2015 UTC,is anyone doing dev in Scala on Android?
androiddev,3d4qct,bart007345,1 point,Mon Jul 13 20:09:42 2015 UTC,There is actually a lot going on. I could not imagine going back to Java.  https://github.com/pfn/android-sdk-plugin https://github.com/saturday06/gradle-android-scala-plugin
androiddev,3d1kbz,nuuneoi,4,Sun Jul 12 19:40:32 2015 UTC,"It is important to note that many of the DSL ""changes"" are really just quirks of Gradle's new component model mechanism, and the tools team is hoping to make most of them go away (see the documentation).  Things that are staying:   Plugin name is com.android.model.application instead of com.android.application.  Or use apply plugin: 'com.android.model.library' if you want to create an Android aar library. Configuration is wrapped with the model { } block Most properties require the = operator Adding elements to a Collection should be done using the += operator.   Things the team is hoping to change:   buildTypes, productFlavors and signingConfigs must be place outside of the  android { } block. Nested options within the android { } block must be configured using the with keyword. Properties are only set with their direct types only, with no way to accept other types and adapting them. For instance: Properties of type File accepts only File instead of File and String objects. minSdkVersion cannot directly receive either an integer or string (for codename). Creating a buildType or productFlavor requires calling the create method.  Modifying an existing one such as the release and debug buildType can be done using the just the name. The DSL for modifying variants and their tasks is very, very limited right now."
androiddev,3d1kbz,tanis7x,2,Sun Jul 12 23:48:14 2015 UTC,"I have read the documentation, and this post too. But nothing mentions anything about buildconfig fields. I rely heavily on BuildConfig file for my gradle scripts, is there anything I have missed or Android Tools team has not yet introduced BuildConfig in experimental plugin?  Edit: Looks like BuildConfig is already there in ProductFlavor and BuildType DSL classes."
androiddev,3d1kbz,lordVader1138,3,Mon Jul 13 04:38:49 2015 UTC,"Oy vey.  I love you Google, but if you could possibly decide on one format and actually finish documenting it, I would really appreciate it."
androiddev,3d1kbz,omniuni,1 point,Mon Jul 13 00:34:16 2015 UTC,The new format always for much quicker build times. I am happy they are changing it.
androiddev,3d1kbz,ZakTaccardi,2,Mon Jul 13 05:29:43 2015 UTC,Actually it'll only affect configuration times. The build times are still pretty much the same.
androiddev,3d1kbz,madisp,1 point,Mon Jul 13 06:05:57 2015 UTC,"That is the exact opposite of what they talked about at IO with their comparison charts (""next gen"", etc). Not saying you're wrong, but gonna need a more recent official source on that.  Gradle 2.4 was the big configuration times improvement."
androiddev,3d1kbz,pandanomic,2,Mon Jul 13 11:07:25 2015 UTC,"Take a look at said charts again :)  They showed really artificial examples (400 build variants / 10 projects x 25 variants, really?) with the --dry-run option. That option doesn't actually perform any tasks, just skips everything. So essentially it's measuring the configuration time.  Which is still great, don't get me wrong, just don't expect crazy speedups for a normal project with few subprojects and a few variants.  https://www.youtube.com/watch?v=f7ihSQ44WO0&t=10m"
androiddev,3d1kbz,madisp,2,Mon Jul 13 11:54:54 2015 UTC,interesting but mostly just copies the documentation http://tools.android.com/tech-docs/new-build-system/gradle-experimental
androiddev,3d4jv7,sleepymxwolv,3,Mon Jul 13 13:47:33 2015 UTC,Your web app cannot be available offline! Native mobile app can be. Also it is better experience using mobile app then navigating website mobile version.
androiddev,3d4jv7,sagarsiddhpura,1 point,Tue Jul 14 07:29:52 2015 UTC,"I would do it native from the beginning but I don't have the technical experience for an app of this magnitude, nor the financial resources.   So follow up question, would responsive web design work if I choose to make it into a website instead?  It'll be faster/cheaper than a mobile app and it would be perfect to validate my idea."
androiddev,3d4jv7,myaliasisrithm,1 point,Thu Jul 16 02:57:19 2015 UTC,"The difference in functionality/efficiency is that the web app viewed on mobile will generally not be able to use the latest features of a native mobile OS (e.g., support for new features will lag a bit behind native functionality in non-native implementations) and the experience most of the time will not be equal to native apps. While it is true that it is possible for hybrid/web apps to be great, lots of implementations aren't equal in performance or UX to native mobile apps.  Depending on what your app will do and whether or not you want to potentially go cross-platform (iOS and Android VS just iOS from the comments), you might want to find a good native mobile stack that provides the features you're looking for (messaging, external API implementation, etc.) and work on designing the app in small steps on a small scale along with your website. Optimize for web but always have the mobile experience as a native app available."
androiddev,3d4jv7,will_r3ddit_4_food,0,Tue Jul 14 17:01:32 2015 UTC,I don't know exactly what you are planning but it's possible to create a native android app that's mostly just a webview that loads your website.
androiddev,3d4jv7,Crummosh,0,Mon Jul 13 14:40:59 2015 UTC,"Hmmm, I see, that's really helpful. Is that the same for ios?"
androiddev,3d4jv7,Crummosh,0,Mon Jul 13 14:46:08 2015 UTC,Yes. Take a look at http://ionicframework.com/ It's easy to use and learn. It uses Apache Cordova for the native packaging.
androiddev,3d4jv7,will_r3ddit_4_food,0,Mon Jul 13 15:01:41 2015 UTC,"I looked into different frameworks such as phonegap/cordova but I'm not sure if it's feasible for what I'm trying to build.   The app will require FB api, geolocation feature, in app messaging, and push notifications; can this be implemented effectively in a hybrid app or should I go with native?"
androiddev,3d1iim,jhirn,13,Sun Jul 12 19:25:56 2015 UTC,Retrofit all day 😊
androiddev,3d1iim,drabred,8,Sun Jul 12 21:38:15 2015 UTC,A 5 year old can learn Retrofit in minutes!
androiddev,3d1iim,bubbleguuum,6,Sun Jul 12 21:52:28 2015 UTC,"I like Retrofit, though Volley has been a better fit for some of my projects.  If you have tons of endpoints and very complicated post bodies, you might find it a little strange to declare everything cleanly in annotations.  It's definitely possible with a fresh project, but is probably not a small refactor on an existing network layer.  But if you are starting a new project, I'd look towards reactive."
androiddev,3d1iim,TurboJetMegaChrist,1 point,Sun Jul 12 22:15:32 2015 UTC,Reactive like in ReactiveX? That's not an HTTP library
androiddev,3d1iim,Zarlon,1 point,Mon Jul 13 06:39:42 2015 UTC,The Observable interface provided by Retrofit for RxJava
androiddev,3d1iim,Zhuinden,9,Mon Jul 13 06:57:32 2015 UTC,Volley API is terrible. I dropped it after trying retrofit once.
androiddev,3d1iim,jackhexen,2,Sun Jul 12 21:21:53 2015 UTC,Yep. Used Volley for about six months before I gave up and moved to Retrofit. Haven't looked back since.
androiddev,3d1iim,laidlow,4,Mon Jul 13 01:02:15 2015 UTC,And here I thought using Ion already felt like a cheat code..
androiddev,3d1iim,bbqburner,3,Mon Jul 13 12:06:10 2015 UTC,"You should also have a look at LoganSquare, seems to be very promising. I haven't tried it yet, I'm finishing everything up for my app and waiting for Retrofit to support it."
androiddev,3d1iim,Muchoz,1 point,Sun Jul 12 23:25:07 2015 UTC,I currently use LoganSquare with Retrofit using this converter (https://gist.github.com/aurae/8427b93b27483763d9cb) with no issues. I have found it to be very quick and pleasing to use
androiddev,3d1iim,r0adkll,1 point,Mon Jul 13 00:09:18 2015 UTC,"I've seen that too, but I'd rather have an official one for production. I haven't looked into it that much, so I can't really judge whether this is how you would really do it or not."
androiddev,3d1iim,Muchoz,2,Mon Jul 13 12:13:52 2015 UTC,Moshi for json. Best I've used so far. Pretty much anything from Square is boss.
androiddev,3d1iim,BestSanchez,2,Sun Jul 12 21:04:53 2015 UTC,"I dislike Volley – huge library that tries to solve too much and requires too much boilerplate. You should definitely try to switch to Retrofit + RxJava, it will be super refreshing to use. RoboSpice is getting outdated, I would not recommend it. Use what you like, performance difference is small."
androiddev,3d1iim,entropio,2,Sun Jul 12 22:15:48 2015 UTC,Retrofit for me. Volley felt way too much like async task and plus you get rxjava support for free with Retrofit.
androiddev,3d1iim,lakewoodjoe112,1 point,Sun Jul 12 23:57:28 2015 UTC,I like Gson better for POJO. Volley is nice if you able to figure out by looking in javadoc.
androiddev,3d1iim,iNoles,1 point,Sun Jul 12 20:46:09 2015 UTC,Jackson over gson if performance matters.
androiddev,3d1iim,bart007345,1 point,Sun Jul 12 20:55:22 2015 UTC,Far more configurable too.
androiddev,3d1iim,dccorona,1 point,Sun Jul 12 21:48:59 2015 UTC,Yes. Yes. But not always necessary. Jackson makes somethings more complicated than gson. So it's all about how much the performance (minute) matters.
androiddev,3d1iim,warl0ck08,2,Mon Jul 13 03:03:50 2015 UTC,"Definitely. I still use GSON on occasion for things, but I love that Jackson allows me to write my objects the way I want to, without having to worry whether or not it will be compatible with my serializer (ex. an immutable Lomboked object that is constructed with a builder)"
androiddev,3d1iim,dccorona,1 point,Mon Jul 13 13:28:10 2015 UTC,Here's another option. http://loopj.com/android-async-http/ I was actually just using the default java http stuff until I had to implement uploading multipart and realized it wasn't in the version of Java that ships with android and this was the simplest way to add it.
androiddev,3d1iim,yetanotherwoo,1 point,Sun Jul 12 21:06:48 2015 UTC,"For reference, based on ops options, ion is retrofit to async which is equal to okhttp."
androiddev,3d1iim,warl0ck08,1 point,Mon Jul 13 03:04:37 2015 UTC,"Checkout WASP library on Github, its a one stop solution for entire stack. It does pretty awesome job and I am happy with it. It uses Retrofit, gson and okhttp. Its flexible too"
androiddev,3d1iim,rinav4all,1 point,Sun Jul 12 21:35:28 2015 UTC,Retrofit + Picasso (if you need images) + GSON for manual okhttp stuff.
androiddev,3d1iim,warl0ck08,2,Mon Jul 13 03:02:47 2015 UTC,why picasso over glide?
androiddev,3d1iim,ZakTaccardi,1 point,Mon Jul 13 04:17:19 2015 UTC,Because I don't prefer glides assumptions in cacheing policy.
androiddev,3d1iim,warl0ck08,1 point,Mon Jul 13 05:42:06 2015 UTC,"This is not likely the best way to do it, but I just use the native libraries with a small wrapper I made and a particular type of Enum. The Enum has some extras so that it can be used like a string (this allows refactoring, and makes for much shorter code than *public static final String MY_STRING = ""something""; *), and a wrapper around org.json that handles exceptions more elegantly, let's you specify defaults, and accepts those special Enums as keys."
androiddev,3d1iim,omniuni,1 point,Mon Jul 13 04:16:35 2015 UTC,"I just converted from XMLPullParser, HTTPResponse (or w/e) to Retrofit and RxAndroid for a 3rd of my app. It has literally fixed all problems with my app....."
androiddev,3d1iim,epicstar,1 point,Mon Jul 13 04:22:16 2015 UTC,"Robospice can be integrated with Retrofit I believe,  which makes it so that your background operation will be able to communicate the result of the request without a need for an event bus. It also does some other magic. I looked at the api (and lack of docs)  for Volley and it was just messy. Retrofit is clear, it takes about 'reading the docs and using it once'  to know and learn how to use it."
androiddev,3d1iim,Zhuinden,1 point,Mon Jul 13 07:07:57 2015 UTC,"I once made the mistake of choosing Volley, thinking if it comes from Google it's a mark of quality. I couldn't have been more mistaken, and I learnt it the hard way.  Immeasurable amount of pain. Undocumented, buggy, no multipart support, headers are kept in a HashMap so that multiple headers with the same name override each other, final classes and methods where you'd really need to override them (mainly to overcome said bugs and shortcomings), source code sucks big time, man I could rant about it for hours. I curse the day I chose to build my API layer around it in my production app - now I'm throwing it out and replacing it with Retrofit.  TLDR: anything but Volley, if you'd like to keep your sanity in the long run."
androiddev,3d1iim,fzdroid,1 point,Mon Jul 13 09:56:24 2015 UTC,We should have a list of technologies that an Android developer should know in the wiki.
androiddev,3d1iim,sudhirkhanger,1 point,Mon Jul 13 10:59:17 2015 UTC,"I used Volley for fetching images in huge ListViews, a task it is especially well suited for. For all other tasks I would use a different solution however."
androiddev,3d1iim,buckstalin,1 point,Mon Jul 13 15:20:13 2015 UTC,I use the org.json and it works well enough for me. The Google site uses volley a lot though
androiddev,3d1iim,mvieck3,7,Sun Jul 12 19:39:17 2015 UTC,org.json is a horrible API. Please don't use it.
androiddev,3d1iim,bmwracer0,1 point,Sun Jul 12 20:52:15 2015 UTC,Is that the default one
androiddev,3d1iim,greenday5494,1 point,Mon Jul 13 01:14:17 2015 UTC,"yes, it's built in to the Android source"
androiddev,3d1iim,thepoosh,1 point,Mon Jul 13 09:43:32 2015 UTC,Thanks!  That's just for parsing though right? That fits in the Jackson vs Gson debate but the HTTPRequest side of things seems of greater importance to figure out.
androiddev,3d1iim,TwistedEquations,0,Sun Jul 12 19:47:29 2015 UTC,I use a Volley wrapper I made called crossbow. Its still under dev but I should have it ready in a few weeks
androiddev,3d1iim,ZakTaccardi,3,Mon Jul 13 00:37:24 2015 UTC,kinda bad that Volley needs an API wrapper.
androiddev,3d484l,crisprcas9,1 point,Mon Jul 13 11:47:29 2015 UTC,"You can try alternate app store like Amazon app store or Fdroid. You can distribute APK files from website. As far as In-App purchases are concerned, I am sure your app would have to be published into play store. So Google-IAP is not an option.   If you want to have in-app purchases, you can use payment gateway/paypal.. They are easily integrated into websites so your app too can have them. Find out about payment gateways for mobile. Or you can host just payment gateway pages online, have your app diaplay payment page via webview, and check for payment completion etc.."
androiddev,3d47fc,Pnikosis,1 point,Mon Jul 13 11:38:09 2015 UTC,Does someone here have an idea about performance vs simple public final fields?
androiddev,3d47fc,docoptix,2,Mon Jul 13 22:19:24 2015 UTC,"The only performance difference should be the overhead associated with using an interface vs the actual class. Should not be an issue because it's using generated code, not reflection.   That said I have not looked at it nor done any performance analysis."
androiddev,3d4639,skyavenue,1 point,Mon Jul 13 11:21:20 2015 UTC,"That's not much to go off of...  What does your gitignore look like? Or did you just copy/paste the folder? Do you have Java set up properly?   Did you try googling the error?   http://stackoverflow.com/questions/25009717/android-studio-gradle-project-unable-to-start-the-daemon-process-initializatio   I had the same issue, it was because I had an existing "".gradle"" folder and then I've played with the android studio version (and also with the Java jdk version) , and I guess it messed things up.  Solution: Remove the .gradle directory (mine's location was C:\Users\UserName.gradle), and restart android studio. It will automatically create a new one.   Literally the first result. Did you try that?"
androiddev,3d4639,Wispborne,1 point,Mon Jul 13 15:04:53 2015 UTC,How are you copying the code? Version control?  Very bad idea to manually copy files from PC to PC. Could end up missing things.
androiddev,3d4oii,lordoftherings911,2,Mon Jul 13 14:27:52 2015 UTC,I have also been seeing this on OSX. I'm running Version 2.5.0 Revision 20150612-2e8067e. I never ran into this on previous versions...
androiddev,3d4oii,filthypoopslut,1 point,Tue Jul 14 19:38:11 2015 UTC,"I would honestly switch to Linux or OSX <_<. Android Studio is really buggy on Windows from what I've experienced (I use Ubuntu). But if you want to stay on Windows, I'd suggest to make to keep updated and keep the task manager out..."
androiddev,3d4oii,epicstar,1 point,Mon Jul 13 17:01:33 2015 UTC,This bug has been solved with the last relase 2.5.1  https://twitter.com/Genymotion/status/621720856553738240
androiddev,3d4oii,eyall00,1 point,Fri Jul 17 09:36:19 2015 UTC,@Genymotion   2015-07-16 16:39 UTC  Genymotion 2.5.1 is out! VirtualBox 4.3.30 & 5.0 compatibility for OS X. Bugfix where a lot of ADB were spawned. https://www.genymotion.com/#!/release-notes/251     This message was created by a bot  [Contact creator][Source code]
androiddev,3d4yn6,brumkid100,3,Mon Jul 13 15:47:09 2015 UTC,"How about you ""have a full read"" now, then get back to us."
androiddev,3d4yn6,40ft,1 point,Mon Jul 13 16:54:19 2015 UTC,"You're procrastinating doing the actual work. Want to develop an app? Develop an app. Don't get empty fulfillment from posting questions and ""planning"" your approach. Read & Learn"
androiddev,3d4yn6,sellers04,1 point,Mon Jul 13 19:01:04 2015 UTC,"It is true; you are confusing motion with movement like I did with Application Developement!  Join me here, I have subscribed myself to teach myself to code:  https://www.kickstarter.com/projects/908213631/the-complete-android-m-developer-course-with-andro"
androiddev,3d4yn6,SSG47,1 point,Mon Jul 13 19:37:11 2015 UTC,"This looks amazing, maybe I am going to pay 15 £ for a nice tutorial, but I am not sure if its worth. I sleep a night over it ;)"
androiddev,3d5rj2,raienoes,8,Mon Jul 13 19:11:35 2015 UTC,"All the business logic is in there. You'd be ""retarded"" not to make a tablet app.  also they don't force you to support tablets"
androiddev,3d5rj2,leggo_tech,3,Mon Jul 13 19:19:58 2015 UTC,This. I'm honestly surprised people still see this as an issue in 2015.
androiddev,3d5rj2,ThatOfficeMaxGuy,4,Mon Jul 13 19:23:53 2015 UTC,"What are you talking about?   It's easy to have different layouts per device size. Unless you want completely different user flow for Phones vs Tablets, even then it's not that much work.  You don't need to support tablets, you can just make your phone design that just doesn't look as good on tablets."
androiddev,3d5rj2,TheHal85,2,Mon Jul 13 19:26:56 2015 UTC,"Is there some difference between the two to you, or like a maximum screen size for devices beyond which you refuse to let users install your app? This sounds like an iOS problem to me.   There are tablets on the market that have smaller screens than phones on the market."
androiddev,3d5rj2,ekspiulo,2,Mon Jul 13 19:52:18 2015 UTC,Do what 90% of devs do and ignore that they exist.
androiddev,3d5rj2,s73v3r,1 point,Tue Jul 14 05:59:47 2015 UTC,"I'm not sure what problem you're having. Any app that works on a phone should work just fine on a tablet unchanged. It might not look as pretty, but it will work.  I have several apps on the market; I've never done anything to make them work on tablets; they just do.  Now, if your app needs some hardware feature that a phone would have that a tablet doesn't have, then you should enumerate those features in the Manifest with <uses-feature> tags and then the play store will not provide your app to devices that don't have the required feature(s). http://developer.android.com/guide/topics/manifest/uses-feature-element.html#features-reference"
androiddev,3d5rj2,efalk,1 point,Mon Jul 13 22:30:29 2015 UTC,"I think that's the problem: apps work just fine on tablets, but most still either look like shit or just don't look like they're taking advantage of tablet space."
androiddev,3d5rj2,s73v3r,1 point,Tue Jul 14 06:01:15 2015 UTC,"True, dat. My own apps look like crap on a tablet. I'll fix that someday. But in the meantime, if a user wants the app anyway, I have no objection."
androiddev,3d0tp9,zpinter,3,Sun Jul 12 15:56:28 2015 UTC,How is it differ from AutoValue?  Does it have a support for Parcelable like in AutoParcel?
androiddev,3d0tp9,jackhexen,2,Sun Jul 12 21:23:12 2015 UTC,"Immutables is mainly Java library/annotation processor, however there are happy Android users as well. Overall Immutables is overwhelmingly full-featured and require a lot less boilerplate than AutoValue. Where AutoValue's take is precise control over what is generated by specify whole API, requiring a more boilerplate as result, especially for the builders. Parcelable support is planned, currently focus was on reflection-less JSON (Gson) serialization and java binary serialization."
androiddev,3d0tp9,elucash,2,Sun Jul 12 21:54:53 2015 UTC,"As I understand, Immutables expose generated code to the whole application while AutoValue allows to keep its generated code inside of @AutoValue annotated classes.  If you wish to get Android devs, please also consider implementing serialization from Cursor and to ContentValues in addition to Parcelable implementation. ;)"
androiddev,3d0tp9,jackhexen,1 point,Sun Jul 12 22:12:05 2015 UTC,"Yes. Immutables also supports hiding implementation http://immutables.github.io/immutable.html#hiding-implementation, but it slightly differs from AutoValue approach.  Thank you for advise about Cursor and etc!"
androiddev,3d0tp9,elucash,1 point,Sun Jul 12 22:20:50 2015 UTC,"Hiding implementation? Hmm, interesting. Thanks!"
androiddev,3cyzij,morihacky,14,Sun Jul 12 01:41:37 2015 UTC,"They've had a job opening for awhile already, but maybe they want to grow the team more than the current 1 or 2 that they have."
androiddev,3cyzij,pandanomic,4,Sun Jul 12 02:02:29 2015 UTC,"I've had a recruiter call about it, but I'm not sure what the product was. (AMA or otherwise)"
androiddev,3cyzij,AndrewNeo,1 point,Sun Jul 12 07:06:28 2015 UTC,true. i have heard though that he's especially stoked about mobile platforms so that could lead to ramp up of the existing team.
androiddev,3cyzij,SpiderFan,26,Sun Jul 12 02:11:38 2015 UTC,there's already some very good apps out there.
androiddev,3cyzij,tomun,5,Sun Jul 12 04:05:28 2015 UTC,Mentions Redreader
androiddev,3cyzij,whitefolksgoham,13,Sun Jul 12 17:07:17 2015 UTC,reads this on BaconReader
androiddev,3cyzij,BestSanchez,60,Sun Jul 12 04:23:00 2015 UTC,*Reddit Sync
androiddev,3cyzij,maplemario,15,Sun Jul 12 06:27:35 2015 UTC,Sync masterrace!
androiddev,3cyzij,outadoc,31,Sun Jul 12 12:57:18 2015 UTC,*Relay for reddit
androiddev,3cyzij,DominikTVDE,16,Sun Jul 12 07:04:38 2015 UTC,*Relay for Reddit Pro
androiddev,3cyzij,NAMELESSdotTXT,41,Sun Jul 12 09:58:00 2015 UTC,*Reddit is Fun
androiddev,3cyzij,Gudin,2,Sun Jul 12 11:33:03 2015 UTC,*Reddit Flow
androiddev,3cyzij,geecko,2,Sun Jul 12 12:25:08 2015 UTC,*lynx
androiddev,3cyzij,Markko_,18,Sun Jul 12 15:05:47 2015 UTC,*wget
androiddev,3cyzij,Clarksfield,2,Sun Jul 12 14:23:01 2015 UTC,*curl
androiddev,3cyzij,JinAnkabut,1 point,Sun Jul 12 15:04:54 2015 UTC,Erm... Google Chrome :(
androiddev,3cyzij,FigMcLargeHuge,1 point,Sun Jul 12 19:15:12 2015 UTC,"Since you mention wget, got any good settings to download say a subreddit for offline viewing? I want to just download a couple at certain times so that I can fire them up on my Raspberry Pi and view offline using an apache server."
androiddev,3cyzij,electrocamel,-1,Sun Jul 12 19:37:53 2015 UTC,*Now for reddit
androiddev,3cyzij,LiteweightPhenomenal,1 point,Sun Jul 12 20:09:23 2015 UTC,Sounds like they might be moving towards Twitter's approach which is locking down their API's so they have more control over their brand.
androiddev,3cyzij,Wispborne,1 point,Sun Jul 12 07:49:05 2015 UTC,"That's a good idea. Taking the community involvement (esp. tech community) out of a website driven by the community (which used to be largely tech-oriented) is an important step toward fostering trust between the leadership and its members.   The next thing they should do is start taking down the existing reddit apps in the store and forcing everybody onto their buggy, unfinished app (with ads). The community enjoys having a firm hand to guide them - no more divisive discussions on which app is best.  ...sorry, had a frustrating morning. My new work initiative appears to be two months of doing code reviews."
androiddev,3cyzij,rkcr,8,Sun Jul 12 23:03:42 2015 UTC,Given that they acquired Alien Blue (now the official iOS reddit client) it seems to me that they might try the same thing for Android.
androiddev,3cyzij,ANWM11,2,Mon Jul 13 09:07:28 2015 UTC,As in bring alien blue to android or buy the rights to an android app.
androiddev,3cyzij,zombie2uRBX,6,Sun Jul 12 02:26:44 2015 UTC,"Alien blue sucks ass anyways no one uses it, reddit is fun was amazing"
androiddev,3cyzij,shukoroshi,4,Sun Jul 12 09:29:40 2015 UTC,Is it no longer amazing? I still use it (on Android)
androiddev,3cyzij,pandanomic,2,Sun Jul 12 17:18:27 2015 UTC,"I think they're building a new one in house, based on comments I saw from the guy awhile back"
androiddev,3cyzij,rkcr,0,Sun Jul 12 21:43:54 2015 UTC,"Acquiring another app, though if it's true that they're building a new one in-house that seems foolish (since there's such good work that's already been done on clients)."
androiddev,3cyzij,MacroMeez,2,Sun Jul 12 10:11:49 2015 UTC,"sometimes its better to just start from scratch than to adopt someone's possibly not great code, especially if they want to change the UI."
androiddev,3cyzij,drstock,4,Sun Jul 12 11:49:18 2015 UTC,Yea I've gotten several recruiter mails from both reddit and imgur the last few months.
androiddev,3cyzij,CRCasper,6,Sun Jul 12 21:14:40 2015 UTC,It will take a lot to get many of us to move from the already good apps going such as Reddit Sync.
androiddev,3cyzij,j_a_m_i_e,2,Sun Jul 12 20:51:09 2015 UTC,"Just wonder, does anybody now if the ad revenue in apps like reddit sync or now for reddit go to reddit or the app developer or is there a split?"
androiddev,3cyzij,fodawim,1 point,Sun Jul 12 13:29:35 2015 UTC,Developer most likely.
androiddev,3cyzij,j_a_m_i_e,1 point,Sun Jul 12 21:54:00 2015 UTC,What about alien blue for IOS?
androiddev,3cyzij,TODO_getLife,2,Mon Jul 13 01:48:28 2015 UTC,"The best Reddit apps are on Android right now, frankly they should just buy one of them, or not bother with an official one at all since the others are very good."
androiddev,3cyzij,FigMcLargeHuge,5,Mon Jul 13 05:00:42 2015 UTC,"I agree, but lets also make sure they don't do something like lock out the others if they settle on one. That would be a shitty move."
androiddev,3cyzij,Cg2XHPxz,3,Sun Jul 12 15:49:12 2015 UTC,they're probably going to eventually no matter what they say. When they put in a solid monetization plan it will require they control how they view the content which will require official cilents and a locked down API. see twitter
androiddev,3cyzij,the-k1ngp1n,1 point,Sun Jul 12 20:10:36 2015 UTC,"""Now for Reddit"" on Android is awesome!"
androiddev,3cyzij,maplemario,4,Sun Jul 12 20:22:41 2015 UTC,"Try out sync. I used sync for a while, tried out now as a break from sync, finally got fed up with now and went back to sync and it's a godsend. It's basically Now, but smoother."
androiddev,3cyzij,xenomachina,1 point,Sun Jul 12 05:12:29 2015 UTC,"I have similar experience, except I've tried Sync a few times, but always end up going back to Reddit is Fun.  The main thing that drive me away is that Sync seems to have persistent bugs. For example, if you open it from another app (eg: Reddit in Pictures, or even the Play Store if you just want to see what I'm talking about) it becomes really unstable. When opened from another app, if I click on a title link to bring up a post, then click back it'll crash about 95% of the time, sometimes right after I click on something else in its UI. I don't think I've ever seen RiF crash. Sync also seems to try and hide these crashes. You don't get a ""Application has stopped"" dialog -- it just behaves like you pressed back again, except it bypasses the exit confirmation prompt.  The UI also has some things I'm not fond of, like placing the multi-reddits after the list of subscribed subreddits. I read by multi more than by individual sub, so it's pretty irritating having to scroll to the bottom of a huge list every single time. RiF has a toggle for switching between subs and multis, which is far more convenient. (I actually think this part of RiF's UI is kind of ugly, but I'd rather use apps that are ugly and functional rather than pretty and dysfunctional.)"
androiddev,3cyzij,TheKeeperOfPie,1 point,Sun Jul 12 12:58:14 2015 UTC,"Not all crashes throw a non-responding dialog. If it's a memory leak, overflow error, or unrecoverable error, it will just hard crash to next Activity in the stack or Application if it crashes hard enough.  Just wanted to say something since a lot of people seem to think that the dialog always shows up. Also, I doubt the Sync developer knows about any of these crashes or usability complaints unless you've emailed them about it."
androiddev,3cyzij,maplemario,1 point,Sun Jul 12 21:49:35 2015 UTC,"Huh. I've never experienced a crash. Different strokes for different folks.  I can agree that the multis being under subs is an inconvenience, but Sync remembers my last position in the list so it's incredibly minor as far as inconveniencing me."
androiddev,3cyzij,markyosullivan,0,Sun Jul 12 22:37:09 2015 UTC,Best scenario for me is that they'll just decide to acquire Reddit Sync.
androiddev,3d2oog,pakoito,3,Mon Jul 13 01:17:08 2015 UTC,"In my opinion, though, you just can't beat simple, concise code.  I architect my Android apps like this:   Base - Includes several utilities and interfaces which add some basics like inter-thread signals, nicer JSON parsing, improved logging, and easier interaction with shared preferences. Threads - anything that runs in its own thread or out of order, such as AsyncTasks and Services Parsers - Handle data. The source may be files, an API, a database, it doesn't matter. The job of a parser is to take the data from whatever its base format is and turn it into a Java object for easier handling. Constants - If it's a constant, put it here. UserInterface - Activities and Fragments Helpers - Classes that are designed to help this particular app,  such as BroadcastReceivers, interfaces, Application classes, and usually a class that helps with consistent fragrant handling.   In general, it's really easy to figure out where a feature is located, lots of boilerplate code is eliminated, and its flexible. The apps I've made using this setup seem to have less than half the code of more complex architectures.  Out of curiosity, would anyone be interested in me expanding on this?"
androiddev,3d2oog,omniuni,1 point,Mon Jul 13 05:06:15 2015 UTC,"Sure, go ahead because I'm curious about how you handle testing, storing state, and complex use cases, which are the main problems these architectures are trying to solve."
androiddev,3d0yyd,brickfire,12,Sun Jul 12 16:44:23 2015 UTC,"Go for it.  If the design is clearly different and there's no trademark, then I think the worst they can do is send you a letter asking you to change the name."
androiddev,3d0yyd,ripuliday,3,Sun Jul 12 17:01:04 2015 UTC,"I would just go ahead with the title. But if the title is very important to you, you should select a title which is not in use on iOS and reserve it there before publishing on Android. After reserving a title on iOS, you have 6 months to publish the app."
androiddev,3d0yyd,pishposhsplish,2,Sun Jul 12 18:11:19 2015 UTC,"Don't be hesitant to drop an email to the dev?.. They could be working on an update or have other plans in mind.. The time span isn't necessarily an indicator of a dead project.. some people don't have time to release often. Regardless, move forward with your project.."
androiddev,3d0yyd,notsilverfox,2,Sun Jul 12 20:37:59 2015 UTC,"I'd either find a different name or talk to a lawyer if the name is at all unique (i.e. not purely descriptive). The only thing inactivity buys you is the hope that the current developer is too disinterested to fight you. You don't have to have a registered trademark to lay claim to a product name- it only makes it easier to file a lawsuit.  If you're still determined to use the name despite the risk, then at least take the time to get a consult from an IP lawyer (many will give you the first meeting for free). Developer forums are notoriously terrible substitutes for real legal advice."
androiddev,3d0yyd,efalk,2,Mon Jul 13 06:15:30 2015 UTC,"I don't think there's any rule against two apps having the same name, as long as there isn't a trademark issue."
androiddev,3d0yyd,sagarsiddhpura,1 point,Mon Jul 13 22:34:41 2015 UTC,"You can use suffix like ""for iOs"" maybe so that title is saved and its different?"
androiddev,3d4yyr,johnnhaas,2,Mon Jul 13 15:49:37 2015 UTC,Why is this in AndroidDev?
androiddev,3d4yyr,Ooodin,1 point,Mon Jul 13 23:32:37 2015 UTC,correlation is not causation. But did you put your email/person info in any posts?
androiddev,3d17pl,Critiction,1 point,Sun Jul 12 17:57:38 2015 UTC,Annotation processing lets you generate new Java files at build time.    How do we modify an existing java file?
androiddev,3d17pl,kannibalistic,1 point,Sun Jul 12 18:00:05 2015 UTC,"You can modify class files using byte code manipulation. For Android, you would do this by writing a gradle plugin. See the Afterburner library to get started."
androiddev,3d17pl,JakeWharton,1 point,Sun Jul 12 18:10:13 2015 UTC,You cannot.
androiddev,3d17pl,artem_zin,2,Sun Jul 12 18:42:59 2015 UTC,"I guess he meant that it's possible via external tools like Gradle Plugins (like Retrolambda), regular Annotation Processing API does not allow this of course."
androiddev,3d09lb,slaystation25,1 point,Sun Jul 12 12:02:31 2015 UTC,"If I want to learn about the concepts and implementations of testing, which open source project do you recommend I start with?"
androiddev,3d09lb,Teganburns,1 point,Mon Jul 13 07:12:13 2015 UTC,"What would be the best (fastest) way to run a PID controller? I'm more so looking for links and examples, although any pointers would be appreciated. I figure this would need to run natively (that's fairly new to me)...? The math is fairly easy just implementing it to an app is the difficult part. :/    This is something that seems to be way above me so I am open to compensation if someone can work one on one with me.   Thanks!"
androiddev,3d09lb,watchme3,1 point,Mon Jul 13 01:21:44 2015 UTC,What s the difference between dagger and the dependency injection pattern in java ? besides the fact that dagger checks for dependencies during compile time.
androiddev,3d09lb,lomoeffect,1 point,Sun Jul 12 18:14:42 2015 UTC,"Is there a Calendar API for Wave, like there is for Google Calendar? When adding an event to my calendar, nothing shows up for Wave."
androiddev,3d09lb,gollyzila,1 point,Sun Jul 12 18:01:53 2015 UTC,"How do I import chrono-java library from GitHub? Gradle always gives the same ""failed to resolve"" error. I've tried all I can think of for the compile line following wanasit's readme and the linked jitpack.io. I tried importing the zip but I couldn't get it imported and I didn't find any instructions on how to import a zip as a library."
androiddev,3d09lb,BlueArc,1 point,Sun Jul 12 18:00:49 2015 UTC,"You can't import a zip as a library. You can import a .jar file to your app's /libs folder.  You could unpack the source code, go to the folder containing pom.xml from the command line, and run Maven commands to build your library.   mvn package   The project will be built, and if everything is OK you'll get a .jar file in the /target folder"
androiddev,3d09lb,imsrslyyouguys,1 point,Sun Jul 12 20:27:50 2015 UTC,Tinting drawables. Should I always do it? Or should I only create black drawables and then tint them when I know the color will be chsnging on runtime?
androiddev,3d09lb,Tankski,1 point,Sun Jul 12 16:25:47 2015 UTC,"File -> Import project should work, especially if there are the gradle build files left in the project."
androiddev,3d09lb,Tankski,1 point,Sun Jul 12 14:55:40 2015 UTC,Oh right. I think you can still import a non-gradle project and AS will try do its best to rebuild the project structure using gradle (it won't do dependencies though IIRC).
androiddev,3d09lb,guillaumeyp,2,Sun Jul 12 15:01:40 2015 UTC,"I use Dagger 2 and Retrofit. In my ApiModule, I provide singletons instances of an OkHttpClient, a RestAdapter. I would like to add a header with the user apiKey in my request. So I also provide a RequestInterceptor but I don't know how I can retrieve the user apiKey saved in the SharedPref. I provide an instance of MyAppSettings in the AppModule but it asks for a context. My question is: what do I have to put instead of the xxxx:  @Provides @Singleton RequestInterceptor provideAuthRequestInterceptor(XXX mXxxx) {     return new RequestInterceptor() {         @Override         public void intercept(RequestFacade request) {             request.addHeader(""Accept"", ""*/*"");             request.addHeader(""Authorization"", ""Token token="" + mXxxx.getApiKey());         }     }; }"
androiddev,3d09lb,Tankski,2,Sun Jul 12 15:05:37 2015 UTC,"I had a similar problem I had to overcome in one of my projects. In my instance, for my AppComponent, I had it use both AppModule and ApiModule (I wanted the API singletons to be available application-wide). This would then enable me to pass in MyAppSettings settings to the auth request interceptor as follows:  Somewhere in AppModule.java:  @Provides @Singleton MyAppSettings provideMyAppSettings(...) { ... }   Then in ApiModule.java:  @Provides @Singleton RequestInterceptor provideAuthRequestInterceptor(MyAppSettings settings) { ... }   This should allow the object graph to resolve your dependency and achieve the effect you want."
androiddev,3d09lb,guillaumeyp,1 point,Sun Jul 12 15:08:07 2015 UTC,"Thank you Tankski. It is exactly what I have tried, but I had an empty token, I thought that MyAppSettings was not initialiazed, that I had to inject MyAppSettings in the module etc.  Yet, it was because I observed an old request I did not convert to Dagger/Retrofit ... I feel so stupid.  I begin to understand how Dagger is powerful, but the learning curve is SO STEEP comparing to all other libs I use."
androiddev,3d09lb,Tankski,1 point,Sun Jul 12 14:39:14 2015 UTC,"Dagger is powerful, but the learning curve is SO STEEP   I do have to agree, I've looked at the docs, tried using it, looked at the docs again, tried some more, and so on ad nausem and only recently has it started to click in my head how it works. Glad I could have helped, though."
androiddev,3d09lb,guillaumeyp,2,Sun Jul 12 14:49:58 2015 UTC,"It worked, I also could add the userID in the @Path ... the time I had to get the ApiKey and the userID before to make any call is over."
androiddev,3d09lb,bart007345,1 point,Sun Jul 12 15:38:33 2015 UTC,"I don't use dagger myself, but I would hazard a guess that you could add another dependency that wraps Shared Preferences?  Btw, the request interceptor is tied to the RestAdapter instance anyway so why bother abstracting it out like this?"
androiddev,3d09lb,guillaumeyp,0,Sun Jul 12 15:43:25 2015 UTC,"I split these instanciations as it's the way tutorials did, and it's a guideline that Android God Jake Wharton gave here"
androiddev,3d09lb,entropio,1 point,Sun Jul 12 15:56:43 2015 UTC,Is there a good json to pojo generator? http://www.jsonschema2pojo.org/ is fine but it generates javadoc that I don't need.
androiddev,3d09lb,guillaumeyp,3,Sun Jul 12 14:46:21 2015 UTC,What if you delete the javadoc ?
androiddev,3d09lb,entropio,1 point,Sun Jul 12 15:40:55 2015 UTC,"Would be nice if I could do it in one action, that's the whole point of generators."
androiddev,3d09lb,bart007345,3,Sun Jul 12 13:38:17 2015 UTC,"considering it just made sure you don't miss any fields, you've already gained a lot. Just delete them!"
androiddev,3d09lb,farmasek,2,Sun Jul 12 13:41:18 2015 UTC,"Do you know any good page for picking material design colors ? I saw one page when u choose your primary color and it generated appropriet accents color, etc.. but i cant find it."
androiddev,3d09lb,PM_ME_MATH,2,Sun Jul 12 13:51:34 2015 UTC,http://www.materialpalette.com/
androiddev,3d09lb,slaystation25,2,Sun Jul 12 14:47:03 2015 UTC,Does this help?
androiddev,3d09lb,farmasek,1 point,Sun Jul 12 13:27:03 2015 UTC,"I found this one, its great but i was thinking about site, where u choose only one color."
androiddev,3d09lb,lomoeffect,2,Sun Jul 12 18:32:13 2015 UTC,"Here's my list of colour resources (someare material, not all):   http://www.materialui.co/colors http://www.materialpalette.com/ <--- still think this might be the one you're looking for http://www.colourlovers.com/palettes/most-loved/all-time/meta http://www.uigradients.com/ http://paletton.com/ http://coolors.co/app http://www.flatuicolorpicker.com/ http://flatuicolors.com/ http://www.google.co.uk/design/spec/style/color.html"
androiddev,3d09lb,farmasek,2,Sun Jul 12 13:32:01 2015 UTC,"Coolors.co is type app i was looking for, great for inspiration, thank you."
androiddev,3d09lb,entropio,1 point,Sun Jul 12 13:58:02 2015 UTC,Should I keep Retrofit service endpoints in a single interface class or multiples interface classes?
androiddev,3d09lb,bart007345,1 point,Sun Jul 12 18:07:31 2015 UTC,Start with one but if you end up with loads then split.
androiddev,3d09lb,bart007345,1 point,Sun Jul 12 19:21:24 2015 UTC,I create the interfaces as inner interfaces as the interfaces themselves are just implementation details of how retrofit works. I can then create one class per endpoint and a unit test to go with it.
androiddev,3d09lb,supBot,1 point,Sun Jul 12 12:47:31 2015 UTC,"So I'm planning on working on my second app, which will be a major step forward from my first one which was very basic. Here's the idea I have in mind, and I'm hoping someone can guide me with what's right and wrong with it.  I want to make an app that does something similar to Pushbullet channels - that is, I want to use a web interface where channels can be made and be subscribed to, and through these channels the mods (the creator(s) of the channel) can post content which reaches out to everyone subscribed to it. I want to do this mainly for educational purposes, since I haven't worked with an app that requires a backend or the use of a REST API.  My questions:  I want to write the backend and deploy it on App Engine. Now here's what I presume I got to do; make the web interface (so the mods of channels can post content through it) and connect it to a backend. The backend then receives this data, and using GCM sends it the users subscribed to it.   Now that's a pretty high level idea I described there. Could someone tell me how I can manage the subscribers? That is, when the backend receives a message through a a channel, how do I find out who the subscribers of that channel are? Should I store the subscribers by phone number, by e-mail id or by username, and how do I direct the channel's message to them?  I know I asked a pretty broad and high level question. If there's a better way of doing this — which I'm sure there is — I'm all ears.  Thank you for reading."
androiddev,3d09lb,bart007345,1 point,Sun Jul 12 13:08:25 2015 UTC,"I haven't used GCM but I did use Apple's version a couple of years ago so I'm assuming its similar.  In the app, you list the channels. You tell the server that the device is subscribes to these channels, passing the device token as well. You then store the token and the channels subscribed to.  On the server side, when you want to push a message out, you find all the device tokens for that channel and send a message along with the tokens to GCM."
androiddev,3d09lb,supBot,1 point,Sun Jul 12 14:48:52 2015 UTC,"What if a user changes the device? Wouldn't he/she have to re-subscribe to all the channels? In this case, doesn't username seem more reasonable?"
androiddev,3d09lb,bart007345,1 point,Sun Jul 12 12:39:20 2015 UTC,Gcm works with devices only.
androiddev,3d09lb,supBot,1 point,Sun Jul 12 15:06:24 2015 UTC,"Ah, that seems simple. I wasn't aware of device tokens. Thanks!"
androiddev,3cz8yr,mvieck3,12,Sun Jul 12 03:16:52 2015 UTC,"I'm good with the actual programming, but the layout and graphical part in general is something I never fully understood. So yes, please."
androiddev,3cz8yr,electrocamel,7,Sun Jul 12 07:47:57 2015 UTC,"Of course we would, I'm still waiting for the udacity material design course."
androiddev,3cz8yr,jedi18,3,Sun Jul 12 08:42:24 2015 UTC,"Yes, by all means"
androiddev,3cz8yr,No2mad2,5,Sun Jul 12 13:48:15 2015 UTC,Yup
androiddev,3cz8yr,droanmalik,4,Sun Jul 12 15:30:16 2015 UTC,+1 I'd be interested
androiddev,3cz8yr,scottyab,3,Sun Jul 12 20:14:24 2015 UTC,Yes please
androiddev,3cz8yr,adilp,3,Sun Jul 12 18:21:38 2015 UTC,Yes! Keep us updated
androiddev,3cz8yr,eastkoreabestkorea,3,Sun Jul 12 19:05:29 2015 UTC,Definitely
androiddev,3cz8yr,ArKane884,3,Sun Jul 12 19:21:48 2015 UTC,"Cool guys, I have the apps made all I need to do is to record the material. I'm on udemy but I can make the course $5 or $1 depending on how nice I am to redditors :) The reason I charge is because I'm doing the tutorial instead of freelance so I have to make up for my wages somewhere."
androiddev,3cz8yr,epigrammedic,2,Sun Jul 12 19:37:26 2015 UTC,"I think the real question is "" would anyone here NOT be interested in a material design tutorial?""  to which the answer is: nope, everyone here is def interested."
androiddev,3cz8yr,cjrun,2,Mon Jul 13 00:24:28 2015 UTC,"Oh, alrighty. I didn't know if everyone in this reddit already got onboard the Material Design hype train :D"
androiddev,3cz8yr,Steedsofwar,2,Mon Jul 13 01:10:06 2015 UTC,People find it much more fullfulling to trash-talk something that they understand completely. ;)
androiddev,3cz8yr,QuestionsEverythang,1 point,Tue Jul 14 22:35:31 2015 UTC,Will the tutorials cover creating custom views?
androiddev,3cz8yr,mrlrm,1 point,Mon Jul 13 09:28:00 2015 UTC,I can't see myself doing it since I personally have never created them. That's not to say that I won't though as the final project since it is a good topic to learn. So we shall see.
androiddev,3d05cp,nubiee,2,Sun Jul 12 10:52:57 2015 UTC,"mobile clients are NOT like browsers. Those tools won't work.  You either write your app natively and use tools like Calabash/Appium to do blackbox testing or, you write a simple app using webviews. If the latter, automation is not easy, I think espresso will have webview support soon though. Maybe you can do something like sendKeys() on a webview (not tried it)."
androiddev,3d05cp,bart007345,1 point,Sun Jul 12 11:02:13 2015 UTC,"hm okey,the only thing i need is to find a library that enables me to login to a website with username and password and get the cookies. I handle the rest web thingy with jsoup.  So u advice me to use espresso?"
androiddev,3d05cp,bart007345,1 point,Sun Jul 12 13:07:44 2015 UTC,Can you please confirm you want to do this from an android app?
androiddev,3d05cp,togamans,1 point,Sun Jul 12 13:11:07 2015 UTC,"for your use case, can you make an HTTP request to the login endpoint? if you're not actually testing login, you don't to use the web UI."
androiddev,3d05cp,togamans,1 point,Sun Jul 12 14:39:14 2015 UTC,"The app i want to make is to: 1) login to the website of my university (username and password) 2) get some data 3) download some files Steps 2 and 3 are done through Jsoup  I just want to login to login to the website and get the cookies and yes,i want to do these things using android"
androiddev,3d05cp,togamans,1 point,Sun Jul 12 14:55:36 2015 UTC,"You don't have to do anything fancy. given there's no API, and you want to use Android, take a look at how the post for the Login gets generated on the site, and recreate the required parameters using HttpClient and your own form for user input. A quick inspect element should tell you what's submitted, and to which end point. Then yank the cookies out of the HTTP response."
androiddev,3d05cp,togamans,1 point,Sun Jul 12 15:13:11 2015 UTC,"i have found the login form, the inputs and the button. But i do not have any example of what am i supposed to do(cannot find anything in the web or any kind of documentantion). Any kind of link or example is greatly appreciated :D"
androiddev,3cxwv4,moezz,7,Sat Jul 11 19:43:08 2015 UTC,"Look up loot dungeon or something like that. Free game, very successful actually. Clones pop up and charge money."
androiddev,3cxwv4,MeLurker,10,Sat Jul 11 22:15:24 2015 UTC,"I think you mean ""Pixel Dungeon"""
androiddev,3cxwv4,thehitchhikerr,1 point,Sun Jul 12 01:55:25 2015 UTC,There are clones of every popular app on the play store though.
androiddev,3cxwv4,Ninja_Fox_,6,Sun Jul 12 06:02:09 2015 UTC,"No, but SeriesGuide was really successful prior to being open sourced."
androiddev,3cxwv4,TiberiusAbadon,3,Sat Jul 11 22:57:20 2015 UTC,"SeriesGuide is open sourced?  Edit: Seems like it,wow."
androiddev,3cxwv4,iPackPixels,3,Sat Jul 11 23:34:39 2015 UTC,https://github.com/UweTrottmann/SeriesGuide/
androiddev,3cxwv4,TiberiusAbadon,3,Sat Jul 11 23:36:18 2015 UTC,"Yeah found it. Wow, I didnt think It was and what upsets me is I always demand features when I can tinker about and make my own. Have you looked into the apps code or done anything with it?"
androiddev,3cxwv4,iPackPixels,3,Sat Jul 11 23:54:48 2015 UTC,"My app is not open-source per-se, but the source code is available for viewing on GitHub: http://github.com/aegamesi/SteamTrade/ -- you're not allowed to modify or redistribute it-- it's for reference.   I don't know how successful you would call it: { Google Play Link }, but the reason I made the source code available is because it requires you to input your Steam login credentials, and I want people to be able to verify that the app doesn't attempt to steal credentials."
androiddev,3cxwv4,ThePickleMan,1 point,Sun Jul 12 05:21:02 2015 UTC,Do you have a pro account on GitHub? I was under the impression that the free accounts required all code to be open source.
androiddev,3cxwv4,bradmont,2,Sun Jul 12 12:38:41 2015 UTC,"I do have one, but as far as I can tell that isn't relevant. You can't restrict people from forking your code or anything, but the license can still legally restrict what you can do with it."
androiddev,3cxwv4,ThePickleMan,16,Sun Jul 12 14:19:59 2015 UTC,Nope #Capitalism
androiddev,3cxwv4,ArchdukeThe,6,Sat Jul 11 21:21:14 2015 UTC,"Open source does't mean free thought, some of the most expensive linux distro's are still open source, RedHat being one.  Open source doesn't mean the right to copy your code, or modify it, it just means, right of seeing the code."
androiddev,3cxwv4,SimonWoodburyForget,10,Sat Jul 11 23:05:47 2015 UTC,"Although CentOS is completely identical to Red Hat except for the branding, and it's completely free. What you're paying for when you buy Red Hat is their support services."
androiddev,3cxwv4,504d206d652074686973,8,Sat Jul 11 23:15:14 2015 UTC,"Open source doesn't mean the right to copy your code, or modify it, it just means, right of seeing the code.   Actually, it does. At least, every OSS license I'm familiar with allows you to use/modify the code. Some licenses require you to release any modifications under the same license, but other than that you can do what you want with it. Sure, it's still copyright the original author, but OSS means you can copy/modify/use the code.  EDIT: For example, I have a web app that is open source under the MIT License which means anyone can do whatever they like with it, including sell it commercially, as long as they include my copyright and a copy of the license."
androiddev,3cxwv4,kiswa,2,Sat Jul 11 23:42:20 2015 UTC,"You just said it, license, that's what tells you if you can copy, modify or use the code without paying, not the fact that its open source, if source code is there to see, it means its open source. It doesn't mean you can use it or do the same thing then on any other open source software's. Without a license you actually don't have the right to do anything in legal terms.... but yeah anyway's.  Like space engineers: https://github.com/KeenSoftwareHouse/SpaceEngineers/blob/master/EULA.txt , required to own a copy of the game to use the source code, only to make mods and other things, etc. etc. etc. you can read it if you want. It's something under those lines of only being used for the game, cannot re-distribute, so cannot copy, or use without having the game.  You're right like i said, it's the license, i could make a open source not free software, i could make sure that customer cannot remove legally the tracking software i implemented in a server to track issues, but open sourcing it means the customer see's what i did. If he doesn't like it i could tell him to fuck off, or i could tell him he can remove it.  Open Source Is Definitely Capitalizable Is All I'm Saying ;P....."
androiddev,3cxwv4,SimonWoodburyForget,-1,Sun Jul 12 00:09:45 2015 UTC,"I see what you're saying. I was thinking of permissive licenses as those are the most common with things that are made open source.  I would imagine this is the exceptoion, not the rule for making things open source."
androiddev,3cxwv4,kiswa,5,Sun Jul 12 01:17:05 2015 UTC,"Do you have any source (no pun) for your claim? I have never seen the term ""Open Source"" being used this way by professional developers. The Open Source Initiative and Wikipedia both define it as requiring the explicit permission to modify and distribute the content."
androiddev,3cxwv4,brombaer3000,1 point,Sun Jul 12 05:02:39 2015 UTC,"Open-source software:       Open-source software (OSS) is computer software with its source code made available with a license in which the copyright holder provides the rights to study, change, and distribute the software to anyone and for any purpose.  Open-source software may be developed in a collaborative public manner. Open-source software is the most prominent example of open-source development and often compared to (technically defined) user-generated content or (legally defined) open-content movements.     Image i - A screenshot of Linux Mint running the XFCE desktop environment, Mozilla Firefox browsing Wikipedia, a calculator program, the builtin calendar, Vim, GIMP, and the VLC media player, all of which are open-source software.     Relevant: Free and open-source software | Open-source software development | List of free and open-source software packages | Comparison of free and open-source software licenses   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
androiddev,3cxwv4,autowikibot,1 point,Sun Jul 12 07:49:07 2015 UTC,"I don't exactly think you can build up such a massive word has OSI is doing and have it standardize properly, not in English any ways.   But the point is ""Open Source"" wasn't a term until it was deliberately choose and built up to have a specific meaning. There is a lot of history in the community around that term, and it's wasn't always a popular choice to - see reaction from Richard Stallman and others. People now go ""oh, the term Open Source is obvious and can't be controlled/defined like that"" but they miss the point that it's only obvious now because of a lot of people really put a lot of work into it. So personally, I fully stand behind the OSI definition of the term Open Source."
androiddev,3cxwv4,jarofgreen,1 point,Sun Jul 12 07:49:52 2015 UTC,"Open source doesn't mean the right to copy your code, or modify it, it just means, right of seeing the code.   This isn't what the common definition of open source stands for. Code released under a restrictive license that don't allow copying or modification is typically called ""visible source"" or something similar."
androiddev,3cxwv4,veeti,1 point,Sun Jul 12 09:47:21 2015 UTC,"+1 When people hear the term ""Open Source"" they generally assume they have rights to reuse in some way. It is so much more than just viewing the code.  Some of Microsoft's customers can view the source of Windows, but no-one calls Microsoft Windows Open Source."
androiddev,3cxwv4,jarofgreen,1 point,Sun Jul 12 07:13:49 2015 UTC,"The average joe has nothing to gain from open sourcing his products (most of the time). It'd just lead to the project not gaining any popularity and someone else stealing your code.  Google had everything to gain from making android open source.    Because they can't let iOS take over the world.  Because they want to woo the phone manufacturers and let them bloat android to their heart's content. Because they want to give us no choice but use the play store to get apps.   The average joe isn't even anywhere close to the playing field of big companies like Google to be able to afford open sourcing their work.   I mean, yeah libraries and stuff are fine, a nice way to get known in the community, but actual commercial products that are live on the market? That's not a great idea in most cases."
androiddev,3cxwv4,lordoftherings911,3,Sun Jul 12 09:30:38 2015 UTC,I know space engineers just open sourced a couple months ago. edit: https://github.com/KeenSoftwareHouse/SpaceEngineers
androiddev,3cxwv4,SimonWoodburyForget,2,Sun Jul 12 04:59:15 2015 UTC,WhisperSystems open-sourced their entire TextSecure stack which is quite successful:   TextSecure/Android TextSecure/Server TextSecure/ChromeExtension
androiddev,3cxwv4,jenz88,1 point,Sat Jul 11 22:58:57 2015 UTC,I really wish I could convince my friends to use textsecure...
androiddev,3cxwv4,bradmont,1 point,Sun Jul 12 10:56:38 2015 UTC,"I think mine falls below moderately successful, but it's open source.   https://github.com/dinosaurwithakatana/hacker-news-android  All my other apps are open source as well."
androiddev,3cxwv4,burntcookie90,1 point,Sun Jul 12 12:39:37 2015 UTC,"I think mine falls below moderately successful   It's interesting how ""falls below"" is akin to saying ""falls short of"", meaning ""not/less than moderately successful"", but ""falls under"" would mean that it IS moderately successful (""falls under 'moderately successful'""), even though ""under"" and ""below"" are basically synonyms.  English is so weird."
androiddev,3cyuem,Real_Life_Human,14,Sun Jul 12 00:50:32 2015 UTC,You can actually use ZXing without requiring the user to install the app by using this: https://github.com/journeyapps/zxing-android-embedded
androiddev,3cyuem,NeedsMoreDragon,1 point,Sun Jul 12 01:23:08 2015 UTC,We're using this in our app and it seems to be working well enough!
androiddev,3cyuem,zoells,6,Sun Jul 12 04:59:15 2015 UTC,I've used this barcodescanner library which is a wrapper around both ZXing and ZBar. It's easy to use and customize.  It comes with Apache V2 License.
androiddev,3cyuem,ylameow,1 point,Sun Jul 12 04:28:41 2015 UTC,"I like this option the most, thanks to everyone for your suggestions 😀"
androiddev,3cyuem,bryanlogan,5,Sun Jul 12 04:53:16 2015 UTC,You could also incorporate zxing into your app.  https://github.com/zxing/zxing
androiddev,3cyuem,samiraekrami,1 point,Sun Jul 12 01:23:51 2015 UTC,I'm using ZXING in my project
androiddev,3cyuem,izzzi,1 point,Sun Jul 12 11:34:08 2015 UTC,"I've found that ZBar is far more performant and stable than ZXing, however this is a bit more work involved in getting it setup."
androiddev,3d0jfh,bubbleguuum,3,Sun Jul 12 14:13:27 2015 UTC,"i have one paid app up on amazon's store and i get almost nothing from it, plus its a hassle to keep updated. the only reason it's still there at this point is because they make it a hassle to unpublish it. last i checked you have to get in touch with them to do so.  to put it in perspective, one month of amazon sales, for me, is less than one day of google play sales."
androiddev,3d0jfh,FasterThanTW,2,Mon Jul 13 04:50:49 2015 UTC,If you want to effectively unpublish you can set your apps availability to just one small country in Africa.
androiddev,3d0jfh,Boss_Baller,1 point,Tue Jul 14 18:37:03 2015 UTC,That's actually not a bad idea. Thanks!
androiddev,3d0jfh,FasterThanTW,1 point,Tue Jul 14 19:04:22 2015 UTC,That's a quality tip.  I'll remember that.
androiddev,3d0jfh,lemonfresh33,1 point,Wed Jul 15 16:50:15 2015 UTC,Same here.
androiddev,3d0jfh,efalk,1 point,Mon Jul 13 22:40:36 2015 UTC,"I'm not 100% sure if i understand your question correctly, but if you sell something in the amazon version of your app, nothing (0,00%) of that goes to google."
androiddev,3d0jfh,BikerMouseFromMars,2,Sun Jul 12 14:23:39 2015 UTC,"My question is: if you earn a sum of  x  each month from sales from both Google Play and the Amazon app store, what percentage of x is from Google Play and what percentage from Amazon."
androiddev,3d0jfh,lemonfresh33,4,Sun Jul 12 14:28:35 2015 UTC,"In my experience, you'll get 5, maybe 10% via Amazon."
androiddev,3d0cxj,keanu_ninja_turtle,3,Sun Jul 12 12:48:30 2015 UTC,They're probably downloading and playing video versions of the gifs: http://imgur.com/blog/2014/10/09/introducing-gifv/  This avoids the bandwidth and memory hit of a standard gif.
androiddev,3d0cxj,mikenomn,1 point,Sun Jul 12 13:10:52 2015 UTC,"No, relay goes to giant.imgur and similar to load gifs."
androiddev,3d0cxj,pakoito,1 point,Sun Jul 12 17:32:24 2015 UTC,Got any more details on this? Couldn't find anything for giant.imgur on an initial google search
androiddev,3d0cxj,pakoito,2,Sun Jul 12 18:46:58 2015 UTC,"IIRC giant is the subdomain for the CDN that stores gif version of gifv uploads. Try uploading a gif, you can get direct links to both or visiting a gif heavy subreddit.  gonewild"
androiddev,3d0cxj,lakewoodjoe112,3,Sun Jul 12 19:31:24 2015 UTC,"Is there an imgur api? It seems like they're probably bypassing loading anything other than the actual content (many apps hit the actual page, causing Javascript, css, etc. loads)"
androiddev,3d0cxj,H3x0n,2,Sun Jul 12 21:16:57 2015 UTC,I just had a look and yes they do! Apparently you can get the gif returned as an mp4 so I am going to give that a try and see if it is faster to stream that. Thanks for the idea!
androiddev,3d0cxj,Jawnnypoo,2,Sun Jul 12 21:30:12 2015 UTC,You could try Glide. Google use this in the io app too. https://github.com/bumptech/glide
androiddev,3d0cxj,nugdeez,1 point,Sun Jul 12 15:00:39 2015 UTC,I tried glide but the gifs didn't load at all with that. Both just don't seem to give me the performance that I can see in other apps for downloading and displaying
androiddev,3d0cxj,rinav4all,1 point,Sun Jul 12 15:53:30 2015 UTC,"Glide will load gifs eventually, but it is realllllly slow. I think I have seen good performance with Universal Image Loader, but I haven't tried it out yet."
androiddev,3d0cxj,nebmay,2,Sun Jul 12 19:11:31 2015 UTC,"I've been sending the url to a webview on a dialog fragment  in the app that I'm working on.  Probably not the best method, but it loads decently fast."
androiddev,3d08qv,vaironl,2,Sun Jul 12 11:48:23 2015 UTC,"I'd say its worth building something small like a weather app. Keep the scope small so that you don't get daunted.  For example - a weather app that shows the forecast for the upcoming week, based on your gps location. Use http://openweathermap.org/api for the weather data, and some libraries like Retrofit to handle the REST side of things, and ButterKnife to give your fingers a longer shelf-life. Build it to show the data in text form only, use that as your first milestone. Once this is done spruce up the UI to have weather icons and some style.  Don't worry about producing something amazing from the get go, its too daunting and off putting. Just build something simple, something that works. Look at the working code a week later and realize that you were an idiot for writing such stupid code, and refactor. Do this once and a while and you will end up with something decent :D"
androiddev,3d08qv,Real_Life_Human,3,Sun Jul 12 12:34:11 2015 UTC,"Look at the working code a week later and realize that you were an idiot for writing such stupid code, and refactor.   So true!"
androiddev,3cyh3a,Eugenethemachine,9,Sat Jul 11 22:43:14 2015 UTC,"3 years ago I put my first app on the store. It was both my first Android and Java project. With 31K current installs, I think it's rather successful. Though I haven't received any direct benefit, it's a great boost to your confidence. Now i'm rewriting it, because it's one of the worst Java examples I have ever seen, but it still works."
androiddev,3cyh3a,SuperRandomExplosion,4,Sun Jul 12 14:44:46 2015 UTC,"If you want it to be part of your portfolio, then yes. Most employers, even if they know how, aren't going to want to take the time to compile your app and side load it in order to see it in action.  If you don't want a potential employer to see it then you probably shouldn't put it on the Play Store."
androiddev,3cyh3a,fermentum,1 point,Sat Jul 11 23:29:57 2015 UTC,"Good point, thanks for your reply"
androiddev,3cyh3a,sourd1esel,4,Sat Jul 11 23:53:51 2015 UTC,Putting on the play store is a process. Also if you get a few downloads then you can discover bugs. Might be worth it.
androiddev,3cyh3a,charredsoftware,3,Sat Jul 11 23:32:15 2015 UTC,"There were a lot of problems with my first app which made publishing difficult. Without publishing it anyway, ironing out those kinks in future apps would've been hell."
androiddev,3cyh3a,communistapple,4,Sun Jul 12 04:06:57 2015 UTC,"If it's a good app, put it on the Play Store so they can check it out. If it's a crap app, call it something fancy and leave it on Github"
androiddev,3cyh3a,darkforestzero,3,Sun Jul 12 03:41:55 2015 UTC,definitely.  creating an app is one thing.  Publishing an app is another.  You will learn plenty doing both
androiddev,3cyh3a,crowbar87,2,Sun Jul 12 02:41:12 2015 UTC,DO IT! I wrote an app for learning purposes and uploaded to the store. The first job interview I went to - the interviewer (who was the Android team leader at that time)  asked me questions mostly about my app and my development process/ decisions.  This app is what eventually got me that job.
androiddev,3cyh3a,justec1,1 point,Sun Jul 12 06:46:42 2015 UTC,"It's worthwhile if only to understand the full lifecycle of publishing, versioning, handling the dashboard, and responding to users. I put my first app on the Store even though it was only for me and I had a couple hundred users when the device it was meant for was popular. I have the code on Github and I point to it on my CV for potential employers to see."
androiddev,3czii1,KyleJensen97,3,Sun Jul 12 05:00:31 2015 UTC,"As oreo_man suggested, use the density folders (hdpi, xhdpi, etc).    As you increase the density, you need to put a bigger image. For example, if you have a 100x100 image for MDPI, the image should be scaled to the following dimensions:    MDPI(1.0) - 100x100 HDPI(1.5) - 150x150 XHDPI(2.0) - 200x200 XXHDPI(3.0) - 300x300 XXXHDPI(4.0) - 400x400    In general, I would recommend creating your largest asset(400x400 in the above example) first, then scaling it down in Photoshop/GIMP. In a perfect world, all of your images would be SVGs (which Android Studio can now scale for you automatically), but these are often not available.    For more information, visit the Android docs on supporting multiple screens: http://developer.android.com/guide/practices/screens_support.html"
androiddev,3czii1,RileyGB,2,Sun Jul 12 16:07:24 2015 UTC,"Is it something to do with the hdpi, xhdpi, xxhdpi folders for drawables? I'm pretty sure android will load the drawable based on screen size"
androiddev,3czii1,oreo_man_,1 point,Sun Jul 12 05:13:30 2015 UTC,"Its just in general yeah, how does android actually know what size, what sizes have to go into those folders? Etc. Ive tried displaying bitmaps to the canvas and loading bitmaps at different sizes and everything, but nothing works correctly, everything either stretches or is blurry and doesnt actually fit the size of the screen on other devices."
androiddev,3czii1,bump_elephant,3,Sun Jul 12 15:44:13 2015 UTC,"I'm not sure how deep of an explanation you're looking for but let me try:  Since Android can run on a whole variety of devices each with their own screen size and resolution, the people who built android wanted to have a way to try and keep graphical assets consistent across all these devices. You include assets appropriate for all screen densities and then the android system (which knows the screen density of the device it is running on) picks the appropriate graphic to use.  The folders in your project that have names such as ""hdpi"" refer to densities that have been decided upon by the android engineers. For example hdpi stands for ""high dots per inch"" and assets in this folder will be used when Android detects that it is running on a device with screen density of around 240dpi. So in other words: when someone downloads and runs your app on a device with a density of around 240dpi, any time you reference a drawable in your code, android will first look in the folder that most closely matches that density (in this case, the hdpi folder).   Think about it this way: two screens of the same physical size (say 5 inches) can have a radically different number of pixels. One my have a horizontal pixel count of 850 and another 1440. What this means is that the actual, physical pixels on both screens are different sizes (the device with 1440 pixels has to fit more pixels into the same space, hence they must be smaller). So, if you've made an image that is 100 pixels across, it'll take up the same number of pixels on both screens - but on the device with smaller pixels, it will obviously appear smaller to the user. Sure, you could always scale the lower-resolution image up, adding pixels, so that it appears the same physical size on both screens, but then you have the issue of degraded quality that happens when you up-scale an image (jaggy edges etc).  You can use a tool like this to find out what image sizes you should include in those folders. What I like to do, is design a graphic with a the a known screen in mind (say, the moto E). Knowing that the moto E's screen is considered by android to be hdpi, I'll then enter the dimensions of the image into the hdpi fields, and see what other sizes I should make to go into the rest of the project folders(mdpi, etc).   Not sure if any of that helps but feel free to ask any follow up questions :)"
androiddev,3czii1,bump_elephant,1 point,Mon Jul 13 03:05:40 2015 UTC,"This makes perfect sense! Is there anything in the code that you need to do then? What I do is just create a bitmap, link it, and display it in the canvas. I also wonder about text, because I have this same problem with the text being the same size on all phones."
androiddev,3czii1,Fellhuhn,1 point,Thu Jul 16 20:06:27 2015 UTC,"I can't say I've ever had to draw anything to a Canvas manually. Is there some reason you have to do it that way? If I need to display an image I'll use an ImageView and to get my image into it I'll do one of the following:   Set the image source for the ImageView in XML using android:src=""@drawable/my_image Set the image source for the ImageView in Java code using myImageView.setImageResource(R.drawable.my_image);   In the first method, we tell android that we're looking for a drawable type resource and then give the name of the drawable (in your case, the bitmap(s) that reside in the mdpi, hdpi folders etc). We don't want to tell it at this point which version of the image to use, we'll let android decide when your app is running on various different devices which drawable folder to look in.  In the second method we use variables in a class called ""R"" (R for ""Resources"") which act as a kind of link between our Java code and the resources folder. Every time you add a new resource (drawable, layout, string etc) the R class is automatically updated for you with a reference to allow android to find that resource. Again, we don't want to be concerned with which version of the image we use here, each android device will choose for themselves which folder to look in based on its own display density.  In fact, ALL resources are treated this way. Both xml files and Java code should have no references to resources with specific qualifiers. For example, a layout resource may exist in two folders: landscape and portrait. These are qualifiers just as mdpi and hdpi are qualifiers; android will decide at runtime which folder to look in based on its knowledge of the device it is running on (if the phone is in landscape orientation, it will look in the landscape folder to fetch that version of the layout).  Another quick note about using ImageViews: you have to pay attention to the xml attribute ""scaleType"". This will change how android will manipulate whichever version of your image it has chosen. For example: ""scaleType:center"" will center the image inside the ImageView and perform no scaling, while ""scaleType:centerCrop"" will make the smallest edge of your image match the length of the largest edge of your ImageView while scaling the image proportionally. (Oh and make sure the different versions of your bitmaps that go into the various folders have the same name!)  As for text, you're encouraged to set the size of text in ""sp"" units rather than ""dp"" or pixels. This means that the text will scale based on the density of the screen but also take into account the users' text-size settings. You can set this as an xml attribute of your TextViews using: ""textSize=""16sp""."
androiddev,3d03is,lordoftherings911,7,Sun Jul 12 10:21:06 2015 UTC,it can barely build the code in a decent time and now you want voice recognition too?
androiddev,3d03is,bart007345,3,Sun Jul 12 14:42:40 2015 UTC,I think anything you would want to potentially do with voice function you can do with a keyboard shortcut much faster/easier (and not get hit with less than perfect voice recognition problems).
androiddev,3d03is,Cyber34,2,Sun Jul 12 11:39:13 2015 UTC,"Go ahead, try it out"
androiddev,3cwg7v,lordoftherings911,30,Sat Jul 11 10:30:18 2015 UTC,"Until there's a compelling reason against or I'm writing an application that relies exclusively on new APIs, then I see no reason not to support API 15 since the support libraries make it easy."
androiddev,3cwg7v,pandanomic,17,Sat Jul 11 10:32:32 2015 UTC,"I work at a large company with many apps. We just moved to API 15 last release (we were at 8, I believe). Typically we won't touch it until global (and our) user distribution tops 95%.  Obviously do what you want, there's not ""wrong"" way. But unless you NEED something in the new APIs, don't screw your users with older phones. The more the merrier."
androiddev,3cwg7v,Arclite83,10,Sat Jul 11 11:42:58 2015 UTC,I've been only writing apps for API 16 for a while now unless client requests otherwise.  I guess everyone has their own preferences.
androiddev,3cwg7v,imsrslyyouguys,97,Sat Jul 11 11:29:59 2015 UTC,But I'm sure many of us have shared preferences as well.
androiddev,3cwg7v,knezmilos13,5,Sat Jul 11 11:39:18 2015 UTC,See what you did there.
androiddev,3cwg7v,spiritus1,5,Sat Jul 11 19:46:49 2015 UTC,The reason why we made the jump to API 15 is Fragments API + aminations. There is no such reason to jump again now. Probably a couple of years later we'll make a jump to API 21.
androiddev,3cwg7v,jackhexen,8,Sat Jul 11 11:55:02 2015 UTC,"Fragments are irrelevant. By the time it was even considerable to be API 15+ only, fragments were well supported in the support library. You're not really supposed to use the native ones"
androiddev,3cwg7v,Arkanta,2,Sat Jul 11 17:14:45 2015 UTC,You're not really supposed to use the native ones   source/evidence for that odd claim?  edit: google uses native fragments in the IO app
androiddev,3cwg7v,Cg2XHPxz,8,Sat Jul 11 18:50:46 2015 UTC,"Because if there's ever any bug in the native Fragment API, it'll only be fixed in later versions of Android. However, if there's ever a bug in the support Fragment API, an update to the support library will fix it and affect all supported versions of Android (back to API 4).    And there's random bugs in the Android API all the time. So it's best to use the support APIs because any updates will be applied to all devices back to API 4 (support lib) or API 7 (app compat libs), not just future versions of Android."
androiddev,3cwg7v,QuestionsEverythang,2,Sat Jul 11 19:31:23 2015 UTC,"Yep, and this happened already. Also AppCompat uses support fragments only"
androiddev,3cwg7v,Arkanta,2,Sat Jul 11 19:32:53 2015 UTC,you don't have to use support fragments.  Support Fragment is just on top of native fragment.
androiddev,3cwg7v,iNoles,1 point,Sat Jul 11 20:27:34 2015 UTC,No they're not on top. Look at the class hierarchy.
androiddev,3cwg7v,Arkanta,1 point,Sat Jul 11 20:47:29 2015 UTC,Yeah but what he's saying is you can use native fragment with appcompatactivity. Since appcompatactivity is a subclass of activity. Just call getfragmentmanager instead of getsupportfragmentmanager. So appcompatactivity has no bearing on support vs native fragments
androiddev,3cwg7v,Cg2XHPxz,1 point,Sat Jul 11 21:35:26 2015 UTC,Of course. Support-v4 is one of AppCompat's dependencies.
androiddev,3cwg7v,QuestionsEverythang,2,Sat Jul 11 19:48:06 2015 UTC,"The evidence is that the AppCompat library (which backports a shitload of stuff) uses the v4 fragment API. Also, the support lib backports a lot of features and bugfixes (for example, nested fragments were backported to API 4+).    There is no formal evidence, but I thing anyone basing their fragments on native fragment impl rather than support v4 is a fool"
androiddev,3cwg7v,Arkanta,1 point,Sat Jul 11 19:31:51 2015 UTC,appcompatactivity can be used with native fragments just as well. (just the difference between calling getsupportfragmentmanager and getfragmentmanager).
androiddev,3cwg7v,Cg2XHPxz,1 point,Sat Jul 11 19:39:06 2015 UTC,The native fragments are not better than the support ones. So there's NO reason (other than to screw a small % of users I agree) to not user support.everyTHANG :D
androiddev,3cwg7v,spiritus1,1 point,Sat Jul 11 19:47:36 2015 UTC,"I think there's a difference between a better option and the phrase ""not supposed to use"" which is what I was taking issue with"
androiddev,3cwg7v,Cg2XHPxz,-1,Sat Jul 11 19:51:12 2015 UTC,I don't like using a library when I do not need to.
androiddev,3cwg7v,jackhexen,1 point,Sat Jul 11 19:32:15 2015 UTC,"Sure, but you really should. The v4 backports a lot of bugfixes."
androiddev,3cwg7v,Arkanta,0,Sat Jul 11 19:56:53 2015 UTC,"Yeah, I know. :\"
androiddev,3cwg7v,jackhexen,3,Sat Jul 11 20:05:41 2015 UTC,"API 16. Well few of my private apps of course. It's funny to see even on some of my small apps, there's more Kitkat and Lollipop users compared to JB and ICS. I guess it really depends on your demographics and what your app really does. Unless you have a compelling reason to ditch API 15 (aside minor hiccups few and there), I suggest staying with it for awhile."
androiddev,3cwg7v,bbqburner,2,Sat Jul 11 12:11:00 2015 UTC,"I say try to support as many as you can, but when implementing new features, stay low but look at statistics.   All within reason of course. 15-16 is a good minimum."
androiddev,3cwg7v,ajpri,4,Sat Jul 11 14:37:16 2015 UTC,"I still support API 10. Target API 22. With the support libraries, it doesn't cost too much effort anyway and API 10 is my limit due to OpenSL."
androiddev,3cwg7v,StenSoft,1 point,Sat Jul 11 15:30:57 2015 UTC,+1. Still supporting api 10.
androiddev,3cwg7v,shaunidiot,1 point,Sat Jul 11 18:50:39 2015 UTC,"When I start working on an app, I start with API 16. Once everything is finished and stable, I move down API levels but I already use support libraries from the start."
androiddev,3cwg7v,Muchoz,1 point,Sat Jul 11 12:29:09 2015 UTC,"I think there's two different questions here:  is it worth cutting off users of existing apps who are < API 15. Like others have said, probably not unless you have a compelling reason.  If you're starting development on a new app tomorrow, 16 is probably the bare minimum I would go. Internal metrics suggest that you could get away with minAPI 19 right now if the app is going to be released in 6 months or more. But I also work on apps that attract people with the latest hardware/software so my sample is pretty biased"
androiddev,3cwg7v,Cg2XHPxz,1 point,Sat Jul 11 13:36:00 2015 UTC,"There's a few odd behaviors with ICS, but I still keep API 15. It's probably not too disastrous to move up, but aside from font-family I haven't seen any reason not to switch."
androiddev,3cwg7v,fleker2,1 point,Sat Jul 11 17:01:20 2015 UTC,"I'm sticking with 14 and 15 for the foreseeable future. There's still a decent amount of my user base on those APIs.  Anything API < 14 isn't really worth the effort right now - if you can avoid it. Ideally I'd like to move up to 16 in the latter half of this year, but we'll see how the audience continues to break down over the following months."
androiddev,3cwg7v,lomoeffect,1 point,Sat Jul 11 18:46:59 2015 UTC,Why 14? Less than 0.1% of all Google Android is on 14. Do you even have any users on 14?
androiddev,3cwg7v,QuestionsEverythang,1 point,Sat Jul 11 19:41:58 2015 UTC,"Woops you're right, I was confusing 14 and 15.  Just under 10% of my users are on 15 - ideally I'd like to move to 16 over the next few months because that would massively sort out some bugs which only seem to occur on 15."
androiddev,3cwg7v,lomoeffect,1 point,Sat Jul 11 22:04:00 2015 UTC,"On my current app I just moved from 8 to 11. I know the install base is low, but what the heck, I love challenges."
androiddev,3cwg7v,8bitmaster,3,Sat Jul 11 18:59:59 2015 UTC,"It's one thing to challenge yourself to support actual users. It's another thing to waste time ""challenging"" yourself for non-existent users on outdated platforms.    Don't waste time learning outdated tricks for those who have your app that aren't even on API 11."
androiddev,3cwg7v,QuestionsEverythang,1 point,Sat Jul 11 19:43:56 2015 UTC,For new apps i use > 15. Existing ones I tend to keep 15 and below.
androiddev,3cwg7v,HieronymusK,1 point,Sat Jul 11 19:08:48 2015 UTC,I've gotten a few layout bugs in 15 and lower that were fixed in 16. That was one big reason for upgrading. Now I'm considering upping it to KitKat.
androiddev,3cwg7v,asarazan,1 point,Sat Jul 11 19:14:23 2015 UTC,Layout bugs like what?
androiddev,3cwg7v,QuestionsEverythang,1 point,Sat Jul 11 19:44:24 2015 UTC,It was obscure stuff with relativelayout iirc. Admittedly you probably wouldn't run into it with average usage.
androiddev,3cwg7v,asarazan,1 point,Sat Jul 11 20:02:04 2015 UTC,"If you HAVE to use (the most straightforward way) something and it's not present in API xx, drop it. Simple as that. (while maintaining 90ish % of users)"
androiddev,3cwg7v,spiritus1,1 point,Sat Jul 11 19:48:38 2015 UTC,"The MediaCodec API appeared on API 16, big reason to ditch API 15 if you are doing media apps."
androiddev,3cwg7v,acid2do,1 point,Sat Jul 11 21:46:49 2015 UTC,All of our userbase is ~80% for api 4.2+ that makes us to go at least to API level 16. But due to presentation reasons we have to support for 15 right now.
androiddev,3cwg7v,lordVader1138,0,Sun Jul 12 16:19:18 2015 UTC,Api 18 for Callables
androiddev,3cwg7v,ShockScapes,1 point,Sat Jul 11 16:45:55 2015 UTC,? like a java callable? I don't get it
androiddev,3cwg7v,Cg2XHPxz,1 point,Sat Jul 11 18:52:16 2015 UTC,"If he's talking about this, idk why he thinks he needs his minSdkVersion to be API 18. This has been in Android since API 1."
androiddev,3cwg7v,QuestionsEverythang,1 point,Sat Jul 11 19:38:25 2015 UTC,Datakinds.Callables
androiddev,3cwg7v,ShockScapes,1 point,Sat Jul 11 20:37:47 2015 UTC,Don't follow. What is that used for that it's important enough to base the minsdk of your app
androiddev,3cwg7v,Cg2XHPxz,1 point,Sat Jul 11 21:10:19 2015 UTC,Joins the tables of useful contact info into a single one
androiddev,3cwf6x,SudoSilman,7,Sat Jul 11 10:12:16 2015 UTC,appbrain statics about used gamedev stuff: http://www.appbrain.com/stats/libraries/tag/game/android-game-libraries
androiddev,3cwf6x,BikerMouseFromMars,1 point,Sat Jul 11 12:06:47 2015 UTC,"That's insanely high, unity is v popular"
androiddev,3cwf6x,Ubersheep,6,Sat Jul 11 18:41:57 2015 UTC,Unity Android Showcase
androiddev,3cwf6x,hitler_kardashian,1 point,Sat Jul 11 10:21:50 2015 UTC,"In regards to effiency, I'd wager that a unity game should actually run very efficiently, provided that the game itself isn't doing anything crazy.  Game engine optimization is an incredibly complicated beast, and the unity guys know what they're doing."
androiddev,3cwf6x,Trogdor111,1 point,Sun Jul 12 02:30:28 2015 UTC,"Also, don't forget games that were made with .js and html as well as Corona."
androiddev,3cwlx9,mnjmn,2,Sat Jul 11 12:02:29 2015 UTC,Do you ever find yourself having to debounce click listeners? I noticed that accidental double clicks can happen sometimes and I launch an activity twice. Wondering if this is something I should handle or just let go.
androiddev,3cwlx9,2Kew4Skew,1 point,Sat Jul 11 23:42:36 2015 UTC,"I just started getting my feet wet in Android development and currently going through Udacity's course, a lot of the first sections are about Layouts, View, etc. So far we've been writing all the XML by hand.  I'm wondering if this is common practice/best approach? Like a lot of you, i'm sure, I am way more interested in my Apps functionality than the nuances of placing elements on the screen. I was hoping I could just drag and drop the elements I need from a toolbox and then dive in the code right away. At the same time, if writing the XML by hand is the best way to do it then that's how I'll do it, I just don't want to be losing my time learning about that if it's not all that relevant in the end.  Get where I'm coming from? Any advice appreciated."
androiddev,3cwlx9,Steedsofwar,2,Sat Jul 11 17:00:57 2015 UTC,"I use a bit of both.  I'll quickly create elements in the layout tool, then refine them in the xml.  It saves me a lot of time, i just wish it was easier, comparing to iOS it's terrible.  I can see why it's done the way it's done, but they should have reinvented it."
androiddev,3cwlx9,TiberiusAbadon,3,Mon Jul 13 09:41:45 2015 UTC,Using styles helped ease the pain of XML for a bit. That part of android has been the same for quite some time now and I think it would be great if they retooled it. iOS's tools make me jealous.
androiddev,3cwlx9,fodawim,3,Sat Jul 11 17:15:59 2015 UTC,Honestly the XML is the best way for me. The layout tools in android suck (imo).
androiddev,3cwlx9,farmasek,1 point,Sat Jul 11 17:03:22 2015 UTC,"Is it possible to set textview style from google design, for example is it possible to set style to Display 2, or i should just set size ?"
androiddev,3cwlx9,TiberiusAbadon,2,Sat Jul 11 16:57:35 2015 UTC,"<TextView  android:id=""@+id/textView""  android:layout_width=""wrap_content""  android:layout_height=""wrap_content""  android:textAppearance=""@style/TextAppearance.AppCompat.Display2""  />"
androiddev,3cwlx9,farmasek,1 point,Sat Jul 11 17:10:38 2015 UTC,Thank you !
androiddev,3cwlx9,guillaumeyp,3,Sat Jul 11 17:15:56 2015 UTC,"Yesterday, I used Retrofit + Otto for my API calls. When my server sent me an error with a message {""message"":""unvalid password""}, I used to handle it in a Retrofit Callback failure method. I produced an event with the RetrofitError and I parsed the message in my Event Listener.  Today, I'd to swith to RxJava, how can I do this for all my requests ?"
androiddev,3cwlx9,dimsuz,2,Sat Jul 11 16:12:29 2015 UTC,"I am using Retrofit with RxJava. I assume that you know that if you just make your retrofit-interface apis return Observable, retrofit will make use of it, as it supports RxJava natively.   Now, If you have a situation like mine in which server can send either some valid response like {""data"": { ""mydata"": ""value""}} OR it can send some error which is in different format like {""message"" : ""invalid password"" }, then read on :)  Not sure if this is the ideal solution, but I ended up with writing a custom Converter which inherits Retrofit's GsonConverter and first tries to parse returned json as if it was in an error message format. If parsing succeeds, then there indeed was an error so the code just throws an exception which will be later peeked up by Observable's subscriber in onError. If on the other hand this 'error'-parsing fails, then it assumes that there was no error and an actual data was received. Then it parses it second time by just forwarding to super implementation.  This works, but has the disadvantage of parsing every response two times, which I don't particularly like, but there seems to be no way around in this situation. It can be improved by doing as little parsing as possible when detecting en error though (e.g. using a streaming parser)."
androiddev,3cwlx9,ChristinaAppDelegate,1 point,Sat Jul 11 22:35:14 2015 UTC,"Why not just define a field ""message"" in the pojo?  Then when it's returned, check whether it's null. I'd prefer that over parsing the json twice."
androiddev,3cwlx9,dimsuz,1 point,Sun Jul 12 21:22:06 2015 UTC,"No, I don't like mixing things. I have a dozen of POJO-types and having each of them have message field feels wrong to me. For example if later server decides to extend a ""message"" with some other field I would need to go through each of my 20+ pojos and change them, that's not good. Separation of conserns - is better. I beleive the right fix is indeed to have the server return 403 codes instead of 200..."
androiddev,3cwlx9,guillaumeyp,1 point,Sun Jul 12 21:37:43 2015 UTC,"Thanks dimsuz, I am exactlty in the same situation. Actually I think I have found a solution: I override the RxJava throwable and if I manage to cast it as a RetrofitError then I can parse it.  @Override public void onError(Throwable e) {     if (e instanceof RetrofitError) {             Toast.makeText(context, ErrorHelper.parseRetrofitError((RetrofitError) e), Toast.LENGTH_SHORT).show();     } }"
androiddev,3cwlx9,dimsuz,1 point,Sun Jul 12 10:36:22 2015 UTC,"I am doing about the same here. And do you fill this RetrofitError with parsed message from your server (i.e. ""invalid password"" in your example)? If yes, at what point do you parse that json?"
androiddev,3cwlx9,guillaumeyp,1 point,Sun Jul 12 11:33:40 2015 UTC,"In the parseRetrofitError, I try:  try {     String errorMessage = ((ErrorMessage) error).getBodyAs(ErrorMessage.class)).getMessage(); }   where ErrorMessage has just one attribute ""String message"""
androiddev,3cwlx9,dimsuz,1 point,Sun Jul 12 12:56:17 2015 UTC,"Oh, interesting, I didn't know about getBodyAs, looks handy, I do that manually. And last bit about your approach that left unclear to me: what do you do to throw that RetrofitError? I mean at what point your code understands that server sent an error and throws? Because usually Gson would just set all MyProperResponse.class fields to null if it got some other json fields (e.g. error)."
androiddev,3cwlx9,guillaumeyp,2,Sun Jul 12 13:05:45 2015 UTC,"I don't use a custom Gson converter. When my server throws an error with that kind of message, the HTTP status code is 4xx (for example 403 if the user gives the wrond password). Then Retrofit understands there is an error, and sends it into the onError method of RxJava."
androiddev,3cwlx9,dimsuz,1 point,Sun Jul 12 14:05:06 2015 UTC,"Thanks, now everything is clear! I'm not lucky enough, server which I'm working with sends errors with 200 OK status..."
androiddev,3cwlx9,imsrslyyouguys,1 point,Sun Jul 12 20:13:31 2015 UTC,"Hey, I have a few very basic questions for today :)   When should I use RecyclerView instead of ListView? Should I always, without exceptions, use Activity + Fragment? Is it bad if I use a lot of libraries? I know about 65k method limit, but I didn't reach it yet. My app has 22 dependencies. Is this bad?  How do I know what size xxhdpi does an icon need to be? Yes, I know about scaling between hdpi - xhdpi - xxhdpi etc. but let's say I just made an icon in photoshop. Now I need to set an xxhdpi size for it so that I can then downscale it for other densities. How do I know what size it needs to be so that it will fit my needs in an app?   Thanks!"
androiddev,3cwlx9,achuinard,0,Sat Jul 11 15:53:06 2015 UTC,"RecyclerView will perform better usually. It's good practice to get into the habit of using the Recycler, but not necessary. Yes. No, libraries are fine. The less code YOU write, the better. Where are you using this? Launcher icon, toolbar icon, etc.? Those have specific baseline sizes in the Android docs. As for your own images, that's more up to you."
androiddev,3cwlx9,imsrslyyouguys,2,Sat Jul 11 16:11:02 2015 UTC,"Thanks for all your answers.  About the Activity + Fragment thing. Why?  My app has a MainActivity which has a very simple functionality. It displays app logo and 3 buttons. Each button simply starts a new activity. It needs to start a new activity, I can't just replace a fragment. I really see no need for fragment here. Why should I use a fragment in this situation."
androiddev,3cwlx9,dimsuz,1 point,Sat Jul 11 17:31:21 2015 UTC,"I wrote several apps which don't use Fragments at all. I have developed this rule for myself: don't hesitate to use Fragments when can benefit from them (e.g. when there's phone and tablet UI's which share some components), but better avoid them as they complicate things quite a bit. If something can be done by abstracting into views or adjusting via dimen's/layout-configs, better do it this way than introduce fragments."
androiddev,3cwlx9,pter9,1 point,Sat Jul 11 22:40:50 2015 UTC,"It's a common best practice for reusing views. i.e if you want to have differents layouts in tablets the switch won't take you much work. Also about the libraries, be careful as they do count in the method limit :)"
androiddev,3cwlx9,Asalas77,2,Sat Jul 11 18:53:09 2015 UTC,"Do I have to manually increment primaryKey after using Realm.createObject(Object.class); ?  Also, how do I delete objects? Found it"
androiddev,3cwlx9,agonist59,3,Sat Jul 11 15:50:34 2015 UTC,"Hey guys.  I actually develop an XMPP client app with Smack  My first activity ask for login password, then it start a service when I click on the login button. This service will be in charge to establish the connexion with the server and handle incoming chat.  It works, no problems. But I realize I maybe go into the wrong way when I started to unit testing my app. I have a test server for integration test. So in my robolectric test I fill my login password then click the login button. The problem come when the service try to be started during the test. I get NullPointerException into the onServiceConected methode (here the gist of my activity )  So before asking why it doesn't works, I'd prefer to ask if I'm doing the things in the good way ? I just want that my service start when I click the login button and run during the application lifecycle. How should I test the connexion to my XMPP server ?  Thank's"
androiddev,3cwlx9,TiberiusAbadon,3,Sat Jul 11 12:31:19 2015 UTC,"It's generally not a good idea to persist sensitive info in shared preferences.   If someone were to obtain root privileges on the device, they'll be able to view all shared prefs. Security should be taken seriously, and it's never easy. Some developers encrypt their preferences, but that doesn't stop someone determined enough to decompile your app to see what strategy to use. I believe AccountManager is the way to go."
androiddev,3cxyxd,marcouberti,3,Sat Jul 11 20:01:15 2015 UTC,there are still people using AsyncTask ?
androiddev,3cxyxd,guillaumeyp,1 point,Sat Jul 11 20:18:13 2015 UTC,I think it only officially died recently but Google don't know.
androiddev,3cxyxd,bart007345,1 point,Sat Jul 11 20:30:51 2015 UTC,What would you use instead?
androiddev,3cxyxd,kamikaz1_k,3,Sun Jul 12 07:05:21 2015 UTC,"Reactive programming, like RxJava. Here a blog post to explain."
androiddev,3cxyxd,guillaumeyp,1 point,Sun Jul 12 09:33:41 2015 UTC,Yep! But the post is about testing.
androiddev,3cyon7,BestSanchez,1 point,Sat Jul 11 23:53:50 2015 UTC,Put a price on your application or In App Purchases.
androiddev,3cyon7,hitler_kardashian,1 point,Sun Jul 12 00:41:32 2015 UTC,"As much as i love free things, i think this is the best way to go."
androiddev,3cyon7,Steedsofwar,1 point,Mon Jul 13 09:37:50 2015 UTC,"Im using Kiip in one of my apps which rewards but sort of ads. Only pays if they actually redeem the reward though, and only available in a few countries.  Mine is a friendly betting app (betswithfriends.co) so I have it on top of whatever your win is from your friends you also get a reward from the app which could be chips/drink/etc from my understanding but dependant on the region/advertisers. In AU the first few rewards I've been getting are all entry into another competition which doesn't feel reward-ish"
androiddev,3cyon7,evilspyboy,1 point,Sun Jul 12 02:44:47 2015 UTC,Pollfish https://www.pollfish.com/signup/dev/3593 could be used as  alternative to ads. However I've not used them I just remember they sponsored the beers at droidcon UK couple of year ago.
androiddev,3cx0b8,NotKennyG,6,Sat Jul 11 14:53:33 2015 UTC,"VRAM doesn't really matter for Android Studio.  I'd look into getting good IO performance (SSD) and enough RAM, 8GB or more."
androiddev,3cx0b8,madisp,1 point,Sat Jul 11 15:02:57 2015 UTC,"+1. With 8GB of memory your (I'm guessing Windows) PC will utilize at least 60% with AS and HAXM emulator running.  SSD is great for project load times (and everything else you use your PC for, too). Second monitor is definitely a convienence for programming and looking at docs and testing."
androiddev,3cx0b8,TheFunkOpotamus,3,Sun Jul 12 23:39:04 2015 UTC,What about a second monitor? It won't speed up AS but it speeds up development in general.
androiddev,3cx0b8,HaoChen,3,Sat Jul 11 15:16:42 2015 UTC,"I have a fourth generation i5 and had top upgrade to 16 GB from 8 GB, Memory Utilization before I upgrade was aabout 99% at time for my system and I only had Chrome and Android Studio running. So RAM is most important. Since upgrading I have had no problems."
androiddev,3cx0b8,mikez23,1 point,Sat Jul 11 16:53:54 2015 UTC,+1
androiddev,3cx0b8,the-k1ngp1n,1 point,Sun Jul 12 05:16:04 2015 UTC,"RAM for sure.  It is worse with some projects than others, but AS can be a memory hog."
androiddev,3cx0b8,bonkersz,1 point,Sat Jul 11 16:39:30 2015 UTC,"As alternative, you can setup command line Gradle to build your project and use a lightweight text editor."
androiddev,3cx0b8,acid2do,1 point,Sat Jul 11 21:48:53 2015 UTC,"Add the ram. Set AS vmoptions to use it. You need the ram not just to run AS, but the various emulators (Genymotion/HAXM) in good speed. They WILL uses more ram than android studio."
androiddev,3cx0b8,bbqburner,1 point,Sun Jul 12 03:25:32 2015 UTC,You definitely need the RAM first.
androiddev,3cx0b8,Zhuinden,0,Tue Jul 14 06:39:58 2015 UTC,"I've read that AS is multithreaded, so Core i7 is probably going to help quite a bit, compared to the four thread Core i5."
androiddev,3ct38r,aceofskies05,9,Fri Jul 10 15:33:33 2015 UTC,"I would have thought that an app developer this security conscious would have enabled code obfuscation. But clearly they didn't, which is what allowed the reverse engineering to occur so easily. Without being able to grep the decompiled source, you'd be forced to monitor memory or something similar, which may have deterred OP, or at least made things a lot more difficult.  Or am I missing something?"
androiddev,3ct38r,b1ackcat,1 point,Sat Jul 11 00:41:56 2015 UTC,I don't think your missing anything.
androiddev,3ct38r,AmIHigh,1 point,Sat Jul 11 04:48:55 2015 UTC,"It would still be easy enough with normal obfuscation:   Grep for the strings, check their ID in the decompiled APK, check when the ID is used in the smali/decompiled Java. You know it's probably looming for the ""su"" binary (or one of the root management apps like SuperSU) for the root checking, so grep for ""su"" or package names.   They could've taken it a step further by obfuscating strings. I don't think ProGuard can do that. It would've made things harder like you said though."
androiddev,3ct38r,GermainZ,6,Sat Jul 11 09:50:04 2015 UTC,Nice job on the decompiling but Subway also deserves some credit for releasing an app that does a decent job at trying to protect itself. Pretty sure most of the apps in the Play Store that contain some financial or privacy data don't even try.
androiddev,3ct38r,crate_crow,5,Fri Jul 10 23:02:27 2015 UTC,Total n00b here... But how do you decompile an app?
androiddev,3ct38r,droanmalik,3,Sat Jul 11 11:59:46 2015 UTC,"Google apktool and dex2jar/cfr.  You use apktool to decompile an APK to Smali (+resources/assets/etc) and recompile, and dex2jar with cfr (or another Java decompiler) to decompile to Java (it won't be perfect and won't usually compile as-is, but it's more readable than Smali)."
androiddev,3ct38r,GermainZ,1 point,Sun Jul 12 08:27:51 2015 UTC,"Noon here aswell. I've been told this is one of the reasons that C codes are much more secure, I've just never seen it before."
androiddev,3ct38r,gotbiggums,0,Sat Jul 11 19:04:03 2015 UTC,"It's not, and they're not."
androiddev,3ct38r,eythian,8,Sun Jul 12 20:47:04 2015 UTC,nice read. i'm pretty sure subway actually disabled the root checking code they mention after someone in /r/android posted about it and they got a rash of 1 star reviews
androiddev,3ct38r,Cg2XHPxz,-7,Fri Jul 10 18:02:39 2015 UTC,Why would Android give someone 1 stars because it checks for root?  You know this is exactly why you can't trust reviews. I don't get why Reddit would go on a 1 star vote brigade
androiddev,3ct38r,BitchinTechnology,15,Fri Jul 10 20:05:10 2015 UTC,"i don't entirely disagree but since subway pushed out an update in short order disabling the root check, the brigading worked. I don't entirely understand why subway ever checked for it. I'm not a big fan of random apps disabling themselves if they detect root either so I don't feel bad for them"
androiddev,3ct38r,Cg2XHPxz,0,Fri Jul 10 20:33:14 2015 UTC,"I would imagine they were concerned about some type of fraud. Does the app display coupons? Maybe that is why they were worried about people hacking it to get discounted or free shit.  Lets not forget, the only reason they quit giving out stamps for a free sandwich is because employees would steal the roll and put them on ebay and shit.  This is why apps check..because you guys patch Pandora and Spotify, or update hostfiles so an app won't show ads then get pissed off when the dev quits updating it because he is not making money  This is why we can't have nice things. Hey you are mad the app checks for root? Why not just get the rootchecker disabler instead of going on a brigade giving 1 stars to an app?  Entitlement"
androiddev,3ct38r,BitchinTechnology,8,Fri Jul 10 20:53:38 2015 UTC,because you guys patch Pandora and Spotify   You guys 8-/. How did a discussion of decompiling subway's apk turn into an attack on me for modifying apps I don't even use?!? you kinda sound like a tv executive pissed off about piracy.
androiddev,3ct38r,Cg2XHPxz,-5,Fri Jul 10 21:29:53 2015 UTC,Because that is exactly why Subway checks..
androiddev,3ct38r,BitchinTechnology,5,Fri Jul 10 21:49:55 2015 UTC,yeah super effectively too. see the link. totally worth their time. I don't know what you're pissed off about man but I'm pretty sure it wasn't my fault
androiddev,3ct38r,Cg2XHPxz,-6,Fri Jul 10 21:53:27 2015 UTC,I am not mad. I am just saying it's pretty ironic. A site that hates downvote brigades and has had so much negative press has no problem lying on reviews and giving them one stars because it checked for root..  Seriously guys?
androiddev,3ct38r,BitchinTechnology,7,Fri Jul 10 21:55:01 2015 UTC,Because an app that deals with fast food should have absolutely no reason to do anything root-related on your phone.
androiddev,3ct38r,QuestionsEverythang,-5,Fri Jul 10 22:44:30 2015 UTC,"Except if people are using it to present coupons that do not exist, or other examples of fraud.   You think Subway is doing it for fun? There has to be a reason"
androiddev,3ct38r,BitchinTechnology,8,Fri Jul 10 22:46:49 2015 UTC,Then that's Subway's fault for not having it so any coupon the app provides is validated by their servers.
androiddev,3ct38r,QuestionsEverythang,-8,Fri Jul 10 22:50:49 2015 UTC,"Lol people commit fraud and you blame subway?   They did have a fix, they checked for root!"
androiddev,3ct38r,BitchinTechnology,1 point,Fri Jul 10 22:57:05 2015 UTC,"Cause checking for root isn't the right way to implement security  You never trust info sent by a client. If a client says 'I have a coupon', the server/other party should verify that the user has the coupon flagged in their account, instead of blindly accepting their statement  Look at Starbucks. You can earn a free drink reward after buying 15 drinks. The app will say 'you have one free drink. Tell Batista to ring up code 145 when you scan the qr code for payment'. Guess what the server does when the Batista enters code 145?  I can always disable/remove root after altering the subway app data, and the app is none the wiser"
androiddev,3ct38r,pwastage,0,Sat Jul 11 11:47:29 2015 UTC,I used to work for starbucks. We had to quit doing shit because people would make fake coupons....  It is the right way to implement security. Its quick and easy
androiddev,3ct38r,BitchinTechnology,1 point,Sat Jul 11 18:20:35 2015 UTC,As a barista? My god hope nobody entrusted you with making security decisions
androiddev,3ct38r,Cg2XHPxz,1 point,Sat Jul 11 20:44:05 2015 UTC,No I am just telling you the kind of shit people do to get 50 cents off something  Its an app checking for root. Not that big of a deal. They are checking for root because people hack that shit to get free sandwiches.
androiddev,3ct38r,BitchinTechnology,3,Sat Jul 11 21:09:16 2015 UTC,Why do you think they made such a strong attempt at security? Does the app use credit card info?
androiddev,3ct38r,iamiamwhoami,2,Sat Jul 11 05:35:24 2015 UTC,"Cert pinning is a good idea for any app talking to a remote server, but I have no idea why the heck they would perform a root or package signature check."
androiddev,3ct38r,AndrewNeo,1 point,Sat Jul 11 06:09:42 2015 UTC,The app stores your credit card info so that you can make orders and just go pick up the order when you get to your local subway.
androiddev,3ct38r,jonathon8903,1 point,Sat Jul 11 15:47:08 2015 UTC,Good read thanks!
androiddev,3ct38r,schwiz,1 point,Fri Jul 10 16:08:54 2015 UTC,"For those wondering,        What are you using for APK decompilation? I've been using ByteCodeViewer and find that Procyon is the best, but it is still falling over on a lot of methods.       http://www.decompileandroid.com/ does a pretty job of getting a fairly accurate Java representation of the APK. To edit the smali, recompile, and sign I'll either use apk studio or Virtuous Ten Studio.         https://www.reddit.com/r/netsec/comments/3csh17/reverse_engineering_the_subway_android_app/csyknr7"
androiddev,3cw7z7,AtomicMynah,1 point,Sat Jul 11 08:08:15 2015 UTC,"I think the general idea is have a good app first, monetize later. Admob by Google is one way. I would just think hard about whether people will be turned away from your ad because of them."
androiddev,3cw7z7,morgazmo99,1 point,Sat Jul 11 08:18:02 2015 UTC,"My plan as of yet is to have a small, unused portion of the bottom of the screen have a banner ad. Haven't implemented it yet though. I'm just curious about what the rates are, so that I know at what download count I should enable it for.  Like I'd need to know the rate of money gained on average per download per day in order to decide whether I should turn on ads at say 1000 downloads versus 10000 downloads."
androiddev,3cw7z7,HaoChen,2,Sat Jul 11 09:00:53 2015 UTC,You should never turn on ads. You either have them from the beginning or you don't. If you turn them on later you will be flooded with 1-star ratings from users complaining about the new update.
androiddev,3cw7z7,ripuliday,5,Sat Jul 11 09:59:39 2015 UTC,"This is a common misconception. I turned ads on in my last app after 2 months. Ratings stayed at 4.3. Nobody commented anything about the change in reviews. Android users are used to ads. Most users don't even notice that an app does NOT have ads. Hence, they don't notice when the ads start appearing.  EDIT: This app has only interstitials, no banners."
androiddev,3cw7z7,ripuliday,1 point,Sat Jul 11 10:27:53 2015 UTC,"somewhere around like .1 cents per day per user   For my apps, that's close to the actual rate. It depends very much on what kind of users you get and how long and how often they use your app."
androiddev,3cvsxk,chaosphinx,2,Sat Jul 11 04:51:22 2015 UTC,"Looks cool but crashed on start on my xperia z1 with cyanogenmod, sent crash reports."
androiddev,3cvsxk,taggzor,2,Sat Jul 11 05:55:45 2015 UTC,"Ah, so sorry for that. Don't got crash on my emulators though. After searching, I think it might be something wrong with proguard and jackson. Turned off proguard temporarily. I have uploaded the fixed version. Sorry again, thank you for feedback!"
androiddev,3cvsxk,redyar,1 point,Sat Jul 11 07:19:02 2015 UTC,You dont need proguard since its open source :)
androiddev,3cvsxk,drabred,2,Sat Jul 11 09:44:31 2015 UTC,Still can reduce final apk size.
androiddev,3cv3tq,DeafParrot,2,Sat Jul 11 00:50:20 2015 UTC,"Should not have to download the application if you use the Chrome browser to access the link. Maybe not, I tested it on my desktop."
androiddev,3cv3tq,TauLogy,2,Sat Jul 11 04:19:39 2015 UTC,"I remember your original post before it got removed. I use the offline JavaDocs, but the PDF will be useful on the tablet. Thanks for sharing."
androiddev,3cv3tq,bart007345,1 point,Sat Jul 11 20:32:11 2015 UTC,I'm not installing that application! Can you not make the pdf available some other way?
androiddev,3cv3tq,ueman,3,Sat Jul 11 03:40:04 2015 UTC,Request the desktop site and it works just fine.
androiddev,3cv3tq,insane-cabbage,1 point,Sat Jul 11 08:32:48 2015 UTC,Why not pull the documentation from the SDK on your phone?
androiddev,3cv3tq,filecabinet,1 point,Sat Jul 11 08:42:24 2015 UTC,Because I have no idea how to do that lol.
androiddev,3cvy9t,adamdilger,1 point,Sat Jul 11 05:52:26 2015 UTC,"There's some native to android classes introduced in API 19 to do this, look into https://developer.android.com/reference/android/graphics/pdf/PdfDocument.html"
androiddev,3cvy9t,Cyber34,1 point,Sat Jul 11 07:57:17 2015 UTC,"I did stumble across this one, but I always thought you should try and write apps that are compatible with older devices. I just thought there might have been another way, considering the libraries for java do this so well"
androiddev,3cvy9t,JensJensen,1 point,Sat Jul 11 08:19:38 2015 UTC,"There is a commercial library, called itext. We use it to generate PDF reports in our Apps. You can also generate forms which can be manipulated after exporting them."
androiddev,3cttz5,mrlrm,5,Fri Jul 10 18:51:40 2015 UTC,Check Chris Banes tutorial for new android design library   https://github.com/chrisbanes/cheesesquare
androiddev,3cttz5,smasoumi,3,Sat Jul 11 07:22:41 2015 UTC,There is also the Topeka example app which is useful:  https://github.com/googlesamples/android-topeka
androiddev,3cttz5,GreatJusticeForSGU,1 point,Sun Jul 12 01:15:14 2015 UTC,"Great, thank you"
androiddev,3cttz5,pakoito,1 point,Sun Jul 12 16:38:25 2015 UTC,"Thanks, I'll check it out."
androiddev,3cttz5,parrishdev,3,Sun Jul 12 16:38:01 2015 UTC,"Don't follow Google's Training, or at least do it with a good handful of skepticism. The documentation is 3-5 years old and a good chunk of the recommended practices are outdated (design, widgets), replaced (Loaders, layouts), incomplete (setThing() /** Sets the thing **/),  or simply avoided by the community because at some point everyone realized they're just overcomplicated (ContentProviders) and error-prone (AsyncTasks).  I can't provide a modern all-in-one-place alternative, sadly. Most of the stuff is spread around the web and this subreddit."
androiddev,3cttz5,_danielb,2,Sat Jul 11 17:37:13 2015 UTC,"The ""Making App's Material""  course on www.udacity.com  seem's like it might be what you are  looking for.   There is also a pretty solid sequence of video's on the ""Slidenerd""  channel on youtube, that covers a whole range of material feature implementations."
androiddev,3cttz5,SmithhBR,1 point,Sat Jul 11 02:10:55 2015 UTC,I've seen this one but I don't really feel the need to pay so much for it when I'm sure theres equally good free sites out there. Just gotta dig through and find them.
androiddev,3cttz5,mvieck3,1 point,Sun Jul 12 16:39:34 2015 UTC,"You don't need to pay to follow the course, all the learning material is free. You only pay if you want a certificate at the end and support whilst you are working through the course."
androiddev,3cvq3z,lordoftherings911,4,Sat Jul 11 04:20:42 2015 UTC,"There is more to open source than just bug fixes.   you can contribute on the issue trackers, reporting bugs, feature requests, etc...  improve documentation of a project, because the readme is either stale or not there.  write a failing test for a feature/bug that is not there   Most importantly, pick something you are using and irks you, rather than go looking for whatever random library needs fixing."
androiddev,3cvq3z,zmarkan,2,Sat Jul 11 06:34:19 2015 UTC,"Here is a great presentation on Open Source by Jake & Jesse from Square, who share good advice on how to get started. http://youtube.com/watch?v=PCxz2LEmuL4"
androiddev,3cvq3z,aurae_ger,1 point,Sat Jul 11 09:20:03 2015 UTC,One of the Fragmented Podcast episodes with Jake Wharton had some good discussion on this topic.
androiddev,3cvq3z,jimeux,0,Sat Jul 11 15:01:59 2015 UTC,"Why fixing someone's bugs? Make your own! :D  Create a repo and make a library. Currently we do not have a lots of libraries that can be useful. In example, I'd like to have a library like Icepick but saving data into SharedPreferences instead of bundles. How about that? Icepick is a really small library, so anyone can fork and change it. Icepick is in clojure, unfortunately, but there is nothing complex in it. You can reproduce it in java easily (it was in java few months ago, so you can look it's history)."
androiddev,3cufx0,calvinbenik,2,Fri Jul 10 21:37:25 2015 UTC,Games and Android apps are very different beasts.
androiddev,3cufx0,ZakTaccardi,1 point,Fri Jul 10 22:10:42 2015 UTC,"That is true, but the main language is Java, isnt it? So there must be similarities.  As for game maker, yeah that is not similair to Java at all..."
androiddev,3cufx0,hitler_kardashian,3,Fri Jul 10 22:19:28 2015 UTC,"You're unlikely to build a game using the normal framework. You're probably going to build it with something designed specifically for games (Unity, LibGDX, etc.)"
androiddev,3cufx0,HaoChen,1 point,Fri Jul 10 22:25:00 2015 UTC,"Ah, see I didn't know that! I think I have to focus on android development first. Got the lean the Java syntax, know the libraries etc. Before I start doing the games thing. Or do you advice otherwise?"
androiddev,3cufx0,HaoChen,2,Sat Jul 11 09:03:25 2015 UTC,"You should definitely know about the basics such as Activities, Fragments, lists, network calls, data storage etc. before you think about doing it for money. I think you should also have built at least one or two simple apps and have knowledge about standard programming techniques. Eventually you will stop working for a company and your code must be easy to use, extend and maintain. If you can't guarantee that, please don't apply for any position.  I'd have a look at working student positions. I think they are exactly what you are looking for."
androiddev,3cs666,entropio,11,Fri Jul 10 09:52:31 2015 UTC,"The broader data persistence issue which I haven't found a satisfying answer to yet. The choice of what class of database interface to use depends on your app's needs and personal tastes.  Here are a few discussions and references which I've found useful in fleshing out my preferences and requirements. The first is my favorite and part of why I've (mostly) settled on using either SQLBright (with SQLBrite-DAO) or StorIO for my next app or large refactor.   http://mattlogan.me/creating-a-retrofitlike-database-client http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/ http://blog.joanzapata.com/robust-architecture-for-an-android-app/ Discussion of the Repository pattern Simplistic Repository pattern implementation   A topic I'll start a post soon here about is how to integrate Retrofit, a database interface, and RxJava together smoothly. I haven't found a good discussion on that yet. ¯\(ツ)/¯"
androiddev,3cs666,dkozel,2,Fri Jul 10 11:16:45 2015 UTC,As to the retrofit/db/rxjava integration i've got that in my app and it's working pretty nicely. What would you like to know?
androiddev,3cs666,burntcookie90,1 point,Fri Jul 10 16:34:00 2015 UTC,"I currently am using Retrofit and RxJava for network requests.  I am so close to switching to SqlBrite, but I hate there are no mappers / utils yet.  I want to drop the R in ORM badly, but I really don't want to do manual mapping either."
androiddev,3cs666,theblang,1 point,Fri Jul 10 19:53:17 2015 UTC,Are you using an ORM with that stack also?
androiddev,3cs666,burntcookie90,1 point,Fri Jul 10 20:13:50 2015 UTC,"StorIO has customizable object mapping, RxJava support and we too don't like R in ORMs :) Also, there is SqlBrite-DAO library."
androiddev,3cs666,artem_zin,1 point,Sat Jul 11 00:24:42 2015 UTC,"For mapping, have a look at http://mapstruct.org .  I've used it a bit so far and it seems pretty good."
androiddev,3cs666,Scriptacus,1 point,Sat Jul 11 15:11:10 2015 UTC,Yes please
androiddev,3cs666,BestSanchez,1 point,Sat Jul 11 00:33:22 2015 UTC,"I use retrofit for Rest request, with gson. How can Retrofit help with DB/OR-Mapping?"
androiddev,3cs666,mikugo,1 point,Sat Jul 11 07:20:38 2015 UTC,"Retrofit can't help with DB/OR mapping, it's a networking library.  However, when paired with RxJava you can do some pretty cool stuff in a clean way.  https://github.com/dinosaurwithakatana/hacker-news-android/blob/feature/login/app/src/main/java/io/dwak/holohackernews/app/ui/login/LoginViewModel.java#L62  Here, I get the response from my login call and when my mapping to create the User model object is complete, I save it to my DB via SugarRecord::save since User inherits from SugarRecord."
androiddev,3cs666,burntcookie90,3,Sat Jul 11 18:15:35 2015 UTC,I'm picking DBFlow. Tried SugarORM which seems easier to integrate and start with.
androiddev,3cs666,Yorxxx,2,Fri Jul 10 10:20:03 2015 UTC,Why would I want to use something like DBFlow instead of using and writing a normal SQL database? Still learning here.
androiddev,3cs666,LaughingALot,1 point,Sat Jul 11 00:18:41 2015 UTC,"For the same reason you would use Retrofit, Picasso... To avoid reinvent the wheel. Why would you write boilerplate code regarding networking, data storage, cache... when somebody else has already done it, is working great and widely used by developers. Wouldn't be better if you used this time improving your app."
androiddev,3cs666,Yorxxx,3,Sat Jul 11 12:53:27 2015 UTC,Check out Couchbase for document based NoSQL as well. I've been using it for my current project and it's worked out well so far. Since each document is json based you have a lot of flexibility (via Jackson) with respect to your data model.
androiddev,3cs666,sixteh,2,Fri Jul 10 10:41:17 2015 UTC,I used DBFlow in one of my projects and was happy with it. Sometimes I feel it made me write too much code to get what I wanted but it's awesome lib...
androiddev,3cs666,rinav4all,1 point,Fri Jul 10 10:33:54 2015 UTC,run into any problems?
androiddev,3cs666,prlmike,1 point,Fri Jul 10 12:14:06 2015 UTC,"The documentation can be a bit rough, lots of out of date material.   I've been happy with it, but some of my coworkers have had a difficult time."
androiddev,3cs666,lacronicus,2,Fri Jul 10 14:36:12 2015 UTC,"I'm building a todo list and persisting it in SQLite, what would Realm buy me? Is it less boilerplate, or easier integration with an adapter? Still learning here..."
androiddev,3cs666,Wonnk13,1 point,Fri Jul 10 13:27:01 2015 UTC,NoSql usually requires much less boilerplate but it's good to know how ContentProviders and raw SQL work.  You can start with Realm here https://realm.io/docs/java/latest/
androiddev,3cs666,binaryfork,0,Fri Jul 10 15:25:22 2015 UTC,It's faster
androiddev,3cs666,burntcookie90,2,Fri Jul 10 16:34:52 2015 UTC,"Sugar ORM is really easy to setup and use. It's pretty awesome to be able to do myModelInstance.save() on Android. If you need anything more than CRUD and count (aggregate operations and anything that doesn't return model rows), Sugar can't provide a solution yet though.   For something that can handle those extra operations, I've used OrmLite for a quiz app, and that was pretty straightforward. It's more verbose than Sugar, but more powerful.   I've used MongoDB with Node.js, and it makes prototyping and quickly changing an app really easy, so I'm interested in trying out Realm next."
androiddev,3cs666,jimeux,2,Fri Jul 10 13:58:31 2015 UTC,"I've just started using StorIO in the app I'm working on at the moment, and it is absolutely fantastic, in particular the RxJava support. I can now seamlessly link my data and network layers (using the Observables that Retrofit provides) together into single chains. Can't wait for version 1.1!"
androiddev,3cs666,steffandroid,1 point,Fri Jul 10 18:08:41 2015 UTC,Great! Do you have any issues with it or may be you have some comments/feedback? We would like to know what do you find bad or non obvious in the API or documentation to improve it.
androiddev,3cs666,artem_zin,1 point,Fri Jul 10 19:43:49 2015 UTC,"Firstly, great job! It's an excellent library.  The ability to get a single object rather than a list would be useful, but I see that's in the pipeline for 1.1.0. I'm also looking forward to MockStorIOSQLite.  The only thing I found a bit confusing with the documentation was in the sample app, where you've used the annotation processing method of mapping alongside an example of the boilerplate implementations of GetResolver, PutResolver and DeleteResolver (which go unused). It might be a bit more intuitive to provide separate, full examples of both methods, just to make it clear that you don't have to use the annotation processing component.  I do have a question as well, what would you say is the best way to handle one-to-many mappings? It's not immediately apparent how I might handle this."
androiddev,3cs666,steffandroid,1 point,Fri Jul 10 21:06:19 2015 UTC,"Damn, we'll improve Sample app and provide separate examples of object mapping via manual code, annotations and semi-custom mapping with Default Resolvers.   Recommended way for one-to-many object mapping is creating custom class that represents selection result, creating GetResolver for it and using RawQuery with this resolver.   Or you can even make your OneToMany objects fully writable/readable/deletable via custom Resolvers that will store/get/delete one object from several tables.   Feel free to ask such questions of Stackoverflow.com with StorIO tag.   Thank you for the feedback! We will continue improving StorIO."
androiddev,3cs666,artem_zin,2,Sat Jul 11 03:29:23 2015 UTC,"Realm is the easiest. I've tried around half of those I guess and for most use cases, where you simply need to store POJOs painlessly and quickly, Realm is the best choice.   I'm glad you didn't list SQLite. It does nothing but gives you headaches."
androiddev,3cs666,lordoftherings911,1 point,Fri Jul 10 13:10:38 2015 UTC,Is realm easy to populate with json data that i fetch using retrofit?
androiddev,3cs666,will_r3ddit_4_food,1 point,Fri Jul 10 14:54:58 2015 UTC,"Yes, https://realm.io/docs/java/latest/#retrofit"
androiddev,3cs666,Deafdev,1 point,Fri Jul 10 15:13:46 2015 UTC,Used Realm before without too much issue. GreenDAO I had issues when trying to encrypt the DB - but that was a long time ago and things may have changed since.
androiddev,3cs666,will_r3ddit_4_food,1 point,Fri Jul 10 10:10:44 2015 UTC,Do any of these choices AUTOMATICALLY run outside of the UI thread or do they all require doing that yourself in an AsyncTask?
androiddev,3cs666,artem_zin,1 point,Fri Jul 10 14:05:56 2015 UTC,With StorIO + RxJava you can execute all db operations on background threads (Schedulers.io())
androiddev,3cs666,will_r3ddit_4_food,1 point,Fri Jul 10 14:19:50 2015 UTC,Thanks! It seems dumb to me that the authors of these libraries don't make them run the the background thread by default because that's a best practice.
androiddev,3cs666,vladlichonos,3,Fri Jul 10 14:48:48 2015 UTC,No it is not. What would you do when you are already running in background thread and want to do synchronous query from DB?
androiddev,3cs666,will_r3ddit_4_food,1 point,Fri Jul 10 15:33:38 2015 UTC,That's a valid point.
androiddev,3cs666,sixteh,1 point,Fri Jul 10 15:41:51 2015 UTC,"To be fair, can't you do that regardless of which implementation you use?"
androiddev,3cs666,artem_zin,1 point,Fri Jul 10 18:16:07 2015 UTC,What do you mean?
androiddev,3cs666,sixteh,1 point,Fri Jul 10 19:45:16 2015 UTC,Can't you wrap basically any query that returns an iterable in an rxjava observable that gets executed asynchronously?
androiddev,3cs666,artem_zin,1 point,Fri Jul 10 23:27:38 2015 UTC,"Sure, but in StorIO we did it for you and Observable from Get Operation will receive db updates automatically."
androiddev,3cs666,casualblair,1 point,Sat Jul 11 00:21:43 2015 UTC,"No sql has exactly two use cases:  1) a data cache built on top of a standard db, used for performance.   2) a data store for user information, commands, or messages you never, ever seen any to report on or look at or convert.   Does your app need a high performance db? Does your app have throwaway data that you will never convert? (aka if the data structure changes your app converts it on the fly, instead of converting it in bulk.)  If the answer is no, don't use no sql."
androiddev,3cs666,elcarni,1 point,Fri Jul 10 14:51:53 2015 UTC,"I am considering using SnappyDB, these blog posts pointed to it as a fairly simple document base solution: http://blog.joanzapata.com/robust-architecture-for-an-android-app/ http://blog.joanzapata.com/robust-and-readable-part-2-introducing-async-service/"
androiddev,3cs666,AnubisJcakal,1 point,Fri Jul 10 15:11:15 2015 UTC,"I use Realm for basic database and SnappyDB since I can store a whole object as a value and extract it elsewhere, which is handy to store Retrofit objects (objects in general). I use SnappyDB to help with starting activities that need data to work with and the only intent I need is the SnappyDB key to work with that data.   SnappyDB also has a nice Redis like feel for me."
androiddev,3cs666,huggy1977,1 point,Fri Jul 10 15:32:06 2015 UTC,I love greenDao..
androiddev,3cs666,asarazan,1 point,Fri Jul 10 17:46:55 2015 UTC,"A lot of it depends on your use. If you're not going to be storing massive numbers of objects with a need for quick search, maybe just use Protobuf/Wire/JSON with files on disk. That's what 80% of Level is built on.  We eventually switched to SQLite for the bank list and the transaction list. We're evaluating Realm but you can't pass objects across threads which leaves it DOA (they are currently working on it)."
androiddev,3cs666,pandanomic,1 point,Fri Jul 10 18:02:38 2015 UTC,"Just FYI I changed the flair to discussion, because this isn't a library."
androiddev,3cs666,rinav4all,1 point,Sat Jul 11 00:03:17 2015 UTC,Nothing major that I remember..
androiddev,3cs9ni,moe,4,Fri Jul 10 10:42:30 2015 UTC,200ms roundtrip latency is insane. That number is so bad that I'd like some confirmation from another party that it's true before I run around parroting it to people.
androiddev,3cs9ni,billjings,3,Fri Jul 10 13:28:37 2015 UTC,"Google have published some measurements on the Nexus range, which are pretty close to those given in the article (which I wrote, so ignore me):  https://source.android.com/devices/audio/latency_measurements.html  You can see in both sets of data that the Nexus 5 has improved with successive Android versions, but the Android 4, and Galaxy Nexus measurements are terrible."
androiddev,3cs9ni,billjings,2,Fri Jul 10 13:40:46 2015 UTC,"Of course I won't ignore you! :)  Thank you very much for your numbers; I'm sure you appreciate as much as anyone how completely nuts 200ms of latency is. You don't need me to tell you that, and I find it difficult to convey to folks unfamiliar with the domain just how bad that number is."
androiddev,3cs9ni,donrhummy,1 point,Fri Jul 10 15:02:17 2015 UTC,"Also, the Nexus 5 when running 5.0+ is about as low latency as is available on an Android phone.  So I wouldn't take that table as generally indicative, just as a basis for comparing the measurements which overlap in the two sets of data."
androiddev,3cs9ni,pjmlp,0,Fri Jul 10 13:53:48 2015 UTC,it's still not as good as an iPhone from 3 years ago.
androiddev,3cs9ni,badlogicgames,6,Fri Jul 10 14:25:27 2015 UTC,"There was a Google IO 2015 talk about latency, ""Introduction to high-performance NDK Audio"", but the video wasn't made available."
androiddev,3cs9ni,pjmlp,2,Fri Jul 10 13:52:27 2015 UTC,"I think they mostly talked about OpenSL, which doesn't guarantee low latency either. Android + audio = clusterfuck."
androiddev,3cs9ni,badlogicgames,2,Fri Jul 10 14:20:06 2015 UTC,"Yeah.  Speaking clearly about software and hardware contributions to latency appears difficult.  When an application doing minimal processing (the test app discussed in the article - using OpenSL, via the fast path) regularly hits ~200ms on modern devices, it's a little distracting to mention OpenSL as a solution to anything.  Some of the Android project documentation on improving application latency (https://source.android.com/devices/audio/latency_contrib.html) includes the forewarning ""Assuming the analog circuitry does not contribute significantly..."""
androiddev,3cs9ni,Deafdev,-1,Fri Jul 10 14:28:28 2015 UTC,I would add to it Android + graphics = clusterfuck  I am always envy of iOS when I look at all those WWDC presentations about game development tooling supported directly by Apple.
androiddev,3cs9ni,donrhummy,2,Fri Jul 10 18:16:08 2015 UTC,"Until you get stuck with a non-replaceable, broken version of SpriteKit and have wait for the next iOS release for it to be fixed :)"
androiddev,3cslec,dabluck,4,Fri Jul 10 13:02:34 2015 UTC,made this app for viewing certificates & permissions because I got tired of using horrible apps like this one to check builds before I send them out.   Some might find it useful
androiddev,3cslec,_northernlights_,2,Fri Jul 10 13:58:56 2015 UTC,Thanks! Very nice. Android UI design certainly has gone a long way.
androiddev,3cslec,LadyTesla,1 point,Fri Jul 10 18:57:38 2015 UTC,"Curious, how did you make your list view look like that? I'm assuming you made a custom view for each with the shadows? (My current goal is to work on getting better at UI)"
androiddev,3cslec,dabluck,2,Fri Jul 10 15:02:00 2015 UTC,nope it's just a recycler view and the list item has an android cardview. i tried to make it all very standard and take advantage of the new design support library. i'll put some code up if you want but it's nothing tricky.
androiddev,3cslec,LadyTesla,1 point,Fri Jul 10 15:37:47 2015 UTC,Thanks! I'll do some googling into it. I'm sure I'll find something.
androiddev,3cslec,leggo_tech,1 point,Fri Jul 10 16:14:44 2015 UTC,certificates?
androiddev,3cslec,dabluck,1 point,Fri Jul 10 16:10:12 2015 UTC,The cert used to sign your apk
androiddev,3cslec,schwiz,2,Fri Jul 10 16:59:25 2015 UTC,rx kotlin/java vs kotlin kovenant.  What are your thoughts people?
androiddev,3cslec,fadelakin,2,Fri Jul 10 19:28:40 2015 UTC,"How can I get freelance work that doesn't pay me the ""scraps"" that upwork and elance pay?"
androiddev,3cslec,acid2do,1 point,Fri Jul 10 23:26:18 2015 UTC,"How do you report device specific bugs? e.g. a specific Samsung device has problems playing a video, even if similar devices can. I have hard time trying to justify why the app does not work to my customers and, at the same time, I have nowhere to go for answers."
androiddev,3cslec,schwiz,1 point,Fri Jul 10 13:21:30 2015 UTC,Most OEMs have a developer site that takes bug reports.
androiddev,3cslec,dkozel,1 point,Fri Jul 10 13:41:33 2015 UTC,What git aliases do folks use?  Here's my most recent pair. track adds a file without staging any content. Commits will not include the file until changes (usually done with add -p) are staged. track-all does the same but for all untracked files.  [alias]      track = add --intent-to-add      track-all = !git add --intent-to-add $(git ls-files -o --exclude-standard)
androiddev,3cslec,marco-rs,1 point,Fri Jul 10 13:58:57 2015 UTC,I use this config file --> https://github.com/marcoRS/git-tips/blob/master/.gitconfig
androiddev,3cslec,sourd1esel,1 point,Fri Jul 10 18:15:08 2015 UTC,Im trying to secure a freelance project.  I need a ui/ux designer before I do. I have searched and im not finding anyone. I would prefer do it myself.  I know I can do better than everyone I have interviewed. I need someone local which is making it hard to find someone.
androiddev,3cslec,markyosullivan,1 point,Sat Jul 11 23:37:43 2015 UTC,Where do you live?
androiddev,3cslec,sourd1esel,1 point,Sat Jul 11 23:50:47 2015 UTC,nyc.  This will be my first gig. I have a budget of 500-1000 for the designer. It is a small app it has only a few activities.
androiddev,3cslec,addihash,1 point,Sun Jul 12 00:12:03 2015 UTC,Just finished this video recording app: https://play.google.com/store/apps/details?id=com.storr.reuben.vlogr for people who wanted to make home videos/ vlogs but didn’t have any editing experience. Feel free to ask questions!
androiddev,3ct9x7,rbro112,2,Fri Jul 10 16:24:49 2015 UTC,You should put a picture in your readme!
androiddev,3ct9x7,lakewoodjoe112,1 point,Fri Jul 10 19:00:00 2015 UTC,I'll add a gif here soon!
androiddev,3ct9x7,Wonnk13,1 point,Fri Jul 10 20:12:31 2015 UTC,I just finished up developing this expandable Recyclerview as part of my internship this summer. Feel free to check it out/use it/fork it as you please and let me know if you have any questions about it.
androiddev,3ct9x7,athingunique,1 point,Fri Jul 10 16:25:50 2015 UTC,So would this be used to replace a master view and detail view? I click into an item of my recycler view and it expands to give a detail view? Right now i have this implemented as two separate fragments like is document in the fragment guide from Google's dev page.
androiddev,3ct9x7,athingunique,1 point,Fri Jul 10 18:05:20 2015 UTC,"Yep pretty much! I call them parent and child views in my implementation. You create one Recyclerview adapter and bind all the data to your parent and child views. Then create a list of parent objects, set their data and set each of their children individually and the library will handle the rest. I believe it would probably be alot simpler than two separate fragments in a view holder."
androiddev,3ct9x7,athingunique,1 point,Fri Jul 10 18:21:56 2015 UTC,"Apologies if I just didn't read thoroughly enough and missed this, but is it possible to listen for expand/collapse events? Perhaps through adding an OnEventListener to the Adapter? I'd like to use this, but I need to trigger another event (showing a FAB) when an item is expanded. I could try and write something up and put in a pull request if this functionality isn't present and you're open to including it."
androiddev,3ct9x7,athingunique,2,Sat Jul 11 04:01:03 2015 UTC,"Unfortunately, there is no listener, but that is a great idea. The way I handle clicks is defining a callback in either my adapter or activity/fragment holding the RV and pass it into the parent or child ViewHolder. Then, just override onClick in the VH and implement the callback method inside of it.  And feel free to Fork it/branch and make a PR! I'd love to make it better."
androiddev,3ct9x7,athingunique,1 point,Sat Jul 11 04:04:46 2015 UTC,"I'll see what I can write up, keep an eye out for the PR"
androiddev,3cvf0q,AlphaMikeZulu,1 point,Sat Jul 11 02:33:06 2015 UTC,So option 1 is to change the feed so it gives you pages of data rather than the whole lot.  Option 2 is to use RxJava and XML streaming(RSS is XML right?) and feed the data to the stream as it comes in rather than waiting until the whole feed has been ingested.
androiddev,3cvf0q,bart007345,1 point,Sat Jul 11 03:36:07 2015 UTC,Could you psuedo code Option 2? im not quite sure how to implement it...
androiddev,3cvf0q,bart007345,1 point,Sat Jul 11 04:29:04 2015 UTC,do you know RxJava?
androiddev,3cvf0q,bart007345,1 point,Sat Jul 11 07:48:03 2015 UTC,"Here's a quick summary:   Create an observable of each data item from the feed. Start going through the XML, check this out. When you have a data item, send it to onNext() on the observable, your subscriber (the UI) will then display it as it comes in.   However, you may find that the data is not (yet) available when you need it. Depends on how long it takes. Some thoughts are to decouple the download stage so you can do it on app startup so by the time the user gets to the screen, the data is loaded in the db."
androiddev,3cvf0q,dandc87,1 point,Sat Jul 11 07:58:11 2015 UTC,"How large is this RSS feed? In general, the slowest part of ""download, parse, show"" is the download part, especially making the connection to the server. So unless you have a large RSS feed (i.e. thousands of items, each with lots of data), a chunked implementation wouldn't help. It could even make it worse, since you would have to incur the cost of connecting and downloading every 10 items, instead of just once."
androiddev,3cq1wn,epigrammedic,16,Thu Jul 9 21:24:36 2015 UTC,Chrome Android SDK Search
androiddev,3cq1wn,dnyy,1 point,Fri Jul 10 01:10:59 2015 UTC,"https://chrome.google.com/webstore/detail/android-sdk-search/hgcbffeicehlpmgmnhnkjbjoldkfhoin?hl=en   offered by roman.nurik.net  This very simple extension does two things:   Adds an 'ad' command to the Chrome Omnibox. For example, typing 'ad ViewGro' will bring up a list of all class names in the Android SDK matching 'ViewGro'—selecting a list item navigates to the relevant Android SDK Reference URL on developer.android.com. Adds a '(view source)' link next to the SDK class name for class reference pages on developer.android.com. Clicking this link navigates to the relevant Google Code Search results from android.git.kernel.org."
androiddev,3cq1wn,Wispborne,14,Fri Jul 10 07:21:24 2015 UTC,pidcat: https://github.com/JakeWharton/pidcat
androiddev,3cq1wn,aaronmix,1 point,Fri Jul 10 01:53:23 2015 UTC,This project looks really useful... I'll have to check it out.
androiddev,3cq1wn,liuwenhao,1 point,Fri Jul 10 02:25:25 2015 UTC,holy shit. that is so much better than old logcat. i can't believe how awesome this is!!!!!
androiddev,3cq1wn,adrock3000,1 point,Fri Jul 10 19:01:17 2015 UTC,This looks awesome but I assume there's no way to use it in android studio?
androiddev,3cq1wn,will_r3ddit_4_food,1 point,Fri Jul 10 20:50:12 2015 UTC,This looks awesome but I assume there's no way to use it in android studio?
androiddev,3cq1wn,will_r3ddit_4_food,9,Fri Jul 10 20:50:47 2015 UTC,"Gradle Please or Package Managers for Alfred.  Paw for working with APIs.  Runnable for testing java and other languages online.     Edit: Here are some things to know about Paw. It's a premium REST client for OS X that costs $29.99. It has a TON of features, here are some highlights:     Code generation for HTTP requests   Works with 9 different languages and 14 different frameworks.   Random value generators   Some for emails, names, and more. Add additional generators via paw extensions   Environment variable system to easily swap local or prod resources from requests  Though it still needs work, sharable requests https://paw.pt/aDRPAUut     I can't work on APIs without Paw now."
androiddev,3cq1wn,lolkittens,5,Fri Jul 10 02:20:52 2015 UTC,A very good (and free!) alternative to paw I'd suggest is Postman (chrome browser extension)
androiddev,3cq1wn,QuestionsEverythang,1 point,Fri Jul 10 14:12:05 2015 UTC,"Postman is nice, and the $10 premium version is totally worth it."
androiddev,3cq1wn,s73v3r,1 point,Sat Jul 11 03:27:08 2015 UTC,Advanced REST client is much better.
androiddev,3cq1wn,ganesh2shiv,2,Sat Jul 11 15:05:51 2015 UTC,What is Gradle Please?
androiddev,3cq1wn,lolkittens,9,Fri Jul 10 03:13:49 2015 UTC,"It's a fuzzy finder for maven dependencies.  You type ""gp <artifact-id>"", it will list the closest matches and when you hit enter it writes ""compile '<dependency>'"" to your editor.  Example gif"
androiddev,3cq1wn,levibostian,2,Fri Jul 10 04:38:00 2015 UTC,Search engine for gradle dependencies. I use it all the time https://gradleplease.appspot.com/
androiddev,3cq1wn,ShitBeCrazy,0,Fri Jul 10 03:40:13 2015 UTC,Say please.
androiddev,3cq1wn,r0adkll,2,Fri Jul 10 12:14:50 2015 UTC,Yes! Paw is amazing!
androiddev,3cq1wn,lordoftherings911,14,Fri Jul 10 10:07:52 2015 UTC,"Notepad++, Sublime Text, or fast loading text editor for when your IDE is too much   I don't know how I would code without code completion."
androiddev,3cq1wn,insane-cabbage,2,Fri Jul 10 03:18:44 2015 UTC,"I don't know about Notepad++ but Sublime definitely has code completion. Also, I think he/she uses those for quickly looking into other code repos such as libraries or samples rather than working on a project with it."
androiddev,3cq1wn,YouShallNot_Parse,1 point,Fri Jul 10 05:27:07 2015 UTC,"I uise notepad++ when I want to save useful snipets of code out of my activities just to try lil experiments, but never coding without AS I just don't get it"
androiddev,3cq1wn,insane-cabbage,2,Fri Jul 10 13:12:15 2015 UTC,"Well, he didn't say he wasn't using AS for the main development, did he?   Notepad++, Sublime Text, or fast loading text editor for when your IDE is too much   The last part of the sentence still implies that he's using an IDE."
androiddev,3cq1wn,markyosullivan,2,Fri Jul 10 13:19:43 2015 UTC,I moved to GitHub's Atom since it is crossplatform and really nice: https://atom.io/
androiddev,3cq1wn,burntcookie90,2,Fri Jul 10 15:39:34 2015 UTC,"Big fan of GitHub's Atom, it's my #1 choice."
androiddev,3cq1wn,burntcookie90,6,Sat Jul 11 23:52:26 2015 UTC,Stetho had become a must have for me
androiddev,3cq1wn,acid2do,2,Fri Jul 10 04:02:33 2015 UTC,link and explanation of what it is?
androiddev,3cq1wn,taimooryc,2,Fri Jul 10 15:50:45 2015 UTC,"https://code.facebook.com/posts/393927910787513/stetho-a-new-debugging-platform-for-android/   Today, we're open-sourcing a powerful new debugging platform for Android called Stetho. With it, developers can unlock much richer and more convenient access to data. And the best part: We use Chrome Developer Tools to serve the UI!   https://facebook.github.io/stetho/  The database inspection has become indispensable to me"
androiddev,3cq1wn,acid2do,5,Fri Jul 10 15:53:05 2015 UTC,Something totally different here:  Android Studio  Vim for c++ (we do native development)  Gradle + cmake + ninja + ccache + gtests...   Jenkins for continuous integration   Fabric and crashlytics for app beta distribution.   Crowdsourced QA service.
androiddev,3cq1wn,dmytrodanylyk,1 point,Fri Jul 10 05:52:03 2015 UTC,What type off app are you making?
androiddev,3cq1wn,ecnarongi,2,Fri Jul 10 15:53:59 2015 UTC,"A media player, but the logic is in c++ because we use a bunch of multiplatform code."
androiddev,3cq1wn,lolkittens,4,Fri Jul 10 20:00:35 2015 UTC,A resizer tool to automaticaly resize png files and 9 patches in several densities. E.g. drop xxhdpi image and it automatically make all lower density images.  https://github.com/redwarp/9-Patch-Resizer
androiddev,3cq1wn,dmytrodanylyk,1 point,Fri Jul 10 07:49:54 2015 UTC,I am new to android development so please forgive me if this is an ridiculous question(s).  Is this a plugin for android studio that resizes images to different device sizes? If so that's amazing. Correct me if I am wrong but that would mean that you only design images for that largest devices.
androiddev,3cq1wn,HaoChen,1 point,Fri Jul 10 15:55:32 2015 UTC,I really like avianey/androidsvgdrawable-plugin
androiddev,3cq1wn,CodingGorp,1 point,Fri Jul 10 23:09:25 2015 UTC,"resiz   It's not a plugin, but 3d party app. You just drag and drop large image and it makes all lower dpi images for you."
androiddev,3cq1wn,HaoChen,4,Sat Jul 11 06:50:42 2015 UTC,This is a must have! A universal smartphone stand.
androiddev,3cq1wn,jaydeepw,2,Fri Jul 10 05:02:46 2015 UTC,"Pretty cool, ebay link?"
androiddev,3cq1wn,penny-five,1 point,Fri Jul 10 05:04:06 2015 UTC,Unfortunately I bought this one from the German Amazon. It seems as if it is not available anymore but there are plenty of others available on Ebay and Amazon from other manufacturers.
androiddev,3cq1wn,liuwenhao,1 point,Fri Jul 10 05:53:01 2015 UTC,"Sometime back, I bought a Mac. In the box, I received protective cardboard of the shape show here! I drilled a nice hold through and now its my mobile stand for development. I received 4 such cards in the package. Now I have 4 mobile stands. :)"
androiddev,3cq1wn,Metasheep,3,Fri Jul 10 12:28:36 2015 UTC,Couple of tools that haven't been mentioned yet:  Postman. Let's you easily send complex http requests to an API in a repeatable manner. Really useful when you're trying to get familiar with a new API. Works on all platforms but requires Chrome.  Pixl Preview. Allows you to view your Photoshop designs on your device. What it basically does is that it uses a Photoshop feature called Remote Connection to stream your Photoshop document to your device and allows you to see all changes you make in real time. Easy to setup and works reliably at least on Nexus 4.
androiddev,3cq1wn,burntcookie90,3,Fri Jul 10 05:55:47 2015 UTC,"Notepad++  Dexpot (multiple workspace support for Windows, similar to Linux) http://dexpot.de/  Genymotion  Streamus (my favorite Chrome extension -- it's nice to put on a long playlist while working) https://chrome.google.com/webstore/detail/streamus/jbnkffmindojffecdhbbmekbmkkfpmjd?hl=en"
androiddev,3cq1wn,slothwerks,2,Fri Jul 10 02:18:49 2015 UTC,Sqlite extension for browsing and running queries on an actual db file.  Great when paired with a troubleshooting functionality that lets customers mail a copy of the db on their device to us.  Firefox extension:  https://addons.mozilla.org/en-us/firefox/addon/sqlite-manager/ (probably one for chrome too)  Logcat analyzer to better read dumpstates your PM sends you about random bugs: https://code.google.com/p/androidlogcatviewer/
androiddev,3cq1wn,squeebie23,3,Fri Jul 10 04:37:12 2015 UTC,Check out stetho
androiddev,3cq1wn,ajpri,1 point,Fri Jul 10 12:20:21 2015 UTC,I'm a fan of this app for debugging/browsing SQL on device (requires root though) https://play.google.com/store/apps/details?id=oliver.ehrenmueller.dbadmin&hl=en
androiddev,3cq1wn,BikerMouseFromMars,2,Fri Jul 10 05:45:26 2015 UTC,"While it's not really a tool, I've found Android Arsenal useful for finding tools."
androiddev,3cq1wn,ajpri,4,Fri Jul 10 12:15:05 2015 UTC,"A few debug devices, a dedicated MicroUSB cable, Material Icon Library, an active Terminal session (adb), Google  Play Music playlist, Wireless mouse (I use my Macbook Pro to develop on)"
androiddev,3cq1wn,Muchoz,2,Fri Jul 10 02:03:11 2015 UTC,"And ductape for the USB cable, so that your non Android developing colleges dont take it sneaky without returning it every other day.... :D"
androiddev,3cq1wn,MKevin3,2,Fri Jul 10 06:46:55 2015 UTC,"I don't do Android Development professionally. Just a hobby. I'm actually just about to start my last year of High School. It's my personal cable (actually from a Kickstarter project I backed), I leave it in my bag. I will let others charge their phones with it, they just need to return it."
androiddev,3cq1wn,if_man_is_5,1 point,Sat Jul 11 13:30:28 2015 UTC,"About the portrait display. I have 2 landscape and a portrait display and would not advice using a portrait display specifically for having your IDE/text editor open in. It's extremely handy on my desk because I don't have to rotate my head that much and I prefer to have 2, 3 or 4 windows open in it with a window manager. I use Spectacle for Mac, but Linux of course has its own huge range of WMs."
androiddev,3cq1wn,will_r3ddit_4_food,1 point,Fri Jul 10 11:27:06 2015 UTC,"If you do a lot of REST calls from native Java / C++ code on a Mac Charles Proxy is very helpful. Similar to Fiddler which is what I would use on a PC. Since it is a proxy you can see your Android / iOS REST calls in real-time including HTTPS requests.  Following with others - GenyMotion, Sublime Text, second / third monitor, Paint.NET (PC) or GIMP (MAC). InkScape for SVG work, GitHub, BitBucket, SourceTree, IntelliJ IDEA for testing one off Java code, MonoSnap for screen grabs,"
androiddev,3cq1wn,schwiz,1 point,Fri Jul 10 12:21:39 2015 UTC,"Also if you're cool with free and command line, MITMProxy has been perfectly good for me."
androiddev,3cq1wn,jackhexen,1 point,Fri Jul 10 19:15:26 2015 UTC,Gimp Icon Resizer....I use it all the time.
androiddev,3cq1wn,jaydeepw,1 point,Fri Jul 10 14:58:31 2015 UTC,"Nobody has mentioned APKTool, it doesn't work as well as it used to but can still be handy. There is probably something better out by now I hadn't heard of though."
androiddev,3cq1wn,jaydeepw,1 point,Fri Jul 10 16:20:28 2015 UTC,http://www.cutandslice.me/  http://www.eclipse.org/mat/
androiddev,3cq1wn,entropio,1 point,Fri Jul 10 17:43:55 2015 UTC,Ghostlog is very useful to me when I am running alpha builds on device released in debug mode. https://github.com/jgilfelt/GhostLog
androiddev,3cq1wn,Muchoz,1 point,Sun Jul 12 02:57:23 2015 UTC,Ghostlog is very useful to me when I am running alpha builds on device released in debug mode. https://github.com/jgilfelt/GhostLog
androiddev,3cq1wn,dkozel,1 point,Sun Jul 12 02:57:37 2015 UTC,Paw for Mac – nice tool for working with REST api.
androiddev,3csyjy,mavdev,16,Fri Jul 10 14:57:14 2015 UTC,At least they are really focusing on support/design/appcompat libraries instead of purely platform features now. That makes life way better from my perspective.
androiddev,3csyjy,sfdanb,1 point,Fri Jul 10 15:54:36 2015 UTC,"Agreed.  Aside from an occasional bug or weirdness, I have no problems supporting back to gingerbread in the apps I write."
androiddev,3csyjy,kireol,13,Sat Jul 11 18:16:32 2015 UTC,"It completely depends on your userbase. I work on an app that has 70% Android 5 adoption and rising. Most of the rest are KitKat. Thus it makes sense to invest time into learning and using newer APIs. If only 10 or 20% of the user base was on Android 5, I would certainly be spending my time differently."
androiddev,3csyjy,kaeawc,6,Fri Jul 10 15:55:28 2015 UTC,people forget that the people that use apps often tend to use higher API levels
androiddev,3csyjy,ZakTaccardi,2,Fri Jul 10 16:12:22 2015 UTC,"Same here, the app we recently released is pretty much 50/50 5.0 and 4.4 so far."
androiddev,3csyjy,schwiz,2,Fri Jul 10 16:55:16 2015 UTC,45% of my app use kitkat and 41~% use 5.0 and 5.1. My minSDK is 16 hehehe
androiddev,3csyjy,epicstar,2,Fri Jul 10 18:54:35 2015 UTC,"Yeah the problem with this is that if you focus on newer versions (especially if you're actually upping your minSDK) then of course your user base skews towards newer versions. It easily becomes a self fulfilling prophecy.   I agree with your point overall, just something to be careful of."
androiddev,3csyjy,GaryViceroy,1 point,Fri Jul 10 20:04:15 2015 UTC,"We're holding steady at API 14. I wasn't quite clear above: my users who are lower than API 19 combined is less than 10%. Now, this is also mostly USA with some sporadic downloads internationally, so its expected that it would be skewed to newer APIs. We're not in any pain to change the min version, just need to write clear code with comments + annotations when using a deprecated API. (For example: ImageView.setBackgroundDrawable)"
androiddev,3csyjy,kaeawc,10,Sun Jul 12 23:41:13 2015 UTC,the support library is your best friend. use it. play services too.  Want to use JobScheduler? Hello GCMNetworkManager.  The support library is going to get better and better.
androiddev,3csyjy,ZakTaccardi,5,Fri Jul 10 16:13:38 2015 UTC,"Progress If you don't move forward, you'll become obsolete.   Isnt the value of that share diminished by more than half or a lot more having 2 generation old Software almost at all times   True, but if you assume the average user switches our their phone every two years,  hopefully in two years when the user gets a new phone, they have a drastically better experience. still a good reason to innovate and push forward with newer OS versions and APIs.  All of the above being said, Google has actually done a great job back porting newer APIs for developers to use in older platforms courtesy: Support library and all."
androiddev,3csyjy,morihacky,2,Fri Jul 10 19:33:07 2015 UTC,It's important to point out that many (not all) of Google's APIs and components are handled through the Play Store or Play Services. This makes them fairly version agnostic.
androiddev,3csyjy,ajidar,1 point,Fri Jul 10 16:51:04 2015 UTC,"Eh, I remember there being a study done on how OEMs exacerbated the issue of fragmentation much more so than Google (Google are still to blame though). I'll try and see if I can find it. Also, Google put a lot of their time and effort into Android One hoping that those'll take off in third world countries. Which, as of now, feels like a dud.   One of Android's key selling points is it has like ~80% world market share. Isnt the value of that share diminished by more than half or a lot more having 2 generation old Software almost at all times?   As long as users of these old phones can reach Google's advertising network, then no, the value hasn't diminished."
androiddev,3csyjy,hitler_kardashian,2,Fri Jul 10 15:39:49 2015 UTC,advertising network? What value does a customer get from advertising network? Only google benefits from the advertising network.  Users do not get the new APIs and the new cool stuff.
androiddev,3csyjy,tadfisher,7,Fri Jul 10 15:46:36 2015 UTC,Total Android users != users who install apps.  At my job we're like 90% 4.4 and up. About 40% lollipop at this point.
androiddev,3csyjy,ChronicElectronic,1 point,Fri Jul 10 15:50:12 2015 UTC,Total speculation here: people that regularly pay for the latest devices are more likely to pay for apps too. This makes it easier to target the users with money.
androiddev,3csyjy,ciny,1 point,Fri Jul 10 20:13:13 2015 UTC,Google (and users) benefits from the whole ecosystem. The ads bring in money without the users paying. Remember - there's no android license. Android itself is not really a large part of the price of your phone. Google has no income from android (as in selling the OS to OEMs).
androiddev,3csyjy,jayrambhia,1 point,Fri Jul 10 17:25:40 2015 UTC,"People don't buy new phones when new OS is available. Companies like Samsung and HTC clusterfuck their ""improved"" OS with so many dependencies that it takes them months to port it to new OS versions.   I use Nexus 4 and I get regular OTA updates. Previously, I was using a phone by Asus. It had 1.6. No updates. I am not just going to stop using it. I was still using Asus phone when Android released 4.4. It is still working. It has Market. Not even Playstore."
androiddev,3csyjy,efalk,1 point,Sat Jul 11 12:24:37 2015 UTC,"Even if adoption is slow, things get adopted eventually. My apps still support 2.2 because 10% of my customer base still uses it. I'm only just now adding 4.x features, but I will continue to support back to 2.2  When 2.2 drops below 1% of my market, I will consider dropping support for it."
androiddev,3csyjy,donrhummy,1 point,Mon Jul 13 23:08:43 2015 UTC,"Uh because if they had never done that, you'd only be able to use Android 1.0 APIs. They have to keep updating so eventually, you will be complaining that ""the majority of people are sitting on Android M! Why do they bother working on Android P?!"""
androiddev,3csyjy,s73v3r,0,Fri Jul 10 21:43:47 2015 UTC,"They could sit on things for a year, not introduce a new Android version, and literally no one would be affected."
androiddev,3csyjy,TiGeRpro,1 point,Sat Jul 11 03:24:48 2015 UTC,Shortest rant I've ever read.
androiddev,3csyjy,pjmlp,-1,Fri Jul 10 18:56:33 2015 UTC,"Depending on the type of app you are doing, you can lean on the NDK as well. Then you just need to care whatever libraries you can compile on Android."
androiddev,3ctcud,leggo_tech,5,Fri Jul 10 16:46:57 2015 UTC,"It's really easy. Any problems, report back! The main site was good enough for me."
androiddev,3ctcud,bart007345,2,Fri Jul 10 16:54:09 2015 UTC,"+1 just read the docs. That's pretty much all you need.  Edit: If you want to know a little more about how it does the voodoo that it does, check out Jake's talk on annotation processing."
androiddev,3ctcud,AdamSpeakman,1 point,Fri Jul 10 17:35:25 2015 UTC,"When I first used the library, I was confounded on how easy it was. I would dare to say ruby on rails easy."
androiddev,3ctcud,AnubisJcakal,1 point,Fri Jul 10 18:15:03 2015 UTC,wait. the square site?  http://square.github.io/retrofit/ here?
androiddev,3ctcud,burntcookie90,1 point,Fri Jul 10 18:56:11 2015 UTC,yep
androiddev,3ctcud,Zhuinden,1 point,Fri Jul 10 20:14:10 2015 UTC,"I think it is fairly easy,  I showed off the very basics here with an example of what else you could have done in its place  http://stackoverflow.com/a/30164648/2413303"
androiddev,3ctcud,jimeux,1 point,Fri Jul 10 19:01:28 2015 UTC,"It's definitely easy to learn. That's what's so great about it. The only non-trivial thing I found was getting data from an error response body, like form validation errors on a 422.   If you have time to go further, you could set up a REST module with Dagger 2, or use OkHttp to add authentication or cacheing headers (check out the Authenticator and RequestInterceptor interfaces)."
androiddev,3ctcud,jimeux,1 point,Sat Jul 11 01:57:20 2015 UTC,"does okhttp get bundled with retrofit? I'm not using okhttp but am using retrofit, and I'm curious on adding auth."
androiddev,3ctcud,ValueOfALife,1 point,Mon Jul 13 19:31:27 2015 UTC,"It's not bundled, but they're fully compatible. They're developed by the same people."
androiddev,3cqknr,Cg2XHPxz,5,Thu Jul 9 23:51:46 2015 UTC,canary channel ;)
androiddev,3cqknr,lordVader1138,1 point,Thu Jul 9 23:51:55 2015 UTC,I am always there.... From day one B-)
androiddev,3cqknr,SuperDNRS,6,Fri Jul 10 03:14:40 2015 UTC,The very last reason to run Eclipse for Android has just left this world forever.
androiddev,3cqknr,pjmlp,4,Fri Jul 10 09:27:29 2015 UTC,"Finally!!!! I know what I will be checking to tonight.   Now if we only had a few more frameworks exposed in the NDK, instead of being forced to do the JNI dance...."
androiddev,3cqknr,acid2do,5,Fri Jul 10 06:01:29 2015 UTC,Dropbox has a nice tool to generate the JNI glue code: https://github.com/dropbox/djinni
androiddev,3cqknr,pjmlp,1 point,Fri Jul 10 08:32:40 2015 UTC,"I know, thanks anyway. :)"
androiddev,3cqknr,leggo_tech,1 point,Fri Jul 10 09:45:52 2015 UTC,does the dropbox tool support c or only c++?
androiddev,3cqknr,acid2do,2,Fri Jul 10 16:08:15 2015 UTC,C++ afaik. If you simply need to map c methods it's quicker to use the java tools to generate a header file from a java class.
androiddev,3cqknr,leggo_tech,1 point,Fri Jul 10 20:04:58 2015 UTC,wait... what java tools. ive been doing it by hand.
androiddev,3cqknr,nathansol,1 point,Fri Jul 10 20:23:32 2015 UTC,It's called javah.  Comes with the jdk.
androiddev,3cqknr,leggo_tech,1 point,Fri Jul 10 21:18:54 2015 UTC,I just do javah [name of c file]? sorry new to both C and java and programming as a whole. Would appreciate the clarification on javah though. If so... this could save me a shit ton of time
androiddev,3cqknr,nathansol,1 point,Mon Jul 13 11:26:35 2015 UTC,"First you declare some native methods inside your java class. Something Likes this: private native int getIntNative (); and compile, then you run javah passing the fully qualified class name and the classpath to look for the .class file as argument and javah Will spit out a C header file. This is header is the jni binding. If your class is named Example the javah invocation would be something like this: ""javah -classpath .;path_name; com.name.of.Package.Example"" , assuming you have java/bin folder in your PATH variable. More info is available here. Then you Just need to #include this  generated header into your .c or .cpp implementation file, compile the .so or .dll and on your java class add inside a static constructor ""System.loadLibrary (""nameoflib""); this library must start with lib and in the call you omit the lib parte.  Example: libjnitest.so -> System.loadLibrary (""jnitest"")."
androiddev,3cqknr,acid2do,1 point,Mon Jul 13 12:26:30 2015 UTC,With javah
androiddev,3cqknr,leggo_tech,1 point,Fri Jul 10 21:37:44 2015 UTC,I just do javah [name of c file]? sorry new to both C and java and programming as a whole. Would appreciate the clarification on javah though. If so... this could save me a shit ton of time
androiddev,3cqknr,acid2do,1 point,Mon Jul 13 11:26:39 2015 UTC,"Works the other way around, create a java class (e.g. MyNativeClass) with native methods like: public native String getSomething();  and then use javah to generate a c header file as explained here: http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javah.html  javah -o output.h -classpath your-app-classes com.leggo_tech.MyNativeClass"
androiddev,3cqknr,leggo_tech,1 point,Mon Jul 13 11:39:54 2015 UTC,Thank you. really really appreciate the help.
androiddev,3cqknr,pakoito,3,Mon Jul 13 11:51:35 2015 UTC,"Because your build don't dance and if JNI don't dance  Well, it's no build of mine"
androiddev,3cqknr,bart007345,1 point,Fri Jul 10 06:36:37 2015 UTC,r/newwave
androiddev,3cqknr,acid2do,1 point,Fri Jul 10 10:03:38 2015 UTC,Lldb debugging... Finally!
androiddev,3cqknr,ZakTaccardi,0,Fri Jul 10 05:57:37 2015 UTC,where is this mystery SVG support I wonder
androiddev,3cqknr,MKevin3,1 point,Fri Jul 10 15:52:17 2015 UTC,I would love to see SVG support built in. I have been using SVG with Android for the last 9 months over two different jobs. The iOS team at the new job is using PDF so I use InkScape to convert those to SVG. Sure beats creating all the HDPI etc. flavors.  Does not work as easily as real Android resources but I have been able to us SVG in most aspects of our code.
androiddev,3cqknr,ZakTaccardi,1 point,Fri Jul 10 19:50:44 2015 UTC,PDFs? So weird
androiddev,3csfwp,epigrammedic,1 point,Fri Jul 10 12:02:41 2015 UTC,Anybody know how to enter the Android-dev IRC channel? I have never entered an IRC channel before and I'm stuck.
androiddev,3csfwp,Myriad_Skill,1 point,Sat Jul 11 07:09:17 2015 UTC,"How can I preserve data between activities? For instance, I have an edit text and a button in Activity A. I fill in that editText and then click on the button. That button starts a new intent, Activity B. In B I click on a button and start activity A again. I want that editText to be still filled in.  I know this has to do with onStop() -> onStart(), but couldn't get it to work."
androiddev,3csfwp,candidcold,2,Fri Jul 10 23:43:57 2015 UTC,"How do you guys manage to use Retrofit + GSON to handle multiple requests from an API? For example, the Marvel API returns all of its data within two outer arrays, and then the information. If I wanted Comics, that's fine, I'll get the models from something like jsonschema2pojo and it'll work fine. But if I wanted to then query Characters, I would get those two outer arrays again, and it seems like that would cause a conflict due to having one object that could be two different things. I'm just a little bit confused, any guidance would be great."
androiddev,3csfwp,HoberShort,1 point,Fri Jul 10 17:04:30 2015 UTC,One endpoint returns data with two different schemas based on parameters?  Some examples might be helpful.
androiddev,3csfwp,candidcold,1 point,Fri Jul 10 18:11:42 2015 UTC,"Here's an example of what the API will return:   {  code/copyright/tag/status etc.  data: { (this gives a list of the params used for your query, not including the type, like it won't tell me I'm searching for comics)  results: [ (this gives me the information of what I'm looking for, events, characters, comics etc.)  ]  }  }  Hopefully that's clearer. My problem is that any query I make will return that same format, but the array of results will just be different depending on what I'm trying to get. Would that cause a problem for retrofit and gson because I would just end up with a mega class called Results that'll just contain every object that could be returned in the results section. I hope that wasn't confusing :s"
androiddev,3csfwp,HoberShort,1 point,Fri Jul 10 18:25:36 2015 UTC,"Yeah, I think I get what you're saying. That sounds like shitty design on their part (well, ""wrapped in two layers of containers"" should have been the first hint.)  How do you differentiate a query for characters vs comics or something? If it's a path parameter, that's dead easy  @Get(""/v1/api/characters"") public CharactersResponse getCharacters( /*... params*/);  @Get(""/v1/api/comics"") public ComicsResponse getComics( /* ... params */);   Even if it's via query parameters, you can do basically the same thing: create two different methods in your interface that query each endpoint by putting the fixed query params in the endpoint URL:  @Get(""/v1/api?type=characters"") public CharactersResponse getCharacters( /*... params*/);  @Get(""/v1/api?type=comics"") public ComicsResponse getComics( /* ... params */);   Even if you have other path parameters after the hard-coded type=... one, retrofit is smart enough to just append an ampersand and then those, so that with something like  @Get(""/v1/api?type=comics"") public ComicsResponse getComics(@Path(""title"") String title);   if you called it as  api.getComics(""Wolverine"");   the resulting request would go to /v1/api?type=comics&title=Wolverine.  (All of this untested and off the top of my head, but that's my recollection of retrofit.)"
androiddev,3csfwp,candidcold,1 point,Fri Jul 10 19:06:14 2015 UTC,"Probably should have put this disclaimer before, but I'm new to using Retrofit so I'm still trying to wrap my head around some of the things it does.   Your first assumption is correct thanks. Where I was/am a bit confused is that the response given from either of the different queries would return ""Results"", so the gson would map to just one POJO named Results, and managing that would be a bit unwieldy. How would I go about making it that gson will map the response from the different queries to different Results POJOs like you have CharacterResponse and ComicsResponse in your example?"
androiddev,3csfwp,HoberShort,1 point,Fri Jul 10 19:28:33 2015 UTC,"ComicsResponse in this scenario is just a pojo you create (or use a utility to generate). Retrofit infers that's the format you want the response in by defining ComicsResponse as the return type of the method in your interface. When it receives the JSON response, it hands the JSON to GSON and says ""I want a ComicsResponse out of this. Figure it out.""  Similarly, CharacterResponse or whatever else would be a POJO you define or generate. Just a Java source file with a bunch of public members."
androiddev,3csfwp,candidcold,1 point,Fri Jul 10 19:33:01 2015 UTC,And those public members follow the same rules as what I already have (All the members that are in the json response have to be represented in the POJO) although I'm telling it to squeeze the JSON into the class I specify?
androiddev,3csfwp,elcarni,1 point,Fri Jul 10 19:40:53 2015 UTC,Has anyone used Retrofit along with Android-AsyncService libs? Any pointers?
androiddev,3csfwp,LadyTesla,1 point,Fri Jul 10 16:02:02 2015 UTC,I've been looking to make a calendar tracking app. I really like the Gui on the second photo on this app. Any tips on how to best make this happen? I haven't worked with the android calendar views yet.
androiddev,3csfwp,anticafe,2,Fri Jul 10 14:57:00 2015 UTC,It's now July but there is still no new Android platform versions statistics. Does Google fall asleep?
androiddev,3csfwp,dandc87,1 point,Fri Jul 10 14:25:44 2015 UTC,"Google is really inconsistent with updating those stats. I've seen them updated as late is the 14th. They also like to skip months after something big (like Google IO). So hold tight, and hope for August!"
androiddev,3csfwp,lakewoodjoe112,1 point,Sat Jul 11 06:42:23 2015 UTC,I posted this on stack overflow too but I'm completely stumped...  I am trying to use the navigation view with a toolbar that acts as my action bar. I can't get the back button to replace the hamburger button when there are fragments in my backstack.  Pictures are attached here:  http://stackoverflow.com/questions/31326010/back-button-not-displaying-using-navigation-view-and-toolbar?noredirect=1#comment50639947_31326010
androiddev,3csfwp,guillaumeyp,1 point,Fri Jul 10 13:24:15 2015 UTC,Have you tried :  // Set support action bar Toolbar mToolbar = (Toolbar) view.findViewById(R.id.toolbar); ((Activity) getActivity()).setSupportActionBar(mToolbar); ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);
androiddev,3csfwp,lakewoodjoe112,1 point,Fri Jul 10 13:38:01 2015 UTC,This is the exact code (within my main activity):  void setupActionBar() {     setSupportActionBar(toolbar);      ActionBar actionBar = getSupportActionBar();     if (actionBar != null) {         actionBar.setDisplayHomeAsUpEnabled(true);     } }   The weirdest thing is that the actual back-navigation works perfectly if I use the hardware buttons. It's the nav drawer toggle that doesn't update to the back arrow when I'm in one of those lower level fragments.
androiddev,3csfwp,guillaumeyp,1 point,Fri Jul 10 13:50:44 2015 UTC,Put my answer in your fragment's onViewCreated method.
androiddev,3csfwp,lakewoodjoe112,1 point,Fri Jul 10 13:54:15 2015 UTC,It had no effect :|
androiddev,3csfwp,lakewoodjoe112,3,Fri Jul 10 13:58:54 2015 UTC,Solved using:  actionBar.setHomeButtonEnabled(true); actionBarDrawerToggle.setDrawerIndicatorEnabled(false); actionBarDrawerToggle.setHomeAsUpIndicator(R.drawable.abc_ic_ab_back_mtrl_am_alpha);   in the onAttach method on my fragments where back nav should be enabled.
androiddev,3csfwp,epicstar,1 point,Fri Jul 10 14:46:56 2015 UTC,I had this problem too until I did this.
androiddev,3csfwp,jayrambhia,3,Fri Jul 10 13:39:51 2015 UTC,"I use custom fonts in my app and creating them from asset takes ~40msec every time. I have started using them as static variables. I have a class TypefaceUtils which provides me Typefaces. Initialising for the first time does take ~40msec, but getting fonts the next time hardly takes any significant time. Is this a good idea? Would this cause memory leaks? How to go about it? I am using OrmLite for db. I need to update some rows' columns based on some data that I get. Updating one row at a time seems to be time consuming and intensive. I was thinking about using joints. I'll be using raw sql queries to perform this. Is it advisable to create table at runtime to perform joints?"
androiddev,3csfwp,denley,1 point,Fri Jul 10 12:37:39 2015 UTC,"Number 1 is fine. You're describing a singleton pattern with lazy initialization. It's fairly common.  It does leak, but that's the feature of the design pattern. The leak size is at least capped to the size of the typeface."
androiddev,3csvny,8bitmaster,13,Fri Jul 10 14:33:24 2015 UTC,"Please don't connect to the remote db directly from the mobile application:    You won't be able to setup secure access to the db even with all permissions for users which you can set in MySQL, also you'll need to store user/password for db connection in the app which is really easy to decompile. You won't be able to scale your db well, especially relational dbs, every client will establish connection to the db and it will be huge performance problem in future. You won't be able to change db engine without changing mobile app (even with JDBC) and waiting until all users will update it.   So, I'd suggest to consider building small API (REST for example) over your db and connect to it in the mobile app, also take a look at PostgreSQL as better relational db in compare to MySQL."
androiddev,3csvny,artem_zin,3,Fri Jul 10 15:06:56 2015 UTC,Alright I'll go implement a rest API rather then trying to keep my db exposed in the app. That does seem like a much more secure way to go.
androiddev,3csvny,artem_zin,9,Fri Jul 10 15:47:39 2015 UTC,"Thanks, at least one little kitten was saved today!"
androiddev,3csvny,bart007345,2,Fri Jul 10 16:20:25 2015 UTC,Exposing a database to the world is a terrible idea.  I don't think jdbc even works on Android.  Closest I've seen is couch base mobile.
androiddev,3cpx5g,primosz,48,Thu Jul 9 20:48:45 2015 UTC,Not really that compelling due to double nesting.  The tools team should just add folder support with the same naming rules and an automatic underscore added between the folder name and its contained files.  res/   layout/     profile/       main.xml       notifications.xml     signup/       landing.xml       login.xml       forgot_password.xml   becomes  res/   layout/     profile_main.xml     profile_notifications.xml     signup_landing.xml     signup_login.xml     signup_forgot_password.xml   automatically.
androiddev,3cpx5g,JakeWharton,1 point,Thu Jul 9 23:27:21 2015 UTC,"I prefer having the top-level directories be the features, and within the feature directory have the layout, value, and drawable folders.   Having feature directories duplicated across the layout, drawable, etc.. folders seems odd to me."
androiddev,3cpx5g,davebren,3,Fri Jul 10 15:36:32 2015 UTC,This is why we only allow multiple top level res folders for now.  There are so many different resource folders (either different types or different qualifiers) than having sub folders in each does not seem optimum to me.  Still Jake's idea is pretty good I think. Having both would mean devs can organize things the way they prefer which is good.
androiddev,3cpx5g,droidxav,1 point,Fri Jul 10 15:53:15 2015 UTC,"Sometimes a feature folder gets so complicated that it can benefit from being broken up into smaller chunks, just like with source packages. Hierarchical structure is always going to be important for keeping a growing project navigable.  The title of this post is also a bit misleading since you shouldn't put the subfolders inside the layout directory (I am to blame for the confusion since I named it layouts when I first made the example repo)."
androiddev,3cpx5g,davebren,1 point,Fri Jul 10 16:39:33 2015 UTC,wow thats awesome...
androiddev,3cpx5g,schwiz,2,Fri Jul 10 19:03:13 2015 UTC,Great sample project for this: https://github.com/eskimoapps/ResourceNestingExample
androiddev,3cpx5g,pakoito,1 point,Thu Jul 9 21:27:32 2015 UTC,"So as long as the leaf folder is called layout, it'll work? Nice."
androiddev,3cpx5g,hellotimmutton,1 point,Thu Jul 9 21:48:00 2015 UTC,"Any way to automate which folders it includes? Eg ""layouts/*"""
androiddev,3cs4ix,Veshsare,1 point,Fri Jul 10 09:28:33 2015 UTC,"First read all tutorials on http://developer.android.com/ . They cover all new features in android L and M.  There are many new changes in android e.g replacing Holo with Material design, new support libraries and i don't thing you can find a book which cover these new things."
androiddev,3cs4ix,smasoumi,1 point,Fri Jul 10 11:37:31 2015 UTC,Thank you! On what I should focus in order to upgrade my knowledges?
androiddev,3cs4ix,smasoumi,1 point,Fri Jul 10 15:13:12 2015 UTC,Android developer as i mentioned above is already up-to-date. So first of all you should focus on it.
androiddev,3ct7kx,leggo_tech,3,Fri Jul 10 16:06:50 2015 UTC,http://openweathermap.org/api
androiddev,3ct7kx,lolkittens,1 point,Fri Jul 10 17:04:50 2015 UTC,https://github.com/Giphy/GiphyAPI
androiddev,3ct7kx,chipotlegladiator,1 point,Fri Jul 10 18:31:36 2015 UTC,"The Reddit API can be accessed by appending .json to a URL. This is not for authentication related tasks, but for getting page data it works."
androiddev,3ct7kx,Sinistersnare,1 point,Fri Jul 10 21:29:51 2015 UTC,you can use the API they use for an example on their site - https://api.github.com/
androiddev,3ct7kx,filecabinet,1 point,Thu Jul 16 07:23:54 2015 UTC,You mean by the user or by the developer? I can't think of a single api that doesn't require the developer to make an account and get some kind of dev/api key to use in making requests.
androiddev,3ct7kx,schwiz,1 point,Fri Jul 10 16:59:08 2015 UTC,thanks for the headsup
androiddev,3ct7kx,echeese,0,Fri Jul 10 18:55:12 2015 UTC,The time you spent making this post could have been used getting an API key.
androiddev,3cosk1,bukster,9,Thu Jul 9 15:53:25 2015 UTC,These kind of services seem like exactly what's needed to improve compatibility across devices but I'm disappointed by the price. $0.17/minute of device time sounds like it would get expensive fast. Say 10 devices * 5 mins *0.17 = $8.50 each time you want to run your tests on a set of devices? Hopefully I'm misunderstanding.
androiddev,3cosk1,megamatt2000,8,Thu Jul 9 16:24:47 2015 UTC,"Their pricing page is so confusing I'm surprised you worked that out!  Some other options (just quickly looking, please check yourselves):   http://developer.samsung.com/remotetestlab/rtlAboutRTL.action    - Samsung Remote test lab, FREE! All Samsung devices, it is very temperamental to use (last time I used it was a good six months ago, might have improved).  http://testdroid.com/pricing    - $49 per month includes 5 hours of Device Time - $0.163 per min, All Android & iOS devices https://testobject.com/pricing   - $99 per month Time:""fair use"", 150+ Android devices https://aws.amazon.com/device-farm/ - $0.16 per min APKUDO.com       - Device testing service seems to have gone!! Shame, used to be free.   So the Amazon price is competitive. The Amazon free 250 minutes is worth trying out. Would be nice if Amazon let anyone who published their app to Amazon App Store allow them to use this service for free with that app (or maybe give them an extra 500 minute time credit for each app they publish to Amazon App Store).  Hey Amazon, you reading this? Please!?"
androiddev,3cosk1,GMTDev,6,Thu Jul 9 17:50:32 2015 UTC,Google has an offering on the horizon too: https://developers.google.com/cloud-test-lab/
androiddev,3cosk1,mikenomn,2,Thu Jul 9 18:37:24 2015 UTC,I'll let my bosses handle the pricing should I choose to use AWS' service :P
androiddev,3cosk1,lolkittens,1 point,Thu Jul 9 19:09:21 2015 UTC,"The tests are fully automated so if they're taking 5 minutes, you might want to rework your tests..."
androiddev,3cosk1,dccorona,1 point,Fri Jul 10 00:36:29 2015 UTC,"If you have a substantial amount of tests, which you should have, it could take a while to go through them all."
androiddev,3cosk1,raxel82,5,Fri Jul 10 01:34:39 2015 UTC,"$250 per month per device for unlimited testing? You could just buy the devices yourselves for a lot less and have unlimited testing.  I love the idea of this, but the pricing kills it for me."
androiddev,3cosk1,humanmanguy,2,Thu Jul 9 21:23:56 2015 UTC,"The point of most AWS services is pay what you use, not pay for 24/7 access to a single thing."
androiddev,3cosk1,tootie,2,Thu Jul 9 22:09:16 2015 UTC,"Are you going to maintain what it takes to keep these charged, connected to the internet, update-to-date with OS OTAs, and connected to test running infrastructure? I think you vastyle under estimate what it takes to run a device farm beyond a handful of devices."
androiddev,3cosk1,JakeWharton,3,Thu Jul 9 23:33:39 2015 UTC,"Are you going to maintain what it takes to keep these charged, connected to the internet, update-to-date with OS OTAs, and connected to test running infrastructure? I think you vastyle under estimate what it takes to run a device farm beyond a handful of devices.   I don't care what it costs them to run their device farm. I already own around 20 Android devices that I use for testing, and I charge/update them when I need them. Keeping them connected to the internet isn't hard at all, and most of my devices don't even get OTAs. That's instant, on-demand, unlimited testing for me.  They're offering me a product which would cost $5,000 per month more to provide me with what I already have. I find that ridiculous because I don't need it. That's why I said that I love the idea, but the pricing kills it for me."
androiddev,3cosk1,humanmanguy,0,Thu Jul 9 23:55:29 2015 UTC,"How many minutes per month do you use each device?  You also shouldn't conflate local testing on a few devices to integration testing across hundreds. Unless you're a large corporation, buying unlimited isn't logical. However, an independent developer running an acceptance test a few times before release across 100s of devices to ensure compatibility is reasonable. Plus then you can target specific devices when crashes or failures occur. I think there's still a use case to be had."
androiddev,3cosk1,JakeWharton,0,Fri Jul 10 00:13:14 2015 UTC,"My usage just depends on what I'm working on, which varies a lot.  What I'm talking about is their $250/mo/device plan being shitty. I don't know what you're going on about, because you seem to be disagreeing with me, but the examples you gave agree with me.  Unless you consider $25,000+ per month for ""100s of devices"" to be reasonable for an independent developer, then you haven't provided me with an example that attempts to change my opinion.  I can't imagine a scenario where paying $250 for unlimited testing on one device for one month is a good deal unless you have some kind of weird and specific emergency."
androiddev,3cosk1,humanmanguy,0,Fri Jul 10 01:05:40 2015 UTC,"Unless you consider $25,000+ per month for ""100s of devices"" to be reasonable   Nope. But $0.17/min/device is though."
androiddev,3cosk1,JakeWharton,1 point,Fri Jul 10 01:11:44 2015 UTC,Okay.
androiddev,3cosk1,humanmanguy,3,Fri Jul 10 01:34:05 2015 UTC,"I've never tried something like this. So how does this work? If a textview doesn't appear where it should, how does it know to warn me?"
androiddev,3cosk1,geecko,2,Thu Jul 9 16:38:15 2015 UTC,"It all depends on the tests you write. This service provides hardware to run your tests. They do seem to also provide a tool to create tests, but it does require a human to set what actions it takes and what it should assert."
androiddev,3cosk1,jamespullar,2,Thu Jul 9 16:58:30 2015 UTC,Espresso has tests like is visible or isPartiallyVisible to validate positioning
androiddev,3cosk1,prlmike,2,Thu Jul 9 18:04:52 2015 UTC,"This looks promising. I haven't found a remote device lab that is easy/robust enough for me to want to use, maybe Amazon can pull it off.  Thanks for the link."
androiddev,3cosk1,lolkittens,2,Thu Jul 9 15:59:44 2015 UTC,So many questions.  Can you see the display of each device?  Can you connect with adb?
androiddev,3cosk1,i_donno,2,Thu Jul 9 16:47:05 2015 UTC,"These are cattle, not pets. Even if there are allowance for manual testing, do you want to spend precious minutes (and money) to manually test your thing across devices? This farm is a way to run your automated tests across devices, you shouldn't need adb or a display view."
androiddev,3cosk1,Daph,1 point,Thu Jul 9 20:52:19 2015 UTC,Thanks.  That makes more sense.
androiddev,3cosk1,i_donno,2,Thu Jul 9 21:28:52 2015 UTC,Which devices do they support? The most important question is not answered anywhere. How can anyone have an opinion about the price when they are not telling what they are selling?
androiddev,3cosk1,ripuliday,2,Thu Jul 9 20:47:14 2015 UTC,"I wonder how they automated the process. Obviously they need to enable usb debugging on the devices. They also need to do some kind of factory reset between tests. And if the devices are real, factory reset will disable usb debugging. Custom bootloader for each device?"
androiddev,3cosk1,daio,1 point,Fri Jul 10 00:45:29 2015 UTC,USB-OTG HID device with handset specific scripts that know how to navigate the settings menu to enable USB debugging?  I imagine AWS aren't going to be telling us how it's done any time soon :(
androiddev,3cosk1,alex_w,2,Fri Jul 10 11:33:41 2015 UTC,AppThwack worked good for me
androiddev,3cosk1,zng,-6,Fri Jul 10 01:15:59 2015 UTC,"Is this about Amazon's Android devices. They're dead anyway, so what's the point?"
androiddev,3cosk1,ripuliday,0,Thu Jul 9 18:52:01 2015 UTC,OK. I get it. It's amazon's very own thread. LOL.
androiddev,3cru4i,Furkhail,2,Fri Jul 10 07:00:16 2015 UTC,Depending on monitor type you might have some issues with viewing handles running portrait (mine does). Personally I prefer to have a landscape monitor since I like to see the chunk of code I'm working on and don't feel a need to see more.  I do use my portrait monitor for spec documents and excel documents. I can't tell you how much faster and nicer it is.
androiddev,3cru4i,Cephas00,2,Fri Jul 10 08:09:26 2015 UTC,"The only thing to do is to try it.  I preferred portrait monitors when they still made them in 4:3, but even in 16:9 it's only a little skinnier than a legal-size sheet of paper.  One quality concern is the subpixel hinting.  If your GUI is trying to enhance the clarity of fonts by using subpixels (I think Windows's method is called ClearType), then you will see weird distracting fringes at the edges of all the letters.  Either disable subpixel hinting or try the other settings.  Sometimes, the system allows you to specify the subpixel arrangement in use so it can make those decisions better.  When you try it, try portrait both ways (rotating left and rotating right).  Depending on the backlight and which side you put it on, you might get better or worse viewing-angle effects one way or the other."
androiddev,3cru4i,PierreSimonLaplace,1 point,Fri Jul 10 13:06:04 2015 UTC,Gr8 answer ty!
androiddev,3cru4i,pathartl,2,Fri Jul 10 13:53:37 2015 UTC,"Ive been using a portait monitor as my secondary monitor for about two years. As long as the monitor is 24"" or under you shouldnt have a problem with height. The quality can go down, but for the most part its okay, especially for code. IPS will look better than LED, LED better than TN. Make sure you go at least 1080p. Code wont fit as well in your editor on lower resolutions."
androiddev,3cru4i,burntcookie90,1 point,Fri Jul 10 07:47:28 2015 UTC,Landscape with split
androiddev,3cru4i,DanLynch,1 point,Sat Jul 11 00:00:52 2015 UTC,"I stopped using a portrait second monitor when monitors changed from 4:3 ratio to 16:9 ratio. They are just too damn tall now, if you do that."
androiddev,3cru4i,MKevin3,-1,Fri Jul 10 11:46:50 2015 UTC,"I recently started a new remote work job. I decided to get a nice big monitor so I went with the Dell 27"" 2560x1440 and am very happy with that decision. I had a 23"" at 1920x1080 which is now my second monitor (well 3rd as I also have the Macbook display).  I was thinking 4k but driving that with the video card when I game on my PC plus the smallness of the text did not seem to be the right move for me.  For Android dev being able to see the Project tree structure, your code and the preview of what it looks like on the device when doing layout work across the wide monitor has been awesome.  Text is much cleaner than on the Samsung 23"" monitor as well. I tend to leave Chrome on the 23"" with the IDE on the 27"" but I move Chrome over when I am answering emails / reddit posts."
androiddev,3cru4i,MKevin3,2,Fri Jul 10 12:30:03 2015 UTC,And regarding my questions?
androiddev,3cs2br,lordoftherings911,8,Fri Jul 10 08:56:26 2015 UTC,"You can use Ctrl+W. It selects the current word, where the caret is. Pressing the combination again selects the String without the quote. You can continue this until you have the whole class selected"
androiddev,3cs2br,JoeHut,1 point,Fri Jul 10 09:20:19 2015 UTC,CTRL+W just closes the tab... or did I get something wrong?
androiddev,3cs2br,JoeHut,1 point,Sat Jul 11 04:06:40 2015 UTC,"maybe your keymap is altered. Try hitting Ctrl+Shift+A. Then type ""extend selection"". The shortkey is in brackets."
androiddev,3cs2br,morihacky,1 point,Sat Jul 11 07:11:56 2015 UTC,"Ahh yes, it showing ALT+SHIFT+UP. Thanks!"
androiddev,3cs2br,JoeHut,2,Sat Jul 11 07:58:29 2015 UTC,"I use a custom keymap so not sure if the keyboard shortcuts will map precisely to what you're using. So i've given the command names, as you would find in your Keymap file:   Extend Selection: Alt + Up: once your cursor is anywhere inside the word, hitting this once selects the word. (bonus tip: it's scope sensitive so you can keep increasing the selection intelligently, for e.g. word >word with quotes > line > method > class etc. Add Selection for Next Occurrence: Cmd + D (probably Ctrl + G for you) : Another super handy shortcut for selecting similar words one after the other. what people usually don't realize is that if you don't have any word already selected it defaults to first selecting the existing word where the cursor is placed.   Using one of the above shortcuts is probably the best way to achieve what you want cause it additionally teaches you an extra command/functionality :)"
androiddev,3cs2br,morihacky,1 point,Fri Jul 10 19:18:47 2015 UTC,"These shortcuts are indeed handy, but they aren't the default ones. Extend Selection is Ctrl+W by default. I'm not sure about the second, but Ctrl+G is ""go to line"". Selecting the word the caret is at and writing it to the search bar is Ctrl+F3. With enter you can jump to the next occurrence"
androiddev,3cs2br,JoeHut,2,Fri Jul 10 21:08:00 2015 UTC,"right. my keymap has been heavily altered, that's why i prefaced the response with that caveat :P  that being said, the names ""Extend Selection"" and ""Add Selection for Next Occurrence"" are standard across keymap configuration files. so if you searched in the keymap (Preferences > Keymap) for the exact names you should find it.   Selecting the word the caret is at and writing it to the search bar is Ctrl+F3. With enter you can jump to the next occurrence   ah yes, but this is slightly different from the behavior of ""Add selection for next occurrence"" which basically starts by selecting the word, and then automatically multi-selects the next occurrence (vs jumping to the next occurrence) if that makes sense."
androiddev,3cs2br,morihacky,2,Fri Jul 10 21:17:24 2015 UTC,"I read the caveat but thought OP probably uses the default mapping, so I wanted to provide those :) I didn't know ""Add selection for next occurrence"" but looked it up right now. Default is Alt+J. Indeed very handy. TIL ;)"
androiddev,3cs2br,JoeHut,1 point,Fri Jul 10 21:27:25 2015 UTC,Default is Alt+J.   like the band? wicked! :)  thanks for providing the default mappings! usually more helpful than my frankenstein keymap ones.
androiddev,3cs2br,morihacky,2,Fri Jul 10 21:31:36 2015 UTC,"like the band? wicked! :)     Yeah, but it's not easy to code with your left hand free ;)"
androiddev,3cs2br,DanielFGray,1 point,Fri Jul 10 21:45:15 2015 UTC,well done. i see what you did there.  Have a lovely day ! :)
androiddev,3cruhy,geecko,3,Fri Jul 10 07:04:30 2015 UTC,"Hold your breath and hope for an update soon. Currently, even Chris Bane's demo project looks broken on the S5.  The design lib is not production ready yet..."
androiddev,3cruhy,docoptix,1 point,Fri Jul 10 07:29:08 2015 UTC,Agreed..
androiddev,3cruhy,lynfogeek,1 point,Fri Jul 10 08:18:01 2015 UTC,"You were right, it has been marked as a bug and will be fixed in the future.  https://code.google.com/p/android/issues/detail?id=177738&can=1&q=CollapsingToolbarLayout&colspec=ID%20Type%20Status%20Owner%20Summary%20Stars"
androiddev,3csvj1,donrhummy,2,Fri Jul 10 14:32:18 2015 UTC,"It's more of an as-you-go thing.  ""I'm tired of writing networking code"" : ""Oh cool, retrofit""  ""Callbacks suck"": ""Oh cool reactive""  ""Working with sqlite is tiring"" : ""ORMs, cool"""
androiddev,3csvj1,burntcookie90,1 point,Fri Jul 10 20:15:39 2015 UTC,"but how do you know retrofit or reactive, etc is the one to use? There are other libraries that do the same. So how do you pick the right one?"
androiddev,3csvj1,burntcookie90,2,Fri Jul 10 21:10:19 2015 UTC,"By trying them :)  I tried volley in one project, and retrofit in another, like retrofit more and went with it. If you find a bunch, try them, whichever you like should be fine, as long as it doesn't have massive performance issues or something."
androiddev,3csvj1,burntcookie90,1 point,Fri Jul 10 21:36:29 2015 UTC,But there's much more to finding a good library than that. What's the support like? Do they update regularly? Are there a lot of known bugs? etc.
androiddev,3csvj1,chukyka,1 point,Fri Jul 10 21:37:40 2015 UTC,"Yeah, check their issue tracker, check their pull requests see wht the community thinks about the lib etc"
androiddev,3cpegj,_danielb,3,Thu Jul 9 18:32:25 2015 UTC,"Exciting stuff. This page has the details.    Updated documentation. The Behavior Changes, API Overview, and Permissions documents have been updated to reflect the latest changes in the platform. An updated Developer Documentation download package is available, including full reference docs and API diff reports.   I wish there was a way to read a diff on the documentation so I can see what was added/removed."
androiddev,3cpegj,Nemisis82,1 point,Thu Jul 9 18:59:58 2015 UTC,they include a key changes section in your link
androiddev,3cpegj,Cg2XHPxz,3,Thu Jul 9 23:15:01 2015 UTC,"""Both WRITE_EXTERNAL_STORAGE and WRITE_EXTERNAL_STORAGE are members of the STORAGE permission group""  Am I missing something or is that a typo?"
androiddev,3cpegj,JohnAdamZiolkowski,2,Fri Jul 10 01:19:39 2015 UTC,dunno. i read it three times. shrugged. gotta be a typo i think
androiddev,3cpegj,Cg2XHPxz,3,Fri Jul 10 01:21:31 2015 UTC,For those racing to their software update settings:   the update can be delivered to your device via an over-the-air update. We expect all devices currently on the developer preview to receive the update over the next few days
androiddev,3cpegj,pandanomic,3,Thu Jul 9 22:02:36 2015 UTC,What all are we getting in the support libs?
androiddev,3cpegj,lordoftherings911,1 point,Fri Jul 10 03:21:37 2015 UTC,"Disappointed that GET_ACCOUNTS and INTERNET are still protection ""normal"" permissions and thus every app can read and transmit any account identifiers you have registered on your device. At a minimum that's going to be your google email, but depending on what other apps are installed it could include your twitter and facebook usernames as well.  DAE think these should be protected?  Update : Made a Github Project demonstrating this issue. Please PR with any other M Permissions issues you have."
androiddev,3cq49b,MagnetSys,1 point,Thu Jul 9 21:41:54 2015 UTC,lazy web: and here's the github repo link
androiddev,3csb5e,bubbleguuum,1 point,Fri Jul 10 11:02:28 2015 UTC,Module to crack apps (licence check) maybe. Lucky Patcher?
androiddev,3csb5e,pyler2,1 point,Fri Jul 10 13:06:50 2015 UTC,It's not Lucky Patcher (my logs tell me if LP is installed so I'm 100% sure).
androiddev,3csb5e,pyler2,1 point,Fri Jul 10 15:19:53 2015 UTC,Lucky Patcher can hide itself via Xposed.
androiddev,3cs7mh,AndyOHart,2,Fri Jul 10 10:13:49 2015 UTC,did you check the internet?
androiddev,3cs7mh,bart007345,1 point,Fri Jul 10 10:28:20 2015 UTC,"I already saw that stack overflow post but it's not what I'm asking.  I'm wondering is there a chance the user, in the Android OS, can disable cookies from every app? Like is there some setting they can toggle that makes every app not use cookies? Just need to know so can give feedback as to if something in our app will work"
androiddev,3cs7mh,bart007345,2,Fri Jul 10 10:42:52 2015 UTC,"no one's responding because its such a weird question. I mean, logically a global setting means the device would have to sniff every web packet, regardless of the app running.  Plus, you could always check a device right? Can you see a setting?"
androiddev,3cr167,iamyounow,1 point,Fri Jul 10 02:11:32 2015 UTC,"MediaPlayer works with streaming videos from external resources, I had only used it for music but to my understanding it also works with videos."
androiddev,3cniq6,FlameDra,10,Thu Jul 9 07:41:53 2015 UTC,https://www.google.com/design/icons/ and http://android-developers.blogspot.de/2015/05/android-design-support-library.html
androiddev,3cniq6,Recovery868,2,Thu Jul 9 08:21:47 2015 UTC,https://github.com/google/material-design-icons contains the material icon assets at all the densities your heart could ever desire.
androiddev,3cniq6,psyphen,1 point,Thu Jul 9 17:46:48 2015 UTC,Afaik those are same as i linked
androiddev,3cniq6,Recovery868,2,Thu Jul 9 18:11:37 2015 UTC,"Yes, same icons just in a git repo. That's why I just decided to reply to your comment with it as an addendum :)."
androiddev,3cniq6,psyphen,8,Fri Jul 10 19:52:23 2015 UTC,https://materialdesignicons.com/
androiddev,3cniq6,zoltanf,7,Thu Jul 9 11:45:51 2015 UTC,https://github.com/wasabeef/awesome-android-ui
androiddev,3cniq6,stoyicker,1 point,Thu Jul 9 14:58:23 2015 UTC,Wow nice resource!
androiddev,3cniq6,rbarkhouse,4,Thu Jul 9 15:48:55 2015 UTC,http://romannurik.github.io/AndroidAssetStudio/
androiddev,3cniq6,Jawnnypoo,2,Thu Jul 9 13:09:30 2015 UTC,https://thenounproject.com
androiddev,3cniq6,chiuki,2,Thu Jul 9 17:11:58 2015 UTC,"We use a lot from here: http://www.flaticon.com/packs/  Also, always a great share: free stock photos (great for app launch marketing pieces) http://www.entrepreneur.com/article/238646"
androiddev,3cniq6,Innoppl,1 point,Fri Jul 10 15:25:56 2015 UTC,http://fontawesome.io/icons/
androiddev,3cniq6,nomadProgrammer,1 point,Thu Jul 9 12:28:50 2015 UTC,"I've been using this Android Studio/IntelliJ plugin for a few months now. It's super nice. Just search for ""Android Material Design Icon Generator"" under ""Plugins"" in Android Studio, and get this. All you have to do is right click on your res folder and go to New > Material Design Icon.  https://github.com/konifar/android-material-design-icon-generator-plugin"
androiddev,3cniq6,Shockwave_,1 point,Thu Jul 9 17:43:29 2015 UTC,"Does it let me create circular buttons which can still have text in the middle of it? My current application updates the text of a button when its pressed, will the functionality still work with this?"
androiddev,3cniq6,efalk,1 point,Thu Jul 9 22:09:52 2015 UTC,"Sometimes we hire graphic artists. A good artist is harder to find than a good developer, and when developers get together, the conversation often becomes ""No, I'm not telling you who did my icons -- he's mine."""
androiddev,3cniq6,HieronymusK,-10,Mon Jul 13 23:14:12 2015 UTC,http://www.photoshop.com/
androiddev,3coxc2,badlogicgames,1 point,Thu Jul 9 16:28:20 2015 UTC,"Nice release, keep up the good work. Using Eclipse so no comment on RoboVM Studio."
androiddev,3coxc2,bubbleguuum,1 point,Fri Jul 10 06:30:28 2015 UTC,"I'm working on a cross-platform app using RoboVM. Right now, I'm using IntelliJ for the core module, and Android studio 1.3 beta for the Android module. I haven't actually started the iOS version yet. Is RoboVM studio tracking the Android studio 1.3 changes in addition to the IntelliJ 15 ones?"
androiddev,3coxc2,SergeantFTC,2,Fri Jul 10 12:56:26 2015 UTC,Pretty much all changes to Android Studio are contained in the Android IDEA plugin. We are packaging the latest and greatest version of that plugin.  Alternatively you can install the RoboVM IDEA plugin in Android Studio. That also contains all functionality offered in RoboVM Studio.
androiddev,3co1lq,pandanomic,3,Thu Jul 9 12:02:24 2015 UTC,Anyone know when they'll release the source code for the 2015 IO app? They're way late this year.
androiddev,3co1lq,slaystation25,1 point,Thu Jul 9 21:43:29 2015 UTC,"I remember someone posted a screenshot of the project after decompiling the app. Wouldn't that be the fastest way to get your hands on it? I'm sure they haven't obfuscated the code, considering they're going to release it at some point anyway."
androiddev,3co1lq,pandanomic,1 point,Fri Jul 10 00:02:10 2015 UTC,"That's less than ideal though. No documentation/comments, no real information on architecture, no tests, no backend source, etc."
androiddev,3co1lq,sargunster,2,Fri Jul 10 08:23:34 2015 UTC,How would I go about using the new NavigationView in the design support library to make collapsible sections in my nav drawer?
androiddev,3co1lq,tanis7x,1 point,Thu Jul 9 15:38:02 2015 UTC,I haven't seen anything in NavigationView that would suggest that it supports collapsible sections- it seems to be pretty basic in that it displays grouped lists of items. Anything much more complicated than that and you will want to create your own layout to use in your drawer.
androiddev,3co1lq,sargunster,1 point,Thu Jul 9 17:00:09 2015 UTC,Can I do that by extending NavigationView or will I have to build my nav drawer from scratch?
androiddev,3co1lq,tanis7x,1 point,Thu Jul 9 17:01:31 2015 UTC,You'll want to build your own layout from scratch. NavigationView is mostly just a wrapper around a ListView that takes care of Material styling and inflating from a menu resource for you. There isn't a lot of customization to be had there.  You can find the (slightly out of date) NavigationView source here on GitHub.
androiddev,3co1lq,kaisims,1 point,Thu Jul 9 17:23:58 2015 UTC,"I hope it doesnt bother anyone if I ask my question again:   I just can't find the answer to my problem: I want to set a Custom Adapter to my custom Listview in a Fragment. neither setListAdapter or customListview.setAdapter works. The Error I get is: ""setAdapter in MaterialListView cannot be applied to ...CustomAdapter"" Some ideas?   I used MaterialList for the card: https://github.com/dexafree/MaterialList  For code see my comment"
androiddev,3co1lq,kaisims,1 point,Thu Jul 9 12:07:19 2015 UTC,"My Fragment:      public class HomeFragment3 extends android.support.v4.app.Fragment {   public HomeFragment3() {     // Required empty public constructor }  List<Brands> brandsList; String url = ""http://www.url.com""; MaterialListView mListView; private void requestData(String uri){     StringRequest request = new StringRequest(uri,              new Response.Listener<String>() {                 @Override                 public void onResponse(String response) {                     brandsList = ContentJsonParser.parseFeed(response);                     updateDisplay();                 }             },              new Response.ErrorListener() {                 @Override                 public void onErrorResponse(VolleyError ex){                     Toast.makeText(getActivity(),ex.getMessage(),Toast.LENGTH_LONG).show();                 }             }     );     RequestQueue queue = Volley.newRequestQueue(getActivity());     queue.add(request); }  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container,                          Bundle savedInstanceState) {     // Inflate the layout for this fragment     View view = inflater.inflate(R.layout.fragment_home_fragment3, container, false);      if (isOnline()) {         requestData(url);     } else {         Toast.makeText(getActivity(),getActivity().getString(R.string.common_google_play_services_network_error_text), Toast.LENGTH_SHORT).show();     }       mListView = (MaterialListView) view.findViewById(R.id.material_listview);     return view; }  public boolean isOnline() {     ConnectivityManager cm = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);     NetworkInfo netInfo = cm.getActiveNetworkInfo();     if (netInfo !=null && netInfo.isConnectedOrConnecting()) {         return true;     }     else return false; } protected void updateDisplay() {      BrandsAdapter adapter = new BrandsAdapter(getActivity(), R.layout.custom_card,brandsList);      mListView.setAdapter(adapter); } }       At the last part it says that it cannot be applied to my Brandsadapter Brandsadapter:   public class BrandsAdapter  extends ArrayAdapter<Brands> {  private Context context; private List<Brands> brandList;  public BrandsAdapter(Context context, int resource, List<Brands> objects) {     super(context, resource, objects);     this.context = context;     this.brandList = objects;  }  @Override public View getView(int position, View convertView, ViewGroup parent) {      LayoutInflater inflater =             (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);     View view = inflater.inflate(R.layout.custom_card, parent, false);      Brands mbrand = brandList.get(position);     TextView tv = (TextView) view.findViewById(R.id.category_text_view);     tv.setText(mbrand.getName());       return view; }  class FlowerAndView {     public Brands brand;     public View view;     public Bitmap bitmap; } }       Hope someone can help!"
androiddev,3co1lq,blueclawsoftware,2,Thu Jul 9 12:08:32 2015 UTC,Not that familiar with that library but it looks like they want you to use their adapter MaterialListAdapter. If you look at the source for MaterialView.setAdapterLine line 149. So I would try that. Or you don't want to do that you could create your own adapter that implements IMaterialListAdapter.
androiddev,3co1lq,kaisims,1 point,Thu Jul 9 12:18:48 2015 UTC,Hmm I dont really get how to get it working. It's not so documented as well :/
androiddev,3co1lq,blueclawsoftware,4,Thu Jul 9 13:13:32 2015 UTC,Honestly it doesn't seem like that great of a library to me and I'm not sure what it gets you over using Recycler or ListView with cards as your list row layouts.   But if you want to use the library you'd need to change BrandsAdapter to implement IMaterialListAdapter. Then implement the getCard(int position) method. In that method you'd get the item from your array list and create a card for it and return it. So that would basically replace your getView method. You can then implement the other methods as needed.
androiddev,3co1lq,kaisims,1 point,Thu Jul 9 13:35:19 2015 UTC,"I'm just testing out things. Is there a good documentation for other great methods, like Recycler or ListView?"
androiddev,3co1lq,guillaumeyp,1 point,Thu Jul 9 13:46:06 2015 UTC,"Add a static method newInstance to create this fragment (as per the doc) I would check connectivity in the onViewCreated method, as you may populate mListView which might be null (not initialized yet). Your BrandsAdapter constructor does not use the int resource, you can remove it. The problem: maybe MaterialList does not accept an ArrayAdapter. Try to turn your BrandsAdapter into an adapter which extends BaseAdapter"
androiddev,3co1lq,kaisims,1 point,Thu Jul 9 12:25:27 2015 UTC,"Thanks for your answer! But I want to have an Array, because I have a list that got created from a JSON. And the content should now be displayed in several Cards.   Or do you have a better idea?  EDIT: Oh and I check connectivity in onCreateView with if(isOnline())"
androiddev,3co1lq,guillaumeyp,2,Thu Jul 9 12:30:26 2015 UTC,Check the IMaterialListAdapter. It uses getCard function https://github.com/dexafree/MaterialList/blob/master/materialList/src/main/java/com/dexafree/materialList/controller/IMaterialListAdapter.java   Yes I see that you check connectivity in onCreateView. I'm telling you I would check it in onViewCreated.
androiddev,3co1lq,kaisims,1 point,Thu Jul 9 12:39:16 2015 UTC,I dont get it working :/ You mabye have an alternative librabry thats made for custom cards and not prebuild ones or can you tell me how to get the content of the JSON in there properly?
androiddev,3co1lq,ASIC_SP,1 point,Thu Jul 9 13:16:03 2015 UTC,"1) How to clear image on ImageView? am currently using setImageResource(Color.TRANSPARENT); which works fine wherever I have checked, but Android Studio warns me that drawable resource is expected. Using null gives error and using 0 doesn't work the same way as Color.TRANSPARENT    2) Do the links added within app (external credited links in about page, google plus and facebook pages, etc) also determine app rating?    3) I recorded app usage in Portrait mode and added it as app promo video - it works on desktop/youtube app, but half the screen is gone when directly played on play store - any suggestion other than work around suggested here"
androiddev,3co1lq,guillaumeyp,2,Thu Jul 9 12:26:20 2015 UTC,1) mImageView.setVisibility(View.INVISIBLE) ?  2) Don't think so.  3) Don't know.
androiddev,3co1lq,ASIC_SP,1 point,Thu Jul 9 12:29:46 2015 UTC,"thanks for the response  I do not want to make the imageview invisible, it is part of a grid of imageviews and upon user click, image would be set again"
androiddev,3co1lq,guillaumeyp,1 point,Thu Jul 9 12:33:55 2015 UTC,I'm sorry I don't get the behaviour you want to have. Do you want to remove this item from the listview ?
androiddev,3co1lq,ASIC_SP,1 point,Thu Jul 9 12:46:14 2015 UTC,"take tic tac toe 3x3 board for example - assume 9 imageviews to implement this, on click image appears indicating moves made.. what would undo require? removing the image but still clickable for further moves"
androiddev,3co1lq,blueclawsoftware,3,Thu Jul 9 12:56:04 2015 UTC,The response is correct setting it to View.INVISIBLE should make it not visible but hold it's place. You can then make it visible using View.VISIBLE. Using View.GONE would remove it from the layout.
androiddev,3co1lq,ASIC_SP,1 point,Thu Jul 9 13:25:59 2015 UTC,"would it respond to onClick and onLongClick? I can add View.VISIBLE always without having to check if it was made View.INVISIBLE or not..   it still sounds like a workaround similar to Color.TRANSPARENT.. and I have tested it as much as I could think of.. I was hoping that there was a proper way to do it..   thanks anyway, might be useful later"
androiddev,3co1lq,blueclawsoftware,1 point,Thu Jul 9 13:40:37 2015 UTC,Not sure about the onClickBehavior. I would think setting Color.Transparent is probably fine. You said null didn't work was that for setImageResource? I don't think null is a valid value for that method but you could set setImageDrawable(null) that should also work. But not really sure if it's any better or worse than setting it to transparent.
androiddev,3co1lq,ASIC_SP,1 point,Thu Jul 9 13:57:16 2015 UTC,"yeah, I think I will go with setting transparent for now (close to publishing my first app)..  but afterwards, will try out visibility and setImageDrawable(null)..  thanks again :)"
androiddev,3co1lq,blueclawsoftware,2,Thu Jul 9 14:16:34 2015 UTC,Cool good luck
androiddev,3co1lq,timusus,1 point,Thu Jul 9 14:31:45 2015 UTC,"To clear an image from your ImageView, use setImageDrawable(null) and setImageBitmap(null)"
androiddev,3co1lq,ASIC_SP,1 point,Thu Jul 9 21:11:49 2015 UTC,"thanks, as pointed in other comments, I would stick to Color.TRANSPARENT for now and try these post publication.."
androiddev,3co1lq,timusus,1 point,Fri Jul 10 01:36:27 2015 UTC,"OK, cool.  Also, just so you're aware, the reason setImageResource(null) doesn't work/throws a warning, is because setImageResource takes an integer value (the resource id of the color/drawable).. And you can't pass null for an integer!"
androiddev,3co1lq,ASIC_SP,1 point,Fri Jul 10 01:47:31 2015 UTC,I just went through this SO thread again  It says setImageDrawable(null); - I haven't paid attention correctly - all along I have been reading it as setImageResource(null); !!  thanks again for the clarification
androiddev,3co1lq,sagarsiddhpura,1 point,Fri Jul 10 02:25:09 2015 UTC,"FrameLayout (match parent, match parent)     LinearLayout (match parent, match parent)     RelativeLayout (match parent, match parent)         ImageView I have frame layout having two children - LinearLayout and Relative layout. Relative layout has image centered to it. I want to have its Linearlayout stretch till imageView starts i.e. LinearLayout should have height such that its bottom should be same as top of image view. How do I achieve this? There are other components and animations due to which I have to use framelayout and cannot have simple hierarchy with LinearLayout. Can you suggest solution to have this in xml or programatically. Currently I am trying to get  height and set height of linear layout in activity class but somehow between dp and px its not happening."
androiddev,3co1lq,guillaumeyp,2,Thu Jul 9 13:07:19 2015 UTC,Would be better understandable with two pictures: what you have/what you want
androiddev,3co1lq,supBot,1 point,Thu Jul 9 13:12:06 2015 UTC,"I added a new build type to the gradle, but no src folders were generated for it. I've tried restarting and everything. Am I missing something?"
androiddev,3co1lq,tanis7x,1 point,Thu Jul 9 14:24:10 2015 UTC,"Adding a new build type or product flavor doesn't cause the Gradle plugin to automatically generate a new folder for the new type/flavor- you need to create that folder yourself if you want to use it.  If you create the folder, the plugin will automatically use it though."
androiddev,3co1lq,canadianNonStudent,1 point,Thu Jul 9 16:58:58 2015 UTC,"Asking here for some professional advice.   Imagine you have been unemployed for a year because your industry has crashed. You have been learning Android because it allows you to gain experience and build a portfolio at the same time.  You started your job search and have an offer in front of you for a permanent position unrelated to Android, but not in your prior field. You are also starting to get interview requests for contract Android positions that last around 6 months. What would you do?"
androiddev,3co1lq,TheoremMetal,1 point,Thu Jul 9 15:51:45 2015 UTC,It would depend on how badly I need the money / position. Contacts will always be around whereas permanent positions seem harder to come by.  Hope that helps some.
androiddev,3co1lq,Asalas77,1 point,Thu Jul 9 17:33:59 2015 UTC,What is the screen size in dp? Is it the same for all screen resolutions?
androiddev,3co1lq,guillaumeyp,2,Thu Jul 9 17:14:19 2015 UTC,Can't answer better than: http://stackoverflow.com/questions/2025282/difference-between-px-dp-dip-and-sp-in-android
androiddev,3co1lq,chipuha,1 point,Thu Jul 9 17:39:44 2015 UTC,Would checking a server every 10 seconds in the background be too much of a strain on the system/battery?    I want to add a location alarm to my bus app.  The app will have to check the server every 10 seconds to see if the bus is at a certain location and then set off an alarm.
androiddev,3co1lq,if_man_is_5,3,Thu Jul 9 17:40:00 2015 UTC,"Do you own the server, or at least an intermediate server between your user and the ""where's the bus"" API?  The optimal thing seems to have your backend do the checking, and send a GCM to the phone when it's ready."
androiddev,3co1lq,chipuha,2,Thu Jul 9 22:00:39 2015 UTC,I don't own the server but I can set up an intermediate.    So I've never done anything with GCM.  Will it work even when the app is off? Will I have to set up user accounts?  I'll have to look into it.  Thanks!
androiddev,3co1lq,if_man_is_5,2,Thu Jul 9 23:40:26 2015 UTC,"It'll work when the app is not foregrounded, yep.    You don't necessarily need to set up user accounts.  Your app will need to request a token from GCM, and then you send that token to your backend.  Then when you want to send the push to the user, you use that token to direct the message back to that specific device.  So the way I'd do it is I'd have the app send its GCM token as part of the request to ""watch this bus.""  Then the backend persists that info, starts checking periodically, and then uses that token to send the notification back."
androiddev,3co1lq,chipuha,1 point,Fri Jul 10 01:29:21 2015 UTC,Awesome. Thanks for your help. This is better than I was hoping for. I think I'm  going to set up the backend with a mysql db to store the alarms and some php code to do the checking and communicating to the app.   Thanks again for your help!
androiddev,3co1lq,fodawim,2,Fri Jul 10 05:40:14 2015 UTC,"You could always do something like the following, IF you know the route the bus takes.  Do server requests every minute or so. Get the position, estimate the fastest potential time the bus will get in a minute and use that as a guide, restart this every minute."
androiddev,3co1lq,chipuha,1 point,Thu Jul 9 18:03:14 2015 UTC,Very true.  The closer the bus gets the more often it should check but if it is 30 minutes or so away it only needs to check again in 25 minutes or so.  Thanks!
androiddev,3co1lq,NotyoWookie,1 point,Thu Jul 9 18:07:53 2015 UTC,"I have two recyclerviews going on within the same activity layout (with fragments). One is for a navigation drawer, the other is going to be a card list on the main screen. Do I need two separate adapters to make this work?"
androiddev,3co1lq,kev2310,1 point,Thu Jul 9 18:16:35 2015 UTC,"In my application, if you rotate the phone whilst I am running a task such as signing in from a server, when that task comes back to the UI thread, there is a chance the calling activity or fragment is null, as it is inbetweenbeing destroyed and created.  What is the best way to handle this, I have noticed other applications don't seem to have this issue?"
androiddev,3co1lq,guillaumeyp,1 point,Thu Jul 9 18:23:35 2015 UTC,RxJava or EventBus
androiddev,3co1lq,koesie10,1 point,Fri Jul 10 07:42:15 2015 UTC,Does anyone know when the source code for the Android Design Support Library will be published?
androiddev,3co1lq,TheKeeperOfPie,2,Thu Jul 9 18:24:52 2015 UTC,Can't you already decompile it from inside Android Studio? Or maybe I'm remembering wrong.
androiddev,3co1lq,koesie10,1 point,Thu Jul 9 19:12:55 2015 UTC,"I can, but when doing that, some constant values (like View.INVISIBLE) are converted to their values (4) and I have to manually look for all of them."
androiddev,3co1lq,upstreamsalmon,1 point,Thu Jul 9 19:16:14 2015 UTC,Is there a way to create a build.gradle template in android studio?
androiddev,3co1lq,bart007345,1 point,Thu Jul 9 18:32:53 2015 UTC,if you create a new project with the wizard it creates one for you. You could copy it across.
androiddev,3co1lq,upstreamsalmon,1 point,Thu Jul 9 21:57:04 2015 UTC,Is there a way to change the gradle file it generates?  I want it to automatically import butterknife and retrofit
androiddev,3co1lq,bart007345,1 point,Thu Jul 9 22:02:39 2015 UTC,"I don't think so, but you could create a Live Template. You still need to go to the build.gradle file and activate it though."
androiddev,3co1lq,iamiamwhoami,1 point,Thu Jul 9 22:08:46 2015 UTC,"I'm going through the official tutorial right now. There's one part where I'm not really clear on how to setup the architecture for my program. Here they tell you to implement an onCreateOptionsMenu method. Should that just go in my launcher activity, or should I create a special activity for dealing with the menu?"
androiddev,3co1lq,I_cant_speel,1 point,Thu Jul 9 20:36:34 2015 UTC,What would be a good way to implement Reddit oAuth in an Android app without having any kind of server of my own?
androiddev,3co1lq,MouSha,1 point,Thu Jul 9 23:59:30 2015 UTC,"Hi guys ! I plan to follow the Udacity course for the Android development, and I have a project in my head to apply what I'll learn.  But I have a question about rights etc.. Exemple :  if I want to do something about pokémon, if I include Pokémon picture, i'll have to say the basic ""all rights reserved GameFreak blabla"" right? So I can't put some ads to get some cash, is that right? On the other hand, if I put only picture copyright free, I could monetize my app with some adds? If I can, how does the monetization works?   Sorry for these basic question !"
androiddev,3co1lq,supBot,0,Thu Jul 9 14:43:55 2015 UTC,"If I host a backend written in RoR on app engine, and that backend works on scraping sites and storing the data into a database, how would I query the data from my Android app?"
androiddev,3co1lq,bart007345,1 point,Thu Jul 9 14:23:15 2015 UTC,"so you would create a RESTful interface. Basically the app calls various urls which end up in RoR and then results are returned.  Google ""restful interface"" , there's plenty of examples out there."
androiddev,3co1lq,supBot,1 point,Thu Jul 9 15:45:09 2015 UTC,But what if I don't want those URLs to be accessed through browsers? I want them to be accessed through my app exclusively. I'm sorry if I'm asking a stupid question here.
androiddev,3co1lq,bart007345,1 point,Sat Jul 11 21:44:11 2015 UTC,"that's quite a common requirement. One way is basic auth, another is to use HMAC."
androiddev,3cpegv,efalk,2,Thu Jul 9 18:32:30 2015 UTC,"mark the mails spam  if enough developers do it, those mails will automatically go to spam folders for others"
androiddev,3cpegv,ASIC_SP,1 point,Fri Jul 10 03:41:53 2015 UTC,Power to gmail's AI bot
androiddev,3cpegv,avipars,1 point,Fri Jul 10 05:09:05 2015 UTC,"I would just set a filter, it tends to be more effective than marking as spam."
androiddev,3cpegv,avipars,1 point,Fri Jul 10 05:09:40 2015 UTC,"If Google cared, they would only show the support email address to logged-in users who already have downloaded the app.  Instead of just marking spam as being spam, report the spam, either manually or using SpamCop or something similar. Judging by the Play Store spam that I get, most of them use legitimate services like SES or SendGrid, rather than dodgy Russian or Chinese hosts, so there's a decent chance of getting their accounts terminated if enough people actually report it."
androiddev,3cokx1,spectrl,2,Thu Jul 9 14:56:31 2015 UTC,"Observables represent operations. They invert the callback model where you start a method and set a listener for results, to one where you request an operation as a first class object and operate on it. An observable is an operation wrapped inside an object, and that activates only after you start listening, which is done by means of subscribe(). Your subscription is the one implementing the callback, and it never leaves your business logic layer. Your views don't know about your presenters and never call them except for kickstarting lifecycle methods. This is a contrived example:  // View layer implements interface IMyView  @Override public Observable<OnClick> buttonClicks(){    return ViewObservable.clicks(button); // Helper method to wrap clicks into Observable }   // Business Logic layer  public int count = 0;  public void restart(){     getView().getButtonClicks().subscribe(onclick -> {count++} ); }   Advantages: getView() returns an interface IMyView, so you can DI a mock implementation and test your business layer with any manually rolled observable.  Disadvantages: Binding listeners like onClick, onEdit, onFocus, adapter clicks, etc. requires vast amounts of boilerplate code today.  Now let's extend it. Your business logic and repository layers also communicate based off implemented interfaces returning Observables --which means they're mockable-- so your Business Logic layer is plain java without Android dependencies and fully testable on desktop JVM."
androiddev,3cokx1,pakoito,1 point,Thu Jul 9 15:43:03 2015 UTC,"Cool, this is what I was doing already, just nice to get some validation!  My presentation layer is the only one with any Android dependencies, and the rest is in a separate (testable) plain java module.  However you did say    Your views don't know about your presenters and never call them except for lifecycle methods.     Surely this doesn't apply for standard click listeners (not using an observable) as the View - e.g. Frgament - would act as the listener, then call a method on the Presenter such as onClick()?"
androiddev,3cokx1,pakoito,1 point,Thu Jul 9 15:56:43 2015 UTC,"See the code example and the latest edit. Yes, your view still sets the android listener, but it wraps the behaviour into an observable which is later returned. It doesn't call the presenter at all, it just follows the observable contract. The clicks are not propagated until the presenter has requested the observable and subscribed to it.  The helper method looks like a more correct version of:  public static Observable<OnClick> clicks(View view) {  // Notice static, not part of view/fragment layer     return Observable.create(subsciptor ->         view.onClickListener(click -> {           if(subscriptor.isSubscribed()){               subscriptor.onNext(click);                             subscriptor.onCompleted();           }        });     }); }"
androiddev,3cokx1,pakoito,1 point,Thu Jul 9 16:00:47 2015 UTC,"Sure, I get that. I just meant that if we weren't using observables, then the ""traditional"" MVP approach is to have a method in the Presenter interface which the View would call every time there is a UI event, correct? i.e. We no longer have just lifecycle methods in the Presenter interface."
androiddev,3cokx1,pakoito,1 point,Thu Jul 9 16:05:57 2015 UTC,"The ones I saw before RxJava were sending the onClickListener or similar when requesting the view as a parameter, which were captured by the anon classes in view layer."
androiddev,3cokx1,bart007345,1 point,Thu Jul 9 16:07:10 2015 UTC,"Conceptually though, if I want to access my button clicks a few layers down in my business logic - i.e. I don't have a getView() method I can call from my Interactor/Use case class as it knows nothing about the View - then I should be adding in getButtonClicks() methods to every class along the chain until I get to my class that actually does something with the clicks?  My design provisionally looks a little something like this: (Click) View -> Presenter -> Interactor/Use Case -> ClickCounter (do something with click) -> Repository (optional)"
androiddev,3cokx1,bart007345,1 point,Thu Jul 9 16:14:42 2015 UTC,"Yup, that's how I handle my fragment presenters. Only activity presenters have direct access to DI, any child screen needs to ask papa for them."
androiddev,3cokx1,rubixhacker,1 point,Thu Jul 9 16:18:51 2015 UTC,"take RxJava out of the equation for a moment, basically you want a click event to go to some method in a class in the domain layer right?  If so, the onClickListener in your activity would call a presenter method, say button clicked, and the presenter would then call through to the domain layer method.  Would that work?"
androiddev,3cou0c,mikenomn,1 point,Thu Jul 9 16:04:12 2015 UTC,I've needed this info a few times in my career. Nice to have it available in such a readable format and offered (hopefully also maintained) by Google.
androiddev,3cou0c,AndrewNeo,1 point,Thu Jul 9 16:05:43 2015 UTC,Nice! I have a spreadsheet much like this for all the devices in our inventory so I could figure out where to do responsive layout widths at.
androiddev,3ckpma,QuestionsEverythang,18,Wed Jul 8 17:45:52 2015 UTC,"Still no support for optional dependencies makes consuming certain artifacts terrible. Wonder what else is broken in this release. They seem to favor adding new features over fixing what's broken. I get that that's more fun, but it makes Gradle a somewhat unreliable tool."
androiddev,3ckpma,badlogicgames,3,Wed Jul 8 18:55:05 2015 UTC,What's an example of an optional dependency? Do you mean including dependencies based on build type?
androiddev,3ckpma,wilterhai,6,Wed Jul 8 18:57:07 2015 UTC,"A library may require another library at compile time, but not at runtime. Common examples of this are logging frameworks or plugin systems. Gradle pulls in transitive dependencies that are marked as optional in their artifact descriptor. Maven would happily ignore thos, as per the descriptor."
androiddev,3ckpma,badlogicgames,5,Wed Jul 8 19:25:10 2015 UTC,Isn't that what the provided scope is for?
androiddev,3ckpma,crate_crow,2,Thu Jul 9 03:35:56 2015 UTC,"Kinda. A transitive dependency marked as provided must be available at runtime for the app to run.   A transitive dependency marked as optional can be entirely omitted at runtime and the app will still run. The author of the app/library that uses an optional dependency writes her code defensively so that an omitted optional dependency doesn't blow up at runtime. E.g. you can check for the existance of classes of the optional dependency at runtime via reflection. If it's there, you can execute code paths using that class. Otherwise you execute a different code path that doesn't use that class."
androiddev,3ckpma,badlogicgames,1 point,Thu Jul 9 09:42:58 2015 UTC,"I believe you can work around this some using exclude. For example:  compile('ch.acra:acra:4.5.0') {     exclude group: 'org.json', module: 'json' }"
androiddev,3ckpma,sniedzie,1 point,Thu Jul 9 23:11:16 2015 UTC,"I have had a variety of issues with provided scope. It's not well supported. I wish I had more references, but this one example: https://code.google.com/p/android/issues/detail?id=69481."
androiddev,3ckpma,sniedzie,1 point,Thu Jul 9 23:08:49 2015 UTC,"I'm bit confused. How is that possible that dependency is required only on compile time and not on runtime? Don't need at runtime = never used? If it's never used, then why it's added to the library at the first place?"
androiddev,3ckpma,thedroidproject,2,Thu Jul 9 09:01:30 2015 UTC,"When you are developing a plugin, you need the library for which the plugin is developed. But it should not be packaged with the plugin, as it will run along with the original program, where the library is available."
androiddev,3ckpma,Norsii,2,Thu Jul 9 11:20:12 2015 UTC,"Another case is platform APIs. For example, Fire OS has APIs available on the platform and provides stub APIs (just like on stock Android). You don't want to include these stub jars in your apk because the real implementation is provided at runtime."
androiddev,3ckpma,sniedzie,2,Thu Jul 9 23:04:37 2015 UTC,I don't understand. Do you want something like 'exclude' to remove transitive dependencies?
androiddev,3ckpma,pakoito,4,Wed Jul 8 18:57:32 2015 UTC,"I think he means official support for something the ""apt"" plugin. For example, Dagger, AutoValue, and other popular annotation processing libraries generate code at compile time. All the code to generate that code doesn't need to be included with the compiled APK."
androiddev,3ckpma,ZakTaccardi,1 point,Wed Jul 8 22:20:44 2015 UTC,"Oh yes, that. It's funny because even Google's new binding library requires it IIRC."
androiddev,3ckpma,pakoito,4,Wed Jul 8 22:34:26 2015 UTC,"The biggest feature (IMO) from 2.5 is continuous building is now a finalized feature. Not sure yet how to have Android Studio do this or if it'll have to be updated soon to take advantage of it. But you can still just run it from the command line.    Personally, I'm unable to upgrade right now due to this build error: Could not find method executeWithoutThrowingTaskFailure() for arguments [] on task ':linkSources'. But hopefully others can use 2.5 and benefit. EDIT: The bug seems to be related to the DBFlow library, in case anyone else uses it.    EDIT 2: Build setup mistake on my part. Gradle 2.5 builds fine with DBFlow."
androiddev,3ckpma,wilterhai,1 point,Wed Jul 8 17:48:57 2015 UTC,"Not sure if this will work but if you add ""--continuous"" to the command-line options in Build, Execution, Deployment -> Compiler, it should build continuously by default from Android Studio."
androiddev,3ckpma,wilterhai,2,Wed Jul 8 19:16:15 2015 UTC,"Or just ""-t"", if you don't want to type out all that.    EDIT: Doing that just has it build the app but never deploy it to your device because it's always waiting for changes to any files. Right now, I just leave a terminal window open that's continuously building and when I run the app from AS, build times are only a few seconds."
androiddev,3ckpma,wilterhai,1 point,Wed Jul 8 19:18:11 2015 UTC,How exactly do you do that? I am getting zipalign and resource errors from having them both building the project.
androiddev,3ckpma,pjmlp,2,Wed Jul 8 19:35:08 2015 UTC,"./gradlew -t assembleDebug or whatever ""assemble"" task you use."
androiddev,3clrcz,xiphirx,12,Wed Jul 8 22:07:48 2015 UTC,"Interesting! Will have to play with this later.  The IOException and JSONException should be caught and thrown as RuntimeException internally. This isn't the caller's responsibility and misconfiguration should rightfully crash the app.  Also, JSON as a config format... meh. Not a format for humans to be editing."
androiddev,3clrcz,JakeWharton,7,Wed Jul 8 23:11:31 2015 UTC,"I agree w Jake on RuntimeException. About JSON, why not to use Java instead? May be builders, etc."
androiddev,3clrcz,vladlichonos,3,Thu Jul 9 00:49:48 2015 UTC,I agree! Also... Builder pattern is much more readable and easier to use and will surely not be requiring JSONException catch. :)
androiddev,3clrcz,ac-opensource,1 point,Thu Jul 9 10:16:00 2015 UTC,Good feedback on exception handling.  We decided on using JSON as it's universal and we can use the frames and config for an iOS version as well. JSON also allows you to have a look at config and see whats going on. We wrote a python command line tool that actually generates the config files. So there is no need to modify it much manually. We'll be adding that to the reo. Looks like it just didn't make it in there.  (I'm with KeepSafe)
androiddev,3clrcz,rocketphil,1 point,Thu Jul 9 17:16:02 2015 UTC,"I like JSON. It is much better than xml and we don't have other well-supported formats anyway, so your selection is obvious."
androiddev,3clrcz,jackhexen,1 point,Thu Jul 9 18:17:54 2015 UTC,Great library. I think that if you try to do the extra step and follow the Builder pattern it would even greater. Can make a commit with such a use case if you want :)
androiddev,3clyvl,ClemmyN23,9,Wed Jul 8 23:06:34 2015 UTC,you are not loading everything on the page
androiddev,3clyvl,usadroiddev,5,Thu Jul 9 02:49:26 2015 UTC,"Yeah I noticed that on a larger screen. But on a 13"" screen that doesn't show up."
androiddev,3clyvl,LadyTesla,3,Thu Jul 9 06:27:11 2015 UTC,"Maybe some people felt like all that content on the screen was difficult to navigate, and ultimately less useful.  As a user of the play store, I am glad to not look at a wall of content when all I need is a simple 'install' link and a few screenshots."
androiddev,3clyvl,hannes2002,2,Wed Jul 8 23:27:51 2015 UTC,"But now I've got 2.5 screenshots with the bottoms cut off. Before I had 5 screenshots without scrolling. I realise that's just my personal setup, but I'd imagine it will be quite common on laptops (I'm on a MacBook 13"")"
androiddev,3clyvl,davebren,2,Wed Jul 8 23:46:07 2015 UTC,"You know, I'm perfectly okay with cleaning stuff out and making it simpler. But, maybe if they made everything/logos just a smudge bigger I'd be okay with the extra space."
androiddev,3clyvl,timusus,2,Thu Jul 9 01:58:46 2015 UTC,"Noticed the same on the new Google Play Music. Tons of whitespace, but most text labels are truncated."
androiddev,3clyvl,devsquid,1 point,Thu Jul 9 07:42:01 2015 UTC,How the use of space changed doesn't have anything to do with material design.
androiddev,3cjiov,lume_,2,Wed Jul 8 12:02:18 2015 UTC,"How can I 'save' my dependencies? I like to use Butterknife, so everytime I make a new project I have to go in to gradle and copy paste compile 'com.jakewharton:butterknife:7.0.1'. Is there no way to add this automatically to all future projects? Like the jar is loaded at default everytime I make a new project?"
androiddev,3cjiov,Asalas77,3,Thu Jul 9 01:13:42 2015 UTC,"Are there any general rules about using libraries vs google default implementations on stuff like FloatingActionButton, Snackbar etc? Such as this library vs google implementation.  Let's say I would like to use libraries such as this. I know this particular one says in decumentation that you can use external fabs, but this may not always be the case. So should I just stick to the defaults to avoid compatibility issues?  And follow up question, how do I use the google's fab? android.support.design.widget.FloatingActionButton is said to be the package here but it's not working."
androiddev,3cjiov,jp2014,8,Wed Jul 8 13:03:50 2015 UTC,"I like to use googles implementation wherever possible. If their implementation is missing something that I need and a third party library provides that, I fall back onto that library. In your case, the FloatingActoinButton isn't going to do everything that that library does, so if you need some of the additional functionality, use the library.  FloatingActionButton is a part of the Android Design Support library. You need to include it in your build.gradle file: compile 'com.android.support:design:22.2.0'"
androiddev,3cjiov,dercthulhu,1 point,Wed Jul 8 13:25:39 2015 UTC,"I agree. Often there will be 3rd Party Libraries for features/functionality that is not available from google or for all SDKs (e.g. ActionBarSherlock). If Google adds something to the support libs it makes sense to switch, as often the 3p author will stop maintaining his library (which is imho very reasonable)"
androiddev,3cjiov,fadelakin,3,Wed Jul 8 15:45:33 2015 UTC,I'm having difficulties using Retrofit with OAuth 2.0 apis. Someone suggested that I use a RequestInterceptor but that doesn't seem to work...or maybe I'm doing something wrong. I've tried using the signpost-retrofit extension but that just let to more confusion.   Any idea/help on using Retrofit with OAuth?
androiddev,3cjiov,bart007345,2,Wed Jul 8 15:42:44 2015 UTC,show us the stack trace and the code. You just want to add the token to the header right?
androiddev,3cjiov,guillaumeyp,2,Wed Jul 8 18:13:03 2015 UTC,"I have a navigation drawer. One item is ""your subscriptions"". If the user has 2 subs, then I want him to be able to choose the sub, then the subscription page appears. If he has only one, the subscription page should directly appear. Currently, I handle it in the home activity: I count the number of subs and I load SubscriptionFragment (if #subs=1) or ListSubscriptionsFragment (if #subs>=2). I don't think it is the best way to handle it. What do you think, is it possible to only use one fragment ?"
androiddev,3cjiov,jp2014,2,Wed Jul 8 12:33:52 2015 UTC,Why don't you just list the subscriptions in the navigation drawer and allow them to directly navigate to the subscription they select regardless of the count? I believe the YouTube app does this in the navigation drawer.
androiddev,3cjiov,guillaumeyp,2,Wed Jul 8 13:15:39 2015 UTC,"Could be a solution, but I don't think there is a proper way to programmatically populate the new NavigationView. Solutions I've found on stackoverflow use reflection, we probably have to wait to have this functionnality in the design support library."
androiddev,3cjiov,jp2014,2,Wed Jul 8 13:26:11 2015 UTC,I think the main purpose of NavigationView is design consistency and the ability to inflate from xml. You could just manually build out your navigation drawer (ideally matching the design you get for free with NavigationView).
androiddev,3cjiov,epicstar,2,Wed Jul 8 13:43:35 2015 UTC,"Anyone know how to get businesses on the Google Maps API like they do in the Google Maps app or like the javascript app? I've enabled Places API and followed the instructions here. All it shows are public attractions, universities, hospitals, interstate exits, and whatnot, but no stores or restaurants. Any ideas what I'm missing here, or is it just not possible right now?  EDIT: I just submitted a feature request to the bug tracker (crossing fingers they'll see it and explain something...)  https://code.google.com/p/gmaps-api-issues/issues/detail?id=8293&thanks=8293&ts=1436369549"
androiddev,3cjiov,bart007345,2,Wed Jul 8 14:41:02 2015 UTC,"if you look here, it says they are available and can be filtered for."
androiddev,3cjiov,epicstar,2,Wed Jul 8 18:12:05 2015 UTC,This doesn't tell me anything displaying the businesses on the map automatically though (like public attractions). It's just talking about what types of places can be returned and/or added if I search and/or add to the Places database.
androiddev,3cjiov,bart007345,2,Wed Jul 8 18:50:32 2015 UTC,"I don't know if there is an automatic way, perhaps someone can verify. If not, you can get the list of restaurants and create markers for them yourself."
androiddev,3cjiov,epicstar,2,Wed Jul 8 19:14:33 2015 UTC,"That's what I was thinking, but I could probably make a useful-ad scheme out of this.... (featured restaurants/stores of the week monetary thing)"
androiddev,3cjiov,bart007345,2,Wed Jul 8 19:49:12 2015 UTC,I expect 10% commission ;)
androiddev,3cjiov,kaisims,2,Wed Jul 8 19:57:55 2015 UTC,"I just can't find the answer to my problem: I want to set a Custom Adapter to my custom Listview in a Fragment. neither setListAdapter or customListview.setAdapter works. The Error I get is: ""setAdapter in MaterialListView cannot be applied to ...CustomAdapter"" Some ideas?"
androiddev,3cjiov,thepoosh,2,Wed Jul 8 15:03:12 2015 UTC,"can you please paste the code, it seems like one of your classes is not extending and implementing the correct things (probably the Adapter)"
androiddev,3cjiov,kaisims,1 point,Wed Jul 8 15:29:46 2015 UTC,"Oh yeah sure!  I used this library to create the cards: https://github.com/dexafree/MaterialList  My Fragment:  public class HomeFragment3 extends android.support.v4.app.Fragment {   public HomeFragment3() {     // Required empty public constructor }  List<Brands> brandsList; String url = ""http://www.url.com""; MaterialListView mListView; private void requestData(String uri){     StringRequest request = new StringRequest(uri,              new Response.Listener<String>() {                 @Override                 public void onResponse(String response) {                     brandsList = ContentJsonParser.parseFeed(response);                     updateDisplay();                 }             },              new Response.ErrorListener() {                 @Override                 public void onErrorResponse(VolleyError ex){                     Toast.makeText(getActivity(),ex.getMessage(),Toast.LENGTH_LONG).show();                 }             }     );     RequestQueue queue = Volley.newRequestQueue(getActivity());     queue.add(request); }  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container,                          Bundle savedInstanceState) {     // Inflate the layout for this fragment     View view = inflater.inflate(R.layout.fragment_home_fragment3, container, false);      if (isOnline()) {         requestData(url);     } else {         Toast.makeText(getActivity(),getActivity().getString(R.string.common_google_play_services_network_error_text), Toast.LENGTH_SHORT).show();     }       mListView = (MaterialListView) view.findViewById(R.id.material_listview);     return view; }  public boolean isOnline() {     ConnectivityManager cm = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);     NetworkInfo netInfo = cm.getActiveNetworkInfo();     if (netInfo !=null && netInfo.isConnectedOrConnecting()) {         return true;     }     else return false; } protected void updateDisplay() {      BrandsAdapter adapter = new BrandsAdapter(getActivity(), R.layout.custom_card,brandsList);      mListView.setAdapter(adapter); } }       At the last part it says that it cannot be applied to my Brandsadapter  Brandsadapter:   public class BrandsAdapter  extends ArrayAdapter<Brands> {  private Context context; private List<Brands> brandList;  public BrandsAdapter(Context context, int resource, List<Brands> objects) {     super(context, resource, objects);     this.context = context;     this.brandList = objects;  }  @Override public View getView(int position, View convertView, ViewGroup parent) {      LayoutInflater inflater =             (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);     View view = inflater.inflate(R.layout.custom_card, parent, false);      Brands mbrand = brandList.get(position);     TextView tv = (TextView) view.findViewById(R.id.category_text_view);     tv.setText(mbrand.getName());       return view; }  class FlowerAndView {     public Brands brand;     public View view;     public Bitmap bitmap; } }       Hope someone can help!"
androiddev,3cjiov,Spongetron300,2,Thu Jul 9 10:46:17 2015 UTC,I'm currently having a small issue with embedded YouTube videos being displayed in a webview. While on most devices the videos display just fine on phones like the Galaxy s2 it just display grey when I click play. I've tried using webchromeclient to support html 5 as well as adding hardware acceleration but still no luck.
androiddev,3cjiov,getonmalevel,1 point,Wed Jul 8 16:26:25 2015 UTC,"From everything I've heard, Samsung phones are nightmares. Good luck, especially on such an old phone"
androiddev,3cjiov,just_another_juan,2,Thu Jul 9 15:44:01 2015 UTC,"Anyone has any pointers on swapping fragments or alternatives? I'm working on a section of an app to display search results from an api that can either show a recycler view with a list of results or let the user switch to a Google map of these results.   I've got the holder activity that fetches the data and delegates the results to two fragments, one with the recycler view, and one with a MapView and some other overlay stuff ( I display the list by default which shows a spinner until data comes through and I can call a method in the list fragment with the data so it can update the adapter if you're wondering).   Each fragment has a call to  onCreateOptionsMenu to inflate a menu that has the action to switch to the other view, and I have a call to setHasOptionsMenu(true) on the constructor of each fragment so I can inflate the corresponding menus.   I replace fragments when I get the callback from the list or map fragments to switch view, and it works until I start testing screen rotation. After some logging it seems that the fragments are being recreated when the activity is destroyed and recreated on rotation, and I can also see the old instances of the fragment specific menus repeat as onCreateOptionsMenu gets called in the children again.   I've put the relevant code for the fragment transactions I'm doing in this gist. I'm not entirely sure this is the best way to do this, so any suggestions help greatly."
androiddev,3cjiov,TheKeeperOfPie,2,Wed Jul 8 17:03:13 2015 UTC,"What's the specific issue you're having? Because the Fragment recreation and menu inflation is normal behavior. If you want to only have the menu items for the foreground Fragment, call Menu.clear() inside onCreateOptionsMenu()."
androiddev,3cjiov,just_another_juan,2,Wed Jul 8 17:28:08 2015 UTC,"Clearing the menus doesn't neccessarily resolve the issue. To clarify, I think the menu glitch is a result of the weird fragment behavior happening. I suppose I'm asking if the way I'm managing the swapping makes sense or if there's something I'm missing.   I logged the count of the current fragments in the fragment manager and that's where I see the following:    Before any rotation  Swapping works great and the count of the fragments in the fragment manager says 1 after each replace. All good. After rotation  Swapping is funky, menu recreation brings menus from other fragment into new fragment, and the fragment count from the manager says it's holding 3 fragments.    So I'm not sure what I'm missing in the way I'm handling the replacing of the fragments in the Activity."
androiddev,3cjiov,TheKeeperOfPie,2,Wed Jul 8 17:42:20 2015 UTC,"Oh, I think I understand. When you rotate the screen, Android automatically recreates the Fragments for you. What I think is happening is that you're adding the Fragments to the container even after a rotation, causing multiple Fragments to appear."
androiddev,3cjiov,sdapt23,2,Wed Jul 8 18:30:10 2015 UTC,"Hi, I've been working on an app, still new at this and so forth. I have one main activity, and a bunch of fragments that each are their own section in the navigation drawer. One thing that's giving issues is trying to set the title of the toolbar from the fragments when they change. In the one fragment, I'm using ((MainActivity) getActivity()).getSupportActionBar().setTitle(""Fragment Title""); to set it in the onCreateView, and I can see in the debugger that its being set by looking at the toolbar afterwards at a breakpoint, but in the emulator it doesn't change anything at all. Any ideas what I'm doing wrong?"
androiddev,3cjiov,TheKeeperOfPie,2,Wed Jul 8 17:12:41 2015 UTC,"Are you using a Toolbar implementation or the deprecated ActionBar? If you're using a Toolbar, I'd try calling setTitle() on the toolbar instance itself, which you should have inflated."
androiddev,3cjiov,sdapt23,2,Wed Jul 8 17:30:11 2015 UTC,"I'm using a toolbar that's set to be the actionbar, I thought that was the way I'm supposed to do it.       Toolbar toolbar = (Toolbar) view.findViewById(R.id.my_toolbar);     ((MainActivity) getActivity()).setSupportActionBar(toolbar);     ((MainActivity) getActivity()).getSupportActionBar().setHomeButtonEnabled(true);     ((MainActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);     ((MainActivity) getActivity()).getSupportActionBar().setTitle(""Fragment Title"");     toolbar.setTitle(""Testing."");   Neither does anything. Is it the missing inflating the toolbar? I'm not sure how to do that one. MainActivity is an AppCompatActivity. I have the toolbar defined in xml files as well if that matters."
androiddev,3cjiov,just_another_juan,2,Wed Jul 8 17:52:28 2015 UTC,"Do you have a toolbar just in your activity layout, or also in your fragments?   You only need this in you MainActivity  Toolbar toolbar = (Toolbar) view.findViewById(R.id.my_toolbar); setSupportActionBar(toolbar);"
androiddev,3cjiov,sdapt23,2,Wed Jul 8 18:05:36 2015 UTC,"I took that out, and that seemed to fix the title not setting. I suppose it also needs to be changed in onResume to handle back presses and fragment changes then too. I have it in the fragments as well, but its exactly the same. I have it defined in a seperate file that I include in the activity, and in the fragments. The only part that is wierd about that I've noticed is the one fragment that adds a tab bar underneath it keeps the shadowing elevation on the toolbar."
androiddev,3cjiov,just_another_juan,2,Wed Jul 8 18:17:03 2015 UTC,You don't need to have the toolbar in your fragments. Toolbars are just views so you're including that view twice.   If you don't include it in your fragments it might solve some more issues. It looks like you have two overlapping toolbars and one of them is acting as an actionbar.
androiddev,3cjiov,sdapt23,2,Wed Jul 8 18:34:29 2015 UTC,"When I take it out of the fragment I'm testing on, the tabs it adds to the toolbar are gone, but I can still swipe to get from tab to tab. How can I add those tabs back in?"
androiddev,3cjiov,just_another_juan,2,Wed Jul 8 18:47:10 2015 UTC,"Check the layout of your activity. If you can still swipe, I'm gonna take a wild guess and say the tabs are still there, but they're being covered by the toolbar. In your main activity layout, make sure your fragment container starts after your toolbar ends. If the fragment container has a height of match_parent then it'll likely get covered by the toolbar.   I'd put the toolbar and the fragment container on a RelativeLayout and set the frag_container to be bellow the toolbar."
androiddev,3cjiov,sdapt23,2,Wed Jul 8 19:05:27 2015 UTC,"I checked, the main activity layout has the container afterwards, starts right after my </android.support.design.widget.AppBarLayout>. I changed the container as well to fill_parent instead of match_parent, still no tabs. Is it because they are in a viewpager? My simplified fragments layout is    <CoordinatorLayout> <AppbarLayout> <TabLayout> </TabLayout> </AppbarLayout> <ViewPager/>  </CoordinatorLayout>"
androiddev,3cjiov,just_another_juan,2,Wed Jul 8 19:20:09 2015 UTC,"I haven't messed much with the desing library yet. But I was looking at some docs to see what could be of help here. First try something before we get too complicated. The code you just posted is the layout inside your fragment yes or your main activity?   If it's your main activity we might have to discuss what exactly you're trying to do (might need to either way). Now if that code is from your individual fragment then this fragment has to have been placed in the activity where you put your toolbar, and that's view is the one that has to be set to something like this  <FrameLayout         android:layout_below=""@id/my_toolbar_id""         android:layout_width=""match_parent""         android:layout_height=""match_parent""         android:id=""@+id/results_fragment_container"">"
androiddev,3cjiov,Ryanm1114,2,Wed Jul 8 19:54:59 2015 UTC,What are some good links to learn about proper architecture patterns like mvc
androiddev,3cjiov,bart007345,1 point,Wed Jul 8 17:37:28 2015 UTC,On Android its better to use MVP
androiddev,3cjiov,AlexeyBrin,2,Wed Jul 8 18:16:07 2015 UTC,Is it possible to use a pseudonym in the Google Play store when you upload an Android application ?  I ask because for e.g. on Amazon you can use a pseudonym and publish your app.
androiddev,3cjiov,TheKeeperOfPie,2,Wed Jul 8 18:00:32 2015 UTC,"As long as you don't impersonate a well known company or individual, I think you can publish under any name you want."
androiddev,3cjiov,St33fo,2,Wed Jul 8 18:34:31 2015 UTC,"Hey guys, I'm working on an android application that parses through a csv file and gives data based on user input. Since the csv file has several hundred rows and columns (20,000 elements), the app will take a few seconds to respond. It's not much of a problem, but I'd like to lower that. I was just wondering if there are methods that allow for quickly parsing csvs. If it makes a difference, I used the Scanner class to grab my file instead of a BufferedReader."
androiddev,3cjiov,bart007345,3,Wed Jul 8 18:08:05 2015 UTC,"it sounds like you have data in a csv file and then you ask the user for query terms to search through the file with?  If so, you should consider putting the csv data into sqlite and then issuing a query.  I built an app recently with 20k records that can be searched through. It was surprisingly quick. You can add an index to fields you query against."
androiddev,3cjiov,St33fo,2,Wed Jul 8 18:18:40 2015 UTC,"That's pretty much it! Thanks! I'm new to this stuff, so I'll have to learn to use sqlite, but I'd definitely have to learn how to use it sooner or later."
androiddev,3cjiov,bart007345,2,Wed Jul 8 19:12:42 2015 UTC,"I had my first go at using Sqlite a few months ago. It wasn't easy but got there in the end. I ended up using Ormlite on top too.  Next time, I'm seriously considering using realm."
androiddev,3cjiov,St33fo,2,Wed Jul 8 19:16:42 2015 UTC,I just looked up what realm was and now I'm wondering whether I should learn sqlite first then move on to realm. Do you think Sqlite is still a good thing to know?
androiddev,3cjiov,bart007345,2,Wed Jul 8 19:25:41 2015 UTC,"sqlite is very common and worth knowing. I don't think you can call yourself a senior android developer without it somewhere in your experience.  However, realm looks so frickin' easy!"
androiddev,3cjiov,St33fo,2,Wed Jul 8 19:37:08 2015 UTC,"Yeah, I saw some of the code for it and  I was pretty blown away at how direct everything looks. Oh well, it makes sense learning the good ol stuff first."
androiddev,3cjiov,MatticusF1nch,2,Wed Jul 8 19:38:55 2015 UTC,"I'm really having a hard time trying to change the color of the text in my tabs. Everything else is working fine, but I changed the theme of my app to be black. Now the black text on top of my black tabs renders them invisible.   I've tried calling all of the variants of setTabTextColor()) but nothing changes when I start the app back up. The default text color in my app's style is white, and that isn't being applied to the tab layout.  Also, in a ListFragment, is there some way to have a certain list item ""selected""? When a list item is clicked, I want a button within that list item's layout to become visible. When a different list item is clicked, I want the previous list item's button to disappear, and the newer list item's button to appear. Basically, I want the button to only show up on the most recently clicked list item."
androiddev,3cjiov,JustinTheeDude,2,Wed Jul 8 18:08:38 2015 UTC,"So Im making an app for my friends record label and I want to display the current news and releases, is there anyway I can display any posts he makes on facebook to the app or is there a different way of doing this?"
androiddev,3cjiov,TheKeeperOfPie,1 point,Wed Jul 8 20:14:00 2015 UTC,"You can use the Facebook API to get the posts from his page, but it's quite involved, depending on your experience level."
androiddev,3cjiov,aurae_ger,2,Thu Jul 9 03:42:40 2015 UTC,"I've been looking into creating custom Live Templates recently, which has boosted my productivity immensely. However, I'm struggling to get my custom iteration template for SimpleArrayMap to work. When you want to iterate over an array, you just go:  String[] vals = ...; vals.fori >ENTER for (int i = 0; i < vals.length; ...)   I can't get this ""append style"" to work with SimpleArrayMap. Has anyone managed to do that with a custom Live Template? What kind of context-sensitive info do I have to give to my template to have it recognize certain types of variables that the template would work on?"
androiddev,3cjiov,spectrl,2,Wed Jul 8 21:42:37 2015 UTC,"Seeing as MVP and clean architecture are all the rage at the minute I thought I'd see what all the fuss was about and try it out in my new project.  I've pretty much got my head around the MVP part, and am starting to add Interactors/Use Case classes for the domain layer, but I'm going round in circles finding the best way to pass through UI events...  I have a click observable - from RxAndroid - on a particular android view in my fragment. How do people get these events to propagate down to the business logic?  Assuming the class that ultimately needs to get hold of the click observable is a class that lives in the domain layer (no android dependencies) - that simply counts how many times you've clicked the view - should I be passing the click observable directly from my view to my presenter, then to my use case, and finally to my counter class? This would require a method/setter at every layer, which passes through the observable as an argument?! I'm using Dagger 2 if that's helpful, but I'm pretty sure it's not because my instances are all constructed by the time I need to start listening to click events from my view...  The other thing is that directly calling a method on my presenter that sets the observable also seems weird... Should the presenter request the observable from the view? Or should the view ""set"" the observable in the presenter?  Thanks!"
androiddev,3cjiov,morgazmo99,2,Wed Jul 8 22:07:17 2015 UTC,"I'm hoping to make a rather complicated CustomSeekBar. The tutorials I have found aren't helping me all that much and this is new ground for me.  I'm aiming for something that looks like this:  I need all the getting, setting, listening and updating code to be contained in my CustomSeekBar class. textViewA and textViewB should be updated automatically by the overridden onProgressChanged method, although each will also need an OnClickListener to add extra data to those views.. I would imagine I'm close, but I don't know exactly how to encapsulate the views into my CustomSeekBar class. I'm getting NPEs when trying to set the TextViews.  I'm really just looking for help in how to correctly update the TextViews from OnProgressChanged in my custom class. Code is as follows:  My XML so far works looks about right..  <RelativeLayout              xmlns:android=""http://schemas.android.com/apk/res/android""             xmlns:tools=""http://schemas.android.com/tools""             android:layout_width=""match_parent""             android:layout_height=""match_parent""             tools:context="".MainActivity"" >  <TextView      android:id=""@+id/textViewTitle""     android:layout_width=""wrap_content""     android:layout_height=""wrap_content""     android:text=""Center of Gravity""     android:layout_alignParentStart=""true""     android:layout_alignParentLeft=""true""     android:layout_marginStart=""@dimen/seekbar_margin""     android:layout_marginLeft=""@dimen/seekbar_margin""     android:layout_marginTop=""14dp"" />  <com.sample.myapp.CustomSeekBar      android:id=""@+id/customseekBar""     android:layout_width=""fill_parent""     android:layout_height=""wrap_content""     android:layout_below=""@+id/textViewTitle""     android:progressDrawable=""@android:color/transparent""     android:max=""100""     android:progress=""50""/>  <TextView      android:id=""@+id/textViewA""     android:layout_width=""wrap_content""     android:layout_height=""wrap_content""     android:text=""A""     android:layout_alignParentStart=""true""     android:layout_alignParentLeft=""true""     android:layout_below=""@+id/customseekBar""     android:layout_marginStart=""@dimen/seekbar_margin""     android:layout_marginLeft=""@dimen/seekbar_margin""     android:layout_marginTop=""@dimen/seekbar_text_padding""     android:clickable=""true""/>  <TextView      android:id=""@+id/textViewB""     android:layout_width=""wrap_content""     android:layout_height=""wrap_content""     android:text=""B""     android:layout_alignParentEnd=""true""     android:layout_alignParentRight=""true""     android:layout_below=""@+id/customseekBar""     android:layout_marginEnd=""@dimen/seekbar_margin""     android:layout_marginRight=""@dimen/seekbar_margin""     android:layout_marginTop=""@dimen/seekbar_text_padding""     android:clickable=""true""/>  </RelativeLayout>   And I do have a CustomSeekBar class which is getting there:  package com.sample.myapp;  import android.content.Context; import android.graphics.Canvas; import android.graphics.Color; import android.graphics.Paint; import android.graphics.Rect; import android.util.AttributeSet; import android.widget.SeekBar;  public class CustomSeekBar extends SeekBar implements SeekBar.OnSeekBarChangeListener {  private Rect rect; private Paint paint; private int seekbar_height, textViewAPercentage, textViewBPercentage; private String textViewTitleText, textViewAText, textViewBText;;  private TextView textViewA, textViewB, textViewTitle;  public CustomSeekBar(Context context) {      super(context);     setOnSeekBarChangeListener(this);  }  public CustomSeekBar(Context context, AttributeSet attrs) {      super(context, attrs);     setOnSeekBarChangeListener(this);     rect = new Rect();     paint = new Paint();     seekbar_height = 6;  }  public CustomSeekBar(Context context, AttributeSet attrs, int defStyle) {      super(context, attrs, defStyle);     setOnSeekBarChangeListener(this);  }  public void setTextViewTitleText(String string) {     this.textViewTitleText = string; }  public String getTextA() {     return textViewAText; }  public void setTextA(String string) {     this.textViewAText = string; }  public String getTextB() {     return textViewBText; }  public void setTextB(String string) {     this.textViewBText = string; }  @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {      int seekBarMax = seekBar.getMax();     textViewAPercentage = (seekBarMax / progress) * 100;     textViewBPercentage = ((seekBarMax - progress) / seekBarMax) * 100;      String A, B;      if (textViewAText != null) A = String.valueOf(textViewAPercentage) + ""\n"" + textViewAText;     else A = String.valueOf(textViewAPercentage);      if (textViewBText != null) B = String.valueOf(textViewBPercentage) + ""\n"" + textViewBText;     else B = String.valueOf(textViewBPercentage);      textViewA = (TextView) findViewById(R.id.textViewA);     textViewB = (TextView) findViewById(R.id.textViewB);      textViewA.setText(A);     textViewB.setText(B);  }  @Override public void onStartTrackingTouch(SeekBar seekBar) {  }  @Override public void onStopTrackingTouch(SeekBar seekBar) {  }  @Override protected synchronized void onDraw(Canvas canvas) {      rect.set(0 + getThumbOffset(), (getHeight() / 2) - (seekbar_height / 2), getWidth() - getThumbOffset(), (getHeight() / 2) + (seekbar_height / 2));     paint.setColor(Color.GRAY);     canvas.drawRect(rect, paint);     if (this.getProgress() > 50) {          rect.set(getWidth() / 2,  (getHeight() / 2) - (seekbar_height / 2), getWidth() / 2 + (getWidth() / 100) * (getProgress() - 50), getHeight() / 2 + seekbar_height / 2));          paint.setColor(Color.CYAN);         canvas.drawRect(rect, paint);      }      if (this.getProgress() < 50) {          rect.set(getWidth() / 2 - ((getWidth() / 100) * (50 - getProgress())), (getHeight() / 2) - (seekbar_height / 2), getWidth() / 2, getHeight() / 2 + (seekbar_height / 2));          paint.setColor(Color.CYAN);         canvas.drawRect(rect, paint);      }      super.onDraw(canvas);  }  }"
androiddev,3cjiov,cardboardtaco12,2,Wed Jul 8 22:39:19 2015 UTC,Could someone tell me why I'm getting this error when I try to install Android Studio on my Mac? What do I need to do to fix it? Thanks in advance.   Android Studio Install Error: Imgur
androiddev,3cjiov,supBot,2,Thu Jul 9 03:08:00 2015 UTC,"I added a new build type to the gradle, but no src folders were generated for it. I've tried restarting and everything. Am I missing something?"
androiddev,3cjiov,supBot,1 point,Thu Jul 9 08:03:48 2015 UTC,"If I host a backend written in RoR on app engine, and that backend works on scraping sites and storing the data into a database, how would I query the data from my Android app?"
androiddev,3cj1sn,Ziem,13,Wed Jul 8 08:13:04 2015 UTC,"ProcessPhoenix.triggerRebirth(context);   Damn, he definitely knows how to come up with the coolest class/method names ever."
androiddev,3cj1sn,lordoftherings911,3,Wed Jul 8 16:49:50 2015 UTC,"Do you have some IFTT or script set up watching for new libraries or blog posts from people? Genuinely curious, because you always seem to post them immediately after"
androiddev,3cj1sn,pandanomic,1 point,Wed Jul 8 09:02:55 2015 UTC,Noo ;). I added most valuable blogs to feedly and starred people like Jake Wharton on GitHub.   JakeWharton created repository JakeWharton/ProcessPhoenix 4 hours ago
androiddev,3cj1sn,pandanomic,1 point,Wed Jul 8 09:30:32 2015 UTC,Makes sense. Thanks for your contributions! Your posts are almost always interesting and improve the quality of the sub :)
androiddev,3cj1sn,bmwracer0,0,Wed Jul 8 09:32:30 2015 UTC,Thanks!
androiddev,3cj1sn,JakeWharton,1 point,Wed Jul 8 09:51:25 2015 UTC,"This has been in a gist and in u2020 for a while, I guess it's a library now too!"
androiddev,3cj1sn,aerodynamix,2,Wed Jul 8 12:36:38 2015 UTC,"As a library, it can automatically add the manifest entry for you! I got sick of copy/pasting the class and forgetting the entry in the manifest. No longer!"
androiddev,3cj1sn,JakeWharton,1 point,Wed Jul 8 15:20:16 2015 UTC,Any reason for min sdk being 15 instead of 14?
androiddev,3cj1sn,aerodynamix,1 point,Thu Jul 9 00:41:27 2015 UTC,"There are no devices on 14. And the min is 3, no?"
androiddev,3cj1sn,JakeWharton,1 point,Thu Jul 9 00:55:29 2015 UTC,I'm getting an error in Android Studio. https://github.com/JakeWharton/ProcessPhoenix/blob/master/build.gradle Doesn't this set it to 15?
androiddev,3cj1sn,touchwiz,2,Thu Jul 9 00:59:15 2015 UTC,"Ah, I meant to set that to 3 when I moved it. Will change. What's your min?  Ain't nobody got time for pre-15!"
androiddev,3cj1sn,bart007345,1 point,Thu Jul 9 01:26:37 2015 UTC,Check https://android-arsenal.com/ and their rss feed
androiddev,3cj1sn,RattlesnakeSpeedway,3,Wed Jul 8 16:52:46 2015 UTC,Can someone do an eli5 for me?
androiddev,3cj1sn,bart007345,1 point,Wed Jul 8 14:08:42 2015 UTC,"It basically kills your app and then restarts it completely 'fresh', so absolutely everything is recreated as if you're launching it from scratch"
androiddev,3cj1sn,mikenomn,1 point,Wed Jul 8 16:41:50 2015 UTC,thus avoiding a redeploy? How do I trigger it?
androiddev,3cj1sn,GoldDog,2,Wed Jul 8 16:55:17 2015 UTC,"Assuming by ""redeploy"" you mean re-install, not really, though that's one way to accomplish the same behavior. It's essentially behaving like the following only doing so from your app's code:   adb shell am force-stop <pkg> && adb shell am start -n <full component name>   So you'd likely have a debug menu or similar that triggers the use of this lib."
androiddev,3cj1sn,adi1133,2,Wed Jul 8 17:19:31 2015 UTC,Not really. It's primary use is for switching app settings like if you have different setups for production and staging (different endpoints and logging settings etc) then you can use this library to restart the app when you switch between them.
androiddev,3cj1sn,mikenomn,2,Wed Jul 8 17:21:04 2015 UTC,"Description:   Process Phoenix facilitates restarting your application process.  This should only be used for things like fundamental state changes in your debug builds (e.g., changing from staging to production)."
androiddev,3cj1sn,madisp,2,Wed Jul 8 08:13:32 2015 UTC,Will this work in future android versions?  Is there a risk of corrupting android Preferences ?
androiddev,3cj1sn,mikenomn,2,Wed Jul 8 10:54:41 2015 UTC,"Will this work in future android versions?   No idea. We'll know when those future versions arrive. There's nothing preventing the APIs used here from being limited or system permission protected at some point.   Is there a risk of corrupting android Preferences ?   If the timing is right, sure; this kills your process completely and ungracefully. Though being that this should never make its way into your production code, I'm wondering why that should matter."
androiddev,3cj1sn,Cg2XHPxz,1 point,Wed Jul 8 17:14:49 2015 UTC,"and do consider that in production the user can ""kill -9"" your app at any point in time, so it's not like this is a really uncommon scenario..."
androiddev,3cj1sn,jackhexen,1 point,Wed Jul 8 22:40:49 2015 UTC,"Yes, but in that case the user is warned that force closing your app could cause unexpected behavior. At least they're choosing to potentially derail a disk write; doing it yourself is just silly."
androiddev,3cke4u,Crlan,7,Wed Jul 8 16:25:29 2015 UTC,"If the app is simple (and not a game) do not build it in unity. That's definitely overkill. Just learn Android instead. Since Android is Java, you will need to learn Java first.   I assume you know this but some new programmers get confused: Java and JavaScript have nothing in common despite the similar names.  Good luck!"
androiddev,3cke4u,will_r3ddit_4_food,3,Wed Jul 8 17:41:43 2015 UTC,"Thank you! I was thinking just building it the 'regular way' seemed like a better approach. I am aware that the two are different, but I still always manage to forget which is which! Thanks again, this definitely helps! :)"
androiddev,3cke4u,-Xerra-,2,Wed Jul 8 18:07:16 2015 UTC,"Seconding what will_re3ddit_4_food said, Unity is best for games. I would recommend you Android Studio. Many developers use this, and it has a GUI linked with XML (language used for the layout) so you can really see what code do what on your preview screen (Studio has built-in preview screen to view layouts).   Hope this helps!"
androiddev,3cke4u,qaximor,1 point,Thu Jul 9 02:04:50 2015 UTC,I've started using a Treehouse tutorial and working in Android Studio. I finally feel like I might find some traction. Thank you!!
androiddev,3cke4u,qaximor,2,Sat Jul 11 02:21:27 2015 UTC,"If you are planning to make it a website, I'd suggest creating a website with an API, and since your husband knows python he can do that using Django framework, and then you can use the API with the app."
androiddev,3chmsk,tomjb_,22,Tue Jul 7 23:51:39 2015 UTC,"Unfortunately, Kotlin Gradle Plugin does not support incremental builds yet, so every change of the source code requires full re-compilation, I spend about 20 minutes per hour on waiting for compilation https://youtrack.jetbrains.com/issue/KT-6246.  Also, Kotlin Plugin for IntelliJ IDEA is slow and causes freezes of IDE pretty frequently.  I hope JetBrains will fix both issues before v1.0.0."
androiddev,3chmsk,artem_zin,4,Wed Jul 8 03:19:11 2015 UTC,"Thanks for the link.  Since JetBrains is getting ready to use Kotlin on IntelliJ itself (and preparing to bundle the Kotlin plugin with IntelliJ 15), I'm hoping it won't take long to resolve these issues."
androiddev,3chmsk,TweetsInCommentsBot,2,Wed Jul 8 04:18:28 2015 UTC,@intelliyole   2015-06-29 16:16 UTC  Just pushed a change to bundle the Kotlin plugin with the next IntelliJ 15 EAP and enable the use of Kotlin everywhere in IntelliJ codebase.     This message was created by a bot  [Contact creator][Source code]
androiddev,3chmsk,stackinpointers,2,Wed Jul 8 04:18:33 2015 UTC,20 minutes per hour on waiting for compilation   Is it really worth it to use Kotlin regularly given that you're wasting that much time? Seems incredibly inefficient.
androiddev,3chmsk,ScarletSickle,9,Wed Jul 8 11:56:18 2015 UTC,I didn't write this article.  I just thought it was a nice overview of a language people may end up using (or may already be using) for Android development.
androiddev,3chmsk,MastodonFan99,3,Tue Jul 7 23:54:27 2015 UTC,Looks pretty neat. Might give it a try sometime. Thanks for the post
androiddev,3chmsk,mike_hearn,15,Wed Jul 8 02:17:49 2015 UTC,"""Why Kotlin is good"" -Brought to you by: A person who has never coded in it.  ""language features matter little compared to ecosystem issues"" -Let me tell you about the Kotlin ecosystem issues: There are tons. Just to start, Kotlin is undergoing semi-rapid development and is always being updated with language-level changes to syntax and basic type functionality (That's bad for production environments, like mine, where we use Kotlin every day, sadly).  Kotlin has impactful, IDE-breaking errors and compatibility issues.  IntelliJ is updated more frequently than Kotlin, which isn't too much of an issue.  Certain Kotlin versions work better with certain IntelliJ versions, etc.  Kotlin's build times are very slow.  ""Kotlin comes from industry, not academia. It solves problems faced by working programmers today."" -Problems like, removing the standard for loop, so in those cases where a for-each loop doesn't cut it you've got to manage index yourself, which adds a couple lines, but it's annoying. The standard for loop solved a common (minor) problem... why revert it?  ""As an example, the type system helps you avoid null pointer exceptions."" -Which sounds great in theory, but in practice it simply adds alot of tedium.    ""If you’re working on Android, you will soon be in good company."" -""Soon"" Sure.  The support out there for Kotlin is dismal, simply because not alot of programmers end up sticking with it.  Right now it's frustrating to use, but at the same time it's cool. I'd honestly recommend trying it out and getting to know it. But it's not all ponies and rainbows. KotlinFrontEndException, anyone?"
androiddev,3chmsk,JakeWharton,11,Wed Jul 8 03:52:41 2015 UTC,"Brought to you by: A person who has never coded in it.   I've been using it regularly for the past 9 months or so.   Kotlin is undergoing semi-rapid development and is always being updated with language-level changes to syntax and basic type functionality   That is noted in the article.   Which sounds great in theory, but in practice it simply adds alot of tedium   It used to. Before they introduced platform types, nullability was painful when calling to/from Java, and I would have agreed with you. Since then the pain went away, though perhaps too much in the opposite direction. I think their plan to bring back nullability for Java calls looks sound and I'm hopeful that it will be the sweetest spot tried so far.   I'd honestly recommend trying it out and getting to know it. But it's not all ponies and rainbows. KotlinFrontEndException, anyone?   I haven't seen that exception, but I think you are vigorously agreeing with my article without realising it :) Maturity issues and bugs are the number one issue I listed. But I've seen things get better at a rapid pace and the bugs I report tend to get fixed fairly fast. So I'm hopeful they will conquer this."
androiddev,3chmsk,gerusz,28,Wed Jul 8 08:55:04 2015 UTC,"While Kotlin's not perfect, your view is incorrectly skewed too far.   That's bad for production environments, like mine, where we use Kotlin every day, sadly   Sounds like you have a tooling problem. It's not like these are snapshot versions. They're proper releases that just so happen to start with 0. If you are updating your IDE and updating Kotlin without thinking about the implications then that's 100% on you.   so in those cases where a for-each loop doesn't cut it you've got to manage index yourself   Java:  for (int i = 0, size = list.size(); i < size; i++)   Kotlin:  for (i in 0..list.size())   More examples   Which sounds great in theory, but in practice it simply adds alot of tedium.   This is subjective to your usage, obviously. Even if it isn't, pushing the most annoying runtime error to compile time is worth the cost.  In the non-Android Kotlin offerings I've done this hasn't been a problem once. In Android it's been a blessing because the type system is now carrying more information than it otherwise would that saves me from having crashes.   The support out there for Kotlin is dismal, simply because not alot of programmers end up sticking with it   [citation needed]"
androiddev,3chmsk,JakeWharton,1 point,Wed Jul 8 04:45:21 2015 UTC,"Unfortunately, iterating through the indices isn't the only use-case of the standard for. Ex.:  for(int i=0; i<list.size();) { //Last section intentionally left blank   if(someFunctionWithBoolResult(list[i])) {     doSomeProcessingOn(list[i]);     list.remove(i);   }   else {     i++;   } }   The standard  for(A; B; C) {D;}   is basically syntactic sugar for doing the following in a simpler way:  {   A;   while(B) {     D;     C;   } }   which is why it can do so much. And because it's essentially syntactic sugar, it could be put back into the language easily, it could be taken care of by the preprocessor."
androiddev,3chmsk,Zhuinden,4,Wed Jul 8 15:13:31 2015 UTC,That's far from idiomatic Kotlin which would favor a functional approach. You should probably just be using an Iterator there in Java anyway.
androiddev,3chmsk,JakeWharton,4,Wed Jul 8 15:44:47 2015 UTC,"As the article states, Kotlin is pre-1.0 right now, so it's not yet stable.  What's wrong with Kotlin's for loops?  for (i in 0..9) {     println(""We're at number $i."") }"
androiddev,3chmsk,sli,1 point,Wed Jul 8 04:24:45 2015 UTC,How would you write the following in Kotlin?  for(int i = 0; i < list.size(); i++) {        Item item = list.get(i);        if(testPredicate(item) == true) {              list.remove(i--);        } }
androiddev,3chmsk,cbruegg,3,Wed Jul 8 20:02:53 2015 UTC,list.filter {testPredicate(it)}
androiddev,3chmsk,pjmlp,1 point,Wed Jul 8 22:18:44 2015 UTC,"That doesn't mutate the list. Using indexed loops here is wrong anyway. Use an iterator and its remove method.  In Kotlin you'd filter, each, collect, and removeAll. Functional and only mutates the list once.  edit: you can also use a method reference in your example filter(::someFunc)."
androiddev,3chmsk,kaylebot_br,1 point,Thu Jul 9 02:10:39 2015 UTC,"val httpsLinks = links filter { it.startsWith(""https://"") }"
androiddev,3chmsk,entropio,1 point,Wed Jul 8 22:35:50 2015 UTC,"Hell, some languages make certain loops easier for the programmer. Rust has an infinite loop syntax.  loop {     // stuff }"
androiddev,3chmsk,Zhuinden,14,Wed Jul 8 05:03:20 2015 UTC,Good thing you can just implement that syntactic sugar with Kotlin:  fun loop(f: (() -> Unit)): Unit {   while (true) {     f()   }  }   Although I don't see an advantage over while (true).
androiddev,3chmsk,sargunster,2,Wed Jul 8 08:06:57 2015 UTC,"I kind of like Kotlin,  but the syntax break@label and similar just put me off.  Also the bugs with regard to Android tooling and annotation processors are also another pain point.   If they really want to adopted on Android,  there shouldn't be yet another layer to debug or crunches to live by.  Although being forced to use Java 6 when the Java world is getting the first Java 9 experimental releases is also not that fun."
androiddev,3chmsk,Zhuinden,1 point,Wed Jul 8 06:44:56 2015 UTC,"Every week there's a topic here about Kotlin. I'm just curious why people has this urge of having everyone using it, can't we just use what we want and be happy with it?"
androiddev,3chmsk,sargunster,3,Wed Jul 8 17:16:53 2015 UTC,"Android is using Java 7 that is outdated by 5 years, and even Java 8 isn't as good as most similar languages. Sure Android development isn't about Java alone but I would prefer to work in more modern environment. So I have high hopes for Kotlin 1.0 that should be available by default in Android Studio in 4th quarter."
androiddev,3chmsk,entropio,1 point,Wed Jul 8 18:41:09 2015 UTC,"I actually don't know what people dislike about Java so much. Generics are extremely powerful, and strict typing prevents a bunch of silly errors at compile time rather than just getting undefined is not a function like you would in Javascript. The strictness leads to better error checking and less ""magic"" that no one will understand after a week."
androiddev,3chmsk,burntcookie90,2,Wed Jul 8 20:06:07 2015 UTC,You can have generics and static typing in a more modern language. See: Kotlin.
androiddev,3chmsk,mike_hearn,0,Thu Jul 9 14:32:40 2015 UTC,"Just because it's more modern doesn't mean it's necessarily better, though. Sure, it has some extra functional magic, but does that make the code more readable and easier to maintain on the long term?"
androiddev,3chmsk,bubbleguuum,2,Thu Jul 9 16:06:52 2015 UTC,"IMO, it does because it makes the code more expressive.  What's more readable here?  for (int i = 0, size = list.size(); i < size; i++) for (i in 0..list.size())   or here:   String s = String.format(""Hello %s"", name); val s = ""Hello ${name}""   or here:  public class Example {     private int value = 10;     public Example(int value) { this.value = value }     public int getValue() { return value; }     private void setValue(int value) { this.value = value; }     // TODO hashCode()     // TODO toString() }  public data class Example(value: Int) {     var value = value       private set()       public get() }   As for maintainability:  If I go back and add some properties to that Example class, In Java I also have to make sure I update the hashCode and toString methods. In Kotlin, it's automatic.   If my format string has many parameters, it's not immediately obvious in Java which parameter went with which ""%s"". In Kotlin, the variable names are included in the format string itself."
androiddev,3chmsk,Pnikosis,0,Thu Jul 9 16:40:11 2015 UTC,"You can convert an existing Java project one file at a time and everything will still compile, even for complex programs that run to millions of lines of code.    Can I convert an Android java project without troubles?"
androiddev,3chmsk,bubbleguuum,2,Wed Jul 8 03:57:02 2015 UTC,"Yeah, most likely"
androiddev,3ckgt9,kenmarkx,2,Wed Jul 8 16:44:24 2015 UTC,Needs documentation!
androiddev,3ckgt9,pakoito,1 point,Wed Jul 8 18:55:01 2015 UTC,working on that right now. Also a tutorial with some GIFs would come up within this week :-)
androiddev,3cjvmq,DeafParrot,2,Wed Jul 8 14:05:35 2015 UTC,Why?
androiddev,3cjvmq,warl0ck08,5,Wed Jul 8 15:20:01 2015 UTC,"Two reasons   Just started Android Studio and developing my first app and after staring at a screen all day, I would like to go relax on my porch and read more about the system architecture on paper instead of a screen. I am going to the beach for a week and I sit on a kayak and fish/crab all day. Would be nice to have some reading material while I wait to catch nothing :)"
androiddev,3cjvmq,Flaste,2,Wed Jul 8 15:32:22 2015 UTC,"Get a tablet or e-reader and use one of those tools that scrapes a website for offline use. The API guide updates frequently and would be many pages, it isn't worth printing.   You could also buy a book on Android if you really want the paper format."
androiddev,3cjvmq,fethaja,2,Wed Jul 8 21:47:53 2015 UTC,"Good idea regarding the tablet. And I mainly want the API guide for terminology, I understand the API guides change but I am really enjoying all the background information regarding how Linux works, how Android has evolved over time, and other nuggets of goodness. I will try the offline reader and put a waterproof case on my tablet. Thanks!"
androiddev,3cirmu,Ziem,3,Wed Jul 8 06:00:37 2015 UTC,Paging /u/JakeWharton for best practices with isUnsubscribed() before onXXX when using Observable.create()
androiddev,3cirmu,pakoito,8,Wed Jul 8 17:07:30 2015 UTC,"It depends,  In his example, he checks it as the first thing in the callback from the IAB listener. This is a good practice since the user might have unsubscribed and calling down the chain further would be wasteful.  Another interesting case is when you tear down a resource on unsubscribe but have to do so on a particular thread. For example, in RxBinding, removing the view listener on an unsubscribe has to be done on the main thread (example). This requires checking isUnsubscribed() before calling every onNext because there's a race condition if you unsubscribe on a background thread while a click is happening on the main thread. This manifested itself as a flaky test until all of the isUnsubscribed checks were added."
androiddev,3cirmu,JakeWharton,1 point,Wed Jul 8 18:22:13 2015 UTC,thats a mighty power you have to summon the great Jake Wharton. Use wisely!
androiddev,3cirmu,bart007345,1 point,Wed Jul 8 20:07:31 2015 UTC,Hm... I didn't get when to use defer before. Thanks :D
androiddev,3cirmu,jackhexen,1 point,Wed Jul 8 20:35:43 2015 UTC,"If I got it right too, Are these logically same defer+just and create+Subscriber ?"
androiddev,3cirmu,vladlichonos,1 point,Fri Jul 10 17:44:43 2015 UTC,"I have a library that handle files in general and produces (image thumbnails, video thumbnails, temp file saves etc) and was built using EventBus pattern. RxJava would be perfect for such a use case.   Is there anyone interested on contributing such a change ?"
androiddev,3cirmu,rexes13,1 point,Thu Jul 9 18:56:19 2015 UTC,Nice!
androiddev,3clre4,eru_melkor,2,Wed Jul 8 22:08:06 2015 UTC,errrr...i think this belongs in r/WTF
androiddev,3clre4,bart007345,2,Wed Jul 8 22:11:23 2015 UTC,"At least it is up to date, got that going for it lol"
androiddev,3chebi,YouShallNot_Parse,26,Tue Jul 7 22:44:42 2015 UTC,https://www.mashape.com/
androiddev,3chebi,primosz,6,Tue Jul 7 23:06:35 2015 UTC,Welp. This is pretty fuckin' awesome.
androiddev,3cjms2,androidnoob1,4,Wed Jul 8 12:45:07 2015 UTC,4.5 Alternative Stores. You may not use the Store to distribute or make available any Product which has a purpose that facilitates the distribution of software applications and games for use on Android devices outside of the Store.
androiddev,3ciyz4,abc525755,1 point,Wed Jul 8 07:32:52 2015 UTC,"snake oil, beware!!!"
androiddev,3cj7g2,SprAwsmMan,4,Wed Jul 8 09:36:14 2015 UTC,"Try to build a simple app, for example a weather app or a news feed reader. If you don't know how to do something just google it. I think this is way better than just participating in a course and that's the way I learned Android development."
androiddev,3cj7g2,HaoChen,3,Wed Jul 8 10:20:30 2015 UTC,"So many posts about people wanting to learn Android and this answer should be posted on EVERY SINGLE ONE OF THEM. Think of a simple idea, devote to it, and get working. Don't rely on hold-your-hand tutorials; I've found they create an artificial sense of accomplishment. (This is assuming you already have a basic sense of programming)"
androiddev,3cj7g2,sellers04,1 point,Wed Jul 8 15:13:35 2015 UTC,"I need the basic skills to build the app I want. My idea is fairly simple, but requires saving and using data to compare for calculated results."
androiddev,3cj7g2,sellers04,3,Wed Jul 8 23:17:35 2015 UTC,"Google provides a plethora of documentation for starting. Stop talking about what you want to do, and ""JUST DO IT"""
androiddev,3cj7g2,ldh1109,5,Wed Jul 8 23:30:06 2015 UTC,try teamtreehouse. They have a big library of tutorials. They give a week free trial.
androiddev,3cj7g2,nomadProgrammer,3,Wed Jul 8 13:09:10 2015 UTC,1++ on team treehouse great resource for learning android dev and getting familiar with android studio.  2 weeks free trial.
androiddev,3cj7g2,nomadProgrammer,1 point,Wed Jul 8 13:58:08 2015 UTC,"I like their setup more than Udacity or Udemy, is the video quality, explanation and code provided well done?"
androiddev,3cj7g2,jswaby,1 point,Wed Jul 8 23:23:40 2015 UTC,"IMO, yes. Type along everything they do. Search when you don't understand anything. But you do need to be familiar with Java (not a pro), I only took their Android Studio tutorials the ones in eclipse I ignored them since they are kinda deprecated. I finished their tutorials in mostly 1 week, 3 days and now I have 2 apps on the play store. Android + Android Studio is very pleasant to code."
androiddev,3cj7g2,dark_salad,3,Wed Jul 8 23:53:17 2015 UTC,"If you already know Java, then an Android Studio tutorial would be my first step.. It'll be in-depth enough to learn the development environment, and at the same time show you how Android apps are developed.. Lynda.com has a great Android Studio tutorial. After that, there are some good android tutorials on youtube. Look for a guy named ""Derek Banas"" on youtube."
androiddev,3cf940,timusus,24,Tue Jul 7 13:27:53 2015 UTC,"Unit testing helps you discover bugs before they become bugs. The act of thinking through how to test your code will uncover silly and stupid programming errors. Unit testing forces you to think through edge cases that are difficult for some to think through when you're just trying to get something to work. Unit tests are the best documentation you could write. When well written, a unit test describes how code works. It also requires update when behavior changes, so it'll never be out of date; when it's not accurate, it'll break your build. Unit testing encourages better design. Knowing you need to write a unit test will force design considerations that otherwise take years of experience to realize. This can be a double-edge sword though, as I've seen bad design lead to worse design when unit tests are forced onto terrible existing code (i.e.: ""I'll just make this thing public so I can access it from my test."") Most importantly, unit testing provides a very important safety net for you. If you want to add a feature, refactor some code or hand your app off to another maintainer, there's a very clear signal if something breaks and the broken unit test will tell you where it's broken and how it's supposed to work.   The trick to unit testing is finding a good balance. If you're building a one-off app that you'll never touch once published, you can probably get away with little to no unit tests (it may not be worth it). Just know that going back and adding unit tests after the fact is not nearly as useful as writing it when you write the code you're testing (before or immediately after). If you're building a product that you plan to grow and maintain, unit testing will be invaluable, even if the app is simple. Just don't over-do it. Writing too many unit tests can be crippling in that the smallest change can require fixing hundreds of unit tests (EDIT: see further thoughts on this in the replies below). In general don't shoot for more than 70% line or branch coverage or you're probably overdoing it.  For you, I'd start by testing anything that isn't obvious. Testing that setAdapter was called isn't really worth it, but the logic in the adapter is worth verifying, especially when there's special conditional formatting / visibility toggling."
androiddev,3cf940,mikenomn,3,Tue Jul 7 15:06:58 2015 UTC,"All very good points, but I'd argue that if having a lot of tests mean small changes breaks lots of tests, then you haven't really structured them as ""unit"" tests (or haven't structured your code well). It's another incentive to keep your classes small and favor composition and dependency injection. If you make a change that breaks class A, and you have a hundred classes that depend on A, that shouldn't mean all their tests break too. The whole point of hint tests on class A is so that everything that depends on A can just assume it works properly and inject a mock version of it that behaves according to contract. If class A breaks, the unit tests that enforce its contract should break, but nothing else.   The problem with that, of course, is when the contract changes intentionally, you're masking the ways in which other classes have to be modified to account for that. But there, too, you've probably revealed a code structure issue. Your interfaces should be strongly-defined enough that if the contract changes intentionally, so does the interface, and so everything that isn't updated just won't compile.   That's all probably a little idealistic, of course, but it's what I strive for. Everything tested in isolation. If all the tests pass, you're good, if something fails, that means there's actually a problem with it, and it's not a case of one of its dependencies being broken. But even if you can't achieve that...if a modification to class A breaks a hundred tests, chances are the problem is in class A, and its tests will show you what that problem is."
androiddev,3cf940,dccorona,1 point,Tue Jul 7 22:30:45 2015 UTC,"I was being a little hyperbolic in describing a simple change impacting ""hundreds"" of tests. Typically this is more common during redesigns of classes and/or their APIs (not exactly simple).  The point I was trying to make was that too much testing can be harmful and that balance is key. I've worked on teams that required 100% code and branch coverage and getting that last 5-10% was painful and often prevented people from wanting to touch (including refactor / improve) our code for fear of needing to revisit / rewrite too many 'unnecessary' tests.  All of that said, you are correct: Unit tests can help reveal code smells and design issues simply through the pain they may cause when you make changes. Score another one for unit testing! :-)"
androiddev,3cf940,mikenomn,2,Tue Jul 7 23:02:09 2015 UTC,"All fantastic points! Some nuanced thoughts:   Just know that going back and adding unit tests after the fact is not nearly as useful as writing it when you write the code you're testing (before or immediately after).    I get where you're coming from in explaining the value of unit testing while writing the code, but your subsequent point quoted below gives a really really useful and good reason why it's valuable to write tests even after the fact.     Most importantly, unit testing provides a very important safety net for you.    As the project size increases, the safety harness becomes invaluable for maintaining sanity. When you're making a seemingly harmless code change/refactor at one place in the codebase these tests will let you know that you didn't break any functionality somewhere else. Not having the harness let's you believe all is well with your change, and moving on ... only to catch the bug at a future point with no knowledge why the damn thing broke given you didn't change anything in that part of the code.   I get you were using a little hyperbole to emphasize the point but just wanted to point it out so other readers don't misconstrue this point.  I'd like to add that not many seem to emphasize the ""automated"" aspect of these tests. That's really where the party is at. The fact that it's automated means you have your own personal goblin sitting beside you going through your tests cases super fast, with the click of the button. Imagine having to test every single case manually after every single code change. Most of us would probably leave the business at that point.    Writing too many unit tests can be crippling in that the smallest change can require fixing hundreds of unit tests.   Nope not true :). Writing too many ""good"" unit tests should never be crippling. But this brings up another excellent point which is ""dont test implementation details"". Your example with the tenant thing leads me to believe that you're probably aware of this already but I find the quoted point slightly contradictory to that.   In fact if you change a harmless part of your code and you see your tests go all red. That's a code smell. It implies we're keeping the unit tests to specific to implementation details and not higher order apis.   This is why some pros advice against testing private methods. Some go even as far as writing the tests first making the method public (for tdd like design advantages) but knocking off the test and making the method private back again. There's no need to test implementation details if you have a higher order unit test that catches the case anywhere."
androiddev,3cf940,morihacky,1 point,Wed Jul 8 18:03:44 2015 UTC,"(i.e.: ""I'll just make this thing public so I can access it from my test."")   Would you advocate the use of reflection to test private fields? I've been doing it and don't see the downside yet. Are there any I should know about? Apart from the obvious fact that reflection is slow, but as it's only testing I don't mind that."
androiddev,3cf940,ContiGhostwood,2,Wed Jul 8 09:30:22 2015 UTC,"Two things:   Your unit tests should be as blazing fast as they can be so you won't feel bothered by running them often. Reflection isn't that slow outside of dalvik, so a little here and there shouldn't be terrible for if used sparingly. That said... In general your unit tests should verify the behavior of the public interface / API that the unit under test offers. Is there a behavior that the modified private variable causes? If so, verify that instead. You should try to treat your unit as a black box with your tests verifying inputs and outputs.   For example. Let's say my Tenant class has a raiseRent(int amount) method that increments a private ""mCurrentRent"" field. After the rent raises to a certain point, the method ""isRentTooDamnHigh()"" should return true. A unit test shouldn't necessarily verify the value of rent, but instead verify the behavior of those methods at various known states.  test 1:  unit = new Tenant(); unit.raiseRent(0); assertFalse(unit.isRentTooDamnHigh());   test 2:  unit = new Tenant(); unit.raiseRent(TEST_MAXIMUM_RENT); assertTrue(unit.isRentTooDamnHigh());   There are a bunch of other variations to test as well such as negative values, max int, multiple raises, etc., but none of them should require reading the private variable directly."
androiddev,3cf940,mikenomn,2,Wed Jul 8 13:47:30 2015 UTC,"If it's a private field with no accessor, then why are you testing it? Your unit tests should be working on your public interface, not being coupled to your internal state."
androiddev,3cf940,s73v3r,1 point,Wed Jul 8 19:07:42 2015 UTC,Sorry I should have pointed out that it's in instrumentation tests. But I'm guessing it's still a reprehensible thing to do? Say I have an activity that has a method that shows a dialog based on a boolean taken from Shared Preferences. The method that shows this is private to this activity so in my instrumentation test with Junit4 and Espresso I want to check both conditions. So I invoke the method and then check if dialog is displayed. Then I invert the boolean and then invoke the method again to run another check on the dialog. Is this considered a bad practice even though it's for an instrumentation test?
androiddev,3cf940,ContiGhostwood,1 point,Wed Jul 8 22:45:55 2015 UTC,"It's not a good idea. You don't want to couple your tests to an implementation detail. Some day that Boolean is either going to be renamed or simply be removed. Then your tests will break, even though the behavior of the system hasn't changed."
androiddev,3cf940,s73v3r,1 point,Wed Jul 8 23:53:23 2015 UTC,"using reflection in your tests is outright blasphemy :). you can technically do it, but that's a HUGE code smell and should not even be considered unless you REALLY know why you're doing it. fact: 99.99997543% of unit tests do not require reflection (source: reddit comment) :P.   your tests have no business testing private ""fields"" you shouldn't test private ""methods"" either unless they're promoted to be publicly accessible.   think of your test code as a client of your api. would you be cool with your users using reflection to access your apis?  my reply to mikenomn response has some additional thoughts on why even promoting access can lead to iffy situations."
androiddev,3cf940,morihacky,10,Wed Jul 8 20:26:46 2015 UTC,"""Re-use is good. Test first code is born with two clients, not one. This makes adding a third client twice as easy.""  If you practice TDD you'll be writing better OO code by default, and much less implementation specific spaghetti.  In addition it's cheap to add tests for a whole raft of edge cases you don't even think about when you're coding the happy path."
androiddev,3cf940,Deafdev,5,Tue Jul 7 14:27:58 2015 UTC,"I unit test for two reasons:  1) Running a test is faster than launching the app and triggering the functionality you want to test.  Running your app and getting the system into the state that triggers your bug is much slower than a unit test.  Hell, I can run all 574 tests I have in the time it takes my application/services to load.  2) Having tests protects you from changes you didn't expect or forgot would impact more areas of your code.  Example:  I have an enterprise application and yesterday I optimized the main search functions.  I have tests that add records to the database, run the code, and verify that the records come back, including the filter values and the total count (the UI is paged so we only return what we need, but we need to calculate number of pages). This test also checks that the records' properties are in the filter values and that the filter values are in the search results.  A in B, B in A.  When I then switched over to the new query and all my tests passed, I knew things were fine.  I then poked at the functionality in the UI and discovered that one of the filters was not populated.  Having the test tells me that the UI was wrong (I forgot to bind one of 7 filters), not the database, and it saved me from having to check the query itself, the DAL code, and the DTO.  All of that was tested so the only place the error could exist is the in the UI where it is consumed.  Unit test what needs testing, specifically areas you can fuck up easily by being human."
androiddev,3cf940,casualblair,3,Tue Jul 7 20:06:06 2015 UTC,"For me, I have two main reasons to write unit test in general.   Quickly verify if the function I just wrote behaves what I expected. Regression   The 1st reason doesn't always hold true in Android though. Sometimes the build time is long, sometimes u really need instrumentation tests which are really slow to run comparing to pure JUnit test. But those reasons should not be an excuse to stop doing it."
androiddev,3cf940,aaronmix,6,Tue Jul 7 22:07:18 2015 UTC,"I wrote up my thoughts here. TL;DR: You can mostly skip unit tests, but replace them with other bug-reducing habits, like re-reading your code and code reviews."
androiddev,3cf940,lkesteloot,5,Tue Jul 7 21:03:37 2015 UTC,"That post pretty much sums up my own views on unit testing. Lots of people don't seem to understand that unit testing not only has benefits, there's also a cost involved. Testing code is just another piece of code, which needs to be maintained, can contain bugs, and needs to be modified when APIs change.   It seems clear that the benefits have to outweigh the cost. This calls for critical thinking about the likelihood that code will break and the testing effort involved. But in practice most unit testing folks are chasing random coverage numbers that some bullshit manager just pulled out of his ass, and failing to comply with the doctrine will get you in trouble.  All of this has a bit of a 'cargo cult software engineering' vibe to it, much like the OOP hype that we slowly seem to be leaving behind. It's more about complying with the image that some people have of 'professional' engineering than about actually knowing what you're doing.  Which is not to say that all unit testing is bad, but some of the hype seriously needs to die."
androiddev,3cf940,svdree,3,Tue Jul 7 21:37:44 2015 UTC,what hype?
androiddev,3cf940,bart007345,2,Tue Jul 7 23:18:22 2015 UTC,I gave a talk on this last year you might find useful.  Edit: probably would help if I linked the tutorial write-up I mentioned in this video
androiddev,3cf940,sleepynate,2,Tue Jul 7 21:10:45 2015 UTC,Unit testing is a form of automated regression testing.
androiddev,3cf940,lastbacon,2,Tue Jul 7 21:21:51 2015 UTC,"Alright, after reading all these comments, I'm convinced. I eant to start unit testing.  Could someone help me get started though? I've never done it before and I don't know how it works. I didn't even know what it was up until this thread.  Are there any great examples or tutorials out there that will help me learn?"
androiddev,3cf940,imsrslyyouguys,1 point,Wed Jul 8 06:17:38 2015 UTC,"In my view there are a few different ways you can use unit testing:  1) To make sure some sort of critical bit of code works  2) To drive development of your entire app... this is the approach that takes a lot of time, and end up taking a lot more upfront time then simply making your app without any testing. The idea is that you have a specific feature you want to make. You write a unit test for a very small subset of your feature (usually a single method), and then go ahead and implement that bit of code, run all your tests and ensures every thing is ok. Then you refactor if needed, and run your tests again. The principle behind this is that you will at all times have unit tests covering all features of your app, so if you add new features later on you can ensure this new feature won't break old code."
androiddev,3cf940,forgefire,1 point,Tue Jul 7 14:57:26 2015 UTC,I write thorough unit tests to prevent others from breaking my features.  Already worked once two weeks after joining a new company right before we were planning to release the feature.
androiddev,3cf940,angrynapkin1,1 point,Wed Jul 8 02:00:00 2015 UTC,"Unit tests give you confidence about your code.  If you refactor something or add a new feature, how confident are you that there were no side effects?  Of course, unit tests are only as good as they are written, but still very helpful."
androiddev,3cf940,trevor-e,1 point,Tue Jul 7 15:50:55 2015 UTC,"Today I wrote two tests for two API endpoints parsers. It took about 4 hours. Writing and testing this parsers using plain human eye took about 2 hours. I've spent a lot of time debugging those tests, figuring out how to provide test data best way, refactoring my code so it will be testable. I guess mastering Android TDD will consume at least 40 more hours. I feel like this time will never pay off. But I will still do it, slowing down development considerably, just because this stuff is hot and I need it in my CV. The same story with Android Fragments."
androiddev,3cf940,Trotzke,2,Tue Jul 7 18:38:27 2015 UTC,TDD is a skill. It takes time to master. You took a long time because you've never done it before.  Eventually the slight increase in dev time will pay back in better code with less bugs.
androiddev,3cf940,bart007345,1 point,Tue Jul 7 20:39:21 2015 UTC,The majority of dev is not writing new code it's maintaining existing code. The point of testing is not to find problems with your green fields project now its to give you the freedom to refactor and make changes with certainty you're not breaking anything else or unforseen 5 years from now. The time you wasted today will be saved later on by making sure you never broke your code in unexpected ways and in debugging unforseen side effects
androiddev,3cf940,spacemanza,1 point,Tue Jul 7 18:56:41 2015 UTC,"It is a good point. But how to measure if invested time will pay off or not? It looks like you are sure it will, and I'm not that sure. How to figure out who is right?"
androiddev,3cf940,Trotzke,0,Tue Jul 7 19:11:52 2015 UTC,"They've done studies and stuff but yeah, its like ""how do you measure the time I'm saving due to unforseen errors that I'm no longer experiencing thanks to unit tests"""
androiddev,3cf940,spacemanza,1 point,Wed Jul 8 07:50:20 2015 UTC,What about startups? Majority of startups die long before 5 years mark. And focusing only on most important things is crucial for startup survival. So TDD is not suitable in this case?
androiddev,3cf940,Trotzke,3,Tue Jul 7 19:23:35 2015 UTC,"Despite what people will tell you, there is absolutely nothing special about startups from a coding perspective. There is no reason to not follow the same coding practices one would follow anywhere else. Being a startup is not an excuse for being sloppy."
androiddev,3cf940,s73v3r,2,Wed Jul 8 00:05:34 2015 UTC,"TDD is definitely suitable there.  The fact of the matter is that every time you touch your code, you're introducing a possible regression. If you don't write tests you have zero way of knowing whether you did or not.    If you're always quickly adding/changing features (like a startup does), you are very quickly changing code all the time.  Tests are essential for making sure that you didn't break what you already have.  Ultimately it buys you confidence and lets you focus your time on development, rather than running back and chasing bugs (or being embarrassed/causing trouble for the business when you ship nasty regressions)."
androiddev,3cf940,if_man_is_5,0,Tue Jul 7 19:48:20 2015 UTC,"I've been working in startups for some time and have general feeling that regressions wasn't an issue. Just because you are working with you own codebase, have good feeling what can break and test this parts of code directly. When I was supporting other people's code regressions was much much bigger problem. But this is my experience, you may have different one."
androiddev,3cf940,Trotzke,1 point,Tue Jul 7 19:59:34 2015 UTC,"Just because you are working with you own codebase, have good feeling what can break and test this parts of code directly.   At the end of the day though this is like saying ""I'm a good driver and I'm familiar with the streets I drive on, so it's ok not to wear a seatbelt."""
androiddev,3cf940,if_man_is_5,-2,Tue Jul 7 20:46:19 2015 UTC,"Google this question and then come back and say why you still think its not a good idea. Your app architecture is every app we have at my workplace.  For some reason, I have yet to understand, software development teams and their managers are in denial about what REALLY happens.  They think its like this:  dev->QA->release  They base their plans on this and then are surprised when they deliver late.  What actually happens is this:  dev->QA->dev->QA->dev->QA->release (accepting there are bugs we didn't get to).  That back and forth is the infamous bug fix cycle. No one ever puts it on the plan. By definition, no one knows how much time it will take.  I pointed it out to my team and I said, let me write tests taking a bit longer during dev but I guarantee that bug fix cycle will be reduced to next to nothing. And it was. We don't even bother putting the bugs into a bug tracker as there were so few.  Take the time to write unit tests. It has so many advantages, the big one is you are forced to write modular code. This alone helps reduce bugs.  I was told on another thread that they wouldn't hire me because of my attitude. Its my attitude that delivers results like this. Hire a dev who doesn't want to unit test? No chance."
androiddev,3cf940,bart007345,1 point,Tue Jul 7 15:12:49 2015 UTC,"Thanks for your input. Just to be clear, I never said that unit testing is a bad idea!"
androiddev,3cf940,bart007345,0,Tue Jul 7 22:01:20 2015 UTC,Down voted? Why?
androiddev,3cf940,Trotzke,0,Tue Jul 7 18:23:43 2015 UTC,"If writing modular code is so beneficial, why don't write it regardless of TDD or not? How about people who write modular code anyway?"
androiddev,3cf940,bart007345,2,Tue Jul 7 19:34:04 2015 UTC,"because its hard. Hey, write clean code! Easy right? Err, no.  By doing TDD, you end up making things modular because that makes testing easy."
androiddev,3cf940,Trotzke,0,Tue Jul 7 19:37:53 2015 UTC,Not all developers need to be forced to write good code. Some of them do it anyway.
androiddev,3cf940,bart007345,1 point,Tue Jul 7 19:49:36 2015 UTC,"if you're one of those devs who writes clean code off the bat, congrats! Never met one myself.  Perhaps you'd like to share some of your code?"
androiddev,3cklmy,Athalansy,5,Wed Jul 8 17:18:08 2015 UTC,"Translation: ""Go away, Satan"", in a fancy way."
androiddev,3cjxpw,Annelisa_Dinwoodie,2,Wed Jul 8 14:22:56 2015 UTC,Hmmmmmmmmmmmmmmmm  Does it require a whiteboard exercise?
androiddev,3cjxpw,pakoito,1 point,Wed Jul 8 15:34:27 2015 UTC,Heh: https://twitter.com/mxcl/status/608682016205344768
androiddev,3cjxpw,Deafdev,1 point,Thu Jul 9 09:00:15 2015 UTC,"@mxcl   2015-06-10 17:07 UTC  Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.     This message was created by a bot  [Contact creator][Source code]"
androiddev,3cjxpw,TweetsInCommentsBot,1 point,Thu Jul 9 09:00:20 2015 UTC,I thought it was only me who did not pass all 10 people in Google and Facebook.
androiddev,3cjxpw,vladlichonos,1 point,Fri Jul 10 17:27:20 2015 UTC,What about not having work visa but being able of paying for all work visa expenses?
androiddev,3cidmy,riula,1 point,Wed Jul 8 03:36:28 2015 UTC,Can you point to a solution that you thought was overkill?
androiddev,3cidmy,bart007345,1 point,Wed Jul 8 05:31:12 2015 UTC,"This one comes up a lot. Ideally, i'd like to search. Select from the options that appear. Append that selection to existing list. Maybe this is normal? I'm kind of cannon balling in."
androiddev,3cidmy,bart007345,2,Wed Jul 8 19:10:53 2015 UTC,"welcome to Android! That amount of code is pretty much what's involved. Things can be reordered - activities shouldn't instantiate the databaseHelper class but he did it to show all the pieces working together.  You could avoid the content class I think by using RxJava but since you're new to this, that might not be the best option."
androiddev,3cidmy,TheFunkOpotamus,1 point,Wed Jul 8 22:17:52 2015 UTC,All of that makes sense save for RxJava simply because I've never heard of it. I'll keep it in mind for when I've got a good groove going. Thanks!
androiddev,3cei9u,DoesntPostAThing,56,Tue Jul 7 07:50:15 2015 UTC,"I live in India and their products are a major hit. But all their products are hair care products so I don't know how they would want to use your app. They might be planning to start something in sports/health department. I would be a bit skeptical too. And these big companies have a tendency to buy some products, use it once for some promotion and then chuck it.   If you're going for a deal make sure that you have some rights over the app. They will probably make a non-compete agreement in which you may not work on something similar again for certain amount of time. Try to get an agreement where you lease them the app (i.e. let them change brands and logos, etc) and you can also further develop the app. Get a good agreement and get it revised by some professionals. I'd advise you not to participate if they have support contract, i.e. they would ask you to fix bugs, etc. They can withhold payment giving some petty reason that the app has bugs.  I'm not trying to discourage you. This is a great opportunity and make sure that you don't get screwed as any settlement would be done under India's jurisdiction. Get the payment upfront if possible. Decide a lower limit because these big companies would negotiate a lot."
androiddev,3cei9u,jayrambhia,49,Tue Jul 7 09:06:30 2015 UTC,You shouldn't have posted their name and your app. Now someone or many people could be could be in contact with them trying to sell them a similar app for cheaper after seeing that they're interested in buying such an app. They will also be pissed when they learn you've posted their email on reddit
androiddev,3cei9u,brblol,33,Tue Jul 7 12:23:21 2015 UTC,I've been through this a couple of times and I guarantee they're already reaching out to dozens of other pedometer apps. The race to the bottom started way before this was posted.
androiddev,3cei9u,mikenomn,2,Tue Jul 7 15:30:51 2015 UTC,good point
androiddev,3cei9u,cscareerz,4,Tue Jul 7 18:23:17 2015 UTC,could be possible
androiddev,3cei9u,atioxx,11,Tue Jul 7 13:13:40 2015 UTC,"They may just want the source code to your app and allow you to leave your existing app in the store.  Just ask.  You may want to do a quick consultation to get the agreement written up.  A few things to consider: 1) Can you keep your existing app in the app store? 2) Can you sell the source code again to a different party? 3) Are you required to provide any support after the purchase?  (I'm assuming you might have to answer a few questions once they're looking at the code)  Also, consider that they're buying your app because they want to save a bunch of time and effort, so feel free to get compensated on that level."
androiddev,3cei9u,bryanlogan,8,Tue Jul 7 11:52:16 2015 UTC,Looks like Marico wants to promote their cooking oil through this.
androiddev,3cei9u,multicore_manticore,5,Tue Jul 7 08:14:45 2015 UTC,How does cooking oil have anything to do with a step counting all though?
androiddev,3cei9u,multicore_manticore,7,Tue Jul 7 08:17:40 2015 UTC,"They may be running a promotion or a long campaign with rewards because their cooking oil is all about ""healthy heart"" and all that.   My brother's company was participating in a promotion where volunteers signed up and got a small pedometer and there would be monthly prizes for logging the highest count. Something like that?"
androiddev,3cei9u,UMadBreaux,7,Tue Jul 7 08:24:51 2015 UTC,I would consult with a lawyer before scheduling the call and have them with you during it to make sure you do not get fucked over
androiddev,3cei9u,beermad,8,Tue Jul 7 12:49:22 2015 UTC,My general principle is that any company that contacts me about any of my apps is trying to scam me. Simple as that.
androiddev,3cei9u,ciny,5,Tue Jul 7 14:09:17 2015 UTC,Well you can still talk to them and see
androiddev,3cei9u,beermad,7,Tue Jul 7 16:40:50 2015 UTC,"If I talked to every ""company"" that emails me about my little apps, I'd spend more time doing that than I spend in the pub."
androiddev,3cei9u,ciny,4,Tue Jul 7 17:47:16 2015 UTC,"Damn, you must have good apps :) but I hear ya, I'm sitting at my favorite pub right now. So I raise my drink and salute you! A man has to have his priorities straight."
androiddev,3cei9u,WestonP,3,Tue Jul 7 17:55:17 2015 UTC,"While that is generally true, especially with having an e-mail address listed in the Play store, I have had a few legitimate contacts from other reputable companies. Some still didn't amount to anything, but a few did and paid off quite well.  Most are obvious bullshit, people trying to sell you crap, etc., and can simply be ignored. For the rest, you have to protect yourself... Obviously, don't do anything that involves you spending money, working for free, and be damn careful about disclosing any source code before payment."
androiddev,3cei9u,The__Fish,1 point,Tue Jul 7 19:51:27 2015 UTC,I'm the same. Also once i see India i presume it's a scam.
androiddev,3cei9u,paradox_djell,1 point,Tue Jul 7 20:23:38 2015 UTC,That's not necessarily true.
androiddev,3cei9u,The__Fish,1 point,Wed Jul 8 05:00:28 2015 UTC,I know but I'm still ignoring it. My phone tells me where the call is coming from and I get calls from India and I ignore them as well. Most of them look like a scam so I'm not wasting my time or willing to risk it.
androiddev,3cei9u,paradox_djell,1 point,Wed Jul 8 08:27:37 2015 UTC,Probably because of relaxed regulations. Most of those calls are probably just routed through India and aren't directly originating.
androiddev,3cei9u,rbainy,1 point,Wed Jul 8 08:36:51 2015 UTC,Same feeling here bro
androiddev,3cei9u,sagarsiddhpura,4,Thu Jul 9 09:27:11 2015 UTC,"You can take the call and clearly ask for more info before deciding yes or no. Take a call and ask openly about their intentions for app, will they just use it for marketing or they want source code copyrights or what. You dont have to say yes or no in the first call. Tell them politely that you want to be completely aware of whats going on before making a decision. You can also inform them you would want some time(two weeks or anything you want) to figure out legal things with your lawyer or any reason."
androiddev,3cei9u,GoatOfUnflappability,2,Tue Jul 7 09:09:24 2015 UTC,I had a company offer me something like $5000 for an app I had written some time before.  The sticking point was that they wanted total access to my developer account - username and password - which included other apps they weren't buying.  No thanks.
androiddev,3cei9u,kosokun,2,Tue Jul 7 21:51:21 2015 UTC,That's unacceptable conditions !   I wonder if it's possible to move an app to another developper account. Because it seems legit the buyer want to keep the app's reputation and downloads on the market.
androiddev,3cei9u,GoatOfUnflappability,2,Wed Jul 8 08:06:55 2015 UTC,"You remind me that it's possible to move apps like that nowadays, but I'm pretty sure it wasn't back then (about 4 years ago).  The other trick, though, is your app is still signed with your own key.  There are some implications if you've signed your other apps with the same key."
androiddev,3cei9u,Flaste,1 point,Wed Jul 8 16:30:17 2015 UTC,"It is possible to transfer apps to another account, you just have fill out a google support form. You should also be signing your apps with different keys in case something like this ever happens."
androiddev,3cei9u,schwiz,1 point,Wed Jul 8 21:44:31 2015 UTC,"sounds legit, make sure the check clears before you hand over the code and keys..."
androiddev,3cei9u,mobydikc,1 point,Tue Jul 7 14:02:56 2015 UTC,This sounds reasonable to me. Unless you're attached to the app.
androiddev,3cei9u,liekorank,-14,Tue Jul 7 19:05:23 2015 UTC,"Wow. That's surprising, given that you have almost no downloads."
androiddev,3cei9u,WestonP,3,Tue Jul 7 19:04:45 2015 UTC,"Not really. It says he has 10,000 - 50,000 installs."
androiddev,3cei9u,liekorank,-10,Tue Jul 7 19:54:54 2015 UTC,"Yes, I can actually read. I said almost no downloads, not ""no downloads""."
androiddev,3cei9u,WestonP,9,Tue Jul 7 21:09:35 2015 UTC,"Oh, so you're just posting to swing your dick around and act like he's small-time compared to you, even though you have absolutely nothing to show for yourself... Got it. LOL."
androiddev,3cei9u,liekorank,-2,Tue Jul 7 21:16:10 2015 UTC,"I'm very sorry that your mother fucked you in the ass, but 10k downloads = no downloads."
androiddev,3cgk3n,ben_uk,1 point,Tue Jul 7 19:10:46 2015 UTC,I paid €25 (or was it dollars?) flat to be honest. No fees.
androiddev,3cgk3n,Muchoz,1 point,Tue Jul 7 22:54:17 2015 UTC,"OP is talking about the exchange fees that banks impose when you purchase in a foreign currency.   Example: I live in Canada, if I buy something with my credit card in that is charged at $25USD. The amount that appears on my statement is $31.80CAD (based on today's exchange rate). Plus a 2.5% fee which in this case is 80¢ bringing the total to 32.60"
androiddev,3cgk3n,GzFighter,1 point,Wed Jul 8 05:41:22 2015 UTC,I don't think I had that either.
androiddev,3cf0kj,anticafe,5,Tue Jul 7 12:02:22 2015 UTC,"Is there any reason to use ContentProvider instead of normal SQLite? As I know, ContentProvider implementation requires more time than normal SQLite."
androiddev,3cf0kj,lakewoodjoe112,5,Tue Jul 7 15:05:19 2015 UTC,"With content provider, I think the best thing you get from it is a really uniform way to query, update, etc. and that level of abstraction makes things easier to maintain in the long run.  Content provider also gives you access to certain things like sync adapters."
androiddev,3cf0kj,ZakTaccardi,1 point,Tue Jul 7 15:33:05 2015 UTC,"You can abstract your data access via interfaces, which is a better approach in my opinion.  The real power of content providers is if you ever wanted to share your data outside of your app."
androiddev,3cf0kj,anticafe,1 point,Tue Jul 7 19:35:49 2015 UTC,"Agree with you. However I think 99.9% Android app will not share its data with other apps, therefore in most case, I see no reason to use ContentProvider :)"
androiddev,3cf0kj,EddieRingle,3,Wed Jul 8 01:36:16 2015 UTC,"Mods, shouldn't this thread be stickied for all of today?  /cc /u/rkcr /u/pandanomic /u/bmwracer0"
androiddev,3cf0kj,rkcr,2,Tue Jul 7 17:56:16 2015 UTC,"We're not stickying the daily questions thread, mostly because there are other threads that should take precedence at times (i.e. announcements, weekly hiring, weekly anything goes)."
androiddev,3cf0kj,lakewoodjoe112,3,Tue Jul 7 17:59:26 2015 UTC,"What is the recommended approach for when you have a login flow that requires a lot of data to be downloaded?  Ex.:  -Login gives me auth token and user information  -I use auth token to download configuration values from the server  -I use auth token to download a list of objects to display on the main activity  Right now, I have a ton of web calls with retrofit callbacks and it's just a bunch of spaghetti code. Not sure what the best approach to do this web service chaining is."
androiddev,3cf0kj,if_man_is_5,2,Tue Jul 7 15:30:30 2015 UTC,"Right now, I have a ton of web calls with retrofit callbacks and it's just a bunch of spaghetti code. Not sure what the best approach to do this web service chaining is   Not to bang the rxjava drum any more than usual around here but the fact that retrofit allows you to expose an Observable for your http calls makes this a ton easier.  Check out Dan Lew's post for an example.  You'd use an Observable to do the login, and then can use rx operators to take the output from the login (your token) and fetch the remaining data you need (by combining other Observables).  The advantage here is that rx is going to handle coordinating all the calls for you and you'll have one onError at the end.  The alternative is probably the callback hell you're in right now, where I imagine that you're probably like four levels deep into success/failure callbacks by the time you get the stuff to display in your activity."
androiddev,3cf0kj,trevor-e,3,Tue Jul 7 19:34:26 2015 UTC,"Alternatively (not using rx), there's really no need for callback hell no matter how you implement it.  If the next request depends on the previous response, then you should be making a bunch of synchronous calls and wrapping them all in one thread, rather than making each asynchronous."
androiddev,3cf0kj,bart007345,2,Wed Jul 8 03:15:55 2015 UTC,"I've done exactly this recently, after successfully logging in and getting a token I then query another endpoint (using the token in a header) and get the user's profile and some additional rules from another endpoint and merge them.  RxJava heaven!"
androiddev,3cf0kj,Devon64327,3,Tue Jul 7 23:09:12 2015 UTC,"Kind of hard to word this question, but...  When using CardViews to display a list of objects, what is the best (Both obvious and elegant) way to visually communicate to the user that the card can be tapped to open a fragment with more information?  Should I use text only buttons at the bottom of the card, an overflow button, or what?"
androiddev,3cf0kj,prefanatic,5,Tue Jul 7 15:59:30 2015 UTC,"For me, the most effective way is to just follow Google's material spec.  http://www.google.com/design/spec/components/cards.html#cards-actions  I throw a ""more"" text in the bottom right, and have the whole card ripple and act as my button."
androiddev,3cf0kj,TheoremMetal,3,Tue Jul 7 17:32:07 2015 UTC,"I'd think it varies depending on the underlying content, but if it were additional text, I'd have the last line fade into transparency hinting that it continues whereas just an ellipsis might not be as clear."
androiddev,3cf0kj,taimooryc,3,Tue Jul 7 17:35:31 2015 UTC,What are you favorite graph libraries? I want to make a line graph using 4 integers in a dialog box. I'm looking for something with material design.
androiddev,3cf0kj,LadyTesla,3,Tue Jul 7 20:40:56 2015 UTC,"I've used GraphView. Don't know if it's the best, but I found it easy to work with."
androiddev,3cf0kj,anticafe,2,Wed Jul 8 02:54:20 2015 UTC,There are MPAndroidChart and hellocharts-android which seem beautiful and good to use.
androiddev,3cf0kj,Jafit,3,Wed Jul 8 09:11:40 2015 UTC,"Hi. I'm looking to develop a mobile app for the first time.   I have experience building websites and programming in various languages, and I'm starting to read various resources, but I saw this thread and thought I might as well ask.  I know that a lot of websites have 'apps' that just seem to present a mobile version of their website in what I assume is a more controlled environment.   Is it a bad idea to create an app as a web-based application with javascript and markup and then just wrap it up in a browser window?   I assume this would limit access to the device's other functions, but I don't think I'd need them tbh."
androiddev,3cf0kj,taimooryc,2,Tue Jul 7 20:48:10 2015 UTC,javascript and markup and then just wrap it up in a browser window?   One obstacle I see is the embedded browser in Android (WebView) is very laggy.
androiddev,3cf0kj,mraviator9,3,Tue Jul 7 21:56:44 2015 UTC,Dagger - where's a good example/repo/blog post on how to inject an activity's context into...everywhere needed?
androiddev,3cf0kj,thepoosh,2,Tue Jul 7 21:31:53 2015 UTC,what is the best way to allow sharing contacts into my application?  I am trying to intercept an Intent from the contacts application share mechanism
androiddev,3cf0kj,TheKeeperOfPie,2,Tue Jul 7 13:24:15 2015 UTC,You can access the phone contacts through a content provider. Is it not sufficient to allow users to search for a contract within your application and add it from there?  http://developer.android.com/guide/topics/providers/contacts-provider.html
androiddev,3cf0kj,thepoosh,2,Tue Jul 7 14:35:52 2015 UTC,I was asking about intercepting the share intent from external apps such as contacts and fetching the contact information from the shared vCard
androiddev,3cf0kj,TheKeeperOfPie,3,Tue Jul 7 18:20:43 2015 UTC,"Oh, then I'm not sure. I can't seem to find what Intent is thrown from the share action. Maybe try asking the Pushbullet team or one of the other apps that have it implemented?"
androiddev,3cf0kj,thepoosh,2,Tue Jul 7 22:04:34 2015 UTC,the intent is an ACTION_SEND with a Uri to the vcard in the Intent.EXTRA_STREAM not sure what to do next
androiddev,3cf0kj,TheKeeperOfPie,3,Wed Jul 8 05:05:11 2015 UTC,"Can you not register an IntentFilter with those specific parameters and then use the file in your application? I'm not sure what your experience level is with Android, but you should be able to register your application to receive that Intent, much like how Pushbullet does it. Then you can fetch the file from Uri in the EXTRA_STREAM and then parse it for the contact information.  EDIT: If you want, I can write up a sample for you. Although it might take awhile, as I have some other stuff going on."
androiddev,3cf0kj,thepoosh,2,Wed Jul 8 05:21:19 2015 UTC,"I got as far as catching the Intent, now just left with actually getting the information from the uri"
androiddev,3cf0kj,TheKeeperOfPie,3,Wed Jul 8 05:34:25 2015 UTC,"Look up how to get a file from a URI, read it in as a text file, convert it to a String, then download a vCard parser from GitHub to get the relevant information from the file.  Edit:  Uri uri  = (Uri) intent.getExtras().get(Intent.EXTRA_STREAM);  VCard vCard = Ezvcard.parse(new File(uri.getPath())).first();  using ez-vcard"
androiddev,3cf0kj,Ziem,2,Wed Jul 8 05:39:27 2015 UTC,"I'm using Retrofit 1.9.0, RxJava 1.0.10, RxAndroid 0.24.0 and OkHttp 2.0.0. When I'm setting custom ErrorHandler RxJava Subscriber methods aren't triggered. Why? Is it possible to change this behaviour?  Link to stackoverflow: http://stackoverflow.com/questions/31073526/retrofit-doesnt-trigger-onerror-when-using-custom-errorhandler"
androiddev,3cf0kj,Ziem,5,Tue Jul 7 16:11:23 2015 UTC,I can't help you with the ErrorHandler issue (I'm just getting started with Rx) but one thing I learned other day is that if you have the RxAndroid dependency you don't need to add the RxJavas.
androiddev,3cf0kj,mrlrm,1 point,Tue Jul 7 17:34:37 2015 UTC,Thanks for advice ;).
androiddev,3cf0kj,redditor2k14,2,Tue Jul 7 19:31:00 2015 UTC,"BLE Heart Rate Sensors:  - Are there any differences between the different sensors in terms of compatibility with the BLE API in Android? Ex: sample rate, accuracy, etc. - Can anyone recommend a fairly inexpensive sensor that works reliably for dev purposes?"
androiddev,3cf0kj,Thanael,2,Tue Jul 7 17:07:34 2015 UTC,Please explain SyncAdapter or link to explanation?
androiddev,3cf0kj,anticafe,2,Tue Jul 7 17:48:00 2015 UTC,"It's a way to let the system manage a periodic task without you having the worry about alarm-managers and reboots and such. It gives you intelligent batching and retries for free (or well, a bunch of boilerplate)."
androiddev,3cf0kj,thepoosh,2,Tue Jul 7 18:15:13 2015 UTC,"It sounds great. But I don't understand why only a small number of Android app implement SyncAdapter (such as Google, Pushbullet, Skype, Trello)."
androiddev,3cf0kj,thepoosh,2,Wed Jul 8 01:44:47 2015 UTC,implementation blogs and explanation can be found here and here
androiddev,3cf0kj,Offifee,2,Tue Jul 7 18:19:46 2015 UTC,any idea how to add Behaviour to dynamically added views (regular ones like TextView or ImageView) to allow a CoordinatedLayout pushing them up like it does to the FAB?
androiddev,3cf0kj,LadyTesla,2,Tue Jul 7 19:52:25 2015 UTC,"Done Java, learning Android. Silly beginner question... Sorry.  Example: So say I wanted to create an app that let's you learn more info about four boats. When I click on a boat picture, detailed boat info would open up. Instead of creating an array of four boat objects, do I create four activities?"
androiddev,3cf0kj,Offifee,4,Tue Jul 7 20:49:32 2015 UTC,"I'm still intermediate, but I would guess the more abstract the better. I'd say make 1 activity with general layouts/empty form that you fill up with the specific items for each boat. Say, you start your intent with that activity, and add an Extra that says ""it's boat #2"". As it loads it grabs the info and fills out that form."
androiddev,3cf0kj,dantheman91,1 point,Wed Jul 8 02:56:32 2015 UTC,"Thanks, makes sense :)"
androiddev,3cf0kj,slaystation25,2,Wed Jul 8 21:17:55 2015 UTC,"For saved preferences, how important is clearing them? Also, when I save a second item with the same key, are both values saved? Or is only the most recent? Does this eventually create memory issues if you don't clear it/what is the best practice in this regard"
androiddev,3cf0kj,dantheman91,3,Tue Jul 7 22:10:23 2015 UTC,The second (meaning the most recent value) overrides the first one with the same key.
androiddev,3cf0kj,slaystation25,2,Wed Jul 8 03:58:29 2015 UTC,Thank you!
androiddev,3cf0kj,PleaseDismantle,2,Wed Jul 8 04:04:10 2015 UTC,"Forgot to answer the part about clearing. No you don't need to clear, unless it's a preference you don't need anymore. If you're using sharedpreferences, they're just key value pairs stored as an XML file. If you have root access on your phone, you can even look into that xml file."
androiddev,3cf0kj,if_man_is_5,2,Wed Jul 8 04:37:27 2015 UTC,"is there an easier way to get Contact data (phone numbers, email, photo, name) than using Cursors? I'm working on something right now that requires me to bind a list of contacts and I've tried 2 methods  1) https://github.com/codepath/android_guides/wiki/Loading-Contacts-with-Content-Providers  I would rather create my own contact objects and run them through my own listview adapter. The SimpleCursor adapter just doesn't give me enough room to make modification.   2) https://developer.android.com/training/contacts-provider/retrieve-names.html  this one is full of errors and uses a similar method. It's also using SDK version codes which seems weird   I couldn't find any libraries that help thus far"
androiddev,3cf0kj,James_Rustler_,1 point,Tue Jul 7 22:42:40 2015 UTC,"You need to query the content provider to get the contacts, so you're kind of stuck with a cursor at some level.    What about writing your own adapter, subclassing CursorAdapter?  At that point you can basically do whatever you please.   It's also using SDK version codes which seems weird   Did you see why it does this?  The ""display name"" column name changed at 3.0.  You only need to care about this if you're allowing Gingerbread, which you probably don't have to care about."
androiddev,3cfq25,avipars,1 point,Tue Jul 7 15:43:25 2015 UTC,"I work for an ad company, so ours is the best (imo)  Depends on your geo, here are a couple that work well: Admob (owned by google) Inmobi (Huge indian company) Chartboost (heard good things)  Feel free to pm me if you want more info"
androiddev,3cgvyt,VectorMD,6,Tue Jul 7 20:33:14 2015 UTC,"My recollection of it is that it came with a lot of overhead and was slow.   Do you plan on doing Machine Learning, CV, expensive computations on your mobile device, sure. Otherwise Java will do just fine.  You're starting out. Java is officially THE language for Android so most of the questions you need to ask will be answered in Java. Most of the libraries to make your life easier will be written in Java."
androiddev,3cgvyt,hitler_kardashian,1 point,Tue Jul 7 20:52:03 2015 UTC,"I have a few ideas that I want to flesh out prototypes for. Only one is computationally intense. Surely sounds like Java is the way to go, though. Thanks!"
androiddev,3cgvyt,chewxy,1 point,Wed Jul 8 01:50:12 2015 UTC,"Funny. The very first android app I wrote WAS a computer vision app. I mainly wrote in C++ and used a JNI call, which I found to be quite straightforward.  My 2nd and latest app was full Java. I found it to be not as pleasant. For one, Java didn't have first class functions (I understand Java8 has them, but I haven't yet figured out how to use them for android)"
androiddev,3cgvyt,DanLynch,6,Wed Jul 8 03:30:18 2015 UTC,"The Android platform is designed to strongly encourage applications to be written entirely in Java. The developer does have the option to use C or C++ instead, but this is discouraged and is usually not needed for the majority of apps. Your concerns about overhead and performance are outdated; Java will never compete with C or C++ for raw speed, but it is more than good enough for the advantages to outweigh the disadvantages.  Other languages, such as C#, can also be used, but only on the back of some kind of third-party framework."
androiddev,3cgvyt,MrBIMC,1 point,Tue Jul 7 20:52:50 2015 UTC,"Thanks! Java it is. I may look into C# at some point, mostly for fun, as that's what I have the most experience with."
androiddev,3cgvyt,BlotCoo,2,Wed Jul 8 01:51:11 2015 UTC,"Check kotlin. It has modern semantics, while maintaining complete java compatibility.  It got quite a strong attention from android developers lately :D"
androiddev,3cgvyt,AutobotSux,7,Tue Jul 7 21:05:22 2015 UTC,"I'm learning Kotlin right now and it's awesome! However, if you're going to start with a language for Android applications, start with Java. Kotlin still hasn't hit version 1.0 yet and it's not what employers are going to be looking for (if you're looking to be employed doing Android work). If programming and Android are just hobbies though, Kotlin is a great choice."
androiddev,3cgvyt,dccorona,1 point,Tue Jul 7 23:31:20 2015 UTC,"Definitely java for android, for now. Android ecosystems is all about java. Unless you want to build a games then go for framework's own language. Read more about Android's underlying architecture (ART for eg)."
androiddev,3cgvyt,_zrgdrgr_,1 point,Tue Jul 7 23:51:45 2015 UTC,"My recollection of it is that it came with a lot of overhead and was slow.   When were you last using Java? It's got a lot of boilerplate to the syntax, that between modern language features (sadly not on Android yet) and the plethora of libraries out there (it's a damn popular language) has been significantly reduced (to almost nothing in some cases). But it doesn't have a ""lot of overhead""...it has overhead, but no more than most other modern programming languages. And, compared to most modern programming languages, is very fast.   But most importantly...unless you want to go through the painful process of doing almost everything in the NDK (absolutely not recommended, you need more than performance as your goal to justify using it), whatever language you write it in is still going to compile down to the same thing."
androiddev,3cgvyt,coffee-n-code,1 point,Wed Jul 8 01:19:40 2015 UTC,"Thanks for the reply. My opinion of Java comes from when I was programming regularly, 2004-2007 or so.  Sounds like it's the way to go, though."
androiddev,3cgvyt,NYCsOwn,1 point,Wed Jul 8 01:48:17 2015 UTC,"Java is the go-to language for Android, almost all resources are going to be Java based. I'd stick to it when starting out to ease the learning curve. Personally the only other languages I'd use for Android would still be JVM languages (Groovy, Scala, Clojure)."
androiddev,3cgujs,crumpus,2,Tue Jul 7 20:23:35 2015 UTC,Use published business contact info:   Send a postcard with a verification code to the business address. Then have them enter said code into your site to verify. Or... Call their published business phone number with a verification code that they can enter into the site.
androiddev,3cgujs,mikenomn,1 point,Tue Jul 7 21:16:32 2015 UTC,have them sign up with their business email address?
androiddev,3cgujs,bart007345,1 point,Tue Jul 7 21:19:15 2015 UTC,"This could work, I think I am going to target small businesses first, who may not have this set up."
androiddev,3cgujs,ecnarongi,1 point,Tue Jul 7 21:24:57 2015 UTC,"When they are registering have them provide EIN. This is what a company I worked for in the past did. Plus, they would verify each account by calling and checking all the information. Even if 10,000 businesses signed up they would all get called and verified eventually."
androiddev,3cgujs,ecnarongi,1 point,Wed Jul 8 15:43:46 2015 UTC,Who are you calling to verify that?
androiddev,3cgexb,nomadProgrammer,3,Tue Jul 7 18:35:05 2015 UTC,You can try this one placeit.breezi.com
androiddev,3cgexb,chukyka,1 point,Tue Jul 7 20:05:06 2015 UTC,"Yes, you can. Just Google ""Free <phone name> mockups."" Found a few as sample. http://webresourcesfree.com/latest-google-nexus-5-mockup-psd-templates/  https://www.behance.net/gallery/11924007/Nexus-5-Mockup-Pack-Free  https://dribbble.com/shots/1933372-Free-Nexus-5-mockup-from-Shakuro"
androiddev,3cfunz,JTronLabs,4,Tue Jul 7 16:16:03 2015 UTC,"if you're using setBackgroundResource(R.drawable.*) or setImageResource(R.drawable.*) then you shouldn't really worry about caching, the Resources class does that for you."
androiddev,3cfunz,madisp,2,Tue Jul 7 20:17:42 2015 UTC,Oh it does? So should I not even worry about this Picasso stuff? Do you have a reference for knowing Resources class handles caching?
androiddev,3cfunz,madisp,4,Tue Jul 7 20:21:52 2015 UTC,"Sure, check the Resources.java source: https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/content/res/Resources.java#2325"
androiddev,3cfunz,ZakTaccardi,2,Tue Jul 7 20:24:59 2015 UTC,Huh. So I guess Picasso is more important for remote images and this would not be a good use-case
androiddev,3cfunz,ZakTaccardi,3,Tue Jul 7 20:28:27 2015 UTC,"If you are loading images from an external source, definitely use a library.  Picasso was incredible for its time, but I would recommend Glide over Picasso though (not that Picasso is bad by any means, just that Glide is under much more heavy development). Google used Glide 4.0 with Google Photos, and they did a pretty amazing job there.  Glide does weigh more than Picasso though. As always there are trade-offs."
androiddev,3cfunz,Alien1993,1 point,Tue Jul 7 19:09:08 2015 UTC,"I'm not loading them externally, simply using what is in my assets folder. I doubt that those images are cached though, so I was thinking I could use Picasso to speed up image loading (since I create a ton of ImageViews that consistently reuse images).   I would only use a library for that and transformations (translation and rotation especially). Really no library is needed in this case, but I'm curious if it could improve performance."
androiddev,3cfunz,Alien1993,1 point,Tue Jul 7 19:15:03 2015 UTC,The answer is likely yes. These libraries have all sorts of caching and performance improvements that you can take advantage of for free.  You build your app and let the library do the heavy lifting.
androiddev,3cfunz,Alien1993,1 point,Tue Jul 7 19:21:43 2015 UTC,"Awesome, I'll definitely try this out then"
androiddev,3cg9hn,leggo_tech,1 point,Tue Jul 7 17:58:41 2015 UTC,According to the docs it disables the JIT compiler. Try it.
androiddev,3cg9hn,bart007345,1 point,Tue Jul 7 18:07:04 2015 UTC,"Note: this only seems to speed up the actual installation of the package. The gradle build and apk upload process still seem to take the same amount of time. However, it's such an easy flag for a second or two saved that I don't know why I wouldn't use this. Any ideas?"
androiddev,3cg9hn,burntcookie90,1 point,Tue Jul 7 18:21:48 2015 UTC,idk I've never once really been concerned about install time. gradle build time is the whole problem
androiddev,3cg9hn,Cg2XHPxz,1 point,Thu Jul 9 16:03:26 2015 UTC,"eh, it still takes a second or two, shave what i can"
androiddev,3cg9hn,burntcookie90,-2,Thu Jul 9 16:15:50 2015 UTC,not worth it. One day you'll forget to reset it and it will go into production - you get why its bad in a production app right?
androiddev,3cg9hn,bart007345,2,Tue Jul 7 20:02:59 2015 UTC,"It's goes in the /dev build flavor folder though, it'll never merge into production.  (And yeah, I get why it's bad there)"
androiddev,3cftzb,supBot,2,Tue Jul 7 16:11:10 2015 UTC,"Chet Haase - Patterns, Shmatterns  https://www.parleys.com/tutorial/quickie-patterns-shmatterns"
androiddev,3cftzb,primosz,1 point,Tue Jul 7 23:11:58 2015 UTC,I've been thinking about writing a post criticizing the trend on Android to write lots of black box tests using tools like Appium and Calabash. Maybe I'll get round to it at some point.  This video explains why its a bad idea
androiddev,3cftzb,bart007345,1 point,Tue Jul 7 20:06:20 2015 UTC,"if you hate agile and scrum, this one's for you"
androiddev,3cil53,StevenStanleyBayes,1 point,Wed Jul 8 04:49:44 2015 UTC,"I have made a new application, available for download at :   http://www.steven-stanley-bayes.com/ProximitySensor.apk   Note, this is not a demo, nor test, nor beta release, nor hardware test. This is the   release of the application.   This application allows the user to select the proximity sensor to control the screen.   The screen can be selected to be always powered or not.   When proximity sensor control is chosen, the screen of the phone powers down when there   is an object close to the proximity sensor. Thus, the screen will automatically power   down when the phone is put in the pocket. This works regardless whether the user has   chosen to keep the screen to be always powered  or whether the screen is normally   controlled by the OS.   When the screen has been chosen to be always powered, the user can use the phone as a   flash light which can easily be turned on by, say, placing the phone close to the   chest. This way, the user can shine light for a while to see around, then, quickly stop   the light and then, whenever needed, to quickly turn the light on again with just a   movement of one hand and not by the power button although the power button will also   work as set up. This way, the user would save battery energy as compared to constantly   flashing light which may not be needed. The power button still works but the proximity   sensor, when used as a switch, is easier to use than the power button."
androiddev,3ch9sl,BakedBeanz1111,2,Tue Jul 7 22:12:08 2015 UTC,You'd be best suited to script from your dev box.  adb wait-for-device   will block until a device is connected to your dev box and online.  adb shell pm list packages   will show all installed packages  adb shell pm dump <packagename>   will show you everything you could possibly need to know about a package.  adb shell <unix command such as rm>   will execute arbitrary unix commands (remove all photos from sdcard for instance).
androiddev,3ce8lm,mysterygift,10,Tue Jul 7 05:50:36 2015 UTC,So... Have you met Ted?
androiddev,3ce8lm,drabred,1 point,Tue Jul 7 06:09:04 2015 UTC,https://www.dropbox.com/s/ewjtdze2cmy668i/Screenshot%202015-07-07%2014.32.20.png?dl=0
androiddev,3ce8lm,shinagle,3,Tue Jul 7 18:32:28 2015 UTC,One approach that I'm about to try out is to just use a loaders with my Presenter. I pass a LoaderManager into the Presenter as a dependency and I use it to handle data loading across configuration changes. No need to persist the presenter across configuration changes with this approach. onSaveInstanceState() can be forwarded to the Presenter and the bundle passed into onCreate() can be passed to the Presenter so that it can restore any state it needs after the config change.
androiddev,3ce8lm,philosophicalhacker,1 point,Tue Jul 7 11:11:04 2015 UTC,I seem to like this approach the best. Thanks!
androiddev,3ce8lm,daniel_sk,2,Wed Jul 8 00:33:56 2015 UTC,"https://github.com/inloop/AndroidViewModel  The presenter (ViewModel) is created with the Fragment and the instance is kept during orientation change. The presenter (ViewModel) is discarded once you leave the fragment or activity. This makes the most sense to use, because we are not affected by the orientation change - which is something that only the UI should care about."
androiddev,3ce8lm,Zhuinden,1 point,Wed Jul 8 09:31:29 2015 UTC,thanks for this!
androiddev,3ce8lm,jackhexen,1 point,Wed Jul 8 23:59:08 2015 UTC,"Both of them work.  Although if you want to go all the way, you could use Mortar scopes that contain a dagger module which provides the presenter.   But you typically either use the retained headless fragment,  or you have the presenter in the Application class. having them in the application component for dagger2 just makes that a slight bit less obvious."
androiddev,3ce8lm,vladlichonos,1 point,Tue Jul 7 06:22:50 2015 UTC,The article you're referring to does not suggest you to use static presenters. That would be very stupid. The static presenter is used only in the first example for demonstration purposes.
androiddev,3ce8lm,bart007345,1 point,Tue Jul 7 17:09:36 2015 UTC,"After research on possible solutions and trying out few, I ended up with this one. This is a good base approach to retain presenters and their states in a separate fragment holder (setRetainState=true). I am okay with using fragments so, this could be a good options for foundation of large scale apps."
androiddev,3ce8lm,Zhuinden,-11,Fri Jul 10 21:46:46 2015 UTC,"My apps generally lock the orientation so don't have to worry about this. However we had a bug recently with nexus 7. It always starts the activity in portrait but we then change it landscape causing issues. Other devices don't do this and respect the orientation I set.  My solution was to let the screen fully redraw including the network request. However, network requests are cached by okhttp/retrofit so the second call actually gets it's result from the cache.  Storing activity state was difficult in this case, so I went with this cheat. The presenter is new'd up in onCreate() each time.  Not saying this is the right solution in all situations."
androiddev,3ce8lm,bart007345,3,Tue Jul 7 06:07:01 2015 UTC,Locking orientation just hides the errors. It's the best way to test the stability of your app.
androiddev,3ce8lm,jackhexen,0,Tue Jul 7 14:22:00 2015 UTC,Locking orientation is a business requirement in my case. Glad I have it!
androiddev,3ce4i5,eliasbagley,2,Tue Jul 7 05:06:21 2015 UTC,"The basics of migration are the following,    Modules are still modules  every module gets its own component which specifies the instances provided by the modules like an interface  plusTo becomes component dependency injects becomes void inject(YourClass yourClass) in the component.    Something you gain is that due to no reflection,  it works with proguard without any extra rules.  Dagger 1.1 and above did not work with proguard.   Also worth noting that dagger 1 seemed to support base class injections (you inject the base and with that you inject the subclass dependencies too),  well you cannot so that with dagger2 without reflection magic."
androiddev,3ce4i5,Zhuinden,3,Tue Jul 7 06:20:18 2015 UTC,"Also worth noting that dagger 1 seemed to support base class injections (you inject the base and with that you inject the subclass dependencies too), well you cannot so that with dagger2 without reflection magic.   One workaround is having an abstract method in all your activities, methods, etc. that you invoke in your base class with your component as a parameter and let each concrete class inject itself."
androiddev,3ce4i5,Serandel,1 point,Tue Jul 7 08:08:01 2015 UTC,"Yes, that's what I ended up doing personally. But you can't just call BaseActivity onCreate() { super.onCreate(...); appComponent.inject(this); ...} and magically expect it to inject the dependencies of its subclasses, it will inject only the @Inject annotated fields of BaseActivity."
androiddev,3ce4i5,Zhuinden,1 point,Tue Jul 7 10:49:13 2015 UTC,Doesn't sound too bad - do you think it's worth upgrading existing projects to?
androiddev,3ce4i5,Zhuinden,1 point,Tue Jul 7 06:39:09 2015 UTC,"If you're using Proguard, then definitely.  The only thing that's kinda confusing at times is the scopes. If you have only one component and specify a @Singleton on that component then things don't get weird, but the moment you have component dependencies, it demands to have a subscope.  Anyways, I personally prefer dagger2 to dagger1 because you have to add the void inject(YourClass yourClass) instead of injects={YourClass.class} which only crashed on runtime."
androiddev,3ce4i5,JakeWharton,3,Tue Jul 7 10:51:22 2015 UTC,"the moment you have component dependencies, it demands to have a subscope.   It can also be unscoped (new instance every time).   instead of injects={YourClass.class} which only crashed on runtime.   If you properly set up your module dependencies using addsTo and includes this would be a compile-time error. Granted, it's easier to get this right in Dagger 2, but saying ""only"" here is incorrect."
androiddev,3ce4i5,cypressious,1 point,Tue Jul 7 14:51:34 2015 UTC,Every module gets its own component? Not strictly necessary.
androiddev,3ce4i5,Zhuinden,1 point,Tue Jul 7 09:08:27 2015 UTC,"...right, I should rather say; every module must be bound to a component that makes the dependency provided by the module available through provision methods."
androiddev,3ce4i5,JakeWharton,2,Tue Jul 7 10:48:05 2015 UTC,"That statement is a bit misleading. You can have modules whose sole purpose is provide types to other modules but whose dependencies are never exposed in the component.  An example would be providing an HTTP client and all its infrastructure (executors, cache directories, etc.) and another module which takes that HTTP client and wraps it in, say, a Retrofit RestAdapter. And then other modules could require a RestAdapter and expose FooService and BarService interfaces, the latter two being the only types exposed in the component."
androiddev,3ce4i5,jackhexen,2,Tue Jul 7 14:49:05 2015 UTC,"The only reason why I moved to Dagger2 is because I want to know EXACTLY the lifetime of my scopes. If my activity disappears I want to be 100% sure that it will not leak. Dagger1 does not have a such guarantee, so I did not use it for View layer, but now I can use Dagger2 for views."
androiddev,3ce4i5,prlmike,1 point,Tue Jul 7 19:31:26 2015 UTC,If you need fine grained control of scope or proguard then upgrade. Otherwise dagger 1 does everything dagger 2 does. There was no visible speedup in our app that is managing 100+ classes with dagger.
androiddev,3ce4i5,ZakTaccardi,1 point,Tue Jul 7 11:15:08 2015 UTC,"The Dagger 2 API is a lot simpler in my opinion. No module overrides though, which is a bummer."
androiddev,3ce4i5,Zhuinden,1 point,Tue Jul 7 12:33:25 2015 UTC,I think that the lack of that feature is almost a bug.  How the hell are you supposed to easily mock a module if you cannot extend from it?
androiddev,3ce4i5,ZakTaccardi,1 point,Tue Jul 7 14:20:56 2015 UTC,"You can extend a component, though."
androiddev,3ce4i5,burntcookie90,1 point,Tue Jul 7 14:35:59 2015 UTC,"One major thing is that there is zero reflection, which will have a significant speed boost"
androiddev,3ce4i5,cypressious,4,Tue Jul 7 06:05:02 2015 UTC,I thought that was one of the benefits of Dagger over Guice in the first place? Does Dagger 1 only do reflection in certain cases?
androiddev,3ce4i5,JakeWharton,0,Tue Jul 7 06:38:30 2015 UTC,The only thing involving reflection in Dagger 1 is the call to inject(this). In Dagger 2 there is none whatsoever.
androiddev,3ce4i5,cypressious,6,Tue Jul 7 09:07:10 2015 UTC,"This is not (strictly) true.  Calling ObjectGraph.create has to do Class.forName lookups on the generated module adapters. Calling ObjectGraph.inject also has to do a Class.forName lookup the first time for the generated inject adapter. This is technically reflection, but it's very fast reflection as it's just class loading which is similar to if regular bytecode needed to reference a new class.  For comparison, when you use a LayoutInflater to inflate a layout from XML it will do a non-cached Class.forName lookup on every tag."
androiddev,3ce4i5,Pnikosis,1 point,Tue Jul 7 14:44:36 2015 UTC,"TIL. Thanks, Jake."
androiddev,3ce4i5,burntcookie90,4,Tue Jul 7 15:07:36 2015 UTC,"I wouldn't say ""significant"" unless you are injecting several hundreds of dependencies at the same time."
androiddev,3ce4i5,JakeWharton,1 point,Tue Jul 7 09:41:26 2015 UTC,"True, I suppose significant is a bit of an overstatement"
androiddev,3ce4i5,burntcookie90,3,Tue Jul 7 13:59:11 2015 UTC,Actually there's zero performance difference for injection. Once the graph has been linked (which Dagger 1 does at runtime and Dagger 2 does at compile time) the act of injection effectively uses the same generated code between both versions.
androiddev,3ce4i5,JakeWharton,1 point,Tue Jul 7 14:46:32 2015 UTC,"Ah, I remember something about this from the google (was it greg kick?) dagger 2 intro video a while back. Sorry for the misinformation then!   So performance boost will be seen at the linking stage though? (Since it's already linked for Dagger2)"
androiddev,3ce4i5,artem_zin,2,Tue Jul 7 14:55:30 2015 UTC,"Oh yes. Performance and memory consumption are vastly better. Dagger 1 wasn't a hog, per say, but Dagger 2 is a lean beast in this regard."
androiddev,3ce4i5,Zhuinden,-1,Tue Jul 7 15:10:31 2015 UTC,"First reason why I've moved my own and work projects to the Dagger 2 — newer version, as Software Developer I like new things if they don't make my life worse.  Second reason — I'm tired of adding classes to the injects list in Dagger 1, but I have to say that you'll have to do same with Components in Dagger 2 via declaring methods in the Component interface, so whatever.  Third reason — no reflection at all, which is great for application start time.  Otherwise, I didn't find huge benefits from Dagger 2 in compare to Dagger 1.  Also, looks like Square will support Dagger 1 for some time, because several times Jake noticed that they are not using Dagger 2 and that they are pretty happy with Dagger 1."
androiddev,3cezql,mikbob,2,Tue Jul 7 11:53:23 2015 UTC,Mee to experienced the same for first android app. Maybe your first app takes this much time.
androiddev,3cezql,sagarsiddhpura,1 point,Wed Jul 8 10:56:47 2015 UTC,"Is there something specific in your application ? In my case, a publication take something like 1h - 2h"
androiddev,3cezql,f0rexperts,1 point,Tue Jul 7 12:10:41 2015 UTC,I submitted a new (relatively simple) app yesterday and it was up in 2 or 3 hours.  Does your app use a lot of permissions? Or do anything unusual? That might explain it. I believe they're all manually looked over now before publication.
androiddev,3cezql,internetgoblin,1 point,Tue Jul 7 12:11:58 2015 UTC,It doesn't use any permissions
androiddev,3cezql,dj_darkhorse,1 point,Tue Jul 7 12:23:08 2015 UTC,Have you missed a required field or checkbox?
androiddev,3ceamu,mrcartmanezza,13,Tue Jul 7 06:13:21 2015 UTC,No single technology is ever going to be 'important to your career'. What's important is a willingness and ability to learn.   Could you learn RX if you needed to? Are you interested in learning new technologies to become a better developer? These are the kind of questions that matter. Not 'do you currently know how to implement this one particular pattern or technology'.
androiddev,3ceamu,timusus,5,Tue Jul 7 09:58:33 2015 UTC,"No single technology is ever going to be 'important to your career'   Agreed.  No single language is also likely to never  be important.  After developing for 22+ years of developing ... platforms, tools, languages, libs come and go.  Having intimate knowledge in a language like C or C++, plus deep knowledge in the language you develop in, plus having good knowledge of the platform, plus having medium knowledge in libs/sdks,etc usually makes the best developers and make you most desirable to employers."
androiddev,3ceamu,kireol,16,Tue Jul 7 12:55:54 2015 UTC,"Google, Facebook, and plenty of other major companies don't use RxJava. It's great, but it certainly shouldn't be considered a deal breaker."
androiddev,3ceamu,pandanomic,2,Tue Jul 7 07:34:43 2015 UTC,I wonder why they don't.
androiddev,3ceamu,ZakTaccardi,0,Tue Jul 7 19:07:22 2015 UTC,"Because they can't teach 999999 developers. Most developers can't get an advanced tech, sad but true."
androiddev,3ceamu,jackhexen,1 point,Tue Jul 7 19:36:15 2015 UTC,"Google could easily use it in their closed source apps, but I'm not sure if they do at all."
androiddev,3ceamu,ZakTaccardi,6,Wed Jul 8 01:34:58 2015 UTC,"There is a range of companies from some rolling their own stack based off J2EE knowledge to those using pre-alpha Android-centric libraries.  Google is not moving to RxJava ever. RxJava will never be mandatory, same as Volley, Retrofit or your ORM of choice aren't. Knowing programming enough to use any framework is more important than the framework itself."
androiddev,3ceamu,pakoito,6,Tue Jul 7 09:37:41 2015 UTC,"I regularly give interviews for senior position in my android team (10 members, aiming to go to 20 before 2016). Whether you know Dagger, Rx, ... is extremely low in the list of things care about, even for senior positions. For a senior, knowing that the lib exists and having an opinion on Reactive Extensions is expected though. What we really want is somebody able to pick up a tool and : -understand it quickly -fork it / rewrite it / patch it if it does not fit our requirements. -have a deep understanding of the platform and Java in general, so he/she can efficiently choose an adapted solution (whether it is using an existing lib, a fork, a rewrite or a patch).  Note that it is good for your engineering culture to get accustomed to new ideas like RxJava, Rust, Kotlin, Swift, ... it gives you good insights on engineering problems."
androiddev,3ceamu,xqjt,2,Tue Jul 7 15:29:55 2015 UTC,"From my experience when I mention Rx or NoSQL reactions are usually indicating that they heard of it. Maybe had used it.  Just because this sub is pretty much crawling with Rx, Realm as of late, doesn't indicate a trend. That applies to any tech you see here. SO questions will be a better indicator what people are and will be expecting.  Personally, if I was hiring, knowledge of Rx would be a strong advantage. Provided he is not I will rewrite this shit to a new stack I found, because it's shiny and new."
androiddev,3ceamu,el_bhm,2,Tue Jul 7 10:12:47 2015 UTC,"One problem is multi-threading is very complicated, and how its done differs from platform to platform. Android has AsyncTasks, iOS has something else, etc etc. The best solution to this is ReactiveX. An iOS dev who understands ReactiveX and look at your Android code and know what's going on, and vice versa.  If you are asking should you learn or not learn RxJava - I think the answer is a definite yes."
androiddev,3ceamu,ZakTaccardi,2,Tue Jul 7 19:06:51 2015 UTC,"It's not a requirement, but it's a huge advantage to understand as an Android Dev.  Understanding certain libraries are key to Android development. Some of those libraries are:   Retrofit Dagger 1/2 ButterKnife (not really necessary, but my goodness does it improve code legibility) Support Libraries GSON/Jackson/or another JSON -> object library. (There are two types of programmers, one that manually loops through a JSON object to populate data fields, and the other than knows it can be deserialized quickly and easily through a library. The latter is much better).   The best programmers understand that nothing is perfect. Every code design decision comes with sacrifices. Google does some amazing stuff, but they are not perfect - look how hard Android is to test. Dagger 2 does some things much better than Dagger 1, but loses some functionality in the process. Everything needs to be taken with a grain of salt, and experience with a library is just another tool in your toolbelt.  I find RxJava to be an awesome, multi-functional tool that can hack away at all sorts of nails, so I highly recommend it."
androiddev,3ceamu,ZakTaccardi,1 point,Tue Jul 7 19:06:02 2015 UTC,"I am sorry if my question may sound stupid, I did not use ButterKnife, but I tried to approach it and read about it. I just want to hear your feedback whether Data Binding from Google is replacement for ButterKnife or there is still use case for ButterKnife?"
androiddev,3ceamu,vladlichonos,1 point,Tue Jul 7 22:42:43 2015 UTC,"I haven't used the data binding library yet, but they both complement and compete with each other in my mind.   For simple views it might be easy to bind everything solely with the data binding library. For more complex cases, ButterKnife will definitely come in handy.  You can see here for more details https://www.reddit.com/r/androiddev/comments/3beofj/butterknife_700_released/"
androiddev,3ceamu,ZakTaccardi,-13,Wed Jul 8 01:33:50 2015 UTC,I would avoid a company that doesn't have a good reason to not use RxJava and if I was a recruiter I would not hire an Android dev that at least doesn't show interest in learning reactive programming.  The concept of RxJava is actually simple when you grasp it. It's much better and simpler than callback/eventbus hell.
androiddev,3ceamu,entropio,5,Tue Jul 7 06:25:51 2015 UTC,And close to no dev would want to work in a workplace with a such bias.  Reactive is great and broadens the horizons. But at no point it is a foundation of Android development.
androiddev,3ceamu,el_bhm,-3,Tue Jul 7 09:54:49 2015 UTC,"disagree strongly. If I was choosing a company that used the latest technologies over one doing vanilla Android, I pick the former.  Right now, RxJava is mandatory on every project I am involved with along with Retrofit."
androiddev,3ceamu,bart007345,3,Tue Jul 7 12:35:23 2015 UTC,"Personally, I'd be looking for a company that doesn't mandate what frameworks I can leverage to build apps. I'd want a company that gives me the flexibility to choose the most suitable frameworks on a per-project level."
androiddev,3ceamu,timusus,-2,Tue Jul 7 13:07:48 2015 UTC,and if you kept to the same old technologies you'd been using for x years?
androiddev,3ceamu,bart007345,1 point,Tue Jul 7 13:16:07 2015 UTC,I don't understand the question.    I'd want a company that gives me the flexibility to choose the most suitable frameworks on a per-project level.   That means old technologies and new.
androiddev,3ceamu,timusus,-4,Tue Jul 7 13:29:39 2015 UTC,"and if you chose to ignore new, better technologies and stick with the ones you knew?"
androiddev,3ceamu,bart007345,2,Tue Jul 7 13:37:51 2015 UTC,"Then I wouldn't be a very good developer, the company would hopefully recognise that, tell me about it, I'd improve or I'd lose my job..?  Of course I think a good developer should learn the ""better technologies"".  There's still an important element of trust. If my employer is making decisions on my behalf because they don't trust me to do so, then we have a much more serious problem, and again, it's not somewhere I would personally want to work."
androiddev,3ceamu,timusus,-3,Tue Jul 7 13:47:36 2015 UTC,"Then I wouldn't be a very good developer, the company would hopefully recognise that, tell me about it, I'd improve or I'd lose my job..?   Or we don't waste our time and ask if the developer knows highly regarded technologies that are far superior to the alternatives.  And we're back to the OP's original question. So yes, RxJava is very useful to your career."
androiddev,3ceamu,bart007345,1 point,Tue Jul 7 14:15:03 2015 UTC,"Your mistake here, and my point is that knowing well regarded/new technologies does not necessarily mean you're a better developer.   You obviously don't agree, and that's cool. I think you're probably just trying to say that someone who knows RXJava is likely to be someone who cares about learning new code. What's funny is that the workplace practice you're trying to encourage, where developers are forced to use certain technologies, is the exact kind of workplace that could produce a developer who knows RXJava but it's interested in becoming a better programmer!   I suspect you're reading this in search of a clever, succinct response to prove me wrong, rather than actually trying to understand my point."
androiddev,3ceamu,timusus,2,Tue Jul 7 22:07:45 2015 UTC,"I really don't understand these blanket statements.   ""Your company is bad if they can't justify not using the latest technologies... ""  ""I wouldn't hire you if... ""  ""If you don't use unit testing you're a terrible developer...""  There are plenty of companies out there that simply don't need to use this stuff. Just because it solves a specific set of problems really well, doesn't mean it's a necessity for everyone.   For some, implementing RX is overkill. Why go down this path if you already have a solution that's readable, maintainable, portable, which you and your whole team understand? I don't think you should ever have to justify not learning and implementing a new technology or pattern. If your code works, it makes sense, it doesn't crash, it gets the job done, it's readable and maintainable, then why the hell should you do anything different? This sounds like premature/over optimisation to me.   Now, I'm not saying 'don't learn new stuff'. I love learning, improving my skills and knowledge in the pursuit of a better version of myself. But I don't know RX, I don't use unit testing, and I'm a competent developer and an asset to my team. I plan to learn RX in the future, but I'm not chastising myself because I'm not using it right now.   Not every app dev company does what you do. Not all their apps are the same as the ones you build. Their skills are different. They have skills you might not even realise are useful to you.   I think that, in contrast to what you seem to seek in a good developer or good company, the best people to work with and work for are those who are flexible, patient and willing to learn. Not those who are stubborn about how you should write your code and which technologies/patterns you should use."
androiddev,3ceamu,timusus,1 point,Tue Jul 7 09:53:19 2015 UTC,"I completely agree with you. Porting a huge project to Rx if everything works is not a best idea, this what I meant by a good reason, there are plenty of them.  My point was is that ignoring reactive programming is a bad sign, you should at least be interested in the RxJava even if you will not work with it.  Sorry, looks like my post sounds like ""you must know RxJava perfectly!"". No, you don't, but as with all programming technologies you should be aware of it and don't be ignorant."
androiddev,3ceamu,entropio,1 point,Tue Jul 7 12:33:18 2015 UTC,"Yeah, fair enough.  I totally agree that being interested and willing to learn this stuff is important and will make you a better developer..  I just take issue with the 'I would avoid a company that doesn't have a good reason to not use RxJava'. I don'r think using a new and exciting framework is a reason to work or not work somewhere. What's important is the company is flexible and is willing to use whatever is most suitable to the project at hand."
androiddev,3ceamu,timusus,-1,Tue Jul 7 13:11:00 2015 UTC,"If I have 2 candidates, one who knows RxJava and one who doesn't, I'll pick the RxJava candidate, all other things being equal.  The best developers are those looking to improve what they do over time. Look oustide the Google sanctioned way to get things done. Sure, its not always possible to reimplement legacy apps.   I'm puzzled by your statement that you don't need unit tests. Unless your platform prohibits you, you should be doing it. Any non-trivial codebase will benefit. The only people I come across that don't believe in unit testing are inexperienced developers or have worked with the same software stack for a long time and don't know how to unit test and are afraid of change."
androiddev,3ceamu,bart007345,1 point,Tue Jul 7 12:34:44 2015 UTC,"Of course, 'all other things being equal'. They never are though, and I'm trying to stress the point that finding a good developer isn't just about whether or not they know a certain technology/framework/pattern. It's so much more, but I see over and over in /r/AndroidDev managers saying they wouldn't hire someone for this reason or that, and it's rarely about what really counts.   I think what matters in a candidate is their enthusiasm, eagerness to learn, interest in the platform, experience and ability. Most of these things are very hard to determine. Trying to determine these qualities based on whether someone possesses very specific knowledge is just silly. Don't get me wrong, I'm totally 100% on board with the idea that the best developers want to improve, learn, etc. and learning new frameworks etc. is definitely the way to go about that. Whether someone knows a specific framework is not a good way to measure someones willingness to learn new frameworks.  I knew I shouldn't mention unit tests - there are so many advocates for it (obviously for good reason). I don't have any belief one way or another towards unit testing. It's not something I use, and in my few years of experience, it's not something I've needed to use. I would like to learn about unit testing, and I'd like to see how it could benefit my code. However, I'm not a worse developer for not having used it. I'm just less experienced, as you said. Experience should factor into someones decision as to whether they should hire me, but it would be shortsighted to say 'no way, you don't use unit tests'. 6 months from now I might be a unit test wizard."
androiddev,3ceamu,timusus,1 point,Tue Jul 7 13:05:49 2015 UTC,"I think what matters in a candidate is their enthusiasm, eagerness to learn, interest in the platform, experience and ability.   Like you said, hard to determine. I can pretty much say if they know RxJava, you can tick all those boxes. At present, it makes a candidate stand out. You may not like it, but thats how I see things.   I'm not a worse developer for not having used it.   Unless you're a junior, you are."
androiddev,3ceamu,bart007345,4,Tue Jul 7 13:24:49 2015 UTC,I wouldn't hire you based on your attitude in this thread.
androiddev,3ceamu,Deafdev,0,Tue Jul 7 13:39:10 2015 UTC,fair enough. Software development needs strong opinions fostered through experience of what works. I want to keep moving forward and trying new things. I'm at a point now where I know the key technologies that improve my chances of successfully delivering a product to my employer. They may disagree with my attitude on occasion but they recognise results.
androiddev,3ceamu,bart007345,1 point,Tue Jul 7 14:21:08 2015 UTC,"I think it's a huge oversight on your part to assume anyone who knows RxJava is enthusiastic, eager, interested or experienced. Not everyone using the latest technology is doing so for self improvement. Plenty of developers would be using this because they're told to do so (for better or worse).    Unless you're a junior, you are (a worse developer for not having used RxJava)   I just can't get on board with this kind of belief. All senior Android developers who are yet to delve into RxJava are worse developers than their peers who have? Fuck that. That's not how it works."
androiddev,3ceamu,timusus,2,Tue Jul 7 13:36:52 2015 UTC,"you misquoted me. Read it again, I was talking about unit testing."
androiddev,3ceamu,bart007345,1 point,Tue Jul 7 14:17:57 2015 UTC,"My bad. Replace 'RXJava' with 'Unit Testing' or any other technology, framework or pattern and my point stands."
androiddev,3ceamu,timusus,1 point,Tue Jul 7 22:09:34 2015 UTC,"Unit testing isn't a technology, framework or pattern. Its a philosophy. I can tell I'm not going to convert you. All I ask is you admit there is a world of development outside Android that has been running for years. Lessons learnt there are still applicable to Android. Its rare nowadays to find core java developers who don't believe in unit testing, one day Android will be the same. I'm already there and Google have made more of an attempt to move towards testability in the last couple of years (Espresso, stubbed sdk for unit testing)."
androiddev,3ceamu,bart007345,2,Tue Jul 7 23:03:10 2015 UTC,"Of course I'm willing to admit to that, I totally agree with you.  You shouldn't be trying to convert anyone though. You should try and expose people to these technologies and make recommendations, and let them make their own decisions.  You're also dead wrong if you think, based on our back and forth here, that I'm not someone willing to try this stuff out. I definitely intend to start playing with both RxJava and unit testing. It's interesting to me, and I like learning new things.  You're trying to fit devs into boxes based on what they've been exposed to, confusing it with what they 'believe in'. That's the attitude that I disagree with. I agree that new technologies are important to learn. I don't agree that someone should be forced to learn it and that makes them a good developer."
androiddev,3cgdxt,Sir_not_sir,2,Tue Jul 7 18:28:20 2015 UTC,"Bluestacks is an emulator.  I have used it and Genymotion.  I like Genymotion a lot better, you can just drag apks over the window to install.  It also has fake location and camera controls."
androiddev,3cgdxt,MisterJimson,1 point,Tue Jul 7 20:52:08 2015 UTC,I found it odd that BlueStacks included VirtualBox but I had to download it separately for Genymotion. I didn't see anything in the FAQ about it though.
androiddev,3cgdxt,MisterJimson,2,Wed Jul 8 00:49:43 2015 UTC,The Genymotion installer installed it for me.  But yeah I can run it as a separate program.
androiddev,3cgdxt,timeconsumerii,2,Wed Jul 8 01:27:41 2015 UTC,"Genymotion! Runs on VirtualBox. Fast, clean, command line tools, Android Studio integration, it's excellent. Free and paid levels too. Try it!"
androiddev,3cgdxt,FlameDra,1 point,Tue Jul 7 22:51:17 2015 UTC,I found it odd that BlueStacks included VirtualBox but I had to download it separately for Genymotion. I didn't see anything in the FAQ about it though.
androiddev,3cg94w,DarkAnother,2,Tue Jul 7 17:56:17 2015 UTC,ADM...
androiddev,3cg94w,lolkittens,1 point,Tue Jul 7 20:18:45 2015 UTC,"If it's your own app, you can instrument it with Facebook's Stetho and use Chrome Dev Tools to browse the view hierarchy.  Doing so on arbitrary non-debuggable APKs, though, I'm not sure."
androiddev,3cg0m0,kevindesai777,2,Tue Jul 7 16:57:43 2015 UTC,This tells you how to build the api client: https://developers.google.com/places/android/start  This tells you how to get results from autocomplete: https://developers.google.com/places/android/autocomplete  The sample provided is fairly minimal and has an autocomplete textview: https://github.com/googlesamples/android-play-places/tree/master/PlaceComplete/Application/src/main/java/com/example/google/playservices/placecomplete  Is there a certain part you are unclear on?
androiddev,3cg0m0,ErectionalOfficer,1 point,Tue Jul 7 17:35:48 2015 UTC,I'll try to implement this and let you know. Thanks
androiddev,3cfrj1,avipars,1 point,Tue Jul 7 15:54:04 2015 UTC,"It really depends on what kind of app we are talking about, and how it's currently built.  Are you using anything in Play Services (things like maps, GCM, etc)? If so, you'll need to find alternatives there. Amazon has some guides on that if you need some help there. Past that, the current devices are running a forked Android 4.4, with their new beta running forked lollipop. So depending on what you're doing there.... You may need to make some UI changes.   You can buy a Kindle Fire for $99, and is actually a great test device. There is also a submission process, and they do run some test, so keep that in mind if you need to lay out a time line."
androiddev,3cfrj1,ThatOfficeMaxGuy,1 point,Tue Jul 7 16:00:58 2015 UTC,"I bought a Kindle Fire HD 7, running Fire OS 5. My app is pretty simple, the only API that I use is for Advertisements."
androiddev,3cfrj1,mikenomn,1 point,Tue Jul 7 18:16:21 2015 UTC,"Depends on what you're porting. In-app billing / purchasing requires an entirely different implementation depending on the platform and may not be worth it. That said, there are a lot of kindle fires out there so it really depends on how you make your money.  Other APIs (ads, maps, etc.) are fairly trivial to port over. If you do, consider using product flavors to easily build Google vs Amazon versions of your apps."
androiddev,3cfrj1,mikenomn,1 point,Tue Jul 7 16:03:06 2015 UTC,"I don't completely understand product flavors...At this point, I only am using an Ads API...Compared to regular android devices, how many kindle fires do you think are out there?"
androiddev,3cfrj1,mikenomn,1 point,Tue Jul 7 18:18:47 2015 UTC,"I've seen estimates between 5 and 30 million. Not sure, to be honest. I do know that I had about 5% of the traffic for one of the apps I threw into both stores coming from Amazon devices. That said, it depends on your app. Games do pretty well on Fires, apparently.  Product flavors allow you to split your code base into main (shared between flavors) and one for each flavor. It allows you to have a different implementation of say an ""AdProvider"" class; one for Amazon and one for Google. The doc I linked to does a pretty good job of explaining it."
androiddev,3cgeec,philosophicalhacker,3,Tue Jul 7 18:31:18 2015 UTC,"Nice sum up. I’m looking forward to read part 2 (not only because I want to know what the R stands for).  Regarding circular dependencies: Imho I don’t think that circular dependencies are a bad thing as long as you program against an interface and not the implementation:   Presenter program against View interface. This makes your presenter easily testable since you can replace the view with a mock view while unit testing View program against Presenter interface. During testing you can replace the presenter with a mock presenter easily. Therefore view is testable. I guess the problem you face here is that the view (like Activity) is creating a presenter with new Presenter(). But with dependency injection you can inject a MockPresenter while unit testing.   From my point of view circular dependencies are not the problem. Actually, also the Observer pattern has circular dependencies. I.e. Activity implements OnClickListener and displays a Button and registers himself as OnClickListener on the button. Activity has dependency to Button since Activity needs the reference to the Button to register himself. On the other side Button has a reference to the OnClickListener, which actually is the Activity.  From my point of view its completely fine since Button programs against the OnClickInterface. Therefore, it’s not a „hard“ dependency to the Activity (which is the OnClickListener) and I wouldn't call it circular dependency. This is the same as View and Presenter. Presenter is programming against the View interface and therefore completely fine.  If you want to implement a more decoupled MVP then you can add „observable"" properties to the View’s interface like this:   interface Clickable {       void set ClickListener(ClickListener listener);  }   interface MyMvpView {       Clickable getSubmitButton();  }    class MyPresenter implements OnClickListener {        public MyPresenter(MyMvpView view){            view.getSubmitButton().setClickListener(this);       }  }   Please note that this is just a silly and stupid code snipped, just to give you an idea. Maybe this is the more adorable MVP approach, but in my opinion the advantage is marginal compared to the quantity of (over engineered) code you have to write to achieve this. But if you prefer such observable design patterns, then you should have a look at MVVM design pattern.  Regarding invalid state of an object: That’s open to dispute. Does a presenter is in an invalid state without a View? Does a Button is in an invalid state without having set an OnClickListener? Anyway, what’s wrong with passing the view directly in constructor like new Presenter(this)? Mosby has this attach and detach mechanism because Presenter can survive screen orientation changes while view gets recreated, but in Mosby you don’t have to do that explicitly. It’s a feature you can use but you don’t have to nor is there a rule in MVP in general that a Presenter requires to have an attachView() method. It’s just a implementation detail of a certain MVP library.   Nevertheless, looking forward to part 2. I really like such architectural discussions. Definetly a topic on android development that should be taken more seriously. Especially on android software architecture didn't get the attention it deserves."
androiddev,3cgeec,HannesDorfmann,1 point,Tue Jul 7 20:30:56 2015 UTC,These are fantastic points. I've responded to them on my blog because the response is rather long. Its tricky to respond to well-thought out points. :)  http://www.philosophicalhacker.com/2015/07/08/my-response-to-hannes-dorfmann-on-the-circular-dependency-problem/
androiddev,3cgeec,drabred,3,Wed Jul 8 13:54:05 2015 UTC,"Damn, there are so many MVx architectures and articles lately, that I don't even know which one is the way to go :P"
androiddev,3cgeec,jackhexen,3,Tue Jul 7 18:40:33 2015 UTC,You didn't get it again. MVP does not have a circular dependency. MVC has. This is why MVP rules and MVC sucks.
androiddev,3cgeec,jackhexen,-1,Tue Jul 7 18:51:55 2015 UTC,"Hey, jackhexen  I'm not sure what kind of MVP implementation you have in mind, but I'm referring specifically to the one discussed by Square in their ""advocating against android fragments"" article and the one discussed by Hannes Dorfmann in his ""ted mosby"" post. /u/drabred is right: there's been a lot of articles on MVx lately, and its definitely possible that I have in mind an implementation different from the one you're thinking of."
androiddev,3cgeec,bart007345,2,Tue Jul 7 19:01:27 2015 UTC,"A presenter is just an abstraction around a background task to couple it with a view easily.  If one tries to issue commands from a presenter to a view then he is obviously using MVC but not MVP.  Controller needs a view to work. A presenter does not need a view - it just needs a callback interface.  Don't you wish to name a callback a ""circular dependency""? ;)  There is a very clear dependency. View creates Presenter and View depends on Presenter, but Presenter depends only on a callback interface. In most cases the callback interface is View, because it is handy."
androiddev,3cgeec,bart007345,5,Tue Jul 7 19:24:25 2015 UTC,"wow, just when I thought you couldn't come up with anything worse than last time, you've surprised me.   Presenters and Activities violate the principle of single responsibility.   The whole article is complete nonsense. There is no problem with the circular dependency.  If you actually wrote some real code, you'd see that the presenter is easily testable because it communicates with a view interface.  Unit test it by calling presenter methods (like the activity would) and verify the correct view methods are called. Simple.  Testing the activity requires swapping out the presenter for a mock and using it to verify its methods were called correctly when calling the activity methods.  Please find one other resource on the internet that agrees that this is a problem. Your doing a lot of damage by writing these articles and confusing the hell out of newbies."
androiddev,3cgeec,bart007345,2,Tue Jul 7 19:51:40 2015 UTC,Circular dependencies are bad: http://programmers.stackexchange.com/questions/11856/whats-wrong-with-circular-references  1000+ line classes are bad: https://people.apache.org/~fhanik/kiss.html  didn't think I was saying anything controversial.
androiddev,3cgeec,vladlichonos,2,Tue Jul 7 20:08:45 2015 UTC,"the bit you didn't get, because you lack experience of knowing what it actually means is that the presenter is NOT dependent on the view. It has no idea who implemented the view. Maybe its the activity, maybe its the man down the road. It doesn't know!  Stop writing these articles. If you ever get to become a half decent developer, you will come back and cringe that you wrote this crap. The real shame is, your real identity is known. Just pray no interviewer recognises your posts."
androiddev,3chi3n,androidthrowaway321,8,Tue Jul 7 23:14:17 2015 UTC,70k is low? I need a new job....
androiddev,3chi3n,epicstar,3,Wed Jul 8 04:42:20 2015 UTC,"Man, how expensive is living over there? that's 4 times what I make with a little more experience."
androiddev,3chi3n,Furkhail,2,Wed Jul 8 06:09:53 2015 UTC,"Depends on location.   Also stock options, other benefits can differ too."
androiddev,3chi3n,Ooodin,-1,Tue Jul 7 23:46:48 2015 UTC,3% 401k downtown Chicago
androiddev,3chi3n,pheonixblade9,2,Wed Jul 8 00:11:06 2015 UTC,"www.glassdoor.com  For the record, I made over 90k with a year of experience in Seattle.  But we're basically silicon valley 2.0 with cost of living here."
androiddev,3chi3n,hyappie,1 point,Wed Jul 8 06:44:58 2015 UTC,"Depends. Where are you located? Companies provide compensation in forms more than just money via paychecks. Healthcare, stock options, ESPP, 401k, travel allowances etc. You might want to inquire about those as well in addition to the paycheck."
androiddev,3chi3n,LadyTesla,-1,Tue Jul 7 23:21:00 2015 UTC,3% 401k downtown Chicago
androiddev,3chi3n,zydeco100,1 point,Wed Jul 8 00:10:56 2015 UTC,You should look at /r/cscareerquestions. They have lots of tools for info like this.
androiddev,3chi3n,samiraekrami,1 point,Wed Jul 8 03:00:15 2015 UTC,How do you know 70K is low?  What other s/w Dev experience do you have?
androiddev,3cff1g,the-k1ngp1n,2,Tue Jul 7 14:18:58 2015 UTC,I did a writeup on some clean coding practices we do  http://blog.liffft.com/2015/06/10/modern-android-application-architecture-development-part-2-architecture-basics-project-organization-and-clean-code/
androiddev,3cff1g,graemeharnish,2,Tue Jul 7 22:07:58 2015 UTC,"Try to split-up your code more. For example your FavouritesUtil class could be implemented as Singleton implementing the Favorites interface. Every class interacting with the favorites should get a Favorites object passed in the constructor.  Favorites  public interface Favorites {     void addSubRoute(String subRouteName);     void addStop(String stopInfo);     void removeRoute(String routeName);     // ... }   FavoritesImp  public final class FavoritesImp implements Favorites {      private static FavoritesImp sInstance;     private final SharedPreferences mPref;      private FavoritesImp(@NonNull final Context ctx) {         mPref = ctx.getSharedPreferences(""name"", Context.MODE_PRIVATE);     }      public static FavoritesImp instance(@NonNull final Context ctx) {         if (sInstance == null) {             return sInstance;         }         sInstance = new FavoritesImp(ctx);         return sInstance;     }      @Override public void addSubRoute(String subRouteName) {         // mPref     }      @Override public void addStop(String stopInfo) {         // ...     }      @Override public void removeRoute(String routeName) {         // ...     } }   To get an Favorites instance inside of an activity: Favorites f = FavoritesImp.instance(this);  You can also remove your // Constants section and instead add a static import, example:  import static ca.simba.grtwaterloo.Constants.WEEKDAYS_ALL;  no need to write: private static final String WEEKDAYS_ALL = Constants.WEEKDAYS_ALL;"
androiddev,3cff1g,Paradiesstaub,4,Tue Jul 7 15:23:36 2015 UTC,"It's really not worth dealing with a separate interface and implementation unless you're trying to hide the implementation or you plan on having multiple implementations. The mental overhead of not being able to trace directly in the IDE what actual code is being executed is not worth it. And if you do get to the point later where you want to have multiple implementations, most IDEs have a pretty good ""Extract Interface"" refactoring which will take care of things for you.  Especially for a singleton, it seems not worth it, as there won't be multiple implementations."
androiddev,3cff1g,s73v3r,1 point,Tue Jul 7 17:47:47 2015 UTC,"Good points all around. I've never thought to use an interface to implement singleton, but it looks like the right idea?  While were on the topic, what do you think about my activity class?  Any positives / negatives?  Did you see how I broke the code usually in the onCreate method into several separate methods? Is that how it's done in industry?"
androiddev,3cff1g,Paradiesstaub,2,Tue Jul 7 16:10:36 2015 UTC,"I can't speak for the industry – I'm working as Android dev since a couple of years.  SharedPreferences needs filesystem access which means, like when using a database, you need only one object to access it. In the end you want your favorites to do the job, the how – in this case using SharedPreferences – is an implementation detail which should be encapsulated in your implementation. Another possible solution would be to to extend the Application Singleton class and get your Favorites object by a getter from there or to use dependency injection like Dagger2.  Using an interface instead of a normal class makes it easier to test your code. When writing a test for your Foo class which needs a Favorites object in the constructor, you can just pass a mock-implementation.  Ah, and use Support Annotations and annotate all objects if they can be null or not with @NonNull, @Nullable or should run on the @UiThread... Then execute in Android Studio: Analyze > Inspect Code...   what do you think about my activity class?   Too long, too many member variables.   Use Butter Knife and replace all  mRecyclerView = (RecyclerView) findViewById(R.id.rvScheduleTo);  with: @Bind(R.id.rvScheduleTo) protected RecyclerView mRecyclerView; Move the variables marked with // Business Logic into a model which implements the Parcelable interface (info). Access your database using a DAO interface implementation and not through the DBHelper directly. Same as with the favorites, keep the implementation encapsulated. Create a separate adapter class. It's cleaner and super simple, just name it something like StopTimesAdapter and everyone will know what they get. The adapter code will be short (fit on a single screen), so readability++ :) Your onCreate() is okay, keep it shout and readable. Make all classes final if you don't want someone to sub-class it (I changed the class template in Android Studio to do it automatically for me)."
androiddev,3cff1g,bart007345,1 point,Tue Jul 7 16:47:52 2015 UTC,Thanks! Every piece of advice no matter how small helps and I appreciate it.
androiddev,3cff1g,bart007345,2,Tue Jul 7 16:55:00 2015 UTC,Oh and do all network retrieval off the main thread by default. You won't regret it.
androiddev,3cff1g,Paradiesstaub,1 point,Tue Jul 7 18:16:18 2015 UTC,I've used background threads once or twice in my app for really intensive stuff by creating an inline implementation of Runnable and then passing it to a thread to be run. I found that it made my code very messy.  Kind of like this class starting at line 191.  If I plan to use a background thread for all non-UI computations whats the best way to do this? Should I create a bunch of separate classes that extend Async Task or Runnable and then run call them in my activity class using a background thread?
androiddev,3cff1g,bart007345,2,Tue Jul 7 19:09:11 2015 UTC,"I've never seen code like that. A Runnable automatically runs in the background.  You could use Async, its the official way. I use RxJava."
androiddev,3cff1g,bart007345,2,Tue Jul 7 19:36:23 2015 UTC,LoaderManager.LoaderCallbacks is the way to go to async load data (docs).
androiddev,3cc51f,autom8r,2,Mon Jul 6 19:34:15 2015 UTC,"Had the same problem with a view I had in the action toolbar, would push the views in the fragment to the bottom. Really annoying, especially when you in the process of learning all the new support library stuff and expect the error to be in your code."
androiddev,3cc51f,Furyan,1 point,Tue Jul 7 09:58:14 2015 UTC,"Yes, I agree it's very annoying, there appears to be lots of these annoying issues in Android. Frustrating."
androiddev,3cc51f,TiberiusAbadon,1 point,Tue Jul 7 17:24:18 2015 UTC,"I had an issue where views will stick to the bottom of the NestedScrollView.   android:layout_gravity=""fill_vertical""   Adding this solved it for me."
androiddev,3cegxy,ElMokthar,4,Tue Jul 7 07:31:46 2015 UTC,"I think this happens because the emulator is by default locked. If you run your test on your physical device and manually lock it before the test runs, it will behave the same.  If it is the case, you need to add the following to your test build (not for your release build!):   The permission: DISABLE_KEYGUARD In the onCreate of your main Activity:      try {                  KeyguardManager mKeyGuardManager = (KeyguardManager)      ctx.getSystemService(Context.KEYGUARD_SERVICE);                  KeyguardManager.KeyguardLock mLock = mKeyGuardManager.newKeyguardLock(name);                  mLock.disableKeyguard();              } catch (Exception e) {                  e.printStackTrace();              }"
androiddev,3cegxy,lynfogeek,1 point,Tue Jul 7 07:55:02 2015 UTC,"It works, thanks a lot."
androiddev,3cegxy,ContiGhostwood,1 point,Wed Jul 8 19:59:41 2015 UTC,Have you tried omitting the -no-window option to see if you got the same message? I know whenever I do instrumentation/UI test with a device or emulator I always had to have any kind of screen lock disabled so the home screen could be easily accessed.
androiddev,3cf8vy,kevindesai777,1 point,Tue Jul 7 13:25:57 2015 UTC,"These are different things:   18dp, 24dp etc: related to the size it appears on the screen (computing according screen density, http://stackoverflow.com/questions/11581649/about-android-image-and-asset-sizes). Typically, an icon in a toolbar deserves 24 or 36dp. hdpi mdpi etc are related to the device screen density. If you want to put your apk on diet, you can let down mdpi (http://cyrilmottier.com/2014/08/26/putting-your-apks-on-diet/)"
androiddev,3cf8vy,guillaumeyp,1 point,Tue Jul 7 14:01:33 2015 UTC,"The reasoning for leaving out mdpi (in the link you referenced) is a bit misguided IMO.  The file size of an image scales with the square of its dimension size, so the mdpi version takes way less space than the larger ones (one ninth the space of the xxhdpi version). If you have hdpi, xhdpi and xxhdpi versions of a image, then including the mdpi version as well increases the total space used for the resource by 6.5% (meaning the increase in apk size must be less than this percentage). If you are including xxxhdpi versions too that goes down to 3.2%.   No matter how hard I work on these densities, the result will look as horrible as letting Android scaling down the hdpi variant   The author misses an important point that not including an mdpi variant forces lower-spec devices to perform expensive image scaling operations."
androiddev,3cf8vy,denley,1 point,Tue Jul 7 14:42:04 2015 UTC,"I don't get all your figures (+6.5% with mdpi but +3.2% with xxxhdpi ?) but it doesn't matter. Two interesting facts:   Today, according to the android dashboard (link), about 20% of devices have ldpi or mpdi screens (crappy devices for Cyril M.) Most of famous apps on the PlayStore ship /hdpi or above resources (Uber, Whatsapp, Airbnb, Capitaine Train, ..)"
androiddev,3cf8vy,guillaumeyp,1 point,Tue Jul 7 15:05:41 2015 UTC,Do you think that the success of Uber has anything to do with their app being 19MB instead of 20MB? That's the kind of difference we're taking about. Improving the UX for 20% of users is much better than shaving a few percent off your apk size.  Of course if your app requires Android 4.3+ or something and your users on mdpi/ldpi is near zero then you can make the case.
androiddev,3cf8vy,denley,1 point,Tue Jul 7 16:07:41 2015 UTC,"You hit the point: in July, 2015, minSDK=15 (Android 4.0.3) is the norm (source : https://twitter.com/minSdkVersion/status/467113316041490433) and it excludes old devices with low dpi.  I agree with you, size doesn't matter (it's NOT what she said) too much if we are talking about several kB."
androiddev,3cdpz9,redmaniacs,9,Tue Jul 7 02:51:36 2015 UTC,"Keep trying. I know it's not what you want to hear. But keep searching, keep reading. If you want it enough, you'll try, and it'll click."
androiddev,3cdpz9,sellers04,5,Tue Jul 7 04:09:53 2015 UTC,And use Android Studio not Eclipse
androiddev,3cdpz9,504d206d652074686973,1 point,Tue Jul 7 05:51:38 2015 UTC,"Yup. This is going to be frustrating. It won't make sense but once it starts to you'll really appreciate the fact that you put a lot of effort into this and figured it out.  My best advice is to start working towards an idea - think of something you personally would want to use and don't stop googling until you make it. When you discover something cool and you get another idea, write it down and do that next."
androiddev,3cdpz9,gravity_low,1 point,Tue Jul 7 04:23:24 2015 UTC,"Thanks, it looks like it's coming together."
androiddev,3cdpz9,omniuni,3,Wed Jul 8 01:30:40 2015 UTC,"Are you on x86 or AMD64?  Clear everything out. Download Android Studio, decompress it, and launch it. Click for a new project, and it should lead you through the setup. If you can't run it, what error are you getting?"
androiddev,3cdpz9,bart007345,1 point,Tue Jul 7 05:56:31 2015 UTC,Do this and search SO. Chances are it's the issue with 32 bit libraries.
androiddev,3cdpz9,omniuni,1 point,Tue Jul 7 06:11:10 2015 UTC,I'm running x86_64. I think the problem may be that my version of Java is wrong. I'm running 64-bit Oracle Java 9. Studio may be looking for 32-bit. Does this sound correct?
androiddev,3cdpz9,omniuni,1 point,Tue Jul 7 22:24:35 2015 UTC,"That's your problem then. First, uninstall Oracle Java. Just use the OpenJDK 7 that comes with your distribution. You can ignore the warning, it works fine with the OpenJDK. Then, you may need to install some 32 bit libraries to make it work, but for now, make sure everything is AMD64.  You can then try:  sudo apt-get install libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 sudo apt-get install lib32z1   If that doesn't work, post the error you get."
androiddev,3cdpz9,f0rexperts,1 point,Wed Jul 8 00:05:30 2015 UTC,"Well I was playing around with it. I tried getting Java 7 32-bit, but that was getting messy, when I realized that Android Studio was trying to use 'Java-9-Oracle' which is a JRE, not a JDK. It seems to be chugging along doing something with a Gradle with out complaining, so I'm optimistic for the moment.   I'm currently using java-7-openjdk-amd64. What 32-bit libraries would I need?  Update:  KVM is not installed properly... (/dev/kvm is missing) Update 2: Because I don't have hardware acceleration enabled. I'll have to take a look at it later."
androiddev,3cdpz9,EssemG,2,Wed Jul 8 00:29:59 2015 UTC,"Don't worry about KVM, it's mostly useless anyway. Always test with  a real device. Don't mix 32 and 64 bit libraries, you don't need to."
androiddev,3cdpz9,tonylee0707,1 point,Wed Jul 8 01:03:11 2015 UTC,My next problem is getting a connection between my computer and physical device for testing. Linux mint to nexus 7 2013 on Android 5.1.1
androiddev,3ce07a,Jawnnypoo,1 point,Tue Jul 7 04:23:37 2015 UTC,"The app is getting close to feature complete, given the limited nature of the API. Right now, it is targeting the beta API, which can be seen here: http://fakevout.azurewebsites.net/  Let me know if you guys have something you want to input and I will help out and we can chat. Things that are lacking include: -Comments are not sorted properly  (parent/child relationship) -Ability to sort (posts and comments) -Gif loading is terribly slow (using Glide). Not sure why -Linking to users/subverses in comments and posts. and other various things. Would love to have help. So far, the Voat devs have been pretty keen on this project so I would love to see it through so that we can get this pull request accepted and have an official codebase for the Voat app."
androiddev,3ce07a,leggo_tech,1 point,Tue Jul 7 04:29:33 2015 UTC,are you from voat?
androiddev,3ce07a,Digmaster,1 point,Tue Jul 7 19:14:51 2015 UTC,"Doesn't look like it. Voat has a repo marked ""VOAT App Repository"" that this is forked from. This repo has already made a fork request with that one to use it's code. I'm just glad to see an open source VOAT client!"
androiddev,3ce07a,anon0108,1 point,Wed Jul 8 17:55:29 2015 UTC,is this paid or volunteer?
androiddev,3ce07a,anon0108,1 point,Tue Jul 7 11:54:32 2015 UTC,"Sorry, I should have been more clear in the OP. This is non paid."
androiddev,3ce07a,Digmaster,2,Tue Jul 7 13:07:01 2015 UTC,"nah, its all good.  i'm looking to pick up some extra $$$ so if you were voat.com i'd send ya a resume"
androiddev,3ceko3,Roabb,2,Tue Jul 7 08:24:54 2015 UTC,Check out Jake Wharton's RxBindings library on GitHub. Intended tobsit on top of RxAndroid to solve this exact problem
androiddev,3cbu20,ProfessorOakTree,13,Mon Jul 6 18:19:11 2015 UTC,"IMO, it's horrible and very very buggy. Yes those bugs are currently set to be fixed in the next release, but honestly I don't have faith in this design library being stable anytime soon. Google half-assed this library, and it's obvious when you realize none of their apps have any of these problems which means either A) those apps don't use that library or B) those apps do use that library but have those bugs fixed and didn't bother putting those fixes in the public release.    Right now, I only use it for FABs, FloatingEditTexts, and Tabs. CoordinatorLayout is buggy as hell and looked really promising, but it is in no shape to be in any live app. I appreciate Google's effort on it, but it was a very sloppy effort that 3rd-party devs have as-good-as or better implementations of, and that just makes it unacceptable on Google's part, the ones who freaking made the Material Design spec in the first place.    It's even sadder when a lot of the bugs affect Google's own Nexus devices. It's very clear the design library team did not test their library very well when the bugs are prominent on your own devices."
androiddev,3cbu20,QuestionsEverythang,1 point,Tue Jul 7 02:22:07 2015 UTC,"You mentioned you use floating edittexts.  I tried to use them but I found that they lack customizing. I couldn't get them to change underline color, hint color, floating text color etc.  Did you happen to figure those things out?"
androiddev,3cbu20,imsrslyyouguys,1 point,Wed Jul 8 07:43:43 2015 UTC,"Individually, no. But those are based on your theme attributes (colorPrimary, colorControlHighlighted, etc)"
androiddev,3cbu20,QuestionsEverythang,13,Wed Jul 8 14:12:27 2015 UTC,"It's definitely worth switching, but it depends when you plan on releasing your app. There are a whole host of bugs that have been marked as FutureRelease on the bug tracker, and I wouldn't recommend releasing an app with those features yet until the next design support library release."
androiddev,3cbu20,ZakTaccardi,8,Mon Jul 6 20:04:47 2015 UTC,"It really doesn't inspire confidence in the support libraries that even severe bugs are stuck at ""future release"" status for months and months. They need to start doing frequent minor updates instead of just dumping a new major release every few months. Of course, it then comes with a new set of bugs to replace the old ones, and the cycle goes on and on."
androiddev,3cbu20,veeti,2,Mon Jul 6 22:01:47 2015 UTC,"Yeah, it's a bit of a mess with this library, obvious bugs even in the demo app they provided for the library! Frustrating for sure."
androiddev,3cbu20,autom8r,0,Tue Jul 7 02:08:16 2015 UTC,months and months   a month
androiddev,3cbu20,JakeWharton,3,Mon Jul 6 22:08:12 2015 UTC,I'm not referring to just the new design support library.
androiddev,3cbu20,veeti,1 point,Mon Jul 6 22:49:30 2015 UTC,If it's not ready for production how could it possibly be worth the switch?
androiddev,3cbu20,ohsothisisreddit,2,Tue Jul 7 00:41:13 2015 UTC,"Very good point. If you were releasing your app in the next couple months or so, I would use it. By that time, the design library will be more stable"
androiddev,3cbu20,ZakTaccardi,3,Tue Jul 7 01:02:07 2015 UTC,"After working on it for the last few weeks, I'd recommend waiting for the next update. Many of the bugs have workarounds, but some of the worst are outstanding (like CoordinatorLayout/keyboard issues, proper nested fling support)."
androiddev,3cbu20,iPaulPro,1 point,Mon Jul 6 23:19:32 2015 UTC,"The same. Lots of bugs in first release (scrolling/flinging wrong behavior, AppBarLayout has glitches on pre-L, square fab on pre-L). Better to wait for next one."
androiddev,3cbu20,naghtarr,1 point,Mon Jul 6 23:44:49 2015 UTC,"I can tell you the design support FABs work well with the third party snack bar I'm still using. Is yours com.nispok.snackbar by any chance?   I thought about migrating my current snack bar library to the design support one but it doesn't have the same functionality yet.   And I switched over from frame layouts to the coordinator layout (as needed), no hassles so far."
androiddev,3cbu20,KevCron,2,Mon Jul 6 19:09:41 2015 UTC,"Yep, that is the Snackbar library I am using. Does CoordinatorLayout still shift the support FABs when using a 3rd party Snackbar library?"
androiddev,3cbu20,burntcookie90,2,Mon Jul 6 19:13:29 2015 UTC,Probably not because it's heavily dependant on the Behaviors of CoordinatorLayout
androiddev,3cbu20,KevCron,1 point,Mon Jul 6 19:52:37 2015 UTC,"I'm not sure, I'm just shifting them manually."
androiddev,3cbu20,tanis7x,1 point,Mon Jul 6 20:16:19 2015 UTC,"I'll echo what other's are saying- I would definitely migrate, but perhaps not release quite yet (unless you happen to not run into any bugs).  The only thing preventing me from releasing a replacement of my navigation drawer with a NavigationView is a bug that causes a ripple to show in the header layout. Haven't found a workaround yet, but it was marked for a future release (which I am anticipating soon)."
androiddev,3cbu20,trtryt,1 point,Mon Jul 6 23:34:17 2015 UTC,with it's FAB can you change the color dynamically i.e. in code?
androiddev,3cbu20,TiberiusAbadon,1 point,Tue Jul 7 00:59:23 2015 UTC,Is there a reason why they wouldn't let us developers contribute?
androiddev,3cbu20,QuestionsEverythang,0,Tue Jul 7 04:01:45 2015 UTC,"Because then they would need another reason to reject competent Android devs in job interviews by asking them insane CS questions \s  But no seriously, I feel like Google is great at hiring devs that know algorithms and data structures but not devs that actually know how to do something specifically, like an Android dev that really knows Android."
androiddev,3cbu20,jaydeepw,1 point,Tue Jul 7 06:33:20 2015 UTC,"As a rule of thumb, I never fix something that isnt broken. If your current implementation is working fine or even has issues on lesser percentage of users, you should not change the implementation to adopt newly released design support library. I think we all have fixes to be done elsewhere than to change the working implementation :)"
androiddev,3cbu20,Tankski,1 point,Tue Jul 7 04:37:59 2015 UTC,"I'll concur with the idea that if you plan to release in a short while (couple of weeks) then you probably shouldn't use the lib as its fraught with bugs. If you're on the other hand, where you're going to release in a month or two, then using the lib may be a safe bet as we'll probably get some updates to it soon.  It is worth noting, as well, that the library that we had received as developers supposedly wasn't the library that was to be released by Google (as said by Chris Banes in the latest ADB podcast). This probably is the cause of most bugs within the lib, and as a result, is also the reason why so many bug fixes are marked as FutureRelease as /u/ZakTaccardi noted in his post."
androiddev,3cbu20,ZakTaccardi,1 point,Tue Jul 7 08:15:56 2015 UTC,Interesting about the release code. How is that possible? They released the wrong code?  I always assumed that Google wanted a release of the design library at Google IO before it was fully baked.
androiddev,3cbu20,Tankski,1 point,Tue Jul 7 12:27:45 2015 UTC,"Could be that they pulled the wrong branch, changes weren't merged or an incorrect tag was used in VCS, as well as other possibilities I can't think of. Likely was a comms. error in the pipeline somewhere."
androiddev,3cbu20,f0rexperts,1 point,Tue Jul 7 13:17:59 2015 UTC,"Thanks for all the help guys. I did use the TabLayout since I wanted the fancy setCustomView() method, but I will hold off switching my other stuff with the ones in the support lib."
androiddev,3cbu20,Rhed0x,1 point,Tue Jul 7 08:28:58 2015 UTC,"Same as others, very bad experience with the current release...Wait a little is a good move IMO"
androiddev,3cbu20,bubbleguuum,1 point,Tue Jul 7 12:20:39 2015 UTC,There are a lot of bugs around the Fab and the snackbar for which there are workarounds. AppBarLayouts scrolling doesn't feel good at all.  There are better alternatives.
androiddev,3cbu20,artem_zin,1 point,Tue Jul 7 14:25:29 2015 UTC,"I'm not using it but the feedback here about this lib is really appaling...  Why doesn't Google put the resource necessary behind it to make it top notch and bug free, I do not know. There are many Open Source projects that are far better maintained than this. Seems to be going the way of the horrible LVL library, never really maintained, full of horrible bugs as is..."
androiddev,3cbu20,TweetsInCommentsBot,0,Tue Jul 7 17:31:08 2015 UTC,"https://twitter.com/artem_zin/status/618173934740111361 Reddit Twitter Bot, please do your job!"
androiddev,3cbu20,artem_zin,-1,Mon Jul 6 22:29:26 2015 UTC,"@artem_zin   2015-07-06 21:45 UTC  Sometimes quality of software components from Google just ridiculously bad: http://stackoverflow.com/questions/30537413/textinputlayout-not-showing-edittext-hint-before-user-focus-on-it TextInputLayout, you have one Job!     This message was created by a bot  [Contact creator][Source code]"
androiddev,3cbu20,kevelbreh,2,Mon Jul 6 22:29:32 2015 UTC,"I can definitely say, that /u/TweetsInCommentsBot works much better than Support Design Library v22.2.0.  I just wanted to have Floating Label for EditTexts, TextInputLayout just don't work on Lollipop and Android M, looks like dev team don't use and test their own code, tho looks like it's normal for Google (just saying)."
androiddev,3cd0bf,vvf,2,Mon Jul 6 23:20:19 2015 UTC,"What do you mean by play well? You can license your code under anything you want, and still sell a paid version. After all you are the copyright holder."
androiddev,3cd0bf,angelsl,2,Tue Jul 7 00:29:28 2015 UTC,Like...that doesn't prohibit monetizing. I'm not very familiar with the workings of open source.
androiddev,3cd0bf,wildcarde815,2,Tue Jul 7 00:36:19 2015 UTC,Licensing is a complex legal discussion that you should probably consult a lawyer about. Or at least visit the ask a lawyer sub reddit.
androiddev,3cd0bf,wildcarde815,2,Tue Jul 7 02:20:53 2015 UTC,"I don't have the money for a real lawyer, I can barely handle the android developer fees."
androiddev,3cd0bf,nomadProgrammer,1 point,Tue Jul 7 02:26:37 2015 UTC,Which is why I suggested looking up this.
androiddev,3cd0bf,nomadProgrammer,1 point,Tue Jul 7 02:39:35 2015 UTC,"Will definitely check it out, thanks."
androiddev,3cd0bf,Cg2XHPxz,2,Tue Jul 7 02:41:31 2015 UTC,might be relevant: https://tldrlegal.com/licenses/browse
androiddev,3cd0bf,Cg2XHPxz,1 point,Tue Jul 7 01:35:25 2015 UTC,Your link seems to be invisible? I'm on mobile so no RES
androiddev,3cd0bf,skmpowdjy,1 point,Tue Jul 7 01:50:20 2015 UTC,sorry man I thought I contrl+v it but i didn't : https://tldrlegal.com/licenses/browse
androiddev,3cd0bf,dantheman91,1 point,Tue Jul 7 01:57:26 2015 UTC,"Ooh very helpful, thanks."
androiddev,3cd0bf,ProfessorOakTree,2,Tue Jul 7 02:04:53 2015 UTC,I have the same concern. you know if you open source it with apache/mit and have any small amount of success some asshole will do this:  https://play.google.com/store/apps/details?id=com.betterapps.dashclock
androiddev,3cd0bf,s73v3r,0,Tue Jul 7 00:18:29 2015 UTC,What exactly is going on there? Is BetterApps some kind of open source poaching company?
androiddev,3cd0bf,skmpowdjy,-1,Tue Jul 7 00:24:43 2015 UTC,yeah seems to be something like that. i'm not sure. there are less blatant examples though. the 8SMS guy pretty much took the CM codebase and eventually added ads to it
androiddev,3cd0bf,hozayhandsome,2,Tue Jul 7 00:27:40 2015 UTC,"You're open sourcing just to let other developers compile and build your own app to remove ads?  Why?  Generally you open source something when you want people to see how it works or tinker with it or use it.  In your case, just build an .apk without ads and release it outside the Play Store."
androiddev,3cd0bf,s73v3r,1 point,Tue Jul 7 00:34:30 2015 UTC,"It wouldn't have any source for ads, it's not meant for devs but for users. But I wonder if the subset of users who hate ads is big enough to worry about this."
androiddev,3cd0bf,sagarsiddhpura,3,Tue Jul 7 00:39:21 2015 UTC,"If you're trying to monetize the app, and having an IAP to remove the adds, why are you releasing the same thing for free? Or is monetization not actually the goal, and you would instead rather have a larger user base?"
androiddev,3cd0bf,hozayhandsome,1 point,Tue Jul 7 00:47:17 2015 UTC,"I want to reach more users--i think it will be very helpful to people who need it, but going off what others are saying, I may release a no-ad apk rather than open sourcing."
androiddev,3cd0bf,sagarsiddhpura,2,Tue Jul 7 01:27:23 2015 UTC,Why don't you just add a option in settings to disable ads? Have it require a secret code if you don't want every random user to be able to disable ads.
androiddev,3cd0bf,DanLynch,1 point,Tue Jul 7 01:42:02 2015 UTC,"That could work too, yeah."
androiddev,3casrs,firstsputnik,8,Mon Jul 6 13:26:26 2015 UTC,"/u/bmwracer0, welcome!"
androiddev,3casrs,bmwracer0,4,Mon Jul 6 14:26:42 2015 UTC,Thanks! I've been here a long time though :)
androiddev,3casrs,sudhirkhanger,1 point,Mon Jul 6 14:54:01 2015 UTC,Are you on G+ or Twitter?
androiddev,3casrs,bmwracer0,2,Mon Jul 6 16:19:33 2015 UTC,"Yep, I'm on both: https://twitter.com/m_evans10 and https://plus.google.com/+MichaelEvans/"
androiddev,3casrs,schwiz,1 point,Mon Jul 6 18:51:24 2015 UTC,"Cool hope it works out, how will the rollover work? Will the previous questions and answers be archived somewhere? If a new thread is generated daily will the previous one just be deleted?"
androiddev,3casrs,a_marklar,2,Mon Jul 6 13:53:21 2015 UTC,"Threads won't be deleted; they'll live forever.  Eventually this search will work, once AutoModerator starts posting the daily questions threads (starting tomorrow): https://www.reddit.com/r/androiddev/search?q=title%3A%22questions%22+author%3A%22AutoModeraror%22&restrict_sr=on&sort=new&t=all"
androiddev,3casrs,just_another_juan,2,Mon Jul 6 14:02:11 2015 UTC,I think there is a typo there with an 'r' instead of a 't' in AutoModerator. The link should be https://www.reddit.com/r/androiddev/search?q=title%3A%22questions%22+author%3A%22AutoModerator%22&restrict_sr=on&sort=new&t=all
androiddev,3casrs,bart007345,2,Mon Jul 6 16:01:04 2015 UTC,Good catch! Thanks.
androiddev,3casrs,sudhirkhanger,2,Mon Jul 6 16:02:40 2015 UTC,Suggestion. Can the AutoModerator add flair to the threads?   Maybe have a 'Daily Questions' flair added and tag the posts like that. This flair can be added in a section on the sidebar as a quick link to find all the question threads.   See the sidebar of /r/Fitness for example. They have a similar search but it searches by flair.   Just another option.
androiddev,3casrs,nomadProgrammer,1 point,Tue Jul 7 03:31:13 2015 UTC,would be good to know what merits going into the daily thread and whats better in its own thread?  Can I just say that links to blogs/videos/podcasts might be better of in the daily thread...
androiddev,3casrs,morgazmo99,1 point,Mon Jul 6 15:20:29 2015 UTC,The rules for the subreddit should help clear it up a bit: https://www.reddit.com/r/androiddev/wiki/rules
androiddev,3casrs,Asalas77,1 point,Mon Jul 6 15:21:52 2015 UTC,Are you allowed to repost on another day if you didn't get an answer?
androiddev,3casrs,thepoosh,4,Mon Jul 6 16:31:56 2015 UTC,"I hadn't thought about this, but sure, why not (as long as you're not doing it every day until the end of time). I can see someone asking a question near the end of one day and not getting a response."
androiddev,3catca,sourd1esel,6,Mon Jul 6 13:32:21 2015 UTC,Seeking foot in door work in nyc. Can do attitude. Strong work ethic. And a few apps in the store.
androiddev,3catca,prlmike,6,Mon Jul 6 22:57:35 2015 UTC,Not the best username if trying to get someone to take a chance on you
androiddev,3catca,dandc87,2,Tue Jul 7 01:00:52 2015 UTC,"If you're interested in working with some big name brands like Angie's List or Abercrombie & Fitch, you should checkout Prolific Interactive. I work with a lot of cool people and we all want to make great apps for our partners. You can apply here http://prolificinteractive.com/jobs/brooklyn/android-engineer.html"
androiddev,3catca,Rockmaninoff,7,Tue Jul 7 16:42:05 2015 UTC,"Hi everyone, Android team lead over at WillowTree here.  AMA.  Seriously though, we're looking for talented developers of all shapes and sizes who are interested in building some of the best mobile apps around.  We work with dozens of clients across a huge range of industries, and you end up learning some really cool stuff in each industry.  We're in Charlottesville, VA and are expanding within a month or two to Durham, NC; no remote work, but if you are interested in joining either location, please let me know!"
androiddev,3catca,sancogg,5,Mon Jul 6 15:07:12 2015 UTC,"Hello,  I am located outside the US, but looking for a chance to get a job there. Does the company provide relocation support like visa sponsorship, etc?"
androiddev,3catca,Rockmaninoff,1 point,Mon Jul 6 17:00:04 2015 UTC,"This is what I got from our HR department:  ""If its an H1B, than we cannot offer sponsorship.  If its a simple TN visa, we can accommodate."""
androiddev,3catca,firstsputnik,2,Tue Jul 7 14:05:19 2015 UTC,hey there! Some guys on Glasdoor mentioned that your test project is pretty hard. Is it true? It is tied somehow to the https://github.com/willowtreeapps/wat-test-project  ?)
androiddev,3catca,Rockmaninoff,5,Mon Jul 6 15:33:25 2015 UTC,"The WAT (Web Apps Team) test project is different.  I wouldn't say our test project is hard, but I suppose that is all dependent on your level of experience with Android.  The test project is a simple app that displays a list of countries with Nobel Prize winners, and you can select a country to view all of the laureates and associated prizes.  Two API calls, and two List/RecyclerViews.  There are, naturally, some edge cases to accommodate, but those are fairly well documented from the description we provide.  Probably the most difficult part of the project is determining how to display a laureate with more than one prize (e.g. Marie Curie).  Does that help?"
androiddev,3catca,firstsputnik,2,Mon Jul 6 15:37:54 2015 UTC,"Yeah, thanks! To be honest seems not so hard at all to me. One more question: I am C#/.Net developer at the moment but have strong interest in android development. But I have some side projects/apps written just for fun. I understand, that everything will depend on my knowledge/experience, but will you even consider my resume at first?"
androiddev,3catca,Rockmaninoff,1 point,Mon Jul 6 15:45:44 2015 UTC,"Absolutely we would consider it.  Sure, we're looking for folks who maybe specialize in iOS or Android, but someone with strong fundamentals who wants to learn Android would also be a great fit.  PM me your name and submit an app through our careers portal, I can follow up with our HR department."
androiddev,3catca,firstsputnik,1 point,Mon Jul 6 15:51:13 2015 UTC,"Thanks! Will do this in a next couple of weeks, if you don't mind:)"
androiddev,3catca,if_man_is_5,2,Mon Jul 6 15:54:08 2015 UTC,"This seems like one of the more sane/straightforward coding challenges out there.  My current company does a similar one, and I feel like it's the sort of thing that might take you an evening (at most) to do if you're competent enough to perform well at the job.  And there's juust enough Android peculiarities to deal with that you can throw those into the mix.  I really like these things, both as a candidate and an interviewer.  It's way more telling of a person's skills and approaches to problems, and it gives you plenty to discuss during the interview."
androiddev,3catca,Rockmaninoff,1 point,Mon Jul 6 15:49:03 2015 UTC,"Agreed, there are enough edge cases in the app that you can get an excellent feel for how someone approaches overall architecture and handles weird scenarios, and it's hands-off enough where people don't feel the pressure of a live exercise.  It's basically a take-home exam, and it's not like this is something you can necessarily Google the answers for..."
androiddev,3catca,lacronicus,1 point,Mon Jul 6 15:52:20 2015 UTC,"That's the project for our web apps team, they do html and whatnot. We've got a separate one that's a simple android app. I can't speak to the difficulty of the test project in absolute terms, but most people usually manage to do it pretty well.   If you're interested, I wouldn't worry too much about the test project."
androiddev,3catca,markyosullivan,1 point,Mon Jul 6 15:36:28 2015 UTC,Got any remote work going for people living in the UK?
androiddev,3catca,Rockmaninoff,1 point,Mon Jul 6 20:29:54 2015 UTC,"Sorry, nothing remote!"
androiddev,3catca,markyosullivan,1 point,Mon Jul 6 21:22:13 2015 UTC,"Okay thanks, any chance of upcoming remote positions?"
androiddev,3catca,Rockmaninoff,1 point,Mon Jul 6 21:49:03 2015 UTC,"Not at the moment, sorry :("
androiddev,3catca,TheKeeperOfPie,1 point,Tue Jul 7 13:28:13 2015 UTC,"of all shapes and sizes   Would that include someone without a defined shape and of the smallest size? I'm not sure what you'd have in terms of really entry level positions, as the job description is fairly vague.  If I don't have any formal education, should I even bother applying?"
androiddev,3catca,Rockmaninoff,1 point,Tue Jul 7 08:22:53 2015 UTC,"I checked around the office for tiny, amorphous blobs but couldn't find too many :P  In all seriousness, if you consider ""formal education"" a college degree, I can say that we don't screen very hard for that.  I know quite a few programmers who never graduated (or even entered) college who excel in the workplace.  You'd be surprised at how much software development relies on experience versus theory/fundamentals.  That being said, a certain level of experience would be expected.  We've had plenty of folks apply with just a simple Android app under their belt who have wowed us through answers to technical questions or their work on the test project.  As with most companies, we're looking for folks who are smart and get things done!"
androiddev,3catca,ericbogs,1 point,Tue Jul 7 13:32:57 2015 UTC,"Hinge is a dating app based in NYC. We're hiring!  We're looking for Android engineers to join our team and help innovate upon and grow the Hinge Android app. We're looking for smart, organized, delivery-minded engineers who love working with others to build cool stuff.  More info: https://boards.greenhouse.io/hinge"
androiddev,3catca,IWantToBeAProducer,-6,Tue Jul 7 18:38:04 2015 UTC,Obligatory: Epic.  http://careers.epic.com
androiddev,3caqhs,FranciscoE_Reuters,5,Mon Jul 6 13:02:41 2015 UTC,FYI.... some might be more inclined to use this if there were some screenshots or something showing what it looks like.
androiddev,3caqhs,kireol,2,Mon Jul 6 18:22:16 2015 UTC,We've got you covered! A gif sample and test project are part of the repo too.  https://github.com/thomsonreuters/RippleDecoratorView/blob/master/RDV.gif
androiddev,3caqhs,moizici,1 point,Mon Jul 6 20:54:31 2015 UTC,https://github.com/thomsonreuters/RippleDecoratorView
androiddev,3caqhs,_northernlights_,1 point,Mon Jul 6 19:12:07 2015 UTC,"Thanks, i'm going to try it for my current project."
androiddev,3cfhe2,singhp154,3,Tue Jul 7 14:38:23 2015 UTC,"Udacity launched a nano-degree on android app developing. They have courses for beginners, courses on design, and courses on advanced features. All of the courses are free. You can take a look at those."
androiddev,3cfhe2,selleckh1,1 point,Tue Jul 7 14:47:56 2015 UTC,"They're free? I thought only the beginner one was.......  And yeah, the course is very good."
androiddev,3cfhe2,jedi18,1 point,Tue Jul 7 16:02:59 2015 UTC,"A few days ago, I made a list of great sources: http://everythingtechreview.blogspot.com/2015/07/great-android-tutorial-links.html  I link to text tutorials, video tutorials, books and more..."
androiddev,3cfhe2,avipars,1 point,Tue Jul 7 15:45:01 2015 UTC,"There is no universal best way. Some people learn faster by studying documentation, some like tutorials (text, video) to guide them and some like reading good code and comprehending it. So how do you learn other stuff?"
androiddev,3cfhe2,ciny,0,Tue Jul 7 16:45:17 2015 UTC,Read source code. Copy and launch samples.  Read source code of apps.  Build your own app.  Read source code of better apps.  Understand why libraries are useful.  Read source code.  Repeat last step.
androiddev,3cfhe2,guillaumeyp,0,Tue Jul 7 15:10:01 2015 UTC,and don't forget to read source code.
androiddev,3cb1eh,autom8r,10,Mon Jul 6 14:43:42 2015 UTC,Check out gradle-versions-plugin.  It's a gradle plugin that adds a task that you execute by calling gradle dependencyUpdate.  It will list out all of your library dependencies and versions and let you know which ones have later milestones.
androiddev,3cb1eh,kyhule,1 point,Mon Jul 6 17:13:06 2015 UTC,"+1 for this plugin.  Note that for it to properly check libaries in one of Google's repositories local to your computer (e.g. the support libraries), you need to first update those repositories via the SDK manager.  Otherwise it is checking against an out of date repo."
androiddev,3cb1eh,tanis7x,4,Mon Jul 6 23:43:32 2015 UTC,"Hi, in the sdk manager you can see the latest revision available for this dep. (see extras/Android Support Library)  Hope it helps."
androiddev,3cb1eh,hbrc,1 point,Mon Jul 6 15:23:53 2015 UTC,"In the SDK Manager is the Material Design library bundled in the Android Support Library? Otherwise, I don't see the MD library itself as available in the listing."
androiddev,3cb1eh,Herb_Derb,2,Mon Jul 6 20:34:06 2015 UTC,"Yes, the design support library is part of the android support library."
androiddev,3cb1eh,Corman0,1 point,Tue Jul 7 00:02:54 2015 UTC,Thanks kindly
androiddev,3cb1eh,iNoles,4,Tue Jul 7 00:35:26 2015 UTC,"Alfi is a great tool for monitoring mavenCentral for the current versions of many gradle dependencies. It wont work for design support right now since the tool needs to query jcenter, but you could fix that."
androiddev,3cb1eh,Cg2XHPxz,2,Mon Jul 6 15:22:27 2015 UTC,I wish that tool to check in bintray too.
androiddev,3cb1eh,bukster,1 point,Mon Jul 6 16:51:09 2015 UTC,bintray has built in support for making accounts and getting emails when repositories change
androiddev,3cb1eh,DonMahallem,1 point,Mon Jul 6 18:42:57 2015 UTC,"Quite slick, thank you!"
androiddev,3cb1eh,bukster,6,Mon Jul 6 17:46:38 2015 UTC,Update regularly with 'SDK Manager' in Android Studio and the Google dependencies in your Gradle build file will change background colour if there is a newer version available. Hover over the highlighted library to find the latest version number.
androiddev,3cb1eh,Cg2XHPxz,1 point,Mon Jul 6 16:29:37 2015 UTC,"This is gold, thank you, I did not know this was the case (the color change)"
androiddev,3cb1eh,Cyber34,1 point,Mon Jul 6 17:45:55 2015 UTC,But if you use + in your Version it will always be highlighted! Even if you only plus patch versions.
androiddev,3caspc,Cephas00,8,Mon Jul 6 13:25:36 2015 UTC,Any good examples/tutorials about using RxJava with a presenter used to update the UI?
androiddev,3caspc,Hippochomp,2,Mon Jul 6 15:44:38 2015 UTC,"Not sure if this is exactly what you're looking for, here's an article about unit testing using rxjava"
androiddev,3caspc,Cephas00,1 point,Tue Jul 7 07:13:19 2015 UTC,Cheers!
androiddev,3caspc,kaisims,4,Tue Jul 7 08:23:40 2015 UTC,"Great! My first question: Do I need an Adapter to use Json Content in my Custom Cards in a Framgent? Currently I have a parser that saves the content in a List, how do I reach it in my FragmentActivity?"
androiddev,3caspc,ErectionalOfficer,1 point,Mon Jul 6 13:48:34 2015 UTC,"Is it a list of cards? Adapters are for adapting list of objects to views. If you have a list, you use an adapter yes."
androiddev,3caspc,Devon64327,1 point,Mon Jul 6 15:50:49 2015 UTC,This is a pretty good tutorial for implementing an adapter for a RecyclerView (the fancy new ListView) of CardViews.
androiddev,3caspc,ASIC_SP,2,Mon Jul 6 16:04:38 2015 UTC,"Is it possible to programmatically change the color of the status bar without targeting API 21?   well, is it possible? I saw SO thread and thought it isn't possible.. app am working on changes status/navigation bar colors only for API 21+"
androiddev,3caspc,TheKeeperOfPie,4,Mon Jul 6 13:48:08 2015 UTC,"Well, if you target KitKat+, you can make the status bar transparent and put a custom view behind it."
androiddev,3caspc,ASIC_SP,1 point,Mon Jul 6 16:21:59 2015 UTC,"interesting, will check it out, thanks :)"
androiddev,3caspc,kaisims,1 point,Mon Jul 6 16:24:29 2015 UTC,"i used this library to change the color of my icons in a Tablayout, works with text too!: https://github.com/astuetz/PagerSlidingTabStrip"
androiddev,3caspc,ASIC_SP,2,Mon Jul 6 13:52:04 2015 UTC,not talking about text/icon color here.. they can easily be done programmatically   it is about color of status bar and navigation bar
androiddev,3caspc,kaisims,1 point,Mon Jul 6 13:56:33 2015 UTC,"Oh Sorry, read it wrong"
androiddev,3caspc,ASIC_SP,1 point,Mon Jul 6 14:06:41 2015 UTC,no probs :)
androiddev,3caspc,slaystation25,2,Mon Jul 6 14:07:17 2015 UTC,Is there a lightweigh Dagger 2 example project like the one Antonioleiva has for Dagger 1 ? Most Dagger 2 samples I come across are overwhelmingly big.
androiddev,3caspc,dj_darkhorse,2,Mon Jul 6 16:56:19 2015 UTC,"I made a simple project to teach myself dagger2 and product flavours. You're more than welcome to look at it, it's pretty basic though and doesn't include any testing as of yet.  https://github.com/danieljonker/dagger2trial"
androiddev,3caspc,insane-cabbage,1 point,Mon Jul 6 21:30:50 2015 UTC,I find the examples in the dagger2 repo quite nice. They have two Android examples
androiddev,3caspc,fadelakin,2,Tue Jul 7 07:02:55 2015 UTC,How does one make Retrofit work with OAuth like Twitter and Eventbrite?
androiddev,3caspc,insane-cabbage,1 point,Mon Jul 6 22:43:00 2015 UTC,"Set a RequestInterceptor on the RestAdapter.Builder  you use to create the Service. Within that RequestInterceptor you add a ""Authorization"" header to the request with the token type (mostly ""Bearer"") and the actual token as value.  builder.setRequestInterceptor(new RequestInterceptor() {             @Override             public void intercept(RequestFacade request) {                 request.addHeader(""Accept"", ""application/json"");                 if (handler.getToken() != null) {                     request.addHeader(""Authorization"", ""Bearer "" + tokenString);                 }             }         });"
androiddev,3caspc,fadelakin,1 point,Tue Jul 7 07:15:05 2015 UTC,Does this implementation work with any version of OAuth?
androiddev,3caspc,Tamzid,2,Tue Jul 7 17:54:16 2015 UTC,"Glad this thread came up. I'm newish to Android, started in January.   I have an android project where I have set up a separate module as an Android Library. I want to publish this library to Github as an Open Source Lib for others to use. How do I do this? The project has two modules: one is the app and one is the lib. I only want to publish the lib.   How do I set it up such that a dev can access it using a simple compile statement in their apps Gradle file like I would do with Retrofit, for example?   Thank you so much to whoever can help me out with this."
androiddev,3caspc,lordVader1138,2,Mon Jul 6 23:19:30 2015 UTC,"To answer your question about library distribution, I would like to point to some of the blogposts.  This blog-along with some super articles-has one on distributing your library on jCenter  Following posts from gabriel mariotti, Surviving with Android, are good enough, but expect some broken links from Maven Central.  There is one cool script by Chris Banes on Github, which you can use.  If you think this process is too long you can use jitpack to distribute your libraries."
androiddev,3caspc,S_Luis,1 point,Tue Jul 7 03:45:30 2015 UTC,"I have used jitpack and it works like magic, save yourself from the pain of publishing a lib in Maven."
androiddev,3caspc,Tamzid,1 point,Tue Jul 7 22:56:14 2015 UTC,"Excellent source, thanks. I will be using it."
androiddev,3caspc,insane-cabbage,2,Wed Jul 8 17:39:32 2015 UTC,"Make sure you don't have dependencies or other configs related to that lib in your global build.gradle file. Then you should be good to go to host it in it's own git repo.  However publishing libs like retrofit where just need to add a single line to your gradle file is not that trivial. You need to host it on a public artefact repo.  Or something a bit simpler is just suggesting your library's users to use Jitpack which takes git repos, compiles them and provides the build artefacts. However, you must make sure your lib can be build by jitpack without further instructions (read their docs)"
androiddev,3caspc,KmatthewC,1 point,Tue Jul 7 07:22:17 2015 UTC,I'm a new android developer. I have a recycler view that has child cardviews working. Now I need to be able to add elements to an arraylist using a floating action button. Could someone point me to some resources where I could look into getting this to work?  I need to floating action button to bring up a menu where the user can fill out several text fields. I don't really know how I would achieve this.
androiddev,3caspc,bbqburner,2,Mon Jul 6 15:48:50 2015 UTC,"The general gist is:   Set a new OnClickListener on the FAB to start activity/fragment for result. Also check out dialogs since it fits what you're trying to do.  Set result when the dialogs activity/fragment finishes. Check the result on returning to the original activity/fragment  Update arraylist and notify changes to the recyclerview adapter.   If you need tutorials, I'd say the the term you're looking for is ""startActivityForResult"" and make sure the example is using dialogs (which is just a themed activity actually)."
androiddev,3caspc,KmatthewC,1 point,Mon Jul 6 17:15:38 2015 UTC,Thank you! This is just what I need to get started. If anyone has some good blogs/posts already outlining this that they swear by please post them.
androiddev,3caspc,lawliet89,1 point,Mon Jul 6 17:32:17 2015 UTC,"Newbie developer here. Is there any way to use text as the icon in the status bar for a notification? Everything I've seen seems to indicate that you would have to make an image for every permutation of text you want to appear in the notification bar.   I want to display time in the notification bar, in minute granularity, so that would mean 1440 images. In this case, is there any tool to automate the generation of these images?"
androiddev,3caspc,TheKeeperOfPie,2,Mon Jul 6 15:59:18 2015 UTC,"I think the newer APIs let you set a drawable or bitmap for the icon, so you can draw the text onto a Canvas, make it into a Bitmap, and pass that to your notification.  EDIT: Looks like M Preview+ only:  https://developer.android.com/preview/api-overview.html#notifications"
androiddev,3caspc,kaisims,1 point,Mon Jul 6 16:24:09 2015 UTC,Or you try using this font: https://fortawesome.github.io/Font-Awesome/ they are basicly icons.
androiddev,3caspc,taimooryc,1 point,Wed Jul 8 15:20:34 2015 UTC,"I'm new and only have made a couple apps.   One of my apps makes an OkHttp async request, then calls my parse method to convert the response into a list of objects, and then that calls a method which makes my list view using my list of objects.   Is this the right way to do things? It feels wrong to daisy chain methods together. Someone suggested I use interfaces which handle what to do once parsing or etc is finished."
androiddev,3caspc,bbqburner,2,Mon Jul 6 15:59:31 2015 UTC,"Nothing wrong with it. More functional. Easier to understand. Just make sure you're not holding the main thread too long with the parse method. If you use RxJava (widely recommended), your methods (and future implementation of such mechanism) can just be simplified in a single method chain."
androiddev,3caspc,bart007345,2,Mon Jul 6 17:20:58 2015 UTC,you use retrofit on top of okhttp right? It will manage the json to pojo for you.
androiddev,3caspc,taimooryc,1 point,Tue Jul 7 20:28:03 2015 UTC,"At the moment I'm just using OkHttp. Retrofit seems really complicated, but I'll give it a try for my next app!"
androiddev,3caspc,neocypher,1 point,Tue Jul 7 20:39:10 2015 UTC,"Not really Android but still, what would you recommend to make a backend, right now I'm using php but I'm not sure that's the best( its just to make a rest api that query my database) . Also how can you know that you're backend will scall correctly? I can test with 10 users but what happen if suddenly 10.000 people install my app?"
androiddev,3caspc,nitishh,1 point,Mon Jul 6 19:32:47 2015 UTC,This is just a personal opinion and it may or may not apply exactly to your use case but my go to backend is Parse. It makes managing users super easy. Their cloud code hosting is very easy to set up and use and it scales pretty well. I've used Azure and Google Cloud in the past and I pick Parse for most of my projects now. It is also very easy to port to other platforms Let me know if you have any specific questions!    Again this is strictly personal opinion based on how quickly I can get my backend up and running and ease of use. By no means am I saying Parse is better than XYZ backend.
androiddev,3caspc,HaoChen,1 point,Mon Jul 6 19:38:58 2015 UTC,You could test your API by simulating thousands of users using Apache JMeter
androiddev,3caspc,SmithhBR,1 point,Mon Jul 6 20:10:16 2015 UTC,"Is extending the Application class and using it to store variables that I want to access data throughout all my app a good choice? I was doing database reads everytime, but I thought that a single read and just reading the data from the Application class the best way to do it. And the access just using the ""getApplicationContext"" makes things even easier for me.  I'm very new to Android development (and OOP, to be fair), and I really don't know the best way to approach this.  My app is 100% offline, I don't ask for any permission."
androiddev,3caspc,kevintcoughlin,2,Mon Jul 6 20:04:30 2015 UTC,"If you must go that route, a singleton class encapsulating your data might be better. Or you could just put / get it from your app's preferences."
androiddev,3caspc,SmithhBR,1 point,Mon Jul 6 20:57:06 2015 UTC,"Why using the Application class wrong in this case? I was trying a singleton class, but I was getting several memory leaks (using the LeakCanary lib to warn me about them), but I probably did something wrong then.  And, if you allow, I have another question. I'm opening my database inside the application class (this time using a singleton to avoid multiple opens). I read in some places that closing the database can be left to the system to close, and I should not worry about that.  Here: http://stackoverflow.com/a/6356997"
androiddev,3caspc,tanis7x,2,Mon Jul 6 21:15:23 2015 UTC,"The only reason you ""aren't"" getting leaks in your Application class is that is essentially ""pre-leaked."" Putting variables in the Application class is really no better than putting them in a singleton.  Generally you should try to avoid keeping data in memory longer than you need it. Let the OS reclaim memory if you don't truly need it.  As for whether to put it in your Application class or not- I wouldn't, but it is a design decision left up to you. To me, caching data in the Application class expands the purview of the Application class unnecessarily. I like to keep my Application class to just things that are truly necessary to run the core of the Application."
androiddev,3caspc,SmithhBR,1 point,Mon Jul 6 23:54:27 2015 UTC,"Thank you very much. I'll  try to move it to another class then, maybe it's for the best in the long run. But is there any way to do this and not get a warning that I'm leaking? Every singleton I had I got the warning (as every single static variable, I had to remove them all)."
androiddev,3caspc,tanis7x,1 point,Tue Jul 7 00:04:45 2015 UTC,"From what I understand of what your are doing, no.  What you are doing is essentially creating intentional ""leaks-"" that is objects that are no longer being referenced outside the singleton, but that you are keeping around in case they are needed again in the future.  While you might be doing this intentionally and have a goal in mind for it, LeakCanary doesn't know this."
androiddev,3caspc,SmithhBR,1 point,Tue Jul 7 00:09:58 2015 UTC,"So, to avoid leaks 100%, it's better to fetch all data from the database when I need it, right? This way I avoid using a singleton class to share my variables across all my Activities/Fragments. I was doing this, but thought that the constant access to the database was not something nice to do. These variables must be saved in the database anyway, so maybe it's the best way out."
androiddev,3caspc,insane-cabbage,1 point,Tue Jul 7 01:05:46 2015 UTC,"Yes, it's better to fetch the data, when they're actually needed.  Although, you might take a look at the LruCache. With a proper cache you can keep the data in memory without leaking it."
androiddev,3caspc,bump_elephant,1 point,Tue Jul 7 07:32:54 2015 UTC,"Is it possible to create custom toolbar icons that are dynamically coloured in the same way as the default icons? For example, if I set ""android:textColorSecondary"" in my styles.xml to a a yellow, the overflow menu icon will become yellow. I've created a custom ""home"" icon to replace the ""Up Indicator"" (the left facing arrow in the toolbar) and I'm just wondering if there's some way to make it take on the colour specified in my style. Thank you :)"
androiddev,3caspc,kevintcoughlin,1 point,Mon Jul 6 20:26:29 2015 UTC,You should be able to get the Drawable for the icon and change it to your textColorSecondary programmatically if it doesn't inherit it automatically.
androiddev,3caspc,bump_elephant,1 point,Mon Jul 6 20:36:49 2015 UTC,"You wouldn't have any pointers somewhere that describes how to do such a thing, would you? Pretty much everything I can find is explaining how to re-colour the default icons."
androiddev,3caspc,kevintcoughlin,1 point,Mon Jul 6 20:56:18 2015 UTC,"I skimmed this article and it may be the more material proof way to do it using tints: http://www.murrayc.com/permalink/2014/11/11/android-changing-action-icon-colors-with-android-5-0s-drawable-tinting/  To do it programmatically you can call findViewById on the toolbar since its the parent view containing your icon subviews. Then set the color on the Drawable for the icon you want to modify using http://developer.android.com/reference/android/graphics/drawable/Drawable.html#setColorFilter(int, android.graphics.PorterDuff.Mode)"
androiddev,3caspc,bump_elephant,1 point,Mon Jul 6 21:01:54 2015 UTC,"Thank you so much for this, going get reading and see if I can figure it out."
androiddev,3caspc,Asalas77,1 point,Mon Jul 6 21:19:50 2015 UTC,I have an activity with a list of locations. Each location can contain a number of different items. Inside the activity I am using Fragment with RecyclerView to show list of locations and I want to show the list of items after clicking on location. Should I use another activity or a fragment for it? ViewHolders for locations and items are different.
androiddev,3caspc,tanis7x,1 point,Mon Jul 6 22:00:19 2015 UTC,"Chet Haase has some good words on this in his Developing For Android series:   You should implement an Activity when you want to allow others to launch specific parts of your app, such as for executing a share operation or opening some content contained in the app. If you have UI that is only going to be launched by your own app, there is no need to implement it as an Activity, you can just as well do this by transforming the state of the currently shown UI (such as through fragments)."
androiddev,3caspc,bart007345,1 point,Tue Jul 7 00:02:02 2015 UTC,Is this an official approach? Do Google apps follow this approach?
androiddev,3caspc,tanis7x,1 point,Tue Jul 7 09:36:17 2015 UTC,"Is this an official approach?   There is no official approach. Google leaves these architectural decisions completely up to you.  That being said, Chet is a senior engineer on the Android UI toolkit team, and gives tons of Android talks as a Google employee, so I tend to respect his wisdom when it comes to Android.   Do Google apps follow this approach?   I haven't tried to look into many Google apps, nor have I done any research particularly recently. I did decompile the Play Store app once last year out of curiosity on this matter and discovered that almost the entire app lives within a single Activity."
androiddev,3caspc,bart007345,1 point,Tue Jul 7 19:52:22 2015 UTC,and how big was this activity?
androiddev,3caspc,tanis7x,1 point,Tue Jul 7 19:57:34 2015 UTC,"I don't recall- it was at least a year ago.   You seem to be insinuating that having it all in one Activity means that single Activity needs to be huge, which isn't true. Assuming you put all the logic for individual screens within Fragments, your Activity only needs to be responsible for managing which Fragment is shown, and perhaps some global UI management."
androiddev,3caspc,bart007345,1 point,Tue Jul 7 20:11:40 2015 UTC,thats a really good idea. I don't believe Chet discussed that. So guess what? Devs will write a massive activity (I've seen it) not realising your wise words.
androiddev,3caspc,leggo_tech,1 point,Tue Jul 7 20:25:08 2015 UTC,How was app linking done before io 15'?
androiddev,3caanw,bart007345,2,Mon Jul 6 09:41:40 2015 UTC,"Thoughts?   Sounds awesome to me, I've been doing the same successfully. Two questions:  How do you handle presenter binding/unbinding to activities and fragments? Finding the precise moment in the lifecycle is tricky, specially for fragments inside ViewPagers.  I guess you're wrapping your click/editor/scroll listeners as observables already so my question is, are you binding your data types to views as an Observable operation?   public Observable<?> setData(Data data)  // In presenter getNetwork().doRequest().flatMap(data -> getView().setData()).subscribe(...)   or   public void setData(Data data)  // In presenter getNetwork().doRequest().subscribe(data -> getView().setData())"
androiddev,3caanw,pakoito,1 point,Mon Jul 6 11:33:30 2015 UTC,"I use onCreate()/onCreateview() to new up my presenter. Global dependencies are passed in to the constructor (I get these from the Application subclass). I'm reluctant to jump on the Dagger2 bandwagon as I think its too complicated for little gain.  As for your second point, I haven't done it yet so not sure which way I'll go. I'll try with a prototype soon and post back."
androiddev,3caanw,pakoito,1 point,Mon Jul 6 12:43:35 2015 UTC,"You may find a couple of bumps on fragments with onCreate, just tell me how it goes :)"
androiddev,3caanw,atioxx,1 point,Mon Jul 6 12:59:20 2015 UTC,"hmm I'm not really sure about Dagger 2. I managed to make it work in my app, it might make things look more organized IF you have the correct base setup by using base activities and base fragments to place all the common tasks in one place. Take a look at my repo, I'm also using Rx but only for my network calls.   https://github.com/Redgram/redgram-for-reddit"
androiddev,3caanw,IgorGanapolsky,1 point,Mon Jul 6 17:29:03 2015 UTC,What is your main objective - to separate test logic from production logic?
androiddev,3caanw,ZakTaccardi,1 point,Mon Jul 6 19:33:24 2015 UTC,that and separate UI work from logic. That way I can get the UI complete without waiting for the backend to be completed.
androiddev,3caanw,IgorGanapolsky,1 point,Mon Jul 6 21:23:06 2015 UTC,"This is a good approach. Your UI greatly affects the type of data you need your backend to provide, so it's great to nail down the UI first"
androiddev,3cbnbb,Endda,2,Mon Jul 6 17:30:45 2015 UTC,This is just what I needed!!! I just started a new app and was going to think of website designs but this completes it
androiddev,3cbu9d,mraviator9,3,Mon Jul 6 18:20:28 2015 UTC,"So my activities do not create observables. A presenter creates them and the inline subscriber calls view methods and the view is implemented by the activity - MVP.  On my next project, I'm thinking of having the observables in the presenter but the activity subscribes directly and deals with events. Not thought it through fully yet."
androiddev,3cbu9d,bart007345,1 point,Mon Jul 6 21:28:20 2015 UTC,Are you familiar with the MVP pattern at all? The presenter is a great place for your observables.
androiddev,3cbu9d,ZakTaccardi,1 point,Tue Jul 7 02:37:03 2015 UTC,I don't want to use Java 8 lambdas/Retrolambda quite yet   Why? There is no learning curve to it.
androiddev,3cbu9d,hitler_kardashian,1 point,Mon Jul 6 19:29:12 2015 UTC,"I've played with them, not that difficult, but I'm not sure the whole thing is production ready yet. Then again, I haven't spent much time to research that aspect of it."
androiddev,3cbu9d,lolkittens,3,Mon Jul 6 20:19:54 2015 UTC,"You could pull common filters, switchMaps, etc. into helper functions, but you would still have to deal with onNext, onError, and onComplete.  If you are creating your own observables those are best placed in their own place, I like to use a factory method to create them.  You should still use retolambda, the amount of space you can save with method references is invaluable. ""Production ready"" isn't really a factor with the way it works, but i've seen it used in a couple of high profile apps and I'm using it where I work now. The only problems you are likely to see happen at build time."
androiddev,3cbu9d,lolkittens,1 point,Mon Jul 6 21:40:36 2015 UTC,"Factory method, similar to newInstance() with fragments?"
androiddev,3cbu9d,vladlichonos,2,Mon Jul 6 21:55:23 2015 UTC,"Yup, exactly."
androiddev,3cbu9d,lolkittens,1 point,Mon Jul 6 21:57:10 2015 UTC,"Not sure if it is incremental build thing or something else, few times I got app compiled and deployed onto device under debug and then failed to find class of lambda exception. I had to rebuild project and deploy again in order to make it run. Did this happen to you?"
androiddev,3cbu9d,Morgotth0,1 point,Mon Jul 6 22:00:25 2015 UTC,"Hmm, I've never experienced that issue, sorry."
androiddev,3cbu9d,vladlichonos,-1,Mon Jul 6 22:03:28 2015 UTC,"Many popular apps like Square or Trello are using Retrolambda since few months and never reported an issue about retrolambda. (Source: fragmented podcast)  Just be careful: we're not in Java8, so never use method reference  fct(object::method)   but only lambda:  fct(arg -> object.method(arg)   Don't wait more and have fun with Rx and lambda ;)"
androiddev,3cbu9d,ODesaurido,3,Mon Jul 6 21:29:26 2015 UTC,"Why not method reference? I've tried, it worked. Also considering whether or not to use retrolambda. I felt it messed up my setup w mockito and dagger 2."
androiddev,3cbu9d,Morgotth0,2,Mon Jul 6 21:57:54 2015 UTC,"I've been using method reference and didn't find any problems, can you link an issue?"
androiddev,3cbu9d,vladlichonos,0,Mon Jul 6 21:58:20 2015 UTC,http://vickychijwani.me/java-8-method-references/
androiddev,3cbu9d,lolkittens,3,Mon Jul 6 22:01:55 2015 UTC,But this should not be a problem if method referencing is used in a place of rx for example to filter or process data. Doesn't it?
androiddev,3caqzp,Sebianoti,4,Mon Jul 6 13:07:29 2015 UTC,"one of them is even showing as containing a Apache Cordova security vulnerability   Huh, that's weird. Perhaps you could deactivate  the apk and simple upload a hello world app under alpha/beta? I, for one, wouldn't want to risk google bots banning me for a faulty unpublished app. But this might cause the update to be rejected.  TLDR: Fuck google."
androiddev,3caqzp,lordoftherings911,1 point,Mon Jul 6 14:59:40 2015 UTC,"I would need to republish the app in order to do anything with that side of the app, here is the warning in question http://i.imgur.com/PhUuJs7.png"
androiddev,3caqzp,codechimp,2,Mon Jul 6 15:05:42 2015 UTC,"You can't delete an app but you can put a filter on the play store to never show the unpublished apps (drop down top left on the All Applications view). It seems sticky as well, I switched it on ages ago and have never had to change it.  Just forget about the app's that are filtered out of sight."
androiddev,3caqzp,cylon_u87,1 point,Mon Jul 6 15:12:08 2015 UTC,You can't delete an app once it's published.  Source: http://stackoverflow.com/questions/11074972/how-remove-application-from-app-listings-on-android-developer-console
androiddev,3cb6jm,YourProgrammerFriend,6,Mon Jul 6 15:23:55 2015 UTC,"Hi, to answer your question, 'must have' devices are Samsung S3, S4, S5, Note 2, those are the most sold devices in the US but they got similar hardware. You can also take a moto G, and a Nexus 5 or 6 for easy dev. See here for more infos: http://www.appbrain.com/stats/top-android-phones  I had to do the same thing 4 months ago for my company, i went with S3 mini, neo Galaxy S3, Galaxy S2, Galaxy Note2, LG G3, Galaxy S5, Moto G, Nexus 5, Nexus 7, Motorola Razr HD and i (for x86 arch), Nexus 9 (64bits arch), Xiaomi MI3, Sony xperia z1, Galaxy Nexus and HTC One. That a few more than necessary but I think it gives a good coverage of the US market share. We do native development and we rely a lot on GPU hardware so we need to test against as many device and archs as possible."
androiddev,3cb6jm,hbrc,1 point,Mon Jul 6 15:39:15 2015 UTC,Thanks.  That is very close to the list that we've compiled thus far.  That link is very helpful.
androiddev,3cb6jm,monadroid,2,Mon Jul 6 17:13:05 2015 UTC,"It's very difficult to get information about what are the top devices in US. You have third party information that can confuse you, because everyone has their view of the market. You need to arm yourself a matrix with your own perception of what are the top devices based on the mix of others reports.  I know about:   PerfectoMobile http://www.appbrain.com/stats/top-android-phones Opensignal http://opensignal.com/reports/2014/android-fragmentation/ AppBrain http://www.appbrain.com/stats/top-android-phones Handset Detection http://www.handsetdetection.com/blog/spooky-android-usa-october-2014   Xamarin Test Cloud http://xamarin.com/test-cloud (Use Xamarin Test Cloud and show the top devices) I do not know the source of the information, the ranking maybe is based on the popularity of the devices in your cloud. Monkop http://monkop.com (Startup? Use the service and show the selected devices) I think that try to solve this problem, but right now only have a limit devices for US. Analyze your apk and join the market information and select the correct devices for best coverage  (resolution and api level).   These services helped me to select which devices should be available at the time of testing. Every six months I look at what the new trends to see which new devices are required to purchase (which are similar in features, select one to represent them, try to mix in api level and brands)"
androiddev,3cbn4a,dogchasecat,4,Mon Jul 6 17:29:26 2015 UTC,"Unless you're getting founder level equity, then absolutely not. Your potential shares, even if the company ends up being worth something, will likely be diluted down to almost nothing."
androiddev,3cbn4a,s73v3r,3,Mon Jul 6 21:25:07 2015 UTC,"If it sounds fun and you go into it knowing that your likely outcome will be no money, then you should do it! Not intending to bum you out, but most apps don't make money so it's best to enter into it knowing that many of the benefits might be non-monetary. (experience, getting to know potential co-founders in a real situation, etc.)  Also, PLEASE sign a co-founders agreement before you start working! You should be able to have a hard conversation about what happens if someone has to or wants to stop early, do they get anything? If it feels awkward having that conversation now, guess how bad it'll feel when you're 6 months into building the app. :)  I can link you to a couple example co-founder agreements if you need examples."
androiddev,3cbn4a,megamatt2000,1 point,Mon Jul 6 18:59:48 2015 UTC,"Are you incurring any risk by doing so? If it's not against your contract with your current employer, you have the free time, and you think the project will be successful, then I don't see any reason not to.  Do the math. How much equity? What is your time worth? Would you recoup the cost if they sell the company for $5m? If they IPO for $100m?  It sounds like nobody has left their current job to work on this project. I would consider that a huge red flag. But again, if you're not risking anything but your free time, then the risk-to-reward ratio is still in favor."
androiddev,3cbn4a,lgtm,1 point,Mon Jul 6 18:10:08 2015 UTC,"The owners of the company are aware, and are fine with it, so no risk there.  The only risk is that we are all spending time away from our families, and there is no guarantee that it will make any money, no matter how good the business plan is, if it's not executed properly.    Nobody has left their current job, obviously, because the app hasn't gone to market yet.  But if the projections are accurate, than it seems like it would be well worth the risk, considering the equity they're offering!  I'm just curious if this is a common model, and whether any NORMAL person would engage in something like this.  (I'm a risk taker, so it sounds like a good idea to me!)"
androiddev,3cbn4a,lgtm,1 point,Mon Jul 6 18:18:49 2015 UTC,"In the Bay Area, at least, I think that would be extremely uncommon for someone who is not joining as a co-founder, but it sounds like the equity you're getting may be in line with that?  Again, if the only risk you run is time away from your family, then weight that against the potential rewards. I mean literally write down the minimum amount you stand to gain from this ($0, the most likely option as most startups fail) and the maximum ($x), then decide how much time you are willing to devote to the project and divide.  Edit: And if the project sounds like fun, then factor that in as well. If you would have spent your hobby time writing apps anyway then you lose nothing and gain some valuable experience. ;)"
androiddev,3cbn4a,fredgrott,1 point,Mon Jul 6 21:20:58 2015 UTC,here is what you are looking for:   They took a small portion of features and put in PlayStore and got sales and are willing to show that sales data..we call that MarketTesting the concept. High growth rate on downloads and MAUs.
androiddev,3cbn4a,UMadBreaux,1 point,Mon Jul 6 19:13:07 2015 UTC,"My mindset is always that if they truly had something ground breaking, they would probably have some capital to pay you"
androiddev,3cbn4a,asarazan,1 point,Tue Jul 7 01:25:48 2015 UTC,No.
androiddev,3cauij,AnythingForSuccess,2,Mon Jul 6 13:43:47 2015 UTC,"Unless you're dealing with the camera or Bluetooth, testing on a phone, tablet and maybe phablet is all that may be required, and those for the most part can be done in Genymotion. If you plan on supporting pre-4.0 devices you'll have to use the emulator or find an old phone, or even better, don't support those devices."
androiddev,3cauij,buckstalin,2,Mon Jul 6 15:55:58 2015 UTC,"You can get ""pretty good"" coverage if you own a Samsung and a Nexus device and switch back and forth when developing. When you're ready to release use something like https://www.crashlytics.com/ and try to stay on top of all the worst crashes. We've found it's better to just be really responsive when crashes occur than to attempt to guess what all the problems could be ahead of time. That doesn't mean no testing, it's just a balance."
androiddev,3cauij,megamatt2000,1 point,Mon Jul 6 19:09:44 2015 UTC,You can test most of the things with different Android versions and emulators. You don't need to have dozens of devices laying around. I think two or three devices with different hardware and Android versions should be enough for the average developer. In my opinion a good bunch of beta testers is better than tons of real devices.
androiddev,3cauij,HaoChen,2,Mon Jul 6 14:44:25 2015 UTC,Where do you get good Android emulators?
androiddev,3cauij,HaoChen,5,Mon Jul 6 15:53:32 2015 UTC,Genymotion
androiddev,3cauij,bubbleguuum,1 point,Mon Jul 6 16:10:41 2015 UTC,Exactly. And I would add that a million of users is better than a bunch of beta testers. That's why the real beta best begins the day you unleash your app to the masses.
androiddev,3cauij,jamespullar,1 point,Mon Jul 6 14:49:18 2015 UTC,"If you use Google Analytics or some other analytics, you can see what devices your user base are actually using. It'll be easier to determine which devices you should purchase that way.  Genymotion or AVD emulators will also serve their purpose fairly well, but in my experience nothing beats physical devices."
androiddev,3cauij,UMadBreaux,1 point,Mon Jul 6 17:24:34 2015 UTC,"Unit and integration tests for program logic, was looking into UI test frameworks but have not found anything promising so far.  I use my phone for testing more than emulators because it is already on my desk anyways. Sometimes I get a QA person on projects but I still do a lot of my own thorough testing because they are not always familiar with good ways to try and break the app."
androiddev,3cauij,bubbleguuum,-1,Tue Jul 7 01:30:36 2015 UTC,"There's no need: if it compiles, ship it."
androiddev,3cauij,HaoChen,11,Mon Jul 6 14:30:16 2015 UTC,Are you a developer at EA?
androiddev,3cauij,s73v3r,1 point,Mon Jul 6 14:38:05 2015 UTC,And this is why developers aren't respected.
androiddev,3caj78,TheKeeperOfPie,5,Mon Jul 6 11:42:50 2015 UTC,"I've not looked through the code in detail, but I really recommend using packages to create logical groupings of classes. Add Javadoc and comments. If you're wanting to make a good impression then it matters (I believe)."
androiddev,3caj78,Cephas00,1 point,Mon Jul 6 12:44:11 2015 UTC,"Thanks for the advice. I'm still debating whether to throw the classes together by class type or by function. Several of them are interconnected, so doing it by function doesn't work as well as in some other compartmentalized projects.  Any thoughts on the matter? Also, I'm not entirely sure how I would add JavaDocs and comments without adding too much fluff. A lot of my code is pretty verbose, so I don't think there's that much to clarify. Although that could easily just be my own bias and in reality my code is an unreadable and jumbled mess."
androiddev,3caj78,Cephas00,1 point,Tue Jul 7 05:58:12 2015 UTC,"I tend to do things by function. If there's some interconnection that's fine - I'd either put a top level package for interconnected things, or just be happy that it's easy to traverse a project using and IDE.  You can start by adding class JavaDoc. It's a few extra lines at the top that explains what something does. I'd say method javadoc is important too. Inline commenting only really needs to be done when something isn't entirely clear or you're doing something a specific way for a reason e.g. workaround for x device.  You said it was for a resume so this sort of thing matters if you intend for people to look at your code."
androiddev,3caj78,jaydeepw,2,Tue Jul 7 08:23:32 2015 UTC,"Also write very good public documentation. ""You are what you present"""
androiddev,3cagvg,fuzzyrambler,4,Mon Jul 6 11:12:00 2015 UTC,"Pros:   Easier to use than SQLiteDatabase/ContentResolver You don't have to deal with SQL Object mapping   Cons:   ORM can generate slow and/or crazy SQL queries ORM often becomes bottleneck (performance & flexibility) in critical period of application development   Alternatives:   SQLiteDatabase/ContentResolver or low level wrappers for them like SqlBrite DAO libraries like Cupboard  NoSQL solutions like Realm   In Pushtorefresh we tired of ORMs/DAOs so we've built own library which is some kind of DAO with simplified pack of Operations (Put, Get, Delete) fluent builders, immutability, thread-safety and Rx support: repository StorIO, ""why we made it""."
androiddev,3cagvg,artem_zin,3,Mon Jul 6 12:46:20 2015 UTC,"""You don't have to deal with SQL"" is wrong. While ORMs can do the heavy lifting like serialization and table creations for you, you'll have to write select and bulk update queries on your own with most ORMs. ORMs may abstract it using their own DSL, but in the end it's still mostly SQL."
androiddev,3cagvg,cbruegg,1 point,Mon Jul 6 15:08:45 2015 UTC,"Yeah, some ORMs require writing SQL, but most of them gives you pretty high leveled abstraction over it."
androiddev,3cagvg,artem_zin,1 point,Mon Jul 6 15:57:30 2015 UTC,What do you like about StorIO over Realm?  My experience with Realm has been pretty stellar so far - the only part that bothers me is how it handles threading.
androiddev,3cagvg,ZakTaccardi,1 point,Tue Jul 7 03:35:52 2015 UTC,"I don't like that with Realm you must have mutable entities, threading model is ""strange"". Also, API of working with data is harder than what we offer you in StorIO: Put, Get, Delete + immutability, thread-safety- builders and so on :)  BTW, we are open to StorIORealm, so if you want to help us with this — feel free to contact us on GitHub!"
androiddev,3cagvg,artem_zin,2,Tue Jul 7 11:10:48 2015 UTC,"In our last project we used ORMLite (http://ormlite.com/) as a ""one step up from SQL"" kind of thing and it more or less delivered. Previously we had always done direct SQL but it was starting to bum us out, so we gave that a try. It's not magic and it only removes some of the SQL work that you normally do, but it's enough to be worth it."
androiddev,3cagvg,megamatt2000,2,Mon Jul 6 19:06:43 2015 UTC,How hard was it to move from your SQL setup to ORM?
androiddev,3cagvg,sudhirkhanger,2,Tue Jul 7 04:48:07 2015 UTC,"We didn't actually convert a project to orm, we just started a new project with orm from the beginning so I'm not sure I'd be much help there. I'm guessing it would be a pain to convert an existing project though."
androiddev,3cagvg,megamatt2000,1 point,Tue Jul 7 12:27:37 2015 UTC,I would like to know too. I am working on very basic table with only 2 or 3 columns. Would it be beneficial to look over SQLite and choose an ORM? I am more inclined to use SQLite in order to familiarize myself with it.
androiddev,3cagvg,sudhirkhanger,2,Mon Jul 6 16:28:18 2015 UTC,"One very basic table: no benefit with ORM. Object-relational mappings help in much larger systems, where the overhead and complexity in matching sql queries with application objects is hard and time consuming. For small Android applications I don't see the point. You learn less, too."
androiddev,3cagvg,fethaja,-10,Mon Jul 6 18:42:41 2015 UTC,Doesn't matter if you use Realm.  https://alguarrera.files.wordpress.com/2013/07/yeeeeeeeeeeeah.jpg?w=640
androiddev,3cagvg,Zhuinden,2,Mon Jul 6 11:20:09 2015 UTC,Love me some Realm
androiddev,3cagvg,ZakTaccardi,0,Tue Jul 7 04:39:33 2015 UTC,"Despite the downvotes, I mean it. If you aren't forced to use SQLite databases, then you can check out http://realm.io   Otherwise, a working simplification I've seen was Cupboard."
androiddev,3c7t0o,AnythingForSuccess,19,Sun Jul 5 18:26:56 2015 UTC,I think most of us just silently languish among the other 99.99999% of apps that are below the front page of the Play Store.
androiddev,3c7t0o,keith-burgun,3,Mon Jul 6 01:28:09 2015 UTC,"Sometimes I wonder how exactly PlayStore placement works. One of my new apps has about 1300 downloads with 4.4 rating after 30 votes (people that use it seem to enjoy it), and i still can't get above similair apps that - lets be honest - look like shit and have avg. rating of 1.7-2.0."
androiddev,3c7t0o,drabred,1 point,Mon Jul 6 07:50:09 2015 UTC,"Buzzwords. Stick WWC and Taylor Swift references in somehow, watch as you make the front page"
androiddev,3c7t0o,pandanomic,5,Mon Jul 6 08:04:55 2015 UTC,"Yeah so it seems. ""This app won't make you love Taylor Swift, or Game of Thrones BUT..."" :P"
androiddev,3c7t0o,drabred,9,Mon Jul 6 08:10:50 2015 UTC,Luck
androiddev,3c7t0o,paladine01,3,Mon Jul 6 00:24:44 2015 UTC,"I posted about my app here, here, and here (all of the relevant subreddits) and it was met with relatively good reception. On my first week, I hit a few hundred downloads.   That said, it helped that I provided an imgur album of good looking Material Design screeenshots and a link to the store. I also tried to keep the story short and sweet, and aimed for the audience my app was directed for."
androiddev,3c7t0o,sacala,2,Mon Jul 6 08:41:39 2015 UTC,"Well I developed an app that specifically to help with a party game called Mafia. I also happen to play forum based Mafia on a few online forums, so I made a couple of shameless posts since the app actually pertained to the people there."
androiddev,3c7t0o,CaddoSierra,2,Mon Jul 6 03:25:26 2015 UTC,"Reddit, hacker news, xda, essentially any tech website with user generated content"
androiddev,3c7t0o,hellotimmutton,2,Mon Jul 6 03:14:24 2015 UTC,Do you have a link to your website?
androiddev,3c7t0o,EpicSolo,1 point,Sun Jul 5 23:23:32 2015 UTC,Website: masalatech.com  Youtube: https://www.youtube.com/watch?v=hvn-SJeesZA
androiddev,3c7t0o,rainsstudios,3,Mon Jul 6 00:40:06 2015 UTC,Website: masalatech.com  Youtube: https://www.youtube.com/watch?v=hvn-SJeesZA   I seriously suggest you reconsider the idea of creating the 1738545th website that does app reviews.  We don't need more review websites. We need more websites that give indies the same exposure as they give to the new Candy Crush game or the new EA game or something.  Something like a 'this weeks top indie games' section on the play store. (A guy can dream)
androiddev,3c7t0o,lordoftherings911,2,Mon Jul 6 00:55:10 2015 UTC,"Honestly I've trying to  do that. I try to look for smaller developers on reddit and ask if they want a review. I myself make apps+games on android and sorta wished getting exposure was easier :). Of course I have been making reviews for bigger apps too, but I do my best to do some of both."
androiddev,3c7t0o,rainsstudios,2,Mon Jul 6 02:43:54 2015 UTC,"What defines an ""indie"" game? Where is the line drawn between indie games and non-indie games?"
androiddev,3c7t0o,lordoftherings911,2,Mon Jul 6 02:56:59 2015 UTC,"Exactly that's the problem. Jonathon Blow's $4 million 'The Witness' is called indie. So is the game that a beginner made in a game jam.   Perhaps a better option would be filtering search results. E.g:   Search for games with less than 10k downloads and greater than 4.8 rating.   This, for example, would give us apps, games that aren't that popular but have a high rating.  Still, it's hardly perfect and would drive developers to try to buy fake ratings. Better than nothing I guess."
androiddev,3c7t0o,lordoftherings911,2,Mon Jul 6 07:18:06 2015 UTC,I'm working on a project at the moment that somewhat does what you're asking: Curated  Essentially I'm taking the best games on the Play Store (not Candy Crush or crap like that) and allowing people to easily search through them.
androiddev,3c7t0o,Phreakhead,2,Mon Jul 6 07:54:32 2015 UTC,"Just downloaded it. Already found a bunch of awesome games!   Random Suggestions: Change the shade of the dark purple to something a bit brighter, pink-ier, light blue-ier. It looks kinda dull now and it shows in the screenies. Also, do you really think the play store green is the best idea? Check out some examples given somewhere on google.com/design (well known combinations of primary + accent color). Also, I'd stick with a single bold color for the toolbar with a somewhat flashy FAB. Googled up an example. You never want the FAB and toolbar to be the same color. And you don't want to drastically switch color themes (from entirely purple on one screen to entirely play-store-green on another screen). This would also complement your app icon.  For the screenies, perhaps you could search for some creative commons licensed images and just show some examples with made-up names or something. This is because if something doesn't grab the attention of the average dumb user, they'll just scroll down without a second thought and go to 'similar apps' or something.  Here's another one I noticed. I'll try to explain it the best I can. Under 'Submit a game', I see a list of all my apps. I'm guessing you use that PackageManager kinda thingy and dump the list in a gridview, right? Given that Curated is only about games, why show other apps?  Now obviously it's not practical to check every single app if it's under the 'games' category in the play store (or is it?), but you can compile a list of common apps and exclude them. You don't need to show the facebook app, nor Google Chrome, nor dropbox, nor Evernote, nor twitter, nor BBC news. My point is, perhaps you can manually compile a list of the top app packages and crosscheck against the list given by PackageManager or whatever it's called and exclude them from the gridview.   As for the play store description I didn't find the keywords 'download' or 'market' in your description which are most likely the keywords that users will enter in hopes of finding another app store kinda app after being fed up of staring at Candy Crush at the home page of the play store. My point is, think about what your potential future user will enter in the play store search bar. What keywords do you want to put your app on the search list? Check out the description of other similar apps for ideas."
androiddev,3c7t0o,LadyTesla,2,Mon Jul 6 15:16:37 2015 UTC,"Hey,  Cheers for that feedback - really awesome stuff!  Glad you found something decent to play too.  You're probably right about the purple being a bit dull - I'll play around with brightening it up.  Probably something more like the colors here.    Regarding switching colors in the detail pages - it actually changes color based upon the colors in the app icon you've selected (shouldn't always be green).  I thought it was quite fun :P  Regarding screenshots - I actually have some devs who gave me permission to use their apps, but I can't take any chances with Google unfortunately.  Not until I have enough bargaining power appeal a ban.  I've read the images are caught by bots, and even if you provide proof nobody pays attention to it.    The manually compiled list could be nice - I'll put it on the TODO list.  You're right about the description - I should update that as soon as possible.    Thanks again for the feedback!"
androiddev,3c7t0o,dontgetaddicted,1 point,Mon Jul 6 17:46:04 2015 UTC,"There are indie reviewers just as there are indie devs. Getting the word out through any channel is good, but it takes work. In a lot of journalism and marketing, the big media outlets look to the smaller bloggers for sources."
androiddev,3c7t0o,Phreakhead,1 point,Mon Jul 6 19:01:16 2015 UTC,"When I first posted mine, I actually got a few emails from some of those ""groups"" interested in helping me promote mine. I usually dismissed them as scammy, but there might be some real ones out there."
androiddev,3c7t0o,I_AM_INTERFACED,3,Mon Jul 6 04:23:52 2015 UTC,"The day I submitted my first app, I had 3 different people promising hundreds of thousands of downloads, reviews, and stars. I'm shocked people a savy as developers would fall for such things. I guess every group has a few idiots in it though."
androiddev,3c7t0o,micketic,3,Mon Jul 6 03:29:15 2015 UTC,"There is precedent for it. Getting a bunch of fake downloads and ratings can get you higher in the app store rankings, and also helps in the fact that a user is much more likely to download your app if they see lots of others have already downloaded it.  I've never tried it myself, but I wonder how many now-popular apps started out like that...  Edit: grammar"
androiddev,3c7t0o,BadPaddingException,1 point,Mon Jul 6 03:37:31 2015 UTC,"It really depends what you're going for, what the core demographic is. For my apps, I used a site I owned to market it (it was related content), you can also ask sites to take a look at it and promote it if it doesn't suck.  If its a social app, I honestly have no idea how to market those and they seem to catch on with college crowds by random."
androiddev,3c7t0o,BadPaddingException,1 point,Mon Jul 6 04:27:17 2015 UTC,"I answer relevant questions on Quora with a link to app (Like this). Post it on reddit, again, where it helps in the conversation.  Complete basic ASO, translate the app, make a video.  Add an option so people can share the app's URL from the app itself, or better yet, reward them for sharing.  Message ALL the friends and groups I am part of to download and rate the app.  After all these things have been done, you'd get some traction. Then go to review sites/channels and get a review."
androiddev,3c7t0o,BadPaddingException,1 point,Mon Jul 6 04:56:33 2015 UTC,Facebook campaigns. Twitter ad campaigns. Chartboost.
androiddev,3c7t0o,prawnnz,1 point,Mon Jul 6 07:03:36 2015 UTC,"Depends on many things, the app you're promoting, the visuals you're using, the demographic you're targeting. I've seen decent results, but so far my most efficient promotion is through Facebook."
androiddev,3caf9p,farmasek,1 point,Mon Jul 6 10:50:39 2015 UTC,"I am somewhat confused what the question is here but basically I think you need to not just store and check if an alarm was set, but rather store the hour and minute in the day that the alarm was set for each alarm. Then you could retrieve all the various alarm times and do range checks on them in that way, using a Date object or just doing simple time comparisons.   Also, keep in mind that alarms registered with AlarmManager will be unregistered when the device is shut down, so you will need to register a broadcast of on boot complete and re-register all the alarms then."
androiddev,3caf9p,Jawnnypoo,1 point,Mon Jul 6 13:38:46 2015 UTC,"I am saving for every alarm active days, time and minutes separately, because i found that sqlite doesnt allow saving date format. Which brings me to question, if is possible to have one service, which wiill find nearest alarm and start it? But without date format and with work with days in week, i dont know  how to query it."
androiddev,3c8ib3,MrBIMC,4,Sun Jul 5 22:05:50 2015 UTC,"I am an Arch Linux + GNOME 3 user.  I started by running sh script.sh in the generated directory without starting adb first. The script quit without printing anything or producing any notifications, and put this in .adb-logs.txt:  Mon Jul 06 14:19:27 NZST 2015:  config doesn't exist! Creating new default config now! Mon Jul 06 14:19:49 NZST 2015:  checking all ips in current upnp zone: Mon Jul 06 14:19:49 NZST 2015:  success - cannot bind 'tcp:5037' Mon Jul 06 14:19:49 NZST 2015:  success - cannot bind 'tcp:5037' Mon Jul 06 14:19:52 NZST 2015:  success - * daemon not running. starting it now on port 5037 * Mon Jul 06 14:20:07 NZST 2015:  finished executing   I then tried again, now that adb is running. It again quit without printing anything or producing any notifications, but put this in .adb-logs.txt:  Mon Jul 06 14:22:55 NZST 2015:  checking all ips in current upnp zone: Mon Jul 06 14:23:13 NZST 2015:  finished executing   I then used sh configurator.sh and changed the setting from ""try all ips from current upnp zone"" to ""try single ip"" and entered my phone's IP. I clicked apply changes and exited the window.  I ran sh script.sh again and it still printed nothing to the console and produced no notifications. However it did work because adb devices now shows my device. It put this in .adb-logs.txt:  Mon Jul 06 14:27:24 NZST 2015:  success - connected to 192.168.0.9:5555 Mon Jul 06 14:27:29 NZST 2015:  finished executing   Although I got it working in the end, I do not see how it is an easier process than typing adb connect IP.    At no stage did I get a notification, but I'm not sure why because your command seems correct. If I type notify-send ""ADB AutoConnecor"" ""Hello"" into a console myself I do get a notification."
androiddev,3c9wok,crush-gear,2,Mon Jul 6 06:19:20 2015 UTC,Almost all message queues can be used to send push messages to Android. Why don't you want to use GCM?
androiddev,3c9wok,Enterprize1,1 point,Mon Jul 6 06:49:05 2015 UTC,"i just want to try another open source messaging, did you never use any messaging except GCM?"
androiddev,3c9wok,ragmondo,1 point,Mon Jul 6 07:01:45 2015 UTC,Yes... but nothing is baked in the same way as gcm is. If you have an active foreground app then that's no issue but if you want to awake a non active activity I don't know any other way but I'm always happy to be educated otherwise.
androiddev,3c9wok,HannesDorfmann,1 point,Mon Jul 6 08:22:56 2015 UTC,You could implement a long living socket connection with a keep alive heartbeat ping to your backend. As far as I know GCM is something like that and also Facebook Messanger app uses that kind of socket.
androiddev,3c9wok,jaydeepw,1 point,Mon Jul 6 10:19:21 2015 UTC,What you r saying is polling. GCM also must be doing same at the system level but having such a thing baked right into the system is very efficient over its alternative wrappers. I am open to being educated in depth too. ;)
androiddev,3c9wok,HannesDorfmann,1 point,Mon Jul 6 16:02:02 2015 UTC,"Yep, it's kind of ""polling"" (but polling means that the client begins interaction, which isn't the case with sockets because server can also send a message once connection is established) and yes GCM on your android device is doing the same thing."
androiddev,3c9wok,ciny,1 point,Tue Jul 7 17:40:26 2015 UTC,"You could implement a long living socket connection with a keep alive heartbeat ping to your backend.   Yup, and kill my battery in the process"
androiddev,3c9wok,HannesDorfmann,1 point,Tue Jul 7 09:55:28 2015 UTC,"According some facebook guys (they use it in facebook messanger, obviously a heartbeat is not needed every 10 seconds) the battery life is not as much as affected as I would think of. Just saying ..."
androiddev,3c9wok,ciny,1 point,Tue Jul 7 17:37:23 2015 UTC,"That may be true. But I doubt (no disrespect) OP is a one-man facebook android devteam. I'm not saying it's not possible, just saying 9 out of 10 devs will probably do more harm than good (including me)."
androiddev,3c9wok,HannesDorfmann,2,Tue Jul 7 18:00:13 2015 UTC,"Btw. as far as I know not using GCM may (or may not) lead to problems with the new doze mode feature in M, since GCM is the only way to wake up your app once the users device is in doze mode."
androiddev,3c9wok,neelamnaveen86,1 point,Mon Jul 6 10:14:35 2015 UTC,MQTT is an technology developed by IBM which connects internet of things and its libraries are available for almost all programming languages it can be used to replace GCM in android for messaging and push notifications its based on the publisher-subscriber model.
androiddev,3c9wok,thepoosh,1 point,Mon Jul 6 09:38:39 2015 UTC,Pubnub is a very good and fast messaging service
androiddev,3c9wok,ZakTaccardi,1 point,Mon Jul 6 09:47:32 2015 UTC,"You need to use GCM for sending push notifications. Nearly every major app does this. Keep in mind, push notifications are not the same as new messages in a chat thread. Those should be send over a different protocol when the app is running as a foreground service.   Push notifications are meant for sending a notification to an inactive app."
androiddev,3cbhgt,ChrisNoir,1 point,Mon Jul 6 16:47:07 2015 UTC,"I'm wondering this too....... But I want it done the real ""Google Maps"" way like you see with the javascript.  Are you just putting down your own markers though? The Google Places API will display businesses using their red search markers through their UI fragment.  EDIT: The closest thing I can get business places in general is via the Places Picker: https://developers.google.com/places/android/placepicker"
androiddev,3cbhgt,epicstar,1 point,Mon Jul 6 16:51:19 2015 UTC,I'm not putting down my own
androiddev,3cbhgt,epicstar,1 point,Mon Jul 6 17:22:16 2015 UTC,"I see we're on the same boat I guess... From what I know, there isn't a way.... All of the other Google Maps markers like hospitals, schools, recreational spots, exit, numbers, etc. are on your map right? I had to do a simple turning on of the Places API and followed this: https://developers.google.com/places/android/start  But yeah, from what I know, the businesses don't show on the map unless you use the Places API UI fragment..."
androiddev,3cbhgt,bart007345,1 point,Mon Jul 6 17:26:17 2015 UTC,I'm on a phone so I can only be brief. I've just finished an app that shows Wi-Fi hotspots near you.  Once you have the map fragment rendered you need to create Marker objects and add then to the map.  Does that help?
androiddev,3cbhgt,schwiz,1 point,Mon Jul 6 17:28:45 2015 UTC,Here is today's questions thread https://www.reddit.com/r/androiddev/comments/3caspc/questions_thread_july_06_2015/
androiddev,3c753o,imsrslyyouguys,4,Sun Jul 5 14:30:59 2015 UTC,"Many Google apps do this, so yes, it's fine and most users will be familiar with it at least"
androiddev,3c753o,Quinny898,1 point,Sun Jul 5 14:50:19 2015 UTC,Thanks for your answer. Could you possibly give me an example of which Google app does this? I didn't see this before (in Google's apps at least).
androiddev,3c753o,ZakTaccardi,6,Sun Jul 5 14:52:48 2015 UTC,"Google play music. You can navigate to 'My Library', then you have tabs like 'playlists,' 'artists', 'albums' etc"
androiddev,3c753o,Quinny898,5,Sun Jul 5 14:56:28 2015 UTC,Play Store too
androiddev,3c753o,bukster,1 point,Sun Jul 5 15:06:03 2015 UTC,"Thanks, I am not using Google play music so I didn't know."
androiddev,3c753o,rubixhacker,6,Sun Jul 5 15:57:17 2015 UTC,"This UI pattern is fine but it comes with its own set of unique problems. For instance, it is difficult to intercept back, home and change tab events in your nested fragments so if you want to warn your user about something before leaving the screen you need be aware that this will make your life difficult."
androiddev,3c753o,akiaki007,2,Sun Jul 5 16:01:27 2015 UTC,There doesn't appear to be anything wrong with that pattern. What is bothering you about it? Is ProfileFragment loading two children Fragments and a tab bar?
androiddev,3c753o,IWantToBeAProducer,1 point,Sun Jul 5 14:57:37 2015 UTC,"There's nothing specific bothering me about it, really.  I was just wondering if there is any design flaw in this since I am trying to follow Google's design guidelines as much as possible and I couldn't remember seeing this in any other apps."
androiddev,3c753o,ferspec,1 point,Sun Jul 5 15:58:35 2015 UTC,"There is nothing wrong with this design pattern (we're going to be publishing an update to our app that uses this pattern). And there is nothing in the Material Design Guidelines that advises against it either. In fact, Google Design Support Libraries makes it quite easy to explore and implement this. I think it would likely make some of your eventual navigation easier."
androiddev,3c753o,QuestionsEverythang,1 point,Sun Jul 5 17:00:56 2015 UTC,"I think it's fine as long as the tabs are closely related to each other. If they all fit under the same drawer tab, then it's fine, but if you're just dropping things in because it's convenient then you could be in trouble."
androiddev,3c753o,QuestionsEverythang,1 point,Sun Jul 5 19:00:22 2015 UTC,"What I did was create a super Navigation Drawer Activity class, and have all my activities extend that, followed by the fragments. That way I still have control over how each unique activity/fragment handles the back/up buttons."
androiddev,3c753o,bbqburner,1 point,Sun Jul 5 19:31:33 2015 UTC,Extending this question. Should I reuse the same Toolbar for multiple Fragments or one toolbar per fragment? What do you guys recommend?
androiddev,3c753o,tam1m,2,Sun Jul 5 20:01:49 2015 UTC,It's probably easier to just have one Toolbar from the hosting Activity.
androiddev,3c753o,bbqburner,1 point,Sun Jul 5 21:32:32 2015 UTC,"Don't take my answer for granted but this is how I would do it:   Use same Toolbar for multiple fragments if Toolbar has the same functionality no matter which fragment is present. Give each fragment it's own Toolbar when every fragment should have a different Toolbar (different style/buttons/functionality etc.)   But I doubt it very much that giving each fragment it's own Toolbar would come very hand in practice. Even when each fragment has a different Toolbat style/functionality, you can still have only one Toolbar and change it accordingly.  Then again...Toolbars were designed to be more customizable, so we can play around with them (which we couldn't with normal ActionBars)."
androiddev,3c753o,Straight24Guy,1 point,Sun Jul 5 20:17:36 2015 UTC,"From a UX standpoint, I personally think it is better to have your navigation laid out front and center with tabs than to have it hidden in a nav drawer, but only if it's a few tabs (no more than 5?). Just because everyone else is doing it (including Google) doesn't mean it's the best solution. For example, in my apps I try my best to keep common actions (aside from FABs) as low on the screen as possible for better reachability with one's thumb and for better one-handed support. Otherwise, a lot of apps tend to put pressable actions near the top of the screen (not including the Toolbar and it's menu actions). In these times where phablets are becoming more and more common, those people will thank you later, even if they don't realize it.  However, if you have a lot of different types of unrelated screens in your app, it is probably better to have them accessed in a nav drawer than from a bunch of tabs."
androiddev,3cak1k,sashatinkoff,1 point,Mon Jul 6 11:54:14 2015 UTC,"If I'm being honest, I would prefer it being open source so I have more control over the generated codes and how they are used."
androiddev,3cak1k,jojocockroach,1 point,Mon Jul 6 13:12:54 2015 UTC,I was just looking for ways to promote my app once it's released so I find that very interesting. One question though: is it possible to get more details of the inner workings of this service? I'm concerned the service could be compromised and people could generate their own codes.
androiddev,3cak1k,_northernlights_,1 point,Mon Jul 6 17:12:45 2015 UTC,"Oh, sure. I will add information about it later."
androiddev,3c9gk2,LadyTesla,2,Mon Jul 6 03:23:46 2015 UTC,We've been using the Navigation Drawer in our app and the lag was definitely noticeable.  I followed the accepted answer in this post on SO and it helped massively.
androiddev,3c9gk2,wooju_luke,1 point,Mon Jul 6 09:17:13 2015 UTC,"Cool, i'll try it out!"
androiddev,3c9gk2,Indie_Dev,2,Mon Jul 6 12:11:55 2015 UTC,Why don't you use the new Android Design Support Library which contains a new NavigationView?
androiddev,3c9gk2,zfinisher,1 point,Mon Jul 6 11:04:16 2015 UTC,"I used the same tutorial and I think I saw that message at one time.  But it's definitely slow when you open it the first time in the emulator. If you use genymotion or a real device, it shouldn't be slow at all."
androiddev,3c87d5,JTronLabs,2,Sun Jul 5 20:32:33 2015 UTC,I've removed your post. Please read the rules next time.  Missed the github link. Post is fine!
androiddev,3c87d5,pandanomic,1 point,Sun Jul 5 20:41:42 2015 UTC,Sorry about that!
androiddev,3c87d5,pandanomic,1 point,Sun Jul 5 20:58:55 2015 UTC,"So I just read the rules and it says I can post as long as I include the source code, which I did. Is my mistake linking to the play store listing instead of using a text post?"
androiddev,3c87d5,CaddoSierra,2,Sun Jul 5 21:00:37 2015 UTC,Did you add that after? I could have sworn I looked and didn't see a github link. I'll re approve now!
androiddev,3c87d5,brothabear,3,Sun Jul 5 21:04:33 2015 UTC,"It was there, but no worries (happens to the best of us)! I appreciate it!"
androiddev,3c87d5,brothabear,2,Sun Jul 5 21:14:51 2015 UTC,I think this is a self post.. There's no link to your app on the play store.
androiddev,3c87d5,mrneo240,1 point,Mon Jul 6 03:29:02 2015 UTC,Wow forgot that. Thanks!
androiddev,3c87d5,mrneo240,2,Mon Jul 6 04:15:11 2015 UTC,"Hi, I tried the game. I think the asteroids were bugged for me. The first level, I could see them falling but they would cut in and out like frames were dropped from the animation. Level two, I could barely see them at all. They would start to enter the screen but they were flashing like the first level and they wouldn't appear at all any lower than the score display. I couldn't seem to hit them with my missiles but they would crash into me (invisibly).  I thought the touch controls were fine, didn't have any trouble there.  Motorala Droid Maxx, Kit Kat 4.4"
androiddev,3c87d5,mrneo240,1 point,Mon Jul 6 15:15:13 2015 UTC,Thanks for checking it out. I'll look into this and try to fix it when I get home tonight.
androiddev,3c87d5,mrneo240,1 point,Mon Jul 6 16:24:06 2015 UTC,"So this has been a recurring error throughout development. It happens very rarely where the meteors are invisible, immune to damage, but still hurt the player.   I have never had the cut in/cut out happen though. Does this all happen consistently for you or is it sporadic?"
androiddev,3c87d5,mrneo240,2,Tue Jul 7 05:30:03 2015 UTC,"I can't seem to recreate it now but this morning it happened every game. The flashing or stuttering happened the first time I opened the app just now but level two worked. After restarting the app again, I don't have any issues."
androiddev,3c87d5,mrneo240,1 point,Tue Jul 7 07:32:15 2015 UTC,"Dang well if you can figure out a way to consistently recreate it I'd love to know.   Edit: Now that I think about this it may be an image loading issue. I don't do any special caching or anything with these images, simply use view.setBackgroundResource. After looking into it more it seems like the library Picasso handles caching well, so I might try that."
androiddev,3c87d5,mrneo240,2,Tue Jul 7 15:53:12 2015 UTC,"Gs5 on lollipop 5.0   Game seemed fine, other than frame rate issues Decently fun to play, enemy variety is nice The first double cannon upgrade really blows not enough variety in levels controls tied to framerate why only 18 days?   My high score: http://imgur.com/edS3ZOc"
androiddev,3c7bw1,theshapersarecoming,6,Sun Jul 5 15:44:30 2015 UTC,SQLite
androiddev,3c7bw1,UMadBreaux,2,Sun Jul 5 15:53:35 2015 UTC,Directly?
androiddev,3c7bw1,Kritarie,2,Sun Jul 5 15:57:17 2015 UTC,https://github.com/Raizlabs/DBFlow
androiddev,3c7bw1,cbruegg,1 point,Sun Jul 5 16:23:16 2015 UTC,Why not ORMLite? Isn't that already well-tested?
androiddev,3c7bw1,UMadBreaux,1 point,Mon Jul 6 15:06:09 2015 UTC,"Yes, the data I store is fairly simple so I  just have repositories set up that allow me to interact with the data. There are several ORMs available that work with SQLite, but I work with Xamirin so I have not really searched for one that would mesh well with Xamirin's shared code"
androiddev,3c7bw1,iluretar,4,Sun Jul 5 21:50:13 2015 UTC,I'm using realm in my last project and I think I'm gonna stick with it.  [Realm](www.realm.io)
androiddev,3c7bw1,dj_darkhorse,1 point,Sun Jul 5 17:49:50 2015 UTC,"I recently tried realm, but needed to use autocompletetextview which requires the filterable interface which does work in separate threads, which meant realm was sufficient at that point. Other than that it seemed good though."
androiddev,3c7bw1,neocypher,2,Mon Jul 6 03:52:32 2015 UTC,"I encountered the same problem, I could hack around it like that: ((Activity)mContext).runOnUiThread(new Runnable() {                     @Override                     public void run() {                      final List<User> list = new ArrayList<>();                     Realm realm = Realm.getInstance(mContext);                     //querry and stuff                     list.addAll(result1);                      filterResults.values = list;                     filterResults.count = list.size();                  }             });   Sorry for the formatting I'm on mobile"
androiddev,3c7bw1,drabred,5,Mon Jul 6 13:31:23 2015 UTC,Could always use SharedPreferences for small stuff.
androiddev,3c7bw1,cyancynic,1 point,Sun Jul 5 19:44:45 2015 UTC,Sqlcipher - sometimes with active android on top of it.
androiddev,3c7bw1,GW2NewsBot,1 point,Sun Jul 5 19:04:23 2015 UTC,https://github.com/pilgr/Paper
androiddev,3c7bw1,burntcookie90,1 point,Mon Jul 6 14:37:28 2015 UTC,"I've been using Sugar, you can see the implementation here https://github.com/dinosaurwithakatana/hacker-news-android on the feature/login branch"
androiddev,3c3wr5,micketic,47,Sat Jul 4 15:05:05 2015 UTC,"Best way to deal with a negative review is always to tell them to email you in order to resolve the problem. You don't have to actually take care of the problem, but the public image of the developer taking care of negative reviews will pay off."
androiddev,3c3wr5,_maggus,2,Sat Jul 4 18:37:17 2015 UTC,"Whenever I see a developer do this with a template response instead of actually answering, my impression of them is significantly lowered, not improved.  How you handle dissatisfaction is vital, and template answers just pisses customers off (I manage a complaint team for a bank)."
androiddev,3c3wr5,plastix3000,1 point,Mon Jul 6 12:11:03 2015 UTC,its fairly hard to answer many reviews on the playstore in the given character limit.. so its easier to deal through email.  Plus trying to communicate back and forth through reviews is really annoying
androiddev,3c3wr5,gonemad16,4,Wed Jul 8 22:00:35 2015 UTC,"Is that what you recommend, lying to your users? Doesn't seem like a good practice."
androiddev,3c3wr5,CodingGorp,25,Sat Jul 4 19:37:01 2015 UTC,"No, not at all. If a negative review is raising valid points, you should absolutelty take care of it. However, there are a lot of negative reviews with ridiculous reasons, some of them even beyond the scope of your app. I'm not recommending being an asshole to your users, some complaints just can't be dealt with."
androiddev,3c3wr5,_maggus,6,Sat Jul 4 20:33:50 2015 UTC,Agreed. One review of my app said that's it's crap since the update added ads. My app has no ads! They confused my app with another one my company makes. Grrr!
androiddev,3c3wr5,bart007345,0,Sun Jul 5 07:13:07 2015 UTC,"Now that makes sense. These comments reminds me of a product I could really use, but the developer not caring about updating it prevented me. For example, It is called ""Wrist Presenter"" for Android Wear. I personally hate these types of developers to be honest. Besides the $3.49 in-app purchase to enable unlimited slides, the app does not work on a variety of devices and is due for an update, yet the developer doesn't respond to any of the reviews! The last time the developer has commented on a review was in March. It really goes to show the type of developers there are out there. It's never the clients fault that shit doesn't work, it's ours.  https://play.google.com/store/apps/details?id=com.dandydev.wristpresenter&hl=en if anyone wants to take a look.  Edit: Shitty grammar"
androiddev,3c3wr5,CodingGorp,1 point,Sat Jul 4 20:43:36 2015 UTC,I think there's a significant minority who think they can put something out there and forget about it - passive income streams!
androiddev,3c3wr5,bart007345,6,Sun Jul 5 07:14:55 2015 UTC,I don't see how asking for them to email you is lying...
androiddev,3c3wr5,ThePa1eBlueDot,2,Sat Jul 4 19:57:28 2015 UTC,You don't have to actually take care of the problem
androiddev,3c3wr5,hitler_kardashian,10,Sat Jul 4 20:22:44 2015 UTC,It doesn't make the review response a lie though.
androiddev,3c3wr5,JustThall,3,Sat Jul 4 21:23:01 2015 UTC,"Depends on the problem.  Half the time you get somebody complaining about something totally unrelated and/or impossible.  ""Ever since I installed your game my phone's task switch button stopped working!""  Uh...  Okay."
androiddev,3c3wr5,Terazilla,1 point,Sun Jul 5 01:23:18 2015 UTC,"A few years ago I got a negative review on my app for ""showing ads"". It didn't even have internet privileges..."
androiddev,3c3wr5,twigboy,1 point,Sun Jul 5 09:34:07 2015 UTC,You know what would suck? Displaying ads on a watch face.
androiddev,3c3wr5,CodingGorp,0,Sun Jul 5 15:50:02 2015 UTC,Every time I try to install Flux for Android it breaks my installation manager. Lol.
androiddev,3c3wr5,CodingGorp,4,Sun Jul 5 02:45:09 2015 UTC,"That's actually a feature of Android. Whenever something is being overlayed onto the screen, in this case a transparent black layer to dim the screen, Android makes it so you can't press the install button to keep apps from tricking you into installing apps you don't want."
androiddev,3c3wr5,QuantumBarber,1 point,Sun Jul 5 14:39:02 2015 UTC,What do you do about 1 star reviews complaining that the app is not in their language? Is there anything a developer can do about these?
androiddev,3c3wr5,504d206d652074686973,1 point,Sun Jul 5 09:22:35 2015 UTC,"Google does offer a translation service. In the Developer Console, you can upload your strings.xml file, and there are native speakers offering to translate it. I don't know how much they charge, though."
androiddev,3c3wr5,s73v3r,1 point,Wed Jul 8 02:06:31 2015 UTC,I have noticed ads for that in my developer console but I doubt it is priced low enough for me and it would be a pain to have to buy it again every time I add new strings.
androiddev,3c3wr5,504d206d652074686973,-1,Wed Jul 8 02:09:50 2015 UTC,Don't release it in non-English regions?
androiddev,3c3wr5,twigboy,-1,Sun Jul 5 09:34:50 2015 UTC,"AND if you're posting from Hotmail (anything other than GMail) - you can say ""FUUUUUUUCK YOUUUUUU!""  ..... and they can't prove it came from you."
androiddev,3c3wr5,SarahC,16,Sun Jul 5 07:57:38 2015 UTC,"No need for sweeping statements, it's just one developer."
androiddev,3c3wr5,RoidAnd,38,Sat Jul 4 19:24:36 2015 UTC,"That reply is in Violation of Google Policies and can be reported. If some comment pisses you off, Ignore it."
androiddev,3c3wr5,androidclean,17,Sat Jul 4 15:42:16 2015 UTC,"Well I cracked up reading it, so they have that going for them, which is nice."
androiddev,3c3wr5,lalop,22,Sat Jul 4 18:18:40 2015 UTC,"Indeed, it's never good for business to argue with a customer. You can never gain anything from it. Swear all you want at home, but tell the customer you are sad to hear that and ask  of they can elaborate on the issue."
androiddev,3c3wr5,sweYoda,8,Sat Jul 4 16:33:58 2015 UTC,I doubt that user is a customer. A customer is someone who pays you money. Like that guy who buys ad space from your app.
androiddev,3c3wr5,Timugail,4,Sat Jul 4 20:58:06 2015 UTC,And I doubt anyone will want to buy ad space if you go around telling users to fuck off. =/ users are basically customers.
androiddev,3c3wr5,AquamanIsAwesome,2,Sat Jul 4 22:56:47 2015 UTC,No they are the product being sold
androiddev,3c3wr5,504d206d652074686973,1 point,Sun Jul 5 09:21:30 2015 UTC,I think it's safe to say that you don't understand how mobile advertising works. Reading app reviews is not part of the process.
androiddev,3c3wr5,azialinx,1 point,Sun Jul 5 13:53:13 2015 UTC,"No, but if no one is getting your app... That's the point I'm making."
androiddev,3c3wr5,AquamanIsAwesome,4,Sun Jul 5 16:11:47 2015 UTC,Russians are weird with reviews. I keep getting reviews across all of my apps (in Russian) about downloading some app and using a referral code
androiddev,3c3wr5,Quinny898,11,Sat Jul 4 15:52:28 2015 UTC,"I honestly hate androids review system.   Most of the comments are not in English and most make no sense.  Google translates to ""I like"" rates it 1/5 ?!?!?!!  I mean it's like some people don't know how a 5 star rating system works.  I wish that there could be some auto moderating system for reviews."
androiddev,3c3wr5,j_a_m_i_e,2,Sat Jul 4 21:09:47 2015 UTC,"I had a bunch of 1 star reviews from China with nothing or like you said ""good"" or ""I like it"" on my first two apps so guess what? My new apps aren't available there anymore! (Not sure your situation, though)."
androiddev,3c3wr5,wapz,3,Sun Jul 5 06:51:45 2015 UTC,"this is at least ok, the reviewer gave SOME details. Some of the ratings I get on my app leave NO REVIEW. Just a 1 star rating. And the way the Google Developer Console works, I dont have a way to contact people who leave 1 star rating and cant even see their names/user id."
androiddev,3c3wr5,mavdev,1 point,Sat Jul 4 23:59:01 2015 UTC,"I noticed the same problem in the last few weeks. Lots of 1, 2 stars and no review or explanation why."
androiddev,3c3wr5,gfp7,0,Mon Jul 6 20:53:32 2015 UTC,"yes it's annoying, it would be nice if Google scale down those reviews"
androiddev,3c3wr5,trtryt,2,Sun Jul 5 00:59:29 2015 UTC,I am russian and I never answer like that.
androiddev,3c3wr5,jackhexen,2,Sat Jul 4 19:48:51 2015 UTC,Yeah. This was just a bad case of generalisation in the name of humour. Sorry about that
androiddev,3c3wr5,jackhexen,5,Sat Jul 4 20:34:08 2015 UTC,"But sometimes I really wish to answer like that. So, this is funny anyway. :D"
androiddev,3c3wr5,tomius,4,Sat Jul 4 21:08:26 2015 UTC,Иди на хуй!!
androiddev,3c3wr5,nitrousconsumed,-4,Sat Jul 4 23:01:54 2015 UTC,I read your reply in a thick russian accent. Upvoted you 584 times for it.
androiddev,3c3wr5,gilded_honour,1 point,Sat Jul 4 21:15:25 2015 UTC,"Yes, they're allowed to :) I'm Russian too. Now I know what to do."
androiddev,3c3wr5,piyanypowietszem,1 point,Sun Jul 5 02:14:24 2015 UTC,Expected something funny. Why so many upvotes?
androiddev,3c3wr5,josephshanak,1 point,Sun Jul 5 10:23:41 2015 UTC,/r/normaldayinrussia
androiddev,3c3wr5,kdb223,1 point,Sun Jul 5 14:02:04 2015 UTC,TIL about r/ProgrammerHumor
androiddev,3c3wr5,iublute,-4,Sun Jul 5 16:09:11 2015 UTC,"Just don't read the reviews. There's nothing positive to gain from reading them. If you don't know how to make apps, don't make them. Reading comments from idiots will not help you."
androiddev,3c3wr5,CodingGorp,8,Sat Jul 4 19:58:41 2015 UTC,You made an account to just post this
androiddev,3c3wr5,changingminds,1 point,Sat Jul 4 20:31:37 2015 UTC,Reading comments from idiots will not help you.   I wish you'd started from this so I wouldn't have read the rest of your comment.
androiddev,3c3wr5,iublute,-1,Sun Jul 5 10:12:22 2015 UTC,LOL. Let me guess. You're not a developer but one of those pathetic retards who think their opinion matters. This is my messages to you: Go Fuck Yourself!
androiddev,3c7u7x,SquattingWalrus,3,Sun Jul 5 18:37:30 2015 UTC,"Yes, if you have written and verifiable proof from them that you have permission.  Otherwise absolutely not.  I highly suggest you read the google play developer policies for more information."
androiddev,3c7u7x,j_m_studios,1 point,Sun Jul 5 21:06:06 2015 UTC,"Will do, thank you."
androiddev,3c8w5t,kerb4l,2,Mon Jul 6 00:12:24 2015 UTC,No need for unity then
androiddev,3c8w5t,dolan7,2,Mon Jul 6 01:38:28 2015 UTC,Is it a game? Is it something that you may be interested in porting to another platform? Then Unity is a decent choice.
androiddev,3c8w5t,s73v3r,2,Mon Jul 6 06:27:11 2015 UTC,"Seems like you're not sure what the difference is - Unity is a game engine that is basically a bunch of prewritten game 'boilerplate' code done to particular design patterns to enable games to be made more easily, efficiently and reliably.  It just so happens to have its own IDE.    Android Studio is (for intents and purposes) an IDE with the same sort of abstraction, but optimised for typical application purposes.  So what, 2D graphics? Or just menus? Just make it as if it were a typical Android app if the latter.  If the former, Unity is a fully featured 2D engine as well as 3D."
androiddev,3c8w5t,duckinferno,2,Mon Jul 6 09:35:57 2015 UTC,"I recommend you look into libgdx.   it includes cross platform development, which makes debugging super easy as you can debug without having to compile to an android device or virtual machine. :)"
androiddev,3c81oy,SpaceRapist,2,Sun Jul 5 19:43:12 2015 UTC,have you tried asking this in /r/unity2d or /r/Unity3D I would also be interested in this.
androiddev,3c81oy,nomadProgrammer,1 point,Sun Jul 5 20:47:15 2015 UTC,https://www.reddit.com/r/Unity3D/comments/3c89qs/how_often_am_i_allowed_to_show_unity_video_ads/
androiddev,3c81oy,nomadProgrammer,2,Sun Jul 5 20:56:19 2015 UTC,"Thanks subscribed over there, to see what people say, have you played crossy road they seem to show more or less 3 vids per 20-30mins. I read they use Unity ads."
androiddev,3c6o8t,changingminds,7,Sun Jul 5 10:10:03 2015 UTC,"I know it's time consuming, but as someone who does app development on the side the code review feedback would be invaluable."
androiddev,3c6o8t,Wonnk13,3,Sun Jul 5 12:00:45 2015 UTC,"+1 for this, would be really helpful I think"
androiddev,3c6o8t,patrick91it,5,Sun Jul 5 11:17:47 2015 UTC,Feedback on the design or on a small code snippet can be fine but feedback on apps and open source code is very time consuming especially with dozens of apps per thread.
androiddev,3c6o8t,entropio,2,Sun Jul 5 11:30:46 2015 UTC,"Indeed. There's also subs dedicated to app feedback, like /r/androidapps."
androiddev,3c6o8t,pandanomic,-2,Sun Jul 5 11:58:24 2015 UTC,"Really? That's the big reason?   Great app, but consider removing the exit confirmation dialog please   Or   I don't like the color scheme   Or   Perhaps try moving the <some button> a bit lower   Or   <Some feature> could be better implemented in <this way>   How long does it take to type that?"
androiddev,3c6o8t,entropio,5,Sun Jul 5 11:59:10 2015 UTC,"I have hundreds of apps on my phone and I constantly research the market so personally I don't have any motivation to review something like ""Rate my app plz here's apk"" for nothing in exchange, this may sound rude but I never saw threads like to be a success.  However I think ""What are you working on"" threads where developers share screenshots of their apps, ideas and what problems they want to solve should be nice. I saw something like this in game dev community and it's very nice."
androiddev,3c6o8t,rkcr,2,Sun Jul 5 12:15:24 2015 UTC,"Does the ""anything goes"" thread not cover that?"
androiddev,3c6o8t,rkcr,-1,Sun Jul 5 12:29:23 2015 UTC,"Silly me, thinking reviewing developers work is an important topic worthy of a fucking independent thread.  Please go ahead and use my rudeness as an excuse to be lazy.   Here's a wild thought: Try it once, if nobody shows up don't do it again? How hard is it?"
androiddev,3c74rp,supBot,4,Sun Jul 5 14:27:16 2015 UTC,"CloudFlare proxy, DigitalOcean/Vultr backend"
androiddev,3c74rp,vemacs,1 point,Sun Jul 5 14:31:56 2015 UTC,"Thanks. I've been looking at Digitalocean, and  it says 1GBMemory, 1CoreProcessor, 30GBSSD Disk, 2TBTransfer.  That's 2TB per user or per app? Also, how do I estimate the RAM and processor my app would require?"
androiddev,3c74rp,vemacs,3,Sun Jul 5 14:37:01 2015 UTC,"This is a VPS. There are no distinctions between users or apps or anything. You get root, so you have to do everything yourself. You get a lot of power for cheap, but VPSes aren't a point-and-click set up an app and API solution.  Memory and RAM usage are hard to estimate. Get some real world numbers first."
androiddev,3c74rp,vemacs,1 point,Sun Jul 5 14:48:39 2015 UTC,"There are no distinctions between users or apps or anything. You get root, so you have to do everything yourself   Could you explain this a little further to give me some base so I can research on my own? This is my first time working with a backend.  What do you mean by I get the root? When, say, 100 users query my backend using my app, does the backend see it as one query or 100 queries?   Thanks!"
androiddev,3c74rp,t0astter,1 point,Sun Jul 5 15:00:40 2015 UTC,"The backend doesn't care. You get full access to a Linux box. You can do whatever you want (host gameservers, torrents, websites, app backends, chat servers, so on).  VPSes aren't stuff like Parse, Firebase, or etc where they provide all the basic stack for you (but cost significantly more for worse performance). You aren't measured per query or per concurrent users."
androiddev,3c74rp,aldo_reset,1 point,Sun Jul 5 15:23:20 2015 UTC,"Have you worked with a Linux/BSD system before? Might want to do some reading up on it, or just play around with the OS for a month or so to get a feel for it.   Basically, you write a web service, typically REST, on your server (VPS). Usually you'll run this web service on top of a web server, like Apache. Users will hit a URL that will then tell your web service to do something based on the HTTP verb (GET, POST, PATCH, DELETE, or UPDATE).   If writing the backend seems too out of reach/confusing at this point, maybe look into a service like Parse or Firebase?"
androiddev,3c74rp,tootie,2,Mon Jul 6 04:28:27 2015 UTC,"If you want to save money in RAM and CPU, I strongly suggest you use something else than Ruby or Ruby on Rails.  You're an Android developer, why not write your back end in Java? Pick Jetty or DropWizard and you will never worry about performance or scaling on the back end."
androiddev,3c74rp,insane-cabbage,1 point,Sun Jul 5 15:34:53 2015 UTC,"Rails is the backend, I think you're asking about hosting."
androiddev,3c74rp,mrneo240,1 point,Mon Jul 6 01:41:34 2015 UTC,"The standard Ruby runtime doesn't have proper concurrency so handling thousands of users simultaneously with a simple Rails app wouldn't cut it.   Besides that, you could try Heroku. It's an application hosting service that takes care about the environment your app is running in.  It's also free for a minimal setup to test around with it."
androiddev,3c6hw9,Zhuinden,6,Sun Jul 5 08:12:35 2015 UTC,You really need to check out medium or some other blog site. Posting large code samples on reddit is horribly unreadable
androiddev,3c6hw9,pandanomic,2,Sun Jul 5 11:59:45 2015 UTC,"Well I also put this text in the Github readme.md file, it works fine on my 1920x1080 monitor but then again it'd be terrible from a phone. I might take the text over there later if it means it'll be more approachable, thanks for the recommendation."
androiddev,3c6hw9,pandanomic,1 point,Sun Jul 5 12:06:01 2015 UTC,"Even on a full size monitor, you're sacrificing syntax highlighting and proper code block separation."
androiddev,3c6hw9,marksoftware,1 point,Sun Jul 5 12:11:43 2015 UTC,I'm not sure how people do it on Medium because it ripped out all of my whitespace. Derp.
androiddev,3c6hw9,marksoftware,1 point,Sun Jul 5 12:34:04 2015 UTC,Thanks a lot for doing this!
androiddev,3c72gb,adrian110288,1 point,Sun Jul 5 14:00:10 2015 UTC,TotalCommander + ADB plugin is the most common choice and works for me when I used it
androiddev,3c5cgy,Xstream3,3,Sat Jul 4 23:11:18 2015 UTC,"QR Codes can work pretty well (my example: http://mangablitz.com.au/download.php)  Depending on the app though, almost no one is going to download from a website instead of an app store."
androiddev,3c5cgy,Acrostis,2,Sun Jul 5 01:38:48 2015 UTC,Make sure you configure your server to send the correct MIME type when the user requests the APK file. In the past this could cause problems.
androiddev,3c5cgy,bukster,1 point,Sun Jul 5 12:03:14 2015 UTC,"For reference, it is application/vnd.android.package-archive"
androiddev,3c5cgy,504d206d652074686973,2,Mon Jul 6 02:49:55 2015 UTC,"Personally, I would use bintray for this kind of thing so I don't have to worry about bandwidth or stats.  However, your users will have to allow their phone to download apps from unknown sources, which is very likely to discourage a lot of them."
androiddev,3c5cgy,aldo_reset,1 point,Sun Jul 5 15:36:37 2015 UTC,Worked on Swype before it was on Google Play. Adding extra directions definitely made it harder for people. The biggest problem was updates. Eventually we had our own auto-update mechanism but before that you'd need to explain to people to uninstall/reinstall manually for each update. Would get tons of bug reports for old versions but users didn't always post version number.
androiddev,3c5cgy,trnka,1 point,Sun Jul 5 18:44:17 2015 UTC,Is it applicable to host it on F-Droid?
androiddev,3c478x,mattrobust,5,Sat Jul 4 16:45:10 2015 UTC,I knew something like @callsuper existed I just hadn't looked it up. I primarily use the @nullable and @notnull ones as they have basically eliminated null pointed exceptions in my code.
androiddev,3c478x,j_m_studios,1 point,Sat Jul 4 17:09:49 2015 UTC,"It is all great, but I still do not feel it right. I mean, don't get me wrong, this is okay for public library, but inside project writing (more?) all these, feels more overhead. Don't you think so? I believe it should be automatically detected, like Lint's Toast.show() for example."
androiddev,3c59fu,AndreasWJ,3,Sat Jul 4 22:40:07 2015 UTC,"Create a listener interface from Fragment A. Set from your Activity. When X happens from Fragment A, call the listener method so that Activity gets it. Use that to update Fragment B via public method. Don't create a direct dependency between your Fragment classes. Instead, use listeners/callbacks. Example: FragmentAListener#onUserSelected(User user)"
androiddev,3c59fu,shinagle,1 point,Sat Jul 4 23:45:22 2015 UTC,"Great idea, I'll personally try it out :)"
androiddev,3c59fu,bart007345,3,Sun Jul 5 00:32:12 2015 UTC,"Hold on, that's the ""official"" way in the Android docs. It's ugly and doesn't scale well at all. I used it once and never again.  I say use an event bus."
androiddev,3c59fu,Zhuinden,2,Sun Jul 5 07:09:45 2015 UTC,"What I tend to do is use this wrapper around the Otto event bus (I might need to synchronize the add() and the iterator() stuff.)  public enum SingletonBus {     INSTANCE;      private static String TAG = SingletonBus.class.getSimpleName();      private Bus bus;      private boolean paused;      private final Vector<Object> eventQueueBuffer = new Vector<>();      private Handler handler = new Handler(Looper.getMainLooper());      private SingletonBus() {         this.bus = new Bus(ThreadEnforcer.ANY);     }      public <T> void postToSameThread(final T event) {         bus.post(event);     }      public <T> void postToMainThread(final T event) {         try {             if(paused) {                 eventQueueBuffer.add(event);             } else {                 handler.post(new Runnable() {                     @Override                     public void run() {                         try {                             bus.post(event);                         } catch(Exception e) {                             Log.e(TAG, ""POST TO MAIN THREAD: BUS LEVEL"");                             throw e;                         }                     }                 });             }         } catch(Exception e) {             Log.e(TAG, ""POST TO MAIN THREAD: HANDLER LEVEL"");             throw e;         }     }      public <T> void register(T subscriber) {         bus.register(subscriber);     }      public <T> void unregister(T subscriber) {         bus.unregister(subscriber);     }      public boolean isPaused() {         return paused;     }      public void setPaused(boolean paused) {         this.paused = paused;         if(!paused) {             Iterator<Object> eventIterator = eventQueueBuffer.iterator();             while(eventIterator.hasNext()) {                 Object event = eventIterator.next();                 postToMainThread(event);                 eventIterator.remove();             }         }     } }   And you need a base activity that sets the paused/resumed based on whether it went to pause or resume   public class BaseActivity         extends AppCompatActivity {      @Override     protected void onPostResume() {         super.onPostResume();         SingletonBus.INSTANCE.setPaused(false);     }      @Override     protected void onPause() {         SingletonBus.INSTANCE.setPaused(true);         super.onPause();     }   Using this method fixed a bunch of weird crashes I got using DialogFragments, such as cannot perform this action after onSaveInstanceState().  Then you can just do  public class YourActivity extends BaseActivity {      @Override      protected void onCreate(Bundle bundle) {             super.onCreate(bundle);             SingletonBus.INSTANCE.register(this);      }       @Override      protected void onDestroy() {            SingletonBus.INSTANCE.unregister(this);            super.onDestroy();      }       @Subscribe      public void onEventFromFragment(YourFragment.SomethingEvent e) {           //do something on event      } }   and  public class YourFragment extends Fragment {       public static class SomethingEvent {       }        @OnClick(R.id.your_fragment_button)        public void somethingHappened() {             SingletonBus.INSTANCE.post(new SomethingEvent());       }        @Override       public void onAttach(Activity activity) {            super.onAttach(activity);            SingletonBus.INSTANCE.register(this);       }        @Override       public void onDetach() {            SingletonBus.INSTANCE.unregister(this);            super.onDetach();       } }"
androiddev,3c59fu,brian047,1 point,Sun Jul 5 09:47:31 2015 UTC,I have heard that Iterators have really bad performance on Android..expecially on Dalvik. What's your opinion on that?
androiddev,3c59fu,Zhuinden,2,Mon Jul 6 07:46:14 2015 UTC,"Shouldn't be too critical unless you have HUGE lists of events which you probably don't in this case.  The performance training says that iterators are typically better, except for ArrayList<T>.  In which case this is the quicker solution if required.  public void one() {     int sum = 0;     Foo[] localArray = mArray;     int len = localArray.length;      for (int i = 0; i < len; ++i) {         sum += localArray[i].mSplat;     } }   Just with list, not array."
androiddev,3c59fu,brian047,1 point,Mon Jul 6 10:19:11 2015 UTC,"Nice. I'm gonna annoy you one more time ;) I personally like eventbus because of the thread delivery option. If you had to choose between eventbus, Otto and rxjava, what would you have chosen?"
androiddev,3c59fu,Zhuinden,1 point,Mon Jul 6 10:31:44 2015 UTC,"To tell you the truth, currently RxJava is over my head :( And way back when, I was reading about the option between EventBus and Otto; and EventBus has a bunch of nice features, but only Otto has event producers. The downside is that you need to register each subclass individually, you can't just register a base class unless it's your base class that handles the event (kinda like dagger2).  So I personally use Otto. But I'm not well-informed enough to tell you which one is ""best"". Most people claim RxJava is worth it once you understand the way it works, but I'm not that far ahead yet."
androiddev,3c59fu,bart007345,0,Mon Jul 6 11:16:37 2015 UTC,Vector? It's 2015!
androiddev,3c59fu,Zhuinden,2,Sun Jul 5 11:24:54 2015 UTC,"It's a Vector because its methods are synchronized, and this thing is manipulated from multiple threads. But if you have a better threadsafe collection then I'm eager to hear it, I based this on the PauseHandler in this SO answer"
androiddev,3c59fu,bart007345,1 point,Sun Jul 5 11:26:44 2015 UTC,"To be honest, I don't know why you wrapped the bus in the first place. I'm I'm on a phone so difficult to grok right now. I'll look closely later."
androiddev,3c59fu,Zhuinden,1 point,Sun Jul 5 12:10:04 2015 UTC,"Let's say a background operation completes, you have a loading dialog up, and you want to send an event to the main thread, saying ""hey, it's done!""  First, you probably shouldn't start the new activity while the app is in the background, right?  But not only that, if the app is in the background, then if you tell the dialog fragment to get dismissed, the app crashes.  So I make sure the events that go to the main activity only get executed if the app is currently in the front (the bus is !paused)."
androiddev,3c59fu,bart007345,1 point,Sun Jul 5 12:13:04 2015 UTC,"2 things about this.  Firstly, my bus code does nothing but send and receive events. All observers should have deregistered if they cannot handle events. If the observer needs the last event after registering again, there's an annotation for that.  Secondly, even if this a solution to your (specific) problem I would create a separate bus for it and another more vanilla bus for standard use. OP knows nothing about buses so he should stick to simple usage to begin with."
androiddev,3c59fu,Zhuinden,1 point,Sun Jul 5 12:38:12 2015 UTC,"I didn't want to register the process as an event producer onto the bus just because it's sending an event, but I also didn't want to lose events that were sent because there was a rotation going on or it was put in the background while it was finished.  The ""specific"" problem is a general problem on ""how to notify the main thread from a background thread"". Things break if the app is in the background, so events are stored while it's not available.  I do agree that keeping it simple would be nice, but that's why I ran into the issue that I had to fix with the event queue. But there might be a better solution, I didn't really think this one through yet - I just know it works."
androiddev,3c59fu,bart007345,1 point,Sun Jul 5 12:45:39 2015 UTC,"Had another look at your code, and I don't see the need to do what you've done.  The background process should send events when it finishes or cancels. Framework code should register on onResume() and unregister on onPause(). If an event was fired whole nothing was registered, use the @Produces annotation so they get the event when registered again. Its textbook Otto bus.  Also, why burden the bus with what thread to use? The observer knows to run on the main thread so it can do it."
androiddev,3c59fu,Zhuinden,1 point,Sun Jul 5 19:59:40 2015 UTC,"...well, I figured it'd be a simpler way to communicate to the main thread rather than call runOnUiThread() all the time manually. Then I got crashes when dialog fragments appeared, so I came up with this. This way I don't need to tinker with event producers. I only want to send the event once, but I want it to be received..."
androiddev,3c59fu,bart007345,1 point,Sun Jul 5 20:13:12 2015 UTC,"I don't think calling runOnUiThread in the observer is a bad thing.  Tinker with event producers, thats what they are there for!"
androiddev,3c59fu,hitler_kardashian,0,Sun Jul 5 20:21:56 2015 UTC,For communication between Activities and Fragments use some form of an event bus.
androiddev,3c59fu,thanhlenguyen,1 point,Sat Jul 4 23:35:20 2015 UTC,"Can you elaborate a bit about an ""event bus"" ?"
androiddev,3c59fu,aldo_reset,2,Sun Jul 5 00:31:51 2015 UTC,Event bus is a publish-subscribe pattern: https://en.wikipedia.org/wiki/Publish–subscribe_pattern  For android you can use Otto https://github.com/square/otto) or EventBus (https://github.com/greenrobot/EventBus).
androiddev,3c59fu,hitler_kardashian,-3,Sun Jul 5 02:36:22 2015 UTC,"That's overkill.  If two fragments that were created by the same activity need to talk to each other, go through their parent activity (use a listener interface, or better, use RxJava and expose Observables)."
androiddev,3c59fu,b_r_h,11,Sun Jul 5 04:25:57 2015 UTC,How is an EventBus overkill when you suggest using RxJava?
androiddev,3c59fu,Zhuinden,1 point,Sun Jul 5 05:09:41 2015 UTC,"Exactly, and RxJava has a steep learning curve and I mean steep."
androiddev,3c2ou3,DeafParrot,13,Sat Jul 4 05:03:01 2015 UTC,"I use Pencil. It's open source, based on Firefox, and cross platform.   http://pencil.evolus.vn"
androiddev,3c2ou3,omniuni,2,Sat Jul 4 08:23:40 2015 UTC,Thank you! I downloaded it and it is awesome!
androiddev,3c2ou3,ItWasAValuedRug,1 point,Sat Jul 4 17:22:38 2015 UTC,"Looks good but the Mobile Collections are a few versions out of date, for Android and iOS. Is there a repo where I can find more up to date packs?"
androiddev,3c2ou3,dj_darkhorse,2,Sun Jul 5 00:19:45 2015 UTC,"I think that the download at the pencil site may be out of date. This is the version I use, if you scroll down there are links to android lollipop stencils and material design icons.  https://github.com/prikhi/pencil"
androiddev,3c2ou3,denley,10,Sun Jul 5 22:57:43 2015 UTC,Design tools are great if you have to share them with clients/customers. But when designing just for myself I find nothing beats a whiteboard and marker.
androiddev,3c2ou3,kanwalmohit,6,Sat Jul 4 07:34:17 2015 UTC,"Sketch is pretty good. It has the ability to export SVGs and other 2x, 3x versions of the icons directly."
androiddev,3c2ou3,sudhirkhanger,3,Sat Jul 4 12:20:29 2015 UTC,Pencil  https://github.com/prikhi/pencil https://github.com/nathanielw/Android-Lollipop-Pencil-Stencils
androiddev,3c2ou3,xScarwolf,1 point,Sat Jul 4 08:42:55 2015 UTC,I can't managa to install the Android Stencils. the Folder Structure should be * Definition.xml * Icons  Right?
androiddev,3c2ou3,sourd1esel,2,Sat Jul 4 12:49:53 2015 UTC,If you search on androiddev you can find a what you are seeking.  I have been trying this out prottapp.com. It is OK. It is a little finicky.
androiddev,3c2ou3,slai47,2,Sat Jul 4 05:16:27 2015 UTC,Look up Android Arsenal.
androiddev,3c2ou3,VitoCassisi,2,Sat Jul 4 06:07:10 2015 UTC,"I sketch on paper, then mockup in Inkscape. From there I can export drawables at any resolution."
androiddev,3c2ou3,sudhirkhanger,1 point,Sat Jul 4 09:22:05 2015 UTC,"Do you have your own set of drawings like ActionBar, FAB, etc. to do quick mockups?"
androiddev,3c2ou3,VitoCassisi,2,Sat Jul 4 12:48:43 2015 UTC,Google provide a bunch of vector image 'sticker sheets' that you can use. https://developer.android.com/design/downloads/index.html  I also make my own rough approximations if needed.
androiddev,3c2ou3,sudhirkhanger,1 point,Sat Jul 4 13:09:19 2015 UTC,Which ones do you use? I don't see any Inkscape things.  You might find these useful.
androiddev,3c2ou3,VitoCassisi,1 point,Sat Jul 4 14:19:23 2015 UTC,The Illustrator files work with Inkscape. Thanks for the link!
androiddev,3c2ou3,ZakTaccardi,2,Sat Jul 4 14:24:18 2015 UTC,"Sketch is incredible. I had very limited UI design experience before, and picked up sketch very easily. Worth every penny.   Additionally, it's also what many Google designers use. You can mess around with limited free tools like Pencil, but if you are serious then you'll go with Sketch.   http://www.smashingmagazine.com/2015/05/15/sketch-with-material-design/"
androiddev,3c2ou3,Good_Mind,2,Sat Jul 4 14:34:07 2015 UTC,"Sketch seems awesome! I do not have a Mac though, bummer. It looks beautiful."
androiddev,3c2ou3,Tuy,1 point,Sat Jul 4 15:53:01 2015 UTC,Ive had success with http://ninjamock.com/ to play around with design ideas. It might lack some special widgets but you got many options with combining basic elements to more complex ones. But search around you might find an other options which suits you more.
androiddev,3c2ou3,Abok,1 point,Sat Jul 4 06:39:59 2015 UTC,"I use fluidui, highly recommend it"
androiddev,3c2ou3,zng,1 point,Sat Jul 4 08:46:33 2015 UTC,"I sketch on paper or a whiteboard initially. I have in the past used Justinmind to deliver samples of ""clickable"" mock-up's but imo this generally this takes far more effort that it is worth."
androiddev,3c2ou3,hovokhc,1 point,Sat Jul 4 10:43:47 2015 UTC,http://proto.io is pretty great
androiddev,3c49oi,stud-d,3,Sat Jul 4 17:07:41 2015 UTC,"AsyncTask runs on a background thread, then reports the progress back to the main thread (where it connects back with the activity). So imagine this scenario:   AsyncTask runs on background thread User rotates screen, activity destroyed.  Background thread of AsyncTask completes - but the activity is gone.    That's the inherent problem with AsyncTasks"
androiddev,3c49oi,ZakTaccardi,1 point,Sun Jul 5 04:57:20 2015 UTC,How does RxJava eliminate that problem? I'm yet to start exploring RxJava.
androiddev,3c49oi,slaystation25,1 point,Sun Jul 5 07:54:10 2015 UTC,RxJava lets you subscribe to and unscribscribe from a task running in another thread. 1. Start a task with rxjava 2. Activity gets destroyed so you unsubscribe from the task in OnDestroy() 3. Activity recreated and you resubscribe to the task and get the results
androiddev,3c49oi,Flekken,1 point,Sun Jul 5 11:32:48 2015 UTC,"You can still miss the task result if it fires after unsubscription and before you had the chance to resubscribe, correct?"
androiddev,3c49oi,bbqburner,1 point,Sun Jul 5 12:04:13 2015 UTC,I just began working with it. But as far as I read and heard about it no. After you rescribscribe the results will be given to you.
androiddev,3c49oi,Flekken,2,Sun Jul 5 12:57:42 2015 UTC,"AsyncTask has cancel() to cancel task once activity destroyed, that guarantees onPostExecute won't be called. RxJava has unsubscribe(). In order to get result back, you need to cache Observable and retain instance to it, for example in Fragment w setRetainInstance to true. So over all, there is no win-lose situation here. Both solutions for this specific case are basically same."
androiddev,3c49oi,vladlichonos,1 point,Mon Jul 6 16:38:20 2015 UTC,"I think the point he's trying to make is that you can lose the results of your requests simply by rotation change. You'll have to make the request all over again once rotated. Ideally, you want results delivered whether rotated or not.  Also, they're going to make you scrap the AsyncTask all together for a SyncAdapter or an IntentService."
androiddev,3c3uvi,brblol,1 point,Sat Jul 4 14:46:33 2015 UTC,amazon ad network. maybe flurry
androiddev,3c3uvi,avipars,-1,Sun Jul 5 04:55:58 2015 UTC,Did you try purchases or donations? Much better Money per user
androiddev,3c3uvi,micketic,0,Sat Jul 4 15:21:40 2015 UTC,LOL
androiddev,3bzft7,philosophicalhacker,1 point,Fri Jul 3 11:48:19 2015 UTC,Really love this series!!! Pretty much my go-to podcast if I have to commute.
androiddev,3bzft7,kw01sg,1 point,Sat Jul 4 02:09:07 2015 UTC,"I can listen to Chet talk all day, he's such a cool cat."
androiddev,3bzyn0,hitherejoebirch,15,Fri Jul 3 14:56:54 2015 UTC,"I think thats a good set, consistency is very important, especially in teams.  The only thing I don't (personally) like is the prefixing variables with m and s.  I asked one of the original developers of Android why they did this as its not a JAVA convention. He said it was the teams style.  I don't like it because it because the problem it solves would be better if you didn't have the problem in the first place - ie huge classes/methods."
androiddev,3bzyn0,bart007345,4,Fri Jul 3 15:10:14 2015 UTC,Problem is solved by the IDE anyway. I hate this convention so much
androiddev,3bzyn0,Cg2XHPxz,1 point,Fri Jul 3 22:44:02 2015 UTC,Hungarian notation... cringe
androiddev,3bzyn0,morihacky,2,Sun Jul 5 18:20:05 2015 UTC,"I don't like the package structure, even less for DI-driven apps or MV*. The local/remote/model has overlapping, unless you're falling into the inner platform anti-pattern.  Using default logging instead of SLF4J is also an oversight in my book, configuration is king here."
androiddev,3bzyn0,pakoito,2,Fri Jul 3 21:35:36 2015 UTC,"Package structure is not a code style. Every team should make up the structure (for their app) they're comfortable with.  E.g. for me your proposed structure is bad. When I'd start working on a Project with this structure I'd only see framework components and not application components. I don't see the applications intent - only where all the Fragments and Activities are. I don't suppose you have your flat or house separated by furniture, do you? What sense does a room consisting only of seating furniture make?"
androiddev,3bzyn0,insane-cabbage,1 point,Sat Jul 4 10:38:04 2015 UTC,"This looks like a really nice starting point especially for Android repos. I don't agree with all of them but as many others have pointed, consistency trumps individual preference.   A more constructive suggestion: Include IDE code style configurations as well. It's the quickest way to get people to adapt a majority of the practices."
androiddev,3bzyn0,morihacky,1 point,Sun Jul 5 18:25:02 2015 UTC,"What if we have for example 2 btn_send_pressed.9.png. I mean both send buttons but looks different because they are in activity A and another is in activity B. In this case we have name conflict based on guidelines. I used before something like activity_a_send.9.png and activity_b_send.9.png. Since, ""send"" is already action, so basically button or something else clickable. What solution you would propose?"
androiddev,3bzyn0,vladlichonos,1 point,Mon Jul 6 16:45:26 2015 UTC,"I'm a bot, bleep, bloop. Someone has linked to this thread from another place on reddit:   [/r/ryanmiles] Android Code Style Guidelines • /r/androiddev   If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads. (Info / Contact)"
androiddev,3bzyn0,TotesMessenger,-2,Sat Jul 11 22:29:52 2015 UTC,"Let's be clear. Design and coding guidelines apply to a team, a project or a set of project within an organisational entity. It is totally unproductive and useless to come up with guidelines that should be applied to everything.   Experience shows that on top of annoying developers, it totally does not solve any problem and actually hides issues within your code.  Prefixing variables is a good example: mWhatever or sWhatever is an old-school notation for the lazy who can't put ""this."" in front of their member variables and/or design their classes so bad that is impossible to a developer to remember the structure of that class without those hints. If you need prefixing, you are writing messy code.  Another example is order of declarations: sorry, but I hate having to scroll the end of one file to find which inner classes are declared in the class I'm looking at. It just not match how I read code and breaks my reading flow. Unless you're paying me big bucks, I am not going to do this, plain and simple.  The rest of the article (spaces or tabs for example) is basic programming that should not have to be repeated ad-nauseum.  And I loled at this one: ""Treat acronyms as words"":  No! Acronyms are not words. They are capitalized in most western languages for a reason. I am not going to not capitalize them because you, one guy, doesn't like it. The more your code reads like natural language, the better.  Tl;dr: this article applies to the author. Great for him but nope."
androiddev,3bzyn0,evanova,14,Fri Jul 3 17:28:52 2015 UTC,"Treat acronyms as words   Actually this is extremely sensible and correct. Otherwise you create ambiguity in adjacent acronyms.  For more info, see http://google.github.io/styleguide/javaguide.html#s5.3-camel-case"
androiddev,3bzyn0,JakeWharton,1 point,Fri Jul 3 18:12:41 2015 UTC,"I agree in most parts with you except your stance against ""Treat acronyms as words"" and order of declaration.  Code within a class should be on a somewhat similar abstraction level. Every time you make an inner class you leave that level and go further into detailed implementation. So, when I want to get a grasp of what a class does I'd want to stay in the same level of abstraction to not get confused or side-tracked by some details. Therefore having to scroll through stuff which isn't really relevant of what the class is supposed to do is somewhat tedious. And since most inner classes are only used within those parent classes it's rare that I want to know about these before I know what the parent class is all about."
androiddev,3bzyn0,insane-cabbage,-3,Sat Jul 4 10:49:11 2015 UTC,"There is a very good rule absent in the guidelines: do not create objects that exceed 500 lines.  I know sometimes it is not easy (i.e. you need to think before coding), but guys, you have line length limit, why don't you want a line count limit as well? :D"
androiddev,3bzyn0,jackhexen,2,Fri Jul 3 21:41:20 2015 UTC,why don't you want a line count limit as well?   Opens SuperLongAndThoroughlyValidatedMultiFormularyPresenter  weeps
androiddev,3bzyn0,pakoito,1 point,Fri Jul 3 21:45:05 2015 UTC,"It's actually ~1200 lines of code split in 2 files, not counting helpers, network calls, or view-model binding methods."
androiddev,3bzyn0,pakoito,-4,Fri Jul 3 21:48:42 2015 UTC,I always refactor classes that exceed 300 lines. :D
androiddev,3bzyn0,jackhexen,2,Fri Jul 3 22:27:01 2015 UTC,"Still, they'll be the same amount of lines split in several files. You can't run away from Business Logic Spaghetti O.O"
androiddev,3bzyn0,pakoito,-1,Fri Jul 3 22:30:11 2015 UTC,They will be classes that contain/inherit each other. Each of them will have its independent behavior. No spaghetti! ;)   P.S. I became a big fan of OOP past months.
androiddev,3bzyn0,jackhexen,1 point,Fri Jul 3 22:44:18 2015 UTC,"Yes, it is an OOP axiom that another level of indirection is the solution to every problem and somehow unwinds up the app flow. Go4 patterns, mutable state and deep inheritance is the way to go.  I've been spending time in functional land instead. Testable methods, not classes, and please stop breaking your own contracts."
androiddev,3bzyn0,pakoito,1 point,Fri Jul 3 22:51:45 2015 UTC,OOP != Mutable state. 90% of my objects are immutable.
androiddev,3bzyn0,jackhexen,2,Fri Jul 3 23:26:20 2015 UTC,"Final fields != immutable state.  Anyway it's a cherrypick. You're spreading the code around, reifying and telling people that you've reduced complexity where you've only improved readability for someone already familiar with the code. Spaghetti to lasagna to ravioli.  Thou Can Not Avoid Business Logic Pasta. Just embrace whatever shape of it you prefer."
androiddev,3bzyn0,pakoito,0,Fri Jul 3 23:30:32 2015 UTC,"final fields = immutable state if all objects referenced by that fields are also immutable.  ""Business logic""? I don't know this word.  http://www.yegor256.com/2014/11/20/seven-virtues-of-good-object.html  https://people.apache.org/~fhanik/kiss.html"
androiddev,3bzyn0,jackhexen,2,Fri Jul 3 23:41:21 2015 UTC,Eh concrete rules like this are counterproductive. If my perfect object is 502 loc and you ask me to refactor it I'm not doing it
androiddev,3bz3v2,lordoftherings911,20,Fri Jul 3 09:11:01 2015 UTC,"I'm working in a company developing a Android, iOS and Windows Phone app at the moment.   It's a small team so we have one main developer programming the logic and Android app (myself) and another guy working on the ports. It's actually not too bad, we are making good speed.   We are writing them all natively and I feel this is simply the best way to ensure a stable and efficient app across all platforms. Yes it takes more time but the results are worth it. It's a pity there is not a better framework of any kind but the ports don't take too long!"
androiddev,3bz3v2,GavinThePacMan,16,Fri Jul 3 10:21:20 2015 UTC,"There's Xamarin and RoboVM.  The idea is that you write your business logic (non-UI) code once and write native UI for each platform (respectively in C# and Java, using bindings to native UI APIs). At the end you have fully native apps (unlike hybrid apps). Another possibily is to use shared C++ for the non-UI code and write specific UIs. This is AFAIK what Microsoft is doing for its apps."
androiddev,3bz3v2,bubbleguuum,8,Fri Jul 3 09:34:30 2015 UTC,"Dropbox has taken the C++ route as well. It makes a lot of sense for them, but I don't think this is a typical use case. The downside of Xamarin is the massive startup time penalty."
androiddev,3bz3v2,ch0wn,3,Fri Jul 3 11:43:58 2015 UTC,nother possibily is to use shared C++ for the non-UI code and write specific UIs. This is AFAIK what Microsoft is doing for its apps.   Define massive. It usually takes a second to startup.
androiddev,3bz3v2,dDrvo,6,Fri Jul 3 15:26:05 2015 UTC,That's pretty slow...
androiddev,3bz3v2,humanmanguy,2,Fri Jul 3 16:47:19 2015 UTC,It's a second when application is started and you don't restart application every time you start an app. Most of the time application is alive so a second is not pretty slow at least in my book. There are other stuff about Xamarin that are not good but this one you can almost ignore. You can make pretty good apps with Xamarin. Bad thing about it is that every time you need to update some package or Xamarin itself you need to pray that it won't break your app. I had some ridiculous bugs after updates.
androiddev,3bz3v2,dDrvo,1 point,Fri Jul 3 17:16:26 2015 UTC,If you DI it's about average.
androiddev,3bz3v2,pakoito,7,Fri Jul 3 18:44:50 2015 UTC,"Microsoft is actually using a lot of C++ for it's office apps. Primarily because those Office apps were already written on the PC in C++ so they get the benefit of code copy pasta.  Xamarin works, in theory. But in reality you're taking a platform that has its own set of problems (Android) and layering another platform that has it's own unique problems (Xamarin) on top of it.  From my team's experience with Xamarin we wish we had gone native, it would have saved us a lot of headaches."
androiddev,3bz3v2,angrycat,3,Fri Jul 3 15:26:17 2015 UTC,"It is also what will feel the most ""native"""
androiddev,3bz3v2,steamruler,2,Fri Jul 3 10:05:29 2015 UTC,More than one big company I've talked to has said they're trying the c++ + native ui approach. most hate the process but it's definitely helpful in avoiding code/logic duplication.
androiddev,3bz3v2,morihacky,2,Fri Jul 3 16:41:35 2015 UTC,"We recently migrated our application to putting all the core logic in C++ with HTML5/JS for the UI.  So far it's been great.  We already had about 50% of the code as C++ and the other 50% was platform-specific Java/ObjC.  Now we have about 95% in C++ and maybe 5% in platform specific code, namely just to access the raw hardware components (Camera, sensors, app-level events, etc).  This may not be suitable for every application, but for us, the vast majority of the user interactions with the app are on a full screen OpenGL ES layer (driven by the C++ level), so we just overlay a few buttons/controls in a WebView.  One nice thing is that there is generally a C/C++ library for everything and a JavaScript library for everything.  Also, there is less resistance to add new UI elements/features since it only has to be done once instead of once per platform.  Since we're targeting mobile webviews, we have a lot fewer issues in terms of dealing with quirky browsers like on a traditional website.  Debugging the UI becomes a lot easier with the Safari and Chrome debuggers for iOS and Android, respectively.  You can hop right into the live webview, change CSS properties, add elements, update the JS, and get the layout/animations/etc just right in real-time instead of having to stop/edit/rebuild/run on every change.  Did I mention that having all the UI in a webview means we can use SVG for all our graphics instead of per-pixel-density PNG files?  In any event, this is a design we're experimenting with and may not be suitable to all applications, but for us, it's made things so much easier."
androiddev,3bz3v2,MrSketch,1 point,Fri Jul 3 18:53:28 2015 UTC,This sounds very similar to the cordova approach.
androiddev,3bz3v2,bradrlaw,1 point,Fri Jul 3 21:52:29 2015 UTC,"Isn't cordova 100% JavaScript?  We have less than 2k lines in JS (of our code), with over 30k in C++ (again, just our code, not libraries), and under 5k total in Java + ObjC."
androiddev,3bz3v2,MrSketch,1 point,Fri Jul 3 22:32:08 2015 UTC,"Cordova is javascript + plugins.  You really can't get much of anything done without using the various plugins. The plugins are usually written in the standard language for the platform (obj-c, java, etc...).  That's where I saw the analogy with your approach."
androiddev,3bz3v2,bradrlaw,1 point,Fri Jul 3 23:14:14 2015 UTC,"Interesting, that sounds promising.  I may have to look into cordova for my next project."
androiddev,3bz3v2,MrSketch,7,Sat Jul 4 02:17:48 2015 UTC,If i remember correctly Google separates their Android and  Java code and use a tool for translating the Java part into objc. The tools Name is j2objc. But i've never used it myself.
androiddev,3bz3v2,BikerMouseFromMars,3,Fri Jul 3 10:09:51 2015 UTC,"It works but is painful to use if you have zillions jar dependencies and it requires the source code, so a bit unpractical. RoboVM is much better in that regard as it doesn't need convert java to objective c, and doesn't need the java source."
androiddev,3bz3v2,bubbleguuum,1 point,Fri Jul 3 10:30:48 2015 UTC,"You also need to use java weak references to prevent a memory leaks.  Most java code is made to run with a GC, obj-c runs with ARC"
androiddev,3bz3v2,adi1133,1 point,Fri Jul 3 17:37:23 2015 UTC,"They do this for business logic at least. Supposedly inbox has a core Java library that they use for iOS, Android and web."
androiddev,3bz3v2,tootie,14,Fri Jul 3 20:54:12 2015 UTC,These things always over promise and under deliver. Xamarin is popular with companies that already have a service that's .net based (Microsoft fanboys) but the end-results suck for anything other than a plain enterprise app.  Management like these tools because they think they can code once and save money (or they can use their in-house .net devs to code Android and iOS apps). Think about everything you need to know to create a solid Android app - no framework can possibly do all that and get it right with no effort.
androiddev,3bz3v2,Deafdev,5,Fri Jul 3 09:35:18 2015 UTC,"The thing is you want to write a native UI for each platform (either using the platform's language or bindings to the native APIs), and the back-end only once. Unless you have unlimited time and enjoy writing the back-end for each platform. Talk about inefficient and boring!"
androiddev,3bz3v2,bubbleguuum,3,Fri Jul 3 10:34:19 2015 UTC,"I know this is the common ""problem"" that cross-platform ""solves"".  But with retrofit and gson how long does it take you to write a network call? AFNetworking? Making a request and parsing a response is probably one of smallest lifts I find when making an app."
androiddev,3bz3v2,vinsanity406,1 point,Fri Jul 3 14:08:34 2015 UTC,"In any case, it took me 0 minute reusing my Retrofit Java classes with RoboVM..."
androiddev,3bz3v2,bubbleguuum,1 point,Fri Jul 3 14:11:14 2015 UTC,"It was great fun in the 80's when targeting the home market, specially in Assembly."
androiddev,3bz3v2,pjmlp,0,Fri Jul 3 12:34:21 2015 UTC,"At the same time, writing native apps for each platform is the best way to ensure a platform native experience, and puts you in the best position to take advantage of platform features."
androiddev,3bz3v2,s73v3r,1 point,Sat Jul 4 04:10:48 2015 UTC,"I think Xamarin is a little untruthful with their marketing. They have libraries in the works to do cross platform actions like using GPS or managing media, but it is not ready for production use yet. I work on several projects so it is nice using C#all the time. But to use Xamarin you need to know the Android sdk pretty damn well."
androiddev,3bz3v2,UMadBreaux,6,Sat Jul 4 15:31:08 2015 UTC,I consider 1s massive. At Twitter a 100ms increase in startup time would certainly be more than enough to reject the change introducing it.
androiddev,3bz3v2,ch0wn,2,Fri Jul 3 15:34:11 2015 UTC,"That's nice on paper, but other than in user count your client is still behind most of the competence. Even after the API cutouts.  I would trade 1s startup for features, but that's me :P"
androiddev,3bz3v2,pakoito,4,Fri Jul 3 18:47:22 2015 UTC,"You speak my heart! Cordova, Phonegap, Appery etc. uses jargon like cross-platform and code-once to entice developers into opting them to save money but the truth is, it translates to an app that doesn't really belong any where. It has a generic user interface, sub par UX, and it is plainly laggy at best.   I would rather spend more time and resources to get the app right for multiple platforms instead of investing any time and money on these so-called cross-platform solutions."
androiddev,3bz3v2,iBasit,1 point,Fri Jul 3 10:53:13 2015 UTC,sub par UX   A client is foisting Cordova/Ionic on us after we had pitched a native ios app. I've never done this before but let it go because it means we can deploy to Android. We're a design shop primarily so short changing the UX is going to make a bad impression. What exactly are losing with Cordova?
androiddev,3bz3v2,tootie,1 point,Fri Jul 3 20:58:35 2015 UTC,"In my opinion (have developed several in house apps native and have recently done some public apps using cordova), you don't lose much.  However, I think the best way to frame the issue is Cordova is the Visual Basic of mobile development.  You have a lot of amateur programmers and designers using it because it is very easy to get into.  However, no amount of ""easy"" can help with a bad design / UX. However, just like with VB back in the day you can build apps quickly that get the job done and if you have some experienced developers, the apps can scale and look just fine.  I think using cordova is great to get something out quickly and test a concept.  If your users love the concept then you can go native if you app really demands it.  There is also a school of thought of defining your own look and feel across all platforms instead of going native.  Best example I can think of is Snapchat (note, I have no idea what they wrote their app in, just looking at their UX). They created their own look and feel that is fairly consistent across iOS and Android.  The portability is nice as well.  Going from iOS to Android in my case only took a couple days to readjust the layout slightly and some minor file system changes.  Same with going to Windows Phone."
androiddev,3bz3v2,bradrlaw,1 point,Fri Jul 3 21:56:54 2015 UTC,I will say that forcing Cordova or something like it on devs is one of the easiest ways to trash your teams morale.
androiddev,3bz3v2,s73v3r,3,Sat Jul 4 04:12:52 2015 UTC,I tried Xamarin and the resulting apps sure feel native but their startup time is much longer and they're generally much larger. Also it's pretty damn expensive for and indie developer.
androiddev,3bz3v2,Rhed0x,3,Fri Jul 3 11:53:59 2015 UTC,"A good  approach is to have business logic in C++ and then use the view in the native language.  In iOS and Windows Phone works great because C++ is a first class language, with integration supported via Objective-C++ and C++/CX.  Just Android is the big pain given how Google forces everyone to use JNI.  Unfortunately Qt still isn't mature enough in mobile support across all systems.  For those not wanting to spend time writing glue code, Xamarin is still the best option."
androiddev,3bz3v2,pjmlp,2,Fri Jul 3 12:32:19 2015 UTC,There are ways to create an Android app almost solely in C/C++. I agree about core logic being in C / C++ though.
androiddev,3bz3v2,mondain,3,Fri Jul 3 15:05:35 2015 UTC,"Only for games. As soon as you need to step out of the official  NDK APIs, someone needs to provide the required glue code, even for basic stuff like starting an intent.  Plus lets not forget how miserable the whole NDK debugging support is."
androiddev,3bz3v2,pjmlp,1 point,Fri Jul 3 15:09:09 2015 UTC,I think obj-C and the NDK equally make me want to pull out the rest of my hair.
androiddev,3bz3v2,mondain,2,Fri Jul 3 18:23:41 2015 UTC,Has anyone heard of React Native by Facebook? Android support will be released in a month or so and I'm a little interested after using React on the web. It's another one to add to the list at least.
androiddev,3bz3v2,jimeux,2,Fri Jul 3 16:16:46 2015 UTC,React native is learn once write everwhere. This means it doesn't alleviate us having to write code in alternate platforms (fyi)
androiddev,3bz3v2,morihacky,3,Fri Jul 3 16:38:04 2015 UTC,"You can still share a lot (if not all) of the business logic (data fetching, caching, models, what have you). The only parts that need to be customized per platform are (some) UI bits.  Source: I work on React Native for Android."
androiddev,3bz3v2,foghina,2,Sat Jul 4 00:36:11 2015 UTC,Nice! That's good to know. Was a lot of code shared in experience between platforms  in the Fb Ads manager app?
androiddev,3bz3v2,morihacky,3,Sat Jul 4 00:58:00 2015 UTC,"Probably can't share numbers, but we're pretty pleased with them :)"
androiddev,3bz3v2,foghina,1 point,Sat Jul 4 06:16:10 2015 UTC,"Why nobody ever takes Cocos2d-x into consideration? It's native across all the major platforms, and definitely mature enough since a major part of mobile games are made with it. I'm a doofus."
androiddev,3bz3v2,-manabreak,2,Fri Jul 3 14:47:28 2015 UTC,"There are many options if you just want some cross platform multimedia layer. E.g. cocs2d-x but also SDL or even allegro.  What I get from the majority here is that they want to write code once, but ALSO have that magic tool convert everything to views that look native to the platform. Which is honestly a joke because even on android you rarely use the predefined views and most of the time you have to theme everything heavily.  So the C++ buisinesslogic approach seems like it would be the only way to do it, but the majority here finds that to much work. Go figure..."
androiddev,3bz3v2,code_mc,1 point,Fri Jul 3 15:30:27 2015 UTC,I'm talking about app development only.    (not games)  :)
androiddev,3bz3v2,-manabreak,1 point,Fri Jul 3 15:40:43 2015 UTC,"Oh poop, my mistake! I somehow misread this to be a /r/gamedev post instead. :D"
androiddev,3bz3v2,jackhexen,1 point,Fri Jul 3 15:50:02 2015 UTC,http://arstechnica.com/information-technology/2014/11/how-google-inbox-shares-70-of-its-code-across-android-ios-and-the-web/
androiddev,3bz3v2,mir_maxwell,0,Fri Jul 3 17:03:24 2015 UTC,"I've just finished my bachelor thesis on native cross platform development. Give Javascript as your cross platform intelligence a try and build the UI around it. Very easy, very convenient and good documentation for Android and iOS. I used Rhino on Android and the JavascriptCore Framework on iOS."
androiddev,3bz3v2,rivade,1 point,Fri Jul 3 15:12:11 2015 UTC,Do you have any benchmarks on performance?
androiddev,3bz3v2,tootie,1 point,Fri Jul 3 17:58:45 2015 UTC,NativeScript?
androiddev,3bz3v2,larry_targaryen,1 point,Fri Jul 3 20:59:56 2015 UTC,"How do you load scripts in Rhino?   It seems like it's extremely slow to load in some JS libraries. This is the code I use, from start to finish it takes a minute or two:    Context cx = org.mozilla.javascript.Context.enter();   Scriptable scope = cx.initStandardObjects();   String file = ""js-lib.js"";   Script s = cx.compileReader(new InputStreamReader(open(file)));   s.exec(cx, scope);"
androiddev,3bz3v2,mir_maxwell,1 point,Sun Jul 5 07:03:35 2015 UTC,well this looks kinda weird... I'll send you the code I used in a couple of hours. It's bed time where I live now. ;)  my code took just a couple of milliseconds btw. but that depends on what your js code is doing.
androiddev,3bz3v2,larry_targaryen,1 point,Sun Jul 5 23:13:42 2015 UTC,"hmm cool thanks, I could be doing something incorrect afaik"
androiddev,3bz3v2,angryrancor,0,Mon Jul 6 08:02:32 2015 UTC,"There is also kivy...  If you don't mind coding in Python (personally, I like it).  However, you are restricted to libraries that have Python for Android recipes, and packaging for each of the platforms it supports (android, iOS, linux, windows, macOS) is different.  Currently I'm packaging an app that looks like it will package fine for Windows and Linux, won't work at all on Android until refactored (uses BeautifulSoup4 library, no recipe for android).  I'm not sure yet about iOS and MacOS - I think it will work, but haven't had success yet - I'm new to packaging python code on these, and kivy has a special way of doing it.  Also, some of the components feel and act a little... wonky (looking at you, ListView), and support can be a bit tough to find as there aren't a ton of kivy devs out there.  I've gotten a lot of help from the #kivy room on FreeNode IRC, though, and the kivy google group is uh, sort of active."
androiddev,3bzj08,ronocod,6,Fri Jul 3 12:25:23 2015 UTC,when would this be useful?
androiddev,3bzj08,bart007345,-4,Fri Jul 3 16:08:48 2015 UTC,"Type java   Nice try, satan."
androiddev,3c1dg4,OnasphereGame,2,Fri Jul 3 21:33:08 2015 UTC,Why do you lose the ability to log? In Android studio if you start a debugging session the entire log is dumped to console. There are also phone-side apps that can save the logstream as it flows.
androiddev,3c1dg4,Turtlecupcakes,1 point,Sat Jul 4 00:31:38 2015 UTC,"I have had lots of problems with Studio suddenly deciding to drop the LogCat connection without telling me. Then I decide to try something, and crash! Well, that's ok, I'll look at the stack trace. Let's see, logs, logs, why is my LogCat window blank?"
androiddev,3c1dg4,s73v3r,1 point,Sat Jul 4 04:19:51 2015 UTC,Same problem over here. In fact a few days ago I had to completely remove AS from the computer and reinstall it again :/
androiddev,3c1dg4,S_Luis,1 point,Sat Jul 4 07:22:50 2015 UTC,Are you forgetting the logcat filter?
androiddev,3c1dg4,Izacus,1 point,Sat Jul 4 07:30:54 2015 UTC,I figured this out after posting. It's definitely a huge help but not the most convenient. I was hoping there would be something even easier. :)
androiddev,3c1dg4,s73v3r,1 point,Sat Jul 4 15:40:27 2015 UTC,"Just running it on a phone is going to be easiest. But, if you want, you can set up Genymotion, and install the GPS on it."
androiddev,3c024p,karsy95,3,Fri Jul 3 15:26:11 2015 UTC,"The android material support design library for example relies on the v7 support appcompat, so I personally vote that the support library is better maintained and therefore a better option to use."
androiddev,3c024p,Zhuinden,2,Fri Jul 3 15:52:49 2015 UTC,"I went with the support library and managed to fix the bug that caused my confusion in the first place, thanks!"
androiddev,3c024p,morihacky,2,Fri Jul 3 16:13:37 2015 UTC,You typically also want the support libraries for faster update cycles.
androiddev,3c024p,pakoito,2,Fri Jul 3 16:28:13 2015 UTC,"It doesn't matter what version you target, build your apps on AppCompat. Future you will thank today's himself."
androiddev,3c19a3,tourettesFUCK,3,Fri Jul 3 20:59:29 2015 UTC,"No tuts, but lots of examples on GitHib: https://www.google.ca/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=github%20sms%20app"
androiddev,3bzmcy,BadPaddingException,3,Fri Jul 3 13:02:33 2015 UTC,"What are the chances of being kicked of the Google play store with a slightly erotic app? (no nudity, just suggestive poses)."
androiddev,3bzmcy,medEng0,1 point,Fri Jul 3 15:53:51 2015 UTC,"Pretty small. They have PEGI/ESRB ratings now. Fill in the forms correctly, and your app will probably be 18+, but it should be accepted."
androiddev,3bzmcy,Hermes_Achilles,3,Fri Jul 3 23:15:58 2015 UTC,"Today, AS decided to crap out on me and stop recognizing my device. Even though it was working for me the very night before. After Multiple resets, On/Off on Developer Options, Restarting my computer, and endless Google Searches, I've decided to take the rest of the day off. Will Resume all my projects after the holiday.  Also, Happy Holidays. (to those celebrating)"
androiddev,3bzmcy,MarcusRex,1 point,Fri Jul 3 19:12:22 2015 UTC,"FWIW everytime I've had a hard time getting my devices recognized swapping out the cable did wonders. I've got a couple generic cheap cables generally within arms reach of my workstation, if they don't work switching to the oem cables that came with the device did the trick for me."
androiddev,3bzmcy,code_mc,1 point,Sat Jul 4 05:31:03 2015 UTC,Also ADB over wifi might do the trick.
androiddev,3bzmcy,MarcusRex,1 point,Sat Jul 4 11:08:01 2015 UTC,I've never tried that before. I'll look into it.
androiddev,3bzmcy,ijoijo,3,Sat Jul 4 17:44:31 2015 UTC,"what's the best tutorial series available online right now to learn to make an app in android studio, from beginning to end, for someone new and green, but with a bit of previous programming experience?"
androiddev,3bzmcy,Tamzid,2,Fri Jul 3 21:11:49 2015 UTC,Check out the android development course on Udacity.
androiddev,3bzmcy,wapz,2,Sat Jul 4 15:13:12 2015 UTC,"So there have been a lot of posts recently on Android Studio vs Eclipse (Eclipse not being supported soon, been way out-dated, etc).  I have been using Eclipse since the beginning and the one time I tried to switch over to AS it was a lot of pain and build times were  atrocious (> 1:30 compared to ~:35 with ADT). I want to give it a go again and was wondering a few things for those who have switched/have experience with AS:   I guess I haven't researched much on gradle but is there an easy way to drop the build times? Has anyone else switched to AS and had a lot of trouble reading your own code? Is there a way to easily change the font colors to that of Eclipse without doing them all individually? [I'm not sure that's the problem, but I tried AS for about 3 hours and it still takes me about 2 times longer to read the same code]."
androiddev,3bzmcy,bart007345,3,Fri Jul 3 14:20:27 2015 UTC,"This debate really needs to end. Google have stopped supporting Eclipse and all efforts now go into AS.  I get the build times are frustrating but you WILL lose features. The answer is NOT ""go back to eclipse""!  I guarantee the build times will improve over time, its just not Google's priority right now.  There are other threads mentioning how having a high spec dev machine really helps. I know thats not great for a lot of people but seriously, the choice is not in your hands.  Move on.  EDIT: Sorry OP, I know you are asking how to move on."
androiddev,3bzmcy,wapz,1 point,Fri Jul 3 14:54:43 2015 UTC,"Yeah, I'm not here to debate. I know the time has come. I'm just trying to make AS easier to develop in."
androiddev,3bzmcy,bart007345,1 point,Fri Jul 3 15:24:35 2015 UTC,"dude, I didn't mean to have a go at you, I just saw you raise the issue about the other threads recently and I jumped in.  I should have created a separate thread. Apologies."
androiddev,3bzmcy,wapz,1 point,Fri Jul 3 15:27:14 2015 UTC,"I know, I saw your edit :) No hurt feelings haha. I knew it was time to move on when AS was no longer beta, but I feel so much more efficient and natural on Eclipse I'm a clinger :("
androiddev,3bzmcy,madisp,1 point,Fri Jul 3 15:37:28 2015 UTC,"although gradle is a bit slower than ant, 0:35 -> 1:30 for an incremental build does not sound reasonable. I assume you haven't hit the dex limit yet? What machine are you building on?"
androiddev,3bzmcy,wapz,1 point,Fri Jul 3 19:33:10 2015 UTC,"This was a long time ago in beta .32 or something like that if that would change anything. Every time I built, gradle would re-build everything or something (Unfortunately, I really  don't know how gradle works properly) and it would take a long time. I run on an i7  2870QM and 840 pro SSD."
androiddev,3bzmcy,code_mc,1 point,Sat Jul 4 02:43:02 2015 UTC,"At I/O a new gradle version with improved (talking more than a few seconds faster) build times was announced to be released later this year. Those benchmarks actually came close to ANT so there is some good news on the horizon. Just have to sit tight I guess :)  source: https://www.youtube.com/watch?v=f7ihSQ44WO0&feature=youtu.be&t=8m54s  The current version (2.4) already includes some nice perf improvements but the ""next gen"" one is even faster (about 3 times)"
androiddev,3bzmcy,wapz,1 point,Sat Jul 4 11:11:00 2015 UTC,"Sweet, thanks for the info! The build times are the main thing that's discouraged me in the past. I'm still having a terrible time reading code, though (and it's quite clean if I say so myself!)"
androiddev,3bzmcy,code_mc,2,Sat Jul 4 13:22:38 2015 UTC,There's lots of themes available for android studio (as with any intelij product) and I'm sure the one from eclipse can be found online ;)
androiddev,3bzmcy,wapz,1 point,Sat Jul 4 14:03:14 2015 UTC,"Thanks :) That was a lot easier than I expected. I earlier searched for something along the lines of ""Android Studio Eclipse color styles"" or something weird and couldn't find anything. It still seems a little different (probably the buttons and borders/etc), but I think I'll get used to it quick enough!"
androiddev,3bzmcy,sudhirkhanger,2,Sat Jul 4 14:36:11 2015 UTC,How do you access Reddit - web or mobile? How often do you visit?
androiddev,3bzmcy,Cg2XHPxz,3,Fri Jul 3 14:34:08 2015 UTC,Reddit news obvi. Quite a bit in fairly short intervals. More than I should really
androiddev,3bzmcy,sudhirkhanger,1 point,Fri Jul 3 14:54:09 2015 UTC,Do you save article or read them right away?
androiddev,3bzmcy,Cg2XHPxz,2,Fri Jul 3 15:04:33 2015 UTC,Add to pocket
androiddev,3bzmcy,cariusQ,2,Fri Jul 3 15:49:57 2015 UTC,Anyone taking Udacity's Android Nanodegree? How was it?
androiddev,3bzmcy,Tamzid,2,Sat Jul 4 01:46:33 2015 UTC,"I'm taking it right now. It's fun actually, there are 6 project apps they make you create throughout the course. The final one being your own Capstone project.   They have it updated more or less, they keep changing and adding things as stuff gets outdated.   One thing that was interesting was that they taught me AsyncTask, told me that it's bad for memory leaks if you tie it too strongly with the Activity, then got me to toss it out for CursorLoader instead. Seems like Googlers are aware of the pitfalls AsyncTask has, unlike how many on the internet imply they don't."
androiddev,3bzmcy,cariusQ,1 point,Sat Jul 4 15:18:44 2015 UTC,"Since you're taking it, how did you go about the doing practice problems on the videos? I'm currently on lesson 3, some of practice problems were so challenging I usually skip it and went straight to GitHub for solution."
androiddev,3bzmcy,Tamzid,1 point,Sun Jul 5 01:35:29 2015 UTC,"Try to be persistent with finding the solution, don't be afraid of making mistakes. You will learn how to interpret the stack trace and solidify your knowledge of the debugging tools.   For example, after tearing my hair out for hours and hours I eventually learned if the stack trace seems useless, it's most often an issue with the xml.   That said I use the android documentation a lot. I also check out stackoverflow.com for multiple angles. I like to tell myself I can get better at formulating questions if I search stackoverflow.com :p  Sometimes your issue is straight up caused by a bug in Android API itself, and those are the times you'll be ready to commit Sudoku."
androiddev,3bzmcy,lordVader1138,2,Sun Jul 5 02:15:13 2015 UTC,"My side project is done and uploaded in play store. It's called ShareChannels for PushBullet. I have also open sourced the code for the mass, you can check the source here.  During the development of the project I have tried various things for first time, or for something other than a demo app. Which are   Retrofit RxAndrod ButterKnife Proguard   In the time of Google I/O, most of the data stuff and some UI skeleton stuff was ready. So for me this project also became an opportunity to learn Data Binding and Design Support Library.   Here is screenshots directory and here is apk  Edit: Playstore Link"
androiddev,3bzmcy,Magillus,1 point,Sat Jul 4 02:58:44 2015 UTC,Those libraries makes that you never want to go back to other way of doing things.  Those bright colors hurts eyes (after looking on screenshots).
androiddev,3bzmcy,lordVader1138,1 point,Sun Jul 5 15:40:05 2015 UTC,"Those libraries makes that you never want to go back to other way of doing things.   That's what I feel after the core functionality is finished. You don't want to go back to ""manual"" things esp for first three libraries...   Those bright colors hurts eyes (after looking on screenshots).   Yes, I am aware about that, I am playing with some user-selectable themes type of concept. I am thinking of having alternative color."
androiddev,3bzmcy,morgazmo99,1 point,Mon Jul 6 02:49:21 2015 UTC,"Where is the best place to ask code related questions? (outside of StackOverflow which isn't letting me contribute since I don't have all the answers)  I want to ask how I can pass a fragment type in a switch statement, so after, I can populate an adapter with an array of that fragment type. Sounds clunky I imagine, but I have 20 different fragment types and am tying to reduce redundant coding.  eg:  Array array;  switch (menuItem.getItemId()){      case R.id.nav_item_1:          array = getResources.getStringArray(R.array.titles1);         // PASS FRAGMENT TYPE to VARIABLE HERE:      break;      }  customPagerAdapter = new CustomPagerAdapter(getSupportFragmentManager()); for (int i = 0; i < array.length; i++) customPagerAdapter.addFragment(FRAGMENTTYPE.newInstance(i), array[i]); viewPager.setAdapter(customPagerAdapter);   Something like that?  Additionally I have been struggling with the same problem for ages now and I can't seem to find an answer. I'm trying to put a ViewPager in a CollapsingToolbarLayout. Everything works perfectly for me, but my ViewPager will only scroll horizontally, and a TextView inside a NestedScrollView can scroll vertically. Of course, I want to get rid of the TextView and let the ViewPager do both. Tried everything, no answers.  Here's my XML:  <?xml version=""1.0"" encoding=""utf-8""?>  <android.support.design.widget.CoordinatorLayout  xmlns:android=""http://schemas.android.com/apk/res/android"" xmlns:app=""http://schemas.android.com/apk/res-auto"" xmlns:tools=""http://schemas.android.com/tools"" tools:context="".MainActivity""  android:id=""@+id/main_content"" android:layout_width=""match_parent"" android:layout_height=""match_parent"" android:fitsSystemWindows=""true"">  <android.support.design.widget.AppBarLayout      android:id=""@+id/appbar""     android:layout_width=""match_parent""     android:layout_height=""@dimen/app_bar_height""     android:fitsSystemWindows=""true"">       <android.support.design.widget.CollapsingToolbarLayout          android:id=""@+id/collapsing_toolbar""         android:layout_width=""match_parent""         android:layout_height=""wrap_content""         android:minHeight=""?attr/actionBarSize""         android:fitsSystemWindows=""true""         app:contentScrim=""?attr/colorPrimary""         app:layout_scrollFlags=""scroll|exitUntilCollapsed"">          <ImageView              android:id=""@+id/backdrop""             android:layout_width=""match_parent""             android:layout_height=""match_parent""             android:background=""@color/md_white_1000""             android:scaleType=""fitCenter""             android:src=""@drawable/backdrop""             app:layout_collapseMode=""parallax""             app:layout_collapseParallaxMultiplier=""0.7""/>          <android.support.v7.widget.Toolbar              android:id=""@+id/toolbar""             android:layout_width=""match_parent""             android:layout_height=""?attr/actionBarSize""             app:layout_collapseMode=""pin""             app:layout_scrollFlags=""scroll|enterAlways""/>      </android.support.design.widget.CollapsingToolbarLayout>  </android.support.design.widget.AppBarLayout>  <LinearLayout     android:layout_width=""match_parent""     android:layout_height=""match_parent""     android:fillViewport=""true""     android:orientation=""vertical""     app:layout_scrollFlags=""scroll""     app:layout_behavior=""@string/appbar_scrolling_view_behavior"">      <android.support.design.widget.TabLayout         android:id=""@+id/tabs""         android:layout_width=""match_parent""         android:layout_height=""match_parent""         android:background=""@color/colorPrimary""         android:scrollbarSize=""24sp""         app:layout_scrollFlags=""scroll""         style=""@style/CustomTabs""/>      <android.support.v4.view.ViewPager          android:id=""@+id/viewpager""         android:layout_width=""match_parent""         android:layout_height=""match_parent""         android:padding=""@dimen/viewpager_padding_default""         app:layout_scrollFlags=""scroll|enterAlways|enterAlwaysCollapsed""/>  </LinearLayout>  <android.support.v4.widget.NestedScrollView      android:id=""@+id/nestedScrollView""     android:layout_width=""match_parent""     android:layout_height=""match_parent""     android:padding=""@dimen/drawer_padding_default""     app:layout_behavior=""@string/appbar_scrolling_view_behavior"">      <TextView          android:id=""@+id/textView""         android:layout_width=""match_parent""         android:layout_height=""match_parent""         android:layout_gravity=""center""         android:padding=""@dimen/drawer_padding_default""         android:textColor=""@color/textColorPrimary""         android:background=""@drawable/myrect"" />  </android.support.v4.widget.NestedScrollView>  <android.support.design.widget.FloatingActionButton      android:id=""@+id/fab_action""     android:src=""@mipmap/ic_action_help""     android:layout_width=""wrap_content""     android:layout_height=""wrap_content""     android:layout_margin=""@dimen/drawer_padding_default""     android:scaleType=""center""     app:borderWidth=""0dp""     app:layout_anchor=""@id/main_content""     app:layout_anchorGravity=""bottom|right|end""/>  </android.support.design.widget.CoordinatorLayout>"
androiddev,3bzmcy,jtgilkeson,1 point,Sat Jul 4 03:39:21 2015 UTC,"in switch:  Class<?> fragmentClass = MyFragment.class;  later:  Fragment frag = Fragment.instantiate(this, fragmentClass.getName());  or just assign MyFragment.class.getName() to a String and use that."
androiddev,3bzmcy,morgazmo99,1 point,Sat Jul 4 09:17:25 2015 UTC,"Seems to be just about exactly what I'm looking for, but I'm using  CustomPagerAdapter(DummyFragment.newInstance(i), array[i]));   and not  DummyFragment.instantiate(...)   because I am passing variables around too. Is that a possibility?  Thanks for the help!"
androiddev,3bzmcy,jtgilkeson,1 point,Sat Jul 4 10:52:57 2015 UTC,"You could do:  Fragment.instantiate(this, fragmentClass.getName(), args);  Where args is your Bundle of arguments.    newInstance should be putting the variable(s) into a bundle, so it's basically the same thing."
androiddev,3bzmcy,sourd1esel,1 point,Sat Jul 4 12:16:39 2015 UTC,I had an Android dev interview this week. I was asked about my projects. I was asked how I did a few things. Other than that i was not asked any technical questions. Two devs were interviewing me. I thought that was a little strange.
androiddev,3bzmcy,Tamzid,1 point,Sat Jul 4 05:13:57 2015 UTC,By technical questions do you mean CS style questions?
androiddev,3bzmcy,sourd1esel,2,Sat Jul 4 15:20:29 2015 UTC,Yes. They asked me how I implemented a few things. They were general questions that could have been asked by someone who knew no Android. I thought it was a little weird but I have little dev interviewing experiences. We spoke for about 30 min.
androiddev,3bzmcy,Tamzid,1 point,Sat Jul 4 15:49:52 2015 UTC,In that scenario you could take the opportunity to probe them with your own questions a little bit and see what you're getting into.  Maybe HR insisted on doing the interview...
androiddev,3bzmcy,Magillus,1 point,Sat Jul 4 16:06:41 2015 UTC,"Thay could not have experience doing interviews or maybe it is new trend. Learning how you solved issues or working around constrains, bussiness logic or requirements is good way to check knowledge on candidate. Answers give hints for extra questions to follow-up or idea if candidate is not fit. Not only by knowledge but a cultural fit and approach of development, etc."
androiddev,3bzmcy,micketic,1 point,Sun Jul 5 15:53:38 2015 UTC,"How do I track which sites are sending traffic to my app page?  Yesterday, for reasons I am not aware of, my users according to GA doubled while I was sleeping and I trying to find what happened. Any idea how can I do it?"
androiddev,3bzmcy,BikerMouseFromMars,1 point,Sat Jul 4 07:17:33 2015 UTC,"I've ported our eclipse based projects to Android Studio. Oh boy was this a pain in the ass, because the Importer doesn't produce working results and tutorials all seem to be for people with simple project structures... and not for enterprise level stuff where modules are shared between apps. But i'm in love with the flavor feature. Instead of having 4 ""Runner Projects"" per App, everything looks so much more clean and less poluted. And manifest merging. Why did eclipse never have this?"
androiddev,3c28ma,oyolab,2,Sat Jul 4 02:13:59 2015 UTC,I tried Udacity and several YouTube channels like the TheNewBoston. They can be great but my favorite has been the official Android team's Building Your First App. They explain everything!
androiddev,3c28ma,DeafParrot,1 point,Sat Jul 4 03:39:51 2015 UTC,Udacity.com has a free Android development course and really built a base for me in Software Engineering in general from just that course. I highly recommend it.
androiddev,3c28ma,megabox,1 point,Sat Jul 4 03:03:03 2015 UTC,I think Derek Banas makes good video tutorials
androiddev,3c0kto,Yimmer92,2,Fri Jul 3 17:50:22 2015 UTC,This is a good read http://www.intridea.com/blog/2011/6/16/android-understanding-activity-launchmode
androiddev,3c0kto,ZakTaccardi,2,Fri Jul 3 19:38:55 2015 UTC,The NavUtils class might come in handy for this kind of thing.
androiddev,3c0kto,denley,1 point,Sat Jul 4 01:09:33 2015 UTC,"An intent with reorder to front,  brought to front and single top should work."
androiddev,3c098d,wr712,1 point,Fri Jul 3 16:22:44 2015 UTC,Isn't this frowned upon? or is it a common thing
androiddev,3c098d,Devil_Spawn,1 point,Fri Jul 3 18:44:57 2015 UTC,Well ratings help Google Play Store rankings. So we give people the option of rating us. Pretty common common thing as per our research.
androiddev,3bz1x1,spiritus1,2,Fri Jul 3 08:44:45 2015 UTC,I don't think bluetooth will work here as mentioned in another answer. Given the accuracy of GPS and the range of bluetooth your phone will have almost the same coordinates as the other phone if you are connected via bluetooth. In my opinion you should update your location on your server and whenever an update occurs send a push message. This will work even when your app is not running on the recieving phone. Push messages can be configured so that when the recieving phone is turned off it will only recieve the latest location of the other one.
androiddev,3bz1x1,HaoChen,1 point,Sat Jul 4 07:42:32 2015 UTC,Cool. Will look that up !
androiddev,3bz1x1,HaoChen,1 point,Sat Jul 4 10:05:42 2015 UTC,"Do I have to go throug h GCM to handle push messages ? And if so, do I have to get a GAE account ?"
androiddev,3bz1x1,HaoChen,1 point,Sat Jul 4 12:35:10 2015 UTC,I think so. But it's free and easy to setup so there should be no problem doing it
androiddev,3bz1x1,bart007345,1 point,Sat Jul 4 13:20:30 2015 UTC,"Do you have any tutorial which can handle this particular use case because the docs look daunting (sometimes, one tip can save me days of pointless research) ?"
androiddev,3bz1x1,Eeshoo,2,Sat Jul 4 23:14:23 2015 UTC,"I don't have any links for you but I'd look for tutorials about GPS, REST calls and push messages"
androiddev,3bz1x1,Antimateria,1 point,Sat Jul 4 23:26:42 2015 UTC,"bit confused by what your trying to do.  Two devices want to know where each other are? Even if one is not broadcasting its location? Sorry, I think you need to explain again."
androiddev,3bz1x1,Antimateria,1 point,Fri Jul 3 15:01:48 2015 UTC,Phone A has to be tracked by Phone B. He's asking if the backend (Phone A writes to DB and B checks every few x timeunits both via REST) he implemented is the correct way to go or if there is a better alternative.
androiddev,3bzj8y,bart007345,3,Fri Jul 3 12:28:09 2015 UTC,Personally I use monkey (not monkeyrunner) to stress test my applications with thousand of random touches events. This help me find subtle bugs about double clicking the same button in a little time range and other things like this.
androiddev,3bzj8y,marcouberti,1 point,Fri Jul 3 15:25:51 2015 UTC,<crickets />
androiddev,3bzj8y,zoltanf,2,Fri Jul 3 15:09:42 2015 UTC,well today is a quite day on reddit for other reasons. Lets see what happens by Monday.
androiddev,3bxqra,TyrSniper,4,Fri Jul 3 00:54:00 2015 UTC,"If you're not trying to make something better/different than an existing app, you should question why you're making the app in the first place.  If it's a cash grab and you think you can make more money from it than your time is worth, by all means keep at it.  If you're doing it for the experience, keep at it.  Otherwise, try to be better (or different).  If you can't even clone the existing app to parity, you need to find some way to make your app stand out to make up for those deficiencies."
androiddev,3bxqra,Scriptacus,2,Fri Jul 3 01:13:06 2015 UTC,"The main reason why I was planning on making it was because I've wanted to for about 5 years now... But I also never searched for existing versions of it. And I never imagined the existing versions were so much better and more intricate. I don't think I could reasonably bring my app up to the levels of the pre-existing ones for a cash grab, and it's simple enough that I'm probably not gaining much experience. You make a good point. I think I need to sit down and either make the idea more unique and different, or re-evaluate whether its a worthwhile project. Thanks"
androiddev,3bxqra,mavdev,3,Fri Jul 3 01:22:18 2015 UTC,"If you cannot compete on feature set, make your app BEAUTIFUL... just awesome UI and animations, material design, etc. Design trumps functionality many times."
androiddev,3bxqra,kdb223,1 point,Fri Jul 3 02:37:06 2015 UTC,I second this.
androiddev,3bxqra,Eeshoo,1 point,Fri Jul 3 15:27:47 2015 UTC,my app failed on that part :(
androiddev,3bxqra,TODO_getLife,1 point,Fri Jul 3 15:38:26 2015 UTC,"Yes, I just went ahead with it anyway, because I could do it better. My latest project was going to be a huge one and at the same time someone else was developing the exact same thing, they posted it on Reddit. Same design style and everything. It didn't stop me, what actually did was the fact that I got a job. Don't have the time now.  My main target was design over features, either way if I didn't get a job I would still be doing it."
androiddev,3bxqra,hitch_united,1 point,Fri Jul 3 10:40:15 2015 UTC,"Just keep making it, you'll learn a lot and get better at it. Then you can keep updating yours to make it better than the competition."
androiddev,3bxf6q,adgad137,1 point,Thu Jul 2 23:10:59 2015 UTC,Hybrid apps get a lot of criticism on reddit but they have their place in my opinion. Do you think your app would have been greatly improved by making it native?  I never understand why people don't factor in how much quicker it is to make cross platform hybrid apps compared. Developers only have a finite amount of time and resources.
androiddev,3bxf6q,seanwilson,2,Fri Jul 3 01:29:00 2015 UTC,"Hmm, if this were to become anything more than a free hobby game I'd consider rewriting it natively at this stage - largely for performance reasons with animations etc (that said on newer devices I can't imagine the difference being perceivable). I've not yet tried Play Game Services integration get, and the fact that I don't really interact with many platform-specific APIs also made hybrid apps appealing.  But I definitely do agree that the speed of getting a prototype out, when your aim is just to see if an idea in your head is feasible and translates well into code, was a big advantage to me. I was able to give people a URL to play with within hours. Even with some Android experience myself, it would definitely have been a stretch to get something fairly polished done in a weekend."
androiddev,3bxf6q,vinsanity406,1 point,Fri Jul 3 02:38:46 2015 UTC,Can you give an example where you think hybrid apps are the correct solution?
androiddev,3bxf6q,ODesaurido,1 point,Fri Jul 3 01:42:20 2015 UTC,"Not OP but I think hybrid apps are great if you have a lot of knowledge of the web stack and no knowledge of android or iOS  I also think it's great as small, fast prototype that can be easily thrown away  It's also great as language for enterprise apps, where usability is not a primary concern and you can get easy cross platform with hybrid apps.  Same with very simple apps."
androiddev,3bxf6q,vinsanity406,1 point,Fri Jul 3 02:19:32 2015 UTC,"Ok but let's go down the list.   Lots of Web knowledge but no java or c? Sure. But you're probably making a simple hobby app right? So it's cool for a hobbyist who has a simple game or he'd like to see on each platform but he's probably not going to be making or supporting anything terribly complicated.   Small, fast prototype? Cool, what are we validating? A business idea? Why not validate the prototype as a mobile responsive Web site? Something with much, much faster iterations, feedback and maturity and knowledge base.    It's also great as language for enterprise apps, where usability is not a primary concern and you can get easy cross platform with hybrid apps.   Here is where it gets interesting. My bank uses a white labeled hybrid app and I hate it but not enough to leave them. Blue Golf has a cross platform app solution for golf associations that's white labeled. I rarely see large enterprises cross platforming. I've even worked with Fortune 1000 companies that chose native over cross platform and cost is rarely a concern.   So why aren't the white labeled app houses going native? That's the question. I feel pretty confident it would be easy for me to create white labeled native golf apps that improve on Blue Golf's solution. Since they and banks aren't exactly a viral market but one that requires a long sales cycle I've not made the attempt.  But all of this discounts long term costs. Cross platform solutions have shitty UI. It's a terrible port of ios6 most of the time. They aren't as smooth or performant as native apps. Proprietary solutions like Titanium can change without notice and don't keep up with the platform as quick as native sdks. And if your titanium or phone gap guy quit I'd argue it's harder to find a replacement.   If the app is that simple, then it's probably not much more than a tutorial calculator which I'd say most native devs can do in half the time a cross platform app is done.   So best I can tell, they are perfect for a Web developer hobbyist?   Every person I've worked with has been fed up at their phone gap or titanium solution within months and end up paying to rewrite it native."
androiddev,3bxf6q,ODesaurido,1 point,Fri Jul 3 02:57:11 2015 UTC,"Good discussion, my opinion on a few points:  Lots of Web knowledge but no java or c? Sure. But you're probably making a simple hobby app right? So it's cool for a hobbyist who has a simple game or he'd like to see on each platform but he's probably not going to be making or supporting anything terribly complicated.   The hybrid part of hybrid apps makes then a good starting point, as your hobby app starts getting more attention you can turn it into native one screen at a time.   Small, fast prototype? Cool, what are we validating? A business idea? Why not validate the prototype as a mobile responsive Web site? Something with much, much faster iterations, feedback and maturity and knowledge base.   Yeah, you can validate a business idea, UX, game design, etc. The main advantage of a hybrid approach instead of a responsive website is the use of the device's sensor. I know that everyday we are getting new technology in HTML so I'm not sure how much we still need hybrid to access sensors and platform specific features, though. My point is that if your prototype relies on a feature that only works natively then responsive website is not an option. And, as a prototype, a hybrid app can be faster to develop than a native app.  Enterprise   So, just to be clear when I say enterprise apps I actually mean internal enterprise projects. These projects can benefit a lot from frictionless update that a hybrid approach can offer you. I agree that cost sometimes isn't an issue in this case, but having only one codebase that is always up to date, developed by a single team can be a big advantage.  Every person I've worked with has been fed up at their phone gap or titanium solution within months and end up paying to rewrite it native.   Yeah, same here I've been in a lot of projects using titanium, ionic, phonegap, etc and most of then failed horribly. But I still think the technology has it's niches where it can be useful. I just treat it as another tool in my toolbox."
androiddev,3bxf6q,pakoito,2,Fri Jul 3 03:19:44 2015 UTC,Another advantage of a hybrid app vs responsive design (since in my case the two were essentially synonymous) is access to Play/App stores for distribution. Sending out a link is great but doesn't quite have the discovery/review mechanisms that the app stores do.
androiddev,3bxyze,IAskAlotOfQuestions2,25,Fri Jul 3 02:10:14 2015 UTC,"I'd say use Android Studio. It's a customized version of IntelliJ IDEA that is free to use and very well integrated with Android development. Gets you all the portions of IDEA that you'd need for Android dev (unless you're using Spring or something, but because of stuff like Dagger 2 I don't think Spring is very popular on Android), without having to worry about any licensing issues.   Either way, I'd recommend not using Eclipse. Personally, I really dislike Eclipse, and Android support for it is end of life anyway."
androiddev,3bxyze,dccorona,1 point,Fri Jul 3 02:20:04 2015 UTC,Thanks I had no idea about that
androiddev,3bxyze,starbuckt,3,Fri Jul 3 02:26:44 2015 UTC,https://developer.android.com/sdk/index.html
androiddev,3bxyze,crptn137,-1,Fri Jul 3 04:56:23 2015 UTC,"Actually, as you're a student I would recommend you to just use intelliJ directly. Jetbrains offers it for free for students, you just have to register on their site with your educational mail-adress. IntelliJ has all the stuff built in that comes with Android studio plus many more features you may not need for Android developing but for other projects you might develop for during your classes."
androiddev,3bxyze,mavdev,6,Fri Jul 3 13:38:49 2015 UTC,Use Android Studio - it's free and officially supported by Google.
androiddev,3bxyze,Zhuinden,4,Fri Jul 3 02:35:24 2015 UTC,Android Studio is your best bet.
androiddev,3bxyze,maxado_zdl,3,Fri Jul 3 06:17:44 2015 UTC,Android Studio with Darcula theme for Android and Atom for anything  else.
androiddev,3bxyze,kaze0,2,Fri Jul 3 11:56:22 2015 UTC,Eclipse Android plugins will be abandoned sometime this year
androiddev,3bxyze,marcouberti,1 point,Fri Jul 3 10:27:19 2015 UTC,"I used Eclipse before, but now I use Android Studio from version 1.0. The main reason is because is the official IDE suggested by Google, but I have to admit that it is awasome. The Gradle build system is very easy to use, in particular the library dependency mechanism is fantastic. Importing a library with a specific version is never been so easy. Another thing that I like of Android Studio is the builds flavour system."
androiddev,3bxyze,nomadProgrammer,1 point,Fri Jul 3 15:32:14 2015 UTC,this is true in comparison to maven gradle is VERY easy to use
androiddev,3bxyze,herrschr,1 point,Fri Jul 3 15:43:39 2015 UTC,"My PC is hardly low-end, I like Sublime + Gradle builds for simplicity and speed."
androiddev,3bxyze,4silvertooth,1 point,Mon Jul 6 01:14:37 2015 UTC,AIDE on my phone.
androiddev,3bxyze,insane-cabbage,2,Fri Jul 3 06:46:26 2015 UTC,"What? Seriously?  I mean from what I see from their demo video it's quite impressive. But unless you have a keyboard connected to it, I cannot believe that you can properly work with it.   It could be useful to read code with it on the go if you really want to.  Please don't take it the wrong way. I'm just wondering how that could work on a daily basis."
androiddev,3bxyze,4silvertooth,5,Fri Jul 3 11:16:32 2015 UTC,"I am just a hobby programmer, my day job give me some free time, so I code on my phone as I don't have access to PC at work, I have made some pretty apps on it. AIDE has a nice auto completion, so typing is not a problem, I have my repo on bitbucket which I use to sync at home to work on a computer. I use intellij Idea (Not android studio) at home. AIDE also has nice git integration. About 90% of work is done on my phone."
androiddev,3bxyze,insane-cabbage,2,Fri Jul 3 12:05:08 2015 UTC,"Wow OK. I wouldn't have the patience to work on a touch screen. Also, I can take my work laptop home, so I can code in the train or wherever."
androiddev,3bxyze,3dom,1 point,Fri Jul 3 12:28:44 2015 UTC,I have both Android Studio and Eclipse installed. I use mostly Eclipse because it's a lot faster (even after Gradle optimization) and doesn't try to set my laptop on fire: Studio load processor as if it was a very powerful 3D game on max settings.
androiddev,3bxyze,Nsarafa,1 point,Fri Jul 3 08:39:31 2015 UTC,Android Studio for Android. Atom for everything else. Second was made by Github and just released their 1.0
androiddev,3bxyze,kevelbreh,7,Fri Jul 3 04:08:00 2015 UTC,"But but but, why not just use any relevant JetBrains product? PyCharm, WebStorm, IntelliJ and CLion are all great from the times I've used them."
androiddev,3bxyze,pterencephalon,2,Fri Jul 3 04:56:55 2015 UTC,"Yeah, I'm with you. Small stuff I might do in a text editor, but I've been sucked into PyCharm and WebStorm for anything larger scale I'm working on right now. I get them free as a student, but if I didn't I might be hard pressed to pony up."
androiddev,3bxyze,Nsarafa,0,Fri Jul 3 06:01:38 2015 UTC,Never tried webstorm. I've been on Atom for about a week now and I love it. My other two favorites are Sublime (free of course) and believe it or not Adobe Brackets. Like Atom more than both though
androiddev,3bxyze,UMadBreaux,3,Fri Jul 3 06:35:09 2015 UTC,"Why does everyone love atom, seems like a more complex Emacs to me."
androiddev,3bxyze,ZakTaccardi,1 point,Fri Jul 3 17:07:39 2015 UTC,I was not impressed either. It seemed cool but Sublime is a lot more mature
androiddev,3bxyze,CodingGorp,1 point,Sat Jul 4 15:36:31 2015 UTC,"If you are an Android developer too, you should definitely be using WebStorm. Having access to a very similar IDE, all the same keyboard shortcuts, etc, can greatly improve your productivity."
androiddev,3bwlnx,cykwon,41,Thu Jul 2 19:19:53 2015 UTC,swiftkey
androiddev,3bwlnx,cmsessa,11,Thu Jul 2 19:57:54 2015 UTC,Only because iOS didn't have keyboard APIs until recently.
androiddev,3bwlnx,Chomskyismyhero,29,Thu Jul 2 22:04:04 2015 UTC,Pushbullet? Not mainstream...but the only thing I can think of right now. :)
androiddev,3bwlnx,ricankng787,19,Thu Jul 2 19:36:47 2015 UTC,Ingress
androiddev,3bwlnx,marian1,2,Fri Jul 3 00:00:37 2015 UTC,"Came here to say Ingress! Definitely a big deal, and, since it was developed by Google it started out as Android only."
androiddev,3bwlnx,thescarletbeast,1 point,Fri Jul 3 04:29:40 2015 UTC,Don't think it was originally developed by Google but they bought up the idea or the developers pretty early on
androiddev,3bwlnx,TarkLark,3,Fri Jul 3 05:26:59 2015 UTC,"Niantic Labs began as an internal startup within Google, so they were always part of the mothership."
androiddev,3bwlnx,Mysterius,1 point,Fri Jul 3 07:28:03 2015 UTC,"Niantic Labs:       Niantic Labs, is an internal startup within Google.  The Labs takes its name from the whaling vessel Niantic that came to San Francisco during the Gold Rush.   The Niantic Project is a fictional investigative project in the story of the augmented reality/location based mobile game Ingress. Niantic Labs was founded by John Hanke in 2010.   Hanke is known for co-founding Keyhole, which later became Google Earth and his involvement in Google Street View and Google Maps.     Image i     Relevant: Ingress (game) | Endgame: Proving Ground | John Hanke   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
androiddev,3bwlnx,autowikibot,7,Fri Jul 3 07:28:49 2015 UTC,Minecraft Pocket Edition
androiddev,3bwlnx,Khal_Me_Drogo,5,Fri Jul 3 04:37:50 2015 UTC,"In general iOS users tend to spend more money on apps, so from a business perspective it often makes sense to start there. There is also a view that ""trend setters"" more commonly use iphones, so if you want your new product to seem cool and exclusive it makes sense to start there again.   I have heard of people going the other way, and which one is actually the better option really depends on who your target audience is."
androiddev,3bwlnx,GaryViceroy,6,Thu Jul 2 19:37:36 2015 UTC,"Also keep in mind you don't have to test for as many devices. So if you are trying to launch something to see how it plays out, it may be smarter to launch there first and then port if it takes off."
androiddev,3bwlnx,robotburrito,-1,Fri Jul 3 03:03:04 2015 UTC,"Also, iOS development in general is cheaper because it's a lot faster than Android development."
androiddev,3bwlnx,BorgDrone,3,Fri Jul 3 11:49:05 2015 UTC,I've read that this isn't true anymore
androiddev,3bwlnx,anewguy03,2,Thu Jul 2 22:59:33 2015 UTC,sauce?
androiddev,3bwlnx,danijoo,12,Thu Jul 2 23:08:15 2015 UTC,"http://recode.net/2015/05/07/android-starting-to-pull-past-ios-in-generating-revenue-for-app-developers/  But if you google around there's plenty of articles contradicting each other, I wouldn't pay much attention to any of these statistics."
androiddev,3bwlnx,crowleysimon,7,Thu Jul 2 23:26:55 2015 UTC,"That is true. Android pulls in more app revenue as a whole and thus pays out more money to developers every quarter. But it does it with roughly 4x the users, and so per-user revenue is mix higher, and that's the most important metric. Particularly for young apps, because nearly nobody saturates the market and if you're successful enough to be worried about the money you're losing because you could have had more users as an Android app, you're successful enough to pay to make the Android app."
androiddev,3bwlnx,dccorona,1 point,Fri Jul 3 01:43:11 2015 UTC,"Yeah, last thing I read about it the real breakdown is that android users tend to be more valuable via ads while iOS users tend to pay more for the app directly. But really it's not the facts that are dictating this, it's just the prevailing opinion of managers."
androiddev,3bwlnx,GaryViceroy,2,Thu Jul 2 23:44:36 2015 UTC,"I don't believe that's quite right. Reports still show that ad impressions on iOS are more valuable (because users of the platform that spend more money on the App Store probably spend more in other markets as well). However, ad-based models make more money than payment-based models on Android, because users are more likely to download free apps (obviously, but the skew is strong enough that it rarely makes sense to not be ad-based)"
androiddev,3bwlnx,dccorona,2,Fri Jul 3 01:45:27 2015 UTC,"Fancy launched on Android first a few years ago. It was the first high profile app I had heard about launching on Android first. I think I learned about it from the NY Times, but I'm having trouble finding the news story because the name isn't exactly unique.  https://play.google.com/store/apps/details?id=com.thefancy.app&hl=en"
androiddev,3bwlnx,buckstalin,2,Thu Jul 2 23:08:02 2015 UTC,Glassboard I believe. Then they went full retard and implemented IOS guidelines on Android.  Now they're gone.
androiddev,3bwlnx,twigboy,3,Fri Jul 3 02:58:25 2015 UTC,I'm pretty sure pocketcasts and any.do were android first
androiddev,3bwlnx,yohaq,8,Thu Jul 2 21:02:41 2015 UTC,I think PocketCasts started on iOS
androiddev,3bwlnx,ZyranosaurusRex,1 point,Thu Jul 2 22:05:25 2015 UTC,"PocketCasts technically did start on iOS, though it was pushed aside by other podcast apps, including Apple's own. They did make an Android version prior to v4, though the most well known thing about Pocket Casts 3 on Android was the fiasco with Amazon's Appstore.  I will, however, make an exception for Pocket Casts since v4 (which launched first on Android) felt like a whole new app, and was for the first time truly great."
androiddev,3bwlnx,wizfactor,1 point,Sat Jul 4 05:03:56 2015 UTC,Caustic?
androiddev,3bwlnx,KapaLala,-27,Fri Jul 3 14:03:05 2015 UTC,"I don't know, I've never used an apple iDevice. Like most of the rest of the world."
androiddev,3bwlnx,jenkstom,6,Thu Jul 2 21:15:11 2015 UTC,"I don't know,   Don't answer then   I've never used an apple iDevice. Like most of the rest of the world.   Most of the world hasn't used an Android device either"
androiddev,3bzac6,konrad-iturbe,1 point,Fri Jul 3 10:39:09 2015 UTC,"You don't, and that seems to be the point. Auto is intended to be as distraction-free as possible, so opening up a means of fiddling with your camera while driving is probably not possible."
androiddev,3bzac6,mikenomn,1 point,Fri Jul 3 13:55:12 2015 UTC,"The GoPro camera should be outside the car in a mount, and only controls are stop, record and change mode. Similar to what BMW have done already in iOS and VW in Android  My app is a android auto GoPro client, since there is not one already."
androiddev,3bzac6,mikenomn,1 point,Fri Jul 3 14:06:54 2015 UTC,"Sure, but neither of those solutions use Android Auto or Apple's CarPlay. In both cases the car manufacturer put their own app onto their own OS and wrote software to communicate with the phone apps directly over USB. Your app just isn't possible with Android Auto in its current state."
androiddev,3bza5z,sagarsiddhpura,2,Fri Jul 3 10:36:34 2015 UTC,"Parse. Check them out, it's free for a basic tier and expandable if you need more (idk the scale of your app but I haven't gotten to the point where I needed to pay yet)."
androiddev,3bwztz,Widgens,8,Thu Jul 2 21:06:22 2015 UTC,"Start Making Good Games. When you have enough traction, you can figure out monetization.  I have never seen a developer who had successful games and couldn't make money. But I have seen way too many developers who are worried about optimizing monetization before they had any games out (and ended up making no money)."
androiddev,3bwztz,androidclean,4,Fri Jul 3 01:42:37 2015 UTC,"Thanks for the advice!  Not really looking for optimization though, just had a few questions in regards to specific information that seems curiously unavailable.  Building good games is definitely the focus for me, but I'd rather not go into this completely ignorant of the business side of things.  I'm trying to build something sustainable and learn all of the facets to developing games."
androiddev,3bwztz,xtreemballr,1 point,Fri Jul 3 02:42:34 2015 UTC,"You should probably worry about making the games rather than making ads. If you're good at what you do, the money will follow."
androiddev,3by3j3,hozayhandsome,1 point,Fri Jul 3 02:50:49 2015 UTC,"I like it. Gists are great, but not really for organizing snippets"
androiddev,3by3j3,pandanomic,1 point,Fri Jul 3 06:57:53 2015 UTC,Is it but possible to buy over the web with the apple store anymore?
androiddev,3byd5b,mobapptuts,3,Fri Jul 3 04:17:46 2015 UTC,"Hi Guys, this is part 1 of a tutorial series I uploaded to youtube. Part 1 covers creating the project and launching the standard hello world app.   Cheers"
androiddev,3byd5b,St33fo,1 point,Fri Jul 3 05:01:05 2015 UTC,Cool! This is extremely useful.
androiddev,3bz65y,debausch,1 point,Fri Jul 3 09:43:08 2015 UTC,If the recurring events are unbounded then you could just register for the future event while consuming the preceding event.  EDIT: There is a section on recurring events in here: https://developer.android.com/training/scheduling/alarms.html
androiddev,3bum8l,momodao,10,Thu Jul 2 07:44:26 2015 UTC,"Good job, I was looking for something like this since ShowcaseView is deprecated. Didn't have the time to play with it, but definitely gonna try it soon with my new app."
androiddev,3bum8l,lendro709,2,Thu Jul 2 08:29:09 2015 UTC,Thanks for your interest! Looking forward for your feedback :)
androiddev,3bum8l,Saketme,2,Thu Jul 2 08:37:42 2015 UTC,Thank you so much OP! I needed something like this.
androiddev,3bum8l,marcouberti,7,Thu Jul 2 11:07:58 2015 UTC,Great job! I think I can try it in my project. What about the minSdkVersion = 16? It is for animation issues? Thank you.
androiddev,3bum8l,captainfaloodha,6,Thu Jul 2 09:09:30 2015 UTC,"I haven't actually look into this, but it's a very good point, I will put this at the top of the list to test for minSDK that will work with TourGuide. Thanks!"
androiddev,3bum8l,marcouberti,1 point,Thu Jul 2 13:52:34 2015 UTC,shouldn't be too hard to workaround any animation issues with nineoldandroids.  Though to be honest (personally) I don't make apps that go under API17 anymore.
androiddev,3bum8l,zerors,1 point,Fri Jul 3 10:02:19 2015 UTC,"Thanks for nineoldandroid suggestion. :) And ya, I don't want to support for older Android versions since there are lesser users in that group now. But after looking into it, TourGuide can easily work with API 11, so there is where I will stop at. Don't think I will make extra effort to go lower than that unless many people need it."
androiddev,3bum8l,chukyka,2,Sun Jul 5 10:02:32 2015 UTC,I've make some fixes and lower the minSDKVersion to 11.
androiddev,3bum8l,eric_fri,1 point,Sun Jul 5 09:58:20 2015 UTC,Great! Thank you.
androiddev,3bum8l,ASKnASK,3,Mon Jul 6 10:21:36 2015 UTC,You have perfect timing.  I'm definitely going to try out your library.
androiddev,3bum8l,ASKnASK,2,Thu Jul 2 21:23:17 2015 UTC,"This is great, I love it!"
androiddev,3bum8l,angrycat,2,Thu Jul 2 10:39:36 2015 UTC,Nice one!  Been thinking about creating something like this for a while - ShowcaseView leaks memory like crazy (aside from being deprecated).
androiddev,3bum8l,TasteeOOoohhhs,1 point,Thu Jul 2 15:59:10 2015 UTC,"Thanks! I'm not aware of ShowCaseView memory leak issue. I'm afraid I might run into similar problem since my library's functionality is almost the same as ShowCaseView. Does anyone have experience on how to test for memory leak?   I'm very new to writing a library, so some advice will be much appreciated!"
androiddev,3bum8l,BorgDrone,3,Fri Jul 3 02:51:15 2015 UTC,Leak Canary is a library from Square that helps detect memory leaks.
androiddev,3bum8l,chukyka,2,Fri Jul 3 04:55:16 2015 UTC,"Nice suggestion, thanks!"
androiddev,3bum8l,BorgDrone,1 point,Fri Jul 3 06:03:42 2015 UTC,"I tried to use your lib in my app. The overlay shows but the Tooltip doesn't. Does it require something more than what I'm doing below?  final TourGuide mTourGuideHandler = TourGuide.init(this)             .with(TourGuide.Technique.Click)             .setPointer(new Pointer())             .setToolTip(new ToolTip().setTitle(""Welcome!"").setDescription(""Click on this button to Book a Car""))             .setOverlay(new Overlay())             .playOn(bookacar_fab);"
androiddev,3bum8l,Scriptacus,2,Thu Jul 2 14:08:31 2015 UTC,"This looks fine to me, I'm wondering if this is because your button is at the very bottom of the screen? Because the default gravity of the ToolTip is at the bottom of the button you playOn(). Since it's called the bookacar_fab, I'm guessing it will be located at the right bottom of the screen. If it is, you can try to do this:   .setToolTip(new ToolTip().setTitle(""Welcome!"").setDescription(""Click on this button to Book a Car"").setGravity(Gravity.TOP | Gravity.LEFT))   This will make the ToolTip appear on the top left of the button you playOn().  Let me know if this works, otherwise that might be a bug that I need to fix. Thanks!"
androiddev,3bum8l,BorgDrone,2,Thu Jul 2 14:43:31 2015 UTC,"Thanks for replying. I got it to work by using the gravity thing (checked out your demos).  One more thing.. Is it possible to display multiple tooltips in a row? Or tooltips for multiple buttons using the same TourGuide? Right now, one tour guide works on one button and it is dismissed only when that button (or another button) is clicked.  It would be nice to have a dismiss button on the TourGuide itself, no?"
androiddev,3bum8l,NotMichaelBay,3,Thu Jul 2 15:07:35 2015 UTC,"Glad you got it sorted out!  Multiple ToolTip without Overlay  I never thought of that when I started out TourGuide. I tested it and it's working fine, refer to Multiple ToolTip (you need to setOverlay(null) to remove Overlay).  Multiple ToolTip with Overlay + Pointer  I got curious and tried it with Overlay, so I tried to put 2 sets of TourGuide on 2 buttons at the same time, with ToolTip, Overlay and Pointer all turned on. This is the result: Multiple ToolTip+Overlay+Pointer  There are 2 issues:   Views inside holes are covered up by another Overlay Buttons inside the holes are not clickable   1st issue is not solvable easily, but 2nd issue can be solved easily by setting Overlay().disable(false) in order to allow clicking. This is the result: Multiple ToolTip+Overlay (clicking enabled)+Pointer  One instance of TourGuide  Regarding using one instance of TourGuide to work continuously, it is a good idea! However, I tested it, and it's not working well (2 tooltips will appear at the same time for very short moment). I will add this as a future feature because it made more sense to customize 1 set of TourGuide and use it throughout your Tour rather than customizing again and again every time.  Dismiss Button  As for dismiss button on the TourGuide itself, you mean a button sitting on top of the Overlay like ShowCaseView right? I didn't thought of having this too, I will add this as another customizable component to Overlay.  Thanks for all your feedbacks! :)"
androiddev,3bum8l,NotMichaelBay,-2,Fri Jul 3 02:40:26 2015 UTC,"Does your library include a way of showing gestures? Like sliding from the edges to open the navigation drawer? (Yes, my users are that retarded)"
androiddev,3bum8l,Saketme,1 point,Thu Jul 2 17:13:00 2015 UTC,"My library doesn't include those gestures yet. However, I already planned to have those features in the future, I think it's very useful to indicate things like swiping, double clicking, long press, etc, because those are the actions that users might not be aware of, solely by looking at the UI itself. For example, users wouldn't be aware of long pressing on Button A will make it afloat and become draggable. I'm not good at designing animations though, so I have to google a bit to get some animations inspiration."
androiddev,3bum8l,BorgDrone,2,Fri Jul 3 02:48:38 2015 UTC,"If/when you do long press, let me pitch an idea I've lifted from ARK (dinosaur game). For item deletion in the world, they force a delay of 1 second to alleviate accidentally clicking it. It displays a timer that counts down from 1 second (showing to the 10ths decimal place), and I think it is a great UX method to convey the delays to the user for waiting and would work just as well for long press/holds within UI design."
androiddev,3bum8l,domathsaveworld,1 point,Tue Jul 7 18:26:23 2015 UTC,"Thanks! It's pretty cool (in my imagination), I think I've seen this somewhere before... but I couldn't remember it. I'll add this to the todo list. Also ARK dinosaur game looks good~ I love dinosaurs."
androiddev,3bum8l,BorgDrone,-13,Thu Jul 9 08:01:28 2015 UTC,"In my opinion, if your app needs such a thing your time is better spent fixing your UI than adding a tour/guide/manual. A well-designed UI should not need instructions."
androiddev,3bum8l,domathsaveworld,9,Thu Jul 2 08:54:06 2015 UTC,"Sometimes even the best UI/UX doesn't save you from doutchbags that rate your app with 1 star because they don't ""have time"" to learn it  I always make a tutorial optional for those who need it"
androiddev,3bum8l,BorgDrone,-11,Thu Jul 2 10:39:17 2015 UTC,"Sometimes even the best UI/UX doesn't save you from doutchbags that rate your app with 1 star because they don't ""have time"" to learn it   The best UI/UX designs don't require time to learn, they are instantly obvious."
androiddev,3bxbzf,notconservative,3,Thu Jul 2 22:44:01 2015 UTC,AT 0:51 is exactly the same psychopathic enthusiasm
androiddev,3bxbzf,nomadProgrammer,2,Thu Jul 2 23:43:24 2015 UTC,I thought the guy who made this other tutorial sounded like Patrick Bateman as well. https://www.youtube.com/watch?v=jR4OtA8kArQ
androiddev,3bxbzf,the_bieb,1 point,Fri Jul 3 05:16:08 2015 UTC,I like this one. (from the Software Debugging course)
androiddev,3bxbzf,Hippochomp,1 point,Fri Jul 3 11:39:01 2015 UTC,I dunno.. That dude sounds an awful lot like Ron Howard.
androiddev,3byij1,DontTouchMySmuckers,8,Fri Jul 3 05:08:20 2015 UTC,"Yes, there are a bunch of complications if you don't start with the min SDK you need. You end up unknowingly using new APIs that you won't even be able to backport or will have to rewrite parts of the code as you go.  minSDK support API level 15 is a must if you want people to actually use your app."
androiddev,3byij1,Zhuinden,2,Fri Jul 3 05:16:08 2015 UTC,To be honest the difference between API level 15 and 16 is 5% of the total users and the difference in TaskStack/Network/Animation stuff ususally makes it worth using minSdk 16 instead of 15 if you can live without those 5%
androiddev,3byij1,GoldDog,1 point,Fri Jul 3 08:28:29 2015 UTC,"Agree, but it depends on the market you're developing for and the size of your userbase, if you're selling products in your app and it's a big high street store 5% of users could translate to hundreds of thousands in lost sales - so paying a developer to ensure those older devices can run the app is more than worth while."
androiddev,3byij1,Deafdev,1 point,Fri Jul 3 09:42:31 2015 UTC,"Yes, but this case is unlikely to apply when it's someone's first app that they are working on alone as seems to be the case for OP"
androiddev,3byij1,GoldDog,1 point,Fri Jul 3 10:29:46 2015 UTC,Exactly what I was looking for. Thank you!
androiddev,3bxymq,trendandbeyond,5,Fri Jul 3 02:06:44 2015 UTC,"You can use Java as your backend language. It's actually preferable in a good number of situations. What you'll want to learn is some sort of Java backend framework (ex. Spring) and/or IaaS (AWS, etc).   EDIT: if all you need is server-side storage, and don't need any server-side compute, you can get by without building a backend at all,  and use stuff like Amazon DynamoDB and/or S3, etc., or a more mobile-specific service like Parse, as others have suggested."
androiddev,3bxymq,dccorona,4,Fri Jul 3 03:11:10 2015 UTC,"If you are a beginner I would worry more about actually building the app than building the the backend. For that reason, I suggest using Firebase or Parse. Firebase was recently acquired by Google so it will be worth your time to check it out."
androiddev,3bxymq,hozayhandsome,2,Fri Jul 3 02:53:12 2015 UTC,Firebase is a pleasure to use.  If you don't need to do any special server side processing or file uploads I highly recommend it. Real time key value store with authentication couldn't be easier.  Some things you might need a back end for: Transactional emails Image processing Large file uploads(smaller files can be stored on firebase base64 encoded) Scheduled activities Large data processing Coordinating interactions with other services. Streaming data  If you don't need any of that use firebase
androiddev,3bxymq,TracerBulletX,2,Fri Jul 3 04:32:51 2015 UTC,super expensive :(
androiddev,3bxymq,Eeshoo,2,Fri Jul 3 16:05:48 2015 UTC,Play Framework is in Java.
androiddev,3bxymq,Flaste,1 point,Fri Jul 3 02:52:11 2015 UTC,Spray would be good for a Java app as well.
androiddev,3bxymq,TracerBulletX,1 point,Fri Jul 3 04:37:25 2015 UTC,Play sounds interesting. I'm currently using Node + Mongo. Would there be any backdraw in switching to Play? Is it easy to create an API?
androiddev,3bxymq,HaoChen,1 point,Fri Jul 3 04:49:47 2015 UTC,The company I work at currently uses Play for their back end to build an API that powers our mobile apps and web app. I've tried it out for some basic stuff awhile ago and it wasn't too bad to get set up and do some basic things. I don't really know enough about its down falls or what you're project requires to give you an answer though.
androiddev,3bxymq,Flaste,2,Fri Jul 3 05:17:33 2015 UTC,"second Spring Boot - Java, good docs, has an internal web server so you don't have to worry about that."
androiddev,3bxymq,bart007345,1 point,Fri Jul 3 07:18:16 2015 UTC,"Java is also a backend language, try spring boot."
androiddev,3bxymq,Zhuinden,1 point,Fri Jul 3 06:18:59 2015 UTC,"If you have an Android app, going with a backend that supports Java is an excellent choice. This lets you share code between both your server and client.   For example, I have an Android app that hooks up to a third party WordPress server that I do not have access to. So I created an app engine server to help with some things. I have three gradle modules - app, backend, and 'feed' (contains all the logic to download an atom (RSS) feed and parse it into a Java object). This feed module is then reused by both my backend and client app. A great way to reduce code duplication."
androiddev,3buvzi,preslavrachev,3,Thu Jul 2 10:09:38 2015 UTC,"Post is pretty old (more than year now). Model layer plus good MVC/MVP implementation solves author's problem, especially with RxJava. EventBus as channel for things like ""ContactsFetchedEvent"" and so on is not very good idea, it's hard to scale, hard to maintain and easy to create cycle loops when one event produces another and it produces first event again and again and again."
androiddev,3bvhcb,Nemisis82,3,Thu Jul 2 14:10:51 2015 UTC,"I'd just create a feature branch for the permissions changes, you're going to have to merge to mainline at some point, so I'd schedule a suitable time to do the merge (sounds like you're using Gitflow anyway, but if not; do do)."
androiddev,3bvhcb,Deafdev,1 point,Thu Jul 2 15:28:31 2015 UTC,"Does anyone know how to get the next build of Android M on there nexus device? I still have the build from io, but didn't they say there was going to be an update in june and july?"
androiddev,3bvhcb,stud-d,1 point,Thu Jul 2 17:35:41 2015 UTC,It's not out yet.
androiddev,3bvhcb,MyDogShitsTigers,1 point,Thu Jul 2 19:42:21 2015 UTC,Got it. Didn't know if they made an announcement or anything. Thanks for confiming though.
androiddev,3bvhcb,stud-d,1 point,Thu Jul 2 19:44:27 2015 UTC,I thought they said there would be OTA updates?
androiddev,3bvhcb,buckstalin,1 point,Thu Jul 2 23:11:32 2015 UTC,"Yes they did one each month for a total of 3 preview builds before the final release, this second one was supposed to come out late June/early July but nothing has been released yet."
androiddev,3bz0r0,RyuzakiKK,10,Fri Jul 3 08:30:22 2015 UTC,"I was hoping that we could stay neutral, like Switzerland, because I have a distaste for drama."
androiddev,3bz0r0,Hippochomp,1 point,Fri Jul 3 12:29:24 2015 UTC,What makes you think they don't like drama?
androiddev,3bz0r0,CaddoSierra,6,Fri Jul 3 21:30:15 2015 UTC,"From the general mindset I've seen around here, I doubt the sub will. This community is by no means a nice, accepting, or patient one, and the members don't strike me as caring about this type of thing.  Don't get me wrong, I love the sub and there's some pretty fantastic Android discussion here. But Jesus chill out people you don't have to downvote every damn thing you see that doesn't give you self realization.  That being said, the point of the sub is for a connection between Android developers. It's a useful well of information and unless things get even worse I think it should stay that way.  I am definitely for the movement and I'm glad that so many major subreddits have gone into outcry and done something about the problems of reddit. In our case however, I think a statement of support would be all that's necessary."
androiddev,3bz0r0,ciny,5,Fri Jul 3 09:14:47 2015 UTC,"From the general mindset I've seen around here, I doubt the sub will. This community is by no means a nice, accepting, or patient one, and the members don't strike me as caring about this type of thing.   says redditor for 18 days...    Don't get me wrong, I love the sub and there's some pretty fantastic Android discussion here. But Jesus chill out people you don't have to downvote every damn thing you see that doesn't give you self realization.   Honestly the reason for ""hostility"" is pretty simple: half of questions asked here have been answered both here and all around the internet a billion times. I think the ""submit new link"" button should be below ""Read the rules!"" and ""Wiki and FAQ"" buttons. I'm often on the verge of unsubing when I read ""I'm new to android, where do I start?/how do I do a simple thing explained in a billion tutorials"" for the 3rd time in a week..."
androiddev,3bz0r0,kevelbreh,11,Fri Jul 3 09:59:42 2015 UTC,"Admit, we really just come here for android news and anything @JakeWharton decides to grace us with."
androiddev,3bz0r0,CaddoSierra,3,Fri Jul 3 10:31:51 2015 UTC,"Good points with the negativity, but still it's something to consider pointing people in a good direction.  I've been a redditor for years, I made this account 18 days ago specifically for my Android development related posting."
androiddev,3bz0r0,ciny,2,Fri Jul 3 10:07:41 2015 UTC,"but still it's something to consider pointing people in a good direction.   Yeah, that's exactly why the wiki is there. I mean come on, ""RTFM"" has been the mantra since forever :)"
androiddev,3bz0r0,kevelbreh,3,Fri Jul 3 10:18:02 2015 UTC,"I think its stupid.  For those of us that may use this for productivity, ""boycotting"" type of behaviour will only shoot ourselves in the foot.  Why the hell do you want to cause such a raucous because someone get laid off? Or about out-dated tools?   From what I've read there hasn't been any reason as to why said person got laid off.  For all we know she could of done something bad and here we are acting like a bunch of idiots boycotting, etc.  Want to send a message? Stop buying Reddit gold. That way we can stop disadvantaging ourselves and also take action in protest at the same time."
androiddev,3bz0r0,Thanael,3,Fri Jul 3 09:04:18 2015 UTC,"To be fair, it's not about her being laid off. It's about a person whose work facilitated/made possible the smooth functioning of several of the biggest subs being laid off without any communication or warning, and people being fed up with getting ignored and disrespected by the admins."
androiddev,3bz0r0,kevelbreh,2,Fri Jul 3 09:38:58 2015 UTC,"Sure.  But having a blackout of subreddits is stupid.  It makes it inconvenient for EVERYONE.  Stop buying gold, then its only the company that is inconvenienced."
androiddev,3bz0r0,BikerMouseFromMars,2,Fri Jul 3 09:55:40 2015 UTC,After reading the outoftheloop thread... I think We should.
androiddev,3bz0r0,3dom,1 point,Fri Jul 3 10:18:52 2015 UTC,Pardon me - but what exactly is going on with the private subreddits?
androiddev,3bz0r0,YouKnowBlom,3,Fri Jul 3 08:46:40 2015 UTC,http://www.reddit.com/r/OutOfTheLoop/comments/3bxduw/why_was_riama_along_with_a_number_of_other_large/
androiddev,3bz0r0,3dom,1 point,Fri Jul 3 08:49:15 2015 UTC,Thanks!
androiddev,3bz0r0,arcticblue,1 point,Fri Jul 3 08:49:54 2015 UTC,I think it would be great to do so.
androiddev,3bz0r0,mattmassakure,0,Fri Jul 3 08:55:48 2015 UTC,I think we should.
androiddev,3bx3e3,Highway62,7,Thu Jul 2 21:34:59 2015 UTC,"There are several approaches:   Periodical HTTP requests. Pros — easy to implement. Cons — slow for the user, affects battery. Push notifications. Pros — fast, good for battery. Cons — requires some amount of work on server side, not guaranteed, so you'll have to mix it with other solututions. Some sockets communication, for example: WebSockets. Pros — fast, not as bad for the battery as periodical requests. Cons — requires socket based architecture of backend app. Long polling HTTP requests, when server does not close connection immediately, but waits for the timeout and if it detects change before timeout it sends data as response or empty response if no changes occurred before timeout. Pros — easy to implement on client side (just regular requests). Cons — bad for the battery, requires some amount of work on server side.   Apps like WhatsApp usually mix 1, 3 or 4 with 2 (Push notifications) to maximize speed and guarantees of messages delivery."
androiddev,3bx3e3,artem_zin,2,Thu Jul 2 22:18:57 2015 UTC,"Keep in mind that holding a socket connection could hold your device from deep sleeping (or deep sleeping could close your socket).  Also if you have timeouts, this makes the above said even more of a headache.   The goal is to achieve the best and most responsive communication architecture along with preserving as much battery life as possible.  Through my experience, I found that using push notifications worked the best while the application was in the background.  When opened, for whatever reason (file transfers, coms, etc) a socket connection works wonders.  Just remember to handle the service and application life cycles accordingly."
androiddev,3bx3e3,kevelbreh,1 point,Fri Jul 3 05:02:22 2015 UTC,How are the push notifications handled though? Does the app running in the background not need to be constantly connected to the server for push notifications? Can you recommend any frameworks or anything I should be looking at if I want to set that up?
androiddev,3bx3e3,kevelbreh,1 point,Sat Jul 4 15:49:02 2015 UTC,"You would need a server of some kind to handle the push notifications.  Device side, you just register once to your server with the users google-play-services id (there are tutorials), and then register a receiver.  The receiver will be called whenever a new notification arrives.  Its relatively easy and straight forward.  I'm not sure on your coding experience; you could whip up a quick server using twisted/flask and python-gcm.  here is a simple tutorial using basic python and python-gcm"
androiddev,3bx3e3,yetanotherwoo,1 point,Sat Jul 4 17:18:38 2015 UTC,"Thats great thanks, I've already got a (LAMP) server set up with most of my API done, i've just been trying to figure out how to handle letting the devices know there's a file ready for them. I'm going to be making a Windows app to go with the phone app so i can send files from my phone to the laptop, would the Windows app just use sockets and stay connected to the server, seeing as I don't need to worry about battery life etc?"
androiddev,3bx3e3,BadPaddingException,1 point,Sat Jul 4 19:14:43 2015 UTC,"Excellent reply, thanks for that"
androiddev,3bw3l4,h3xstream_,2,Thu Jul 2 17:05:10 2015 UTC,Good starting point
androiddev,3bw3l4,fredgrott,1 point,Thu Jul 2 18:13:18 2015 UTC,i agree. good starting point. curious if there will be more.
androiddev,3bw3l4,stud-d,1 point,Thu Jul 2 19:12:05 2015 UTC,"There will more rule that affect android. The detection of clear text communication with Http libraries is one example.  If you have ideas, let me know."
androiddev,3bwr13,GaryViceroy,0,Thu Jul 2 19:59:57 2015 UTC,I feel like Square is getting very close to just recreating all the same problems that where in fragments to begin with.
androiddev,3bqzmo,NotMichaelBay,32,Wed Jul 1 13:13:42 2015 UTC,It's not just you... this is terrible usability
androiddev,3bqzmo,rjs6502,18,Wed Jul 1 13:19:59 2015 UTC,It looks like a jpeg half-loaded.
androiddev,3bqzmo,RITheory,11,Wed Jul 1 15:54:44 2015 UTC,I thought the same thing then I realized it collapses into the top left corner which is the direction the arrow is pointing. Still terrible design. Why not make it collapse left?
androiddev,3bqzmo,wr3stler,8,Wed Jul 1 20:15:48 2015 UTC,"Oh god, that's supposed to be an arrow pointing up and left? I mean, I can see it now but it looked like a skewed arrow pointing right and slightly up to me."
androiddev,3bqzmo,Ashanmaril,3,Wed Jul 1 21:30:00 2015 UTC,I thought it was only happening with me because there's no way this would be allowed publicly!
androiddev,3bqzmo,vitakraft,1 point,Wed Jul 1 21:24:21 2015 UTC,You're right. It's ass.
androiddev,3bqzmo,JinAnkabut,1 point,Wed Jul 1 20:54:58 2015 UTC,"Wait, is it actually supposed to look like that? I take it it's not a browser issue of some sort? If not, then I see Google still has its 'no idea what we are doing' in terms of design team from the mid 2000s still on payroll."
androiddev,3bqzmo,silentk446,1 point,Thu Jul 2 07:55:52 2015 UTC,I believe that is identical to the iOS location services icon..
androiddev,3bt4xu,toppatop,7,Wed Jul 1 22:53:08 2015 UTC,"Top Developer is a badge recognizing established, respected developers for their commitment to launching high-quality and innovative apps on Android. The Google Play editorial staff awards a Top Developer badge from time-to-time based on the cumulative work of the developer.  The Top Developer badge appears next to the developer name wherever it is displayed in Google Play. The badge means long-term recognition of all of the developer’s apps. It signifies an additional level of trust and confidence users have in a developer’s products.   Source"
androiddev,3bt4xu,internetgoblin,4,Wed Jul 1 23:04:15 2015 UTC,"Yes, I found this explanation too, but it seems too vague. I thought maybe someone from the community has some more information about it.  Thanks anyway!"
androiddev,3bt4xu,bubbleguuum,-6,Wed Jul 1 23:05:14 2015 UTC,"In other words,  non-top developers are ""unestablished, unrespected developers, commited to launching low quality and samey apps on Android"".  If you're not part of the club, you're shit.  NOTE: bragging on Google+ regularly or being a rockstar developer may help getting you to the ""top""."
androiddev,3bt4xu,gfp7,2,Thu Jul 2 11:50:06 2015 UTC,"False, I never did anything like that, I don't even use G+. I never expected this to happen."
androiddev,3bt4xu,epigrammedic,6,Thu Jul 2 22:27:37 2015 UTC,"Congrats! I also thought that this is possible to get only if you are a major company.  Do you mind sharing how much daily downloads you get and app rates, etc.?"
androiddev,3bt4xu,filya,2,Thu Jul 2 09:14:41 2015 UTC,"It really varies. My most downloaded apps get 2-3k downloads a day, but there are a lot that get <10. Total active users per day are about 80k across all apps.  Ratings are also a mixed bunch, but generally above 3.5, and the popular apps are all 4+ (some even 4.5+)."
androiddev,3bt4xu,sybau,2,Thu Jul 2 22:27:00 2015 UTC,"Total active users per day are about 80k across all apps   Yup, this is it. That's a ton!"
androiddev,3bt4xu,code_mc,10,Fri Jul 3 07:34:52 2015 UTC,Nice! You must have some good apps then. Could you please share your page/apps?
androiddev,3bt4xu,mDarken,5,Thu Jul 2 04:09:46 2015 UTC,I second this request.
androiddev,3bt4xu,mDarken,4,Thu Jul 2 04:50:35 2015 UTC,It increases your credibility as a developer. I don't know what else you're expecting.
androiddev,3bt4xu,jtgilkeson,5,Thu Jul 2 10:11:52 2015 UTC,"Congrats! I'm also a solo dev and noticed this 2 days ago. I didn't get a notice from Google either and was also wondering for how long I've had it. Some of my users mentioned it had been there at least a week. Maybe they are doing this in batches and we've both been in the same ""batch"".  First i thought it was based on age/downloads/ratings, but other apps with more of each don't necessarily have it, so there seems to be a human component to this. Personally that made me more happy, as it means someone at Google Play appreciated my work, as opposed to just reaching some X>Y metric."
androiddev,3bt4xu,eValval,1 point,Thu Jul 2 13:31:21 2015 UTC,"Yes, definitely a human factor too, but since they did not send any e-mail I don't even know who to thank :)  It really feels awesome, it's like a recognition and a confirmation of all the effort I put into my apps and into the satisfaction of my users.  I thought I'd get at least a direct contact in the play store so I could ask a few questions. I am in the process of forming a company, and originally I wanted to create a new Google account and dev account for it, moving the apps over there. But now that I am a top developer it changes everything - I should probably keep using this account. I'd love to have someone to ask a bunch of questions about this."
androiddev,3bt4xu,CaddoSierra,2,Thu Jul 2 22:25:11 2015 UTC,"I always found it fairly easy to reach someone via the developer console's help chat.   edit: Missread your comment, you wanted to move your existing apps to a new account.  If your developer account is tied to your personal GMail account, then i would not keep using it for your company (unless it's a 1 person company). You don't want ""possible"" troubles with the apps and your company to fuck-over your personal account and it's associated Mail/Wallet/GPlay account."
androiddev,3bt4xu,kilbata,2,Fri Jul 3 15:00:38 2015 UTC,"Congrats!  We just got this a couple weeks ago too.  Our contact at Google says that fewer than a 1000 developers have this recognition and there are over a million apps on the store.    It came out of the blue for us too.  We've been featured before and we've worked with Google on integrating new stuff like deep linking, and material design upgrades.    It is pretty nice recognition, given that some companies with large resources like Instagram and Yelp don't have it - although they do have millions of downloads - which is the recognition that probably matters most :)"
androiddev,3bt4xu,sigudabom,1 point,Thu Jul 2 21:07:57 2015 UTC,"Very nice!  I also try to stay on top of things, like updating my most downloaded app with material design, testing out the new things they give us, etc. Probably that plays a part in it.  Go us! :)"
androiddev,3bupkk,oroboros74,2,Thu Jul 2 08:33:38 2015 UTC,"Logcat prints out dex2oat compile commands which have apk names in them. So connect phone to PC, use adb logcat."
androiddev,3bupkk,Izacus,0,Thu Jul 2 09:15:06 2015 UTC,"Do you know of any apps that would let me check the dump on the phone itself, without having to connect over adb via USB?"
androiddev,3bupkk,Izacus,1 point,Thu Jul 2 20:10:10 2015 UTC,At that point OS has not reached a stage to run an app.
androiddev,3bupkk,bart007345,1 point,Thu Jul 2 22:44:12 2015 UTC,"OK, that makes sense... thanks!  Oddly enough, I'm not able to get the phone to be recognized in adb (even though i was able to flash w/o a hitch via usb using SPFlash Tools)..."
androiddev,3bupkk,bart007345,2,Fri Jul 3 07:17:39 2015 UTC,I get this a lot on Genymotion since installing Google Play Services. It can take quite a few minutes...
androiddev,3bupkk,xoxoleah,2,Thu Jul 2 13:05:29 2015 UTC,"I get this a lot on Genymotion since installing Google Play Services. It can take quite a few minutes...   Do you mean it can take a while for it to ""optimize""?  What happens in my case is that it'll show up something like ""1...2...3...4 of 33"", then reboot, and start over ""1...2...3...4 of 33"". Is that normal? Or should I just try and let it run its course, even if it takes all day?"
androiddev,3bthym,Phreakhead,5,Thu Jul 2 00:44:31 2015 UTC,I believe the MD team uses After Effects. Facebook uses Origami.
androiddev,3bthym,tadfisher,3,Thu Jul 2 00:55:57 2015 UTC,"Facebook uses Origami.   Wow, this looks amazing  https://facebook.github.io/origami/"
androiddev,3bthym,OogieFrenchieBoogie,1 point,Thu Jul 2 09:27:38 2015 UTC,"Was playing around with this, it IS really cool! I love Quartz Composer too... kind of a shame you have to pay for an Apple developer account to use it though..."
androiddev,3brtq8,bastecklein,5,Wed Jul 1 17:10:43 2015 UTC,Congratulations on your Android revenue. It is impressive.  Could you share some thoughts about how do you market your apps? 1-5M downloads is quite a number. Was it totally organic or can you share some tips of how to increase app visibility?
androiddev,3brtq8,lenrok258,3,Thu Jul 2 08:09:13 2015 UTC,"Thank you for sharing, and congrats.   I see that you got quite a few 1* from French users on your PDF scanner because it is not translated, I may be able to do that if it's not urgent"
androiddev,3brtq8,BlueArc,1 point,Wed Jul 1 20:00:18 2015 UTC,Thank you for sharing so openly. Would you are to share the link to your Android App(s)?
androiddev,3brtq8,mavdev,1 point,Thu Jul 2 14:33:46 2015 UTC,"I've just read through your income reports, and a few other linked posts from November to present. I must say it gave me a fantastic insight into the world of a self employed app developer.  Now bookmarked your blog. :)"
androiddev,3brmo8,Musenkishi,3,Wed Jul 1 16:20:09 2015 UTC,"This is something I've had since the launch of Wally but have since separated it into its own library to be able to share it (jitpack is awesome). It lets you apply Palette colors to multiple types of Views almost as easy as using Picasso or Glide for image loading. Its main purpose is to let you use Palettes in ListViews, GridViews, and RecyclerViews easily by generating Palettes in its own thread (5 on post-lollipop) and apply it to the correct views.  It has gone through a few iterations and I would love any kind of feedback."
androiddev,3brmo8,Jawnnypoo,1 point,Wed Jul 1 16:20:50 2015 UTC,"You should for sure contact Android Arsenal. The library will get a lot of attention that way, plus it is a great site for Android devs."
androiddev,3brmo8,nomadProgrammer,2,Wed Jul 1 18:43:48 2015 UTC,Done! And thanks for the Travis PR :)
androiddev,3brmo8,wannagotopopeyes,1 point,Thu Jul 2 07:23:54 2015 UTC,Hey I'm just 3 week into android programming so newbish question can I use this to customize the layout of rows in a listview?
androiddev,3bqddt,lordoftherings911,20,Wed Jul 1 08:23:40 2015 UTC,List<Item> items = new ArrayList<>();  items.for   ENTER   for (Item item: items) { ...  }
androiddev,3bqddt,drabred,-7,Wed Jul 1 11:07:03 2015 UTC,"You should avoid using for like that in Android, because of performance. It is better to use regular for loop."
androiddev,3bqddt,Zookey100,14,Wed Jul 1 14:03:50 2015 UTC,"It's not that clear cut. The enhanced for loop creates an iterator object, the regular loop doesn't. It's more about memory than performance, but this is the kind of thing you should only consider if you're writing a library or a piece of code that is being invoked in a very tight loop.  For most Android apps, the enhanced for loop is just fine, and it buys you abstraction and clearer code."
androiddev,3bqddt,aldo_reset,3,Wed Jul 1 14:26:52 2015 UTC,"I'm with you on that. Also, I guess premature optimization is bad when comes for a price of clean and readable code?"
androiddev,3bqddt,drabred,1 point,Wed Jul 1 14:42:44 2015 UTC,I believe its an issue in onDraw() to get maximum performance.
androiddev,3bqddt,bart007345,12,Wed Jul 1 20:38:21 2015 UTC,Clone or fork https://github.com/keyboardsurfer/idea-live-templates and go mental.
androiddev,3bqddt,GGDev,2,Wed Jul 1 09:32:54 2015 UTC,^ -- Just went mental
androiddev,3bqddt,theblang,1 point,Thu Jul 2 13:15:46 2015 UTC,Calm. Down. ;)
androiddev,3bqddt,GGDev,1 point,Thu Jul 2 13:52:42 2015 UTC,I'm having a hard time getting these working for whatever reason.. where did you clone this to? I must be running into permission issues or something
androiddev,3bqddt,Thraid,1 point,Thu Jul 2 13:31:56 2015 UTC,"Follow the guidelines here to find your templates directory, then clone into there:  https://www.jetbrains.com/idea/help/live-templates.html  Product name, as referred to in this guide, is obviously ""Android Studio""  Make sure you restart Android Studio after you've cloned as well."
androiddev,3bqddt,GGDev,9,Thu Jul 2 13:54:16 2015 UTC,/** ENTER generates JavaDocs template
androiddev,3bqddt,epicstar,5,Wed Jul 1 09:18:24 2015 UTC,I hope to god everyone knows this....
androiddev,3bqddt,atioxx,0,Wed Jul 1 20:15:16 2015 UTC,seriously lol
androiddev,3bqddt,Cephas00,1 point,Wed Jul 1 22:21:27 2015 UTC,For javadoc link  {@link $REFERENCE$}$END$   Print stack  new Exception().printStackTrace();$END$    Immutable list builder  ImmutableList.Builder<$E$> $VAR$ = ImmutableList.builder();   Where $E$ is className() and $VAR$ is suggestVariableName
androiddev,3bqddt,bbqburner,1 point,Wed Jul 1 10:57:24 2015 UTC,if (Build.VERSION.SDK_INT >= $VAR$) {     $END$ }   abbrevation used: sdkc (SDK Check)  And if you need the version codes version:  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.$VAR$) {     $END$ }
androiddev,3bqddt,moczul,1 point,Wed Jul 1 15:53:30 2015 UTC,Here're my templates: https://github.com/mrmike/AndroidLiveTemplates
androiddev,3bqddt,upstreamsalmon,1 point,Wed Jul 1 17:02:34 2015 UTC,"is there a way to change the build.gradle template?  i'd like to have it automatically add butterknife, retrofit, etc"
androiddev,3bqddt,theblang,1 point,Wed Jul 1 18:54:34 2015 UTC,"For anyone who doesn't know, there is a shortcut to view your templates.  On Mac it is Command + J."
androiddev,3bqddt,TotesMessenger,1 point,Thu Jul 2 13:17:08 2015 UTC,"I'm a bot, bleep, bloop. Someone has linked to this thread from another place on reddit:   [/r/ryanmiles] Share your android studio live templates! : androiddev   If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads. (Info / Contact)"
androiddev,3bqddt,bart007345,1 point,Sat Jul 11 22:35:08 2015 UTC,"They are all in the settings. And you can add your own!  I added one for testing, sets up a few lines importing mockito. It's quite powerful."
androiddev,3bqddt,firstsputnik,1 point,Wed Jul 1 09:20:36 2015 UTC,You can hit Ctrl+ J in Android Studio to see the list of all templates
androiddev,3bqddt,ValueOfALife,1 point,Wed Jul 1 15:36:12 2015 UTC,"Activity launcher:  public static void launch(android.app.Activity context) {     context.startActivity(         new android.content.Intent(context, $CLASS_NAME$.class)     ); }"
androiddev,3bqddt,Paradiesstaub,1 point,Wed Jul 1 10:31:53 2015 UTC,"Does someone have a template to create a TAG constant?  Edit: I would like to have such a live template public final static String TAG = ""$class$""; ← doesn’t work."
androiddev,3bqddt,504d206d652074686973,5,Wed Jul 1 08:45:30 2015 UTC,"You should look into Timber, a logging library that, among other things, automatically generates the tags"
androiddev,3bqddt,MyDogShitsTigers,-3,Wed Jul 1 09:01:36 2015 UTC,"Newer versions of Android Studio also don't even require tag, as they can automatically filter based on the current project's package. I usually do Log.e("""", ""whatever"") and it works fine."
androiddev,3bqddt,Morgotth0,2,Wed Jul 1 19:13:45 2015 UTC,"in Android Studio preferences > Editer > Live Templates, you have all live templates. And in AndroidLog template group, you can custom the ""logt"" template."
androiddev,3bqddt,Paradiesstaub,1 point,Wed Jul 1 09:15:35 2015 UTC,"The log template is okay, I would like to create the TAG constant using a live template."
androiddev,3bqddt,Cephas00,3,Wed Jul 1 10:10:02 2015 UTC,Do you mean like this?  Template text:  private static final String TAG = $TAG$.class.getSimpleName();   Applicable in Java  template variables
androiddev,3bqddt,morgazmo99,1 point,Wed Jul 1 10:41:47 2015 UTC,Not in front of a computer right now. Does that work?
androiddev,3bqddt,Cephas00,1 point,Wed Jul 1 12:24:33 2015 UTC,"That's exactly what I use, so yes."
androiddev,3bqddt,HeWhoKnowsTooLittle,1 point,Wed Jul 1 12:33:04 2015 UTC,"""logt"" creates the TAG constant (in AS 1.3) by default, stands for ""log tag"" I guess"
androiddev,3bqddt,ValueOfALife,2,Thu Jul 2 21:34:42 2015 UTC,public static final java.lang.String TAG = $CLASS_NAME$.class.getSimpleName();
androiddev,3bqddt,Paradiesstaub,1 point,Wed Jul 1 10:30:12 2015 UTC,"doesn't work.  result: public static final String TAG = .class.getSimpleName();  Expected result: public static final String TAG = ""MyActivity"";"
androiddev,3bqddt,Fizzy_Pharynx,2,Wed Jul 1 10:34:03 2015 UTC,"You might need to click ""Edit variables"" and ensure that there's an entry with name=$CLASS_NAME$ expression=className()"
androiddev,3bqddt,ValueOfALife,1 point,Wed Jul 1 14:21:13 2015 UTC,I use this ever day. I copied from IDE. User error :). Do you know how to make a live template?
androiddev,3bqddt,ValueOfALife,1 point,Wed Jul 1 10:36:27 2015 UTC,"First write the code you want to save:  public static final String TAG = MyClass.class.getSimpleName();   Then highlight that line. Next, select Tools > Save as Live Template. After that, replace ""MyClass"" with $CLASS_NAME$. You'll need to give it a shortcut IE ""tag"". That's it."
androiddev,3bqddt,ValueOfALife,1 point,Wed Jul 1 10:42:49 2015 UTC,"This template isn't super useful because psfs already exists, but I like it."
androiddev,3bqddt,Cephas00,1 point,Wed Jul 1 10:44:49 2015 UTC,Didn't know you could do that! That is incredibly useful. I've just defined all mine by hand before...
androiddev,3bqddt,el_bhm,2,Wed Jul 1 10:45:17 2015 UTC,"It is doable.   You need to set the scope first for Java Edit variables, in Expression column choose className()   There's quite a number of methods predefined for Java."
androiddev,3bqddt,svenofix,1 point,Wed Jul 1 12:01:10 2015 UTC,This is my preferred solution. The only problem is when you rename your class it doesn't update.
androiddev,3bqddt,el_bhm,1 point,Wed Jul 1 16:20:50 2015 UTC,It should. Be default refactor should also look inside strings. Which is sometimes annoying.
androiddev,3bqddt,svenofix,1 point,Thu Jul 2 08:12:26 2015 UTC,"Good point. I usually have it turned off, need to remember that."
androiddev,3bqddt,el_bhm,1 point,Thu Jul 2 09:00:50 2015 UTC,private $TYPE$ m$NAME$;  public $CLASS$ with$NAME$($TYPE$ arg) {      m$NAME$ = arg;      return this; }   That's actually for two templates. One without having the first line. This way I can add builder-style methods on the fly to some DTO style  objects.
androiddev,3bqddt,rrrocky777,-5,Wed Jul 1 12:06:49 2015 UTC,Anything like this for Eclipse? I know sysout gives System.out.println
androiddev,3bqddt,504d206d652074686973,1 point,Wed Jul 1 16:17:13 2015 UTC,"You shouldn't still be using Eclipse, Android Studio is the way forward"
androiddev,3bqddt,rrrocky777,1 point,Fri Jul 3 08:18:32 2015 UTC,"When I don't have to work on Android, should I still use it?"
androiddev,3br8va,pilgr,3,Wed Jul 1 14:36:31 2015 UTC,"Thanks for sharing!  A few thoughts on your API:   Why do you have an explicit init method? This is unfortunate as it requires a hook in Application.onCreate, something one should only do if necessary. Consider instead creating a factory method that returns a singleton. Even better if I can provide the file location and have different data stores if I so choose. Please create a delete method. Relying on nullable arguments to define behavior could lead to unintended changes (i.e.: accidental null leads to destroying user data). We'd be better off if null didn't implicitly mean delete.   This isn't really ""NoSQL"" as it doesn't provide a query language as most nosql solutions do. It's more a Key-value blob store.  You do a good job hiding some of the complexities of Kyro, but be sure to provide a bit more guidance in your README as it seems Kyro can default to Java serialization, which, if the underlying class changes between write and read, will not gracefully ""auto upgrade."""
androiddev,3br8va,mikenomn,3,Wed Jul 1 15:34:12 2015 UTC,"Thanks for great detailed review!   I'd like to make the put/get api as simpler as possible. Don't like to use context all the time. It can be init'ed at any place, not necessary in Application.. And you're right, file location (or better db name, or ""book"" name) should be provided to have different data store. Hope to add such api for v 1.0. There is a method Paper.delete which removes record completely. But I would say that Paper supports writing/reading null objects. If you want to save null you can do it and then you will get null on next reading attempt. But I got your point. Probably better to throw exception in this case just to notify developer about the potential issue in client code. Do you think I should remove mentions to NoSQL from description then?  The lib uses CompatibleFieldSerializer by default for all classes. So I don't think that Java native serialization can be applied at any way.. Have to double check this."
androiddev,3br8va,mikenomn,2,Wed Jul 1 18:16:06 2015 UTC,"Your init method re-initializes on every call. The only safe place to do that is Application.onCreate. At least check for null so that if it is called multiple times, you don't keep recreating the INSTANCE object. And to that end, if I move the init call elsewhere and I'm potentially re-initializing it with a Context from every activity / service, etc. why not just take context in a factory method? Simple isn't all that useful when it's fragile.  I get the intent with your put method, but it also deletes; it doesn't put null. Sure, put with null results in a get of null, but an ""exists"" method would return false if you set to null, which is not expected if you're ""putting"" a null object. It goes back to the API not really matching up with the behavior.  I wouldn't advertise this as a NoSQL solution, no. No rush to get rid of it, but I'd reword when you can."
androiddev,3br8va,davebren,1 point,Wed Jul 1 18:56:12 2015 UTC,"Really nice shot! Missed the exist() implementation for null values.  Have to remove possibility to ""read/write"" null values.  And do not recreate INSTANCE is another good point. Thanks!   But to be honest about init().. I still think init() should be called where the context is easily accessable, like in onCreate(), and put/get operations supposed to be called where context might be not available. With safe multi init it shouldn't be fragile.  Would be much appreciated if you could make a simple pull-request to demonstrate your factory based solution.   Thanks!"
androiddev,3br8va,aexyno,2,Wed Jul 1 21:03:13 2015 UTC,It seems like calling it NoSQL is fine according to this: https://en.wikipedia.org/wiki/NoSQL  I'm no expert on this though.
androiddev,3br8va,gonemad16,1 point,Wed Jul 1 18:34:44 2015 UTC,"For many people NoSQL == MongoDB so it may confuse them that such simple storage called NoSQL. Yeah, but actually Paper doesn't contains any SQL :)"
androiddev,3br8va,will_r3ddit_4_food,2,Wed Jul 1 21:06:50 2015 UTC,Don't use NoSQL. Its misleading
androiddev,3br8va,davebren,2,Thu Jul 2 08:29:16 2015 UTC,dont all NoSQL solutions support data auto upgrade?  NoSQL just stores documents.. adding fields shouldnt break anything for the most part
androiddev,3br8va,artem_zin,1 point,Wed Jul 1 14:58:23 2015 UTC,"Yep, just highlighted that changed Java object can be properly instantiated with old data."
androiddev,3br8va,artem_zin,2,Wed Jul 1 15:33:29 2015 UTC,How does this perform vs Realm?
androiddev,3br5in,ammiu01,1 point,Wed Jul 1 14:07:12 2015 UTC,Is this an alternative to Exoplayer? Is it free to use?
androiddev,3br5in,ContiGhostwood,1 point,Wed Jul 1 22:05:49 2015 UTC,"""Please note: Per the license governing Superpowered technology; Superpowered HLS technology must be licensed and is not available for free, unlike the Superpowered SDK.""  I could be wrong but I think it's audio only."
androiddev,3bsndu,Afro-Ninja,1 point,Wed Jul 1 20:42:10 2015 UTC,"You mean the billing API believes it is purchased and you don't want that?  You can ""consume"" it so it will no longer be considered purchased, see the billing docs for instructions."
androiddev,3bsy6x,Zookey100,3,Wed Jul 1 22:01:09 2015 UTC,"Off the top of my head, here's a good start....  Adhere to M V P.  Set a rule where no logic in views at all.  Business logic only in model.  Methods only do 1 thing.  Refactor relentlessly  Spend extra time when creating a new variable/class/method/etc name that makes sense.  Keep things decoupled.  Keep classes limited to doing 1 main thing.  No god classes.  test DRIVEN development.  (test first)  Red green refactor  As much as possible, make it so ""jump to definition"" works.  meaning, try to use broadcast receiver types as little as possible.  Code so that you do not need any comments mostly doing the above  Remove dead code  agree on code formatting  no android code in model or presenter  Clean up all lint errors"
androiddev,3bsy6x,kireol,2,Thu Jul 2 17:58:28 2015 UTC,Quick question: is there any way for AS to detect dead/useless codes other than (from what I heard) Proguard and individually checking each file?  Thanks!
androiddev,3bsy6x,shaunidiot,1 point,Thu Jul 2 18:32:04 2015 UTC,Lint should show unused as gray.  Here's an example.  http://i.imgur.com/LwZCNPV.png
androiddev,3bsy6x,kireol,1 point,Thu Jul 2 18:39:30 2015 UTC,"I can't help but comment 80% of what i write.  Not because what I write is illegible, but because if someone sits down at a method or class, I want the what where who why's are."
androiddev,3bsy6x,kevelbreh,1 point,Fri Jul 3 05:05:09 2015 UTC,"Trust me, you're not helping anybody.   Have a read of this: http://apdevblog.com/comments-in-code/"
androiddev,3bsy6x,bart007345,1 point,Fri Jul 3 07:59:57 2015 UTC,I don't comment nearly as bad and as much as the what is in the link provided.  Phew.
androiddev,3bsy6x,kevelbreh,1 point,Fri Jul 3 09:15:42 2015 UTC,80% is still bad.
androiddev,3bsy6x,bart007345,1 point,Fri Jul 3 10:56:54 2015 UTC,"Your code explains how to do a task, comments explain why you do something a given way"
androiddev,3bsy6x,UMadBreaux,3,Sat Jul 4 15:48:46 2015 UTC,MVP + tests. Business logic including downloading data and creating pojos in a separate java only module.
androiddev,3bsy6x,bart007345,2,Wed Jul 1 22:06:46 2015 UTC,Any good example about MVP for Android?
androiddev,3bsy6x,krialix,6,Wed Jul 1 22:42:47 2015 UTC,https://github.com/sockeqwe/mosby and there is a tutorial how to implement it.  http://hannesdorfmann.com/android/mosby/
androiddev,3bsy6x,ZakTaccardi,1 point,Thu Jul 2 00:10:49 2015 UTC,"Use multiple gradle modules, and lots of Dagger."
androiddev,3bsy6x,bart007345,1 point,Thu Jul 2 21:30:05 2015 UTC,I was thinking of doing this more but don't lots of modules slow down the IDE?
androiddev,3bsy6x,ZakTaccardi,1 point,Fri Jul 3 08:01:09 2015 UTC,Yes unfortunately
androiddev,3bsy6x,fredgrott,-2,Fri Jul 3 14:12:56 2015 UTC,actually its now MVVM
androiddev,3brgfg,lordoftherings911,2,Wed Jul 1 15:35:06 2015 UTC,"Although I don't know of any current YouTubers, I have considered doing this myself since I'm an android and design enthusiast that shoots and edits video. After I get a better camera and finish up a couple projects, I ought to take a swing at it.  If you want, you can send me your app name and Play Store URL and I'll add it to the list I've got going."
androiddev,3brgfg,TheoremMetal,1 point,Thu Jul 2 01:36:40 2015 UTC,"Just wondering, do YouTube app reviewers gain anything from reviewing apps?"
androiddev,3brgfg,wittywombat,1 point,Wed Jul 1 19:21:08 2015 UTC,"Very good question, this would be the equivalent to some journalists that deal with specific areas of technology and frequently review products, wish someone would answer this well"
androiddev,3bq7hb,frogermcs,4,Wed Jul 1 07:01:28 2015 UTC,"Java itself gives us possibility for scoping objects references - it’s named Singleton   I think the author is confused about what scoping means (whether in the Java sense or in the Dagger sense).  Scopes refer to the set of clients that have access to a given object. A singleton itself doesn't define any scope, just the number of instances of a given class. You can have singletons that are scoped to the entire app, to an HTTP request or any other custom scope that you want to define."
androiddev,3bq7hb,aldo_reset,6,Wed Jul 1 17:39:21 2015 UTC,"Yep. This is an important point. In Dagger 1, you used the @Singleton annotation to mean ""once per scope"" but the scoping was implicit based on how long the ObjectGraph instance was kept alive. If you had an application-level graph and singletons inside of it, those were basically one-per-process which is the traditional singleton pattern. You could also have singletons in more narrow scopes such an in an graph for an activity (once per activity), for a user session (once per session), or for something much more granular like in a view (once per view).  Dagger 2 makes scopes explicit in that you have separate annotations which represent the scope so an @Activity-scoped object that's only created once for the activity graph can never outlive a @Singleton in the application graph. This guarantee allows you to use those outer scoped dependencies in the inner scopes (e.g., injecting a singleton in an activity scoped dependency)."
androiddev,3bq7hb,JakeWharton,3,Wed Jul 1 18:06:34 2015 UTC,"Hey, thanks for feedback, you're completely right. I'd like to use some kind of mental shortcut, but seems that I mixed two different things.  I'll fix my article as soon as I get to my computer. Thanks, it's always better to get reasonable criticism from someone more experienced!"
androiddev,3bq7hb,Zhuinden,1 point,Wed Jul 1 22:29:26 2015 UTC,"Cool guide,  first time I see @Subcomponent used.  It is great,  but I couldn't get it to work properly on N levels... It works on one,  then it just doesn't generate anything.  Not sure why."
androiddev,3bq7hb,koujm,0,Wed Jul 1 16:24:19 2015 UTC,Does this mean there is no underlying difference between no scope and custom scopes? When should I use one over the other?
androiddev,3bq7hb,Zhuinden,1 point,Wed Jul 1 12:57:32 2015 UTC,"Scopes are for compile time check,  essentially."
androiddev,3bq7hb,JakeWharton,2,Wed Jul 1 16:24:44 2015 UTC,No. The lack of a scope will cause the dependency to be created every time it is requested. A scoped dependency will only create an instance once for that scope.
androiddev,3bq7hb,Zhuinden,1 point,Wed Jul 1 17:26:31 2015 UTC,"....oh. In that case, I think I misunderstood this answer, although to be fair, I should have known based on that presentation you held. Hrmm. Thanks for the fix."
androiddev,3bq7hb,lastbacon,-4,Wed Jul 1 17:34:58 2015 UTC,If someone wants to have a conversation with me about dependency injection; I would like more perspective on the matter.  I've been doing soft eng for 11 years and I have a very distinct loathing for externally managed dependencies.  Especially when you go back 7 years later and you are missing dependencies and can no longer build the project.  Is everyone simply using dependency injection because they're too lazy to hard link the dependencies or has it just become a fad?
androiddev,3bq7hb,aldo_reset,2,Wed Jul 1 13:03:54 2015 UTC,You're confusing build dependencies with dependency injection. Dependency injection has nothing to do with building.
androiddev,3bq7hb,Zhuinden,1 point,Wed Jul 1 17:42:07 2015 UTC,"And since 7 years ago,  Maven and Gradle have made that problem much easier.  As long as there is a mirror of the jcenter or Maven central, they should be okay."
androiddev,3bq7hb,Zhuinden,1 point,Thu Jul 2 06:38:09 2015 UTC,"I'm managing the dependencies within the project, things won't magically stop missing. The only dependencies that can go missing are the ones provided by Gradle (as the versions are hosted within jcenter or the maven repository - both of which can just die at some point in the future - what will we do then?), but that is a completely unrelated matter.  Dependency Injection as you see here is for the IoC pattern."
androiddev,3bq7hb,lastbacon,-4,Wed Jul 1 13:28:59 2015 UTC,Ah yeah - didn't read the link.  Dagger supposed to complete against Spring then?  Spring is crazy heavy for mobile.  All IoC creates holes in which obfuscation cannot work and could expose some inner workings.
androiddev,3bq7hb,Zhuinden,1 point,Wed Jul 1 14:04:09 2015 UTC,"I've never used Spring but good in Dagger 2 is that code responsible for dependencies injection is fully static - there is no dynamism like reflection etc. All code is generated in compile time and mimics the code that can be hand-written. Thanks to this code is relatively simple, performant and traceable - there is no magic, even for novice programmers."
androiddev,3bt7kg,jjjakal,1 point,Wed Jul 1 23:14:35 2015 UTC,Look into Xamarin.
androiddev,3bqhx2,RPK12,5,Wed Jul 1 09:30:50 2015 UTC,Our designers do fantastic wireframes with UXPin: http://www.uxpin.com/
androiddev,3bqhx2,Deafdev,4,Wed Jul 1 11:43:43 2015 UTC,"Not sure if this counts, but proto.io. For me, it's all I need."
androiddev,3bqhx2,Ultimatefire10,3,Wed Jul 1 15:05:14 2015 UTC,"we are currently testing pixate.com - its good although its really cumbersome to make a first prototype so i would start with something simpler, either invisionapp for basic screens or even a paper based mockup that is then ""powered"" by Prott  Also i want to mention ""Wire Flow"", was developed by some guys here on reddit. Currently Prott is easier and better to use, but the idea of wire flow is also nice. Check everything out."
androiddev,3bqhx2,eikaramba,3,Wed Jul 1 14:33:58 2015 UTC,"Personally, I've tried a couple of tools and ultimately found them to be limiting in some way or other. So I prefer AND recommend you use Illustrator. This is what I personally use: http://goo.gl/95YR3D Its a really good UI kit for you to quickly prototype.   For putting it all together, you can use InVision for a live working prototype."
androiddev,3bqhx2,Suleiman19,2,Wed Jul 1 16:20:45 2015 UTC,"These are actually perfect, especially InVision. Thank you so much!"
androiddev,3bqhx2,Suleiman19,1 point,Thu Jul 2 05:43:30 2015 UTC,Glad you found it useful :-)
androiddev,3bqhx2,dj_darkhorse,3,Thu Jul 2 17:13:38 2015 UTC,I've recently been playing around with https://github.com/prikhi/pencil and it seems pretty cool for wireframing. Like a cheaper version of sketch which our designer at work uses (but that's Mac only).  Be sure to look at the extra stencil collections for Lollipop stencils and material icons.
androiddev,3bqhx2,marcouberti,1 point,Wed Jul 1 22:29:08 2015 UTC,We use Sketch http://bohemiancoding.com/sketch/. There are a lot of mobile libraries with ready to use UI elements. Yo can write your plugins and export assets for different resolutions.
androiddev,3bqhx2,Steedsofwar,1 point,Thu Jul 2 11:07:46 2015 UTC,"Sketch is a great and easy tool to use.   It's mac only and after the 30 day trial you'll have to purchase a license ~$90, google a coupon.  Check out http://www.sketchappsources.com  Most of the icons i'm using are sourced from there and it's simple to change them."
androiddev,3bqhx2,armakaryk,1 point,Thu Jul 2 13:02:21 2015 UTC,"As someone who works mostly in the programming it seems like a lot of these prototyping solutions lack the ability to generate the xml files android uses, are there any that have that capability?"
androiddev,3bsc8m,ilovedesk,2,Wed Jul 1 19:23:13 2015 UTC,"Create a class that s responsible for creating a list of array models from... Json....  Wait a second,  why on earth aren't you using Retrofit?"
androiddev,3bsc8m,Zhuinden,2,Thu Jul 2 06:41:02 2015 UTC,"Of the 2, definitely the latter. The code is available for reuse elsewhere and it's easy to write a separate unit test that passes in a pre-defined blob of JSON and checks the models it gets back."
androiddev,3bsc8m,jarofgreen,1 point,Thu Jul 2 07:39:39 2015 UTC,"You should convert your entity (data) model into your view model in a background thread to keep processing off your main thread.  #1 > #2 because it looks like #2 is converting the json into objects on your main thread.  Personally, I don't use AsyncTasks anymore, and use RxJava for easy threading and manipulation of objects, which is a much better approach. Check out this video for a good intro to RxJava"
androiddev,3bsc8m,ZakTaccardi,1 point,Wed Jul 1 19:41:46 2015 UTC,Thanks for the link and the answer!
androiddev,3bsc8m,ZakTaccardi,2,Wed Jul 1 19:52:35 2015 UTC,RxJava will change your life. Good luck!
androiddev,3bsc8m,jarofgreen,1 point,Wed Jul 1 19:54:16 2015 UTC,You should convert your entity (data) model into your view model in a background thread to keep processing off your main thread.   +1  But actually both #1 or #2 could be made to run in the background.
androiddev,3bsc8m,jaydeepw,1 point,Thu Jul 2 07:40:39 2015 UTC,"Ideally we should keep as much processing as possible away from main thread,  however this question is about code design. I would prefer my model have static methods that take either JSONArray or JSONObject that is deserialized to the object and returns it.  The question of processing remains. The conversion time of JSON to model is very minimal in my experience and hence I think it is OK to have it out of AsyncTask."
androiddev,3bsc8m,pakoito,1 point,Fri Jul 3 04:51:56 2015 UTC,plsstopusingasynctasks
androiddev,3bsc8m,fsherstobitov,1 point,Wed Jul 1 20:39:22 2015 UTC,I think that in this case you should follow the single responsibility principle. You AsyncTask is responsible for retrieving the JSON string over the internet. Deserialization of this JSON must be responsibility of another class.
androiddev,3bnuo8,moriartsy,13,Tue Jun 30 18:42:58 2015 UTC,This commit must have felt good.
androiddev,3bnuo8,Nilzor,18,Wed Jul 1 05:49:07 2015 UTC,Felt good to merge because now I have someone else to blame when people come with fire and pitchforks for their missing APIs!
androiddev,3bnuo8,JakeWharton,7,Wed Jul 1 05:55:17 2015 UTC,"Happy to see it, it's been needing this for awhile."
androiddev,3bnuo8,pandanomic,6,Wed Jul 1 02:14:16 2015 UTC,Fuck. I'm using RxAndroid and I had no idea that it had become this bloated. It has UI-stuff!? There is a LifecycleObservable and people are suggesting AppObservable and ServiceObservable?   I wholeheartedly support this split
androiddev,3bnuo8,Nilzor,5,Wed Jul 1 05:40:56 2015 UTC,"Aren't those what makes this RxAndroid? If you don't want to use UI stuff, stick to RxJava?"
androiddev,3bnuo8,kaze0,8,Wed Jul 1 09:35:02 2015 UTC,"The Android Main Thread Scheduler is what makes RxAndroid.  edit: I guess ""what makes RxAndroid"" is subjective. I find support for your argument in the first README check-in with real substance from aug 2013: In addition to the scheduler, plans for lifecycle management support classes were already in the making"
androiddev,3bnuo8,Nilzor,2,Wed Jul 1 09:51:18 2015 UTC,Thanks. Good point.
androiddev,3bnuo8,kaze0,1 point,Wed Jul 1 09:59:15 2015 UTC,it would be amazing if there were an observable that you could easily plug into that would magically persist across screen rotations.  Amazing that the Android framework still makes handling something this common so difficult.
androiddev,3bnuo8,ZakTaccardi,1 point,Wed Jul 1 15:30:29 2015 UTC,"I'm obviously not the one to ask, but isn't exactly that the LifecycleObservable does? Is it really that big a problem now that we have the option to setRetainInstance(true)?"
androiddev,3bnuo8,Nilzor,1 point,Wed Jul 1 20:48:55 2015 UTC,"LifecycleObservable isn't part of RxAndroid anymore I believe (although it may reappear later).  #2 - I have actually never used this approach before, but doesn't that involve creating a separate worker fragment? That still seems messy to me. Or can we use setRetainInstance(true) on the existing fragment if we don't have any backstack management tied specifically to that fragment?"
androiddev,3brbew,florideWeakensUrWill,1 point,Wed Jul 1 14:56:55 2015 UTC,"Unless you want to go versatile, I wouldn't bother learning php, WAMP and all that jazz. Building an app you'll have your hands full with multiple stacks.  Between you and a DB on a server there has to be an API. Let me rephrase. It should and in all likelihood, will.  Countless API's to choose from to get started. Twitter, Google Search, Pinterest, Facebook. They are all fairly complex to start with. One of the easiest may be RandomUser API.  You should get that going pretty fast, then move on to some social APIs.  I suggest getting to know JSONObject/JSONArray classes first, so you know basics of JSON to POJO. Then just move to GSON/Jackson."
androiddev,3bqsd4,SpaceRapist,2,Wed Jul 1 11:57:40 2015 UTC,"Here are some, depends what you use to develop:  https://www.google.com/admob/  http://www.appbrain.com/  https://unityads.unity3d.com/  And 20 more ;)  http://www.hongkiat.com/blog/mobile-app-monetizing-networks/"
androiddev,3bqsd4,xaviv,2,Wed Jul 1 16:30:56 2015 UTC,"thank you, but I heard AdMob is very bad, doesn't pay on time, pays very little and can block your account for no reason!"
androiddev,3bpvpg,oasisfeng,3,Wed Jul 1 04:50:28 2015 UTC,"Just a word of warning. AOP was the big thing a few years ago on server side. Its useful for frameworks (like Spring) but limited use in application code, mostly because you can't tell what will happen at runtime by looking at the code. It was mostly used for cross cutting concerns like logging and authentication.  I'm sure its a good library but take that into consideration if you plan on using it for your code."
androiddev,3bpvpg,bart007345,1 point,Wed Jul 1 12:00:49 2015 UTC,"It is already widely used in most Android apps developed by Alibaba Group in the past year, to support over-the-air hot-fix and online remote debugging."
androiddev,3bpvpg,pyler2,0,Wed Jul 1 04:54:43 2015 UTC,"Man, this is great!"
androiddev,3bpvpg,pyler2,1 point,Wed Jul 1 07:57:25 2015 UTC,More examples if possible.
androiddev,3bpvpg,pyler2,1 point,Wed Jul 1 08:21:33 2015 UTC,Besides the samples at https://github.com/alibaba/dexposed/tree/master/sample  What else would you like?
androiddev,3bpvpg,crowbar87,-2,Wed Jul 1 09:16:46 2015 UTC,Ok. Maybe you know if we can use it with Eclipse too.
androiddev,3bpvpg,jinkeep,1 point,Wed Jul 1 10:49:41 2015 UTC,"This seems very interesting, thanks for sharing. Does it require root access?"
androiddev,3bpvpg,davebren,1 point,Wed Jul 1 12:09:38 2015 UTC,"hi crowbar87, no need to root, enjoy it! : )"
androiddev,3bpvpg,twocity,1 point,Thu Jul 2 02:51:41 2015 UTC,Looks like it would be really useful for tracing third party libraries.
androiddev,3bpvpg,pyler2,1 point,Thu Jul 2 14:38:34 2015 UTC,Can you guys give more examples about how to do the hot fix?many thanks
androiddev,3br9mt,donnfelker,3,Wed Jul 1 14:42:59 2015 UTC,"The actual article is at http://ph0b.com/android-abis-and-so-files/ , the tweet is just the title and the link, not sure why you didn't just submit the direct link."
androiddev,3br9mt,jopforodee,1 point,Wed Jul 1 17:42:18 2015 UTC,"Regarding UnsatisfiedLinkError, you might still get it randomly even if you do everything correctly.  See this hack the chromium team did to fix it."
androiddev,3br9mt,madisp,0,Thu Jul 2 16:26:21 2015 UTC,"To be honest, copy paste fail on my part. :)"
androiddev,3bp72y,artem_zin,3,Wed Jul 1 01:08:19 2015 UTC,"Hi! Proverbial guy from Realm here ;) I wasn’t planning on commenting but since you’re asking… :p   First of all congrats for shipping this! I know how time-consuming and nerve-wracking it is to write open-source software, so thanks for helping move the world along :) The project adds a lot I think, and your rationale is clear (and very helpful to read). We don’t really have problems passing objects between threads or doing notifications (the latter will also enable Rx support) — it’s just been time consuming to do them right (i.e. with good performance and a nice API), and we’ve had to write a lot of C++ to get there. The good news is that we’re wrapping up those PRs [1], [2] now and they should drop into Realm Java this Summer. We’re all for you wrapping Realm into StorIO! It might be hard to preserve the performance & safety characteristics of Realm with a high-level library (which is why again we are undertaking a lot of that work in our underlying storage engine), but there’s no way to know for sure without trying!   Anyway, thanks for sharing, and if you’re ever in Copenhagen or San Francisco, please come say hi :) You can also drop me a line tim@realm.io  [1]: Async query / handover PR for Java, may be followed by other ways to pass objects across threads: https://github.com/realm/realm-java/pull/1214 [2]: Notifications are being worked on from the Cocoa side now, which is driving the underlying C++ implementation. Cocoa is a few days away from shipping and after that porting to Java should be a breeze: https://github.com/realm/realm-cocoa/pull/2050"
androiddev,3bp72y,timanglade,1 point,Wed Jul 1 18:35:13 2015 UTC,"Hi!   Thanks for kind words :) 100% agree with ""time consuming to do them right"". Okay, I'd prefer to work on Realm support only with some experience with it (at least in one project and 2-3 months of using it in production), so we probably will start working on StorIO for Realm after somebody will came and help us as contributor and we would help him/her with implementing of StorIO concepts.   I've read several posts about Realm and your documentation and I should say that it's great that you decided to write own storage engine (for example Couchbase DB for mobile just wraps SQLite and sells it as NoSQL), you are doing good job, keep working!  Unfortunately or fortunately I am not in Copenhagen nor San Francisco, so I'll drop you a line via email :)  Thanks for the feedback!"
androiddev,3bp72y,landrei,1 point,Wed Jul 1 19:15:02 2015 UTC,Congratulations! You guys rock. I was impressed how fast you responded to my complaint about AutoValue support: https://github.com/pushtorefresh/storio/issues/365 and overall library design and test coverage. Do you ever sleep? :)
androiddev,3bp72y,dkozel,1 point,Wed Jul 1 08:49:00 2015 UTC,"Thanks! AutoValue/AutoParcel our constant companions because immutability prevents so huge amount of bugs, race conditions and so on that we had goal to provide support for such libraries and immutable objects in general in StorIO. Now we have test cases where we check that AutoValue/AutoParcel will 100% work with StorIO :)   Do you ever sleep?   Just follow /u/JakeWharton on GitHub and try to understand when he sleeps, sometimes I even think that there are multiple persons under one account :)"
androiddev,3bmjfj,philosophicalhacker,5,Tue Jun 30 12:44:51 2015 UTC,"Good, informative talk.   Can't seem to figure out how to use RxJava to download a file with known URL, however. He mentions using Retrofit at one point. Maybe I need to look into that."
androiddev,3bmjfj,mraviator9,4,Tue Jun 30 17:18:33 2015 UTC,"yes, retrofit for downloading over http (RxJava) doesn't do that natively. However, retrofit supports returning Observables so it plugs in nicely with RxJava."
androiddev,3bmjfj,bart007345,5,Tue Jun 30 18:17:30 2015 UTC,Downloading files isn't really Retrofit's purpose. You'd use Retrofit to communicate with a RESTful API. If you want to download actual files you could use OkHttp for example.
androiddev,3bmjfj,Xylon-,2,Tue Jun 30 19:39:28 2015 UTC,actually thats what I meant! Sorry.
androiddev,3bmjfj,bart007345,3,Tue Jun 30 20:05:36 2015 UTC,"Retrofit is amazing, definitely look into it :) .  bart007345 is right in that Retrofit does a lot of the Observable coercing for you, but you could technically do this on your own too sans Retrofit."
androiddev,3bmjfj,kaushikgopal,3,Tue Jun 30 18:28:29 2015 UTC,excellent.
androiddev,3bmjfj,bart007345,3,Tue Jun 30 16:34:00 2015 UTC,This looks promising.
androiddev,3bmjfj,stik3nd,3,Tue Jun 30 16:34:25 2015 UTC,"The guy at 44:00 asked a very good question. If we run a long running task and the user flips the screen frequently we can get an out of memory event easily. This is why we have so many ""hate AsyncTask"" speech out there. The answer is to not use anonymous classes when defining observables. This is not an easy solution - our observables mostly consist of anonymous classes. Another option is to use MVP to not hold a reference to the view during observable execution."
androiddev,3bmjfj,jackhexen,2,Tue Jun 30 17:36:23 2015 UTC,He does mention a way to prevent this by unsubscribing to the observable in onStop/onDestroy though.
androiddev,3bmjfj,bart007345,5,Tue Jun 30 18:18:47 2015 UTC,It does not help because the reference to the view will still exist until observable completes its background work. Unsubscription will only prevent onNext calls and make observable to be available for gc after its completion.
androiddev,3bmjfj,jackhexen,3,Tue Jun 30 18:27:54 2015 UTC,"yep, that's right! the unsubscribing doesn't help if the long running task is spawned and the numerous rotation actions occur before the task is completed..... unless you use a presenter like pattern (as suggested in a below comment)."
androiddev,3bmjfj,kaushikgopal,2,Tue Jun 30 18:30:41 2015 UTC,"If we run a long running task and the user flips the screen frequently we can get an out of memory event easily.   Another option is to use MVP to not hold a reference to the view during observable execution.   yup that's right. some clarifications though (so i know i'm agreeing to the right explanation of your point):   problem 1 is avoiding the repetition of long running calls altogether.  problem 2 is holding on to references for a longer time => potential memory leaking.  neither AsyncTasks nor RxJava ""solves"" problem 1. RxJava provides certain operators like cache which can help alleviate the problem a little but that doesn't magically avoid the repeition due to a context change or re-issue of the call. whenever there's any ""long running"" tasks and we're looking for some mechanism of caching those calls, a presenter/scoped-singleton like pattern is usually the way to go.  wrt problem 2, the use of Observables is riddled with anonymous inner classes and that makes it super easy to hold on to view/context references unknowingly. but to be clear standard AsyncTask usage also has this problem. again a presenter/scoped-singleton pattern if carefull coded could help with this.   This is why we have so many ""hate AsyncTask"" speech out there.   well, one of the many reasons :).  AsyncTasks have a host of other nasty issues."
androiddev,3bmjfj,kaushikgopal,3,Tue Jun 30 18:24:38 2015 UTC,Amazing.... I think I can finally move my asynctasks to RxJava without actually reading too much....
androiddev,3bmjfj,epicstar,2,Tue Jun 30 22:29:19 2015 UTC,I wish they would post the example code.
androiddev,3bmjfj,Deep-Thought,5,Tue Jun 30 20:20:35 2015 UTC,code snippets mostly taken from here: http://github.com/kaushikgopal/Android-Rxjava  slide deck : https://newcircle.com/s/post/1744/2015/06/29/learning-rxjava-for-android-by-example
androiddev,3bmjfj,kaushikgopal,1 point,Tue Jun 30 20:45:51 2015 UTC,"At 39:40ish, there's a question about Loaders vs. RxJava Observables. Technically, they are not interchangeable. Loaders can deliver async data to Activities and Fragments even after they've been destroyed and recreated because of a configuration change. Observables can't do this out of the box.  This is discussed in the Developing Android Apps udacity course: https://www.youtube.com/watch?v=qrPoIF6A9gM"
androiddev,3bmjfj,AlabamaJam,1 point,Wed Jul 1 12:35:58 2015 UTC,"OK so I watched the talk and thought, ""Great, I can try this out now."" Unfortunately, what I perceive as the simplest of examples is failing. Can someone (/u/kaushikgopal ?) ELI5 why this isn't working to get me in the proper mindset?  Observable.from(new Integer[]{1, 2, 3, 4, 5})         .subscribeOn(Schedulers.io())         .subscribe(new Observer<Integer>() {             @Override             public void onCompleted() { System.out.println(""onCompleted""); }              @Override             public void onError(Throwable e) { e.printStackTrace(); }              @Override             public void onNext(Integer integer) { System.out.println(""onNext: "" + integer); }         });   By ""not working"", I mean it doesn't print anything out. If I remove the .subscribeOn(...), it works fine. Note: this was in pure Java, if that makes a difference. I hadn't even gotten to Android yet. I also tried adding a .observeOn(Schedulers.immediate()) thinking that would be analogous to observing on Android's main thread, but it didn't seem to matter if I included it or not. Thanks."
androiddev,3bqhg8,imsrslyyouguys,1 point,Wed Jul 1 09:23:23 2015 UTC,"Have a look at Google's IO app. Its open source and has exact implementation of the thing you are asking. Search class ""BaseActivity"" and it has the code you need. I have looked through IO2014 app and this is based on that."
androiddev,3bqhg8,sagarsiddhpura,2,Thu Jul 2 06:03:26 2015 UTC,Just for future redditors:  Google's IO app and the activity in question
androiddev,3bqhg8,morgazmo99,1 point,Thu Jul 2 15:14:34 2015 UTC,"Awesome! Thank you, I didn't know that."
androiddev,3bqy7l,chaosphinx,1 point,Wed Jul 1 12:59:37 2015 UTC,You can show link to privacy policy in login page. Write this in privacy policy.
androiddev,3bqy7l,sagarsiddhpura,1 point,Thu Jul 2 06:19:47 2015 UTC,Make sure you securely handle their input too
androiddev,3bnppv,graemeharnish,2,Tue Jun 30 18:08:05 2015 UTC,"Really, really interesting! Something like this was needed.  I think this should be updated:   While there is a library for the new card view from Google, something like the floating action button is missing.   The FAB is now included in the Design Support Library, that probably should be mentioned in the post.  Another thing: I find it strange that you recommend using Otto and RxJava. I've seen that, lately, people are advocating using RxJava for doing what Otto does."
androiddev,3bnppv,ttelephone,2,Wed Jul 1 17:25:42 2015 UTC,That's true.  I wrote this before M obviously ;)  I still find Otto useful if used very sparingly.  I know even Jake Wharton said that Otto is dead with Rx and I kind of agree.
androiddev,3bnppv,CaddoSierra,1 point,Wed Jul 1 18:46:36 2015 UTC,"Hi, reading up on part 2 because I'm relatively new to Android development in particular, but I feel I need to learn really clean code early on. I'm not familiar with regions yet and haven't seen them used before, but they seem like they could be very useful. I have a question about listeners though.  The article mentioned that they should always be separate classes and never included in life-cycle methods. Can somebody explain why this is? Are there issues with object repetition or something?"
androiddev,3bnppv,trandav,1 point,Wed Jul 1 02:41:53 2015 UTC,Thanks for reading!  There's no technical reason to not have them part of the lifecycle methods.  We've found in projects it leads to a few bad habits.  The lifecycle methods become extremely bloated.  It's very common to see projects with 1000+ lines of code in the onCreateView/onViewCreated methods.  This becomes very hard to follow and is extremely not testable.  For testing you should always be designing your code to have test coverage in small chunks.  In future posts I'll show some examples how testing basic listeners with mock data is extremely powerful.
androiddev,3bnppv,SergeantFTC,1 point,Wed Jul 1 03:13:08 2015 UTC,I'm guilty of it too.  I think it's because the official Android tutorials just use Anonymous classes so casually.
androiddev,3bpj2f,trendandbeyond,2,Wed Jul 1 02:54:41 2015 UTC,"I'd recommend web technologies for your immediate career. I'm thinking nodejs, javascript, html 5. I see 10 web jobs for every desktop/mobile job but honestly I may be looking for the wrong thing."
androiddev,3bpj2f,T-MoneyAllDey,2,Wed Jul 1 03:35:58 2015 UTC,"I second NodeJS. I've never used Rails, but I've started playing with Node recently and it's really good — as well as really fast — for web development.   My primary gig is cross-platform games and apps, so I do hear about way more jobs on that side, but I'm sure people are hiring on both sides."
androiddev,3bpj2f,TimMensch,1 point,Thu Jul 2 04:22:27 2015 UTC,"Thanks for responding. Yes, that's where part of my confusion came from as well. When I go on indeed.com, web dev jobs such as ""front end, html5, etc"" seem to outnumber the jobs available for Android or iOS. Maybe I'm not looking at this from the right perspective though."
androiddev,3bpj2f,dj_darkhorse,2,Wed Jul 1 04:33:13 2015 UTC,While there are more web dev jobs available I think what you'd need to look at would be the jobs per dev. As there is also a lot of web developers around already
androiddev,3bpj2f,TimMensch,2,Wed Jul 1 21:25:28 2015 UTC,"Where are you in programming experience? If you are just starting, don't worry about where to specialize yet. Work on what inspires you most to start with.   If you do have a basic grounding in development, both will probably get you good jobs. I learned Android development and have a constant stream of calls from headhunters, so I can tell you that the demand is really high on this side.   More recently I've been getting opportunities to work on Cordova apps, which allow you to write an app once and build for both Android and iOS. If you want to be a consultant, that's a good option. But you probably need some experience doing something professionally before trying to go that route.   Good luck."
androiddev,3bpj2f,TimMensch,1 point,Wed Jul 1 03:39:21 2015 UTC,"I had a strong interest in programming when I was a young-in - but I ended up going into a career in Finance and hate it with a passion. Going to a stiff corporate job, day in and day out, doing something you hate has led me to rediscover my passion for development. However, at this point, I have very minimal programming experience. I've taken a few Web Development courses and going through an Android course on Udemy right now, but I can't seem to commit fully to it, unless I am sure this is the right path for me.  That's inspiring to hear that you're receiving many calls for your Android experience. May I ask, how long did it take for you to learn Android and what your path was? Did you build a strong portfolio before headhunters began calling you?   Cordova sounds interesting - I'll have to look into that! Thanks!"
androiddev,3bpj2f,TimMensch,2,Wed Jul 1 04:38:07 2015 UTC,"how long did it take for you to learn Android   I'm probably not the best example. I taught myself assembly language when I was 14 because I wanted to make games, and no one told me that assembly language was hard, so...I wrote several complex game entirely in assembly. And at the point I learned Android I'd been coding professionally (mostly writing games) for over 20 years.  I dove into Android after quitting my job (with the intent to learn Android) and wrote a game over the next year. I actually had to interrupt the game writing because I got a contract to port someone else's game to Android from iOS.   It was the work I'd done on the game (combined with my previous resume) that got me the first Android contract. Being on the hiring side, if someone has a good app that they developed on their own initiative, that's huge. It's also rare, though; usually the demos people show are really pathetic. You need to work to make it nice if you want to impress someone.  To make it nice, you should be familiar with this book, as well as a book on design; I liked this one, and it did improve my design sense a lot.   Creating apps is more than just writing code, after all. The presentation is huge. And if you can show that you can make something look good, then you've got a good chance to win contracts or a full time job. It would be better to have one app that shines than a bunch of crappy ""I completed the tutorial"" apps."
androiddev,3bpj2f,omniuni,1 point,Wed Jul 1 16:55:16 2015 UTC,Thanks for sharing.  What do you think interviewers look for in candidates? What kind of app portfolio should I have for someone starting out?
androiddev,3bpj2f,MKevin3,2,Thu Jul 2 00:34:46 2015 UTC,"The content of the app doesn't matter as much as the polish. You'll probably be more intrinsically motivated to polish something you care about, so pick an app based on that."
androiddev,3bpj2f,tartangeek261,2,Thu Jul 2 04:18:48 2015 UTC,"Android is growing fast, Java isn't going anywhere and is useful for a lot of enterprise applications, and it's a less saturated market. Rails is useful, but isn't growing like it once was, and there are a lot more qualified web developers than Android developers."
androiddev,3bpj2f,aldo_reset,1 point,Wed Jul 1 04:24:44 2015 UTC,"Thanks for the response!  My desire to learn Android, is to either create my own startup or work for a startup. I know Java is used in many large companies for their enterprise app's. This is why I struggled on whether I should choose Rails, as it is very popular with web startups."
androiddev,3bpj2f,bart007345,2,Wed Jul 1 04:40:10 2015 UTC,"Which do you enjoy more? Do you like doing server side work where you are processing data or do you like doing a mix of graphics, user interface and REST calls?  If you get into programming just for the money you probably are not going to enjoy it. You need to get into programming AND the aspect of programming you enjoy the most.  I prefer front end work. I like doing graphics, choosing colors, making layouts etc. Others don't. They like getting the data ready, storing it in an optimal fashion and combining it into JSON results sets for me to consume. I am so happy those guys and gals are around because that is not my favorite side of programming.  All of the current technology will fade. You will have to learn something new. Pick that one that you enjoy the most and learn it and learn all the areas around it that will apply to other languages."
androiddev,3bpj2f,ThatOfficeMaxGuy,1 point,Wed Jul 1 12:09:43 2015 UTC,"For me, programming is not about the money, but the ability to take an idea and turn it into reality. So it's not really about enjoying the server side vs. the client side - but the big picture. Whatever skills or tools it takes to bring the idea into fruition.  I can't picture only just doing front end work, without being able to build on the rest of the puzzle. Nor, could I imagine only doing back-end code, without ever building out the user interface.  I get discouraged when I hear that I should only work on one path and will only be mediocre at it. Maybe I'm just thinking more from an entrepreneurial perspective and should realize that I can't do everything myself."
androiddev,3bpj2f,ThatOfficeMaxGuy,2,Thu Jul 2 00:43:15 2015 UTC,at the end of the day it depends what you want to do. I got into development because i was sick of having great ideas but not being able to code and of course a lack of funds. I have learnt Ruby on Rails for the back-end and am now learning Android through Udacity and the Google Nanodegree. Never had so much fun. Good luck with it all!
androiddev,3bpj2f,xaviv,3,Thu Jul 2 08:21:38 2015 UTC,"Ruby on Rails is a technology that's fast headed toward obsolescence.  Android is a pretty safe bet, if only because it will teach you Java (which is a useful language to learn, and probably will remain so for at least five-ten years) but also simply because it owns more than 70% of the OS mobile space and it will probably remain so for a while.  If you are still interested in learning about back end technologies, I would recommend getting familiar with servers such as DropWizard or Jetty, learn how to write a REST back end server and then have your Android client connect to it.  It's quite empowering to write both the client and server in an application, it makes you feel in total control. I highly recommend spending some time learning this.  And of course, this has a huge employment upside. There is fierce competition in the mobile engineering field and also in the back end engineering field. But developers who know both? Now these are very, very rare gems, and employers will get impressed if you can make the legitimate claim of being comfortable with both back end and front end."
androiddev,3bpj2f,BlotCoo,2,Wed Jul 1 03:28:58 2015 UTC,"I mostly agree with this. Being both server side and mobile is a huge benefit but you don't see many roles explicitly requiring it since its a big ask and lots of companies divide the roles.  Source: server side 15+ years, 18 months Android"
androiddev,3bpj2f,brian047,2,Wed Jul 1 07:02:25 2015 UTC,Not to mention Java is strong in both serverside and Enterprise development.
androiddev,3bpj2f,brian047,1 point,Wed Jul 1 09:21:46 2015 UTC,"Thanks for the response!  I am definitely interested in learning the full spectrum - client & server side for mobile, as I like to take my idea from inception and create every aspect of it from scratch.  Maybe the articles I've read are outdated, but I had the impression that there was high demand for mobile developers with little supply. When you say ""fierce competition"", are you saying the opposite? Too much supply, low demand?"
androiddev,3bo0h1,dreamache,1 point,Tue Jun 30 19:22:19 2015 UTC,Is it good?
androiddev,3bo0h1,droanmalik,1 point,Tue Jun 30 21:42:22 2015 UTC,I hope. Released today from www.youtube.com/designcourse and www.youtube.com/slidenerd
androiddev,3bo0h1,Hermes_Achilles,1 point,Tue Jun 30 21:49:04 2015 UTC,I'm a fan of slidenerd's. I just signed up today. Haven't been able to watch yet but definitely plan to check it out.
androiddev,3bptj0,BestSanchez,3,Wed Jul 1 04:29:27 2015 UTC,Do you really need that much TextViews? You will definitely have performance issues. I think the best way is a ListView where each row is a single cell.
androiddev,3bptj0,HaoChen,1 point,Wed Jul 1 05:11:30 2015 UTC,"Yes, yes I do lol. They're pretty small, but vary in length. And yes performance is an issue which is why I made this post. I know there's just gotta be a way to do this in a way that only loads the Views as they come into view.  So you're thinking a vertical ListView where each horizontal row is a TableRow or something? The only alignment I care about are the columns. The left side of the TextViews in each column specifically."
androiddev,3bptj0,insane-cabbage,2,Wed Jul 1 05:22:53 2015 UTC,"Try out the RecyclerView with the GridLayoutManager.  It uses an Adapter as well to populate it's content.   Just to clarify: you don't want to display all TextViews at the same time, do you?"
androiddev,3bptj0,insane-cabbage,1 point,Wed Jul 1 05:36:53 2015 UTC,No there's usually about 30 on the screen at most at a time. So something with an adapter is pretty much the way to go right? Because then I can dictate when views are inflated?
androiddev,3bptj0,insane-cabbage,1 point,Wed Jul 1 06:12:59 2015 UTC,"Well, the RecyclerView actually dictates when new views are inflated. You just provide views when they're requested. Since it's implementing the View-Holder-Pattern you just bind already views when they're needed.  Example: When you have around 30 views on the screen, the RecyclerView actually holds a few more, that when you scroll it can display them instantly. When you scroll further, views in opposite scroll-direction get reused and send to your adapter for re-binding.   There should be plenty of tutorials out there on how to implement it. Don't worry though, it's not that complicated ;)"
androiddev,3bptj0,aexyno,1 point,Wed Jul 1 06:24:59 2015 UTC,"I see plenty on making RecyclerViews, and I'm actually using one for a separate list right now, but I'm unsure of how to make this into a table where the columns are left-aligned?"
androiddev,3box51,cykwon,3,Tue Jun 30 23:24:40 2015 UTC,Upvoted. Would also like to know the opinions.
androiddev,3box51,Hermes_Achilles,3,Tue Jun 30 23:27:20 2015 UTC,"MySQL. Data like craigslist's is inherently relational. I would say that that relational databases should be the default, and if and only if you have non relational data, that is when you use a NoSQL database."
androiddev,3box51,Sinistersnare,1 point,Wed Jul 1 01:23:56 2015 UTC,"I don't think I agree with you. I think a NoSQL might be just fine. User names will likely not be changing nor will their contact information (email address) when they sign up. Or even with 1 and dones, a anon post. You can have a denormalized situation where you store the contact information to a post.  Tl;dr due to the static nature of posts/accounts once created i think a NoSQL is okay. If you disagree please tell me, I'm genuinely curious"
androiddev,3box51,getonmalevel,2,Wed Jul 1 04:31:32 2015 UTC,"I don't see any advantage using nosql will bring. I don't think ""it's not the worst use case for noSQL"" is a good argument."
androiddev,3box51,ciny,1 point,Wed Jul 1 05:45:57 2015 UTC,"It's definitely easier to use, especially from a programmer standpoint.   I don't see any advantages that SQL would bring either. Designed right, I think either would work."
androiddev,3box51,coffeekin,1 point,Wed Jul 1 06:03:52 2015 UTC,"It's definitely easier to use, especially from a programmer standpoint.   That is really just a personal opinion. I personally hate the way mongo configuration is handled...   I don't see any advantages that SQL would bring either.    Relational data belong in a RDBMS, the main ""advantage"" is that you use tools designed for the task.   Designed right, I think either would work.   SQL would work even if designed wrong ;)  My personal opinion is to use the right tool for the right job."
androiddev,3box51,ciny,1 point,Wed Jul 1 06:23:58 2015 UTC,"Well what situation do you see NoSQL trumping SQL? In my min a situation where you have joins and normalized data for the sake of the db you chose is over-design. If we were doing a facebook or something where posts can be edited, and data is not consistent thus required relationship tables/joins, etc."
androiddev,3box51,getonmalevel,1 point,Wed Jul 1 14:54:27 2015 UTC,"Well what situation do you see NoSQL trumping SQL?   ""schemless"" data, document store, ""graph databases"" etc.    In my min a situation where you have joins and normalized data for the sake of the db you chose is over-design.   And if your situation changes? If you decide you want to add functionality later? will you rewrite the whole database layer? Extensibility is a very important concept in software engineering, most certainly not ""over-design"". If you think you have a ""simple"" project you haven't thought about it hard enough.    If we were doing a facebook or something where posts can be edited, and data is not consistent thus required relationship tables/joins, etc.   If we were doing facebook it would be much more complex than simple queries and we would also run into scaleability issues. this is quite an interesting read"
androiddev,3box51,ciny,1 point,Wed Jul 1 17:07:53 2015 UTC,"Its not about immutable data, its about relational data. A schema can be made for data 'like the way craigslist does it', therefore it should be made with a RDBMS.  NoSQL is good when you have data, and you do not know what it will look like."
androiddev,3box51,Sinistersnare,1 point,Wed Jul 1 17:29:19 2015 UTC,Just found out Craigslist uses mongoDB. any reason why you think?
androiddev,3box51,Sinistersnare,1 point,Wed Jul 1 17:40:32 2015 UTC,"Engineers who get caught up in pop-programming. Data like theirs is totally relational. I would be interested in why they use it, but I would not have in their situation."
androiddev,3box51,Sinistersnare,1 point,Wed Jul 1 17:46:17 2015 UTC,I think I may have found out why. Mainly it was a backup/archival issue   https://www.mongodb.com/customers/craigslist
androiddev,3box51,TiberiusAbadon,1 point,Wed Jul 1 17:50:05 2015 UTC,"Yeah, I read that after I replied.  They seem to have switched their schema, but for some reason couldnt be arsed to write migrations, so they just went the lazy mans way and threw out their schema."
androiddev,3bq22u,Lev_Myshkin,2,Wed Jul 1 05:57:18 2015 UTC,"Developers want to make money.  A popular way to make money right now is through ad supported content.  Google is, among other things, an ad company.  For paid apps, google takes 30% of each sale as a transaction fee."
androiddev,3bq22u,insane-cabbage,1 point,Wed Jul 1 06:29:54 2015 UTC,"Disclaimer: I have no insight of how Google is making money from the PlayStore.   That said, I strongly believe they're making enough from the PlayStore transaction fees to keep it viable. Even if they're making loss, it can't be that big and it probably will be subsidised by the OEMs that keep selling Android phones with Google Apps (they have to pay a fee to ship their phones with GApps) and other income sources which Google has plenty of."
androiddev,3bq22u,el_bhm,1 point,Wed Jul 1 06:35:52 2015 UTC,"Android is a platform to deliver their other products you are using. Products that use and produce data. The real top seller for them.  So, yes, Play Store might as well be not profitable."
androiddev,3bodu2,IllegalArgException,2,Tue Jun 30 20:59:05 2015 UTC,The third option would be to use a GridView and populate it via an adapter.
androiddev,3bodu2,aetius476,2,Tue Jun 30 23:04:28 2015 UTC,"I would argue this should be the only option considered unless there is a very good reason not to, and even then I'd suggest reconsidering."
androiddev,3bodu2,buckstalin,1 point,Wed Jul 1 03:29:47 2015 UTC,Is this also possible with nested LinearLayouts?
androiddev,3bodu2,Thanael,2,Wed Jul 1 12:34:47 2015 UTC,"The fourth (and correct :P) option would be to use a recycleview with a GridLayoutManager.  With your two proposed solutions you don't get view recycling, so memory will wasted left and right.  Haven't looked at GridView in a while, I'm guessing it has recycling mechanism and you would achieve +/- the same thing as with the recyclerview, however with recyclerview you get a more generic solution that's much more flexible (plug in a LinearLayoutManager instead of the grid one and you get 'schedule' view of the google calendar, for example, for free)."
androiddev,3bodu2,Thanael,1 point,Wed Jul 1 07:30:29 2015 UTC,"Isn't recycling something, which inflates the layout that often like it's shown on the screen. And once one element leaves the screen, it can be recycled to a new element, which enters the screen?  You can see this happen, if you set another background to an list element in a RecyclerView. If you swipe one out of the screen, another element enters with this background, but all the others still got the same.  If it's like that, a recycler wouldn't change anything here, because all the elements (days) are always shown, hence inflated the same amount like in my approaches above."
androiddev,3bo3fo,LookAtMyDuck,1 point,Tue Jun 30 19:43:01 2015 UTC,does that mean it has the sprint or verizon bands instead or at&t?
androiddev,3bo3fo,fredgrott,1 point,Tue Jun 30 20:02:33 2015 UTC,Its original sprint but unlocked now. Wont work on verizon but will att I think.
androiddev,3bo3fo,Hermes_Achilles,1 point,Tue Jun 30 20:03:27 2015 UTC,What exactly are you interested in to trade?
androiddev,3bo3fo,achuinard,1 point,Tue Jun 30 23:29:37 2015 UTC,"A tmobile phone, tablet, or anything"
androiddev,3bo3fo,lulundi,1 point,Wed Jul 1 00:14:10 2015 UTC,"I'd love to take it. Why? Because Samsung loves to put little quirks in their distributions that break my apps. Most recently, I found that querying sqlite_master does not work on Samsung.  I'll pay for the shipping."
androiddev,3bmnyf,ToadieF,2,Tue Jun 30 13:28:10 2015 UTC,"Hi, it has infinite amount of apps in appropriate categories.   Let me tell my opinion. I think you need more installs to bump your game to the top of that lists. We launch or game in Google Play, and after some marketing efforts, we got 500 installs in first day, 1500installs in 2-nd day, and then on average 300installs per day for a month. So, you make marketing and then marketing works for you.  About categories. We jump on the top-30 free puzzle games in our region after 1500 installs per day. It helps to earn a lot of organic traffic. It's not a crazy installs, you know, but not bad."
androiddev,3bmnyf,AndrewSparrow,4,Tue Jun 30 16:52:53 2015 UTC,"How much are you spending to get those first 500 installs? Is that through Facebook / Adwords marketing campaigns, or through users you already have on other products?"
androiddev,3bmnyf,rtuck99,2,Tue Jun 30 23:16:19 2015 UTC,"I have got those installs from separate ways. Major of it is a local press, websites specialized on apps reviews. Second - a youtube personalities. i spend only a symbolic 15$ for a video review.  Also, i have used a motivated installs from one stock. - it cost's for me about 0,10$/install."
androiddev,3bmnyf,AndrewSparrow,1 point,Wed Jul 1 15:13:57 2015 UTC,"You can check where you stand with the keywords with appannie.com. Then try changing keywords and you will see if that helped. Sometimes only adding some words to your app name helps a lot (for example instead of ""Hangouts"" -> ""Hangouts SMS Messenger"").   It might be also good to get your app translated to some major languages.  You can take an advantage of new Google Play Store Listing Experiment section, where you can A/B test app descriptions or different icon/screenshots."
androiddev,3bmnyf,gfp7,1 point,Tue Jun 30 17:06:33 2015 UTC,"My app is not even in the top 250 in any of the main relevant keywords, so app annie has not been that useful. However totally irrelevant apps do rank higher for some reason, even if their app store listings don't contain any of the search terms or variants. Presumably this is just on the basis of downloads.  Edit: I just discovered that it has recently been appearing sporadically in one of the search terms (at around position 225, so still pretty much invisible), the only reason I can think of for that is that I did an update and that term appeared in the What's New section."
androiddev,3bmnyf,rtuck99,1 point,Tue Jun 30 23:27:51 2015 UTC,"The going rate for a US install is about $1. You need a marketing budget of $10,000 - $100,000 to be seen in Google Play. There are some exceptionally smart and/or lucky people who can do it much cheaper."
androiddev,3bmiq5,kraakf,3,Tue Jun 30 12:36:43 2015 UTC,There seems to be free devices available for trial and try-outs.
androiddev,3blqhs,MrHeavySilence,13,Tue Jun 30 06:19:11 2015 UTC,Material Design Tutorials  Edit: That's supposed to be a YouTube link to SlideNerd's material design playlist. Just in case the link doesn't work (I'm on mobile).
androiddev,3blqhs,scratchysue,1 point,Tue Jun 30 07:23:46 2015 UTC,"I watched a ton of these as well when I was doing my first material app. The videos are great. There are a few improvements which have been made now with the Design Library which you should take a look at first to see what is supported in there, but his videos are still super useful."
androiddev,3bosqy,MrHeavySilence,1 point,Tue Jun 30 22:49:38 2015 UTC,"You could look at this guide by the Realm fellows: https://www.reddit.com/r/androiddev/comments/3bh8b5/using_flow_mortar_two_libraries_from_square/  Well it's more a discussion, really, but it essentially tells you that the steps are to:   Take the SimplePathContainer sample directly from their directory, because it's hell to implement on your own, haha Create a Mortar Scope in your custom Application configure the FlowDelegate in your Activity   I've been planning on putting a ""simplest simple"" sample together but I haven't had the time yet."
androiddev,3bosqy,Zhuinden,1 point,Wed Jul 1 08:34:47 2015 UTC,"The Flow object has a delegate? What is the FlowDelegate's purpose? What is the purpose of the SimplePathContainer? In the github file I see that in SimplePathContainer there is a Path object and its drawing from a TraversalState- is that a standard Android class or is that from the Flow library?   It sucks, I've read a lot of documentation about what it does but when it comes to understanding what's happening under the hood its actually pretty confusing for me."
androiddev,3bosqy,Zhuinden,1 point,Wed Jul 1 15:00:50 2015 UTC,"TraversalState is in Flow-Path. The SimplePathContainer manages the Path which manages the Context object (ContextWrapper) that is bound to every ""custom View"" but isn't an Activity context (so it doesn't die on rotation!)  FlowDelegate receives the Activity's onCreate, onRetainNonConfigurationInstance, etc. methods to inform Flow of what is happening in the Activity."
androiddev,3bosqy,lolkittens,1 point,Wed Jul 1 15:54:33 2015 UTC,"I would recommend using techery/presenta to start, you can include the additions module which will contain the sample code for some of the boilerplate.  Though if you look through the code and can't understand how all of the things work together, it may not be worth using Flow & Mortar."
androiddev,3bosqy,Zhuinden,1 point,Wed Jul 1 16:09:22 2015 UTC,"(I still think the SimplePathContainer is not obvious at all, and I'm having bugs with it on setup because the first layout constructed from a path doesn't seem to get its corresponding Path context for some reason, it gets the root!)"
androiddev,3bosqy,lolkittens,1 point,Thu Jul 2 00:27:29 2015 UTC,"I saw you got it working in your test project, let me know if you need any help."
androiddev,3bosqy,Zhuinden,1 point,Thu Jul 2 03:14:48 2015 UTC,"Well technically I managed to get it working, but the test app has a bug - the first view doesn't get the first path as a context, it seems to receive the previous context - before I forced the root context into it, it was an activity - now it's the container's context -  the root! I have no idea what's going on and why. In fact,  even if I force it to be a different path context,  it still doesn't have a local path wrapper. I am getting ""supplied context has no path"".   So the FirstPath gets the container's path, rather than its own, which is odd because even if fromView is null, it's supposed to create a new path context. I'll probably need to debug further, or at least I would if debugging didn't freeze, haha."
androiddev,3bosqy,Zhuinden,1 point,Thu Jul 2 05:22:53 2015 UTC,I fixed the FirstPath
androiddev,3bosqy,Zhuinden,1 point,Thu Jul 2 09:12:11 2015 UTC,"Okay, I tried setting it up, but I'm not done yet with it because it's 2:27 AM and I have to work tomorrow and stuff. But this is the first step to understanding wtf is going on.  https://www.reddit.com/r/androiddev/comments/3bte7p/basics_of_experimenting_with_setting_up_mortar/"
androiddev,3bosqy,Zhuinden,1 point,Thu Jul 2 00:28:02 2015 UTC,And now has a part 2  https://www.reddit.com/r/androiddev/comments/3c6hw9/basics_of_experimenting_with_setting_up_mortar/
androiddev,3bosqy,prlmike,1 point,Sun Jul 5 14:45:13 2015 UTC,Not a step by step but this project is up to date from what it looks like.  https://github.com/lukaspili/Mortar-Flow-Dagger2-demo
androiddev,3bnryq,bart007345,2,Tue Jun 30 18:24:00 2015 UTC,"Yes. Some of our content screens are controlled directly server side. Lists where we want to make A/B tests on their contents.    Nothing really complex. The base widgets are predefined : we are not going to push the tests that far and it is not worth it anyway in terms of dev cost/maintenability (the base items are already custom ViewGroups for perfs reasons).    so instead of calling the API in order to get the content of the list, we call it to get the content of the list and the order of the items. It is just a bigger JSON, nothing fancy."
androiddev,3bnryq,xqjt,1 point,Tue Jun 30 19:46:40 2015 UTC,"just to confirm, I'm talking about the server providing UI details such as layout, whether to display a nav bar, etc.  The reason I ask is because one of our server feeds produces content for a lot of platforms including browsers. My intuition says that on mobile I just want to parse the raw data and get the underlying data only. I just have to follow a lot of links (its HATEOS) to get to the data for a screen."
androiddev,3bnryq,xqjt,1 point,Wed Jul 1 07:11:08 2015 UTC,"Then no :) . Theoretically, you could always create your own ViewGroups which take their instructions from whatever you get from your API. I don't think there are a lot of situations where it is worth the very large effort though."
androiddev,3bnryq,jackhexen,1 point,Wed Jul 1 07:44:11 2015 UTC,We tried to do something similar in our company but decided to drop the project. It became very complicated too fast. At the end we would implement our own web browser. :D
androiddev,3bnryq,el_bhm,1 point,Tue Jun 30 18:46:21 2015 UTC,"Options   Display stuff via a  WebView. Basically a webpage. Uh, oh. REST spits out a model. Model is translated to a view. Basically a lot of custom views and dynamically built on runtime. Somewhat better, but quite a task on the engineering side as you may run yourself in a corner performance wise (memory limits, then speed).   Done the second one quite a lot at my previous job. Having a, more or less, static view that is populated with predefined data means you are not sacrificing maintnance, scale, speed of code for having a dynamic, configurable UI. Mobile platforms weren't really designed with fully runtime dynamic UIs  in mind (before anyone comments, I do not mean animations and such)."
androiddev,3bl84y,simobk,40,Tue Jun 30 03:14:22 2015 UTC,"Bluetooth is overkill, but Bluetooth LE isn't (e.g. a beacon)."
androiddev,3bl84y,tadfisher,9,Tue Jun 30 03:28:17 2015 UTC,BLE is perfect. All those sensors you buy that turn on lights when you walk around with your phone in the house use BLE.
androiddev,3bl84y,illbuyajuicer,4,Tue Jun 30 05:04:23 2015 UTC,"Colleagues of mine tried positioning using BTLE and were pretty disappointed on how android is not really consistent across devices. they couldn't get accurate readings unless they did ""calibration"" with known distances to accommodate for error. How ever they required more precision than ""am I within 10 feet"" so it might work alright for such use case."
androiddev,3bl84y,ciny,3,Tue Jun 30 07:14:39 2015 UTC,"Yeah the different bluetooth devices are to blame. I have bluetooth headphones, and they work from across the street with my new phone, but only a few feet with my old one."
androiddev,3bl84y,Nowin,1 point,Tue Jun 30 08:56:38 2015 UTC,might be the best option but BLE is pretty terrible at this in my experience.
androiddev,3bl84y,Cg2XHPxz,3,Tue Jun 30 04:09:03 2015 UTC,"I've heard alt beacon is the way to go, although am yet to try it. https://github.com/AltBeacon/android-beacon-library"
androiddev,3bl84y,dj_darkhorse,1 point,Tue Jun 30 04:40:25 2015 UTC,"Can agree with this, I've used a Nexus 5 as a beacon (requires a recompiled OS sadly), and an iOS device as the one that picks it up, was really cool to turn on and off my room's bulbs.  An actual beacon would be much better than a Nexus 5 though, I had to keep it connected to a charger."
androiddev,3bl84y,MohammadAG,3,Tue Jun 30 08:39:36 2015 UTC,"You shouldn't need to do anything to an Android 5.0 device, that is one of the features added in 5.0. I've used an app written by the altbeacon team running on my Nexus 9 for testing beacon detection running on my phone.  https://play.google.com/store/apps/details?id=com.radiusnetworks.quickbeacon"
androiddev,3bl84y,buckstalin,2,Tue Jun 30 15:14:03 2015 UTC,"What you're saying is only true for devices that support multicast (Nexus 6 and 9), you need a beta copy of Android 5 or a recompiled version that re-enables it."
androiddev,3bl84y,MohammadAG,3,Tue Jun 30 15:19:01 2015 UTC,"I agree that BLE is probably your best bet, but if you want to do it just for your house and you don't want to buy any other add-ons, you could use Wi-Fi indoor localization. You could assign specific signal values to different sections of your house, I found it accurate to about 1m. There's plenty of projects on GitHub that you could take inspiration from."
androiddev,3bl84y,ThePotatoBanana,2,Tue Jun 30 07:28:49 2015 UTC,"My current project provides a choice of both NFC/BLE to allow a user to check in to a location. BLE is perfect for your requirements but while the technology works, it isn't terribly fast or accurate (in terms of distance). You can buy cross platform programmable BLE beacons online for as little as £20 (cheaper if you buy in bulk) so the cost isn't prohibitive. These beacons often have their own SDKs so make sure you buy one with the right software functionality for your project requirements."
androiddev,3bl84y,bukster,2,Tue Jun 30 08:59:05 2015 UTC,maybe you could experiment with emitting a tone at a particular frequency (try for something inaudible test to see whether phone speakers are capable of emitting that tone)
androiddev,3bl84y,shrewduser,1 point,Tue Jun 30 13:11:07 2015 UTC,"I guess not all smartphones are cabable of this, but some geocaches use ""chirp"" for this.  It's 10m and not 10 feet, but i guess this could be a starting point for some research.  https://buy.garmin.com/en-US/US/shop-by-accessories/geocaching/chirp-/prod74811.html  An App that can find them: https://play.google.com/store/apps/details?id=com.dsi.ant.plugins.antplus"
androiddev,3bl84y,BikerMouseFromMars,1 point,Tue Jun 30 12:53:55 2015 UTC,bluetooth is overkill.   Never has there been a more accurate description of Bluetooth.
androiddev,3bl84y,m1ss1ontomars2k4,1 point,Tue Jun 30 22:39:52 2015 UTC,"In case you didn't notice, although I'm an experienced web dev, this will be my first mobile dev project. :)   Uh, choose something else as a first mobile project. Seriously.  Something that is at hand and free to use, WiFi signal. That is whole another engineering task to wrangle, though."
androiddev,3bl84y,el_bhm,-11,Wed Jul 1 13:51:41 2015 UTC,"If the object is fixed, you're in luck. There's this thing called GPS that is accurate to around 10 feet in most modern devices.   If you want fancy you could use the Nfc to trigger the location of the fixed object and save the GPS coordinates, then remember via proximity."
androiddev,3bl84y,casualblair,4,Tue Jun 30 05:43:32 2015 UTC,If object is indoors then GPS will not work.
androiddev,3bl84y,matejdro,-3,Tue Jun 30 06:34:42 2015 UTC,"Mine can tell if I'm in my office, kitchen, or bedroom. Dunno why you think it doesn't work indoors."
androiddev,3bl84y,casualblair,5,Tue Jun 30 06:57:43 2015 UTC,Only using GPS or also Google's location services?
androiddev,3bl84y,amroth,2,Tue Jun 30 07:28:38 2015 UTC,Google's location services  10ft / 3m   Probably not accurate enough
androiddev,3bl84y,matejdro,2,Tue Jun 30 10:59:17 2015 UTC,"Well, with the combination of the two, in SOME environments, you MIGHT get some results. But see /u/ciny's post. This is a recipe for failure."
androiddev,3bl84y,amroth,7,Tue Jun 30 11:38:48 2015 UTC,"Oh if YOUR works that must mean all will work. because everyone uses the same GPS chip, has the same antenna in the same place and everything...  seriously, GPS is the way to go only if you want many 1 star reviews that it doesn't work..."
androiddev,3bmkx7,HooliganQC,8,Tue Jun 30 12:59:44 2015 UTC,The problem is the wasteful concatenation on every call. Ideally these would be computed once so that the binding only had to set them on the view.
androiddev,3bmkx7,JakeWharton,3,Tue Jun 30 14:05:35 2015 UTC,"Like Jake said, ideally you only want to compute something once.  Android recycles Views used by your adapter when you scroll, so you'll needlessly perform the same computation over and over, unless you cache the computation in your data model."
androiddev,3bmkx7,trevor-e,2,Tue Jun 30 20:01:52 2015 UTC,"Ok, I understand! Thanks everyone for the precision."
androiddev,3bmkx7,Ciribu,3,Tue Jun 30 21:07:29 2015 UTC,"It's recommended to use the StringBuilder.  Java had (or still has) large performance issue with string concetenation, it's implementation was/is running in O(n2).  Here you can find some more java performance tips, and first tip is regarding the string concatenation operator (+)."
androiddev,3bmkx7,JakeWharton,4,Tue Jun 30 13:52:53 2015 UTC,"No. This is using a StringBuilder. The issue is related to the fact that the StringBuilder and underlying char[] allocation, expansion, and memcpy happens on every call to getView()."
androiddev,3bmkx7,myanmarking,1 point,Tue Jun 30 16:30:02 2015 UTC,"yo. so if we need to, for some reason do a string concatenation in getView, how would it be optimally done?  edit: hey jake btw. just updated ur butterknife to the latest version. Cleaner code i like it"
androiddev,3bmkx7,Ciribu,1 point,Tue Jun 30 17:01:09 2015 UTC,"I agree. As you said, ideally concatenation shouldn't be done in getView() and I would say including any other intensive operation, e.g. findViewBy().  But my answer was only concerning the string concat, which has to be done at some point, and at that point the StringBuilder is a better option."
androiddev,3bmkx7,JakeWharton,3,Tue Jun 30 17:42:50 2015 UTC,"firstName + "" "" + lastName uses a StringBuilder"
androiddev,3bmkx7,Ciribu,1 point,Tue Jun 30 17:49:11 2015 UTC,"Yes, you're right. That means, this one can also go to the 'java performance myths' pile."
androiddev,3bogza,LinuxUser1,2,Tue Jun 30 21:21:19 2015 UTC,https://www.udacity.com/courses/android  These courses were made by Google and seem to be the most up to date. A lot of courses I've found are still based off eclipse.
androiddev,3bogza,Ne0nguy,0,Tue Jun 30 21:40:16 2015 UTC,"$199/month seems a bit steep...  Not compared to costs of non-nano degrees at Community Colleges and/or Universities.  There are some free 'follow me' guides at Udemy  Edit: ~~ ~~but it IS an investment, and you get what you pay for in most cases."
androiddev,3bogza,thiswood,3,Tue Jun 30 21:51:07 2015 UTC,"All the course material is free, only if you want to obtain the nano-degree you have to pay."
androiddev,3bogza,Furyan,1 point,Tue Jun 30 22:04:20 2015 UTC,Not all of the courses cost money. But I have found them to be pretty helpful.
androiddev,3bogza,Ne0nguy,1 point,Tue Jun 30 21:56:04 2015 UTC,"Huh, I guess I just skimmed it and saw $199/month and didn't look any further.  Ah, now I see what I did, I kept idly clicking on Nano Degree adverts inside the page"
androiddev,3bogza,thiswood,1 point,Tue Jun 30 22:00:43 2015 UTC,They're for free.  For $200 you just get someone who helps you and extra stuff like exams which you don't really need.   All the important stuff(course materials) are for free.
androiddev,3bogza,Cravem,1 point,Tue Jun 30 22:05:01 2015 UTC,Install Android Sdk Develop apps Profit!
androiddev,3bogza,Swedophone,1 point,Tue Jun 30 21:28:20 2015 UTC,That depends on your current programming experience. Have you done any work with Java or another ALGOL-like language?
androiddev,3bogza,hotTACOcheese,1 point,Tue Jun 30 22:10:25 2015 UTC,"Yes, I have worked with java for a while now, but only on the desktop."
androiddev,3bogza,hotTACOcheese,1 point,Tue Jun 30 22:15:16 2015 UTC,"I'd recommend first learning the basics of Android through some of those videos that other users have commented. Android is very similar to pure Java. Then once you feel comfortable with the main building blocks, just try to pick any project that  you feel is doable and hack at it. Try to code what you can and look to github or stack overflow for anything trickier you want to implement. You can learn plenty of little tricks from looking through other dev's source code. The main thing that helped me was just to pick a project and work through it to completion"
androiddev,3bogza,swiftythesloth,1 point,Tue Jun 30 23:59:28 2015 UTC,Tim Buchalka's android courses are decent if you already have a bit of Java experience (he says you don't need any but you would in my opinion because he moves quite quickly).
androiddev,3bo82m,rkn7,4,Tue Jun 30 20:16:38 2015 UTC,User Java if you want to make a decent Android app. PhoneGap is a terrible solution.
androiddev,3bo82m,ZakTaccardi,1 point,Wed Jul 1 01:11:05 2015 UTC,This.   If you really want to mix Javascript and Android look at the Tizen SDK (Samsung uses this for their wearables).
androiddev,3bo82m,Atwelve,2,Wed Jul 1 15:45:20 2015 UTC,The standard toolkit. Learn it.
androiddev,3bn00s,blsiege,6,Tue Jun 30 15:05:41 2015 UTC,"I'd ask them to clarify what they mean by native. Depending on the context, they could mean the NDK (native Activities, etc.), they could mean APIs that are unique (""native"") to Android (Android components & utilities), or they could mean critical SDK API methods that make use of the JNI."
androiddev,3bn00s,mikenomn,2,Tue Jun 30 15:29:03 2015 UTC,It was in an interview I had. They just asked what Native Android API's I have used. Not sure what the best answer to that was.
androiddev,3bn00s,MagnetSys,1 point,Tue Jun 30 15:53:27 2015 UTC,"They were likely referring to Android platform APIs for things like connectivity, data, sensors, location, crypto, camera, etc. This is a common question for understanding whether a candidate is familiar with full stack or core Android development vs UI layers."
androiddev,3bn00s,MagnetSys,1 point,Tue Jun 30 16:27:15 2015 UTC,what would be some example data APIs?
androiddev,3blmiw,mgonto,2,Tue Jun 30 05:34:04 2015 UTC,"A misleading title and a little heavy-handed with the self promotion. This conflates Google's Smart Lock with a 3rd party service and left me quite confused for a few minutes.   No objection to you plugging your service at the end of the post, but this seemed like overreaching to me."
androiddev,3blmiw,notsilverfox,1 point,Tue Jun 30 12:37:14 2015 UTC,Thanks for the feedback. We won't do it this way next time. Didn't mean to make it missleading
androiddev,3bmlk5,shantil3,1 point,Tue Jun 30 13:05:23 2015 UTC,"Data scraping is not perfect, and relies on a clean source to parse, and the source can also change breaking your production data scraping, so data scraping in general is not recommended. Oauth is a typical method for authentication these days."
androiddev,3bjnxi,rphysphil,12,Mon Jun 29 19:43:26 2015 UTC,"Use different view types in your adapter.   private static final int VIEW_TYPE_EMPTY_LIST_PLACEHOLDER = 0; private static final int VIEW_TYPE_OBJECT_VIEW = 1; private List<Object> myData;  @Override public int getItemViewType(int position) {     if (myData.isEmpty()) {         return VIEW_TYPE_EMPTY_LIST_PLACEHOLDER;     } else {         return VIEW_TYPE_OBJECT_VIEW;     } }          @Override public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {     switch(viewType) {         case VIEW_TYPE_EMPTY_LIST_PLACEHOLDER:             // return view holder for your placeholder             break;         case VIEW_TYPE_OBJECT_VIEW:             // return view holder for your normal list item             break;     } }"
androiddev,3bjnxi,insane-cabbage,1 point,Mon Jun 29 21:00:00 2015 UTC,"I went a similar route once. This still needs a good way to stretch that single item to the size of the screen (for example if you intend to show a message like ""No items here"" in center). For vertical linear layout width is ok, but height is tricky: I ended up measuring parent view's height and setting it as a layout parameters to this item's view, but this is fragile and got broken the moment I added an item offsetting decoration to that RV... And this will break again if you decide to use a grid layout manager...  So that's all kinda hacky and I consider the best way is to be using a FrameLayout that contains RV and some TextView (layout_gravity = center) and switches between them."
androiddev,3bjnxi,dimsuz,1 point,Tue Jun 30 09:06:28 2015 UTC,"Well, why not set layout_width/layout_height to matchParent? Didn't test it yet, but that should do it.  Oh and while inflating the view, don't forget to add the parent view to the inflate() call, without attaching it:  inflate(R.layout.view_item_placeholder, parent, null);       Otherwise matchParent won't work since the inflater doesn't know the parent's dimensions."
androiddev,3bjnxi,insane-cabbage,1 point,Tue Jun 30 09:41:51 2015 UTC,It won't. I tried it and was speaking out of acual experience. LinearLayoutManager ignores layout_height.
androiddev,3bjnxi,dimsuz,1 point,Tue Jun 30 20:14:35 2015 UTC,"OK, that's weird.   Even when you set the RecyclerView to fixed height?"
androiddev,3bjnxi,insane-cabbage,1 point,Tue Jun 30 20:46:44 2015 UTC,That I didn't try. RecyclerView was match_parent/match_parent. It's just that LinearLayoutManager seems to measure with height set to wrap_content.
androiddev,3bjnxi,dimsuz,1 point,Tue Jun 30 21:35:30 2015 UTC,"I don't mean a specific height via layout params.  There's a setFixHeight() (or similar named) method, either in RecyclerView or in LinearLayoutManager."
androiddev,3bjnxi,insane-cabbage,4,Wed Jul 1 04:56:00 2015 UTC,"either   make one of the items an empty view, or put the empty view in the same parent view (linear layout or relative layout) and hide the recyclerview"
androiddev,3bjnxi,mrdibby,3,Mon Jun 29 21:00:11 2015 UTC,Take a look at Google's XYZTouristAttractions demo. In this project they have AttractionsRecyclerView. They handle empty state there. Here is the recipe to achieve that.   Take a LinearLayout with vertical orientation Put RecyclerView(AttractionsRecyclerView) and a View(TextView) there. In recyclerview's instance pass textview as setEmptyView(). Now you can set your adapter and this recyclerview will handle empty state itself.
androiddev,3bjnxi,lordVader1138,1 point,Tue Jun 30 03:09:56 2015 UTC,"I haven't tried it yet, but MultiStateView looks to be a good option."
androiddev,3bii44,ivacf,9,Mon Jun 29 14:34:12 2015 UTC,No toBlocking() mention? Can be handy in a pinch!
androiddev,3bii44,JakeWharton,1 point,Mon Jun 29 18:46:39 2015 UTC,+1 toBlocking especially in the data layer. nice and easy. toList also when i'm feeling particularly lazy with mass comparisons
androiddev,3bii44,moriartsy,1 point,Mon Jun 29 22:49:43 2015 UTC,does that work with retrofit observables?
androiddev,3bii44,bart007345,1 point,Tue Jun 30 09:54:58 2015 UTC,Never understood why BlockingObservable is not subclass of Observable
androiddev,3bii44,HannesDorfmann,2,Mon Jun 29 22:51:16 2015 UTC,because you can't do the same things to a BlockingObservable that you can to an observable.  For example you cant merge another observable into it.
androiddev,3bii44,prlmike,2,Mon Jun 29 23:26:13 2015 UTC,Nice work! Love the short and sweet blog posts.
androiddev,3bii44,mattlogan,2,Mon Jun 29 17:54:31 2015 UTC,"Another option is to inject your schedulers with Dagger. That way you can use a mock module or manual mock setup to inject Schedulers.immediate() into your tests.   I made a little object that manages a composite subscription and applies the schedulers, and I inject that into my presenters. All my Rx boilerplate can be managed in one place that way."
androiddev,3bii44,jimeux,1 point,Tue Jun 30 01:44:40 2015 UTC,"A bit too short!  My observables are usually asynchronous so I have to use  testSubscriber.await(1, TimeUnits.SECONDS)."
androiddev,3bii44,bart007345,2,Mon Jun 29 21:06:53 2015 UTC,Thank you so much for this.  I never figured out how to test async without doing .toBlocking().
androiddev,3bmahc,afCee,4,Tue Jun 30 10:57:10 2015 UTC,You could probably use the am command on devices using adb shell.  usage: am [start|instrument]    am start [-a <ACTION>] [-d <DATA_URI>] [-t <MIME_TYPE>]             [-c <CATEGORY> [-c <CATEGORY>] ...]             [-e <EXTRA_KEY> <EXTRA_VALUE> [-e <EXTRA_KEY> <EXTRA_VALUE> ...]             [-n <COMPONENT>] [-D] [<URI>]  adb shell am start -n com.google.android.contacts/.ContactsActivity   http://stackoverflow.com/a/5494891/2581151
androiddev,3bmahc,Jiboo42,1 point,Tue Jun 30 12:11:12 2015 UTC,"Yes.  I've got a script that uses this to start an app on a handful of devices at once for manual testing, very handy!"
androiddev,3bjk2f,donnfelker,3,Mon Jun 29 19:16:03 2015 UTC,"It does not mean that you have to use this, in fact if you’re using v21+ you can use android:tint attribute to colorize android pngs.   You can also use TintImageView   <android.support.v7.internal.widget.TintImageView             android:layout_width=""wrap_content""             android:layout_height=""wrap_content""             android:background=""@drawable/ic_icon""             android:backgroundTint=""@color/green""             android:backgroundTintMode=""src_over""/>  You can't use android:src   It's not in the android javadocs. I'm not sure why."
androiddev,3bjk2f,TiberiusAbadon,2,Mon Jun 29 21:59:40 2015 UTC,"Nice! Didn't know about this one. I knew about the one above, forgot its name, but this one I had not heard about. Good find!"
androiddev,3bjk2f,gatorviolateur,1 point,Mon Jun 29 22:12:16 2015 UTC,"I did not notice the subtle package name here. Keyword ""internal"". Usually anytime a package is placed inside of an internal package structure this traditionally indicates that the publisher (Android/Google) is stating that the class is not an externally supported API and could disappear at any time. This is why you're probably not seeing it in the javadocs.   I'd be careful using this one, it might disappear from under you at any time. :)"
androiddev,3bjk2f,cypressious,1 point,Tue Jun 30 04:53:55 2015 UTC,"It's not a huge class, so maybe you could just copy paste it directly into your project."
androiddev,3bibb8,amusice,6,Mon Jun 29 13:32:23 2015 UTC,"Company: GotChosen, Inc  Job: Senior and Junior Android Developers  Location: Orlando, FL  Allows Remote: No  URL: https://www.gotchosen.com  VISA: No  Feel free to email your resume to austinm@gotchosen.com  In your role as Android Developer, you will be working with a team of ~ 30 developers who are developing an entirely new native (iOS and Android) mobile applications which interacts with a REST API on our servers. The team works in conjunction with a UI team that is designing the interface for our native applications. It is fast-paced work in a relaxed environment. Due to the proprietary nature of our work, all development is done on-site.   Responsibilities  Developing robust Android applications as part of a team  Working with designers to ensure the designed interfaces are implemented correctly.  Ensuring we comply with best practices for user interface development, including accessibility and internationalization / localization  Collaborating with developers, QA members and management using the Agile Scrum project management methodology  Other duties as needed  Requirements  Experience with Java development and Android SDK  Experience with version control software, preferably Git or Mercurial  Experience building mature code (clean, self-documented and unit tested)  Experience consuming REST APIs that serve JSON  Experience using IDE debugging tools (Android Studio)  Experience working in an Agile environment  Experience creating keys and signing apps for testing and distribution  A deep understanding of creating custom views and life cycles  Familiarity with automation testing, builds, and continuous integration environment (preferably using Maven or Gradle)  Be familiar with concepts of dependency injection, and dependency injection libraries (using RoboGuice, Dagger, ButterKnife, or similar)"
androiddev,3bibb8,sleepynate,5,Mon Jun 29 21:54:24 2015 UTC,"Company: Detroit Labs  Job: Application Developer  Location: Detroit, MI, USA  Allows remote: Yes. We like our teams to be based in SE Michigan, near our two lovely offices, but we work remotely much of the time.  URL: http://www.detroitlabs.com/join  VISA: I'm not sure what this means. Is it ""We will help you get a visa?"" If so, then I think so – we have employees who commute from Canada. Don't take my word for it, I'm just an engineer.    We're a design and development firm who specialize in mobile apps. We like to turn other companies' ideas into products by setting our best-of-class engineering and design teams' minds to providing the best possible software experience forged from our clients' wants and needs. You, the novice to accomplished Android (or iOS!) developer would be joining a team of brilliant conference speakers, educators and mentors with anywhere from months to decades of experience of professional software development. We have an open workspace roughly divided only by project teams (though we have 5 quiet meeting/seclusion rooms for when it gets hectic) where the rest of your coworkers are available to bounce ideas off of, and we like to work together to solve problems. We work on well-funded projects from the automotive industry, major food retailers, utility companies, universities and scientific research – always something new and exciting.  Bonus points? Word on the street is that our fair city sports the best falafel and kebab this side of the Atlantic."
androiddev,3bibb8,sddamico,4,Mon Jun 29 22:21:48 2015 UTC,"Company: SeatGeek  Job: Android Engineer  Location: New York, NY  Allows Remote: No  URL: Apply here    SeatGeek is a live event ticketing startup in NYC (kind of like Kayak for event tickets). We have a small Android team working on building the best mobile ticketing experience on the platform. We’re looking to grow our team by finding engineers that are committed to building an uncompromising, delightful app and we're using modern tools like RxJava, Dagger and Espresso to get there. If interested, follow the link above or feel free to reach out to myself or Dallas directly on Twitter, @sddamico and @dallasgutauckis  For more information about working at SeatGeek, you can check out our jobs page, or our product development/engineering blog, Chairnerd."
androiddev,3bibb8,Richie681,5,Mon Jun 29 13:59:48 2015 UTC,"Cermperny: WillowTree  Jerb: Android Engineer  Lercation: Charlottesville, VA and Raleigh/Durham NC  Allows Remote: No  Url: http://www.willowtreeapps.com/careers/  Literally the best company to ever work for, ever, is looking for awesome people to join the team. We're a client services company that gets to work with a lot of really fun clients and on projects that make any mom proud.   We like good code and good fun, and if you have any questions feel free to ask away here or on Twitter or on G+.   Love,  Eric"
androiddev,3bibb8,Fate_Creator,3,Mon Jun 29 15:04:01 2015 UTC,"I'm a 2015 Computer Science graduate from UMN and have just relocated back home to RDU, currently looking for a Software Development position. Is there any chance you're looking for any Junior Developers?"
androiddev,3bibb8,theromeo3517,2,Mon Jun 29 16:31:52 2015 UTC,"Totally! We're looking for all experience levels especially for the Durham office. ""Android Software Engineer for Durham NC"" is the listing you probably want. PM me or Richie681 or any of us if you have questions about the company"
androiddev,3bibb8,PleaseDismantle,1 point,Mon Jun 29 16:43:48 2015 UTC,Did you guys make beerlamp?
androiddev,3bibb8,Richie681,2,Mon Jun 29 19:17:49 2015 UTC,"As much as that sounds like an app we would make, sadly we did not."
androiddev,3bibb8,PleaseDismantle,1 point,Mon Jun 29 19:52:01 2015 UTC,Aw. It had some of your custom pods inside so I assumed it was yours
androiddev,3bibb8,chap19150,1 point,Mon Jun 29 19:58:23 2015 UTC,sed -i 's/er/o/g' .
androiddev,3bibb8,graemeharnish,1 point,Tue Jun 30 21:01:26 2015 UTC,"Company: Nordstrom Job: Android Developer Location: Seattle, WA Remote: No URL: https://nordstrom.taleo.net/careersection/2/jobdetail.ftl?job=174838&lang=en&src=JB-10423"
androiddev,3bibb8,prlmike,1 point,Tue Jun 30 23:02:11 2015 UTC,"Company: New York Times  Job: Senior Android Engineer  Location: New York, NY  Allows remote: No  VISA: No  Come play/work with RxJava, Groovy and Dagger for one of the IO Material Design Award Winners. We have a fantastic team, flexible work schedule and a ton of growth potential."
androiddev,3bibb8,kwilmot,1 point,Wed Jul 1 11:51:40 2015 UTC,"Company: Spectralink Job: Embedded Software Engineer (Android Internals) Location: Boulder, Colorado, USA Allows remote: No (but will pay for relocation) URL: http://www.spectralink.com/company/careers VISA: Yes Located in beautiful Boulder Colorado, Spectralink is a product manufacturer and the products manufactured are special purpose built mobile devices designed to be utilized in an enterprise environment, also referred to as an “in-building” solution."
androiddev,3bibb8,rkcr,21,Tue Jul 7 20:47:06 2015 UTC,"I'm not going to type all that ;)   Just so you know, this makes your company look unappealing. Why would someone want to work at a place where they can't even be bothered to post the basic details about the job (or even a link to the job description)?"
androiddev,3bibb8,darkforestzero,-5,Mon Jun 29 14:30:07 2015 UTC,"Hi There, I was lying in bed and wrote that post from my phone. I'm sorry it came off poorly. Please don't hold it against my company. I'm just a happy engineer there. Hope you have a good day."
androiddev,3bibb8,darkforestzero,13,Mon Jun 29 14:58:10 2015 UTC,"That kind of attitude will get you lots of developers!  If you can't be bothered to type a couple of lines to make it clear to people what you're looking for, then why should anyone be bothered to apply?  Comes off as pretty arrogant. #2Kool4Rul3z"
androiddev,3bibb8,leggo_tech,-2,Mon Jun 29 17:29:24 2015 UTC,"Hi There, I was lying in bed and wrote that post from my phone.  I'm sorry it came off poorly.  Please don't hold it against my company.  I'm just a happy engineer there.  Hope you have a good day."
androiddev,3bibb8,darkforestzero,10,Mon Jun 29 14:59:37 2015 UTC,"Brainium. Got it. Mental note: ""Don't ever work there"""
androiddev,3bj4t6,mavdev,7,Mon Jun 29 17:27:52 2015 UTC,sure. make a better one. the kids love material design. you're not gonna find an app category that hasn't been broached so finding one that is fairly empty and the established players aren't keeping up with  design languages/are becoming too bloated makes for a perfect opportunity.  note that this app is all about functionality so while you're making yours pretty you should also make sure it actually works really well...
androiddev,3bj4t6,Cg2XHPxz,1 point,Mon Jun 29 19:28:58 2015 UTC,"It's not gorgeous, but why not Tasker?"
androiddev,3bj4t6,sli,1 point,Tue Jun 30 01:40:14 2015 UTC,"immensely popular   I never heard of it before now. But yes, it does look super ugly. And what is up with that long ass store description?   Anyways, don't most phones have this built in nowadays? The past 3-4 phones I used allowed me to set profiles based on which wifi I last connected to, without any app or anything.  Although this Llama app does look pretty focused on functions and usability, which allows users to get in and out of the ugliness as quickly as possible. But there's definitely a lot of room for prettier apps on the play store.   I recently upgraded my 3 year old app to material design, my ratings had been declining steadily for 1.5 years (thanks to rating widget), and amazingly they've now started to get back up again. Plus my downloads increased ~15%. I guess some people like to check out apps solely for having material design. So yea, presentation is everything when the consumer has a hundred alternatives."
androiddev,3bj4t6,lordoftherings911,1 point,Tue Jun 30 05:05:18 2015 UTC,"I use Llama over tasker, but then again, I dont do much other than change my settings.  I love it, its something I set up on 100% of my phones."
androiddev,3bj4t6,live4APM,0,Wed Jul 1 00:04:29 2015 UTC,Wrong sub
androiddev,3bmxie,SSG47,1 point,Tue Jun 30 14:46:35 2015 UTC,I signed up 2 weeks ago. It's a good deal and I'll be spending all of august going through 2-3 courses from this deal.
androiddev,3bmxie,foolofatook29,1 point,Thu Jul 2 14:25:56 2015 UTC,Thats awesome! Though I would be getting access in October; I am not a Beta Tester!  Anyways I strongly believe in community learning if you believe so then we got a partnership :)  Let's learn together!
androiddev,3bhsjm,BadPaddingException,10,Mon Jun 29 09:40:36 2015 UTC,"I would learn:  OO concepts  clean code  unit testing  integration testing  functional testing  libraries (these will come and go, but still good to know)  how to refactor and what it actually is  the best ways to do MV*  Design guidelines"
androiddev,3bhsjm,kireol,3,Mon Jun 29 16:03:32 2015 UTC,"Clean Code by Robert Martin is a fantastic book. It completely changed the way I code. It will be the basis for the 3 testing points listed by /u/kireol.  I would even go so far as to research Test Driven Development (TDD). The reason is that I find it hard to go back and write tests after I've developed a feature. If you start with tests first, you'll force your application to be testable. Hands up all the people who've ever written a new feature that broke something in old code. Every new feature means retesting the whole system again (and again). TDD might seem longer to get the code out at first, but when your tests pick up errors in old code without you needing to click through everything, again, for the millionth time..."
androiddev,3bhsjm,KamikazeHamster,6,Tue Jun 30 07:10:13 2015 UTC,"If you really want to achieve greatness, learn about good principles of software design. Google guidelines are questionable in a lot of places (inheritance everywhere, massive classes, no MVP advocation).  The libraries you mention need to be learnt but in the context of good design. Books to look at that change the way you write software such as Effective Java and Growing OO Software would be my start if you haven't read them already.  I'm assuming you already keep up to date with the UI libraries."
androiddev,3bhsjm,bart007345,2,Mon Jun 29 10:27:36 2015 UTC,"Not sure about design and marketing, but for pure android-fu, you can subscribe to http://androidweekly.net newsletter and http://fragmentedpodcast.com and  http://androidbackstage.blogspot.co.uk podcasts for starters, look up and experiment with stuff they are talking about.  Also, various meetups and conferences such as droidcon are a nice way to learn new things as well."
androiddev,3bhsjm,zmarkan,6,Mon Jun 29 10:40:38 2015 UTC,Thanks for the mention of our Podcast (Fragmented).   I also run the Android Dev Digest weekly newsletter as well - check it out and sign up here: www.androiddevdigest.com
androiddev,3bhsjm,donnfelker,2,Mon Jun 29 20:38:41 2015 UTC,Thanks for your hard work! Love sharing the episodes and discussing the topics with my team at work. Makes my hour commute much more bearable.
androiddev,3bhsjm,slothwerks,1 point,Tue Jun 30 02:36:51 2015 UTC,Thanks for listening! :) I'm glad you are enjoying it!
androiddev,3bhsjm,donnfelker,1 point,Tue Jun 30 13:23:29 2015 UTC,"Already suscribed on the androidweekly, thanks for the other recommandation.  I also forgot to ask: where to find state-of-the-art ways to organize my logic in terms of views/models/controllers. I know there are new patterns and models emerging. Where I can get a good grip of the current status of things?"
androiddev,3bhsjm,zmarkan,1 point,Mon Jun 29 10:43:18 2015 UTC,"there's loads of good links on MVP architecture in some older androidweekly editions. Also, just search this subreddit for MVP or architecture and you're bound to get some good insight"
androiddev,3bhsjm,theblang,1 point,Mon Jun 29 10:45:42 2015 UTC,Fragmented has been absolutely fantastic!  They have an episode (or two) on Rx.
androiddev,3bhsjm,slothwerks,1 point,Mon Jun 29 23:21:00 2015 UTC,"I'll second the podcasts. I listen to them on my long commute and feel like I learn a ton of new tricks. Fragmented in particular has been great the past few episodes. By the time I arrive at work, I always have some new trick to try in Android Studio, or some new library to explore."
androiddev,3bhsjm,philosophicalhacker,2,Tue Jun 30 02:35:52 2015 UTC,I second bart's recommendations. I also recommend Design Patterns: Elements of Reusuable OO software.
androiddev,3bhsjm,TotesMessenger,1 point,Mon Jun 29 14:43:15 2015 UTC,"I'm a bot, bleep, bloop. Someone has linked to this thread from another place on reddit:   [/r/ryanmiles] Becoming a tier-1 Android programmer? : androiddev   If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads. (Info / Contact)"
androiddev,3bhsjm,IWantToBeAProducer,1 point,Sat Jul 11 22:38:58 2015 UTC,"I would say the really big difference between the ""good programmers"" and the ""great engineers"" are people who understand the business, and the development process. Its not just a question of whether you can produce code, but can you also talk to customers, build quality measures into business, teach and mentor other developers, and communicate with non-developers in a way they can understand.  I love me a good programmer, but most of the time I don't needs someone with extremely high skill level or someone who understands super sophisticated programming methods. I mostly need a lot of people who are ""good enough"" coders, and who are excellent project managers and communicators."
androiddev,3bhsjm,pjmlp,1 point,Mon Jun 29 20:25:58 2015 UTC,"Exactly this. Every time someone comes to me with the idea to add X to a project, they have to explain the business value of it, because it's cool doesn't cut it."
androiddev,3bk578,Quaster152,0,Mon Jun 29 21:49:17 2015 UTC,"I thought I'd share this, I found it insightful."
androiddev,3bh8b5,timanglade,7,Mon Jun 29 05:02:43 2015 UTC,"I remain unconvinced by these attempts to get rid of fragments. Looking at Flow and Mortar, I can't really see any simplification nor advantages over fragments, just having to learn a very exotic API that reinvents a lot of the Android API's.  I'm not super happy with the way activities and fragments interact, but at least, they are solidly documented and with discipline, it's pretty easy to rein in their complex lifecycle interactions. And the benefit is that the OS takes care of a lot of tough problems for you, such as the back stack, configuration changes, density-based layouts, etc...  I give credit to Square for attempting to do better but Flow and Mortar are not our way out of this mess."
androiddev,3bh8b5,aldo_reset,1 point,Tue Jun 30 00:52:10 2015 UTC,"What I am confused by is why doesn't Flow on its own manage the state of the view hierarchy. That is essentially what Path does, and I just think it is strange that Flow itself doesn't manage state restoration and preservation of views on its own, only the history of the backstack."
androiddev,3bh8b5,Zhuinden,4,Tue Jun 30 06:24:53 2015 UTC,"These dagger-based codes baffle me. It just seems so much different than the kinda code we see in Android tutorials and stuff. I mean.. wth is this? :(  @Layout(R.layout.chat_list_view) @WithModule(ChatListScreen.Module.class) public class ChatListScreen extends Path {  @dagger.Module(     injects = ChatListView.class,     addsTo = RootModule.class) public static class Module {     @Provides List<Chat> provideConversations(Chats chats) {         return chats.getAll();     } }"
androiddev,3bh8b5,ASKnASK,2,Mon Jun 29 15:57:39 2015 UTC,"Annotations, my child."
androiddev,3bh8b5,SarcasmUndefined,1 point,Mon Jun 29 16:14:40 2015 UTC,"What's this Module? I'm somewhat familiar with annotations (aa in, I've used some)."
androiddev,3bh8b5,ASKnASK,1 point,Mon Jun 29 16:52:33 2015 UTC,Refer to this Dagger1 guide I wrote a while ago for more info.
androiddev,3bh8b5,Zhuinden,1 point,Mon Jun 29 17:17:04 2015 UTC,"That's actually the less confusing part.  @Layout(R.layout.chat_list_view) is an annotation, its value is ripped out of it in runtime using reflection with object.getClass().getAnnotation(Layout.class) then stored in a cache. You could replace it with an interface like LayoutHolder that you need to implement and returns public int getLayout() { return R.layout.chat_list_view; } instead of an annotation, it's just more verbose. Same applies to @WithModule, it is used to construct the module using its default constructor through reflection at runtime, you could replace it with an interface like ModuleFactory that has public Module getModule() { return new ChatListScreen.Module(); }.  @dagger.Module(injects = ChatListView.class, addsTo = RootModule.class) is specific to the Dagger 1 API, it means the module is capable of providing dependencies at injection to ChatListView, and module also gets all dependencies provided by the RootModule (think of this as a subgraph)  Then @Provides annotated stuff just means that you receive a Chats object, and when you want to inject a List<Chat> type into your ChatListView, then this is how it will ""provide"" it on injection."
androiddev,3bh8b5,Zhuinden,1 point,Mon Jun 29 17:13:09 2015 UTC,"The real question is, when does the Module receive Chats from the root module, or more-so when (actually that's a given) or how does the RootModule receive Chats in a real application."
androiddev,3bh8b5,Zhuinden,1 point,Tue Jun 30 05:24:30 2015 UTC,I guess you never actually intended to understand it. Shame.
androiddev,3bh8b5,Zhuinden,1 point,Wed Jul 1 10:42:13 2015 UTC,"Oh i do. Actually my current work project is almost complete and it would be tough to introduce Dagger into it now. Once I'm done with this, ill learn about it and make sure my next project has it integrated from start."
androiddev,3bh8b5,ASKnASK,1 point,Wed Jul 1 10:57:37 2015 UTC,"Dagger itself is just a dependency injection system.  What makes the code you quoted seem confusing is that they specify the provider module as a static inner class,  and the ""Chats"" is magically provided by an external module which in my opinion is a case too good to be true, unless it is the result of a realm query or something.  Any well-organized code that has the logic sliced into classes rather than überactivities is compatible with dagger."
androiddev,3bh8b5,Zhuinden,1 point,Wed Jul 1 11:12:17 2015 UTC,"'Mkay, check out the two parts of Flow+Mortar that I wrote in the last few days (part 1 and part 2)"
androiddev,3bh8b5,Zhuinden,3,Sun Jul 5 21:54:58 2015 UTC,"Even after watching this presentation, all I can think of is ""you just have to subclass PathContainer"". Then I see the code for SimplePathContainer, and I just don't want to use these libraries at all. :/  Is hacking services into the Application context getSystemService() method really all that much better than just having enum singletons? Binding Mortar and Flow to the ContextWrapper is what makes the code seem chaotic. And the destroyNotIn calls, and the traversal.onTraversalComplete() calls. It just looks like magic.   Great presentation though, definitely helps starting out. I was staring at the code for a while now, it makes a tiny bit more sense now. Although Path is still just weird."
androiddev,3bh8b5,Zhuinden,1 point,Mon Jun 29 17:28:44 2015 UTC,Best thing about it is that the SimplePathContainer in the samples is bugged. You need to clone the layout inflater service from the app context.
androiddev,3bh8b5,Zhuinden,1 point,Fri Jul 3 05:14:56 2015 UTC,"Actually all that required is the backstack logic and a Bundler Service so that the state can be reconstructed. So if I were to compare Fragments and Flow basically they are implementations of a similar idea (Backstack Management & state restoration). I would like to believe that one can technically achieve the same effect by using Fragments for state restoration and backstack management while using custom views for populating responsive UI screens.   The Flow.get(getContext()).set(new Paths.Friend(position)); is similar to the making the fragment transaction, except it is synchronous while the fragment transactions are synchronous.   EDIT  Flow and Mortar open up the possibility of nested layouts via custom views, while with fragments you will have a hard time."
androiddev,3bh8b5,kanwalmohit,1 point,Tue Jun 30 03:28:29 2015 UTC,"I have been using Flow & Mortar for 3ish months at work, I'm a fan.  The code separation the pair provides is probably my favorite part, testing the components of a Path(a fragment in the form of a custom view) is a joy.  That said, the complaints about code complexity and massive amounts of boilerplate are totally on point. You have to write a lot of code to get going with these libraries, but if you're up for it, it's totally worth it.  Edit: This library makes it easy to play with them: techery/presenta"
androiddev,3bh8b5,lolkittens,1 point,Tue Jun 30 05:46:26 2015 UTC,"I don't mind the boiler plate for setting up the flow delegate or mortar scope, what bugs me is that the SimplePathContainer is in the sample (meaning you are supposed to write it on your own), and I have no idea wtf is going on in the performTraversal method."
androiddev,3bh8b5,Zhuinden,1 point,Tue Jun 30 06:16:12 2015 UTC,"Yeah, I lumped the container in with the boilerplate.  It's basically just transitioning from one path to another. It handles inflating the layout for your paths and saving/loading the state from both the path you are leaving and the one you are going to.  Edit:  It might also be worth noting, as you transition to a new path you are taking the previous path's context and wrapping it again for the next path. The PathContext.destroyNotIn method will destroy a Path's context from that chain if it's no longer in the traversal history.  I'm fairly certain this is what's going on, I prefer not to think about the internals unless I really need to. There is no denying the magic that goes on with these libraries."
androiddev,3bh8b5,lolkittens,1 point,Tue Jun 30 06:47:41 2015 UTC,"I don't really think about the internals if there's proper documentation, and if this stuff isn't in the samples. Technically the SimplePathContainer is not an actual part of the library, so I should understand what's happening, haha.  The weird part about Paths is that it seems to contain the ""previous paths"" rather than just preserving the view state for a given element, but isn't knowing what the previous element is the responsibility of Flow library already?  So yeah, I'm pretty sure Path is in a flux. I guess the purpose here is to have a Context implementation that doesn't die on rotation (unlike the Activity that would be the default for the view). But managing the path context is strange, I think it knows more than necessary, and maintaining it gains nothing extra. Unless this is what prevents stuff from being GC'd."
androiddev,3bh8b5,Zhuinden,1 point,Tue Jun 30 07:28:40 2015 UTC,"Yeah, you won't get any a arguments from me. The lack of proper documentation is one of the biggest issues.  Yeah, PathContext is how it handles that. Your path would pretty much never directly care about previous paths. But when you want to change paths you would start with Flow.get(PathContext) and that let's flow add onto your application's flow of screens.  I really like this because if you do things right you can compose ""flows"" that are predictable and easy to test.  Example: TakePhotoPath -> SetPhotoFilterPath-> UploadPhotoPath.  Say you took a picture and you were in UploadPhotoPath and you wanted to change the filter. All you have to do is tell flow to go back, it will load SetPhotoFilterPath back up in the same state it was before. This kind of logical screen composition is really cool and something I have been wanting in android for a long time."
androiddev,3bhizs,hellotimmutton,1 point,Mon Jun 29 07:13:11 2015 UTC,I am also interested in this.
androiddev,3bhizs,echeese,1 point,Mon Jun 29 19:22:21 2015 UTC,It's surprising that this doesn't seem to be publicly available. It's easy enough to do it for your own app using most analytics packages.
androiddev,3bljmd,brady131313,9,Tue Jun 30 05:02:54 2015 UTC,Why aren't you in school?
androiddev,3bljmd,kevelbreh,2,Tue Jun 30 05:15:47 2015 UTC,"I'm in highschool, I just meant I don't have a computer science degree"
androiddev,3bljmd,kevelbreh,5,Tue Jun 30 05:34:18 2015 UTC,"Enjoy the ""free time to program what ever you want"".  That's what I'll recommend.  Not many programmers end up working at their dream job where they can program whatever they want."
androiddev,3bljmd,bbqburner,3,Tue Jun 30 07:55:44 2015 UTC,"Honestly, official full time employment is off the record since minors can't legally enter a binding contract (not sure about a few states like Indiana). You'll do better with freelancing and part time gigs."
androiddev,3bljmd,bart007345,2,Tue Jun 30 16:04:49 2015 UTC,What country?
androiddev,3bljmd,lemeure,2,Tue Jun 30 05:58:15 2015 UTC,"United States, Oregon"
androiddev,3bljmd,insane-cabbage,1 point,Tue Jun 30 06:07:45 2015 UTC,"if you are going to class at some kind of university, look for undergrad research positions, all they might require is some college experience, or equivalent.  At my school that is about being fluent in java and knowing basic data structures, aka the first year experience.  if you are only in high school the best you might be able to do is freelance work like building websites for friends and family."
androiddev,3bljmd,TODO_getLife,1 point,Tue Jun 30 05:33:11 2015 UTC,"From my experience employment ads just state what an ideal candidate would bring. However, the employers are aware that not all of the 'requirements' are met by the applicants.   I applied for jobs which required university degrees and still got them without finishing uni.  What counts in the end is, how well you convince them that you're the employe they're looking for.   Try to turn your 'disadvantages' into advantages. E.g. you can say you'll have a fresh look at things in comparison to older developers.   If your apps don't contain highly sensitive stuff, send them your code with the application, so they can get a grasp of your skills."
androiddev,3bljmd,iPaulPro,1 point,Tue Jun 30 09:55:14 2015 UTC,"Start learning, get experience (build your own apps in free time). Look for internships, but you really need to show you know how to code for a job. Even as an intern.   Maybe apply for testing roles as summer jobs? Get that degree, if you can, if not, you will need experience, so take those internships and try to turn them into real jobs after you leave school. Having your own apps will be a must for that, and one or two in the commercial world, whatever you can get."
androiddev,3bljmd,truck_lover,1 point,Tue Jun 30 11:13:07 2015 UTC,"It may be difficult at your age, but it really has nothing to do with a degree. You could always do some freelancing using elance or freelancer to build out your portfolio."
androiddev,3bljmd,fredgrott,1 point,Tue Jun 30 11:16:49 2015 UTC,Do you have a github account?
androiddev,3bgme8,DontTouchMySmuckers,5,Mon Jun 29 01:27:37 2015 UTC,"For work, typically our features are worked on through all the levels at the same time (backend, web, android, iOS) so I start with network to verify I have everything I need. Then going through each subtask: tested business logic, and simple ui to act it out. Then pretty up the ui. Repeat till the feature is complete.  For side projects, I just work on whatever I feel the most up to at the time."
androiddev,3bgme8,quinnjn,4,Mon Jun 29 04:49:10 2015 UTC,"Figure out the minimal viable product (MVP) as a starting point, that is the most basic version of your app - more than a prototype, but less than the end product with all the bells and whistles.  You can iterate on refining the design and adding to it later.       Step 1: Design - put together a rough draft of what the main screen looks like and where you can navigate to. Step 2: User flows - walk through how you will use the app and make sure all the flows feel right and let you achieve all your goals. Step 3: Create implementation stories in bite-sized chunks and come up with milestones.  i.e. get the main screen created with placeholders for navigation.  Step 4: Execute - work towards and deliver a milestone.  At each milestone, make a build that you give out to alpha/beta testers. Step 5: Iterate - work on next milestone, fix bugs, incorporate feedback from beta. Step 6: Ship version 1.0 and repeat process."
androiddev,3bgme8,jtgilkeson,3,Mon Jun 29 18:32:33 2015 UTC,"at work, we've been doing Agile for little over a year now.  No hard deadlines on app completion.  We chunk out work over 2 week sprints.  Daily team stand-ups for status, demos at the end of every sprint.. these keep us all moving pretty quickly.  It depends on a good project owner to prioritize tasks.  When execs start getting ansy, we start to coalesce around a release version, drop features if necessary, plan for updates, etc."
androiddev,3bgme8,alienwraith,2,Mon Jun 29 04:53:41 2015 UTC,"Besides the obvious (basic project skeleton, build process at start, release stuff at end), it really varies by project. Working in an agile methodology makes this process easier, as you just focus on your immediate needs based on feature prioritisation"
androiddev,3bgme8,hellotimmutton,2,Mon Jun 29 07:53:56 2015 UTC,"That. Making sure the skeleton runs from the command line (and the CI) and than everyone can start with a clean slate is crucial for agile dev process.  Every other feature can then be added onto that skeleton. We started with a blank home page and then added features into it.  Also:    Some architectural insight is always good to have as well. Does your app involve constant syncing of data, what kind of APIs you're consuming will help you define your architecture. If you don't have designs up front, but know your data contracts, it also makes sense to try the 'grey box' approach - where you just layout data in default views, styling them later on."
androiddev,3bj9or,Drsmall,5,Mon Jun 29 18:02:46 2015 UTC,"3500 interstitial impressions would get you maybe 50-100 clicks, depending on your skills as an AD/CW. That would give you anything between 1 to 20 installs assuming your app is free. And those might all be worthless installs from India or Pakistan. You need to do a lot of testing with the creatives to get the maximum number of installs."
androiddev,3bj9or,cihura,3,Mon Jun 29 19:37:36 2015 UTC,Yes it is a free app. How can I test without spending money?
androiddev,3bj9or,cihura,4,Mon Jun 29 19:55:05 2015 UTC,That's the shitty thing. You really can't.
androiddev,3bj9or,ampitupco,3,Mon Jun 29 19:57:47 2015 UTC,"$10 using this service or using AdMob (or Facebook, or Twitter) would be about the same.  No results to speak of."
androiddev,3bj9or,MyDogShitsTigers,2,Mon Jun 29 19:33:20 2015 UTC,There's no way of knowing. You haven't provided any details about your app or what app you'd be advertising with.
androiddev,3bj9or,if_man_is_5,1 point,Mon Jun 29 18:43:52 2015 UTC,I updated the description. I know it's hard and unpredictable. But would $10 with this guy go further than $10 with admob is my real question I guess.
androiddev,3beofj,dimsuz,38,Sun Jun 28 15:10:13 2015 UTC,"Just a reminder to anyone that uses this library and fragments, always unbind your views in onDestroyView() or else memory leaks abound!    Found this out the hard way, and was wondering why one of my apps (funny enough, the only one that uses ButterKnife) was having a memory leak, particularly with views. It's because I never unbinded them."
androiddev,3beofj,QuestionsEverythang,3,Sun Jun 28 21:31:56 2015 UTC,Thanks for this.
androiddev,3beofj,Trizelda,1 point,Sun Jun 28 22:35:32 2015 UTC,"By unbind, do you mean set to null? I don't do this, but my app doesn't have memory leaks. Unless you're fragments have setRetainInstance(true) set on them in which case you would need to do this regardless of ButterKnife usage."
androiddev,3beofj,grandstaish,3,Mon Jun 29 07:21:55 2015 UTC,"I assume he's referring the the new function unbind(Object), which replaces the reset function"
androiddev,3beofj,hellotimmutton,3,Mon Jun 29 07:34:00 2015 UTC,...which sets all bound fields to null
androiddev,3beofj,hellotimmutton,1 point,Mon Jun 29 07:36:44 2015 UTC,I wasn't trying to suggest otherwise. granstaish seemed confused as to what OP meant and I was just providing clarification
androiddev,3beofj,grandstaish,1 point,Mon Jun 29 07:51:59 2015 UTC,"same here - I provided a clarification for you clarification, didn't try to suggest that you said something wrong :)"
androiddev,3beofj,QuestionsEverythang,3,Mon Jun 29 08:46:45 2015 UTC,"Nice, hadn't seen that method before. Essentially a shortcut for nulling out all of the @Bind references on an object.   I totally just realised the reason behind it too. It's because fragments, even ones with setRetainInstance(false) live longer than their views. E.g. onDestroyView is called, but onDestroy isn't.  I need to update my app.   Edit: for anyone reading this though, this still applies regardless of whether or not you use ButterKnife."
androiddev,3beofj,jackhexen,1 point,Mon Jun 29 07:46:01 2015 UTC,Yes that's what I meant
androiddev,3beofj,Zhuinden,1 point,Mon Jun 29 13:46:19 2015 UTC,This is why docs do exist. Read them before using those libs. :D
androiddev,3beofj,moriartsy,1 point,Mon Jun 29 13:40:16 2015 UTC,"Wait a second, but Fragments get detached and have their views destroyed in onDestroyView(). Why would you need to explicitly set them to null?"
androiddev,3beofj,KirbzStar,1 point,Mon Jun 29 17:35:01 2015 UTC,"this is true. LeakCanary will go all kamikaze on you, if you had not done this :P"
androiddev,3beofj,Nilzor,1 point,Mon Jun 29 22:58:26 2015 UTC,"I find it odd that on the website, it shows how to use binding in fragments early on, but the unbinding is near the end of the page. For something so important, you'd think that the two pieces of information should be tied together."
androiddev,3beofj,JakeWharton,10,Tue Jun 30 12:48:46 2015 UTC,So.. is Butterknife now competing with Android MNC Databinding? Or is / will Butterknife use Android Databinding under the hood?
androiddev,3beofj,Nilzor,22,Sun Jun 28 16:52:21 2015 UTC,Competing. I have no interest in that data binding solution.
androiddev,3beofj,JakeWharton,3,Sun Jun 28 16:55:24 2015 UTC,What are your main issues with Google's solution?
androiddev,3beofj,Nilzor,17,Sun Jun 28 16:59:58 2015 UTC,It puts code in XML. It's great for trivial things and terrible at scale. You simply cannot effectively express complex relationships and composition of data inside of an XML attribute.
androiddev,3beofj,cbruegg,14,Sun Jun 28 17:13:54 2015 UTC,"Well there's a right way to use it and a wrong way. You can do databinding without putting code in XML, which I of course agree 100% with is wrong. I cringe when I see their Expression Language chapter. They suggest for instance:  android:visibility=""@{age &lt; 13 ? View.GONE : View.VISIBLE}""   This is code in XML. It gives me vibes of ASP code written in 2001 by interns. Google should be teaching good programming by example. What I mean would be a better example:  android:visibility=""@{viewModel.visibility}""   ..and have a supporting class with the logic  public class SomeViewModel {     public int visibility;     public int age;     public void update() {         visbility = age < 13 ? View.GONE : View.VISIBLE;     } }   Using it this way wouldn't make Google's databinding a far cry from yours. It's just that the databinding is defined in the XML file instead of the Java class. Semantics."
androiddev,3beofj,ZakTaccardi,2,Sun Jun 28 18:38:22 2015 UTC,Exactly. Windows developers call this the MVVM pattern and it can be very clean.
androiddev,3beofj,stackinpointers,2,Mon Jun 29 08:02:06 2015 UTC,well you will soon be able to bind XML directly to viewmodel methods.  https://code.google.com/p/android-developer-preview/issues/detail?id=2097
androiddev,3beofj,Nilzor,4,Thu Jul 9 18:40:48 2015 UTC,They suggest    Do not confuse a proof-of-concept with a suggestion.
androiddev,3beofj,nathanrjones,6,Sun Jun 28 20:37:29 2015 UTC,"All I know is that when Google posts examples in their documentation, someone is gonna copy-paste it."
androiddev,3beofj,HaMMeReD,1 point,Mon Jun 29 09:16:58 2015 UTC,"This is really similar to the data-binding in Knockout.js, which suffers from the same potential problems.  It's definitely best to data-bind to a semantic property and keep all the logic in your classes, like you suggested."
androiddev,3beofj,jackhexen,1 point,Sun Jun 28 19:57:18 2015 UTC,"You ever do any WPF coding?  Not that I'm a fan of how XML heavy WPF is, but it seems to work well for the microsoft guys.  Edit: Btw, I just put up a open source project using butterknife in it. https://github.com/ahammer/StockSimulator/"
androiddev,3beofj,JakeWharton,0,Sun Jun 28 19:49:43 2015 UTC,"also from the brief look at it I got the impression that they basically copied some bits of rxjava interfaces in their observing support, got some ""reinvent the wheel"" feeling from it. but I might misunderstood, didn't dive too deep, just glanced over."
androiddev,3beofj,Categoria,0,Sun Jun 28 17:48:50 2015 UTC,"I didn't try google bindings yet, but I remember from other frameworks that such things are absolutely ineffective. I wish you good luck on the way. ;)"
androiddev,3beofj,tadfisher,3,Sun Jun 28 17:21:36 2015 UTC,I spent 2.5 years doing XAML and it was pretty bad. It really forces you into MVVM just to avoid putting anything but basic view-model mappings in the XML.
androiddev,3beofj,artem_zin,1 point,Sun Jun 28 17:27:04 2015 UTC,Facebook's react really takes the correct step here IMO. Your views aren't second class hence should not be written in a second class shitty markup language without the power of a real programming language. This is apparently sacrilege in this subreddit.
androiddev,3beofj,JakeWharton,5,Sun Jun 28 18:47:05 2015 UTC,"React components implement one-way binding to dumb views, in which case it doesn't really matter whether the view is defined in XML, JS or Brainfuck. Of course you have the power of Javascript to implement something ridiculous in the view layer, in which case you lose pretty much all the benefits of React.  Either you want ""smart"" views with all of the dangerous power and complete flexibility of a Turing-complete language, or you want ""dumb"" views with a degree of immutability that force any and all complexity out into testable components (i.e. the ""presenter"" or ""view-model""). Something in the middle (such as an expression language inside a markup language) gets you the worst of both worlds.   So your argument is really one of semantics. You can use a DSL or fluent Java pattern to define views (and many frameworks have been written to provide such a system), but you run into the same separation-of-concerns problem as an expression language inside XML. For example, if you place logic in your view definition to hide an element if the user is under 13 years of age, how would you test this logic without either testing output blackbox-style or mocking out the entire view rendering system?"
androiddev,3beofj,imsrslyyouguys,1 point,Sun Jun 28 19:33:26 2015 UTC,"Wow, you've worked on Windows Phone apps? (If so, what Image Loading Library did you use?)  MVVM was nice, especially after callback-hell-oriented Android Development.   Two-way data binding made app ""reactive"" before it became mainstream: changing of property in ViewModel refreshes the ui automatically and change of one property can trigger changes of chains of other properties, also ui could change some property of ViewModel and you can handle it in the code pretty easily.  But implementing custom list view cells with XAML and Silverlight Views was so hard, that I had to wrote something like Android's ListView for that… Those were good times!  Three-two years ago I'd prefer WP's MVVM + XAML for things like ""Sign in"" screen and so on, but now with RxJava we can have clean and nice solution for such things on Android."
androiddev,3beofj,obscurezydeco,2,Sun Jun 28 23:04:55 2015 UTC,It was only a desktop C# app. Only toyed with Windows Phone apps.
androiddev,3beofj,QuestionsEverythang,8,Mon Jun 29 00:31:20 2015 UTC,So....I now need to replace every single @InjectView in my code with @Bind?
androiddev,3beofj,ridsatrio,13,Sun Jun 28 17:17:41 2015 UTC,"Replace all in path, always so satisfying to use"
androiddev,3beofj,augustuen,-1,Sun Jun 28 18:03:06 2015 UTC,Something users of Eclipse may or may not have trouble with. Meanwhile on Android Studio...
androiddev,3beofj,Saketme,1 point,Sun Jun 28 21:50:36 2015 UTC,Err you can do this too on AS. Go to 'Edit' -> 'Find' - > 'Replace in Path..'
androiddev,3beofj,imsrslyyouguys,4,Sun Jun 28 21:59:43 2015 UTC,"Yeah, but /u/QuestionEverything was talking about how it doesn't always work in Eclipse, compared to AS."
androiddev,3beofj,QuestionsEverythang,1 point,Sun Jun 28 23:22:26 2015 UTC,Is @InjectView deprecated or removed?
androiddev,3beofj,Saketme,5,Sun Jun 28 17:28:39 2015 UTC,@Bind replaces @InjectView and @InjectViews.   Not sure if it's deprecated or removed though. That's why I'm asking. I'm pretty new to software development so I'm not entirely sure what to do when a library that I'm using is updated like this.   Should I instantly check what is changed and start changing my code?
androiddev,3beofj,greenday5494,1 point,Sun Jun 28 17:43:10 2015 UTC,It's been removed completely
androiddev,3beofj,imsrslyyouguys,1 point,Sun Jun 28 21:10:54 2015 UTC,Yes. You can always revert using VCS.
androiddev,3beofj,mrdibby,1 point,Mon Jun 29 05:30:06 2015 UTC,Why did they replace them in the first place is what I want too know
androiddev,3beofj,GoldDog,3,Sun Jun 28 19:30:17 2015 UTC,"Well, I don't know what @InjectViews did because I never used it, but it seems to me that they simply combined 2 annotations (@InjectView and @InjectViews) into one (@Bind) which is nice."
androiddev,3beofj,shadowdude777,2,Sun Jun 28 19:34:56 2015 UTC,I think @InjectViews created an array or list of views from an array of IDs
androiddev,3beofj,lordoftherings911,2,Sun Jun 28 19:54:55 2015 UTC,I'm going to guess it's because people kept mixing up what ButterKnife with dependency injection because of the similarity between @Inject and @InjectView
androiddev,3beofj,Nawsnap,0,Sun Jun 28 22:20:18 2015 UTC,"It shouldn't be too hard, in this case a global Ctrl+F should suffice. And really, ""Bind"" is the right term for what ButterKnife does. ""InjectView"" was always confusing."
androiddev,3beofj,QuestionsEverythang,2,Sun Jun 28 22:49:57 2015 UTC,"Awesome!   But this part is still just as ugly     View view = LayoutInflater.from(context).inflate(R.layout.thing, null);   TextView firstName = ButterKnife.findById(view, R.id.first_name);   TextView lastName = ButterKnife.findById(view, R.id.last_name);   ImageView photo = ButterKnife.findById(view, R.id.photo);   I tend to use the above in a lot of places with dialogs and stuff. I wish I could just @Bind(something) within a method itself, and not have a huge bundle of @Bind's at the top. Local scope is best scope. But that's more of a Java issue I guess."
androiddev,3beofj,crackshot87,4,Sun Jun 28 18:57:37 2015 UTC,"ButterKnife.findById(view, R.id.first_name);   Why not just use view.findViewById(R.id.first_name) in that scenario?"
androiddev,3beofj,dkozel,8,Sun Jun 28 21:23:28 2015 UTC,Probably for consistency and the fact you don't have to cast the view if you're using ButterKnife.
androiddev,3beofj,pakoito,1 point,Sun Jun 28 21:51:47 2015 UTC,"I guess, but it feels like not much (if any) of a typing saving - really minor point anyways."
androiddev,3beofj,hellotimmutton,1 point,Mon Jun 29 19:13:42 2015 UTC,ButterKnife is all about clean code and syntactic sugar. The findById case is one of the more cotton candy-esque features in the library.  http://jakewharton.github.io/butterknife/#bonus
androiddev,3beofj,BestSanchez,0,Wed Jul 1 14:50:53 2015 UTC,Because it caches references in the parent's tags the same way you had to do it on ViewHolders for ListViews. Any subsequent lookup becomes way faster.  EDIT: Apparently not.
androiddev,3beofj,eigenaar,2,Mon Jun 29 01:24:27 2015 UTC,"Do a static import of ButterKnife.findById, doesn't make it pretty but makes it slightly less ugly"
androiddev,3beofj,hellotimmutton,1 point,Mon Jun 29 07:36:03 2015 UTC,"Yes, I miss this too. And yeah, seems like a java issue."
androiddev,3beofj,jackhexen,6,Sun Jun 28 19:04:35 2015 UTC,Is it really that hard to write findViewById on your views? I'm trying hard to find use in butterknife but it seems barely useful.
androiddev,3beofj,ZakTaccardi,9,Sun Jun 28 21:59:33 2015 UTC,"I thought so too for a long time, but then I tried it and was blissed in awe. It has more than view binding: it has various nice boilerplate reducers like @OnClick, @OnTextChanged, @OnFocusChanged etc.  So I'd urge you to try it once and see for yourself. If you find no use, then maybe it's not your thing. But I liked it very much. Just stopped making assumptions about wheter it's useful or not and simply tried to use it."
androiddev,3beofj,jackhexen,1 point,Sun Jun 28 22:05:03 2015 UTC,"It's a small convenience, but it's nice. It keeps the field and the View's id lookup together. That makes it easier to a new View to your class, because you're only adding code in one place. It also helps when you're figuring out usage of a View"
androiddev,3beofj,donrhummy,1 point,Mon Jun 29 04:15:57 2015 UTC,"Before butterknife, far too much of my code was dedicated to   TextView blah = (TextView)view.findById(R.id.something);   Using butterknife lets me take that code out of my oncreate method, which makes the code a lot cleaner"
androiddev,3beofj,umanx,1 point,Mon Jun 29 07:50:08 2015 UTC,"This is not just a shortcut - it allows you to have all your view binding in one place, so you don't have to scroll too much, so you can focus on other things more. Programming is like focusing on one thing to make it done. When I need to scroll I understand that I'm doing something in a suboptimal way."
androiddev,3beofj,Iron_Maiden_666,4,Mon Jun 29 13:44:34 2015 UTC,Some nice additions in here!
androiddev,3beofj,JakeWharton,2,Sun Jun 28 15:41:39 2015 UTC,Let's take a look (editing build.gradle)
androiddev,3beofj,Saketme,-6,Sun Jun 28 16:18:44 2015 UTC,why do these things always have names that tell you nothing? makes very hard to find in search
androiddev,3beofj,thevoiceless,5,Sun Jun 28 19:39:43 2015 UTC,"Can't speak for all, but Square libraries are pretty cleverly named. Butterknife is for only ""view injection"", therefore it is named after a much blunter tool than Dagger, which does actual Dependency Injection. Picasso was an artist, and thus the library name. And Otto is the bus driver in Simpsons."
androiddev,3biakp,rubsnick,2,Mon Jun 29 13:25:17 2015 UTC,"Just integrate with the built-in VCS for Git in AS. Once integrated with the VCS, you'll get all those you wanted for free (color coded highlight even. Blue: changed. Green: added. Triangle thingy: line deleted).   Tons of other neat features especially with Multi selection + key shortcut in version control view/project view. I barely use Git client anymore after using the built in VCS integration.  Edit: Quick pic on what it looks like once integrated http://imgur.com/UoZOCAR Edit 2: Another pic to show line deletion and extra additions: http://imgur.com/bL2Zc9F"
androiddev,3biakp,bbqburner,1 point,Mon Jun 29 14:28:40 2015 UTC,I turn on 'show whitespace'  or something like that. You can then see spaces and tabs in the IDE.   http://stackoverflow.com/questions/25500123/how-to-show-white-space-character-in-android-studio-as-eclipse-tool
androiddev,3bkymf,sajattack,4,Tue Jun 30 01:53:52 2015 UTC,"It's not, at all, clear what this does. Pro tip: Using Cupcake screenshots makes the lib feel dated."
androiddev,3bkymf,iPaulPro,2,Tue Jun 30 11:02:01 2015 UTC,"You know, there came a NavigationView with the design support library which is pretty handy, because it just takes a menu resource and can take a layout for the header. Sorry :S"
androiddev,3bkymf,insane-cabbage,2,Tue Jun 30 04:36:59 2015 UTC,"Wow, old school!"
androiddev,3biy7g,will_r3ddit_4_food,1 point,Mon Jun 29 16:39:22 2015 UTC,"There are plenty of examples out there regarding custom views, so I'm assuming you've just not broken down the problem enough. For each of these bullet points, you should be able to Google for some information on how to achieve what you want;   Extend Android's ""View"" class. Initialize with the number of steps you want (or optionally have methods to update the number of steps dynamically, though this is a little more advanced). When you've got the View's width/height, you can calculate how far apart your steps need to be. Override onDraw(Canvas) and draw your custom elements. If you want steps to change color smoothly then you'll probably need a ValueAnimator in there as well."
androiddev,3biy7g,superhappyrobots,1 point,Mon Jun 29 16:52:13 2015 UTC,Thanks! I'll look into these topics.
androiddev,3biy7g,quinnjn,1 point,Mon Jun 29 16:53:44 2015 UTC,"There are a couple libraries like this out there. Here is one I found with a quick search, but I do recall seeing more out there more like what you requested.  https://github.com/chenupt/SpringIndicator"
androiddev,3biy7g,iPaulPro,1 point,Mon Jun 29 16:55:32 2015 UTC,This looks awesome but it looks like it requires a viewpager. Thanks!
androiddev,3bin7a,lordoftherings911,2,Mon Jun 29 15:16:10 2015 UTC,"You could start by reading Fowler's Refactoring book. There's a lot of general advice about methodology as well as practical techniques you can apply. If you've got any methods that are 200 lines long and doing 10 different intertwined tasks, then I'd read it pretty urgently, but you can still get something out of it even if writing modular, well-abstracted code is already common sense to you.  I think the importance of good naming can't be overstated. If you have a block of code in a method that you can't reason about in 3 seconds, then pull it out into a method with a name that tells you in half a second. If you have a bunch of related methods, you can pull them out into a class that describes them. If you have a cryptic condition in an if statement, pull it out into a variable that tells you what it expects.   Writing tests can still be a bit painful on Android, and it's even harder if you're writing them after the fact. I think the minimum you should aim for, and the most useful for refactoring, are those that essentially document your code. A good test can both document and confirm programmatically that, ""If I click this button, then I expect this to happen."" When you come back 3 months later, you know what you designed the code to do, and when you make changes, you know if you've broken anything."
androiddev,3bin7a,jimeux,1 point,Tue Jun 30 02:58:19 2015 UTC,I think that each case is individual depending on where you are now and where you want to go. Invent a series of steps and move on.   If you want to apply a new tech it is a very good idea to create a separate project where you can play with it and answer any question you have and make it absolutely sure that everything is working exactly as you expect from reading docs/guides.
androiddev,3bin7a,jackhexen,1 point,Mon Jun 29 15:53:09 2015 UTC,Its best if you decide what better looks like first.  For me this means clean code and unit tests.  I keep my Activities/Fragments/Adapters light (since I don't test them) and move logic into presenters that make calls to library classes. All classes except simple framework classes have unit tests.  Adding tests to existing code is the hardest thing to do after writing tests while writing production code for the first time.  I work on legacy apps that don't have tests so the rule is to add them to new code and try and rewrite existing code with tests where I can. Its a long road but worth it.
androiddev,3bin7a,bart007345,1 point,Mon Jun 29 21:18:36 2015 UTC,Simple rules I figured out:   Rip out parts of logic into methods Rip out methods into classes Inject classes into the other classes using DI   Extract Method is your best friend.
androiddev,3bin7a,Zhuinden,1 point,Tue Jun 30 07:43:00 2015 UTC,Rip out methods into classes   What?   Extract Method   What does that even mean?
androiddev,3bin7a,changingminds,1 point,Tue Jun 30 08:26:50 2015 UTC,Extract method is a feature of Android Studio
androiddev,3bij6f,zpepsin,3,Mon Jun 29 14:43:30 2015 UTC,"Please don't do on the client what's clearly a job for the server!   turn your comma separated strings into JSON format add pagination so you only process it in smaller batches, when you need them consume using Retrofit, Volley, Ion or similar libraries, mapping JSON with Gson or Jackson libraries."
androiddev,3bij6f,zmarkan,1 point,Mon Jun 29 15:07:31 2015 UTC,"Unfortunately the files are being pulled raw from a website so I have no control over their format  (they're basically a folder of CSV files).  Unless you are recommending converting them to JSON after download, saving them in JSON format, and then parse the JSON when I need to access them?  As for pagination, out of all the lines in the file sometimes only a small number of lines in a list view are displayed.  In this case I don't think pagination is efficient."
androiddev,3bij6f,zmarkan,4,Mon Jun 29 15:16:41 2015 UTC,No. I'm recommending you to do the preprocessing somewhere else - on a server you control behind a nice API. That can then go to the website and grab the data (maybe even cache it).  If you're only interested in a few lines then you might add a filtering option to that API and only request the ones you require.    In any case if you're downloading 400k lines of data in one go that smells of bad design as apps themselves should never do that much heavy lifting and there is no other way that you can make it more efficient.
androiddev,3bij6f,zmarkan,1 point,Mon Jun 29 15:46:58 2015 UTC,"Ah I see.  The downloading isn't what takes long.  Also, the files only need to be re-downloaded every month or so when they are updated.  Is there a way to simply serialize and store a complex custom class on the phone that can be parsed, rather than re-creating the object every time it is needed?"
androiddev,3bij6f,zmarkan,1 point,Mon Jun 29 16:00:55 2015 UTC,besides using a database?
androiddev,3bij6f,zmarkan,1 point,Mon Jun 29 16:09:50 2015 UTC,yeah.  I'd rather prevent doing anything on a server since this is just a small project I'm doing.  Unless I can create the database efficiently on client side.  Edit: One option I think I may explore is to serialize the class and store it in a file.  However I haven't tried serializing nested classes.  Not sure if that gets messy.
androiddev,3bij6f,bart007345,1 point,Mon Jun 29 16:13:23 2015 UTC,"wasn't talking about server side - android already has support for sqlite db, so maybe you can use that for persistence"
androiddev,3bhonf,mazurio,3,Mon Jun 29 08:41:35 2015 UTC,"Is this an official support library?  This lib doesn't make much sense, there is a good reason why percent is not supported by default on Android, why add it now? UI widgets need to be big enough, after that you just wast screen real estate."
androiddev,3bhonf,Paradiesstaub,2,Mon Jun 29 08:56:12 2015 UTC,you can already use weight for this. so it is supported by default.
androiddev,3bhonf,1ntel,1 point,Mon Jun 29 13:55:23 2015 UTC,It's official v7 support according to gradle file. What's the good reason for this not to exist?
androiddev,3bhonf,prlmike,1 point,Mon Jun 29 12:30:07 2015 UTC,"The linked page looks like Google stuff but it seems it is not, the domain is juliengenoud.github.io."
androiddev,3bhonf,Paradiesstaub,1 point,Mon Jun 29 13:01:32 2015 UTC,It is a sample that someone made.  I'm assuming they worked on the feature @ Google.
androiddev,3bhonf,prlmike,1 point,Mon Jun 29 13:29:22 2015 UTC,What is this 'good reason' ?
androiddev,3bhonf,desmin88,1 point,Fri Jul 3 05:34:44 2015 UTC,"UI widgets need to be big enough, after that you just wast screen real estate."
androiddev,3bj9lx,mavdev,1 point,Mon Jun 29 18:02:11 2015 UTC,"Yes I have, the app is called Nightcrawler on the play store. I'm actually working on a major update for it right now. And have a plan for another places app in the future.   It's pretty simple to use, but you gotta jump through some hoops to use it, the worst of which being that you need to put in credit card information to get a private API key to be able to make more than some hundred calls per day. Once you sign up I believe it's 100,000 api calls per day for free, with more available upon request. Did you have a specific question?"
androiddev,3bj9lx,elbowmeat,1 point,Mon Jun 29 18:41:41 2015 UTC,"No specific question, I just like the api but haven't been able to come up with a compelling app idea to use the api. Couldn't find your app named 'Nightcrawler', many came up.  One question would be - is the Documentation on Google accurate as per the Api?"
androiddev,3bj9lx,elbowmeat,1 point,Mon Jun 29 18:57:01 2015 UTC,"Here's the app  Pretty awful UI, and some bugs at the moment. Haven't touched it for like 2 years, but I'm getting back into it.  As for the documentation, I would say it was really good for my needs, answered all questions. I found the api very straight forward, and it was my first time ever even using an api. As for the app ideas, that's what plagues many devs :) just choose a fun idea and run with it. For me, a friend and I were up late one night studying for finals and wondered what places were open to eat nearby. That's what conceived the app, and we just made it for our own needs."
androiddev,3bj9lx,BestSanchez,1 point,Mon Jun 29 19:28:29 2015 UTC,Just made a really simple rinky dink app with it actually. Just needed the getAutocompletePredictions() api call.   App is here  Code is here
androiddev,3bj9lx,piyanypowietszem,1 point,Tue Jun 30 06:31:13 2015 UTC,hey cool... thanks for sharing.
androiddev,3bj9lx,EmmSkav,1 point,Tue Jun 30 14:55:39 2015 UTC,"I've got an app . Some points to remember:   be ready to give your credit card info, you will only get 1,000 requests without it vs 150,000 a day there is a bug in the example project when trying to type too fast in the autocomplete text field attributions, you will need to put Google branding works even better when you can check user's location and set Bounds around him, it will show much better predictions   I used it to quickly grasp some address with gps coordinates and pinpoint it on a map"
androiddev,3biez5,SSG47,3,Mon Jun 29 14:07:16 2015 UTC,"Amazon AB Testing is totally free.  I've used it in production in a fairly large scale app.  Worked without any issues (but beware that some data can be cached for a few minutes). The UI is a bit clunky though (like most Amazon things).  You don't need to publish you app on the Amazon store or anything.  As for how it works - in most cases you have all the code in the app to execute either 'code-path' (A or B).  But you only do one or the other, based on a variable you get from your A/B test provider API. Or you can do something like set a price to an A/B test variable.    Normally you don't download any code though."
androiddev,3biez5,Flaste,1 point,Mon Jun 29 15:13:26 2015 UTC,Was really helpful! Thanks!
androiddev,3biez5,gfp7,2,Mon Jun 29 15:23:21 2015 UTC,Check out this post from last week on Google's random release of splashscreens without pushing any updates.
androiddev,3biez5,sambarboza,2,Mon Jun 29 14:16:40 2015 UTC,You could do it by randomly choosing between two numbers at first start (then storing this number for future app starts). Then app sends analytics events separated with this randomly chosen number.
androiddev,3biez5,thepoosh,1 point,Mon Jun 29 14:35:25 2015 UTC,Thanks mate!
androiddev,3befge,panwrona,6,Sun Jun 28 13:32:56 2015 UTC,"Can confirm, it's  awesome"
androiddev,3befge,iC-Sharp,1 point,Sun Jun 28 18:51:18 2015 UTC,"Thank you, really apprecieate it ;)"
androiddev,3befge,anewguy03,2,Sun Jun 28 18:54:35 2015 UTC,"Nice.  Saving this for later (if you don't mind, of course :-))"
androiddev,3bhmga,yariok,3,Mon Jun 29 08:06:15 2015 UTC,"To be fair, the only way to be sure that the device can connect to a remote website is to try a simple request. You can for example try to reach m.google.com  public static void isNetworkAvailable(final Handler handler, final int timeout) { // ask fo message 0 (not connected) or 1 (connected) on 'handler' // the answer must be send before before within the 'timeout' (in milliseconds)  new Thread() {     private boolean responded = false;        @Override     public void run() {          // set 'responded' to TRUE if is able to connect with google mobile (responds fast)          new Thread() {                   @Override             public void run() {                 HttpGet requestForTest = new HttpGet(""http://m.google.com"");                 try {                     new DefaultHttpClient().execute(requestForTest); // can last...                     responded = true;                 }                  catch (Exception e) {                 }             }          }.start();          try {             int waited = 0;             while(!responded && (waited < timeout)) {                 sleep(100);                 if(!responded ) {                      waited += 100;                 }             }         }          catch(InterruptedException e) {} // do nothing          finally {              if (!responded) { handler.sendEmptyMessage(0); }              else { handler.sendEmptyMessage(1); }         }     } }.start(); }   then you define the handler  Handler h = new Handler() { @Override public void handleMessage(Message msg) {      if (msg.what != 1) { // code if not connected      } else { // code if connected      }    } };   and launch the test isNetworkAvailable(h,2000); // get the answser within 2000 ms  Credits go to Gilbou on StackOverflow"
androiddev,3bhmga,guillaumeyp,1 point,Mon Jun 29 12:04:42 2015 UTC,But android can think its connected to the net when its actually behind a captive portal. So while I do tricks like this as a first pass I also check the status code of a page designed to return just a 204 No Content header page.  If I don't get back a 204 or a get a page with content then chances are the device is behind a captive portal or is being filtered some other way.  Just don't do the 204 check every time as that’s just a waste. I tend to do it on app start or after a connection change has been detected (Connection changed? preform a 204 check some time in the future.
androiddev,3biobc,sagarsiddhpura,1 point,Mon Jun 29 15:25:10 2015 UTC,"Multiple ways:  The first step is to get the text file through an HTTP request (for example with okHttp). Then, multiple solutions:   you store the String in the SharedPrefs and you parse it (with Gson) to use it in the ListView you can parse the file and store the object fields in a database (a lot of boilerplate code) etc   In all case, the best practice is to read the doc"
androiddev,3biobc,guillaumeyp,1 point,Mon Jun 29 16:10:13 2015 UTC,I will be having the file locally available. I do not need to fetch from internet. My main concern is regarding parsing huge data and presenting it in recycler view in most efficient manner.
androiddev,3bimi8,Kremitthefrog,1 point,Mon Jun 29 15:10:20 2015 UTC,"Google up on debugging through network (wifi), http://stackoverflow.com/questions/4893953/android-run-install-debug-applications-over-wifi Might help"
androiddev,3bho1p,aoivaldez,2,Mon Jun 29 08:31:17 2015 UTC,"You can save the current selected item in an integer variable, such as selectedIndex in this example: Mizzu main activity, and compare the menuItem id to the selectedIndex. If they are equal, do nothing (return).  The onSaveInstanceState method makes it persistent through configuration changes."
androiddev,3bho1p,guillaumeyp,2,Mon Jun 29 08:45:24 2015 UTC,"Yup this. Except it's also nice if you just close the drawer when they click the one they're on, gmail does this although many apps do not. It feels better to me"
androiddev,3bho1p,Cg2XHPxz,1 point,Mon Jun 29 08:49:25 2015 UTC,thanks man!! I'll do that. I was thinking of a wrong approach by getting the current class of the activity on the screen. Thanks A lot!!
androiddev,3bho1p,TODO_getLife,1 point,Mon Jun 29 08:51:43 2015 UTC,"onSaveInstanceState   currently what Im doing is this:    private int mSelectedId;  @Override public boolean onNavigationItemSelected(MenuItem menuItem) {     Intent intent = null;      if(mSelectedId != menuItem.getItemId()){          mSelectedId = menuItem.getItemId();          mDrawerLayout.closeDrawer(GravityCompat.START);         switch (menuItem.getItemId()){             case R.id.agency_menu_item:                 intent = new Intent(this, AgencyActivity.class);                 startActivity(intent);                 break;         }      }      return false; }   but it doesnt save the id upon opening the new activity."
androiddev,3bho1p,TODO_getLife,1 point,Mon Jun 29 09:11:35 2015 UTC,"You can save the curr   I also tried the onSaveInstanceState but it didnt work, it keeps on making the mSelectedId to 0  public class BaseActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {  private static final String SELECTED_ITEM_ID = ""selected_id""; public DrawerLayout mDrawerLayout; public Toolbar mToolBar; public NavigationView mDrawer; public ActionBarDrawerToggle mdrawerToggle;  private int mSelectedId;   @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);      if(savedInstanceState != null){         mSelectedId = savedInstanceState.getInt(SELECTED_ITEM_ID);     }      Log.d(""aoi"", ""save instance ""+String.valueOf(mSelectedId));  }  @Override public boolean onNavigationItemSelected(MenuItem menuItem) {     Intent intent = null;      if(mSelectedId != menuItem.getItemId()){         mSelectedId = menuItem.getItemId();          Log.d(""aoi"", ""selected item ""+String.valueOf(mSelectedId));          mDrawerLayout.closeDrawer(GravityCompat.START);         switch (menuItem.getItemId()){             case R.id.agency_menu_item:                 intent = new Intent(this, AgencyActivity.class);                 startActivity(intent);                 break;         }      }      return false; }   public void initDrawer(){      mToolBar = (Toolbar) findViewById(R.id.app_bar);     setSupportActionBar(mToolBar);     mDrawer = (NavigationView) findViewById(R.id.main_drawer);     mDrawer.setNavigationItemSelectedListener(this);      mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_parent);     mdrawerToggle = new ActionBarDrawerToggle(             this,             mDrawerLayout,             mToolBar,             R.string.drawer_open,             R.string.drawer_close);      mDrawerLayout.setDrawerListener(mdrawerToggle);     // indicator based on whether the drawerlayout is in open or closed     mdrawerToggle.syncState(); }  @Override protected void onSaveInstanceState(Bundle outState) {     super.onSaveInstanceState(outState);     outState.putInt(SELECTED_ITEM_ID, mSelectedId); }   }"
androiddev,3bhgqw,marineo02cro,2,Mon Jun 29 06:43:31 2015 UTC,"The nav drawer in this generated project totally ignored the material design guidelines. It's supposed to extend the full screen height and go under the status bar, but this nav drawer stops beneath the action bar for some reason..  Have you even used a material design app?"
androiddev,3be1cu,_bluecup_,6,Sun Jun 28 09:47:32 2015 UTC,"While it can be learn and taught, not everybody in the team would commit to it. This sounds like patterns you'd like to include on a linter and would be caught and highlighted by static analysis so it becomes a shortcut fix."
androiddev,3be1cu,pakoito,10,Sun Jun 28 13:14:55 2015 UTC,"A shortcut that makes me write all that boilerplate stuff to reduce readability and increase bugs/hour rate? No, thanks. We're using a high-level language here, keep optimization tricks for people who need them - game developers, core library developers, etc. All we need is better maintainability and less bugs. Spent 2 times more time on an iteration? Who cares, it is 0.001 ms vs 0.002 ms difference in most cases. I'm not against optimization but it should not sacrifice other things that are much more important."
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 14:01:00 2015 UTC,"Exactly, if there are no concrete examples from Google on how to optimize android code, then why should we developers take it seriously?  Google obviously doesn't."
androiddev,3be1cu,IgorGanapolsky,-1,Wed Jul 8 19:38:07 2015 UTC,"Those .001 add up to 10 or 16 per complex method, when several methods add up to 100 you get a jitter. With 200 you get a user-visible jitter. With 400 your grandma can notice it.  While it may be a case of premature optimization, it shouldn't be handwaved for all cases. And being boilerplate machine written, there's fewer chance for bugs than handmade changes. It may not help surfacing wrong behaviour written by the programmer, but that's another concern :P"
androiddev,3be1cu,pakoito,7,Sun Jun 28 14:06:03 2015 UTC,"400 * 0.002 = 0.8 ms, still not enough to be seen by my grandma :P We need a complete newbie in the programmer's chair to get a noticeable 10 ms jitter.  Most jitters we see come not from bad code optimization but from incorrect background tasks usage, too many / too stupid layouts, handling IO in the main thread, intensive job and allocations during scrolling, etc. Micro optimizations are very rarely able to produce an effect that is comparable to one simple architectural decision."
androiddev,3be1cu,jackhexen,2,Sun Jun 28 14:15:25 2015 UTC,"400 * 0.002 = 0.8 seconds   Micro optimizations very rarely are able to produce an effect that is comparable to one simple architectural decision.   While I agree, don't just handwave it for all cases."
androiddev,3be1cu,pakoito,5,Sun Jun 28 14:19:10 2015 UTC,No! 400 * 0.002 ms = 0.8 ms. I'm talking about ms here! 0.002 ms is a time to process 100 items with heavy iterators usage on Galaxy S4.
androiddev,3be1cu,jackhexen,-1,Sun Jun 28 14:34:36 2015 UTC,"You're talking about microseconds actually, I thought it was a typo."
androiddev,3be1cu,pakoito,1 point,Sun Jun 28 14:37:54 2015 UTC,ms = millisecond = 1 second /1000
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 14:41:15 2015 UTC,microsecond = 0.001 ms = 1 second / 10e6
androiddev,3be1cu,pakoito,1 point,Sun Jun 28 14:45:14 2015 UTC,So we finally understand each other! :)
androiddev,3be1cu,jackhexen,2,Sun Jun 28 14:46:39 2015 UTC,/u/jackhexen said 0.002ms times 400 which is 0.8ms. Units matter
androiddev,3be1cu,huitzitzilin,1 point,Sun Jun 28 14:33:40 2015 UTC,"The majority of Android devs must be complete noobs then, since oh so many have jitter when you scroll."
androiddev,3be1cu,kaze0,1 point,Mon Jun 29 11:59:30 2015 UTC,Doubt that with proper RecyclerView implementation and caching of heavy resources (i.e. images) you will have jitter.
androiddev,3be1cu,IgorGanapolsky,1 point,Wed Jul 8 19:42:04 2015 UTC,Complex methods should be caught with Lint.  Programmers shouldn't spend inordinate amounts of time hunting down complex methods.  My solution: keep your methods simple in the first place!
androiddev,3be1cu,IgorGanapolsky,4,Wed Jul 8 19:40:01 2015 UTC,"First, it's not clear to me how many of these tips are affected by runtime optimizations. There have been a few times in the history of Java where an optimization has ended up being irrelevant. Inlining, loop unrolling, even (maybe) StringBuilder use, stuff like that.  Second, I would question how many of the specific tips are that important to overall app performance/battery use. If you're doing something a few billions times in a loop then by all means optimize, but otherwise you might be better off spending your time on something else.  Not to say that Jake is wrong or anything like that, just that it might not be worth doing a bunch of that stuff overall."
androiddev,3be1cu,megamatt2000,13,Sun Jun 28 14:00:20 2015 UTC,"The video would help here, but you don't need billions to notice impact. The double implicit StringBuilder example happened once per HTTP request. When you have an image loading library making 30+ requests on a list fling the needless underlying char[] allocation from not pre-sizing and not re-using on a loop iteration of only 2 was MASSIVE.  As to runtime optimizations, I have two points: * This isn't hotspot on a server. The amount of optimizations and the time in which they can be done is drastically reduced. * A hot path (like drawing) or app start wants optimizations like these because you can affect performance long before any optimization would kick in–not that you can even guarantee it would.  The point of ""The more you know"" slide was that knowing how the underlying mechanisms work allows you to make informed decisions about when to use some of these tips. These are not blindly-apply-to-all-the-things tips. I know it's hard, but you have to think for yourselves!  Thanks for the good comment."
androiddev,3be1cu,JakeWharton,1 point,Sun Jun 28 14:29:17 2015 UTC,"Oops, didn't think about scrolling when I wrote that, makes sense that would add up pretty quickly.  Follow up question: Are you seeing as big an improvement in GC times on ART as we are? We used to see GCs that could be multiple frames in duration under 4.4 when doing memory intensive scrolling, but now most seem to be <5ms under ART."
androiddev,3be1cu,megamatt2000,1 point,Sun Jun 28 22:30:56 2015 UTC,"Absolutely, better to spend time on writing clean and maintainable code.  That is where most android devs fall short!"
androiddev,3be1cu,IgorGanapolsky,1 point,Wed Jul 8 19:51:35 2015 UTC,"Great slides Jack!  The team behind SQLite had recently announced how they've improved the performance massively by focussing on micro-optimizations. I know it's considered bad to focus on them, but sometimes they can equally be important and you should look after them unless you're tight on time.   Moreover, simple optimizations like specifying the size of a Collection or StringBuilder before hand gets wired in your brain once you start using it, so it doesn't cost you any extra time."
androiddev,3be1cu,Saketme,1 point,Sun Jun 28 17:20:13 2015 UTC,For a team like SQLite who are building a library to be consumed by thousands (maybe millions) of developers - it makes perfect sense to micro-optimize.  And they can probably benchmark their performance gains to that end.  But for most indie android devs - it is not a fruitful matter.
androiddev,3be1cu,IgorGanapolsky,1 point,Wed Jul 8 20:14:35 2015 UTC,"I'm a bot, bleep, bloop. Someone has linked to this thread from another place on reddit:   [/r/ryanmiles] Jake Wharton : Eliminating Code Overhead (Square HQ 2015) • /r/androiddev   If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads. (Info / Contact)"
androiddev,3be1cu,TotesMessenger,2,Sat Jul 11 22:39:34 2015 UTC,"I like ""Premature optimization is the root of all evil"" and ""Hardware is Cheap, Programmers are Expensive"" citates for such cases."
androiddev,3be1cu,jackhexen,9,Sun Jun 28 10:14:38 2015 UTC,"The full quote is:   Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.   So if you actually reasoned about what I was trying to get across in the ""What comes after macro?"" slide you'd realize that this quote actually advocates for the presentation contents. So, thanks!  Second quote doesn't apply to battery-powered devices well. If you think you can just let the hardware take care of things you are the problem causing the needless battery drain on the first slides. As a mobile developer you are not afforded the luxury to be so ignorant."
androiddev,3be1cu,JakeWharton,2,Sun Jun 28 14:13:48 2015 UTC,"Second quote doesn't apply to battery-powered devices well.    Sure it does.  I'm old enough to have developed software when both server and desktop hardware was severely resource constrained.  Mobile development is no different, it's just a different resource-limited piece of hardware.  The quote's about allocating resources in appropriate amounts while still meeting your requirements.  Sometimes you intentionally waste one resource (hardware) to make gains with another (manpower).  Can you ignore it - no, absolutely not.  But if it comes down to it it's (usually) better to allocate your resources actually finishing your project and meeting your requirements without getting lost in the details of optimization.    I'm not advocating it be entirely ignored but in many cases it can be a secondary objective.  Until it's a problem it's not a problem.  As evidence most apps in the store aren't optimized in any way shape or form and we're not in battery draining hell.  But, things can be better."
androiddev,3be1cu,6timesdonkeypunched,1 point,Sun Jun 28 14:53:00 2015 UTC,"I mean, if that's the approach you're taking on interpretation then of course there's always trade-offs no matter what you're doing and the quote seems even less relevant to be in the original comment. Not that I disagree with the premise of it."
androiddev,3be1cu,JakeWharton,-1,Sun Jun 28 15:12:26 2015 UTC,"If you're old, try running any benchmark on a PC and then on a mobile device. I'm a little bit old (20 year in the front of a monitor), and I was like: ""Oh my.. what the f**... how??? I don't believe my eyes, let's run the benchmark one more time... one more time..."" And then I just forgot about resource limitations, I don't care anymore. :D Maybe a 13M jpeg decoding can make me shy a little bit. I just can't get how other devs are getting their lags."
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 15:11:01 2015 UTC,"How to get lag on android simply: Create a list with a fairly large number of entries, say all of your contacts. Show in a listview with non-trivial layout. Fling. Enjoy your jank."
androiddev,3be1cu,GoldDog,1 point,Mon Jun 29 13:55:55 2015 UTC,"The problem is not the code I wrote in most cases. Overdraws, spans usage, nested linearlayouts with weights, etc."
androiddev,3be1cu,jackhexen,1 point,Mon Jun 29 14:03:05 2015 UTC,Why can't Google just optimize the OS and garbage collector to help devs?  Who's responsibility is it in the long run?
androiddev,3be1cu,IgorGanapolsky,1 point,Wed Jul 8 20:16:25 2015 UTC,It's optimized for mobile processing which is primarily to reduce battery consumption. If they add more logic to the OS/GC then that will require much more CPU and memory which in turn eats the battery even more. There is no magic bullet when you are operating on a device with a battery. Everything you and the OS do has a cost.
androiddev,3be1cu,JakeWharton,1 point,Wed Jul 8 20:51:45 2015 UTC,"Is you presentation about that 3%? It does not clear from slides to me, probably I should been listening. If so, then all your optimization tricks are valid and I completely agree with them."
androiddev,3be1cu,jackhexen,3,Sun Jun 28 14:31:20 2015 UTC,"Maybe. I tried hard to emphasize that you have to think about where to apply them. The double implicit StringBuilder example was found through allocation tracker, for example.  In general, you're right to question micro-optimizations. Using analysis to find and optimize means you can be justified."
androiddev,3be1cu,JakeWharton,2,Sun Jun 28 14:35:15 2015 UTC,Not true on Android or mobile in general.  Android phones get passed down second hand quite a bit and there are TONS of low end devices that get sold every year that have the specs of high end phones from 2011 (4+ years ago).    These types of optimizations are critical on the UI thread and anywhere where you are processing a lot of data (ie loading a big JSON file to populate a list or a view).
androiddev,3be1cu,seyelenteco,1 point,Sun Jun 28 15:22:24 2015 UTC,"If you are loading a big JSON file, I hope you have something like GSON and Retrofit working hand-in-hand to show this data in RecyclerView.  If not, then you are missing out on the latest and greatest practices."
androiddev,3be1cu,IgorGanapolsky,-1,Wed Jul 8 20:20:19 2015 UTC,I do not support API < 15 and I hope that this will save me from having troubles with such devices. :D
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 15:39:57 2015 UTC,"it doesn't, you can find plenty of devices such as the S2, ZTE or any BLU device that will challenge your code"
androiddev,3be1cu,thepoosh,1 point,Sun Jun 28 16:53:03 2015 UTC,"I had a hard time optimizing for S1, but I never had any performance issues with 4.0 devices. If I will get troubles then I will optimize the exact logic that makes the lag, not the whole application, for sure."
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 17:09:29 2015 UTC,"as I said, ZTE warp, S2 and BLU are the usual suspect of crushing user experience out in the wild."
androiddev,3be1cu,thepoosh,1 point,Sun Jun 28 17:13:49 2015 UTC,There are lots of Kitkat and Lollipop devices coming out that have 512MB of RAM and a single or a couple of underpowered cores.  Trust me if you have an app that has any sort of penetration you'll want to care about low end devices.  See http://www.gsmarena.com/samsung_galaxy_pocket_2-4881.php
androiddev,3be1cu,seyelenteco,1 point,Sun Jun 28 18:18:54 2015 UTC,Not everyone has the luxury to do that. The project I got at work needs to support down to API 10...
androiddev,3be1cu,Zhuinden,2,Sun Jun 28 18:54:15 2015 UTC,"""Hardware is Cheap, Programmers are Expensive""   How does this apply to mobile devices? Have you even read that piece? If you had, I doubt you'd have brought it up in this context.  /u/JakeWharton has done the hard work of giving you a cheat-sheet of easy wins. All you have to do is remember to use them. What's with the defeatist attitude?"
androiddev,3be1cu,stackinpointers,2,Sun Jun 28 15:09:10 2015 UTC,"The citate applies to mobile devices in the way that Moore's law is still (almost) working. Modern mobile devices have outstanding hardware, and people that originally wrote ""Hardware is Cheap, Programmers are Expensive"" didn't even dream about. I know that someone in 2008 resurrected the motto and now Google search directs us to that article, but it was an old speech. Programmer's time is expensive and it is much more expensive that the gain that you get by optimizing your loops.  All that tricks are not so effective as it looks like unless used in the right place. This is the idea I am talking about. If you optimize all your code with all tips and trick then you will get 1% total performance gain. But when used with purpose, it can give you probably 30% win or even 300% in some rare cases."
androiddev,3be1cu,jackhexen,0,Sun Jun 28 15:33:27 2015 UTC,"The citate applies to mobile devices in the way that Moore's law is still (almost) working.   That doesn't matter if your app runs like shit right now. Moore's law doesn't make your mother's 2013 Samsung Galaxy S (stuck on 4.2.2) run any faster.    All that tricks are not so effective as it looks like unless used in the right place.   You can view them as tricks, but they're meant to be ""best practices."" Stop imagining that you should go through your repository and ""fix"" your code -- instead, commit yourself to automatically using the suggested optimizations in the future."
androiddev,3be1cu,stackinpointers,2,Sun Jun 28 15:45:09 2015 UTC,"Why the hell I should use all that optimizations I don't need? :) Do you think that Jake just invented them and now everybody should be happy? I knew all of that optimizations for years and they did not make my apps run noticeably faster. There are very good reasons for not using them everywhere. ""Best practices"" are not something that allow us to win nanoseconds. There are much more things to consider."
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 16:10:29 2015 UTC,"I knew all of that optimizations for years and they did not make my apps run noticeably faster   How did you determine that? Did you build the same app with and without the aforementioned optimizations?   There are very good reasons for not using them everywhere.   Like what?   ""Best practices"" are not something that allow us to win nanoseconds.   List list = new ArrayList(size)    instead of  List list = new ArrayList()   is a best practice. I can't see any reasonable argument for doing otherwise.   There are much more things to consider.   Like what?"
androiddev,3be1cu,stackinpointers,1 point,Sun Jun 28 16:26:10 2015 UTC,"@stackinpointers  Where in the android sdk samples or AOSP source do you see such optimizations?  If Google doesn't give a crap about them, then how can devs be expected to."
androiddev,3be1cu,IgorGanapolsky,0,Wed Jul 8 20:24:49 2015 UTC,"Everywhere. This is basic stuff -- Java 101.  If you create an ArrayList without specifying the size, it will start with the default size (10). When you add the 11th element, ArrayList internally extends its array size. It creates a new array with size of 20, and copies the old 10 elements to the new array and adds the 11th element to the array. So the old array with size 10 will be sent for garbage collection. So if you know the array's size ahead of time, use the appropriate constructor.  That's a pretty well-known Java best practice. There are plenty of Android-specific best practices here: (http://developer.android.com/training/articles/perf-tips.html) that are used throughout AOSP."
androiddev,3be1cu,stackinpointers,1 point,Wed Jul 8 21:45:22 2015 UTC,I asked you about specific sdk samples or AOSP classes where they are using these kinds of optimizations.  That article you linked to is several years old and should be taken with a grain of salt if you have been doing Android seriously for awhile.
androiddev,3be1cu,IgorGanapolsky,2,Wed Jul 8 23:43:19 2015 UTC,specific sdk samples or AOSP classes where they are using these kinds of optimizations   Sure.   ArrayList(int capacity)    has 335 usages in android.* packages.   StringBuilder(int capacity)   has 317 usages in android.* packages.  And how about caching calls to context.getResources() ? 168 usages.  Any further questions?
androiddev,3be1cu,stackinpointers,1 point,Thu Jul 9 00:23:54 2015 UTC,Any more questions Igor?
androiddev,3be1cu,stackinpointers,1 point,Mon Jul 20 02:37:14 2015 UTC,"How did you determine that? Did you build the same app with and without the aforementioned optimizations?   No, I make benchmarks.   There are very good reasons for not using them everywhere. Like what?   Like code reliability. If you write all for counters yourself you will increase the chance of a mistake. If you reuse a counter that is built into an iterator you just can't make a typo there. Iterative code also looks cleaner and easier to understand. If you have a bug you need to spend more time in playing with indices than when you're using an iterator. You can also combine and reuse methods that are based on iterators, but if you're doing each for manually there is nothing to reuse.   List list = new ArrayList(size)  instead of List list = new ArrayList() is a best practice. I can't see any reasonable argument for doing otherwise.   In example, if the calculation of a list's size can make your brain boil, then it is better to use pools or something to avoid reallocations. Another thing can happen - just yesterday I've made a benchmark and found that my size calculation in 50% of cases takes more time than the performance gain of using the calculated size.   Like what?   Code readability, maintainability, reliability, programmer's working time, avoiding code duplication, you name it.   Why everyone is using RxJava? It is not performance-perfect. But it allows to write apps easily and get performance gain on a higher abstraction level than trying to minimize nanoseconds loss. We can allow us to lose nanoseconds if we make decisions that will lead us to wins in seconds."
androiddev,3be1cu,jackhexen,1 point,Sun Jun 28 16:55:08 2015 UTC,"@stackinpointers ~""easy wins""?  What makes you think these are easy to track down?"
androiddev,3be1cu,IgorGanapolsky,0,Wed Jul 8 20:22:24 2015 UTC,They're easy to implement.  You don't need to use @ to reply to a comment.
androiddev,3bgk1u,Didinium,4,Mon Jun 29 01:06:14 2015 UTC,"Yup, if you're shipping the app with the data built in (since you don't have a server), just use the same format that a server might. To keep things simple you could just design the schedule data in json, and read the file in locally (as opposed to remotely, from a server). You could also ship with a pre-populated SQLite DB but it makes it a bit heavier to maintain."
androiddev,3bgk1u,shnuffy,1 point,Mon Jun 29 01:42:13 2015 UTC,Would that work if each user needs to input their own schedule though?
androiddev,3bgk1u,shnuffy,1 point,Mon Jun 29 01:58:36 2015 UTC,"Hmm just reread the description. You could potentially use something like Bluetooth, but in the end you'll need some kind of communication layer. Did you have anything in mind besides a server? You could probably use Parse for something like this without too much trouble."
androiddev,3bgk1u,shnuffy,1 point,Mon Jun 29 02:20:37 2015 UTC,"I can't really think of anything else really. I could probably whip up a raspberry pi server, but I'm not sure it could handle the ~1600 people that would be using this within a short period of time, and I'm not entirely sure it's worth the effort."
androiddev,3bgk1u,casualblair,3,Mon Jun 29 02:24:49 2015 UTC,"Look into Parse, no need to reinvent the wheel. There are tons offer free server options. Good luck!"
androiddev,3bgk1u,w96,2,Mon Jun 29 02:40:52 2015 UTC,"Yes. Qr code (phone a takes a picture of phone b, convert to data) , Nfc (hold them together with the app open to swap data) , Bluetooth (networking) , texting (compress json to encoded string) and peer to peer (act as a local server)."
androiddev,3bgk1u,SilentMobius,1 point,Mon Jun 29 05:08:08 2015 UTC,QR has my vote but may not hold enough data for what you need.
androiddev,3bgk1u,casualblair,1 point,Mon Jun 29 07:25:50 2015 UTC,"Qr codes can hold variable amounts of data. The max needed for this should be no more than 2 byte course ID, * active weekdays * possible slots in a day. A 57x57 qr code could hold that easy."
androiddev,3bgk1u,bart007345,1 point,Mon Jun 29 09:41:10 2015 UTC,"If you're going to use a qr code then you would be best served by serializing to bytes and compressing. The code can hold just under 3kb (2953 bytes) which should be enough, especially if you use the smallest types you can, or customize the serialization.   For example, a date/time is large if you need all of it but you could overload to save in binary: bit for am or pm, 4 bits for hour, 3 bits for tens minute, 1 bit for 0 or 5 minute, 5 bits for days of week (assuming no weekend). Total size for storing a single schedule every Tues and Thurs at 610 pm: 2 bytes with 2 bits to spare. You now have 2951 bytes remaining in the 177 size qr code.   Add in the class number via ascii encoding and you have 1 byte per character. Note this may not work for non Latin based languages."
androiddev,3bgk1u,BikerMouseFromMars,2,Mon Jun 29 15:02:56 2015 UTC,"A server makes the most sense because you can write the logic once and the apps become a front end to it. Updates become easier because you don't need to roll out new apps.  If that's impossible, you could use sqlite so the data is in the db. It's available on both platforms."
androiddev,3bgk1u,benjaminbrownie,1 point,Mon Jun 29 06:07:51 2015 UTC,Theres allways the good old bluetooth.
androiddev,3bgk1u,MisterJimson,1 point,Mon Jun 29 10:57:46 2015 UTC,You could look at firebase or parse for student inputted data.
androiddev,3bgk1u,markrtoon,1 point,Mon Jun 29 17:36:01 2015 UTC,You need some way for your apps to talk.  1: Server  2: Bluetooth (1 to 1 only)  3: Local Wifi network
androiddev,3bh3pu,PingApp,6,Mon Jun 29 04:13:51 2015 UTC,"$2000 isn't going to get you very far, even with cheap devs. To put that in perspective, my company invoices north of $150 per hour for Android work. At our rates (which, admittedly are high for my area) you'd be broke by Tuesday afternoon. Contracting others to do the dev work is expensive.  Do you have any inclination to learn programming? Is it a simple concept or extremely complex? Do you have friends with programming skills? Your best bet is to find someone who also believes in the idea and partner with them. You can try to sell the idea to companies, but ideas are cheap. Most ideas focus on adding value to the user, very few have much value to the app owner. If your idea is valuable to both sides of the transaction, you may have a chance going that route, but generally I have only seen that arrangement work when you're bringing the idea AND the finished app to the company. Again, the idea itself usually isn't very valuable.  Tl;dr, find a friend who wants to do some android dev and get them onboard."
androiddev,3bh3pu,Corn0ffTheCob,2,Mon Jun 29 05:31:55 2015 UTC,How complex will the app be? Like an UBER or a simple game/calculator?
androiddev,3bh3pu,avipars,1 point,Mon Jun 29 04:26:19 2015 UTC,Hi.  I myself had the same problem of having an idea that I thought could work but no skills to implement it.  But I decided to change it for the good and learn the skill set required to become an Android Developer.  I have started by pledging to this Kickstarter Compaign: https://www.kickstarter.com/projects/908213631/the-complete-android-m-developer-course-with-andro  Why don't you join me there?   I am eager to listen to your idea ( non-disclosure guaranteed); and who knows it might turn out to be a pleasant mutual learning experience!  I strongly advise you to keep your $2000 capital secure with yourself; don't fall for any frauds.   Hope this motivated you!
androiddev,3bh3pu,SSG47,1 point,Mon Jun 29 12:36:08 2015 UTC,Here is a great link. Fill it out and it gives you an estimate of the cost to create it...http://howmuchtomakeanapp.com/estimator
androiddev,3bh3pu,avipars,1 point,Mon Jun 29 20:53:35 2015 UTC,"Assume that you have unlimited funds. Even so you need to figure if it is worth it. You need an estimate of the amount of work, what it would cost and weigh that against eventual profit. First step: break down the work. What need to be done?"
androiddev,3bh3pu,fethaja,1 point,Tue Jun 30 17:09:37 2015 UTC,"I will make you Android app for $2,000. Feel free to contact me, so we can discus more about it."
androiddev,3bh3pu,Zookey100,-1,Mon Jun 29 09:55:03 2015 UTC,"Unless you work brutally hard at it like Steve Jobs did, you won't get anywhere.  Or, you could learn to program, and implement it yourself.   There are tonnes of idea guys out there, including ones that can program."
androiddev,3bh3pu,Chodrick,1 point,Mon Jun 29 09:17:18 2015 UTC,steve jobs worked hard? lol.
androiddev,3bh3pu,imkosh,1 point,Tue Jun 30 04:15:56 2015 UTC,"He worked hard trying to market his product, make business deals, and push his workers to their limits."
androiddev,3bfqh1,mavdev,1 point,Sun Jun 28 20:44:36 2015 UTC,I think it's worth a try.
androiddev,3bfqh1,avipars,1 point,Mon Jun 29 00:32:52 2015 UTC,"I think it's worth a try. Although I'm not experienced with publishing successful apps, I know SEO and social media well. It will expose your app to new customers, if you promote it correctly."
androiddev,3bfqh1,avipars,1 point,Mon Jun 29 00:32:52 2015 UTC,"ok, i guess I will stick with it for longer."
androiddev,3bfqh1,avipars,1 point,Mon Jun 29 01:32:20 2015 UTC,"I mean you have 1,800 followers, and over 10,000 app installs so it appears to be working decently for you."
androiddev,3bfqh1,avipars,1 point,Mon Jun 29 03:52:38 2015 UTC,"10,000 app installs came much earlier. the twitter account is quite recent. I have a goo.gl link (in the twitter bio) with source tracking to figure out how many click on it. Results are just average, may be I need to align expectations with whatever industry standards are (and research them)"
androiddev,3bfqh1,avipars,1 point,Mon Jun 29 04:13:35 2015 UTC,"Thanks for the clarification, The analytics are a good idea. But it may be better to go through a URL from your site , that redirects directly to your google play listing, so the users know it's coming from you"
androiddev,3bey1i,shekar007,3,Sun Jun 28 16:42:32 2015 UTC,"Nice, pretty impressed how you managed to keep the layout structure relatively (ha) flat as well... I bet the performance will take a huge hit if you start embedding these in each other"
androiddev,3bey1i,RattlesnakeSpeedway,1 point,Sun Jun 28 17:21:19 2015 UTC,"Yes, embedding views will definitely cause performance hit. I think we can use PercentRelativeLayout in combination with composite views to avoid overdraw."
androiddev,3bfwu5,mostlyemptyspace,2,Sun Jun 28 21:37:59 2015 UTC,"In the Play Developer Console you can sign up for the Cloud Test Lab beta. Click on your app, and under optimization tips, it's there."
androiddev,3bfwu5,avipars,1 point,Mon Jun 29 00:14:20 2015 UTC,"What does it cost? Looks like appthwack is $20/mo for the entry level. Not sure how to compare these services and prices.  Also, I don't want to have to manually test, I'd like to be able to setup a test plan and have it run on several different devices at once. Is that possible?"
androiddev,3bfwu5,avipars,1 point,Mon Jun 29 00:48:59 2015 UTC,"It's through Google, so I assume it will be free for Android Developers who paid the $25 entry fee...From what I was told at Google I/O, is that it puts the APK on test devices on their servers, and they send you the results upon completion."
androiddev,3bfwu5,avipars,1 point,Mon Jun 29 01:00:31 2015 UTC,"It's through Google, so I assume it will be free for Android Developers who paid the $25 entry fee...From what I was told at Google I/O, is that it puts the APK on test devices on their servers, and they send you the results upon completion."
androiddev,3bfwu5,dj_darkhorse,2,Mon Jun 29 01:00:31 2015 UTC,Xamarin Test Lab is basically exactly what you want by the sound of it. Although quite expensive
androiddev,3bfwu5,opalelement,1 point,Mon Jun 29 03:58:21 2015 UTC,Haven't used either but I have heard good things about AppThwack and Testdroid.
androiddev,3bfwu5,MetalGuru94,1 point,Sun Jun 28 21:54:35 2015 UTC,Thank you I'll give appthwack a try.  Anyone have any feedback on it?
androiddev,3bfwu5,Deafdev,1 point,Sun Jun 28 22:23:04 2015 UTC,"I´ve used TestObject quite a lot, I think its pretty good. I am not in Android development for a while though, so maybe they have changed their pricing/other things and it might not suite you. Check it out for yourself :)"
androiddev,3bgd2u,soomba2,4,Mon Jun 29 00:01:14 2015 UTC,"That is probably intentional. Developers don't want people to copy the app's code...A lot of them also enable Pro-guard, which obfuscates the code, making it more difficult to reverse engineer. Instead, there are some open source android apps, with code in github, take a look at that."
androiddev,3bgd2u,avipars,3,Mon Jun 29 00:18:42 2015 UTC,"That is probably intentional. Developers don't want people to copy the app's code...A lot of them also enable Pro-guard, which obfuscates the code, making it more difficult to reverse engineer. Instead, there are some open source android apps, with code in github, take a look at that."
androiddev,3bgd2u,avipars,2,Mon Jun 29 00:18:42 2015 UTC,Some good options are:   Enjarify + jd-gui JADX dex2jar +  jd-gui Apktool JEB
androiddev,3bgd2u,jrummy16,2,Mon Jun 29 00:28:46 2015 UTC,"All in all, while these ARE great tools if you want to decompile stuff and do answer OP's question, these are terrible options for someone new to Android development."
androiddev,3bgd2u,kaze0,2,Mon Jun 29 12:04:03 2015 UTC,"Sounds like you didn't decode the APK. Use apktool to properly partly decompile it, that usually gives you readable files. Do note that you won't get proper .java files, just the smali files that describe how functions relate to eachother. So you can't really add functionality, at best you could 're-route' the behavior of the app, but that's usually useless (I used it once to disable a region check by making it skip a function, that's pretty much all you can do)."
androiddev,3bgd2u,medEng0,2,Mon Jun 29 02:37:31 2015 UTC,"http://www.decompileandroid.com/ makes the otherwise complicated process extremely simple.  If you find that all the files are named a, b, c, etc. then the code has been obfuscated with ProGuard, so try a different apk file.  Even then, you won't see any comments on the code, and some of the parts will be kinda messed up (for example, switch statements don't decompile well).  Your best bet is to find an app that's open-source, and have a look at the code on GitHub or something. Aside from the fact that the code will be easier to read, you will actually have permission from the developer to be messing with their code. They may even respond to a question or two you have about it."
androiddev,3beb2m,johnmountain,1 point,Sun Jun 28 12:33:31 2015 UTC,"What is exactly the purpose of explicitly stating if cleartext is going to be used? Also, I understand from the article that even if you set it to false, you can break your ""promise"" anyway. So how does this matter then?"
androiddev,3beb2m,stoyicker,1 point,Sun Jun 28 13:55:21 2015 UTC,"Like other manifest flags, it may be required to allow cleartext traffic in future platform versions.  As the state of the flag isn't visible to end users, the only promise you're making is to yourself (or your team). And you might want a certain Activity to declare itself able to communicate with cleartext, so your leak surface is reduced but your app continues to work."
androiddev,3beb2m,tadfisher,1 point,Sun Jun 28 16:57:56 2015 UTC,"I would guess first thing is 3rd party libraries are going to have to start shaping up, as many apps probably think they are SSL-only but in reality aren't due to them."
androiddev,3bdqx5,FlameDra,7,Sun Jun 28 06:43:59 2015 UTC,"The 2nd edition of the Big Nerd Ranch Guide to Android Development uses Android Studio. It's not out just yet, but you won't be waiting for much longer."
androiddev,3bdqx5,nalsh,3,Sun Jun 28 12:42:07 2015 UTC,"The busy coder's guide actually covers Android Studio, which version did you get ? It's updated pretty frequently."
androiddev,3bdqx5,romaink,1 point,Sun Jun 28 08:16:36 2015 UTC,Version 4.9. Is there a similar alternative to this book?
androiddev,3bdqx5,romaink,1 point,Sun Jun 28 08:34:13 2015 UTC,"Not sure, I only read this one since it was more than enough for my needs. You should check out the official website, there's a preview of the latest version which should tell you if this book is for you"
androiddev,3bdqx5,ASKnASK,1 point,Sun Jun 28 08:59:49 2015 UTC,They have free download's for Version 4.9 of the book. Has there been too much of a difference from June 2013 to June 2015 that the core Android related chapters from the book won't make sense anymore? I can just skip all the IDE part and read up on the conceptual parts if it would help me work on my projects in Android Studio now.
androiddev,3bdqx5,lulundi,3,Sun Jun 28 09:10:30 2015 UTC,I'd say a lot has changed in the last 2 years.
androiddev,3bdqx5,fadelakin,1 point,Sun Jun 28 09:43:42 2015 UTC,"I have a subscription and just downloaded version 6.7(!). A lot has changed in the past couple years, it's really best to get current."
androiddev,3bdqx5,thanhlap93,1 point,Sun Jun 28 12:23:15 2015 UTC,Do they let you download a PDF?
androiddev,3bdqx5,eru_melkor,1 point,Mon Jun 29 04:51:20 2015 UTC,"If you have a subscription, you can download the book as a PDF and you get an email notifying you when the book as been updated as well. The subscription is $45 for a year which is not a bad deal considering the book will be update around once every one or two months during that year."
androiddev,3bdqx5,quizzelsnatch,1 point,Mon Jun 29 05:01:22 2015 UTC,That's a good deal! Unfortunately my job does not run through the summer so I can't really afford the subscription. And by the time I start working in the Fall I would have wasted away my summer. Thanks for all the info though!
androiddev,3bdqx5,lulundi,1 point,Mon Jun 29 05:41:06 2015 UTC,can you send me the pdf of this book??? my email: thanhlap93@gmail.com Thank you!!!
androiddev,3bdqx5,eru_melkor,-1,Tue Jun 30 07:15:04 2015 UTC,would you be kind enough and upload it on kickass or somewhere else?
androiddev,3baqda,avinassh,27,Sat Jun 27 12:07:11 2015 UTC,"A lot of the comments I'm seeing in this thread about how Eclipse has features AS doesn't have are grossly misinformed or those people just never bothered to learn how to use AS.    No Incremental compilation   Preferences -> Build, Execution, Deployment -> Compiler -> Check ""Make project automatically""     No ""Problems"" view   Analyze -> Inspect Code     No integration with the device monitor, hierarchy viewer, etc...   Tools -> Android -> Android Device Monitor. It's literally the same exact tool Eclipse uses for the same exact reasons.     Poor ADB support   YMMV for that. I use Genymotion emulators which have been known to be iffy with ADB but they're always updating and improving to fix that problem.     Another Eclipse feature I liked (missing from IntelliJ) is called ""Content assist can insert argument names automatically"". You can then use the Tab key to navigate between the inserted names. for example, I could type: Observable.merge( And there would be a list of possible methods. I select that one, and eclipse provides the code including argument names, and you tab over them to edit or accept.     I can't remember if I had to change a setting but AS does this for me.    Besides these points, there are many things AS can do that Eclipse just doesn't, such as:     Bitmap rendering while debugging. View bitmaps from breakpoints (i.e. see what image is currently in a Bitmap variable or in an ImageView) A decent layout editor. View multiple layouts at once on multiple devices. From what I remember, Eclipse is just nowhere near as good with that. Java class decompiling. Cmd+click (on Mac) a method that's part of a JAR or gradle library, AS will automatically decompile that JAR/library and allow you to see the code. Eclipse leaves you guessing. The most obvious: actual updates and support.   Those of you refusing to use Eclipse Android Studio for Android development are just hurting yourselves. You're refusing to change with the times, and at this point it's just sad. If for some reason the idea of working with a deprecated IDE is better than working with an IDE that is constantly being updated and maturing with the Android platform itself, then by all means.    But seriously, take an hour and learn how to use AS instead of bitching and complaining of learning something new. You're software devs. You literally have to always stay up-to-date to be relevant in doing this.   Edit: a word"
androiddev,3baqda,QuestionsEverythang,8,Sat Jun 27 18:34:33 2015 UTC,"I've tried AS and IntelliJ many times, but the horrible font rendering on Linux makes it hard to read code. One would think that a major feature of an IDE is to let you read and understand code.  Until the font rendering is fixed, I will work hard to stay with Eclipse. Hopefully Andmore can bring Eclipse back to a healthy state for Android development."
androiddev,3baqda,Lindby,2,Sat Jun 27 21:54:53 2015 UTC,What distro were you using? I use AS on ArchLinux and the font rendering is great
androiddev,3baqda,ImDevinC,1 point,Sun Jun 28 06:13:57 2015 UTC,"I'm on Mint, but I've tried multiple distros over the years and font rendering in Swing applications has been terrible in all of them. I've tried all possible fixes, but non has been satisfactory. Do you mind posting a screen shot of an editor in AS on Arch? I will definitely consider Arch if it will allow me to use AS."
androiddev,3baqda,Lindby,1 point,Sun Jun 28 07:45:19 2015 UTC,install gentoo
androiddev,3baqda,mobilerino,1 point,Thu Jul 9 14:54:21 2015 UTC,Exactly. As an added bonus I'm unable to bind zooming/unzooming the size of the text to my mouse because of various reasons that haven't been problems with any IDE I've ever used.
androiddev,3baqda,mrjmoak3,11,Sun Jun 28 00:26:28 2015 UTC,"Preferences -> Build, Execution, Deployment -> Compiler -> Check ""Make project automatically""   I don't think you understand what incremental compilation really means. With AS, you need to trigger a full build before errors in unopen files show up, this is what's annoying. Making this build automatic doesn't solve the core issue. If you're not familiar with what I mean, spend a few hours with Eclipse and after that, compiling with AS will look a lot more painful to you.   No ""Problems"" view Analyze -> Inspect Code   This doesn't come remotely close to the convenience of Eclipse's ""Problems"" view, which gets automatically updated across the entire project as you type.   Poor ADB support YMMV for that. I use Genymotion emulators which have been known to be iffy with ADB but they're always updating and improving to fix that problem.   So your answer to poor adb support is not to use real devices. That's nice but not really an answer. The bottom line is that when you connect devices via USB, Android Studio's connection to adb becomes very flaky and often requires killing and restarting adb.   Those of you refusing to use Eclipse for Android development are just hurting yourselves.   So you're recommending to use Eclipse now? I'm confused, that's not good advice.   But seriously, take an hour and learn how to use AS instead of bitching and complaining of learning something new. You're software devs.    I've been using Eclipse for ten years and IDEA for about five and I use both on a daily basis. I consider myself a power user on both IDE's, but I suspect you're the one who hasn't used Eclipse in a while and I encourage to do so, just to stay sharp (although obviously not for Android).  Again, my point is not to say one IDE is better than the user: I use and like both, but I just can't stand it when IDEA fans come out of the woodwork to criticize Eclipse while showing they clearly haven't used it in a long time and they don't really understand its strengths and weaknesses."
androiddev,3baqda,aldo_reset,2,Sat Jun 27 19:05:33 2015 UTC,"I don't think you understand what incremental compilation really means.    I don't understand that too, AS/IJ clearly has incremental compilation - it compiles only changed and dependant classes.  No need for full rebuild."
androiddev,3baqda,meotau,1 point,Sun Jun 28 01:03:04 2015 UTC,Genymotion ADB works fine if you specify the same ADB for GM as you do for the SDK.
androiddev,3baqda,Zhuinden,1 point,Sat Jun 27 19:02:23 2015 UTC,"A bit tangential, but do you know of any resources for complete beginners that focus on Android Studio and Gradle? I've been searching a lot and found that most of the ""introductory"" materials make are really introductions for those who have previous experience with android development (or just development in general, really). Gradle, in particular, is a little difficult to understand initially, especially for someone who has only made a few simple 'beginner'-type apps in eclipse."
androiddev,3baqda,Bohemian_Penguin,1 point,Sat Jun 27 19:02:43 2015 UTC,Commonsware and I believe Big Nerd Ranch both do this.
androiddev,3baqda,yetanotherwoo,7,Sun Jun 28 02:00:40 2015 UTC,official blog post link (which I should have submitted instead) - http://android-developers.blogspot.com/2015/06/an-update-on-eclipse-android-developer.html
androiddev,3baqda,bubbleguuum,4,Sat Jun 27 13:42:41 2015 UTC,"Eclipse is a great IDE, especially for projects spawning many languages. I'm glad to see at least some people appreciate it here. And stating that is not saying that AS/IDEA is bad."
androiddev,3baqda,markyosullivan,20,Sat Jun 27 20:21:49 2015 UTC,I don't know why people are still using Eclipse. AS >>>> Eclipse.
androiddev,3baqda,aldo_reset,41,Sat Jun 27 13:09:01 2015 UTC,"And every time there's a discussion about IDEA and Eclipse, people like you (who often haven't used Eclipse in years, if at all) come up and write silly things like ""AS is so much better than Eclipse, Eclipse is crap"".  IDEA is very strong but Eclipse is still ahead of it in a few areas:   Incremental compilation The ""Problems"" view Integration with the device monitor, hierarchy viewer, etc... AS' adb support is still very unreliable and requires me to relaunch it often or my devices stop being recognized   I'm tired of pressing Ctrl-F9 a hundred times a day in IDEA. This is 2015, I should never have to build anything manually.  Also, refactorings that touch a lot of files are very painful to do in IDEA for the same reason. With Eclipse, all the files that are in error immediately show up in the Problems view. With IDEA, I need to trigger a build first.  I continue to use both (AS for Android, Eclipse for everything else) and it feels to me that AS is becoming a bit slower with every release. I wouldn't notice if I didn't switch back regularly to Eclipse where the cursor and text editing always feel lightning fast.  I'm very sad to see official support for Eclipse end, because regardless of your personal feelings toward AS or Eclipse, it's never healthy to have only one tool without any competition."
androiddev,3baqda,NeverComments,6,Sat Jun 27 14:19:57 2015 UTC,Between the short delay for compilation every single time I want to redeploy my code and both the inexplicable UI lag and font blurriness IDEA produces at higher resolutions I'm finding it difficult to switch to it on my machine.  I always end up going back to Eclipse.
androiddev,3baqda,Zhuinden,5,Sat Jun 27 14:42:20 2015 UTC,Refactoring that affects a lot of files doesn't break for me in AS. It never worked even once properly in Eclipse.
androiddev,3baqda,yubhb2,7,Sat Jun 27 19:00:24 2015 UTC,"You might want to spend some time to configure your environment properly.   Given that people are providing answers to your complaints in AS, so might you."
androiddev,3baqda,Zhuinden,-1,Sat Jun 27 19:07:35 2015 UTC,"AS renames strings too,  not just variables.  Eclipse certainly doesn't do that."
androiddev,3baqda,ALLCAPS_SWEAR_WORDS,11,Sat Jun 27 19:30:36 2015 UTC,"I'm tired of pressing Ctrl-F9 a hundred times a day in IDEA. This is 2015, I should never have to build anything manually.   Compiler Settings, ""Make Project Automatically"". Problem solved."
androiddev,3baqda,MacroMeez,2,Sat Jun 27 20:39:14 2015 UTC,"Is it actually ""healthy competition"" if it's only one team?"
androiddev,3baqda,sonorangoose,3,Sat Jun 27 16:34:33 2015 UTC,"Another Eclipse feature I liked (missing from IntelliJ) is called ""Content assist can insert argument names automatically"". You can then use the Tab key to navigate between the inserted names.  for example, I could type:  Observable.merge(   And there would be a list of possible methods. I select that one, and eclipse provides the code including argument names, and you tab over them to edit or accept."
androiddev,3baqda,Zhuinden,3,Sun Jun 28 01:34:30 2015 UTC,Ctrl+P sounds fairly equivalent.
androiddev,3baqda,s73v3r,2,Sat Jun 27 17:53:54 2015 UTC,"Ctrl+P pops up a tooltip. Which usually is good enough, but sometimes it can pop the tooltip up over a line or two that you want to see at the same time."
androiddev,3baqda,sonorangoose,2,Sat Jun 27 18:59:28 2015 UTC,"Ctrl-P only shows options.  ""Content assist can insert argument names automatically"" goes beyond that: you can select a method signature, and eclipse generates the code. It then lets you tab between each argument to accept, change, or select if previous types in scope were compatible.  https://www.safaribooksonline.com/library/view/eclipse-cookbook/0596007108/ch03s09.html  If there is some other way to do this in IntelliJ i'd really like to know..."
androiddev,3baqda,logicmonkeydev,1 point,Sat Jun 27 20:10:27 2015 UTC,"I have used both for a very long time and I would like to add that AS is at-least on par if not better than eclipse in most things except: Native code (c++, I tried very long time ago so not sure if AS has made any improvements) Accessibility (I was playing around with it, not sure how many blind coders are out there but eclipse seems to have better support).  I hope jetbrains can cover these bases."
androiddev,3baqda,c0nnector,0,Sat Jun 27 22:02:32 2015 UTC,I think it's very healthy if we focus on one tool and make it the best rather than having many crappy options.
androiddev,3baqda,ljdawson,1 point,Sat Jul 4 18:48:25 2015 UTC,You're missing the point. What if you're left with one crappy option?
androiddev,3baqda,c0nnector,2,Sat Jun 27 15:21:20 2015 UTC,Then the community will know who to blame and will be very vocal about it.
androiddev,3baqda,MacroMeez,1 point,Sat Jun 27 18:31:37 2015 UTC,You're totally right given that both projects are from the same people. It's not competition if it's one team having to support two environments
androiddev,3baqda,markyosullivan,-5,Sat Jun 27 19:54:01 2015 UTC,"One tool can also be seen as a good thing. With everyone using Android Studio, it'll mean all tutorials and guides will use Android Studio to prevent any confusion for any new Android developers."
androiddev,3baqda,hakired,21,Sun Jun 28 01:33:55 2015 UTC,Its because some people use eclipse for everything. I use eclipse for python perl and Java. So it's just much more convenient to just use 1 ide because it behaves how you expect it to.
androiddev,3baqda,SergeantFTC,11,Sat Jun 27 14:23:02 2015 UTC,"IntelliJ can do that too, and its Android support is just as good as Android studio's."
androiddev,3baqda,0x652,-15,Sat Jun 27 13:55:46 2015 UTC,Open source though..
androiddev,3baqda,c0nnector,20,Sat Jun 27 14:19:40 2015 UTC,"Is this like a hipster thing? Intellij is open source too, the free version anyway. I feel like there are more excuses than actual reasons"
androiddev,3baqda,0x652,-7,Sat Jun 27 14:56:55 2015 UTC,"Oh, I did not know that. I have been using webstorm which while excellent is sadly not open source as far as I know"
androiddev,3baqda,s73v3r,1 point,Sat Jun 27 15:15:56 2015 UTC,Which IntelliJ is.
androiddev,3baqda,DatoDave,2,Sat Jun 27 16:05:07 2015 UTC,"Interesting...I am not an android dev but I always heard the opposite that Eclipse + ADT is lot better than Android Studio. The android devs  I know, are right now not really happy about Google's decision."
androiddev,3baqda,robotnixon,4,Sat Jun 27 20:11:11 2015 UTC,"It's just the learning curve of the switch. I used eclipse for years before having to switch to AS, and it was pretty brutal at first. One thing that helped me, is that AS (or intellij, I guess) has a ""use eclipse style keyboard shortcuts"" option in the settings. That helped a TON for debugging and moving through code. Made the switch much less painful."
androiddev,3baqda,Zhuinden,3,Sat Jun 27 13:44:02 2015 UTC,"I like Eclipse, but AS is better. There's some quirks to it that can be frustrating at first, but I spend a lot less time wrestling with it than I did with Eclipse."
androiddev,3baqda,Vorsorken,1 point,Sat Jun 27 14:04:11 2015 UTC,"They are just lazy to learn. AS has been decent since 1.0 and keeps getting better. Gradle is kinda slow,  but they are improving that too."
androiddev,3baqda,omni_whore,1 point,Sat Jun 27 13:53:09 2015 UTC,"Well for me, I just have not had the time/interest to migrate. I basically only do Android dev for my research lab these days and the last thing I have time for is migrating to a new IDE and build system when everything ~just works~ currently.  I'll take some advice if someone is willing to offer it: how should I go about migrating a big library project? It is vc'd with git and I don't want to completely destroy the history. Do I just need to grok the new file structure and spend some time with git mv? Also, last I remember, you can't work on a library project and another project at the same time? What is the workflow for updating a library and then updating and running several apps that depend on it?"
androiddev,3baqda,arcticblue,3,Sat Jun 27 19:01:16 2015 UTC,"Hey Google, why don't you actually finish the NDK support before you fuck us over?"
androiddev,3baqda,omni_whore,2,Sat Jun 27 15:24:50 2015 UTC,Doesn't AS 1.3 have NDK support?
androiddev,3baqda,eleven_t,-1,Sat Jun 27 20:37:30 2015 UTC,Whatever I installed a few days ago (yesterday?) didn't allow linking multiple libraries which basically makes it useless for any real purpose.  I guess the normal thing to do at the moment is to force gradle to skip the NDK build part and just do it manually.  Then you have the different file structure to deal with all you have to waste time making janky build scripts to put the compiled libraries in the proper directories and at that point it's like why is this better?
androiddev,3baqda,omni_whore,2,Sun Jun 28 03:09:07 2015 UTC,You should track this: https://github.com/googlesamples/android-ndk. Android gradle plugin 1.3.0 plugin has not been released yet so only if you build it from source you will get the latest NDK integration. Just wait a little bit more ;]
androiddev,3baqda,arcticblue,1 point,Sun Jun 28 04:40:58 2015 UTC,"oooohhhh nice, I might check that out later today"
androiddev,3baqda,TrainFan,1 point,Sun Jun 28 09:43:28 2015 UTC,"Well, 1.3 is the first version with NDK support and I guess it's still early.  Regardless, they are working on it and they aren't going to drop Eclipse while AS is lacking in the NDK department."
androiddev,3baqda,DatoDave,7,Sun Jun 28 20:21:05 2015 UTC,Good riddance.
androiddev,3baqda,DGolden,12,Sun Jun 28 11:02:52 2015 UTC,"I selfishly agree. We make android libraries, and before gradle, there was no easy way to ship compiled bits. With gradle, you compile them into .aar files and ship that. As long as eclipse is supported, we also have to provide support on how to make use of our library projects (it's a PITA). That sucks, and we always push customers to use AS. This will make it easier."
androiddev,3baqda,DGolden,1 point,Sat Jun 27 13:30:28 2015 UTC,"Haven't really looked at the new(ish...) .aar stuff in depth, but eclipse grew general gradle project support some time ago.   I mean, my current (app not lib) android project is a gradle project under eclipse.  Given android gradle builds just call out to the android sdk via the android plugin for gradle, thinking about it I don't think that aspect is a real problem.  Breaking those weird old legacy android eclipse project builds is another matter, but well, meh, gradle now.  So the real loss to me sounds like abandonment all the eclipse android tools integrations - device manager, launch on real or virtual device, remote debugger, ui designer etc.  No longer one-click deal from within eclipse."
androiddev,3baqda,Lindby,2,Sat Jun 27 14:07:30 2015 UTC,Mind you also looks like there's a non-google project started for some continued android tools under eclipse:  https://projects.eclipse.org/projects/tools.andmore
androiddev,3baqda,DatoDave,2,Sat Jun 27 15:42:20 2015 UTC,"Andmore have the blessing from Google to fork ADT and keep it alive. I hope they can do it, they seem to know what they are doing."
androiddev,3baqda,DGolden,1 point,Sat Jun 27 16:06:18 2015 UTC,"It might have gotten better, but it was real hackish for a while there. Like I said, it's a selfish thing for me, just because I don't want to support it. I would have never switched myself if I didn't have to, but I also understand googles perspective. Supporting two environments sucks. haha"
androiddev,3baqda,TODO_getLife,1 point,Sat Jun 27 22:04:21 2015 UTC,"The original android eclipse ""library project"" system was indeed very wtfworthy, you're probably thinking of that.  I don't particularly like gradle compared to its major competitor *, but it's far more sensible and I can tolerate it.   (* i.e. maven, which is less prone to facilitating ""clever"" shite than gradle, modulo recent polyglot-maven which fills me with dread, wish they'd stuck to non-xml but still purely declarative languages like json/yaml/hocon/whatever for their polyglot-ness - allowing groovy, ruby etc risks allowing gradle-like messes. There is a maturing effort at maven-based android builds, but I suppose it's not first-party/google-blessed like gradle, still I might switch to it)."
androiddev,3baqda,DGolden,1 point,Sat Jun 27 15:46:43 2015 UTC,Good stuff.
androiddev,3baqda,tanis7x,-2,Sat Jun 27 15:59:54 2015 UTC,"ugh, I don't really understand how people prefer intellij but whatever, might as well ask why people prefer vim over emacs. Intellij is just meh to me, but I prefer emacs to vim too.  I kind of doubt they'll end the releases of the underlying standalone android sdk / command line tools bundle though,  that matters so that the cross platform frameworks [libgdx etc.] can still use the raw sdk to compile for an android target."
androiddev,3baqda,QuestionsEverythang,2,Sat Jun 27 13:20:35 2015 UTC,"I kind of doubt they'll end the releases of the underlying standalone android sdk / command line tools bundle though, that matters so that the cross platform frameworks [libgdx etc.] can still use the raw sdk to compile for an android target.   Why would they? Studio uses the same SDK, SDK manager, and command line tools.  One of the biggest hurdles that it seems people have in switching is understanding that the IDE (Eclipse, Android Studio), build system (Ant, Maven, Gradle), and tools (ADB, the SDK, etc) are all completely separate components that operate mostly independently of each other.   Some components may work better with certain other components, but none of the above are intrinsically tied together."
androiddev,3baqda,Zhuinden,1 point,Sat Jun 27 14:31:19 2015 UTC,"A lot of people with complaints in this thread are misguided and sound like they just never gave AS a chance.      One of the biggest hurdles that it seems people have in switching is understanding that the IDE (Eclipse, Android Studio), build system (Ant, Maven, Gradle), and tools (ADB, the SDK, etc) are all completely separate components that operate mostly independently of each other.     If anything, AS is what brings the build system and ADB/SDK tools together (thus the term Integrated Developer Environment)"
androiddev,3baqda,ultrapreneruship,-4,Sat Jun 27 19:07:04 2015 UTC,"Vim is terrible,  just use an IDE or a text editor,  because Vim is neither.  :wq?"
androiddev,3baqda,Detox1337,-2,Sat Jun 27 22:47:52 2015 UTC,Android studdio is so nice to work in compared to Eclipse.   thanks God eclipse presence in android isn't as big as in Java EE.
androiddev,3baqda,m0zzie,0,Sat Jun 27 19:03:52 2015 UTC,I love how Google forces me to always do it the Google way.  I was having so much trouble making my own decisions. If Apple wasn't worse I'd be gone already.
androiddev,3baqda,iwouldntknowthough,3,Sat Jun 27 14:39:14 2015 UTC,"Oh wow, don't be so dramatic.  They've updated to a new development tool which they believe is superior, and right there in their post they give you the option to stick with the old tools: ""We are focused on Android Studio so that our team can deliver a great experience on a unified development environment. Android tools inside Eclipse will continue to live on in the open source community via the Eclipse Foundation.""  They even provide a link to the ongoing Eclipse project.  Everyone needs to stop acting like the Android team are assholes for no longer supporting a product which has been superseded."
androiddev,3baqda,biafra,0,Sun Jun 28 06:43:26 2015 UTC,Yes! Now my employer will be forced to switch and I can finally stop using eclipse.
androiddev,3baqda,badlogicgames,5,Mon Jun 29 02:05:08 2015 UTC,You should consider working somewhere else. Dictatig the use of a certain IDE is just wrong and unnecessary.
androiddev,3baqda,biafra,1 point,Sat Jun 27 21:58:04 2015 UTC,You mean like Google dictating that AS is the only supported IDE for Android? scnr :)
androiddev,3baqda,QuestionsEverythang,1 point,Sat Jun 27 22:17:47 2015 UTC,"Why would you need a supported IDE? You do not need an IDE to build Android apps. Use an Editor of your choice and Gradle on the command line. Or Maven or Ant. Or whaterver build tool you prefer. I never used Eclipse for Android development. I used IntelliJ IDEA since 2009 and ""switched"" to AS in 2014."
androiddev,3baqda,iwouldntknowthough,0,Sun Jun 28 08:41:54 2015 UTC,Does your employer also use Windows XP?
androiddev,3baqda,lordoftherings911,2,Tue Jun 30 08:58:47 2015 UTC,nope Ubuntu
androiddev,3beccz,ramsr,2,Sun Jun 28 12:52:47 2015 UTC,"I've used orm, but moved to pure SQL recently. All that ormlite, realm, greendao etc do not worth it. Just convert cursor to AutoParcel objects right after a query and you can freely pass them around.  Wait a second... in  a library project? Do not use a database in a library. Provide an interface to a library, let library user decide how data should be persisted."
androiddev,3beccz,jackhexen,1 point,Sun Jun 28 13:25:06 2015 UTC,"Why do you say it's not worth it?   And yea, i kinda figured it wasn't the best idea to use a database in a library project"
androiddev,3beccz,jackhexen,2,Sun Jun 28 15:02:06 2015 UTC,"You will need to study an ORM engine and then stuck to it. Your refactorings and other decisions will be based on the fact that you're using an orm. You will just not be able to get rid of it if you suddenly decide that you don't need it.  After a couple of months you will decide that you want to use another approach (say, you will want to return AutoParcel from the database layer, that was my case) and then you will have ORM, code that converts ORM objects into AutoParcel, then you will have RxJava layer that will deliver it to your views, you will convert data from server's json into POJO, then you will convert POJOs into ORM, etc. All this conversions are just too much of work. One day I found that I have 6 layers of database access objects. :D  So, on my current project I do not use ORM anymore. Just direct SQL->AutoParcel conversion.There is a very good example for such approach: https://github.com/square/sqlbrite  I didn't try it yet, but there is also a possibility to semi-automatically convert json into AutoParcel objects, this will allow me to totally eliminate all conversions."
androiddev,3beccz,bart007345,1 point,Sun Jun 28 16:37:18 2015 UTC,I used ormlite. Bit of a learning curve (not used used sqlite before) but it works ok. I did put it in a library and no issues there either.  I saw realm recently. Looks interesting.
androiddev,3be8x3,aoivaldez,5,Sun Jun 28 12:04:07 2015 UTC,"Create a ""base"" activity which has no constructor and add there every method u want to share between your other activities. Extend the base activity and you are ready to go.  if your app uses a drawer I suggest you to have a single activity and change the content of your view with fragments."
androiddev,3be8x3,ElladanValdamir,2,Sun Jun 28 14:12:36 2015 UTC,thanks man!! it makes my code cleaner now
androiddev,3bcnpg,markyosullivan,1 point,Sat Jun 27 23:25:33 2015 UTC,I've previously submitted this template before back when it only supported Lollipop devices but now I've added support for pre-lollipop devices and also the option to add instruction pages for the wizard.  I've got a separate branch where I've only got the Material Design support added and have submitted a pull request to Roman Nurik so if he thinks it'd be useful to add material design to his repository he will hopefully accept my pull request.  I hope people find this template useful!
androiddev,3bdtlf,Time_Stops,4,Sun Jun 28 07:27:08 2015 UTC,"Lots of these streaming services either won't have a public api, or will prohibit what you're doing in their TOS, so you may get shut down, or find it difficult to start. But without knowing the specifics of your app it's hard to say."
androiddev,3bdtlf,alexisnotonfire,1 point,Sun Jun 28 08:54:13 2015 UTC,"Word, I appreciate the response. Overlooking that fact for now, what advice would you have for getting the ball rolling?"
androiddev,3bdtlf,megamatt2000,2,Sun Jun 28 14:01:09 2015 UTC,Are you a developer?
androiddev,3bdtlf,gman83,1 point,Sun Jun 28 14:06:05 2015 UTC,"Nope, I have no experience whatsoever."
androiddev,3bdtlf,lodc,1 point,Sun Jun 28 14:41:49 2015 UTC,https://developer.spotify.com/technologies/spotify-android-sdk/
androiddev,3bdtlf,lodc,1 point,Sun Jun 28 20:53:06 2015 UTC,"To answer your question, the next step is to put together a business plan.  Research the market, determine how income will work and how profitable the business will be, etc.  If you can prove it's a viable business, arrange the funds you will need to get started through investment or whatever.   If you get that in line, then start worrying about actually creating an app.  You'll likely want to sub contract this part since you don't have technical expertise yourself, but you could try to hire people directly too.  That's a long way down the road though."
androiddev,3bd9ha,snoop911,1 point,Sun Jun 28 03:11:13 2015 UTC,Do not more recent versions of Android support USB audio? That link is pretty old
androiddev,3bbpn1,ZakTaccardi,1 point,Sat Jun 27 18:15:05 2015 UTC,"Uhhh... GCM servers just need a simple and straightforward REST request. Why do you need a library? Use whatever you're using to do RESTful requests on your backend, Jersey or whatnot."
androiddev,3bbpn1,Izacus,0,Mon Jun 29 09:42:27 2015 UTC,"I know I can build the JSON itself, but Google still should be making it as EASY as possible to do these things."
androiddev,3baz2n,anewnameagain,7,Sat Jun 27 14:08:23 2015 UTC,"Just keeping the strings in the source code versus an XML resource won't be much better. If you're going to go that route then encode them as an array of bytes so they aren't immediately obvious to any prying eyes as strings.  If there's a server involved, I suppose you could encrypt the information into a local database and request the decryption key from the server. Keeping the decryption key hidden somewhere in the app is obviously much less preferred but also an option if you can't rely on the server to provide the key. That's about as far as my experience takes me, however."
androiddev,3baz2n,EddieRingle,2,Sat Jun 27 14:17:57 2015 UTC,"Encrypt the strings using a private key packaged with the app, and decrypt them all when the app launches. Not perfectly secure but way better than having them out in the open. Obfuscate everything after and it should be pretty hard to put back together"
androiddev,3baz2n,zholmes,1 point,Sat Jun 27 16:52:47 2015 UTC,decrypt them all and store them?  wouldn't this approach be ineffective as one can force stop the application thus not allowing it to encrypt them again?
androiddev,3baz2n,indoda_jongens,1 point,Sun Jun 28 10:12:24 2015 UTC,"Well no, they would just be decrypted and stored in memory until the app closes. If the Strings need to be edited and saved, they can just be commited to SharedPreferences or a database on demand. No need to wait until onPause/onStop."
androiddev,3baz2n,zholmes,2,Sun Jun 28 10:27:17 2015 UTC,"If you can afford it, dexguard is a good and easy way to encrypt strings (and more) in your app. (Same people that make proguard)"
androiddev,3bast7,markyosullivan,6,Sat Jun 27 12:44:17 2015 UTC,I always like reading interviews like these because I tend to find them inspiring.
androiddev,3bast7,jayrambhia,-1,Sat Jun 27 12:45:15 2015 UTC,Android Messaging App should be changed to SMS App. I am not going against the author of the article or the guy who made the app.
androiddev,3bast7,NewToBikes,2,Sat Jun 27 18:37:01 2015 UTC,SMS stands for short message service and his app is for Android. How is Android messaging app wrong?
androiddev,3bast7,jayrambhia,-1,Sun Jun 28 00:08:12 2015 UTC,Messaging app generally means internet based messaging app. You set up your own servers. Drive users to use your services. Get more users so that there is someone to send messages to.  SMS service is available for everyone. You don't necessarily need to have the same app to send messages. That's the most difficult part in any chat based apps.
androiddev,3bast7,NewToBikes,1 point,Sun Jun 28 05:37:24 2015 UTC,"You're not getting it, are you? SMS is a type of messaging. Hell, Samsung's SMS all is called Messaging; and Google's own app is called Messenger."
androiddev,3bast7,i0way,1 point,Sun Jun 28 05:46:27 2015 UTC,INSTANT meassaging may be?
androiddev,3bast7,sagarsiddhpura,1 point,Sun Jun 28 05:54:29 2015 UTC,"Messaging itself is very large and covers all modes, chat, SMS and what not. SMS is part of messaging but I in today's world its just not only SMS."
androiddev,3ba84a,mavdev,3,Sat Jun 27 07:01:01 2015 UTC,"Are you talking about analytics of the app or the web site? But short answer, all those free-social-buttons and event-tracking referals are simply spammers abusing analytics."
androiddev,3ba84a,Dw0,1 point,Sat Jun 27 11:15:58 2015 UTC,This is analytics for an Android app
androiddev,3ba84a,instantbitsapps,1 point,Sat Jun 27 16:30:35 2015 UTC,I'm not certain if this is what /u/Dw0 is referring to but basically people generate fake analytics data in order to get you to visit their sites. They just use generate analytics app ids so everyone gets spammed.
androiddev,3ba84a,Dw0,1 point,Sat Jun 27 16:40:29 2015 UTC,"Wow. I didn't know they're spamming apps analytics also. Makes sense, though. Bloody spammers."
androiddev,3ba84a,instantbitsapps,1 point,Sat Jun 27 16:49:32 2015 UTC,"I don't think it is on purpose, I think it is more of they have no way of knowing if that analytics id they generated is an app or a site. I'm guessing the underlying api calls are the same, but maybe I'm wrong."
androiddev,3ba84a,instantbitsapps,1 point,Sat Jun 27 20:20:51 2015 UTC,"I have not done anything like that. I simple added only one Analytics ID in my Android app. Under sources, I see these other entries but have no idea what they are or where they are coming from."
androiddev,3ba84a,instantbitsapps,1 point,Sat Jun 27 16:52:24 2015 UTC,"When I said:   people generate fake analytics data   I didn't mean you, I meant the companies that are trying to spam you. So let's say that I have a shitty website to drive traffic (xyz.com) and I want to let people know about it. I generate Analytics IDs and create fake hits as if my site (xyz.com) was the referrer, that way people go to my site (xyz.com) to see why their app/site was linked to from there."
androiddev,3b6ps9,kyle0623,49,Fri Jun 26 12:26:50 2015 UTC,here ya go  https://github.com/codepath/android_guides/wiki  https://github.com/futurice/android-best-practices
androiddev,3b6ps9,pentolbakso,6,Fri Jun 26 14:59:59 2015 UTC,This is perfect. I had no idea this existed.
androiddev,3b6ps9,Szoro,1 point,Fri Jun 26 16:45:53 2015 UTC,Eye opener - been after something like this for a while
androiddev,3b6ps9,PraxisDev,4,Fri Jun 26 18:11:11 2015 UTC,"Second link is pretty nice, but I personally prefer GSON"
androiddev,3b6ps9,BestSanchez,1 point,Fri Jun 26 18:46:49 2015 UTC,My god. These are the best I've seen yet.
androiddev,3b6ps9,panwrona,6,Sun Jun 28 02:26:12 2015 UTC,"Look at this post: http://hannesdorfmann.com/android/mosby/ . It is a great architecture design with library. And the explanation of how it works is awesome ;) there is a second article from Hannes, also explained well ;)"
androiddev,3b6ps9,_bluecup_,6,Fri Jun 26 15:14:37 2015 UTC,"Here is some, MVP and Dagger 2. If you like it, star it :)  Help.ee app"
androiddev,3b6ps9,TheSamich,1 point,Fri Jun 26 16:29:51 2015 UTC,"Oooh I am definitely enjoying some of the approaches here. Package organization could use a little work, but overall, good use of MVP. Star'd!"
androiddev,3b6ps9,_bluecup_,1 point,Fri Jun 26 16:51:17 2015 UTC,"Thanks. What exactly do you mean by package organization? I'm open to suggestions, it's just a hobby project and didn't get to spend much time on it unfortunately, but I hope I will get to soon."
androiddev,3b6ps9,bbqburner,1 point,Fri Jun 26 16:58:46 2015 UTC,"Short word for treating packages as logical folders. Yours alright but maybe too verbose?   Also, I noticed that you switched from Fresco to Glide. Mind sharing your opinion on that decision? I haven't really tried Fresco although did look at it a while back and now wondering if its good to switch to it from Glide (I have lots of image items, in tabbed fragments especially)."
androiddev,3b6ps9,adrock3000,1 point,Fri Jun 26 21:42:22 2015 UTC,"If you have the room in your method count, glide is great. I like Picasso since it's super small comparatively."
androiddev,3b6ps9,_bluecup_,1 point,Sat Jun 27 01:28:46 2015 UTC,"Yeah, I thought Fresco seemed great at first so I wanted to try it out. Unfortunately, it's still in hard beta. Stuff like roundAsCircle=""true"" works 50/50, ImageView is heavily modified to be a ""Drawee"" and you have to rely on their custom classes, loading and resizing seems to take longer than using glide, and last but not the least circumventing the Android memory management isn't something I'm really into and could cause problems."
androiddev,3b6ps9,cotsog,5,Sat Jun 27 13:06:45 2015 UTC,https://github.com/JakeWharton/u2020   A sample Android app which showcases advanced usage of Dagger among other open source libraries.
androiddev,3b6ps9,pickle_inspector,1 point,Fri Jun 26 18:19:22 2015 UTC,This guy has some great articles http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/
androiddev,3b6ps9,jeffcompton,1 point,Sat Jun 27 15:44:33 2015 UTC,Someone posted this a little while ago.  older post
androiddev,3b6ps9,arsent,1 point,Fri Jun 26 16:13:18 2015 UTC,Google's IO app is a great resource for learning the best practices  https://github.com/google/iosched
androiddev,3b6ps9,sourd1esel,-3,Fri Jun 26 23:03:48 2015 UTC,I would like to know something regarding design architecture .
androiddev,3b6ps9,adeteejay,-8,Fri Jun 26 14:19:47 2015 UTC,Mr too
androiddev,3ba21h,tonespy,6,Sat Jun 27 05:40:15 2015 UTC,"Follow these steps.   Have a toolbar. Don't give any theme to toolbar Put an edit text into it with background @null. Give a hint to it. Surround resulted toolbar in a card view Give it a margin (Left and Right are recommended) Can't access dropbox right now but after that you can get pretty much raw search bar like google play's landing activity, sans that fancy GooglePlay writing.   You can set whole toolbar as your support action bar and inflate menu(s) with it."
androiddev,3ba21h,lordVader1138,1 point,Sat Jun 27 14:15:18 2015 UTC,"Well, I just did this, I think there's no way I'll be doing this without using toolbar"
androiddev,3ba21h,lordVader1138,1 point,Sat Jun 27 21:54:46 2015 UTC,Yes. And for exact result you may go with fragments
androiddev,3ba21h,Quinny898,1 point,Sun Jun 28 03:08:14 2015 UTC,"Yeah. I use fragments a lot. Most of the times, I don't have more than one activity in my application"
androiddev,3ba21h,Quinny898,2,Sun Jun 28 09:58:31 2015 UTC,I have a library that might be what you want: https://github.com/Quinny898/PersistentSearch It's pretty buggy now but I intend to improve it when my development machine comes fully back
androiddev,3ba21h,Suleiman19,1 point,Sat Jun 27 09:29:45 2015 UTC,"Yeah. Something like that, how buggy? If you can tell me how buggy maybe I can help in improving it. Thanks."
androiddev,3ba21h,Furyan,1 point,Sat Jun 27 09:43:33 2015 UTC,"Check the issues, there's a few there"
androiddev,3ba21h,Furyan,1 point,Sat Jun 27 10:38:41 2015 UTC,Do you mean something like the search in this image? http://hotdigitalnews.com/wp-content/uploads/2013/07/gmaps2e.png
androiddev,3ba21h,Suleiman19,1 point,Sat Jun 27 07:00:41 2015 UTC,Yeah. Something like that https://www.dropbox.com/s/sdu9pyqlypnbovy/Av-bR3_70-bgUiXLYoHVCDhGDsxYJzbCY81Ej-FR_NZX.jpg?dl=0
androiddev,3ba21h,Cg2XHPxz,1 point,Sat Jun 27 09:39:49 2015 UTC,"My guess would be to use the SearchView, with setIconifiedByDefault() you can auto expand the search view and for the suggestions you would probably implement a setOnSuggestionListener()"
androiddev,3ba21h,pandanomic,1 point,Sat Jun 27 10:23:52 2015 UTC,Yeah. I tried that and what I get was still the same search on ActionBar version
androiddev,3ba21h,Suleiman19,1 point,Sat Jun 27 10:25:48 2015 UTC,Is this what you want? Maybe I misunderstand your question.
androiddev,3ba21h,jtgilkeson,1 point,Sat Jun 27 10:40:35 2015 UTC,Nope this
androiddev,3b8jck,Taikflip,2,Fri Jun 26 20:55:06 2015 UTC,"Wait, so we can finally make square images and arbitrary runtime layouts without sacrificing a goat to Nyarlathotep?"
androiddev,3b8jck,pakoito,2,Sat Jun 27 00:03:56 2015 UTC,I had to save up for yonks to buy this goat. It will be sacriciced regardless.  How this library needed to be a thing at Android 5 is beyond me. This should have been there from the start..
androiddev,3b8jck,morgazmo99,1 point,Sat Jun 27 06:07:28 2015 UTC,How this library needed to be a thing at Android 5 is beyond me. This should have been there from the start..    I'm amazed percents wheren't include long tie ago too
androiddev,3b8jck,ultrapreneruship,1 point,Sat Jun 27 14:33:31 2015 UTC,"You could make them with LinearLayouts, but it implied a lot of nesting and overdraws.  Now the only thing missing is transitive anchoring."
androiddev,3b8jck,pakoito,1 point,Sun Jun 28 03:53:35 2015 UTC,"CoordinatorLayout for anchoring? I've tried recently, it works!"
androiddev,3b8jck,jackhexen,1 point,Sun Jun 28 12:40:15 2015 UTC,"Question, can I say view A is anchored to view B; view B is anchored to view C; then get the three of them line up? You couldn't with RelativeLayout."
androiddev,3b8jck,pakoito,2,Sun Jun 28 12:44:02 2015 UTC,"Yes you can. You can even animate them together. The source code is in the sdk: android-sdk\sources\android-MNC\android\support\design\widget\CoordinatorLayout.java  You will need to set      app:layout_anchor=""@id/anchor""     app:layout_anchorGravity=""top""     android:layout_gravity=""top"""
androiddev,3b8jck,jackhexen,1 point,Sun Jun 28 13:02:46 2015 UTC,So this is an official android lib? Awesome. Backward compatibility?
androiddev,3b8jck,ASKnASK,4,Sat Jun 27 12:44:13 2015 UTC,yes it is official and appcompat v7 !
androiddev,3b8jck,_mars_,1 point,Sat Jun 27 12:55:31 2015 UTC,No it's not
androiddev,3b8jck,ChristianLJ,1 point,Sun Jun 28 09:28:54 2015 UTC,Why not?
androiddev,3b8jck,_mars_,1 point,Tue Jun 30 14:00:04 2015 UTC,"I thought it was just a badly picked namespace, because I couldn't find anything in the official docs... but looks like I was wrong ... https://github.com/JulienGenoud/android-percent-support-lib-sample/issues/6"
androiddev,3b7nz7,burntcookie90,6,Fri Jun 26 17:05:30 2015 UTC,"I switched to AS a while ago, when it was clear Google was going in that direction ... but I really miss Eclipse and better incremental compiling, problem view, etc. And the whole setup was much less resource hungry.  This was inevitable, but still makes me sad.  ""Over the next few months, we are migrating the rest of the standalone performance tools (e.g. DDMS, Trace Viewer) and building in additional support for the Android NDK into Android Studio""  Hopefully these will be plugins so I can disable what I don't use (hopefully saving memory).  Side note: it would be cool if Google did what Microsoft did with Sublime Text plugin(1). For those of us with more modest machines, an official Android Sublime Text plugin that integrated with gradle would be a nice light weight alternative to Android Studio.  (1) https://github.com/Microsoft/TypeScript-Sublime-Plugin"
androiddev,3b7nz7,sonorangoose,2,Fri Jun 26 19:50:16 2015 UTC,"Absolutely agree, wish it were less CPU intensive so my battery would last the while train trip.  Although the benefits of annotated code far outweighs the trouble with setting it up on eclipse."
androiddev,3b7nz7,twigboy,2,Fri Jun 26 23:36:47 2015 UTC,"I switched to AS a while ago, when it was clear Google was going in that direction ... but I really miss Eclipse and better incremental compiling, problem view, etc. And the whole setup was much less resource hungry.   I agree too. It is a weird world where Eclipse is the leaner alternative to something, but in case of Android development it is."
androiddev,3b7nz7,MaybeCarl,2,Sat Jun 27 07:03:38 2015 UTC,Very Sad
androiddev,3b7nz7,rkyiipa,4,Sat Jun 27 06:04:38 2015 UTC,Ding Dong the witch is dead!
androiddev,3b7nz7,GoldDog,1 point,Sat Jun 27 01:56:21 2015 UTC,Busy work!  Lovely.  :-I
androiddev,3b7nz7,anon0108,1 point,Fri Jun 26 23:43:00 2015 UTC,Latest ADT still works perfectly fine in Eclipse Mars. I use it to build a complex project along with maven tooling.
androiddev,3b7nz7,bubbleguuum,2,Sat Jun 27 09:02:45 2015 UTC,"That's too bad, I really can't get used to AS, it's not nearly as powerful as Eclipse is."
androiddev,3b7nz7,BorgDrone,3,Sat Jun 27 04:19:20 2015 UTC,"I can't say about the powerful aspect, but Eclipse feels faster and more reponsive than Android Studio (even with the new gradle version that still takes a lot of time to build trivial projects).  andmore can help."
androiddev,3b7nz7,MaybeCarl,1 point,Sat Jun 27 07:02:10 2015 UTC,"There are so many plugins for Eclipse, I use it for a lot more than just Android development. There are a lot of shortcuts I use regularly I haven't found an equivalent for in AS.   I'd rather have them spend time on writing a decent Eclipse plugin than on AS."
androiddev,3b9hlk,tytan34,5,Sat Jun 27 02:01:01 2015 UTC,"I haven't. I'm a little disappointed in what cloud lab offers. At IO2014  they showed off I'm guessing an early version of cloud lab where you could run your actual unit tests on cloud lab.  Now it seems it will simply take your alpha/beta builds and run the monkey tool on them. Useful, but it would be far more useful being able to run unit tests on cloud lab."
androiddev,3b9hlk,athornz,2,Sat Jun 27 03:28:52 2015 UTC,"Have you taken a look at the latest Fragmented podcast (http://fragmentedpodcast.com/) as well as the cloud lab website lately (https://developers.google.com/cloud-test-lab/)?  It appears as though the basic automated tests will be free and immediately available for users without having to write any test code themselves, but it will also provide an interface for accessing real and virtual devices to run custom tests on."
androiddev,3b9hlk,The_IT,3,Sun Jun 28 21:05:59 2015 UTC,No I haven't - glad to see user written tests will be possible!
androiddev,3b6j2r,Zhuinden,7,Fri Jun 26 11:09:03 2015 UTC,"Custom views just have a smaller lifecycle, so if you become completely familiar with it and develop a strategy for using them then they are a little bit simpler than fragments. But currently yes, I find fragments to be more comfortable when it comes to fragmentstack. So if you need a stack then you will also need a library."
androiddev,3b6j2r,jackhexen,1 point,Fri Jun 26 12:32:42 2015 UTC,"Saving the state is where the magic is at, that's where Flow and Mortar becomes an ""arcane folklore"" too. Views' state saving is strange stuff if it is not the Activity itself that truly manages it."
androiddev,3b6j2r,jackhexen,1 point,Fri Jun 26 17:34:53 2015 UTC,One day I will write an article about views. :D
androiddev,3b6j2r,Cg2XHPxz,1 point,Fri Jun 26 18:11:05 2015 UTC,"That would be great,  because so far,  no one else really did. Preferably without having to use rx."
androiddev,3b6j2r,marco-rs,3,Sat Jun 27 07:39:22 2015 UTC,I actually don't disagree with you but I know there are some smart people that do.   https://github.com/JakeWharton/u2020/blob/master/src/main/java/com/jakewharton/u2020/ui/trending/TrendingView.java  Here's a pretty clean version of this pattern that just sets everything up and refreshes the data when it's shown.   I would say in general the idea would be to minimize how much state you actually have to worry about in the view. Of course on rotation it's going to tear everything down and build it back up again.
androiddev,3b6j2r,cbruegg,2,Fri Jun 26 12:09:03 2015 UTC,Any thoughts on this https://github.com/evant/simplefragment ? The author now has some documentation and the library is up on Maven Central.
androiddev,3b6j2r,pakoito,1 point,Fri Jun 26 17:07:43 2015 UTC,"That looks really nice. If it works as well as he describes it, I could very well see myself using it. Maybe for my next private project.."
androiddev,3b6j2r,NMAndroid,2,Sat Jun 27 09:16:24 2015 UTC,"Has anyone considered replacing the ""fragmentmanager"" and ""stack"" with a tweaked viewpager and a deque of integers?"
androiddev,3b6j2r,Deafdev,-7,Fri Jun 26 17:09:32 2015 UTC,It is my opinion that Custom Views are counter to Android architecture in that Custom Views are MVC whereas Android is MVP.
androiddev,3b6j2r,donnfelker,3,Fri Jun 26 13:39:56 2015 UTC,Android is MVP   Can you qualify that statement?
androiddev,3b6j2r,Deafdev,-1,Fri Jun 26 15:25:43 2015 UTC,MVP- Model View Presenter (Now known as Passive View or Supervising Controller according to Fowler.)   MVC - Model View Controller
androiddev,3b6j2r,theshapersarecoming,1 point,Fri Jun 26 20:35:14 2015 UTC,"yeah, I know the patterns..."
androiddev,3bbw9c,philosophicalhacker,12,Sat Jun 27 19:13:07 2015 UTC,"""It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account."" - Confucius   Self promotion rules"
androiddev,3bbw9c,bukster,0,Sat Jun 27 20:49:30 2015 UTC,This quote is amazing.
androiddev,3bbw9c,pandanomic,-4,Sat Jun 27 21:15:10 2015 UTC,"Yikes. So, you think I'm violating the rules then?"
androiddev,3bbw9c,bart007345,5,Sat Jun 27 21:25:22 2015 UTC,"you have 3 pages of comment history in your profile. I saw only one other thread that you did not start yourself that you commented on.  Every thread you have started has been to promote your blog, talk or DroidJournal (which is you). I'd say you were breaking the rules.  But I'm not a mod."
androiddev,3bbw9c,bart007345,4,Sat Jun 27 21:49:25 2015 UTC,did you read the rules?
androiddev,3bbw9c,pandanomic,3,Sat Jun 27 21:42:07 2015 UTC,"I was only talking about that quote, not really in how it relates to you.   That said...  I'm on the fence. In your defense, I've personally only seen two blog posts and both weren't of the buzzfeed type. At the same time, they're both a little self-promoting for your blog and getting fairly negative feedback. I'm content to let the community just downvote what they perceive to be poor content, but if this becomes a several-days-a-week thing, you'll probably get a warning from us that it's becoming spammy."
androiddev,3bbw9c,moriartsy,1 point,Sun Jun 28 00:05:06 2015 UTC,That seems fair. Thanks for clearing that up. I'll keep this in mind going forward.
androiddev,3bbw9c,ciny,1 point,Sun Jun 28 11:04:36 2015 UTC,"I think you're allowed to post an article now and then from your own site. However if you primarily only post articles from your site, Reddit might ban your account :(   Don't post links to your own blog, unless you post a lot of content from other places   https://reddit.com/r/ShadowBan/comments/1x92jy/an_unofficial_guide_on_how_to_avoid_being/"
androiddev,3bbw9c,bart007345,-5,Sat Jun 27 21:42:10 2015 UTC,I think I'm mostly interested in what the mods have to say about this.
androiddev,3bbw9c,JakeWharton,1 point,Sat Jun 27 22:11:07 2015 UTC,"Yeah, tagged, and will downvote every post of yours I see over here regardless of content or mods opinion..."
androiddev,3bbw9c,raybritton,4,Mon Jun 29 10:14:27 2015 UTC,"Who actually peer reviewed YOUR articles?  I'll tell you once more, you missed the point of the article.  Can you use Fragments without presenters? YES  Can you use the ""Square alternative"" without fragments? YES  Which means, the alternative is NOT about MVP at all. He just put it in as a best practice, with the emphasis being on using custom views instead.  Lets assume we are talking about Activities and MVP in general. You have the same problem there. How would you solve them?"
androiddev,3bbw9c,JakeWharton,8,Sat Jun 27 19:40:55 2015 UTC,"...the alternative is NOT about MVP at all. He just put it in as a best practice, with the emphasis being on using custom views instead.   I'm a bit afraid how much focus the term ""custom views"" gets in talking about this. When we did use fragments we still used custom views a lot of the time. But you're spot on that it was an example, not the absolute only way forward.   Can you use Fragments without presenters? YES  Can you use the ""Square alternative"" without fragments? YES   Bingo. There's a definite conflation of three things from the original Square article:   Advocating against fragments. Advocating MVP Advocating Flow and Mortar.   I work at Square and I don't use MVP, Mortar, or Flow in the app that I work on. I sure as hell don't use fragments either.  The bottom line, for me, is that fragments are a poor choice due to their implementation. What's needed is a better state machine for managing the backstack, swapping of views (note the lack of ""custom"" qualifier, fragment manager swaps views as well!), and maybe a little bit of navigation help. It has nothing to do with MVP. It has nothing to do with Flow/Mortar—the former of which while an example of an attempt to be this state machine is not the only way forward."
androiddev,3bbw9c,pakoito,1 point,Sun Jun 28 05:38:31 2015 UTC,"So, if you don't use fragments or a custom back stack, how do you handle different layouts and content?  Also, what approach do you use instead of MVP?"
androiddev,3bbw9c,JakeWharton,5,Sun Jun 28 07:06:04 2015 UTC,I never said I didn't use a custom back stack.  Currently we're lazy and just throw everything into custom views. Any network operation (of value) is completely decoupled from the UI and talks to a local state store. Views subscribe to local state store for changes.
androiddev,3bbw9c,Lotan,1 point,Sun Jun 28 07:30:59 2015 UTC,"How do you feel about using ViewPagers as screen managers? They can instantiate views and bind them to their presenters. Constructing the backstack is just then a job of stacking integers for the ViewPager position and adding the corresponding presenter, whether it's a new one or a retained one."
androiddev,3bbw9c,bart007345,1 point,Sun Jun 28 22:28:06 2015 UTC,Never tried it. Certainly doable as a quick solution but I'm not sure well it would scale to a full app.
androiddev,3bbw9c,jackhexen,1 point,Mon Jun 29 06:02:34 2015 UTC,"Is that using SQLBrite for local store?    We recently moved to a similar scheme, although we use SQLite -> Content Provider -> Loaders.  The loaders are a little funky, but we really needed an easy IPC mechanism as we have other apks viewing the data.    I'm curious if you guys have a good way of handling the gross cursor parsing.    Follow up question: Are there good alternatives to content providers for IPC?"
androiddev,3bbw9c,mattlogan,-1,Mon Jun 29 21:12:52 2015 UTC,"As always, bart, I love the feedback. I'll keep trying to improve as long as you keep it coming.   No one reviewed my article, and I think that only serves to highlight the importance of peer review, which is really all I'm trying to do with droid journal anyway."
androiddev,3b9sno,CaddoSierra,2,Sat Jun 27 03:51:34 2015 UTC,I used one called simply DragNDropList iirc from a stackoverflow discussion high in Google's search results. If you are still looking Monday PM me and I'll find the exact package.
androiddev,3b9s97,0nmywayup,8,Sat Jun 27 03:47:20 2015 UTC,"There will always be bugs regardless of the type of app, and how good the developers are. There will also be some minor details that didn't communicate well to the developer.  I'd be much more concerned with how able and willing the developer(s) is to fix the issues you will inevitably find."
androiddev,3b9s97,denley,1 point,Sat Jun 27 04:48:13 2015 UTC,Thanks for the response! I will definitely keep that in mind.   Would it be very difficult for a new developer to do any fixes going forward since it isnt their code?
androiddev,3b9s97,piyanypowietszem,3,Sun Jun 28 21:02:52 2015 UTC,Divide the task into milestones and give them constant feedback.
androiddev,3b9s97,HaoChen,1 point,Sat Jun 27 10:48:19 2015 UTC,"Great idea, thanks!"
androiddev,3b7wr4,sonorangoose,4,Fri Jun 26 18:08:14 2015 UTC,"I know I can crank out my Android updates much faster because they appear in the store within hours. I don't mind building and pushing something that just has some smaller features.  When I do iOS work I dread the release to store cycle. Not that it is hard to do just that I hate waiting and I am nervous that if I screw up on little thing I could end up at the back of the line. So I get paranoid.  Being paranoid about your code is good in some ways. Hopefully you really feel it is ready to release as you know you have a big wait ahead of you. Android allows more of a coding cowboy approach. Toss it out there, find a bug, toss it again. I still try my best to release clean code but when I do screw up on the Android side the penalty is small, I can sheepishly fix the issue and send out new code."
androiddev,3b7wr4,MKevin3,2,Fri Jun 26 19:36:35 2015 UTC,This has been my exact experience as an Android/iOS developer for a small company.
androiddev,3b7wr4,batmanta,1 point,Sat Jun 27 00:32:11 2015 UTC,"When I do iOS work I dread the release to store cycle. Not that it is hard to do just that I hate waiting and I am nervous that if I screw up on little thing I could end up at the back of the line. So I get paranoid.   Any time I push an iOS app in for review (or decide to actually release it once it's been approved) it's always hold on to your butts.  The ability to do a staged rollout on Android, be able to retract it if need be, and just release whenever the hell you want is nice.   With the product I've been working on, we'd been targeting a specific release date for business purposes.  The Android app we could just put up on the store the night before.  With iOS we've basically had to have a ""gold"" version of the app ready 2+ weeks in advance, to hedge against the review queue being constipated or getting a random rejection.  We've had 10+ day review wait times before. And if there's a last minute bug that crops up after release, you've just got to either try to roll with it, or plead with Apple to get a fix expedited."
androiddev,3b7wr4,if_man_is_5,1 point,Sun Jun 28 01:45:48 2015 UTC,This is the first research paper I've seen that discusses how the frequency and nature of updates impacts downloads. In case anyone missed the link to the full report:  http://competitionpolicy.ac.uk/documents/8158338/8368036/15-4+CCP+Working+Paper+complete.pdf/87901320-3374-4cd5-ac30-78057b7109fe
androiddev,3b7wr4,vacajinjo,1 point,Fri Jun 26 18:54:57 2015 UTC,"This makes sense since reviews are lost in Appstore each time an app is updated and not in Google Play, Also the manual review of Appstore makes updates take more time to be online, so developers prefer to update only when is needed."
androiddev,3b5xte,Ziem,3,Fri Jun 26 06:08:55 2015 UTC,the things we do for love....
androiddev,3b5xte,bart007345,1 point,Fri Jun 26 09:28:47 2015 UTC,pushes a child out of a balcony window
androiddev,3b5xte,d3m0li5h3r,0,Fri Jun 26 11:21:34 2015 UTC,remembers GoT scene shudder
androiddev,3b5xte,moriartsy,1 point,Sat Jun 27 23:20:18 2015 UTC,"This looks awesome, thanks.  Though it yet again has me begging the question of why local databases are so painful on Android. I definitely understand the value of how open and flexible the bare bone approach is, but I still feel like there's a lot missing. And don't even get me started on content providers..."
androiddev,3b5xte,b1ackcat,2,Sat Jun 27 16:42:09 2015 UTC,"They're painful because they're painful everywhere. The object-relational mismatch problem is a thing that many choose to paper over with ORMs. SQLBrite deliberately avoids implementing an ORM in favor of providing just reactionary semantics, which is probably the only problem worth solving given the common use cases of databases on mobile. Nice query syntax and object mapping is trivial to implement but impossible to get right (due to the aforementioned mismatch problem), so leaving those aspects up to the developer is a sound choice."
androiddev,3b8y6u,MaybeCarl,4,Fri Jun 26 22:58:03 2015 UTC,"I'm one of the maintainers of Andmore, but not the primary developer. I'll try to clear some of this up.  Andmore is bootstrapped from the core Eclipse build, but it's still in incubation. That means it's not a full-fledged package that can be downloaded as if it were equal with the stable packages, like CDT and JDT. Also, as you note, the documentation is sparse. Dave (aka @kingargyle, /u/kingargyle) has put in some notes on Github for building it, but there aren't any user docs to speak of.  Having said that, Andmore is the core Eclipse IDE with all the things the previous ADT bundle from Google had. It is a fork from AOSP ADT as of some time late last summer, with Google's blessing. There have been a few patches that Google has sent over. We're on good terms with those guys.  AAR support is in there, as that is Dave's primary need as well for his own projects. The m2e-android maven plugin should be updated now and working, last I heard.  Gradle support is coming from Gradleware themselves, via the Buildship project. Not sure where that is at the moment.  There are some of the Motorola MOTODEV features that we found useful, like database and strings editors, and those have been incorporated. Some of the wizards that were useful in 2010 but are now less useful are still in the build so they behave a bit oddly.  Andmore is a labor of love, mostly on Dave's part. I had personal interest as I was one of the leaders on MOTODEV and my current employer had some commercial interest in supporting the project last year. Several other companies with Android tie-ins have expressed interest, but it's mostly a one-man effort by Dave.  The project could use a few other hands to chip in, especially with contributing tests and writing user docs."
androiddev,3b8y6u,justec1,1 point,Sat Jun 27 04:10:05 2015 UTC,Thanks for this detailed answer!   I am a big user of Eclipse ADT (and not in a hurry to use Android studio) and I want to thank you for your work.  I'll test andmore very soon then:)
androiddev,3b6t6o,TheKeeperOfPie,6,Fri Jun 26 13:02:37 2015 UTC,"Source code: https://github.com/TheKeeperOfPie/Reader  App download: http://winsonchiu.com/assets/Reader.apk  Does anyone mind giving me some feedback on a Reddit client I've been working on?  It's completely free and open source, focused on quick consumption of content. It's still missing a few things, and has a plethora of bugs, but basic functionality is there.  I would make a post, but I want to save that for when it's published. Feel free to message me any feedback here on Reddit. Thanks.  P.S.: I'm self-taught and have only been coding for a little over a year, so please excuse my incompetence and messy code."
androiddev,3b6t6o,TheKeeperOfPie,3,Fri Jun 26 13:04:26 2015 UTC,I use RSS so that I can read all posts on r/andoriddev. I don't use a Reddit client because then i would miss post on days that I don't visit.  It would be awesome to add such a feature to a RSS client which like Twitter or other feed based app could keep track of where were you when you last opened the app. So keep some sort of unread count.  What do you think of such a feature?
androiddev,3b6t6o,TheKeeperOfPie,1 point,Sun Jun 28 09:42:12 2015 UTC,"I can replicate the feature by having a history of posts you've already visited, and either graying them out or simply removing them from the list entirely. Then you could just browse /r/androiddev/new and view all of the posts for a subreddit as they come in."
androiddev,3b6t6o,TheKeeperOfPie,1 point,Sun Jun 28 19:13:03 2015 UTC,I think managing them like Tweet or Facebook or G+ feed is the best where new posts show on the top. Read or skipped post go down and gets removed as one move on to read newer posts on the top of the list.
androiddev,3b6t6o,marsicdev,1 point,Mon Jun 29 01:22:47 2015 UTC,"Well, if you mean to sort them in a different way than Reddit provides through /new, then that's probably beyond the scope of my app. It's definitely possible to do, but the experience would be too far removed from the core experience of Reddit.  Otherwise, I don't see how using the default newest on top, oldest on bottom sort with viewed posts removed will not provide the same function."
androiddev,3b6t6o,TheKeeperOfPie,1 point,Mon Jun 29 04:23:19 2015 UTC,I am not at all talking about a different sorting method. I am simply talking about presenting them in linear faishon like a RSS reader would.  When you open the app you are presented where you left the things last time you were using the app. On top you have new/hot Reddit posts and in bottom you have older posts already browsed. Instead of pages you have linear layout presentation like Twitter or a RSS app.  That way even when I come back to Reddit after 2 days you don't really miss any posts. I use RSS reader for this purpose but a Reddit client has better integration for things like commenting or up/downvote.  Does that make sense?  I am glad you open sourced your app. That way I can try out my crazy ideas without working from scratch.
androiddev,3b6t6o,KolakCC,1 point,Mon Jun 29 05:50:38 2015 UTC,"I really am trying to understand what you mean here, but I still don't quite get it.  In your second paragraph, to me at least, you've described the front page of Reddit. Paginated and linear are the same thing when the pages are attached to one another, unless you mean it in some other sense of the word.  I'm going to have to see a mockup or something to fully grasp what you're trying to convey here. Maybe give me an example (like a Paint drawing) of what you want versus what normal Reddit clients currently do? But yeah, in case I never get it, feel free to modify the source however you want. Just don't publish it on the Play Store and you can certainly attempt your idea."
androiddev,3b6t6o,TheKeeperOfPie,1 point,Mon Jun 29 07:21:45 2015 UTC,"In my opinion app looks and works nice for work in progress, as you said there are few bugs but I liked it and will use it... I have a question also :) Is there some particular reason why you are not using some library for serialisation/deserialisation of JSON (GSON, Mochi or even Retrofit as complete solution for API)?"
androiddev,3b6t6o,KolakCC,1 point,Fri Jun 26 13:45:11 2015 UTC,"The Reddit API is somewhat finicky in what it returns for JSON, so when I started I just did it manually in case I had to change something specific down the line. As well, I parse some of the null and String fields into specific values different than the value provided by the key.  Not to mention it wasn't really difficult to use a plain Java object for it. Android Studio has a lot of multi-line formatting tools and I just auto-generated the setters and getters. Really didn't take that long, gives me better control over the API (especially Listings), and removes the need for additional dependencies.  But I do realize that several libraries would have helped with the coding. Rx would probably have been beneficial to learn instead of passing a bunch of Controllers and Listeners around. But I kinda just started this way and just went with it."
androiddev,3b6t6o,KolakCC,1 point,Fri Jun 26 14:05:48 2015 UTC,"I only have a bit of time to look this through but here's some things I've noticed.  Here's some small git workflow tips:   Try to give your commit messages meaningful names. ""Version 0.9.6"" doesn't tell other contributors much in a blink of an eye. Also consider removing your bullet points in favor of just new lines. Even better would be to split your commits up more. Version 0.9.5? Split it up into Sync commit and the other.   Other things:   Consider the use of libraries such as AndroidAnnotations or Dagger to remove boilerplate code. Why are you keeping a reference to an activity here? Could potentially be a leak. Keep in mind that all Fragments must have a public, no-argument constructor. Don't use constructors with arguments or you will run into problems when Android decides to reinflate your fragments."
androiddev,3b6t6o,GreenWhiteDude,1 point,Fri Jun 26 20:56:03 2015 UTC,"Try to give your commit messages meaningful names.    To address your points, I have the Version X.X.X commits because I actually run a beta test through Fabric Beta, and those version commits line up with public releases on that platform. That way I can easily determine the version of code that caused a crash or error.   Even better would be to split your commits up more.   But you are definitely correct that I need to split my commits up more. I tend to just go at it, writing a bunch of code simultaneously and never committing it until I find a decent break point.   Consider the use of libraries such as AndroidAnnotations or Dagger   Yes, I definitely need to pick up a lot of the common libraries and learn to use them, as well-coded apps tend to make effective use of them. I don't really have an excuse for this. Mostly just started with plain Java and continued to this point. I hopefully will eventually refactor the code to make use of things like RxAndroid and Dagger.   Why are you keeping a reference to an activity here?   I'm confused. Is this not standard practice? The Fragment.getActivity() method can sometimes return null, so I store the reference to the Activity when it's attached and destroy it when it detaches. The reference is entirely connected to the Fragment instance and will be released when the Fragment is no longer in the lifecycle.  http://developer.android.com/guide/components/fragments.html#CommunicatingWithActivity  Google actually recommends holding the reference to the Activity, albeit under a listener interface instead of a direct Activity. I just chose both to prevent tying 2 different functions to the same reference, as I may not need a listener reference for a specific Fragment.   Keep in mind that all Fragments must have a public, no-argument constructor.   I looked through all my Fragments, and they all have the required constructor. The only ""Fragment"" files missing it are FragmentBase and FragmentListenerBase , but those are just abstraction to share methods between the Fragments. Neither will be instantiated, as one is abstract and the other is an interface.  Anyways, thanks for the feedback. I'll definitely try to split up my commits more and pick up some of the libraries you've mentioned. I actually hadn't heard of AndroidAnnotations before, and it seems very useful."
androiddev,3b6t6o,a_marklar,1 point,Fri Jun 26 21:54:31 2015 UTC,"To address your points, I have the Version X.X.X commits because I actually run a beta test through Fabric Beta, and those version commits line up with public releases on that platform. That way I can easily determine the version of code that caused a crash or error.   Git has a thing for that, tagging! And perhaps this recent article is something for you?   Google actually recommends holding the reference to the Activity   Does it say so in the link? I can't find it. I'm pretty sure you shouldn't keep a reference, though.    I looked through all my Fragments, and they all have the required constructor.   You're right! My bad, not sure which file I thought I had seen that in."
androiddev,3b6t6o,Drsmall,1 point,Fri Jun 26 22:01:12 2015 UTC,Here's a post on the android developer's blog that explains (first bullet point)
androiddev,3b6t6o,leggo_tech,0,Fri Jun 26 22:05:07 2015 UTC,You'll love Android Annotations when you finally dive into it. I have literally replaces thousands of lines of code with it. It's really pleasant to use.
androiddev,3b6t6o,Drsmall,3,Sat Jun 27 14:11:31 2015 UTC,I've been working on a development tool for the last few months (I posted a video here a few months back) for resusable android components. I'm starting to make and release apps using it and would like to ask for feedback on them. Unfortunately I'm not ready to open source the whole thing. How would people feel about me posting apps where only ~75% of the source code is available?
androiddev,3b6t6o,leggo_tech,3,Fri Jun 26 14:13:37 2015 UTC,"HAVE YOU EVEN WANTED TO SEE HOW MUCH MONEY YOU MADE WHILE POOPING??!  Check out my app TIM. Clock in and watch your earnings in real-time! https://play.google.com/store/apps/details?id=com.penguinproductions.realtimewage  Also, please leave feedback and suggestions. Trying to improve here :)"
androiddev,3b6t6o,leggo_tech,2,Fri Jun 26 18:14:24 2015 UTC,"seems to work. cool. that top ""action-bar-ish"" thing is ugly as flock though"
androiddev,3b6t6o,Drsmall,0,Fri Jun 26 18:37:04 2015 UTC,Thank you. But it's a blue rectangle with text... How is that ugly?
androiddev,3b6t6o,CaddoSierra,4,Fri Jun 26 18:41:27 2015 UTC,it looks super thin on my xxxhdpi device.
androiddev,3b6t6o,CaddoSierra,3,Fri Jun 26 19:48:57 2015 UTC,"you should use a height of ?android/attr/action-bar-min-height or something like that.  thats obviously not the name of it, but you should be able to google around for the exact property name. What thats really telling me though, is that you're not using the actionbar/toolbar/appbar whatever the hell they're calling it now."
androiddev,3b6t6o,markyosullivan,1 point,Fri Jun 26 19:50:59 2015 UTC,Can you send a screenshot to contact.penguinproductions@gmail.com?
androiddev,3b6t6o,CaddoSierra,3,Fri Jun 26 19:54:10 2015 UTC,"I've made the basis of my first real app!  So if you're familiar with the game Mafia (a party game with roles and day/night and such), I made a card randomizer that displays the roles from a custom game discreetly to each player. Why? I noticed there weren't really any on the Play Store that looked nice or worked like I wanted to.  It's not androiddev approved by my standards yet, but I have a whole bunch of features planned.  It's called Mafia Party - https://play.google.com/store/apps/details?id=com.caddosierra.mafiaparty"
androiddev,3b6t6o,markyosullivan,2,Fri Jun 26 19:09:06 2015 UTC,How did you make those screenshots for your app? They look great!
androiddev,3b6t6o,CaddoSierra,1 point,Sun Jun 28 08:32:26 2015 UTC,"I found a notification bar replacer on the Play Store to take clean screenshots, and then used an app called Screener for the rest of the art."
androiddev,3b6t6o,markyosullivan,2,Sun Jun 28 17:29:38 2015 UTC,"How does it work once you have your roles? Is there going to be a ""town discussion"" section of the app where players post their comments?"
androiddev,3b6t6o,Hermes_Achilles,1 point,Sun Jun 28 10:32:30 2015 UTC,Well it's entirely just a tool to help you out with running a game of Mafia (aka Werewolf). It's a really fun local party game if you haven't played it.
androiddev,3b6t6o,b1ackcat,1 point,Sun Jun 28 17:28:04 2015 UTC,I have that's why I'm keen to learn more. How does it act as a tool for  Mafia / Werewolf if you can't discuss things like you do in the game
androiddev,3b6t6o,GreenWhiteDude,1 point,Sun Jun 28 18:30:23 2015 UTC,"I'm not sure I really understand you sorry. It's not meant to replace the game at all, once you're done dealing cards then you just play the game like you normally would."
androiddev,3b6t6o,bart007345,1 point,Sun Jun 28 23:25:26 2015 UTC,I see. Would be interesting to see how an app version of the game would work :)
androiddev,3b6t6o,GreenWhiteDude,2,Sun Jun 28 23:45:44 2015 UTC,"If anyone wants to help a newb learn how to connect a MySQL database with Android, that noob wouldd appreciate it. Or at least point me in the right directions  I've been following a bunch of tutorials, but I can't seem to get anything working."
androiddev,3b6t6o,HohnJogan,1 point,Fri Jun 26 22:51:24 2015 UTC,"Do you need you have a database or on a server somewhere and you want to call it?  Or a local database on the phone?  I'll assume the former since Android only supports SQLite, not MySQL, on-device.  In that case I'd recommend setting up a lightweight app server that sits in front of the database and exposes a web API for your app to call. There's a great selection of API libraries to make calling web services easier.  The benefit of wrapping the database with an app server is multi fold:   abstracts away the SQL from your app and into a single place on a server. Now if you ever need to restructure your tables, edit a query to fix a bug, etc. You can do that without pushing an app update makes accessing the data from the mobile app easier. This may just be preference, but I find APIs easier to deal with than SQL connections. It's also better supported by the platform. drastically lowers the amount of work of you have to do if you ever decide to go cross platform with your mobile app. If you want to release an iOS or windows app, all you have to do is write the UI code and API calls. You won't have to worry about getting all the queries right again, deal with the platform nuances of database connections, etc."
androiddev,3b6t6o,TheKeeperOfPie,2,Sat Jun 27 16:21:52 2015 UTC,"I am currently at a summer internship working on an application and we are just about finished writing our main Rest API service to query our Node.js server. I've never done much with servers, and another intern with more experience with Node.js is handling our back end. What sort of things do I need to test/look out for when integrating it with our Android app? So far me and a senior developer have gotten pretty much all the POST/GET/DELETE commands working with what we need to far. Some things I've been thinking about: Error handling in JSON responses, bad requests, timeouts?"
androiddev,3b6t6o,HohnJogan,1 point,Sat Jun 27 14:08:37 2015 UTC,"Are you using retrofit/okhttp? If not, why not? Its damn awesome!  You can deal with all those bad cases. Post if you get stuck."
androiddev,3b6t6o,TheKeeperOfPie,1 point,Sat Jun 27 21:54:15 2015 UTC,"I started off with retrofit, which was awesome. However, we were already using Android Annotations, which I found out has support for Rest API stuff! Also great. Also ties in with Spring/Gson nicely."
androiddev,3b6t6o,HohnJogan,1 point,Sun Jun 28 01:04:40 2015 UTC,Anyone have tips for speeding up Android Studio?  I am running on a Mid-2014 Macbook Pro Retina (2.8 GHz) with 16GB of ram.  And after a few hours of development AS will start to crawl.  I usually have a genymotion emulator running as well which might contribute to it. Not sure if its an issue with AS or just me.  EDIT: Full reboot usually solves the issue
androiddev,3b6t6o,boonexus,1 point,Fri Jun 26 13:30:30 2015 UTC,"That sounds like a memory leak or something similar. Have you checked your RAM usage when it starts to slow down? If it's hitting 90%+, some process might be leaking."
androiddev,3b6t6o,BikerMouseFromMars,1 point,Fri Jun 26 14:16:49 2015 UTC,Would leaks in the app thats running on the emulator cause it? We had some nasty leaks from some 3rd party libraries recently.
androiddev,3b6t6o,boonexus,1 point,Fri Jun 26 14:25:41 2015 UTC,"I'm certainly not an expert on this, but Genymotion should run inside a VM, and I believe the memory is limited on it. So unless you somehow changed the emulator to use all 16 GB, it's unlikely that an app inside the emulator will cause a memory leak. It's possible that Genymotion itself is leaking, but you won't really know unless you diagnose it."
androiddev,3b6t6o,BikerMouseFromMars,1 point,Fri Jun 26 14:33:36 2015 UTC,Thanks for the help. I'll look into it some more
androiddev,3b6t6o,slaystation25,1 point,Fri Jun 26 14:39:26 2015 UTC,I am currently 4months into Development. Learning from BNR.    I would like to know where I could learn more about using Libraries. Is there a way to look up the code of Popular Apps - From APK that is ?  Is it better to concentrate on the Coding part alone or learn some Designing as well ?  What is an easy BackEnd Technology to use for Android Development that one can learn in a short time?
androiddev,3b6t6o,boonexus,1 point,Fri Jun 26 14:58:30 2015 UTC,"I would like to know where I could learn more about using Libraries.   what do you mean? How to add them to your gradle file?   Is there a way to look up the code of Popular Apps - From APK that is ?    you can decompile apks, but your milage may vary.....   Is it better to concentrate on the Coding part alone or learn some Designing as well ?    if you are working alone, also have a very good look on design. Otherwise the functionality might be the best in the world and the people still uninstall it after starting it.   What is an easy BackEnd Technology to use for Android Development that one can learn in a short time?   i personally like google app engine. Others love parse (.com? .net?)"
androiddev,3b6t6o,Dirty_Rapscallion,1 point,Fri Jun 26 15:08:23 2015 UTC,I meant General Practices when it comes to Libraries. A Blog that illustrates them maybe ? I guess I will have to search around.   Thanks for the other information.
androiddev,3b6t6o,fadelakin,2,Fri Jun 26 15:13:15 2015 UTC,as in which libraries are used a lot?
androiddev,3b6t6o,error404_ID_notfound,1 point,Fri Jun 26 15:25:54 2015 UTC,"I would like to know where I could learn more about using Libraries.   There's nothing to learn really. Most libraries have a readme file that provide all the information, and the repositories also include examples showing the usage of their library. If it's a framework, or a library that's quite broad in the feature and technical department, they usually have blogs written about it. But presuming you're yet to start a project, you won't come across the latter for a while. You should read the readme file.  I don't mean to sound discouraging, but if you've been reading BnR for 4 months, you should really put it down and get to projects. Search for small sized android projects on Github, and learn from them. If you've been stuck on a book for 4 months, you're not learning actively."
androiddev,3b7crp,FranciscoE_Reuters,1 point,Fri Jun 26 15:43:53 2015 UTC,Any way to trigger these effects programmatically? i.e. not in response to a touch?
androiddev,3b7crp,sastraxi,2,Fri Jun 26 17:22:37 2015 UTC,"I can potentially add it, meanwhile you can just use    setTrigger(Triggers.onUp)  onTouchEvent(event)   as long as event.getAction() ==  MotionEvent.ACTION_UP"
androiddev,3b7crp,sastraxi,1 point,Fri Jun 26 17:53:20 2015 UTC,That'll be good enough for my uses. Thanks!
androiddev,3b7s2w,francoi8,4,Fri Jun 26 17:35:04 2015 UTC,Are you sure you didn't add a library that added those features?
androiddev,3b7s2w,theshapersarecoming,3,Fri Jun 26 17:39:03 2015 UTC,Any third-party libraries? Is it the same version as your Eclipse build?
androiddev,3b7s2w,codeledger,3,Fri Jun 26 17:39:01 2015 UTC,I only use:  compile 'com.android.support:appcompat-v7:22.2.0'  compile 'com.google.android.gms:play-services:7.5.0'  compile 'com.google.code.gson:gson:2.3'   And I have noticed the following in External Libraries: support-annotations-22.2.0 (not sure if this is a default or if I added it a while ago - I didn't have this in Eclipse)
androiddev,3b7s2w,veeti,8,Fri Jun 26 17:46:30 2015 UTC,Play Services is probably the culprit. Use selective dependencies instead of the all-in package.
androiddev,3b7s2w,warl0ck08,3,Fri Jun 26 18:00:40 2015 UTC,You nailed it! Thanks so much.
androiddev,3b7s2w,bonkersz,1 point,Fri Jun 26 18:39:03 2015 UTC,"Also, just as a note, helps massively to avoid the dex limit."
androiddev,3b6ipt,cefarix,2,Fri Jun 26 11:04:29 2015 UTC,Honestly don't know but your question reminded me of the Grafika project  https://github.com/google/grafika  specifically the Record GL App   https://github.com/google/grafika/blob/master/src/com/android/grafika/RecordFBOActivity.java  It might give you at least some direction for investigation.
androiddev,3b6ipt,codeledger,1 point,Fri Jun 26 14:06:18 2015 UTC,Thanks this is just what I needed!
androiddev,3b6ipt,swag_stand,2,Sat Jun 27 00:59:34 2015 UTC,"You want to use a media codec with an input surface. Look at the grafika app posted in this thread. It's complex, but the answers are there."
androiddev,3b7lrc,lordoftherings911,1 point,Fri Jun 26 16:49:40 2015 UTC,Maybe rootcloak and MMG
androiddev,3b879r,kiumars_a,6,Fri Jun 26 19:24:05 2015 UTC,"I have had the opposite experience. Android team was much faster than iOS team.  I don't think either platform makes you faster. Being an experienced programmer makes you faster. My bet is pitting high level Android devs vs. high level iOS devs would pretty much even out the development times.  I write both iOS and Android apps, usually in parallel. Since I have more experience with Java I tend to get stuff done faster on the Android side. I tend to write the Android side first then port iOS side.  There are things I can do in Android faster like layouts. Then I can do animations faster in iOS. They each have strengths and weaknesses."
androiddev,3b879r,MKevin3,2,Fri Jun 26 19:32:52 2015 UTC,"With skilled team on board, no real metrics except anecdotes. You're simply faster at what you're good at. The bigger difference is maybe during the post release period. Android have too much devices that you can only hope for the best while on iOS, device variants are the least of your worries."
androiddev,3b879r,bbqburner,2,Fri Jun 26 21:49:40 2015 UTC,"I develop for both. I can definitely create the UI faster for an iOS app, especially if I'm using storyboards. Much faster."
androiddev,3b879r,mabco888,1 point,Fri Jun 26 20:28:59 2015 UTC,But storyboards take soooo long to compile...
androiddev,3b879r,batmanta,1 point,Sat Jun 27 00:30:51 2015 UTC,"You have a higher amount of screen sizes on android which means more layouts...  But, coding in ObjectiveC and Swift takes longer than Android Java and Kotlin"
androiddev,3b879r,fredgrott,1 point,Sat Jun 27 15:41:35 2015 UTC,"One of the biggest differences between the two platforms is OS version fragmentation and device fragmentation.  I will oversimplify my explanation, but you will get the gist of what the issues are.    For iOS, it's a closed system where most people update to the latest OS and it's pretty acceptable for apps to only support recent phones with the updated OS.  Because there are a limited number of phones, you generally need less assets and layouts to make your app look good.   Testing is generally easier too since you can try out your app on a handful of devices and know it will work in the field.  Also, Apple's design guidelines are strict and there are lots of Apple provided apis and examples on how to do common things.   Android on the other hand has a whole lot more ""things that can go wrong"" when developing.  You generally need to support a number of API versions since users can't update to the latest on their own (their carriers have to push an update and most don't do this very quickly if at all).  There are also a ton of devices out there with different screen sizes, resolutions, processor speeds, firmware, etc.  To make your app run well on the majority of devices, you will need more assets and layouts and you will need to test on more devices while developing depending on the complexity of your app.  Additionally, Google likes to tell you how an app should look but not give you the tools to make it - so things like the material design persistent search bar that they tell you your app should have, you have to invent from scratch or live with a library that someone else in your shoes made to fit their needs.  Google is getting better at releasing support libraries to help developers use some of the latest designs and have them be kind of backward compatible - but they are usually ""beta"" quality for all but the latest OS (which normal users - i.e. not devs with Google phones, don't have when they are released).   Another factor that comes in to play is store featuring - on the app store it's perfectly acceptable to provide a phone-only app that perhaps is locked to one orientation.  On the Play Store you will likely be encouraged to have an app that looks great on phones, as well as tablets and supports a variety of resolutions and orientations before you will be considered to be featured as an example of good Android design.  If you are starting from scratch - most companies will do an iOS app first because it's a much simpler proposition to get something out there that will work on the majority of phones and to make a good first impression.  All that being said, my experience has been that iOS and Android teams working on mature apps and adding similar features take about the same amount of time - especially now that iOS devices come in different sizes and resolutions meaning you can't be lazy and hardcode layouts like some devs did in the early days.  When you look at ""going live"" and factor in the Apple approval process vs putting something up on Google Play, often Android devs will have a little extra time to finish the extra features (i.e. add tablet layouts, etc) to make the same ship date.   As far as bug fixes go, Android development is light years faster that iOS to put out a hotfix."
androiddev,3b7x6r,new_to_reddit_1234,2,Fri Jun 26 18:11:16 2015 UTC,There is always one owner for the account. However the owner can add additional users with various rights on the developer console. See here https://support.google.com/googleplay/android-developer/answer/2528691?hl=en  I have no idea about on Apple's side but I would imagine they have something similar.
androiddev,3b7x6r,j_m_studios,2,Fri Jun 26 18:22:14 2015 UTC,"I have no idea about on Apple's side but I would imagine they have something similar.   Yes, you can add one Apple ID onto multiple teams.  I've got my own ""team"" for stuff I do, and a freelance client of mine added me to his, so I can use that same Apple ID to also sign/release stuff against his publisher account.  I just have to pick which team I want to work under when I sign in to anything."
androiddev,3b7x6r,if_man_is_5,1 point,Fri Jun 26 18:24:09 2015 UTC,"As a note, the only way you can both sign is to have access to the key store file and share passwords. Definitely no where near as elegant as apples solution."
androiddev,3b5zv3,micorrect,10,Fri Jun 26 06:34:21 2015 UTC,"2-3 years. Only had a proper job for a year and bit though. Took me ages to get some experience and to get a job, such is life. Either way I'm in a job now so only way is up as experience goes up.  I started out by being unemployed, buildings apps with adverts, had a pro version of one app, but I breached copyright and it taken down. Since that happened I just made every app free without adverts and used my apps as a portfolio to get me a job. That was my main goal. every app I build now will be free and without adverts, but I don't exactly have time to build personal apps anyway, so it doesn't mean much.  Now that I have an Android job I am starting to learn Swift. So that I can be part of the iOS team.  One annoying thing about my job is that iOS devs get a say in design, and well everything, where as with android ""Lets get iOS sorted first then Android"". Designs are always a create for iOS, then it's my job to replicate on Android, which is not how it should be. This has turned into a rant so I'll stop here."
androiddev,3b5zv3,TODO_getLife,3,Fri Jun 26 09:46:58 2015 UTC,O.O same thing at my job. Slightly irritating.
androiddev,3b5zv3,Owladder,5,Fri Jun 26 17:29:39 2015 UTC,For about a year now. But I only do this as kind of a hobby with the silly dream to get some money back. Currently I would have made more money by begging in the streets. But I don't depend on the money so I don't really care. As long as the customers (as few as they are) have any kind of fun with my work I am glad.
androiddev,3b5zv3,Fellhuhn,2,Fri Jun 26 07:52:26 2015 UTC,"yup... for me, now it is more of fun than earning as well"
androiddev,3b5zv3,wittywombat,2,Fri Jun 26 08:44:01 2015 UTC,"Get your money back as in $25? Or have you invested in design work, a backend, etc?"
androiddev,3b5zv3,Fellhuhn,2,Fri Jun 26 19:27:55 2015 UTC,Besides having to pay for a domain I only used stuff I already had. But the time investment is huge. If I would have worked overtime at my regular work for that time (and if they had paid me for that (which they don't)) I could have bought me a very nice sports car for that. ;)
androiddev,3b5zv3,Fellhuhn,3,Sat Jun 27 06:07:10 2015 UTC,My app has been on the play store for 2 months. It is now getting ~250 active user per day. The revenue by Ad is kind of USD 0.5 ~3 per day.
androiddev,3b5zv3,bradmont,21,Fri Jun 26 08:42:51 2015 UTC,250... Currently I have one active user who plays my game. At least online. And so he is playing against me. Strange thing is that he likes the game so much that he even 3D-printed his own pieces and now wants to create his own board out of wood. I am impressed. And seeing this joy is worth more than .. well.. perhaps not thousands of dollar but at least more than some meager earnings. :)
androiddev,3b5zv3,Fellhuhn,2,Fri Jun 26 08:55:39 2015 UTC,"Maybe you should market it as a board game, hah!"
androiddev,3b5zv3,bbqburner,4,Fri Jun 26 12:12:02 2015 UTC,There is a bit more investment required then than just throwing an app at the Google Store. :D And it was a available as boardgame once... about 60 years ago :/
androiddev,3b5zv3,Fellhuhn,4,Fri Jun 26 12:16:46 2015 UTC,I just checked out what the game is and whoa. Dude. Seriously. Try to market it in the boardgames subreddit. That's a freaking old historical chess game I bet the people there would even love to try their hands on.   Link for those interested:  https://play.google.com/store/apps/details?id=com.fellhuhn.wehrschach.free
androiddev,3b5zv3,AnnaVittua,1 point,Fri Jun 26 14:20:44 2015 UTC,"Good idea, I will do so. But due to the self-ad policy of reddit I try to keep that to a minimum and contribute as much as possible in the meantime. :)"
androiddev,3b5zv3,will_r3ddit_4_food,4,Sat Jun 27 06:08:25 2015 UTC,"3 years. Published 50 apps, unpublished 35 of them. Making 5k a month from ads. Doing OK, I guess. 20 million downloads, 30k DAU.Not planning to get a job ever again."
androiddev,3b5zv3,funnyguychecking-in,3,Fri Jun 26 19:15:35 2015 UTC,Why did you unpublish most of them? Are all of your current apps games? You are living my dream lol
androiddev,3b5zv3,SSG47,1 point,Fri Jun 26 21:00:44 2015 UTC,"tell us more please, like the app genre/category"
androiddev,3b5zv3,Greger34,1 point,Sat Jun 27 23:39:36 2015 UTC,You are the boss man!   I am a Newbie but I have got the same ire for JOBS!
androiddev,3b5zv3,pentolbakso,1 point,Mon Jun 29 13:34:21 2015 UTC,"Three years, although I've been working as an employee and not selling apps myself."
androiddev,3b5zv3,burntcookie90,1 point,Fri Jun 26 09:08:46 2015 UTC,"about three months.. one app already in store, two more to go. definitely planning to make monies from it .. i hope it pays well, hm"
androiddev,3b7u30,ramsr,3,Fri Jun 26 17:49:39 2015 UTC,"The problem is that you pass the object 1 not as Intent extra, do you? Acitivity A should pass (a copy) of Object 1 to Activity B. Then Activity B should not crash anyway. If don't do that you will face also other problems i.e. Activity B can be destroyed by android OS when another App or even while Activity C is in foreground (i.e. because of low memory). When Activity B should come back in foreground android OS recreates Activity B with the same Intent as the original Activity B has been started. So you can read the Intent extra to get Object from the extras"
androiddev,3b7u30,HannesDorfmann,1 point,Fri Jun 26 20:02:04 2015 UTC,"oh wait, are intent extras persistent even after a crash?"
androiddev,3b7u30,HannesDorfmann,1 point,Fri Jun 26 22:00:32 2015 UTC,"yes, Intents are persistent"
androiddev,3b7u30,foreveratom,1 point,Fri Jun 26 22:07:20 2015 UTC,"Without much code sample, it's hard to tell but for one thing, avoid storing anything in the Application unless you really need to.  And if you do, you need to initialize that object in the Application onCreate() method.   Then you need to provide a way of accessing it like ((YourApplication)getContext().getApplicationContext()).getMyObject()"
androiddev,3b7i5h,Badfirmware,1 point,Fri Jun 26 16:24:01 2015 UTC,The code is on Github for mbientlab if anyone is interested.
androiddev,3b6pq7,AndyOHart,2,Fri Jun 26 12:26:21 2015 UTC,you can set the navigation icon the toolbar itself. Style the drawable you throw in there however you want.  https://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(android.graphics.drawable.Drawable)
androiddev,3b6pq7,Cg2XHPxz,1 point,Fri Jun 26 13:04:06 2015 UTC,"I have set the nav icon like that, the problem is the height and width are way too big. How can I style the drawable"
androiddev,3b6pq7,Cg2XHPxz,1 point,Fri Jun 26 13:30:12 2015 UTC,did you try calling setbounds on the drawable?
androiddev,3b6pq7,Cg2XHPxz,1 point,Fri Jun 26 13:40:18 2015 UTC,Where do I do the set bounds?  In code I have  getSupportActionBar().setHomeAsUpIndicator(R.drawable.toolbar_back_button);  and that drawable is just an image of a back button. I can't call setbounds on the getSupportActionBar
androiddev,3b6pq7,Suleiman19,2,Fri Jun 26 13:43:05 2015 UTC,Pull the drawable out using getresources.getdrawable. then set bounds on it. Then set it as the navigation icon
androiddev,3b6pq7,jackhexen,1 point,Fri Jun 26 13:57:11 2015 UTC,"I did this:    Drawable backButton = getResources().getDrawable(R.drawable.back);   if (backButton != null) {     backButton.setBounds(10,10,10,10);   }   getSupportActionBar().setHomeAsUpIndicator(backButton);   And its not working"
androiddev,3b5ivm,lordoftherings911,2,Fri Jun 26 03:32:26 2015 UTC,First of all you might want to control which members will get specific feature set. Only new? Only old? Only with specific properties? Then the best way would be to retrieve some JSON configuration to enable/disable some feature or layout. For example all AB tests are off by default. After receiving configuration enable only those that were returned.
androiddev,3b5ivm,Merllinas,1 point,Fri Jun 26 06:43:16 2015 UTC,THIS.
androiddev,3b5ivm,donnfelker,2,Fri Jun 26 19:09:00 2015 UTC,"I built my own small tool, it gather information from an xml resource (embedded in the app) and/or from a web service and dynamically enable or not different features to different users (can be specific users, group of users, etc..)  It can also publish stats to mixpanel so I can track usage base on the feature."
androiddev,3b5ivm,lynfogeek,1 point,Fri Jun 26 08:09:45 2015 UTC,This is what I did as well. The web service provides a number between 0F and 1F which defines the percentage of users who shall have feature A/B enabled. The client then rolls a dice to decide which feature to enable and stores that decision.
androiddev,3b5ivm,Nilzor,1 point,Fri Jun 26 10:40:21 2015 UTC,I saw something on here that said a good way of doing it was by pulling json/xml from a server and using that to turn on  features.
androiddev,3b5ivm,eiais,1 point,Fri Jun 26 06:17:41 2015 UTC,"I don't know if that was ever intended as a ""good"" solution. It depends on having network connectivity and isn't really standardized (you could easily ""lose"" test scenarios in your codebase, and you're replicating a lot of the logic.  I don't know about Android but on web/js there are a few services and libraries that abstract all the a/b testing logic, so all you need to do is replace one resource definition with two that you're testing and the framework will handle the logic."
androiddev,3b5ivm,Turtlecupcakes,1 point,Fri Jun 26 08:41:50 2015 UTC,"What do you mean with ""resource definition"" and ""replicating logic""?   If there are frameworks on Android (of which I don't know), they'd probably use eiais' solution. If you don't have network connectivity, you won't ever get to know the results of the A/B test anyway."
androiddev,3b5ivm,Nilzor,1 point,Fri Jun 26 10:28:52 2015 UTC,Google Tag Manager might be useful: https://developers.google.com/tag-manager/  It generates a file that you put in your APK with default values and then Google Play Services takes care of updating it if needed. You can also use fancy rules and similar to set values depending on country/language/...
androiddev,3b4p3n,gdmnit,3,Thu Jun 25 23:09:28 2015 UTC,"since you're adding another lifecycle driven component to your hierarchy just to solve a completely different problem.   hmm...i don't agree. think of it as looking of a component that ""survives"" the life cycle.  so the component absolutely must be aware of the lifecycle in order to survive it. in fact if you look at the docs, it's almost like a text book definition of what you're asking to do.  from the docs:    ""Retaining an Object During a Configuration Change"". If restarting your activity requires that you recover large sets of data, re-establish a network connection, or perform other intensive operations, then a full restart due to a configuration change might be a slow user experience.... In such a situation, you can alleviate the burden of reinitializing your activity by retaining a Fragment when your activity is restarted due to a configuration change. This fragment can contain references to stateful objects that you want to retain.   (emphasis mine)  that being said it is an extremely interesting thought exercise to see how one would achieve the objective without the use of fragments."
androiddev,3b4p3n,moriartsy,2,Fri Jun 26 03:06:56 2015 UTC,"Are you using OkHttp? You can set up a filesystem cache with a few lines of code if your server is using a Cache-Control header, and if not, you can use interceptors to add one in yourself. It doesn't change your observable code at all, and you can unsubscribe onDestroy. I think this would offer more flexibility and reduce network calls even further.   If OkHttp isn't an option, then I'd be interested to hear whatever you end up going with. I was looking into the same problem recently, but I realised it just wasn't necessary for my use case in the end."
androiddev,3b4p3n,jimeux,1 point,Fri Jun 26 01:02:13 2015 UTC,"I do use OkHttp, but as I mentioned in the title I'm trying to find a way to use an Observable with cache() and make it survive orientation changes. Regardless, one disadvantage of what you propose is that OkHttp will use the filesystem for caching whereas I'm looking to put that stuff on memory."
androiddev,3b4p3n,Nilzor,1 point,Fri Jun 26 17:51:17 2015 UTC,"adding another lifecycle driven component   I think OP might be talking abouut adding a second Fragment to facilitate the first whatever-UI-component. I've seen that pattern suggested in a blog posted here.  That of course, is silly if the first whatever-UI-component is a Fragment. Changing the configuration of the Fragment you already have implemented on the other hand, is a great idea. But what if you only have an Activity? There is no setRetainInstanceState() on an Activity, is there?"
androiddev,3b4p3n,Serandel,1 point,Fri Jun 26 06:28:17 2015 UTC,"If he already has an UI fragment, he may just make it retained. Problem solved, isn't it?  And is he only has an Activity, then, as I said, I strongly advice adding a retained non-UI Fragment.  Either way, OP would have an object that survives configuration changes but will die when abandoning the Activity."
androiddev,3b4p3n,m0zzie,1 point,Fri Jun 26 10:44:51 2015 UTC,"THE official way feels like a hack. Fragments have a specific purpose and were certainly not added to the framework to help developers keep state between orientation changes. Considering my setup involves no fragments whatsoever, adding a fragment to my activities just for the sake of dealing with orientation changes feels like a hack, be it the official way or not."
androiddev,3b4p3n,jackhexen,1 point,Fri Jun 26 11:14:38 2015 UTC,You might find this helpful: http://fahimk.github.io/2015/04/21/using-rxjava-with-mvp-to-handle-configuration-changes/
androiddev,3b4p3n,raedur,1 point,Fri Jun 26 17:47:30 2015 UTC,"Thanks for the suggestion, I've read this before but forgot to mention it, it doesn't really solve the problem, since it either persists data attached directly to your views (via ViewState), enforcing these things to be Parcelable/Serializable or simply pipes that stuff through a retained fragment."
androiddev,3b4p3n,HaMMeReD,3,Thu Jun 25 23:21:44 2015 UTC,"Have you seen Nucleus library? It is especially intended to make presenters survive across configuration changes and even across process restarts, and it is also rx-oriented."
androiddev,3b4p3n,HaMMeReD,1 point,Thu Jun 25 23:30:50 2015 UTC,+1 for nucleus. The best part is that is a really small library that pretty much just adds a couple of extra operators to rxandroid enabling it to work. If things aren't working you can just look at the source code and its not a billion lines of code that you don't understand.
androiddev,3b4p3n,HaMMeReD,1 point,Fri Jun 26 00:57:57 2015 UTC,"Put your RX stuff in a Service or Application context.  Bound services will retain their state on rotation, and can share that state amongst various activities.  Same with application class, it's state will span all activities, but you have better life cycle control in a service."
androiddev,3b4p3n,HaMMeReD,1 point,Fri Jun 26 02:16:25 2015 UTC,"But what about the second part, freeing that memory once it is no longer needed? meaning when the Activity was dismissed naturally, how would you deal with that? Also, a Service is not really useful here, since you can't subscribe to the Observable directly, and have to use some messaging channel (e.g. broadcasts / handlers) to transfer the data between the Service and the Activity. As for the application class, that's pretty much the same as using a static variable in the Activity itself."
androiddev,3b4p3n,vladlichonos,1 point,Thu Jun 25 23:33:50 2015 UTC,"You can use service binding to access the service directly.  http://developer.android.com/guide/components/bound-services.html  Look for the LocalBinder source code on how to do that and not use IPC for your local access.  Service has MUCH better life cycle control, you can shut down when ever you are done, or have it shut down itself when all bound activities are shut down. You can happily shut down in the background, persist to a database or whatever, and have 100% control over your applications life cycle and shut down process, vs just guessing when a activity might be killed."
androiddev,3b4p3n,HaMMeReD,1 point,Thu Jun 25 23:35:30 2015 UTC,"I am aware of that, but that still doesn't solve the problem, since you did not address to when you'd actually clear the data, or in this case - when to stop the service."
androiddev,3b4p3n,vladlichonos,2,Thu Jun 25 23:41:25 2015 UTC,"You do realize this is a software architecture/design question and not a android one.  You clear data/stop service when you are done with it. I assume the service will run while there is bound activities, and while any network calls are pending, and until it saves and persists any required data."
androiddev,3b4p3n,HaMMeReD,1 point,Thu Jun 25 23:44:35 2015 UTC,"The service stop's itself, in line with the Activity Life cycle, unless you want it to go longer (START_STICKY, I believe)"
androiddev,3b4p3n,vladlichonos,1 point,Fri Jun 26 00:35:24 2015 UTC,"You need call Context.unbindService, right? When do you call it? Doing so, wouldn't stop service while recreating Activity cause of config changes?"
androiddev,3b4p3n,HaMMeReD,1 point,Thu Jun 25 23:45:04 2015 UTC,"You can use START_STICKY to keep it around, and call stopSelf(int) to control life cycle.  However, Application class is the easiest way. If you only have one activity, I'd say use application. If you have more then one activity in the stack, Service binding works a bit better. As rotating one activity won't destroy other activities bound to the service as that time."
androiddev,3b4p3n,atioxx,1 point,Fri Jun 26 16:21:50 2015 UTC,"If using Application to retain state instance, but eventually I would have a lot of fragments, how do you go around that? Sorry, I never thought about storing state these ways.  p.s. state is not just an integer or string, it is a complex structure of multiple objects. Just to clarify."
androiddev,3b4p3n,HaMMeReD,1 point,Fri Jun 26 16:59:23 2015 UTC,"No need to apologize.  I just created a game the other day, a stock market simulator so I'll explain how that works, it has a pretty complex data model decoupled from the activity. The process of developing it was something like this.  1) Create the game in Java, and play it from Console, as text based. Build all the logic and state, and test to make sure it works.  2) Add my game state object to my Application class.  3) In my activities, in your base class or whatever, i'd add a getGameState() function. It would be something like this  public void getGameState() {   return ((MyApplication)getApplicationContext()).getGameState(); }   4) Sometimes I have views that look at state in a specific way. For example I have a StockItemView, and a StockItem in my state. I just create a custom view, add a setStockItem(StockItem item) to my views, and do all the binding, etc.  Personally, I do not use fragments often. Views/Viewgroups are plenty powerful. I understand the motivation for fragments, before they came out I implemented my own version, and lots of other people did the same. However, I've changed my views on them. They are kind of ugly and a mess to work with."
androiddev,3b4p3n,chadefarseer,1 point,Fri Jun 26 17:04:11 2015 UTC,"Interesting. I guess I naturally will need to come to my own conclusion on fragments, so far stick to them. Kind of sucks that Android is so powerful and so does not have clear single way doing these common simple things.  Thanks for answer!"
androiddev,3b4p3n,moriartsy,1 point,Fri Jun 26 17:24:11 2015 UTC,"Part of the problem (a big part) is that Activities can't be constructed by the user in android. Which means you can't do dependency injection and stuff at the constructor level.   It means that developers have to resort to hacks and tricks in order to get their dependencies into their activities, in a way that they don't conflict with the lifecycle.  Google has exacerbated by giving dev's a multitude of options they should never use to solve the problem.  The worst culprit is probably ConfigChanges flag, which get's abused nearly in every code base I've seen."
androiddev,3b4p3n,chadefarseer,1 point,Fri Jun 26 17:47:28 2015 UTC,Maybe this would help. http://blog.danlew.net/2015/06/22/loading-data-from-multiple-sources-with-rxjava/
androiddev,3b4p3n,moriartsy,1 point,Fri Jun 26 18:15:55 2015 UTC,"https://github.com/ahammer/StockSimulator  My RX Use is very simple, as a bus only. However the scope is safe from rotation changes. The bus lives in a Variable that lives in Application, and the Activity connects/disconnects at lifecycle to it."
androiddev,3b4p3n,chadefarseer,1 point,Fri Jun 26 18:30:19 2015 UTC,"Using a dependency injection framework to inject a presenter, controller, data provider, or some other mechanism into your views can work quite well. If the injected component comes from a singleton scope or similar, then it's likely bound to the lifecycle of your Application, rather than a specific Activity, allowing it to survive orientation changes."
androiddev,3b4p3n,moriartsy,2,Mon Jun 29 02:26:10 2015 UTC,"yeah but scoping a singleton to an application implies that sucker will live throughout the life of your application, which could be a bad thing."
androiddev,3b4p3n,chadefarseer,2,Fri Jun 26 01:56:02 2015 UTC,"If you need something to outlive the life cycle of an Activity you're introducing something you'll have to manage carefully.  Services potentially give you what you want, but the API is one that many people find crappy to work with. A singleton that takes care of delivering rx events and then stopping when required is a comparatively clean approach."
androiddev,3b4p3n,vladlichonos,1 point,Fri Jun 26 03:09:01 2015 UTC,"Services potentially give you what you want, but the API is one that many people find crappy to work with.   agreed.   A singleton that takes care of delivering rx events and then stopping when required is a comparatively clean approach.   but how does one ""stop"" the singleton? i guess my earlier point was: this ""stopping"" is not necessarily possible when you have a singleton scoped to the Application cause that means stopping the application. i guess if you clarify how/what ""stopping when required"" means in the context of an application scoped singleton that will make it clear."
androiddev,3b4p3n,vladlichonos,1 point,Fri Jun 26 03:20:36 2015 UTC,"The stopping action depends on the use case.  If we use a web request as an example, the singleton may be responsible for letting that request finish and persisting the result to disk. Once that operation is complete, it has no more processing to do. The singleton is still held in memory until Android decides to kill your application's process, but that's not necessarily a bad thing.  The danger here would be introducing a singleton that starts a long running operation and never stops. Let's say we have a singleton that starts collecting location updates. If would be pretty lame if the user pressed the home button on your app but it never stopped collecting updates. At this point it's the developers responsibility to let that singleton know ""hey buddy, relax, take a break until I tell you to start up again"". Similar to many Android components requiring you to start something in onResume(), and stop it in onPause().  This approach is hugely beneficial when used with a BehaviorSubject or replay() under the hood of the Observables that your singleton is exposing. Web request starts up? The singleton's Observable could next deliver a inProgress event. If the user rotates the device and the UI re-binds to the singleton, it receives the cached inProgress event and can display the appropriate UI elements."
androiddev,3b4p3n,HaMMeReD,1 point,Fri Jun 26 03:36:15 2015 UTC,"The singleton is still held in memory until Android decides to kill your application's process, but that's not necessarily a bad thing.   I guess this is the part Im paranoid about. To clarify with an example: If my app issues a bunch of requests (say there are 10 independent apis that I have to issue  web requests for to my server), I presume you would use a network request handler Singleton of sorts that takes care of all such requests (instead of 10 independent smaller singletons).  Could you explain why this is not a bad thing? Do you mean its insignificant enough to not actually worry about ? ... Cause otherwise this Singleton object will technically never get GCed until the app stops, right ?"
androiddev,3b4p3n,vladlichonos,2,Fri Jun 26 04:40:21 2015 UTC,"Cause otherwise this Singleton object will technically never get GCed until the app stops, right ?   That's correct. If your application's process hasn't been killed then there's a bunch of stuff that's going to be sticking around. Any static references you have will stick be kicking around. Drawables you've pulled out of resources will have been cached internally for your process. etc etc.  Your singleton in comparison should be a relatively small object, and your dependency injection framework should help you guarantee that  there will only ever be once instance."
androiddev,3b4p3n,HaMMeReD,1 point,Fri Jun 26 04:52:44 2015 UTC,"I've been looking into this, what about this as base presenter? Just careful call to attach/detach presenters.  https://github.com/vladlichonos/MVP/blob/master/Presenter.java"
androiddev,3b4p3n,vladlichonos,0,Fri Jun 26 05:01:13 2015 UTC,"I would say basic idea to have Observable out of Activity/Fragment lifecycle. Cache it using static hash set, get/remove it based on ""flag"" if activity/fragment gets destroyed for sure. I saw people refer to use subjects, but I did not really get it, how that's helpful in this case. If someone has better approach, I would like to see it too. Thanks."
androiddev,3b6fe8,imsrslyyouguys,3,Fri Jun 26 10:17:28 2015 UTC,"You'll want to use the FragmentManager to perform a FragmentTransaction. The important thing to note is this is an add() vs a replace() which would detach and remove the previous Fragment. Bear in mind potentially increased memory usage and that the other Fragment is still alive.  final FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction(); transaction.add(R.id.container, FragmentB.newInstance(parcel)); transaction.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN); transaction.addToBackStack(null); transaction.commit();  To return to this Fragment from FragmentB:  getActivity().getSupportFragmentManager().popBackStack();  Other Fragment related notes:   Beware of overdraw here, you're laying up even more views. Look up ""shared element transitions"" for persisting views (e.g. a hero image) between the Fragments as they transition. See this series for more. Remember that you cannot remove Fragments that are in-lined in XML - so for the most flexibility I tend to add() the first Fragment into a container view in Activity onCreate()."
androiddev,3b6fe8,mkrl8,2,Fri Jun 26 11:35:30 2015 UTC,"Thank you, I just implemented it and it works prefectly.  Memory won't be an issue here since fragment A only shows some static text and pictures with 2 buttons and fragment B is just an info fragment that is meant to be opened just for a few seconds to show some additional info and then closed."
androiddev,3b6fe8,jackhexen,1 point,Fri Jun 26 16:27:22 2015 UTC,he can call remove() or hide() after transition animation completes. He will also need to call popBackStack() twice and override onBackPressed. But all of this are workarounds.
androiddev,3b6fe8,Cyber34,1 point,Fri Jun 26 14:25:10 2015 UTC,Look up fragment transitions
androiddev,3b6fe8,eric_fri,1 point,Fri Jun 26 10:57:33 2015 UTC,Here is a library that has all sorts of fragment transitions.  I use it in my app and have been really happy with it.
androiddev,3b52wc,thinkDifferent_,5,Fri Jun 26 01:10:39 2015 UTC,"I think they're using Palette, a color detection API available on support library: https://developer.android.com/reference/android/support/v7/graphics/Palette.html  Here's a post by Chris Banes (the dev who created it), with more details about setup and usage:  https://chris.banes.me/2014/10/20/palette-v21/"
androiddev,3b52wc,walmyrcarvalho,2,Fri Jun 26 01:37:03 2015 UTC,"I totally misunderstood your question, sorry.  :( I think they're just using a translucent black over the original Toolbar color, instead of calculate the darker color every time."
androiddev,3b52wc,walmyrcarvalho,2,Fri Jun 26 01:42:01 2015 UTC,"hmmm, or maybe they use different parts of the swatch grabbed by  Palette. I'll have to try this. Thanks!"
androiddev,3b52wc,Lonehangman,2,Fri Jun 26 01:49:32 2015 UTC,When I needed to do this i manually made the colour darker in code based on the colour from palette. I forget the specific amount but it was pretty close to the differences between the material design colour shades (if that makes sense).
androiddev,3b52wc,walmyrcarvalho,1 point,Fri Jun 26 05:42:09 2015 UTC,"Let me know if it worked! I think it's an easier trick that do the same result, and you can also use the same solution on Jelly Bean as well. :)"
androiddev,3b52wc,ryangravener,2,Fri Jun 26 02:01:10 2015 UTC,"When I spoke with one of their devs about generating these programmatically he said they make it transparent and use a with black and some transparency.  He said though that if you have a small amount of them, just make what looks best via curation."
androiddev,3b52wc,szlorens,1 point,Fri Jun 26 05:34:08 2015 UTC,"I create darker color dynamically using this method:  public static int getDarkerColor(int color) {     int alpha = Color.alpha(color);     int red = Color.red(color);     int green = Color.green(color);     int blue = Color.blue(color);     return Color.argb(alpha, (int) (red * 0.9), (int) (green * 0.9), (int) (blue * 0.9)); }   Usage:  in onCreate(..):      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {         mWindow.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);         mWindow.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);     }   Enywere else:  int color = getResources().getColor(colorResId); if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {         getWindow().setStatusBarColor(getDarkerColor(color)); }"
androiddev,3b52wc,Jiboo42,1 point,Fri Jun 26 13:03:54 2015 UTC,"Sorry can't copy paste sources from work, but I think it would be better to convert RGB to HSL, use support.v4.graphics.ColorUtils.colorToHSL/HSLToColor and multiply luminance channel by a factor (>1 to get something brighter, <1 to get something darker)."
androiddev,3b52wc,b1ackcat,0,Fri Jun 26 15:09:40 2015 UTC,"Unless they're doing something proprietary that the framework doesn't offer, then I imagine they just have a robust set of color palettes to select from, and pick one based on the average color of something in a given listing.  As far as I know, there's no way to dynamically apply theme colors at run time. I did a lot of research trying to do just that as I wanted to write a theme engine to let users pick colors from a color wheel for theming my app, rather than having then pick from a set list."
androiddev,3b52wc,athingunique,1 point,Fri Jun 26 01:33:46 2015 UTC,Ahh that's what I was afraid of. Hopefully someone else can point us in the right direction! Thanks for your input :)
androiddev,3b52wc,wyrmise,1 point,Fri Jun 26 01:37:38 2015 UTC,"You might know this already since it sounds like you were talking about it (included for OP anyway), but you can set Activity themes (colorPrimary, etc) at runtime, if you do it early, and you have the themes predefined. It's not exactly dynamic, but it provides some customizability.   onCreate() {     setTheme(myThemeResId); ... }     More useful though (and probably what they're doing) is that you can set the status bar color of API21+ with:     setStatusBarBackground(Activity a) { Window window = a.getWindow(); window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); window.setStatusBarColor(myColor); }   and then set the colors of all the views like the Toolbar in code."
androiddev,3b30g1,kdb223,51,Thu Jun 25 15:38:40 2015 UTC,The code for it could have already been there. All they would have had to do was flip a switch in a feed and you'd have the splash screen on next launch. We see this a lot with A/B testing.
androiddev,3b30g1,jtehlert,11,Thu Jun 25 15:41:19 2015 UTC,flip a switch in a feed   What does this mean?
androiddev,3b30g1,Victawr,54,Thu Jun 25 15:44:04 2015 UTC,"Pretty straightforward. Shameless plug: I'm a dev at Taplytics and we do this with A/B testing all the time.  Essentially, when the app launches, the first thing it does is grab information from the server about what to present to the user. Be it JSON, XML, whatever.  Then, you just have a code block like this:   private void showSplashScreen(JSONObject fromServer){     if(fromServer.optBoolean(""showSplash"",false)){         //Code to show splash screen     } else {         //naw     } }   The fun thing is, if you have a library like Taplytics / Mixpanel already in your app that does A/B tests for ya, you can actually just turn on splashscreens whenever you want without pushing to the play store or writing the code!  Thats slightly more complicated, but its pretty much the same!"
androiddev,3b30g1,jtehlert,21,Thu Jun 25 18:06:52 2015 UTC,"A lot of apps will download data when they are first opened up. This is usually JSON.   In their JSON feed they probably added something like this:   { ""show_splash_screen"": false }   The app was then waiting for that value to be true. When Google changed the value (flipped the switch) in their feed, the code to display the splash screen would run."
androiddev,3b30g1,FloppyTomatoes,-4,Thu Jun 25 16:13:35 2015 UTC,"We just return a json array with strings to keep the response smaller, instead of key:values. If the ""show_splash_screen"" is in the response, the feature would be enabled."
androiddev,3b30g1,cbruegg,6,Thu Jun 25 19:01:07 2015 UTC,"I doubt the savings of that will be very significant, as long as the file isn't requested multiple times per App launch."
androiddev,3b30g1,FloppyTomatoes,1 point,Thu Jun 25 20:52:11 2015 UTC,"We check every time the user opens the drawer, we have some features that are data sensitive and cannot go wrong, so if we see something is happening, or a particular device is behaving strangely, we can disable that feature right away for those devices."
androiddev,3b30g1,rivade,8,Thu Jun 25 21:23:37 2015 UTC,You make a network call every time the user opens the drawer?
androiddev,3b30g1,akokiko,20,Fri Jun 26 05:03:41 2015 UTC,He means the app receives information saying that it should now show a splashcreen either through an http request or gcm.
androiddev,3b30g1,okmkz,2,Thu Jun 25 15:59:17 2015 UTC,"Request a json payload from a predefined endpoint. If show_splash_screen is true, then show the splash screen."
androiddev,3b30g1,jonjon02,2,Thu Jun 25 16:07:24 2015 UTC,You might be interested in Google Tag Manager for this. We will typically release a feature but have it behind a value check from GTM that we'll turn on or off. We'll usually do some split testing before turning it on or off for everyone.
androiddev,3b30g1,ecnarongi,1 point,Thu Jun 25 20:53:04 2015 UTC,I am curious as well have this is achieved.
androiddev,3b30g1,mfosker,2,Thu Jun 25 15:56:43 2015 UTC,"Given that it's Google, maybe with Google Tag Manager"
androiddev,3b30g1,MithrilTuxedo,1 point,Thu Jun 25 19:50:00 2015 UTC,"I've seen them do this in other programs, like Google Drive for OSX. The new UI was there, just not available until the server set a specific boolean (or you decompiled the python and hardcoded it on)."
androiddev,3b30g1,oli107,15,Thu Jun 25 19:41:43 2015 UTC,I'm more curious why they've put in splash screens? All the design guidelines i have read say they are a bad idea (including i think some of google's?)
androiddev,3b30g1,konk3r,7,Thu Jun 25 19:09:39 2015 UTC,"The section on launch screens never mention that it should be avoided, and provides momentary brand exposure while the app loads. Which in case of apps like YouTube, is perfectly suitable.  On second thought, WHY THE HELL DOES YOUTUBE TAKE SO LONG?"
androiddev,3b30g1,Turtlecupcakes,14,Thu Jun 25 19:21:49 2015 UTC,"That's new, they used to be VERY strongly opposed to ever using splash screens. Reto had some choice words on them."
androiddev,3b30g1,jmattingley23,2,Fri Jun 26 00:14:32 2015 UTC,"Yep, it was introduced with I/O 2015 IIRC"
androiddev,3b30g1,Fellhuhn,2,Fri Jun 26 04:36:46 2015 UTC,Because it wants to fully authenticate you before showing you any content. It's anyone's guess why that's true though. (Probably recommended feeds or something)
androiddev,3b30g1,docoptix,7,Fri Jun 26 06:29:38 2015 UTC,"They've changed the design guidelines to reflect the addition of splash screens to the Google apps. It used to be ""never use splash screen they are the devil"" but now its more ""feel free to use them, and if you do, they should look like this"""
androiddev,3b30g1,Arclite83,2,Fri Jun 26 00:39:05 2015 UTC,"IIRC it was ""only use them while loading and not to just show your logo with artificial 'loading' time""."
androiddev,3b30g1,will_r3ddit_4_food,2,Fri Jun 26 05:02:32 2015 UTC,Wild guess:  The 'splash' is only shown on data migration tasks. Those are triggered server side with a protocol update.
androiddev,3b30g1,casualblair,2,Thu Jun 25 21:34:49 2015 UTC,"We do this kind of thing all the time where I work. The ""trick"", essentially, is detailed in other posts here. But they basic concept is the app calls the server and expects back some kind of input that it acts on. That way all the client needs is the capability to handle various input: the new functionality is on the server.  Practical example: most of our data entry forms come from the server. A recent change was going from 'date of service' to having a 'start date' and 'end date'. Because the client asks the server for the form, the change is all server-side. Change the return from the form request, and wire in the new params from the form submission, done."
androiddev,3b30g1,jackhexen,2,Thu Jun 25 23:02:30 2015 UTC,"It probably syncs down data. I have an app that syncs json data down from my server and imports it into my app's database. Anytime I update the json, new data goes into the app. It doesn't require an update to the app. I only update the app if I want to change the UI or add functionality."
androiddev,3b95ej,CreativeVentures,4,Sat Jun 27 00:03:06 2015 UTC,"If you are not a developer, how do you know that it will be simple to implement your idea?"
androiddev,3b95ej,Paradiesstaub,3,Sat Jun 27 11:18:16 2015 UTC,They always say it's simple so they can pay less or offer equities.
androiddev,3b95ej,piyanypowietszem,1 point,Sat Jun 27 12:40:31 2015 UTC,I don't think that the OP has bad intentions. Often people just don't guess right how much work has to be done.
androiddev,3b95ej,Paradiesstaub,2,Sat Jun 27 14:19:05 2015 UTC,"I by no means take coding to be simple. I meant simple because I've already got the core of the application, would just need it tweaked somewhat. All of what I'd be looking to do, is already developed, just not for this application.  It wasn't my intention to belittle development, or make it seem like I wanted to pay less."
androiddev,3b95ej,pandanomic,3,Sat Jun 27 15:05:31 2015 UTC,"We have a weekly hiring thread on Mondays, probably best to post there. Also, you should include more information. This is not nearly enough"
androiddev,3b6rcx,philosophicalhacker,3,Fri Jun 26 12:43:28 2015 UTC,What I would expect to see when you say you are reviewing that article is a discussion about not using fragments and whether the author makes good points not to. Nit picking implementation details like you did is missing the big picture.
androiddev,3b6rcx,bart007345,2,Fri Jun 26 14:18:26 2015 UTC,"I agree ... The focus of the article is to talk about disadvantages of Fragments (hence the title ""Advocating Against Android Fragments"" ) and not about MVP"
androiddev,3b6rcx,HannesDorfmann,1 point,Fri Jun 26 15:26:40 2015 UTC,"Hmm...didn't think of it that way. If not using Fragments forces us into a less-than-ideal implementation of MVP, then that would seem to count against not using Fragments. To me, the implementation has direct bearing on whether not using Fragments is a good idea. Maybe I should have made that more explicit.   Also, a large portion of the article is spent discussing an alternative to Fragments (it might even be more than 50% of the article), so regardless of how we interpret the title, it seems that the article is also about an alternative approach to dynamic UIs that doesn't require Fragments. Offering this alternative approach, as I see it, is an integral part of offering a compelling case against Fragments since its harder to argue against something if you're not going to provide an alternative."
androiddev,3b6rcx,bart007345,2,Fri Jun 26 16:09:44 2015 UTC,"No one is forcing you to do anything. The article is about the problem with fragments which I would have thought you would address rather than the use of MVP. You're missing the point.  Also, you said the view knew about the type of the presenter and that was a bad thing. I do this all the time with my activities/fragments and its NOT an issue."
androiddev,3b6rcx,bart007345,1 point,Fri Jun 26 16:26:25 2015 UTC,The way he chose to pass the view via a setter instead of a constructor is debatable but nothing to do with what the article is about.  You do know you could just pass the view as a constructor if you wanted to? No one says you MUST do it via a setter for this pattern to work.
androiddev,3b6rcx,Deafdev,5,Fri Jun 26 17:08:48 2015 UTC,Nitpicking nonsense. It's neither a review or a critique.
androiddev,3b6rcx,Tailstrike,1 point,Fri Jun 26 16:09:00 2015 UTC,Criticism of the Fragment system need not be coupled to a specific alternative.
androiddev,3b431c,cfmdobbie,6,Thu Jun 25 20:19:08 2015 UTC,It is my understanding when they say mimic they mean to make the popup ad actually look like a system popup. For example an ad that looks like an alert dialog. Remember the days of popup ads in web browsers that had the fake windows title bar and close buttons? I believe that is what this rule is meant to prevent.  The obnoxious flashing ads obviously do not look like any system functionality.
androiddev,3b431c,j_m_studios,1 point,Thu Jun 25 21:15:30 2015 UTC,"Does this mean MoPub native ads are out? That would be unfortunate considering how many apps use them, and how much better-looking/integrated they are compared to banners or interstitials. I've just started integrating native ads into my first app with ads; it'd be a shame it they're against TOS now."
androiddev,3b431c,damien5314,1 point,Fri Jun 26 00:41:51 2015 UTC,"I believe native ads tend to make things more clear by declaring ""sponsored"" in them or something similar. There should be no issue with them so long as there is something that makes them stand apart. I am sure Twitter and MoPub ensure they are compliant so long as you follow their setup instructions. And I agree for things like a list they are much nicer then interstitials or banners."
androiddev,3b431c,j_m_studios,1 point,Fri Jun 26 01:07:28 2015 UTC,"So maybe it comes down to their definition of ""mimic"" then.  I hate dealing with legalese like this: the difference between compliance and non-compliance may depends on the intention behind a word, which - if there's a dispute - can only get resolved in a court of law.  EDIT: Looking further into the developer guidelines, it seems that bad behaviour is not actually limited to popups - they give examples of both misleading messages (""Detected Google Play Store Update"") and fake notifications (unread message notification) here:   https://support.google.com/googleplay/android-developer/answer/4450777?hl=en-GB&ref_topic=2985714   And these are exactly the kind of ads that I see Google serving."
androiddev,3b431c,ASIC_SP,1 point,Fri Jun 26 09:30:12 2015 UTC,"Just curious, have you turned off sensitive categories in ""Allow & Block Ads"" in your admob ad unit?  on a related note, can you show a screen shot if you are following this ad disclosure method suggested by google? https://support.google.com/googleplay/android-developer/answer/4450775  and also, if you are declaring privacy policy, it's url link...  I am yet to publish my first app, am using Admob too.."
androiddev,3b431c,ASIC_SP,1 point,Fri Jun 26 02:20:29 2015 UTC,"I've blocked almost all Sensitive categories, only allowing politics, religion, ringtones and games.  Unfortunately, there's no way to see how an ad was categorized in the ad review centre, so I can't be sure what category ""OMG PHONE HAS VIRUS?!?"" type ads are in - but I think they're part of the General categories anyway.  No, I'm not following that ad disclosure method, and I don't think I've seen any app that does."
androiddev,3b6mt1,mercuryarms,3,Fri Jun 26 11:57:08 2015 UTC,"I think its like any other market--some parts of the market might be crowded where it is harder to stand out, but there are still many niche and underserved areas. ""Be first or be better"" is still true for every market-to include android.    Just in the past two weeks I searched twice for different apps for different uses and I wasn't able to find what I wanted...  Now if only I can break away from my real job long enough to throw something on the play store for what I couldn't find :)"
androiddev,3b6mt1,Atwelve,1 point,Fri Jun 26 14:35:03 2015 UTC,"""Be first or be better""   That's absolutely true, but I would add ""or make better marketing than your competitors"". If you achieve one of this 3 concepts you'll get good results, otherwise your app will just be another drop on the Google Play ocean."
androiddev,3b60ek,-manabreak,3,Fri Jun 26 06:40:52 2015 UTC,"Data collected during a 7-day period ending on June 1, 2015.  Any versions with less than 0.1% distribution are not shown.   Honeycomb was only used on tablets, was never popular, and is pretty much abandoned, along with anything before the ICS update now. It falls under the 0.1%, along with multiple other API levels, I'm sure. Most apps don't build for any of those lower versions, and many of the APIs were probably deprecated to the point of removal in any of the newer versions."
androiddev,3b60ek,TheKeeperOfPie,1 point,Fri Jun 26 06:43:59 2015 UTC,"Ah, thanks! So it seems that instead of supporting back to API level 11, I can pretty much go straight to 15."
androiddev,3b60ek,TheKeeperOfPie,1 point,Fri Jun 26 10:26:09 2015 UTC,"I'd probably recommend targeting 17+, as then you don't have to worry about a lot of compatibility code, and you can use start/end instead of left/right.  You do lose some of the market compared to a lower version, but I consider the difference to be small, especially since paying customers and engaged users tend to have newer devices anyways. Also, I wouldn't go below 16.  But it depends on what you're developing. You can Google around for the API level breakdown of the app category you're targeting and go from there."
androiddev,3b60ek,crackshot87,1 point,Fri Jun 26 10:39:55 2015 UTC,"My system is start at 10/11 and if i get to a significant roadblock which can't be solved in a couple of lines, I'll bump up to 14/15, then maybe repeat again for 17 depending on how I feel."
androiddev,3b382v,nkorth,3,Thu Jun 25 16:35:01 2015 UTC,"If you're looking for examples, I noticed Google and IFTTT have implemented it:   Google IFTTT IFTTT, see the footer"
androiddev,3b382v,quinnjn,2,Thu Jun 25 16:55:59 2015 UTC,This is the one I made:  https://play.google.com/store/apps/dev?id=6483394247866966083
androiddev,3b382v,ChrystianV,1 point,Thu Jun 25 19:53:14 2015 UTC,"It is a pretty weird thing to deal with if you do not have a sort of established ""brand"" as a developer. The change actually inspired me to come up with a brand. https://play.google.com/store/apps/dev?id=8992288925330781810"
androiddev,3b382v,Jawnnypoo,1 point,Thu Jun 25 18:01:08 2015 UTC,Has anyone done this for their own personal developer account?  Edit: I mean like for those developers accounts where the developers just use their name and not a company name.
androiddev,3b382v,markyosullivan,1 point,Fri Jun 26 00:37:54 2015 UTC,"I did. Just used some silly rendering I was fooling around with at that time. But I am not trying to sell my name or logo or something like that. People shall like my apps and not me or my ""company""."
androiddev,3b33zt,Endda,5,Thu Jun 25 16:05:27 2015 UTC,"Reading the article is like reading my code from 3 years ago. There has been evolution that's just not reflected here: Loaders, Bus, RxJava... And not a single reference to leaks caused by running background tasks in Activities with AsyncTasks and non-static handlers."
androiddev,3b33zt,pakoito,6,Thu Jun 25 18:35:28 2015 UTC,RxJava is much better than Service/AsyncTask example
androiddev,3b33zt,iNoles,1 point,Thu Jun 25 17:37:07 2015 UTC,As someone new to android development should I jump right into RxJava?
androiddev,3b33zt,mind_blowwer,1 point,Thu Jun 25 20:01:46 2015 UTC,"Yes, jump in, but don't expect to understand it all straight away, its approach is different to the norm but once you get your head around it then it is extremely powerful"
androiddev,3b2epl,crystax,1 point,Thu Jun 25 12:34:53 2015 UTC,Well done! I'm going to use it as it makes non-UI iOS code usable on android. UI code to be supported too AFAIK
androiddev,3b30jg,kevindesai777,1 point,Thu Jun 25 15:39:25 2015 UTC,"Unless I am reading your question wrong, in lollipop there is a circular reveal animation... you can see example code here https://developer.android.com/training/material/animations.html  *edit: I just realized you are probably wanting to do it pre-lollipop... there are a couple libraries for it on github like https://github.com/ozodrukh/CircularReveal but I would be wary if I were you.  A lot of the animation stuff that was brought in by material design is only a good idea on > 5.0 devices since they introduced the new render thread stuff that makes animations smoother and more manageable.  In my experience google will add it to the support library if there is a good way to do it without compromising performance.  As an example the ripple drawable was intentionally left out of the support libraries since it can have a significant impact on performance pre-lollipop.  Basically you should weigh visuals vs performance.  As much as you want your app to look great and use material design everywhere, you also don't want to degrade performance on older versions of android since people won't ever see how great it looks if they never want to use it because of performance issues."
androiddev,3b37gj,jeffinmadison,3,Thu Jun 25 16:30:30 2015 UTC,You looking for this? https://github.com/lucasr/dspec
androiddev,3b37gj,Regi07,2,Thu Jun 25 17:16:31 2015 UTC,I'm not sure if this is what you're asking for but maybe Show Layout Bounds in the Developer Settings?
androiddev,3b37gj,hitler_kardashian,1 point,Thu Jun 25 16:49:52 2015 UTC,probably not what he meant but it's a great way to fine tune layouts anyway.
androiddev,3b37gj,ciny,2,Fri Jun 26 14:47:49 2015 UTC,Maybe you are thinking about GridWichterle
androiddev,3b37gj,unavailableFrank,2,Thu Jun 25 17:15:15 2015 UTC,Keyline pushing for Material: https://play.google.com/store/apps/details?id=com.faizmalkani.keylines
androiddev,3b37gj,Quinny898,1 point,Thu Jun 25 18:23:24 2015 UTC,"not exactly what you're asking but you can turn on show layout bounds in the developer options, which can help a good deal with things like that."
androiddev,3b1iw2,jayrambhia,3,Thu Jun 25 05:30:00 2015 UTC,Isn't it a lot less code to add a scroll listener to your recyclerview and animate appropriately when it goes up or down?  https://gist.github.com/pakoito/5f4584c0ccad322080d1       scrollListener.getScrollDirectionObservable().subscribe(direction -> {                     switch (direction) {                         case UP:                             animateFabIn();                             break;                         case DOWN:                             animateFabOut();                             break;                         case NEUTRAL:                             break;                     }                 }             })
androiddev,3b1iw2,pakoito,2,Thu Jun 25 10:28:47 2015 UTC,RxJava to save the day.          private void animateFabIn() {             ViewCompat.animate(mFab).translationY(0).start();         }          private void animateFabOut() {             ViewCompat.animate(mFab).translationYBy(250).start();         }
androiddev,3b1iw2,TiberiusAbadon,1 point,Thu Jun 25 13:06:46 2015 UTC,neat
androiddev,3b1iw2,atioxx,1 point,Thu Jun 25 15:21:06 2015 UTC,"It's just the same amount of code. But holy Shit! Rx and this is pretty sweet. Thanks for the tip!  @Override public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, FloatingActionButton child,                                 View directChild, View target, int nestedScrollAxis) {     return nestedScrollAxis == ViewCompat.SCROLL_AXIS_VERTICAL ||             super.onStartNestedScroll(coordinatorLayout, child, directChild, target, nestedScrollAxis); }   @Override public void onNestedScroll(CoordinatorLayout coordinatorLayout, FloatingActionButton child,                            View target, int dxConsumed, int dyConsumed,                            int dxUnconsumed, int dyUnconsumed) {     if (dyConsumed > 0 && !this.mIsAnimatingOut && child.getVisibility() == View.VISIBLE) {         animateOut(child);     } else if (dyConsumed < 0 && child.getVisibility() != View.VISIBLE) {         animateIn(child);     } }"
androiddev,3b1iw2,markrtoon,1 point,Thu Jun 25 15:57:28 2015 UTC,"Holy shit, why is this so fucking complicated? Why isn't there a method for the Recycler View that just returns the scroll direction and then you do an animation based on that? Sometimes I feel like a rabid monkey with dyslexia could have written a better API."
androiddev,3b1iw2,pakoito,1 point,Thu Jun 25 16:19:28 2015 UTC,"There is, it's called ScrollListener. Check the other responses."
androiddev,3b1iw2,markrtoon,1 point,Thu Jun 25 16:26:36 2015 UTC,"I looked, but why should we have to depend on third party libs for functionality that should be included in the base SDK?"
androiddev,3b1iw2,pakoito,3,Thu Jun 25 16:41:16 2015 UTC,"You don't need the RxJava part, you can rewrite that class over your own listener over the same enum abstraction. Just make sure to report only direction changes.  And about Google grokking APIs left and right you're preaching to the choir. My impression is that, being a graduate-driven company, the APIs are designed by optimistic people who have never had to fix outsourced code and assume everyone gives a crap about flexibility and following unwritten guidelines."
androiddev,3b1iw2,akiaki007,1 point,Thu Jun 25 16:55:28 2015 UTC,Specs change as the product evolves is all. People come up with clever uses and Google decides to incorporate them into the SDK itself (Android Design Support Library for instance - specifically Snackbar).
androiddev,3b1iw2,pakoito,6,Thu Jun 25 17:40:50 2015 UTC,"It's not about that. They can add as many features as they want, but there's always some ugliness to them (required undocumented setter, magic integer, wiki-documented initialization, backwards compatibility gotcha, xml magic) that requires you to either put time on your own, or come to stackoverflow or /r/gamedev or a blog post like the OP to even remotely understand how to implement the basic case. That's why Android Stackoverflow questions are an order of magnitude more common on SO.  Flexibility is a virtue as long as it doesn't hinder maintainability, and that's where iOS differentiates from Android. Everyone on iOS is running the same architecture (more or less clean, but same principles) and the same sane ways of fetching information, and composing UI and UX. Trivial things are trivial. On Android there's one architecture per programmer, one custom widget set per project, and one helper library per company. Some basic functionalities like location, network status, or storage have to be abstracted by 3rd party libraries to avoid boilerplate maintenance.  If you ever have the chance to look at non-opensource projects, see how many different approaches are to something as widespread as ListView adapters."
androiddev,3az8qd,donnfelker,14,Wed Jun 24 18:13:35 2015 UTC,"This is also absolutely crucial if you want to understand the crash stacktraces - always compare traces against the exact commit srctree, otherwise you might be misunderstanding the trace if the line numbers have shifted."
androiddev,3az8qd,madisp,3,Wed Jun 24 20:55:15 2015 UTC,EXACTLY. ^
androiddev,3az8qd,JakeWharton,13,Wed Jun 24 21:33:50 2015 UTC,Worth noting that this will break incremental compilation as you commit (and thus cause the value to change). Internally we switched to writing the SHA to a file if it is missing and using the file's value (we do the same with build timestamp). This means that only a clean build gets fresh values. Since CI builds and making releases are always clean (right? RIGHT?) it keeps developer builds fully incremental yet still gives the right values where it matters.
androiddev,3az8qd,tjgrant,3,Wed Jun 24 21:56:33 2015 UTC,Excellent point JW. I've added this as an update to the bottom of the post.
androiddev,3az8qd,madisp,2,Wed Jun 24 22:07:19 2015 UTC,"Hmm, couldn't you write this to a resource file on every build (say a separate strings.xml or perhaps runtime loaded json file, or header / Java source file), .gitignore whatever that particular file is, but still load it at runtime?"
androiddev,3az8qd,JakeWharton,1 point,Thu Jun 25 07:56:10 2015 UTC,"wouldn't making any Java or res/ changes also break incremental compilation though? (I assume you mean incremental Gradle build and not incremental java compilation, which would be a wholly different topic)."
androiddev,3az8qd,athornz,2,Wed Jun 24 22:22:01 2015 UTC,"The key is not affecting incremental compilation beyond what is being changed by the user. If I change a dimen file, commit, and hit deploy in the IDE it will do javac, dexing, and dex merging despite me not have explicitly changed a Java file."
androiddev,3az8qd,JakeWharton,1 point,Wed Jun 24 22:43:03 2015 UTC,So I assume you have a custom task that does this that hooks into the gradle build lifecycle somewhere? Where is a good place to hook into?
androiddev,3az8qd,athornz,1 point,Thu Jun 25 01:21:15 2015 UTC,No. Just swap the linked code which which creates a variable with a function and call it in the third argument to the buildConfigField method.
androiddev,3az8qd,thopu,1 point,Thu Jun 25 01:34:09 2015 UTC,"ah right, thanks!"
androiddev,3az8qd,athornz,1 point,Thu Jun 25 01:38:34 2015 UTC,"I am confused, should this function, lets say gitSha() write gitSha value to a file and then read it from the file during buildConfigField for incremental compilation to work?"
androiddev,3az8qd,flukus,1 point,Thu Jun 25 19:13:27 2015 UTC,"The way I've implemented it is with a function called something like readBuildConfigValue(String key). This function first checks whether a properties file exists on disk, and if not it will create it, and write to it things like gitSha. This file only gets created once.  It will then read the value asked for."
androiddev,3az8qd,JakeWharton,1 point,Thu Jun 25 19:26:19 2015 UTC,Don't you do a full clean/rebuild for releases anyway?
androiddev,3az8qd,zmarkan,6,Thu Jun 25 03:42:10 2015 UTC,Read the comment until the end.
androiddev,3az8qd,lordVader1138,2,Thu Jun 25 04:44:14 2015 UTC,"This is brilliant, thanks. Immediately adding it to our apps."
androiddev,3az8qd,KiDoki,1 point,Wed Jun 24 19:24:14 2015 UTC,Glad it helps. :)
androiddev,3az8qd,ufmace,2,Wed Jun 24 19:31:19 2015 UTC,"If you are using SVN, you can use ""svnversion ."" in place of ""git rev-parse --short HEAD"" to get your version number. Don't know deeply about notations but can confirm it will give you your revision number."
androiddev,3az8qd,jackhexen,2,Thu Jun 25 06:30:18 2015 UTC,"Thank you for the article! Why didn't I come up with this...  Crashlytics#setString is deprecated, though, you should use CrashlyticsCore$setString like so:  Crashlytics.getInstance().core.setString(""git_sha"", BuildConfig.GIT_SHA)"
androiddev,3az8qd,markyosullivan,1 point,Thu Jun 25 07:33:21 2015 UTC,"I've been recommending putting the Git SHA somewhere where it can be seen in issue reports in various places for a while, and this looks like a good way to do it for Android. I've been using the Git SHA as the version name for an app I'm playing with using the following in the app build.gradle:  def getVersionName = { ->     try {         def stdout = new ByteArrayOutputStream()         exec {             commandLine 'git', 'rev-parse', '--short', 'head'             standardOutput = stdout         }         return stdout.toString().trim()     }     catch (ignored) {         return null;     } }   With the following in the defaultConfig section:      versionName getVersionName()"
androiddev,3b30o5,Redblah,1 point,Thu Jun 25 15:40:29 2015 UTC,https://developer.android.com/guide/topics/data/data-storage.html  https://developer.android.com/training/basics/data-storage/index.html
androiddev,3b30o5,burntcookie90,-1,Thu Jun 25 15:49:20 2015 UTC,im having trouble storing objects on SQLite and SharedPreferences
androiddev,3b30o5,akiaki007,1 point,Thu Jun 25 15:57:17 2015 UTC,What problem are you having serializing your object through SharedPreferences? You should perhaps explore trying to get a solution to this on StackOverflow.
androiddev,3b30o5,EvolvedBacteria,1 point,Thu Jun 25 16:15:15 2015 UTC,You can serialise object and then write it out to phone memory directly.
androiddev,3b30o5,Cg2XHPxz,0,Thu Jun 25 16:16:38 2015 UTC,Can i use this http://www.java2s.com/Code/Jar/g/Downloadgson171jar.htm to do that? Sorry if this is a dumb question....i only have one year experience with java and I am making my first app.
androiddev,3b30o5,hozayhandsome,1 point,Thu Jun 25 16:36:02 2015 UTC,you shouldn't need to use anything special. serialization and saving files are just standard java things. you could use gson to turn it into json and make it a bit easier to parse but it's not necessary
androiddev,3b30o5,jackhexen,0,Thu Jun 25 17:57:35 2015 UTC,"lll try gson and see what happens...also how do i do a method call every 5 seconds using the Intent service class.This is my code:  protected void onHandleIntent(Intent intent) {      long endTime = System.currentTimeMillis() + 5*1000;     while (System.currentTimeMillis() < endTime) {         synchronized (this) {             try {                 wait(endTime - System.currentTimeMillis());             } catch (Exception e) {             }         }     }     Toast.makeText(getBaseContext(),""serviceee"",Toast.LENGTH_SHORT).show();  }"
androiddev,3b12bn,catgoquack,3,Thu Jun 25 02:50:50 2015 UTC,"Parse essentially acts as a back-end for your application. So instead of having to write your own server side code, run your own database and create your own API, you can use Parse to define your database schema, and use the SDK to load your data into your app asynchronously. You could optionally use SQLite to manage this locally (in case the user does not have a connection) or use Parse to use its local datastore, which I imagine does this behind the scenes.  In this case, it would be your ""Request"", and information that you'd want to show on your request, or about the person offering the solution.  Another thing to be careful about is separating your UI logic from your business logic. Displaying information you pull back is no problem - but separate the layer that actually grabs the data from the one responsible for displaying it."
androiddev,3b12bn,Librato,2,Thu Jun 25 04:50:30 2015 UTC,"Thanks for your reply! So Parse will save these as Parse Objects? 1) user registration (name, email, password, etc) 3) ""Requests"" made by a user 4) the state of the request (whether it has been fulfilled).  I am currently following a tutorial on how to build a registration and login page using Parse, and things seem to be going smoothly so far.  Also, what do you mean when you say ""be careful about separating your UI logic from your business logic""? Can you give an example in this context, and how a mistake can be made? I am reading through stackoverflow questions on this topic and am not fully grasping what it really means. Thanks!"
androiddev,3b12bn,Librato,3,Thu Jun 25 05:20:09 2015 UTC,"Yeah, Parse will save things in its database. Although they are not technically Parse Objects (probably JSON data in their back-end), you can access them via Java objects that extend ParseObject (I think that's what it was).  So you'd have a database table defined in Parse for users (with any details you care about), your user's requests, however you decide to track the state of the request, solutions, etc.  What I mean by separating UI logic from business logic is that you'll probably not want to make an adapter and do your Parse calls from within that class, for example. That would result in tightly coupling your view (UI) with your business logic. It would mean that your adapter may be less re-usable because your data isn't easily swapped, if for example, you wanted to display similar information between one view and another.  Separating the logic layers in your application is an important step to consider, although for Android it can sometimes be hard to know where to accomplish this. I would recommend learning about MVC (model-view-controller)/MVP (model-view-presenter) and/or MVVM (model-view-view-model) architecture patterns. MVVM especially due to some of the changes that may be coming with the next Android version because it could be useful in the future to be familiar with that.   Essentially, you are separating your business logic from your view logic, so that if you really needed to, you could change things in the business logic without having to re-code your view stuff."
androiddev,3b0783,Drsmall,11,Wed Jun 24 22:31:49 2015 UTC,Market your app. There's entire subreddits dedicated to marketing. Thats whats its about. Get it in front of people. Developing an app is 30% of the problem. Getting it into users hands and getting people to use it is the other 70% of the problem (and usually the much more difficult one to solve unless your app is a golden unicorn app - one that has accidental viral success).
androiddev,3b0783,donnfelker,1 point,Wed Jun 24 23:11:45 2015 UTC,"I posted it in androidapps, and usemysoftware already. Any other subs you suggest? A lot of subs don't allow advertisement"
androiddev,3b0783,gpyh,6,Thu Jun 25 14:11:53 2015 UTC,What's your app ?
androiddev,3b0783,mraviator9,3,Thu Jun 25 00:41:53 2015 UTC,"My app managed to get 90k downloads in 4 years so far with zero marketing, ads, promotion. Pure organic growth, word of mouth. Granted, it's an app for pilots and that user group tries out and shares a lot of apps with colleagues when they like the app and find it helpful.   But give it time, initial weeks/months are very slow."
androiddev,3b0783,bonkersz,2,Thu Jun 25 01:11:13 2015 UTC,If you're willing to spend money you can promote your app through various ad platforms.    I do this whenever I launch a new app to give it a little boost -- it seems only fair to put some money in since I use ads in my apps.
androiddev,3b0783,bonkersz,1 point,Wed Jun 24 23:45:32 2015 UTC,How much do you spend? And what platforms do you use? I don't want to drop $50 and generate a nice 43 cents from ads.
androiddev,3b0783,bonkersz,2,Thu Jun 25 14:10:33 2015 UTC,"I usually use AdMob.  I've tried a few other cheaper options but they appear to be scams (got the install count I expected, but analytics showed none of those ""users"" actually used the app).    My spend varies, I'll track the app rank in the ""new"" section for its category (first 30 days after launch).  For less saturated categories I'll spend a little more to get it into the top 50 new apps."
androiddev,3b0783,bonkersz,1 point,Thu Jun 25 19:00:42 2015 UTC,I'll keep that in mind. Good tip. Anyway to find out what rank my app is in the new section besides just scrolling down forever?
androiddev,3b0783,bonkersz,2,Thu Jun 25 20:01:52 2015 UTC,"appannie, if your app is in the top 500 you'll see it there (free)."
androiddev,3b0783,Suleiman19,1 point,Thu Jun 25 20:45:09 2015 UTC,Cool! Looks like it's #25 in New Free and #348 in grossing. Doesn't show up in the other columns. What should my next step be?
androiddev,3b0783,Suleiman19,2,Thu Jun 25 21:19:41 2015 UTC,"Nice!  If you go with admob, sign up for an account and click ""promote new app"" to create your ad.  That said, if you're already #25 that's pretty good.  It might cost quite a bit to get into the top 10.  (I don't know how much, you'd have to try it and see.)"
androiddev,3b0783,vladlichonos,1 point,Thu Jun 25 21:46:48 2015 UTC,I still don't know if it's worth advertising. The app has barely generated $1.00. I feel like it would be throwing away money.
androiddev,3b1a8q,Moxuz,3,Thu Jun 25 04:02:26 2015 UTC,A CardView is just a FrameLayout. Maybe just remove the underline in a child EditText?
androiddev,3b1a8q,achuinard,1 point,Thu Jun 25 04:14:42 2015 UTC,"Yeah it's just a white box with text in it, you don't need a library for that."
androiddev,3b1a8q,Cyber34,1 point,Thu Jun 25 07:50:12 2015 UTC,You don't but android has a cardview library in the support libraries anyway so might as well use it to be consistent with the rest of the platform
androiddev,3b0njq,ASIC_SP,3,Thu Jun 25 00:46:25 2015 UTC,Somebody needs to tell Andrew to put white background color CSS on his body tag...
androiddev,3b0njq,GeorgePantsMcG,1 point,Thu Jun 25 02:20:00 2015 UTC,Ya I just changed it in chrome because it was bugging me so much
androiddev,3az41w,guy_from_canada,15,Wed Jun 24 17:40:03 2015 UTC,"Nice, but someone has already done that before  https://github.com/Tibolte/ElasticDownload"
androiddev,3az41w,tipsylol,2,Wed Jun 24 21:34:54 2015 UTC,"I was inspired by this post on /r/loadingicon to write up this quick library. If anyone has any feature requests or suggestions, feedback is more than welcome!"
androiddev,3az41w,aurae_ger,1 point,Wed Jun 24 17:40:41 2015 UTC,There really is a subreddit for everything. Thanks for sharing your library!
androiddev,3az41w,dimsuz,1 point,Wed Jun 24 20:25:51 2015 UTC,It's too heavy to be used...
androiddev,3b0b7v,askthepoolboy,3,Wed Jun 24 23:03:54 2015 UTC,"Some of the other MOOCs let you download the videos, Udacity, Udemy, Coursera,etc."
androiddev,3b0b7v,bart007345,2,Thu Jun 25 05:39:07 2015 UTC,read the wiki on this sub-reddit? http://www.reddit.com/r/androiddev/wiki/index  on general programming: http://www.reddit.com/r/learnprogramming/wiki/faq
androiddev,3b0b7v,ASIC_SP,1 point,Thu Jun 25 01:13:00 2015 UTC,"Thanks for the comment. I am familiar with those. I'm looking for something specific to working/learning offline. Treehouse is great, but I can't seem to get it offline....I was hoping to find something similar."
androiddev,3b0b7v,jimeux,2,Thu Jun 25 02:02:28 2015 UTC,"Is there anything wrong with e-books? For example, getting a copy of RxJava Essentials, downloading the source code and building it before you leave will let you experiment with the code and get through the book offline. You can make a list of any questions/problems you have in Evernote and check them when you have WiFi access.   I think choosing a focus for each flight and preparing for it would be a good idea. If there isn't a book for it, e.g. Dagger 2, then use some kind of offline ""Read Later"" plugin (Chrome has several) to save every good article you can find. If there are any example repos, be sure to import them into AS and build/run them so everything is downloaded.   More generally, you could also check out the good open source projects thread. Importing one into your IDE and building it will let you run and explore it offline. Again, you can make a list of things you want to explore online.   I think Pluralsight has an offline viewer if you pay for the more expensive subscription. They have a few decent-looking Android courses. Personally, I learnt nothing from the RxJava course on there because there are no code samples anywhere outside the video."
androiddev,3b0b7v,emmg90,2,Thu Jun 25 06:28:37 2015 UTC,"These are great ideas, thanks! I have a few Android programming books downloaded, but I prefer things a little more hands-on. I like your idea of downloading source code and messing around with it."
androiddev,3b0b7v,Cravem,2,Thu Jun 25 11:50:27 2015 UTC,"Udacity where Google has official tutorials, allows you to download the courses."
androiddev,3b0b7v,emmg90,1 point,Thu Jun 25 07:20:47 2015 UTC,"I had checked udacity in the past, but I remember most of it being fee-based. Just went there again and saw android for beginners by Google is for free :O ty for reminding of that site again :D"
androiddev,3b0b7v,bertweaze,1 point,Thu Jun 25 09:16:35 2015 UTC,There are five or more lessons you must take from beginner to advanced covering a broad range on android dev!
androiddev,3b0b7v,bertweaze,2,Thu Jun 25 11:59:31 2015 UTC,"Download some resources like the entire Android API or developers guide and start building apps offline. Download some tutorials like actionbar, search, fragments, adapters etc...and then start building apps! The best way to learn is to create apps by coding it."
androiddev,3b25z5,ihtesham007,1 point,Thu Jun 25 10:48:25 2015 UTC,Try something like this maybe?  StackOverflow is your friend.
androiddev,3b25z5,Arclite83,1 point,Thu Jun 25 11:43:31 2015 UTC,/r/learnjava
androiddev,3b1z7h,Thats_What_Me_Said,2,Thu Jun 25 09:09:35 2015 UTC,"For the backend, BaaS are great to free you from the hassle of thinking about server storage, triggering notifications etc. You will only need to take care the UI and some logic about handling the message and group hierarchies."
androiddev,3b1z7h,martheen,1 point,Thu Jun 25 10:19:14 2015 UTC,"thank you, appreciate the reply!"
androiddev,3b1z7h,tartangeek261,1 point,Thu Jun 25 19:40:28 2015 UTC,hey great concept! As Martheen said use a backend service. The app can be as simple or it will be as complicated as you make it really in terms of building it!! Good luck with it all
androiddev,3b1vdl,aryonoco,1 point,Thu Jun 25 08:10:59 2015 UTC,"What type of Android development? Games using Unity, some other engine or maybe just OpenGL? Standard business apps that are text and some graphics in nice layouts?  If you are doing basic Android development either machine is way past what you will need there. Honestly once you have 16g (you are doing 32g) and a nice SSD everything is pretty darn fast.  If you are considering learning iOS programming as well, many people including myself do both, you may want to consider getting a Mac and using a bootcamp for PC work. I have a work Macbook Pro - new 15"" model - that works great for both my iOS and Android work. AS seems more stable to me on the Mac. I see more Google folks using Macs at trade shows than PCs so maybe the IDE gets a bit more love there.  I am not an Apple person, my home machine is a PC with 8g and an SSD drive with a nice video card as I like to game. I would say for development I prefer the Mac but that could only be due to needing access to AppCode / Xcode.  Back on the PC side, a nice video card - I prefer nVidia as I have had too many driver issues with AMD - is also helpful. Genymotion, the emulator you will want to use, supports offloading some processing to the GPU. Again if you are going to write games a solid GPU will be a big help as well.  No matter the platform dual screen is the way to go. I just got a new 27"" Dell monitor as my primary screen and I have a 23"" Samsung for the second monitor. Makes programming so much nicer to have the IDE in one screen and one or more emulators on the second screen along with a browser open. With my Macbook I have 3 screens and at times that does not seem enough."
androiddev,3b1vdl,MKevin3,-1,Thu Jun 25 12:13:25 2015 UTC,"No idea, sorry. This seems like overkill though!"
androiddev,3axk6n,zmarkan,7,Wed Jun 24 08:33:52 2015 UTC,"The show notes are always well done. Also, excellent episode as usual."
androiddev,3axk6n,slaystation25,5,Wed Jun 24 15:47:07 2015 UTC,THAANNKKK YOUUUUU >> WOO! ;)
androiddev,3axk6n,donnfelker,2,Wed Jun 24 18:12:31 2015 UTC,Fragmented -- Making exercise and driving pleasurable since 2015
androiddev,3axk6n,theblang,1 point,Thu Jun 25 18:41:06 2015 UTC,Awesome. :)
androiddev,3axk6n,donnfelker,1 point,Fri Jun 26 00:02:01 2015 UTC,you madam/sir are a champ!
androiddev,3axk6n,kaushikgopal,2,Fri Jun 26 03:39:31 2015 UTC,Binged-listened to catch up this last weekend. I'll listen to this one tonight! I'm very excited about what you guys are doing here. Go Donn!
androiddev,3axk6n,sellers04,2,Wed Jun 24 20:00:53 2015 UTC,Thanks :)
androiddev,3axk6n,donnfelker,1 point,Wed Jun 24 21:39:57 2015 UTC,"Are these kind of podcasts useful for beginners?  I'm a software engineer student so I know how to do basic code, but that's it."
androiddev,3axk6n,Nexxado,5,Wed Jun 24 19:43:14 2015 UTC,I think every will learn something. From the beginner to the expert - there's always something we can learn from others. :)
androiddev,3axk6n,donnfelker,1 point,Wed Jun 24 19:44:33 2015 UTC,"ur right, but i meant something else, let me refine my question: will a beginner like me be able to understand what is being talked about while not being in front of the podcast notes or a computer at all? like something to listen to while im on the road."
androiddev,3axk6n,Nexxado,2,Wed Jun 24 21:43:47 2015 UTC,"Yes. Most definitely. All of the links are on fragmentedpodcast.com/episodes/10 - so feel free to listen and then come back to the podcast. I wont lie though, some of this is deep tech stuff, but there is still tons of great content for beginners."
androiddev,3axk6n,donnfelker,1 point,Wed Jun 24 21:46:53 2015 UTC,"Just listening and try to understand what's going on, then follow up on the show notes.  More and more things will start sticking."
androiddev,3axk6n,mightyanger,1 point,Sat Jun 27 03:49:57 2015 UTC,"Thank you all, ill give it a try."
androiddev,3axk6n,Nexxado,3,Sat Jun 27 21:07:08 2015 UTC,"for advanced users: it's helpful to hear other experienced developers talk about similar problems. now and then it helps re-enforce known concepts.  for beginners: you come to know of battle-tested techniques from people who've been doing this for sometime. even if you don't land up being an expert on the topic per say, just knowledge of the technique's existence is extremely useful (so when you do become an experienced developer, you have resources/references to go back to)."
androiddev,3axk6n,moriartsy,1 point,Wed Jun 24 22:14:04 2015 UTC,"After listening to it thoroughly (twice to some bits) I agree to most of it, apart from the primitive obsession part.   Unless explicitly necessary performance wise I find it better to wrap primitives in classes representing domain objects. Makes it a lot easier to maintain the code in the long term by keeping your interface signatures (mostly) intact.   http://c2.com/cgi/wiki?PrimitiveObsession"
androiddev,3axk6n,moriartsy,1 point,Thu Jun 25 09:24:23 2015 UTC,"wrapping with a domain object instead is definitely good practice.  I think the primitives suggestions mentioned in the episode though, were more along the lines of Integer Vs int, Float vs float, Boolean vs boolean etc."
androiddev,3b2uvu,jeugasce,2,Thu Jun 25 14:57:16 2015 UTC,Check out the FAQ on the sidebar and also do the same for /r/learnandroid. If you have any questions after that feel free to ask!
androiddev,3b2uvu,NotyoWookie,2,Thu Jun 25 15:10:53 2015 UTC,"I've just started myself and I went straight for the android development guides. I'm an undergraduate CS student, and my university teaches Java as our Object-Oriented and introductory language so I've already got some experience there.    Definitely take some time to learn Java, how much I would say it depends on your experience with programming.  If you have some experience with python, or another OO language, then you might be able to pick up Java fairly quickly.  However, if you're totally new to programming, then I highly recommend working through Stanford's Introduction to Computer Science course.  University quality, Java oriented, and totally free!   I know if I'd tried developing apps even a year ago now, I'd have been intimidated even by the default directories and files in the Blank App creation in Android Studio.  With just a couple courses under my belt now, I understood the syntax and semantics of the default class, and was able to work through the Android dev page tutorials, actually understanding what was happening. I've also never worked with an XML file before, but having a solid foundation in another programming language allowed me to see that hey, this is just another language!  Good luck, and I hope I was at least kinda helpful = )"
androiddev,3b2uvu,aurellio,2,Thu Jun 25 15:17:55 2015 UTC,"I strongly suggest you learn basic Java first. When you're done with that, this is the best place to start with Android http://developer.android.com/index.html"
androiddev,3azk31,SprAwsmMan,4,Wed Jun 24 19:38:27 2015 UTC,You will appreciate a fast CPU when building your app
androiddev,3azk31,connyduck,2,Wed Jun 24 21:51:32 2015 UTC,A decent screen and keyboard are the most important thing if you plan to spend hours coding on the thing.
androiddev,3azk31,SweetGreen,2,Wed Jun 24 20:01:48 2015 UTC,While buying do care about backlight on keyboard.
androiddev,3azk31,xitize,2,Thu Jun 25 04:02:10 2015 UTC,"Nice call, definitely a ""small"" feature that I enjoy"
androiddev,3azk31,LordRaydenMK,2,Thu Jun 25 20:09:45 2015 UTC,An SSD is nice to have.
androiddev,3azk31,djchapz,2,Thu Jun 25 07:30:08 2015 UTC,"From my own experiance: Fast CPU for building - i5 has the best price/performace ratio Lots of memory - don't even try to go under 8GB GPU - doesn't really matter, any will do well Screen - for desktop, always go for 2 monitors, 19""+, for laptop - just make sure you can connect an external display Storage - SSD will save you tons of loading times, 120GB is enough for almost all your needs Keyboard - make sure all keys are ""full size"" as sometimes keys can be smaller to make the keypad compact which will slow down your development and you will make more typos Mouse - a good scroller! You will scroll a lot through your code, you dont want a cheap mouse whose scroller will stop working in a month or two Other than that - for a laptop, maybe get 2 batteries if you travel a lot"
androiddev,3azk31,tipsylol,2,Thu Jun 25 12:51:49 2015 UTC,"Well of course more cores = better, more memory = better, it's all about how much you want to spend. You don't need a dedicated graphics card.  I prefer 13-14 inch screen laptop so it's mobile, but still usable while travelling + external monitor and keyboard.  And Don't Capitalize The Title Like This PLEASE."
androiddev,3azk31,cbCode,2,Wed Jun 24 21:45:37 2015 UTC,I second the external monitor and keyboard. You can get a 27 inch HDMI screen around $200-$250 and makes production so much quicker.
androiddev,3azmin,Limitin,1 point,Wed Jun 24 19:56:49 2015 UTC,"Hi there, Thanks for going through my blog. Why don't you inflate the AppBarLayout from your Fragment?That way your Fragment will hold the Toolbar+Tabs and it can be handled better. Or you could use an interface to communicate from the Fragment to the Activity.  If you posted your layout for me to see I could suggest better.  Thanks"
androiddev,3azmin,Suleiman19,1 point,Thu Jun 25 05:04:09 2015 UTC,"Of these I recommend the first example. It makes the Fragment more ""stand-alone"" (loose coupling). A callback interface requires the Activity to know what Toolbar the fragment wants unless you pass it as a method parameter, but if that's the case you might aswell just set it from the Fragment."
androiddev,3azmin,pepefatha,1 point,Thu Jun 25 07:54:28 2015 UTC,"Is there a good way to post code here?  main_activity.xml  <android.support.v4.widget.DrawerLayout     xmlns:android=""http://schemas.android.com/apk/res/android""     xmlns:app=""http://schemas.android.com/apk/res-auto""     xmlns:tools=""http://schemas.android.com/tools""     android:id=""@+id/drawer_layout""     android:layout_width=""match_parent""     android:layout_height=""match_parent""     android:layout_below=""@+id/main_actionbar"">     <android.support.design.widget.CoordinatorLayout         android:id=""@+id/rootLayout""         android:layout_width=""match_parent""         android:layout_height=""match_parent"">         <LinearLayout             android:layout_width=""match_parent""             android:layout_height=""match_parent""             android:orientation=""vertical"">             <android.support.design.widget.AppBarLayout                 xmlns:android=""http://schemas.android.com/apk/res/android""                 xmlns:app=""http://schemas.android.com/apk/res-auto""                 android:layout_width=""match_parent""                 android:layout_height=""wrap_content"">                 <include layout=""@layout/actionbar""                     android:id=""@+id/main_actionbar""                     android:layout_width=""match_parent""                     android:layout_height=""wrap_content""/>             </android.support.design.widget.AppBarLayout>               <FrameLayout android:id=""@+id/content_frame""                 android:layout_width=""match_parent""                 android:layout_height=""match_parent""                 tools:ignore=""MergeRootFrame"" />         </LinearLayout>     </android.support.design.widget.CoordinatorLayout>          <android.support.design.widget.NavigationView             android:id=""@+id/navigation_view""             android:layout_width=""wrap_content""             android:layout_height=""match_parent""             android:layout_gravity=""start""             app:menu=""@menu/main_navigation""/>  </android.support.v4.widget.DrawerLayout>       And for one of the main fragments, but the one that will have the tabs.  fragment_schedule.xml  <?xml version=""1.0"" encoding=""utf-8""?> <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""     xmlns:tools=""http://schemas.android.com/tools""     xmlns:app=""http://schemas.android.com/apk/res-auto""     android:orientation=""vertical"" android:layout_width=""match_parent""     android:layout_height=""match_parent"">      <android.support.design.widget.TabLayout         android:id=""@+id/month_tabs""         android:layout_width=""match_parent""         android:background=""?attr/colorPrimary""         android:layout_height=""wrap_content""/>  <!--    <com.astuetz.PagerSlidingTabStrip         android:id=""@+id/month_tabs""         android:layout_width=""match_parent""         android:layout_height=""?attr/actionBarSize""         android:textColor=""@android:color/white""         android:background=""#444444""         app:pstsTextColorSelected=""@android:color/white""         app:pstsIndicatorColor=""@android:color/white""/>--> <!--     <com.gc.materialdesign.views.ProgressBarIndeterminate         android:id=""@+id/schedule_progress""         android:layout_height=""wrap_content""         android:layout_width=""match_parent""         android:visibility=""gone""         android:background=""@color/progress_bar_color"" /> -->     <android.support.v4.view.ViewPager         android:id=""@+id/schedule_month_pager""         android:layout_height=""match_parent""         android:layout_width=""match_parent"" /> </LinearLayout>   There are a few other fragments that can be loaded into the content frame of main activity. There is a fragment with a viewpager and springboard (the ""main"" fragment of the activity).   The schedule fragment has nested fragments as well. Each month of the year has its own tab wit ha fragment of events taking place that month.  There one other requirement that will be difficult is theming. The user needs to be able to change between three organizations and themes from the title area of the app (So I'll need a spinner in the toolbar apparently as well?)."
androiddev,3azmin,Suleiman19,1 point,Thu Jun 25 15:16:42 2015 UTC,"umm, would have been better had you posted on StackOverflow. Anyways, the TabLayout must rest below the Toolbar like this:  <AppBarLayout>     <Toolbar/>     <TabLayout /> </AppBarLayout>  Use it like this for your Fragment. Moreover you don't need the CoordinatorLayout in your MainActivity layout.   If only one fragment needs the tabs, then add it to your MainActivity layout, and use an interface. So when u load your tab Fragment, you display the tab or otherwise hide it.  For a spinner implementation, check this https://github.com/Suleiman19/Android-Material-Design-for-pre-Lollipop/blob/master/MaterialSample/app/src/main/java/com/suleiman/material/activities/FabHideActivity.java"
androiddev,3azmin,adao7000,1 point,Thu Jun 25 16:04:11 2015 UTC,I have pretty much the same issue. Could you please help me out? Here's the StackOverflow link: http://stackoverflow.com/questions/31169137/inflating-appbarlayout-with-toolbar-tablayout
androiddev,3azmin,Suleiman19,1 point,Wed Jul 1 18:40:07 2015 UTC,"How strange, I was helping address the exact issue sometime back. I highly recommend you check this out: https://www.reddit.com/r/androiddev/comments/3bar9z/cant_get_the_hang_of_this_collapsible_toolbar/"
androiddev,3azmin,sixteh,1 point,Thu Jul 2 17:16:52 2015 UTC,You can fix the shadow by setting the elevation of the frame layout containing the fragment to the toolbar's elevation.
androiddev,3azmin,Suleiman19,1 point,Thu Jun 25 09:40:06 2015 UTC,Or you completely remove the elevation as well toolbar.setElevation(0);
androiddev,3b00ii,ivacf,8,Wed Jun 24 21:40:01 2015 UTC,"I don't like that, it tries to solve the problem I don't have. It doesn't reduce that much boilerplate (especially when your viewholders use Butterknife) and you lose full control of your adapters."
androiddev,3b00ii,tipsylol,2,Wed Jun 24 22:06:03 2015 UTC,Is this a hard thing to do without this lib?
androiddev,3axwd0,markyosullivan,2,Wed Jun 24 11:29:07 2015 UTC,"Apologies for that title, it's a mouthful."
androiddev,3axwd0,Moter8,1 point,Wed Jun 24 11:29:59 2015 UTC,"The last one was like 9 months old and was stickied for the entire time, you couldn't even comment on it anymore."
androiddev,3axwd0,TheKeeperOfPie,3,Wed Jun 24 20:43:29 2015 UTC,I'm almost 100% certain that Mark is talking about the Hiring and Anything Goes threads that pop up on Monday and Thursday Friday respectively.
androiddev,3axwd0,TheKeeperOfPie,1 point,Thu Jun 25 02:40:57 2015 UTC,"I'm actually going to look into adding buttons to the sidebar for those, so you can easily see all of them. Would that be a reasonable compromise?"
androiddev,3axwd0,pandanomic,1 point,Thu Jun 25 05:27:33 2015 UTC,"Having buttons with the latest of each thread would definitely be beneficial. I probably would prefer both the buttons and keeping the sticky, but that's just my opinion.  And while I have you, what are your thoughts on a simple questions thread, like how /r/buildapc does it? I don't think we have enough participants here to warrant a new one everyday, but it would help to have a location to ask questions, since I see those threads pop up in /new every once and awhile. Probably just throw it in somewhere in between the Monday and Thursday Friday ones.  I used to frequent /r/buildapc a lot, so that's why I'm plugging it, but it would help to have a central location for design questions and where developers could both answer and learn from other people's questions."
androiddev,3axwd0,TheKeeperOfPie,1 point,Thu Jun 25 07:05:25 2015 UTC,"That's not a bad idea, and I think the other mod's talked to people about it before. Could you link me an example post on buildapc?"
androiddev,3axwd0,pandanomic,1 point,Thu Jun 25 07:09:27 2015 UTC,Here's yesterday's: www.reddit.com/r/buildapc/comments/3axz4f/simple_questions_june_24_2015/
androiddev,3axwd0,TODO_getLife,1 point,Thu Jun 25 07:13:25 2015 UTC,"Thanks. This looks good, and the automoderator portion is appealing. I'll talk with the other mod tomorrow and see what he thinks"
androiddev,3axwcz,DominikTVDE,20,Wed Jun 24 11:29:06 2015 UTC,"Agree on some basic coding styles so you don't feel like changing the other persons code every time you open a file they edited. The typical holy war stuff like TAB vs SPACE, brace on same line, class level variable names, directory structure (all activities in one package or all related code in one package).  Set reasonable expectations. Life gets in the way of plans especially if you have kids / pets / spouse.   Split up the work into nice sized chunks so you can see progress.   Decide on some key libraries early - using Volley for network communication etc. so you end up with a bunch of overlap. Always use ButterKnife maybe. Don't forget to ask the other person if you intend on introducing a new library in case they needed something similar.  Always check in code that builds. The worst thing is when you check in something that does not build, the other person grabs latest then they are stuck waiting on you unless they just back it all up a notch which may cause other issues.  Have some scheduled meet up times. Might only be once a week to see how things are going. Otherwise try to answer any email / IM from them in a timely manner so no one gets stuck waiting on a decision."
androiddev,3axwcz,MKevin3,4,Wed Jun 24 12:21:54 2015 UTC,"Agree on some basic coding styles so you don't feel like changing the other persons code every time you open a file they edited.   even better use the same ""coding style"" for IntelliJ/Android Studio and aggressively reformat your code according to that style."
androiddev,3axwcz,moriartsy,9,Wed Jun 24 18:58:42 2015 UTC,"If you're not pair programming together, get into the habit of creating feature branches and submitting pull requests so that you can review each other's code. This helps keep you both up to date on the progress and let's you give each other valuable feedback and quickly get on the same page regarding style, design, etc.  Schedule time to work together so you don't end up bitter over who's not pulling their weight / who's taking all of the work.  Write down and track work that needs to be done so no one ends up waiting on the other to find out what's next. Trello is your friend here."
androiddev,3axwcz,mikenomn,5,Wed Jun 24 14:38:52 2015 UTC,"I did the following with my team:    Decide on a coding guidelines. This is as simple as class names are capital and camelcase or each bracket is on the end of a line (no new lines) Create a settings jar in android studio, and share it with each other. This will make things like the amount of characters on one line is the same Use the same branching strategy with git Use the same naming conventions. It might be confusing if one of you says ""FragmentHome"" and the other says ""HomeFragment"", for example.    These are all simple things, but definitely things that help out."
androiddev,3axwcz,Nemisis82,1 point,Wed Jun 24 13:30:32 2015 UTC,"I tend to use HomeFragment and not FragmentHome personally, which one do you prefer and why?"
androiddev,3axwcz,Zhuinden,1 point,Wed Jun 24 15:14:30 2015 UTC,"I prefer HomeFragment, which is together with HomeListAdapter and HomeSQLite in the package com.myapp.home  -> I sort my stuff by the feature they are part of"
androiddev,3axwcz,BikerMouseFromMars,8,Wed Jun 24 15:25:14 2015 UTC,Git Quick Code-reviews of each other before pushing to server You can try some kind of mini-scrum (Trello maybe?) to track your progress. Divide your project into tasks to make sure you both don't code the same thing
androiddev,3axwcz,drabred,2,Wed Jun 24 11:41:40 2015 UTC,"also, pivotal-tracker todo list."
androiddev,3axwcz,rfinger1337,1 point,Wed Jun 24 16:29:48 2015 UTC,"Trello looks super neat! I hope it can help, specially with bug tracking"
androiddev,3axwcz,kaisims,2,Wed Jun 24 12:08:07 2015 UTC,Can agree!
androiddev,3axwcz,anon0108,3,Wed Jun 24 12:44:49 2015 UTC,TALK TO EACH OTHER  all the various project management schemes i've seen have boiled down to make communication between developers happen.
androiddev,3axwcz,ZakTaccardi,2,Wed Jun 24 13:57:45 2015 UTC,"Split your app into three layers - data, domain, presentation. The data layer and presentation layer do not depend on each other, but each depend on the domain layer.   Have one developer work on the data layer, and the other work on presentation. For arguments sake, lets say you are the presentation layer dev.  Domain contains your business logic, which is often just a bunch of interfaces (there can be classes, maybe ones that represent data or enums too). For example, if your app handles the view a bunch of articles, you could create an interface called ArticleRepo - that may have a method repo.getArticles(). In the data layer, have your data developer implement that interface: ArticleRepoImpl that handles all the logic on how actually get the articles (from the network, disk, or memory). This way, you don't need to worry about the underlying process on how articles are retrieved or stored and leave that to the data layer dev, so you can focus on the UI."
androiddev,3axwcz,HaMMeReD,2,Wed Jun 24 16:14:25 2015 UTC,"Personally, I say take it a step further and do your data and domain layers in Java, and do your presentation in Android.  It'll force you to think in a way that architecturally does not allow the components to mingle. Eliminating the possibility of lazy/incorrect separation of concerns."
androiddev,3axwcz,ZakTaccardi,2,Wed Jun 24 19:36:54 2015 UTC,"to save data to disk, you need to rely on Android dependencies."
androiddev,3axwcz,HaMMeReD,2,Wed Jun 24 19:42:32 2015 UTC,"No, you don't. Well kind of.  File works just fine, but you'd need to have a adapter to get a directory you can write to.  See things like LibGDX, writing to File System is not a problem.  Amazingly a lot will run on android, you can even have a embedded H2 database.  Edit: https://github.com/libgdx/libgdx/wiki/File-handling for how LibGDX handles cross platform file handling."
androiddev,3axwcz,ZakTaccardi,2,Wed Jun 24 21:29:18 2015 UTC,this would mean I couldn't use SharedPrefs. Still gonna need android dependencies for this unfortunately.
androiddev,3axwcz,HaMMeReD,2,Wed Jun 24 22:08:01 2015 UTC,"You could make a adapter for shared prefs.  Just put it behind a interface, or just use regular ""Preferences"" class in Java. It's not as good, but probably good enough for most uses."
androiddev,3axwcz,sweYoda,1 point,Wed Jun 24 22:16:27 2015 UTC,Rule number one in all relationships: Communicate.
androiddev,3axwcz,bearsbeetsbikes,1 point,Wed Jun 24 16:55:59 2015 UTC,"to add on to what others are saying, setup some static code analysis immediately. it sounds silly, and it definitely should be lower priority than thinking about architecture and so on, but it will really, really pay off.   using this plugin and the preset configs, you can have this setup in a few minutes. the additional bonus is it will probably teach you a lot about general code practices and working with java."
androiddev,3axwcz,kaisims,1 point,Thu Jun 25 05:29:02 2015 UTC,Can you explain that a bit more please? For waht is this plugin usefull?
androiddev,3axwcz,bearsbeetsbikes,2,Thu Jun 25 20:54:06 2015 UTC,"It runs PMD and check style, which you can google to find out more. Basically they make sure your code adheres to conventions and they recognize and keep you from making common errors. Super invaluable tools"
androiddev,3axwcz,FrezoreR,0,Thu Jun 25 21:51:58 2015 UTC,"You've gotten good advice already. So I might just repeat what has been said, but here are my five cents:   Follow Androids style guide.  Use spaces instead of tabs  Try not to work in the same classes or components as much as possible. That saves you on a lot of merging issues. You should use a versioning tool and for that I suggest GIT. Make sure the project builds before checking in new code. If you want to it advanced you can have a jenkins server building after each check-in.   Remember that code is read more often than written. Having this in the back of your mind will help you numerous times!  Good luck coding :)"
androiddev,3axwcz,BikerMouseFromMars,1 point,Wed Jun 24 15:01:55 2015 UTC,Use spaces instead of tabs    why?
androiddev,3axwcz,gonemad16,1 point,Wed Jun 24 15:25:47 2015 UTC,"spaces look the same in all editors, tabs do not.  Some editors may show a tab as 2 spaces.. some may show it as 4 spaces, or another value"
androiddev,3axwcz,kaisims,1 point,Wed Jun 24 16:47:45 2015 UTC,"But if you work with the same programn, Android Studio in this example, then using TAB is working well."
androiddev,3axwcz,gonemad16,1 point,Wed Jun 24 17:12:08 2015 UTC,android studio lets you replace your tabs with spaces (when you hit tab it actually inserts spaces).. so there is no reason to not always use spaces
androiddev,3axwcz,FrezoreR,1 point,Wed Jun 24 17:56:22 2015 UTC,Because that makes sure the code looks the same in all IDE's. Tabs can cause issues between IDEs and OS:es which is not the case with spaces. So less headache and more consistency :)
androiddev,3ayr1p,TheOracle98,3,Wed Jun 24 16:06:26 2015 UTC,"I'd calculate the differences of the coordinates and pick the point which has the lowest difference in both x and y. Iterate through the points,get the difference and compare that to the previously found best match (or none if it's the first in the iteration)"
androiddev,3ayr1p,insane-cabbage,2,Thu Jun 25 05:26:26 2015 UTC,You could calculate that pretty easily with the pythagoras farmula.
androiddev,3ayr1p,ueman,1 point,Wed Jun 24 18:15:47 2015 UTC,"I had to create a ""world map"" which had to register a click on cities planted around, this was back in 2012 and it had to work on on Froyo. What I've done back then was put a Webview and placed precut images in a table in HTML (either saved in assets or built dynamically). Cities were images with anchor tags (links) with absolute positions precalculated with density in mind. Each click was registered through JS interface in Activity and from there is normal development.   This may not be satisfying approach for today standard, but back then it worked quite well."
androiddev,3ayr1p,PrimaxLire,1 point,Thu Jun 25 10:16:41 2015 UTC,"Take a look at the PhotoView library, it was a great fit for me because i was manipulating items with percentages of the image and i don't think it will be hard to adapt it to a coordinate-based system. I know i'm late, but maybe it helps."
androiddev,3azzla,pestopastarasta,1 point,Wed Jun 24 21:33:10 2015 UTC,"The demo app is frankly the best resource for understanding how to use ExoPlayer - ignore the parts that don't apply to what you're trying to do, and just focus on understanding the one flow that does."
androiddev,3azzla,chambo622,1 point,Thu Jun 25 07:01:56 2015 UTC,"Yes I guess it's my best bet for the time being and that is the approach I have been taking, thanks anyway!"
androiddev,3ay2zj,PhoenixBytheStorm,13,Wed Jun 24 12:44:54 2015 UTC,"You've stumbled into one of the ugliest sides of Android development. The original camera APIs were wrought with peril as they were very dependent on manufacturers implementing them correctly and completely. Unfortunately, that didn't happen and what we're left with is an environment where code that works on one device doesn't on another and may do something that isn't even be possible on another (possibly what you've encountered).  If you haven't tried them yet, the Camera2 APIs introduced in Lollipop are much more sanely designed (not quite as low level as the original APIs), but I've unfortunately already encountered a couple of manufacturers that didn't even bother implementing some of them on their 5.0 devices (I'm looking at you Samsung). Hopefully it's since been addressed (this was back in March). A good example of setting up a surface preview can be found here  As far as the swiping goes, have you looked into a ViewPager and fragments? Do you actually want to swipe to a different activity?"
androiddev,3ay2zj,mikenomn,1 point,Wed Jun 24 14:32:58 2015 UTC,No not really I guess I am just trying to implement the simplest events I can to determine what works and how.  But thanks for your reply.  I feel a little less frustrated somehow.  And also thanks for the example.  I will research everything in that
androiddev,3ay2zj,L0neKitsune,1 point,Wed Jun 24 16:56:31 2015 UTC,"Good luck, I've spent over a month on the camera APIs and have rebuilt the setup I use 3 times.  I have a client with one of my older builds and the camera code causes 70x the bug reports as anything else in the codebase.  Unfortunately I can't patch it because they don't pay us anymore."
androiddev,3ay2zj,fewjative,2,Thu Jun 25 05:26:05 2015 UTC,"Check out my app called SnapThat on github. in the master branch, it does exactly what you want - swipe between pages with one being a camera surface preview."
androiddev,3b2i59,456sghosh,1 point,Thu Jun 25 13:09:58 2015 UTC,Great Tips for New Users
androiddev,3b2i59,321sghosh,1 point,Tue Jun 30 05:32:32 2015 UTC,Doesn't belong here.
androiddev,3ayqlk,OogieFrenchieBoogie,3,Wed Jun 24 16:03:19 2015 UTC,"just had a look, the Tasks stuff has been superseded by RxJava and the app links protocol seems a bit niche."
androiddev,3ayqlk,bart007345,1 point,Wed Jun 24 16:33:22 2015 UTC,"app links protocol seems a bit niche   Totally agree on this, I was more curious about the Tasks part"
androiddev,3ayqlk,tipsylol,2,Wed Jun 24 16:38:02 2015 UTC,"I guess because both Facebook login and Parse API use it, nobody I know uses it directly."
androiddev,3av6ht,lnkprk114,53,Tue Jun 23 19:36:12 2015 UTC,"App link / type / libraries  Aizoban / offline manga reader / EventBus, RxJava, CupBoard, Glide, Jsoup, ...  Mizuu / popular media indexer / Otto, Picasso  Philm / Movie collection and information app for Android / Picasso, Dagger  Pindroid / Pinboard Bookmarks for Android / nothing special but clear sync adapter  SeriesGuide / Manage (re)watching your favorite TV shows on your Android devices / a lot!  IOSched / the official Google IO app (we are still waiting for the 2015 push)  Aptoide / alternative Android market / a lot too"
androiddev,3av6ht,guillaumeyp,9,Tue Jun 23 19:50:45 2015 UTC,The source for Aizoban is gorgeous. It completely shits on everything I've ever written. I can't believe he just graduated HS.
androiddev,3av6ht,TiberiusAbadon,2,Tue Jun 23 23:36:25 2015 UTC,"Dang, his website is really helpful too: http://jparkie.github.io/"
androiddev,3av6ht,allholy1,1 point,Wed Jun 24 16:13:21 2015 UTC,"After reading at so many places about MVP, MVVM, MVC and what not, this source helped me understand how to implement it properly.  Now looking for some good repos with testing done properly (while following MVC approach)."
androiddev,3av6ht,sahildave1991,1 point,Wed Jun 24 14:20:00 2015 UTC,"The architecture looks good at first glance, and the code is linear and straightforward from what I can see.  However, his use of whitespace is atrocious and random."
androiddev,3av6ht,HaMMeReD,15,Wed Jun 24 20:02:29 2015 UTC,"App Link Type Libraries    Aizoban Offline manga reader EventBus, RxJava, CupBoard, Glide, Jsoup, ...   Mizuu Popular media indexer Otto, Picasso   Philm Movie collection and information app for Android Picasso, Dagger   Pindroid Pinboard Bookmarks for Android Nothing special but clear sync adapter   SeriesGuide Manage (re)watching your favorite TV shows on your Android devices A lot!   IOSched the official Google IO app (we are still waiting for the 2015 push)    Aptoide Alternative Android market A lot!"
androiddev,3av6ht,Peragot,6,Wed Jun 24 00:46:01 2015 UTC,"Interesting, only 2 of those apps have tests and they are so minimal it makes me wonder if they are actually any good."
androiddev,3av6ht,bart007345,1 point,Wed Jun 24 06:20:28 2015 UTC,"Welcome to Android.  The only way you are going to get useful (unit) tests is to push code out of Android and into Java, and then following Java best practices (dependency injection, mocks, etc).  Lots of ways to write automation tests though."
androiddev,3av6ht,HaMMeReD,2,Wed Jun 24 19:55:00 2015 UTC,I love SeriesGuide! I keep a tablet next to me in my living room so I can keep our watched episodes up to date and look for new things I need to record.
androiddev,3av6ht,KungFuHamster,1 point,Tue Jun 23 20:50:33 2015 UTC,No usage of Bolts ?
androiddev,3av6ht,OogieFrenchieBoogie,1 point,Wed Jun 24 12:02:18 2015 UTC,I'm still irritated by the use of fragments in the IO app. They are barely used and best practices usually say that activities should do little more than managing fragments.
androiddev,3av6ht,Rhed0x,1 point,Wed Jun 24 14:22:13 2015 UTC,"Well these are all great but the problem I have with reading source code is that it's so big. It'll take a longer time for me to go through it all and try to understand how it all fits together than just following a design principle myself on a new project. Then check to see what I couldv'e done better and use it on a new project (or refactor the old one). By reading code you don't get to feel the necessity of doing certain things in a particular way.   The only way to do that is by finding a 'problem', like trying to communicate with  a REST API, dealing with it in the 'normal' way, struggling with HttpRequests and what not, and then finding out how awesome Retrofit is.   You can't just read perfect source code and hope to become an expert immedietely. Most likely, that 'perfect' source code was the result of several iterations and improvements by a team of developers who specialize in different areas."
androiddev,3av6ht,lordoftherings911,1 point,Wed Jun 24 12:56:59 2015 UTC,"You can't just read perfect source code and hope to become an expert immedietely. Most likely, that 'perfect' source code was the result of several iterations and improvements by a team of developers who specialize in different areas.   Exactly, you don't become a good writer just by reading Dostoveiski, Shakespear and Borges"
androiddev,3av6ht,YouShallNot_Parse,2,Wed Jun 24 13:32:05 2015 UTC,"Conversely, you don't become a good writer without reading great writers.  I would pose that you need both to read other's code and to write your own code. If you only read your own code, you are going to learn slower."
androiddev,3av6ht,ttelephone,1 point,Wed Jun 24 15:07:34 2015 UTC,also true
androiddev,3av6ht,YouShallNot_Parse,1 point,Wed Jun 24 17:39:21 2015 UTC,"It's been suggested however that if you sit down and transpose great writers works, it's a very effective step in learning."
androiddev,3av6ht,HaMMeReD,1 point,Wed Jun 24 20:03:36 2015 UTC,"Nevertheless Dostoveiski had a secretary that transcribed everything he dictated her, she didn't become a great writer."
androiddev,3av6ht,YouShallNot_Parse,7,Wed Jun 24 22:24:53 2015 UTC,"Am I the only person who organizes my class packages by vertical?  For example, <feature>/<activity|fragment|model...>/MyClass.java, rather than having one giant package."
androiddev,3av6ht,Atlos,3,Wed Jun 24 00:35:10 2015 UTC,"I definitely do it in my apps. Even if those packages aren't going to be shared among projects, it just makes so much sense."
androiddev,3av6ht,Turtlecupcakes,2,Wed Jun 24 05:03:55 2015 UTC,"It's a little excessive to do that by package, but no harm.  What do you really gain?"
androiddev,3av6ht,AntiMe,1 point,Wed Jun 24 01:58:48 2015 UTC,"You have packages for organization. It's not so much for you, but for that new programmer to the team taking over.  It's like having a efficient filing system vs a pile of randomly organized and named files."
androiddev,3av6ht,HaMMeReD,1 point,Wed Jun 24 20:05:35 2015 UTC,"Better organization imo, much easier to find all related classes of a feature/vertical.  If I'm working on X feature I don't really care to see classes of Y feature."
androiddev,3av6ht,Atlos,1 point,Wed Jun 24 03:01:13 2015 UTC,"Ok, personally if you like organization by feature I can see it.  It's a benefit of package management, you can do that.  I'm not saying anything is wrong with it.  If the features are especially complex then it's probably a good idea."
androiddev,3av6ht,AntiMe,1 point,Wed Jun 24 03:04:40 2015 UTC,Just recently started doing it.  I sometimes forget and I get confused but now that I'm used to it I think it's easier.
androiddev,3av6ht,prest0G,1 point,Wed Jun 24 12:33:42 2015 UTC,I organize based on Dependencies with a grouping UI/Controller/Model.
androiddev,3av6ht,HaMMeReD,0,Wed Jun 24 20:04:33 2015 UTC,Yes! Uncle Bob agrees in one if his architecture talks.
androiddev,3av6ht,bart007345,8,Wed Jun 24 06:25:31 2015 UTC,"sadly none of these ""well programmed"" apps have testing. sigh."
androiddev,3av6ht,moriartsy,7,Tue Jun 23 23:51:47 2015 UTC,"If it runs, ship it..."
androiddev,3av6ht,bubbleguuum,3,Wed Jun 24 14:20:37 2015 UTC,There's also the problem with tests in the mobile platform as presented in this link http://philosophicalhacker.com/2015/05/01/how-to-make-our-android-apps-unit-testable-pt-1/. Recommended reading.
androiddev,3av6ht,menegatti,3,Wed Jun 24 12:57:47 2015 UTC,Because nobody pays for testing.  And because it's boring.
androiddev,3av6ht,I-am_the-liquor,2,Wed Jun 24 04:32:07 2015 UTC,nobody pays for testing   well you will eventually (when ur app becomes big)   because it's boring.   hmm...
androiddev,3av6ht,moriartsy,1 point,Wed Jun 24 05:10:38 2015 UTC,"I won't pay for it, the owners will (if/when they finally cave in and pay us to do it).  And it's still boring."
androiddev,3av6ht,I-am_the-liquor,-16,Wed Jun 24 05:39:58 2015 UTC,Writing tests are not boring and if you find them boring your either not cut out for a job in software development or your doing it wrong.
androiddev,3av6ht,bart007345,1 point,Wed Jun 24 06:24:19 2015 UTC,But they end up paying for an army of QAs and extended bug fixing cycles. And how to put a cost on releasing a buggy app?
androiddev,3av6ht,bart007345,3,Wed Jun 24 07:44:52 2015 UTC,"I'm not suggesting it's a smart way to go, just explaining why so much code out there has no testing.  Commercial code is usually written under pressure to produce for the lowest (immediate) cost, hobby software written for fun often skips the boring parts."
androiddev,3av6ht,I-am_the-liquor,-3,Wed Jun 24 12:25:45 2015 UTC,"No-one should pay for testing. It's part of normal development and if you don't agree, get out of the industry.  If your organisation doesn't agree then change your organisation or change your organisation.  Apologies for being a bit harsh but I have enough trouble convincing the business the importance of tests. It doesn't help when I have to convince devs too."
androiddev,3av6ht,bart007345,0,Wed Jun 24 06:23:07 2015 UTC,Testing guarantee your code quality. Obviously tests have to be written well =)
androiddev,3av6ht,marcouberti,2,Wed Jun 24 13:37:02 2015 UTC,"I guess my brief response implied more than I intended.. I am all for comprehensive testing, I just understand why it often doesn't happen."
androiddev,3av6ht,I-am_the-liquor,0,Wed Jun 24 13:44:12 2015 UTC,"it implied that it was outside your control to do something about it and so the system never changes. If you think its right, fight for it!  I was able to convince my team when I showed them how many times the deadlines were shot to hell in bug-fix cycles that were not on the plan. I put my money where my mouth is and said let me take slightly longer to dev and the extra time would be more than saved by reducing the bug-fix cycle."
androiddev,3av6ht,bart007345,1 point,Wed Jun 24 15:09:08 2015 UTC,"Again, I am commenting on why so much code out in the world doesn't have complete testing, not referring to a specific situation or whether it could or should be changed.  If you're arguing that every developer everywhere should fight for it, fine, I can get behind that, but solving (or excusing) the current state of affairs wasn't my intention.  Just explaining what the guy finds as he looks through code."
androiddev,3av6ht,I-am_the-liquor,1 point,Wed Jun 24 15:44:59 2015 UTC,"On android you have only integration testing options really. Unit testing isn't viable.  However, you can break apart the code and put your domain logic in Java, test it extensively, and then use Android as simply the presentation layer.  You can then unit test to your hearts content, and mock your logical layer and do all sorts of integration/unit tests."
androiddev,3av6ht,HaMMeReD,2,Wed Jun 24 20:07:19 2015 UTC,You should checkout f-droid.
androiddev,3av6ht,c0Re69,2,Tue Jun 23 20:28:52 2015 UTC,https://github.com/LiveTyping/u2020-mvp  Port of Jake Wharton's U2020 sample app with use of MVP pattern and Dagger 2.
androiddev,3av6ht,taggzor,5,Tue Jun 23 20:30:18 2015 UTC,"They're implemented, just not explained."
androiddev,3av6ht,Zhuinden,1 point,Tue Jun 23 21:13:44 2015 UTC,Here is a very good one: https://github.com/square/sqlbrite/tree/master/sqlbrite-sample
androiddev,3av6ht,jackhexen,0,Tue Jun 23 23:53:42 2015 UTC,"for all of you down voting me for being so strident about testing, check out this"
androiddev,3av6ht,bart007345,-4,Wed Jun 24 14:39:41 2015 UTC,Bookmark
androiddev,3av6ht,elwesties,-9,Wed Jun 24 11:19:24 2015 UTC,Not eclipse
androiddev,3b006x,JavaDevMatt,2,Wed Jun 24 21:37:43 2015 UTC,"My concern here is that those techniques might end up in non gaming code. Don't  sacrifice readability and maintenance of the code for a few milliseconds.  If it's a game and you want every last bit of performance, write it in C++."
androiddev,3b006x,bart007345,1 point,Thu Jun 25 05:50:08 2015 UTC,"This is well written but dated, Dalvik since 2.3 has improved a lot and ART even more so. But it shows you should benchmark and if you see a slowdown its some ideas of how to improve performance."
androiddev,3b006x,jopforodee,1 point,Thu Jun 25 00:27:12 2015 UTC,"Dies this really habe any influence what so ever? Ofcause its nice to habe a better performance on stuff you execute a lot per second.... But isnt the heavy lifting normally done inside the loop a and not at the loop itself, resulting in something that probably is < 5% of your work being faster?"
androiddev,3azxf1,Reconquista_,4,Wed Jun 24 21:16:14 2015 UTC,"I published my first app when I was still in high school. I had to borrow my mom's credit card to pay the $25 fee, but otherwise had no issues."
androiddev,3azxf1,EddieRingle,0,Wed Jun 24 22:22:04 2015 UTC,So like u put yo age as under 18?
androiddev,3azxf1,EddieRingle,1 point,Thu Jun 25 01:31:36 2015 UTC,"I don't remember having to specify my age anywhere. My Google account had me at under 18 though, if that's what you mean."
androiddev,3av4ym,iPaulPro,11,Tue Jun 23 19:25:10 2015 UTC,"Additionally, if you want to make sure some views can't be swiped (ie. sub headers) override getSwipeDirs and return 0 for those view holders."
androiddev,3av4ym,burntcookie90,1 point,Tue Jun 23 19:47:40 2015 UTC,Nice tip! Thanks.
androiddev,3av4ym,kirdape,3,Tue Jun 23 20:36:19 2015 UTC,how can you set the appearance of the swipe item like the gmail app with the undo button?
androiddev,3av4ym,Saketme,1 point,Wed Jun 24 03:05:51 2015 UTC,Absolutely. Look into overriding the onChildDraw callback. Part 3 will cover this in more detail.
androiddev,3av4ym,QuestionsEverythang,1 point,Wed Jun 24 10:41:41 2015 UTC,Wow. This is super simple. Thank you!
androiddev,3axrs1,Qbee1337,1 point,Wed Jun 24 10:24:59 2015 UTC,"will Google realize that I am the same person and ban me again?   From the stories we usually hear, yes, your new account will get banned. Use MoPub, if any network bans you it is easy to migrate to another one without losing user/ad impression."
androiddev,3awmlk,thiagokimo,2,Wed Jun 24 02:25:36 2015 UTC,robohash is amazing :D
androiddev,3awmlk,rmvt,2,Wed Jun 24 08:02:32 2015 UTC,Faker helps you to populate your views with random data quickly and painfully.   Painlessly might be the word you're after :)
androiddev,3awmlk,504d206d652074686973,2,Wed Jun 24 09:29:53 2015 UTC,Yes. You are right :P
androiddev,3axtbh,Erayz,2,Wed Jun 24 10:46:42 2015 UTC,"Icon packs are a feature of third party launchers, if it is possible to access them you should look into each individual launcher and see if it can be done. The stock launcher and google launcher don't provide these features I don't think."
androiddev,3axtbh,Cyber34,-1,Wed Jun 24 12:36:03 2015 UTC,yes. i use Nova launcher pro and Naxos Taz icons. gives it a great look.
androiddev,3ax15q,lordVader1138,1 point,Wed Jun 24 04:40:56 2015 UTC,I was looking for something like this. Thank you!
androiddev,3ax15q,Saketme,1 point,Wed Jun 24 06:48:09 2015 UTC,Happy to help.
androiddev,3ax15q,will_r3ddit_4_food,1 point,Wed Jun 24 07:17:20 2015 UTC,Awesome!
androiddev,3axkhs,LeonardoDavid,5,Wed Jun 24 08:39:23 2015 UTC,"So basically if you make a paid app, make it have a unique gameplay and visual style."
androiddev,3axkhs,will_r3ddit_4_food,2,Wed Jun 24 14:57:59 2015 UTC,You forgot the quality part.
androiddev,3aubs5,t0s,3,Tue Jun 23 15:59:53 2015 UTC,"some quick points:  you can run code in the primary constructor via an init{} block  ""static"" functions can be created inside of a Companion object"
androiddev,3aubs5,burntcookie90,3,Tue Jun 23 18:09:27 2015 UTC,"Overall a very good and brief introduction.  Here's some things I might add or change:   You don't actually need the type declaration when declaring a field outside of the constructor (if you've initialized it). Kotlin's smart enough to figure it out. Kotlin's nullability awareness and that the default is non-null. This is a pretty big difference from Java, and exemplifies how Kotlin tries to reduce the amount of runtime errors by throwing compiler errors when you violate the nullability contracts. Explain that extension functions work basically like static utility functions in Java, but add a more convenient and fluid syntax. I'd also make the example an extension function of Int, since it's pretty cool to be able to do something like 42.factorial()."
androiddev,3av66k,tascor,1 point,Tue Jun 23 19:34:07 2015 UTC,What? Advertising to kids? That's your monetization plan?
androiddev,3av66k,rizolautora,1 point,Wed Jun 24 17:38:30 2015 UTC,Thanks for asking. No it's not all my monetization plan. It's just that i wanted to monetize my kids audience.
androiddev,3av66k,Unlockabear,1 point,Thu Jun 25 14:19:14 2015 UTC,"There are a bunch of ad networks that are COPPA compliant. I can get you onto a growth thread and fwd you the chain that talks about it. It goes into good detail and you can get insight into how advertising to children works.  I gotta say though, most advertising to kids on mobile doesn't work for a plethora of reasons. Most successful kid oriented apps are premium."
androiddev,3av66k,Unlockabear,1 point,Wed Jun 24 23:05:09 2015 UTC,Thanks for responding . I thought of Chartboost and other but they are not able to provide approriate ads for my kids audience. I am just curious what are the plethora of reasons why it would not work? Thanks !
androiddev,3av66k,Unlockabear,2,Thu Jun 25 14:21:04 2015 UTC,"There is very little demand for advertising to kids on mobile, and the little demand you will get, it will be extremely difficult to monetize the kids you get.  The majority of advertising demand on mobile is performance based. What that means is they want users to perform an action (usually installing an app). That means the people you reach need to know the password on the itunes or google play account in order to install even a free app. Do most kids have access to this? I would guess no.  Even if they do have access to it, most advertisers don't want children downloading their app. Kids don't have money to spend in app. It's a losing situation for them and they'd rather not pay for it. Oftentimes, they don't.  If you have reach a huge user base that has kids, you may have a shot in contacting some of the studios and saying you'll drive traffic to their apps. I would say try to approach this in the angle of - your app is tailored for kids, but reaches young moms who use this app for their kids. Moms are a very demanded demographic for mobile advertising, but you should be able to prove you can reach that demo.  Do kids even own phones/tablets?"
androiddev,3atri9,BlotCoo,1 point,Tue Jun 23 13:12:36 2015 UTC,"Looks like Icepick, but with extras."
androiddev,3atri9,jackhexen,0,Tue Jun 23 22:52:39 2015 UTC,Or just use Android Annotations instead of the 10 libraries that has been posted here in the last days.
androiddev,3atri9,rexsk1234,3,Tue Jun 23 18:53:23 2015 UTC,10 small libraries are much better.
androiddev,3atri9,jackhexen,2,Tue Jun 23 22:57:12 2015 UTC,"I like Android Annotations, but sometimes it feels a bit heavy for when I just want some simple injection."
androiddev,3atri9,Scriptacus,1 point,Tue Jun 23 19:18:51 2015 UTC,"Is Android Annotations a specific thing, or are you referring to some set of android annotations in general?"
androiddev,3atri9,aurae_ger,2,Wed Jun 24 03:43:40 2015 UTC,"He's talking about http://androidannotations.org - I have to agree with jackhexen though, in that I prefer multiple small libraries over the beast that is AA."
androiddev,3av273,atioxx,2,Tue Jun 23 19:06:17 2015 UTC,This has absolutely nothing to do with Android. But it is an awesome component!
androiddev,3av273,JakeWharton,1 point,Tue Jun 23 22:49:53 2015 UTC,Storing keys securely in Android is the holy grail atm in my company. This ain't it.
androiddev,3av273,bart007345,0,Wed Jun 24 07:15:34 2015 UTC,Yup! Gotta try it
androiddev,3auw6x,notflip,8,Tue Jun 23 18:25:10 2015 UTC,"I think that the best thing you can do is start doing your own app. I was also lost with all online coursed and I was never confident enough to start coding something.  One day I got really tired of watching all these courses and started doing my own app. And it's the best thing you can do, because at every step you need to take, you'll have to search what you have to do. ""How do I do from one activity to another?"", ""How to pass arguments to a Fragment?"", ""How do I make tabs?"", ""How to open a dialog?"",""How to fetch data from an API?"", etc.   Just divide and conquer. Eventually you can go back to these courses and understand WAY MORE than the first time you saw it, and that's just because you had to use it in your app and you're more familiar with it.  Today I'm almost finishing my first app. I'm sure that my code sucks, but my next one will be better!  And try doing something simple (maybe avoiding any network for now), just to get things going."
androiddev,3auw6x,SmithhBR,2,Tue Jun 23 18:51:04 2015 UTC,"I'm sure that my code sucks, but my next one will be better!   That's a rule that hopefully applies to everyone - it's always better if the next one is better, and not just equally bad :) Improvement is a wonderful thing, before I checked out the Clean Code guide, my code was an atrocity."
androiddev,3auw6x,Zhuinden,2,Tue Jun 23 19:11:48 2015 UTC,This is a very good piece of advice! Time to just play around a little. I guess I'm always affraid of writing things the wrong way. What's your app about?
androiddev,3auw6x,SmithhBR,3,Tue Jun 23 19:14:25 2015 UTC,"Don't be afraid. There's nothing at stake here, just your learning. When you do the wrong way you'll know eventually that something feels off. One day you'll be reading a random StackOverflow topic, read a piece of code and then it'll snap ""Oh crap, it's like this!"", or simply by experience. Try to revisit your code two months into the development, you'll spot a bunch of mistakes that can be easily fixed :).   My app is design to help people that go to help split checks in bars/restaurants/supermarkets, but not as simple as divide the check by the number of the people at the table, a little more complex than that. It's a very simple concept that helped me understand a bunch of Android development."
androiddev,3auw6x,SmithhBR,1 point,Tue Jun 23 19:28:02 2015 UTC,"Sounds nice! And a very good idea. I'm coming over from PHP so Java / Android is a little ( à lot ) different! Someone should write a book ""Android development for web developers"" comparing layouts to div's etc. Good luck with your project! I'de love to check it out once it's online."
androiddev,3auw6x,hovokhc,2,Tue Jun 23 19:41:20 2015 UTC,"It's being very hard for me too. I'm a firmware developer and only used to program in Assembly and C for some DSPs and ARMs. I had zero knowledge in OOP, so I had to start almost from scratch. But it's being fun :)  Whe the app hits the PlayStore, I'll probably post in /r/androidapps for some reviews. But I need to translate it first, because I'm doing it in my first language (portuguese). I hope that in July I can publish it.  Good luck with your learning"
androiddev,3au88h,jmanda1,2,Tue Jun 23 15:31:25 2015 UTC,Have you tried intalling the production APK yourself? Perhaps it's corrupt.  One of the main reasons I moved from Eclipse to Android Studio was that it often created duff production APKs.  Ever since I always test install the production APK before I publish it.
androiddev,3au88h,beermad,1 point,Tue Jun 23 21:11:03 2015 UTC,"yes it works on my device, and on my most of my users phones as well!"
androiddev,3au88h,beermad,2,Tue Jun 23 21:29:30 2015 UTC,Strange. Maybe find out the precise setup (device and Android version) and try to set up a VM. then if you can replicate the problem you should be able to get an understanding through the error log.
androiddev,3aup1m,pop-corn,1 point,Tue Jun 23 17:34:54 2015 UTC,"Android apps can be, and usually are, built in Java.  Design-wise, an Android app should look like an Android app (currently this means Material design), an iApp should look like an iApp and a mobile website would look like an website, perhaps modified to fit on a device."
androiddev,3aup1m,NMAndroid,1 point,Tue Jun 23 18:21:13 2015 UTC,"Both the technique and structure of a html based website and a java based android app are different.  Phonegap does not make real apps in java. It serves html5 web pages and gives those web pages access to some of the device capabilities such as camera, storage etc. Basically 'wraps' up web technologies (html/css/js) into a standalone package that can be distributed.  Phonegap is generally avoided for app development, as it results in awkward experiences for the user and slower performance when compared to java based android apps."
androiddev,3av7j4,Drsmall,5,Tue Jun 23 19:42:58 2015 UTC,IMHO: 1) Yes 2) N/A 3) Ban
androiddev,3av7j4,cygery,2,Tue Jun 23 19:54:22 2015 UTC,"Morally it is certainly a grey area. However it is most certainly against Google's developer terms of service   ""Developers must not attempt to change the placement of any Product in the Store, or manipulate any product ratings or reviews by unauthorized means such as fraudulent installs, paid or fake reviews or ratings, or by offering incentives to rate products."" source  I haven't and won't ever try it so no comment there.  As for negative side effects it is possible Google could ban your developer account. No idea how they would police that but as it is against their terms they might. Also as a user if I see a high quantity of reviews that all follow the same pattern I typically guess they are paid reviews and don't download the app as I consider all its ratings highly suspect."
androiddev,3av7j4,j_m_studios,2,Tue Jun 23 19:53:42 2015 UTC,Shady services like this are for shitty apps. if your app is good investing the money into some marketing will (IMHO) yield better results.
androiddev,3asnre,ASKnASK,20,Tue Jun 23 04:46:37 2015 UTC,"I'll continue to comment on this as I look at it.   A. You are missing all the coding guidelines. No _ should be in variable names at all. Camel case per the contributors guidelines.   B. Annotations go above the declaration, not the same line with the exception of a few such as @NonNull.   C. AsyncTask is bad. Learn retrofit or Ion for network calls.   D. Your payment method strings should be at least static variables, so the class can use the easily. This aliviates the case matching.   Honestly, I just read half of your first class. It needs a ton of work.   Edit 1:  E: you don't need a onTextChange listener if you only use one method. Just use an adapter.   F: keep your lifecycle method in order at the top of the file. Otherwise, you and everyone else who ever touches the product can most likely miss something.   G: single character variable names are not accepted for anything other than temporarily looping variables.   I'm kinda over it at this point. I'll help you as you needed but man, this is rough to look at. Don't even worry about dagger or anything else, particularly rx. You have way more fundamental problems rather than to worry about advance reflective libs"
androiddev,3asnre,warl0ck08,8,Tue Jun 23 05:27:35 2015 UTC,"Many of your points talk about OP's coding ""style"". Don't get me wrong your efforts and comments are obviously valuable to anyone new starting off but you should be more critical of the code not the style. Coding styles adapt. I personally despise the Hungarian notation and have no problems prefixing private vars with _.   I write my annotations on Independent lines as you suggest. But I've seen mature codebases maintained by super smart people use annotations in the same line.   Besides code styles can be ""fixed"" with a single swoop by intelligent IDEs. Bad code can't."
androiddev,3asnre,moriartsy,3,Tue Jun 23 14:43:39 2015 UTC,"I disagree. Good coding style leads to good code organization skill, which is very important. The code structure of your app is very very important unless you don't want your code to be scalable."
androiddev,3asnre,Saketme,2,Wed Jun 24 08:21:46 2015 UTC,Bad habits early on lead to bad code.
androiddev,3asnre,CuriousCursor,1 point,Wed Jun 24 03:54:28 2015 UTC,bad habits   i don't think coding styles can dictate the definition of bad habits.
androiddev,3asnre,moriartsy,1 point,Wed Jun 24 05:12:36 2015 UTC,"Besides point A and F, all of the others are either bad patterns or demonstrates lack of knowledge in OP's code.  I dunno why you're even bothering to defend mediocre-looking code."
androiddev,3asnre,CuriousCursor,3,Wed Jun 24 05:23:24 2015 UTC,I'm actually not defending the code at all.   I'm attacking the notion that a particular style = good code.
androiddev,3asnre,moriartsy,2,Wed Jun 24 05:32:25 2015 UTC,Thanks a lot for your input. I'll make sure I don't repeat any of these mistakes. As for AsyncTask.. I'll look into retrofit today and see if I can implement it here easily.
androiddev,3asnre,warl0ck08,3,Tue Jun 23 05:59:07 2015 UTC,"Retrofit is super easy. Any help you need, feel free to let me know"
androiddev,3asnre,piratemurray,4,Tue Jun 23 06:03:05 2015 UTC,"Or better yet, post it publicly so we can all learn."
androiddev,3asnre,warl0ck08,1 point,Tue Jun 23 07:38:47 2015 UTC,I just replied to OPs PM. I'm going to post a JSON one publicly.
androiddev,3asnre,amusice,1 point,Tue Jun 23 16:20:03 2015 UTC,"Here is a presentation I gave a little while ago, this actually has RetroFit, Ion, OkHttp, AndroidAsync, and AsyncTasks in it.   http://slides.com/austinmusice/androidnetworking#/  Unfortunately, the YouTube stream from that night missed my presentation because someone closed it by accident. However, it should show you RetroFit/Ion, OkHttp/AndroidAsync, and how bad AsyncTask is in comparison. The lack of boilerplate serialization code alone is worth it"
androiddev,3asnre,yeahokwhynot,1 point,Tue Jun 23 22:34:04 2015 UTC,"Oh if you have time, I can inbox you one of my webservice codes and you can tell me how it would be written in retrofit."
androiddev,3asnre,davejohncole,2,Tue Jun 23 06:06:32 2015 UTC,"B. Annotations go above the declaration, not the same line with the exception of a few such as @NonNull.   I re-bind the save keystroke (ctrl+s or command+s) to a macro that organizes imports, reformats the whole file, and then saves. This ensures consistent spacing and placement of keywords (and annotations) which leads to cleaner commits and diffs.   C. AsyncTask is bad. Learn retrofit or Ion for network calls.   AsyncTask is fine, it just requires you to figure out how the results will be delivered to the UI. Retrofit has the same requirement. I'm sure ion does as well."
androiddev,3asnre,dccorona,3,Tue Jun 23 12:08:37 2015 UTC,What is wrong with AsyncTask? So long as you do not create a non-static nested class you should be fine.
androiddev,3asnre,Zhuinden,5,Tue Jun 23 08:17:12 2015 UTC,"All AsyncTasks run on a global, Android-managed thread pool (unless they've changed that since I last used Android). For that reason, you're seriously limited both in terms of how many you personally can spin up at once without them waiting, but also if another app on the system is abusing them you can also end up waiting."
androiddev,3asnre,Zhuinden,3,Tue Jun 23 11:34:00 2015 UTC,(also worth noting that AsyncTasks by default don't run parallel)
androiddev,3asnre,davejohncole,4,Tue Jun 23 12:41:55 2015 UTC,"How are you going to use onPostExecute() to call back to your calling Activity and ""update the UI"" as it was designed, after rotating the screen during the execution of your AsyncTask?"
androiddev,3asnre,Zhuinden,3,Tue Jun 23 08:41:57 2015 UTC,Run your AsyncTask from your presenter.
androiddev,3asnre,davejohncole,4,Tue Jun 23 08:44:27 2015 UTC,"well for that you first need a Presenter that survives a configuration change, but you're right :D"
androiddev,3asnre,Zhuinden,2,Tue Jun 23 08:52:20 2015 UTC,The whole activity disappears from beneath you on screen rotation is a bit annoying. The  framework should give you a stable activity and then have the life cycle deal with configuration changes.
androiddev,3asnre,davejohncole,2,Tue Jun 23 09:00:18 2015 UTC,"yeah, you either use the custom Application or you bind a headless retained fragment (which didn't even exist before API 11). I guess you could have bound your Presenter to be within the onRetainNonConfigurationInstance and retained across the config change, but that's more a hack if anything."
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 09:12:00 2015 UTC,Got it in one.
androiddev,3asnre,davejohncole,1 point,Tue Jun 23 09:31:59 2015 UTC,which? Just curious at this point
androiddev,3asnre,yeahokwhynot,2,Tue Jun 23 09:43:53 2015 UTC,Keep a reference to the presenter in a headless fragment that stays around with the device configuration changes.
androiddev,3asnre,pakoito,1 point,Thu Jun 25 05:22:45 2015 UTC,"It's useful to treat the activity as a view with a lot of additional callbacks, IMO. The real work should be done outside the activity, as it should be done outside of a view."
androiddev,3asnre,s73v3r,1 point,Tue Jun 23 12:09:31 2015 UTC,http://media.giphy.com/media/oOX5qIDkzDjeo/giphy.gif
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 15:07:13 2015 UTC,"That explains why you shouldn't do that. However, it doesn't say why you shouldn't use AsyncTask at all."
androiddev,3asnre,donrhummy,2,Tue Jun 23 17:57:16 2015 UTC,"Apart from being a broken concept due to context death, it also doesn't work the same way between 2.3 and 3.0 - if I recall right, it doesn't run two AsyncTasks at the same time in parallel, only sequentially."
androiddev,3asnre,warl0ck08,1 point,Tue Jun 23 19:00:25 2015 UTC,maybe it would be more helpful if you wrote some Android code that does it the right way so he could see the difference?
androiddev,3asnre,donrhummy,2,Tue Jun 23 14:32:03 2015 UTC,Yes. Just commented below and answered ops pm. I'm going to post code here.
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 16:20:52 2015 UTC,GoodGuy Warl0ck08!
androiddev,3asnre,jackhexen,4,Tue Jun 23 16:35:53 2015 UTC,"The first thing I'd note,     register_bt.setOnClickListener(new View.OnClickListener() {   Then you have 63 lines of code which is a huge if-if-if-else-else-else.  So here's some things you can do to improve:  ~ First thing to note, the if-if-if-else-else-else thing can be cut down using Exceptions, check out primarily Advantage #1 on this particular page. Of course, it doesn't apply that well here, but it really is worth reading! Mostly so you won't have a random empty else hanging around.  ~ Second, I think your Activity should only have the responsibilities of a View within the ""Clean Architecture""; and whatever you can, you should rip out of your Activity into the Presenter.  ~ Third, don't use monolithic OnClickListener. You have ButterKnife for a reason. Use @OnClick(R.id.button) annotation on a public void onClickButton() method. The secret to refactoring onClickListeners is that each button has its own method, and the method might check for validation, but delegates the logic to another class (don't have 63 line long onClickListeners!).  ~ Fourth, don't use AsyncTask, it is inherently broken. If you DO want to use AsyncTask, you should at least use an event bus (Otto) to tell the activity that the task is complete, because otherwise you'll have an invalid context on rotation - or just don't use it altogether and just use Retrofit instead.  If you look at this method of yours, that's exactly what I mentioned in this post on just how much easier it can become (although this is @GET and you'd need to provide a GsonConverter(new Gson) to the rest adapter builder and create a Java mapped class of the JSON structure to receive the result; unless you want to keep JsonObject for some reason - that is fine too).  ~ Fifth, general rule: rip apart sequential logic (just look at your onClickListeners) into methods, then rip methods into classes, then inject those classes into your Activity Presenter as dependencies (for which I use Dagger2).  EDIT: ~ Sixth: just one more thing... don't use variable names like m, b, d, v - type them out (or just use Android Studio which auto-fills it for you), because it makes it much harder to read later."
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 08:32:47 2015 UTC,"A little note on event buses.  Buses do not deliver well in case of ""process restart"" event. In fact, they do not deliver at all. :D So, we have only two reliable approaches:   Cancel all background tasks during onPause/onDestroy/onDetachedFromWindow  Use MVP with life cycle split out of View (mortar, nucleus libs)."
androiddev,3asnre,jackhexen,1 point,Tue Jun 23 11:24:35 2015 UTC,"Technically, the only way you can endure a ""process restart"" event is if you keep track of the tasks that you need to execute, and also keep track of whether they've been completed - and if not, then restart them. Android Priority Jobqueue claims to do that, but I haven't really figured out its persist() parameter, so I'll have to keep track of it on my own instead - I haven't coded this part yet. But I will when I'll need it, hah."
androiddev,3asnre,yeahokwhynot,0,Tue Jun 23 11:59:23 2015 UTC,"Android Priority Jobqueue claims to do that   Looks too verbose and not reliable to me (they also recommend buses). While they are trying to be super-reliable, as they persist tasks on the disk. This is good for sending data but not good to when it comes to delivery data to user interface. This library is just for solving another problem."
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 12:12:50 2015 UTC,"Otto deals with this through its @Produce annotation. When a ""consumer"" is registered to the bus, Otto looks at its subscriptions and at the producers that are already registered and then (synchronously) delivers produced events to the subscriber."
androiddev,3asnre,jackhexen,1 point,Tue Jun 23 12:04:47 2015 UTC,"Yeah, the more I think about it, either a Dagger2 module should provide the data with @Inject, or Otto should with @Produce. I have been thinking about this a while... I'm gonna need POJO presenters that are registered on the Bus before the View fragment is created. /thinkingloudly"
androiddev,3asnre,yeahokwhynot,0,Tue Jun 23 13:14:19 2015 UTC,How does this help to restart a background task in case of a process restart?
androiddev,3asnre,jackhexen,2,Tue Jun 23 12:21:36 2015 UTC,The AsyncTask can post the result as an event that is subscribed to by a singleton. That singleton can then produce that event when the activity is recreated.
androiddev,3asnre,yeahokwhynot,1 point,Thu Jun 25 01:09:48 2015 UTC,"If a process restart will happen during the time of background task execution, the task will be lost.  If a process restart will happen during the time when event is in the singleton but activity is not yet created, the event will be lost."
androiddev,3asnre,jackhexen,1 point,Thu Jun 25 10:29:15 2015 UTC,"If a process restart will happen during the time when event is in the singleton but activity is not yet created, the event will be lost.   That's what the @Produce annotation is for. The singleton can be something like:  class Foo {   private SomeEvent mLastSomeEvent;   @Subscribe   public void onEvent(SomeEvent event) {     mLastSomeEvent = event;   }   @Produce   public SomeEvent produceLastSomeEvent() {     return mLastSomeEvent;   } }   injected from the application scope:  class MainApplication extends Application {   ObjectGraph mObjectGraph;    public void onCreate() {     super.onCreate();     mObjectGraph = ObjectGraph.create(new Module());   }    public ObjectGraph getObjectGraph() {     return mObjectGraph;   }    @Module(injects = {MainActivity.class})   class Module {     @Provides     @Singleton     Foo provideFoo() { return new Foo(); }     @Provides     @Singleton     Bus provideBus() { return new Bus(); }   } }  class MainActivity {   @Inject   Foo mFoo;    @Inject   Bus mBus;    @Subscribe   public void onSomeEvent(SomeEvent event) {     // ...   }    public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);      ((MainApplication) getApplication()).getObjectGraph().inject(this);      mBus.register(this);   }   public void onDestroy() {     super.onDestroy();     mBus.unregister(this);   } }   In this example the activity will receive the @Produced event at mBus.register(this) (if mLastSomeEvent is not null)."
androiddev,3asnre,yeahokwhynot,1 point,Fri Jun 26 01:14:41 2015 UTC,"No, it will not receive anything because the process has been restarted. A process restart is not a configuration change. The entire JVM gets reset. All background tasks, all variables, all buses, all network connections - everything disappears. You will not even get a network timeout exception. And after doing all this dirty shit, Android creates your activity again, giving it a bundle with saved state. So, the activity will obviously not receive any messages from the bus. Because now it is another bus that has been created with the dagger again."
androiddev,3asnre,jackhexen,1 point,Fri Jun 26 01:28:45 2015 UTC,"I see what you mean now. Well, I don't think losing data from an AsyncTask is so bad if the process is actually killed by the system, so I wouldn't count it as a strike against AsyncTask in particular. Anything you build would need to persist data in some way."
androiddev,3asnre,Zhuinden,1 point,Tue Jun 30 01:32:58 2015 UTC,"The problem is that your view is waiting for a background task to complete. And it will be in the ""always waiting"" state forever. So, to avoid this bug we need to unsubscribe and stop all background tasks on each config change -OR- use MVP pattern with automatic background tasks restart. It is stranger, but MVP allows to write less code, prevents memory leaks and makes user experience seamless."
androiddev,3asnre,jackhexen,1 point,Tue Jun 30 01:38:14 2015 UTC,"I actually am not sure how Nucleus helps against that, either. It's a nice looking MVP library though, and definitely much less confusing than Mortar.... Mortar feels like it was created in another era, and got stuck in those times."
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 13:16:17 2015 UTC,see registerRestartable and an example
androiddev,3asnre,jackhexen,1 point,Tue Jun 23 13:22:17 2015 UTC,"I can't see any place where it serializes the subscriber factories to disk so that it'd reload (and restart) them on process force stop. Then again, I'm looking on Github and I might just be blind. Are you sure it restarts them even after force stop?  (also, gah, Rx! my nemesis! only the RxPresenter has that method)"
androiddev,3asnre,beall49,1 point,Tue Jun 23 13:53:24 2015 UTC,"Here is the serialization code: https://github.com/konmik/nucleus/blob/master/nucleus/src/main/java/nucleus/presenter/RxPresenter.java#L75 it looks too simple to be true. :D  If you need to save request arguments - save them during presenter's onSave.  Yes, I'm absolutely sure: https://github.com/konmik/nucleus/blob/master/nucleus/src/main/java/nucleus/presenter/RxPresenter.java#L108 It will restart requested restartable queries right during next registerRestartable that you call during presenter's onCreate."
androiddev,3asnre,SatNav,3,Tue Jun 23 14:00:32 2015 UTC,ITT I learned: I suck don't know shit.
androiddev,3asnre,Zhuinden,3,Tue Jun 23 15:53:49 2015 UTC,"Congratulations, you have just leveled up"
androiddev,3asnre,lordoftherings911,3,Tue Jun 23 16:23:23 2015 UTC,That is actually the first step to fixing a problem you previously had not even known you had!
androiddev,3asnre,Zhuinden,4,Tue Jun 23 16:48:04 2015 UTC,Every clean coding thread in this sub has half the people saying do one thing and the other half saying don't do that and do something else.
androiddev,3asnre,lordoftherings911,4,Tue Jun 23 10:50:39 2015 UTC,"The general consensus is that ""The activity shouldn't contain everything, and especially no network calls and database requests"" :p"
androiddev,3asnre,SatNav,0,Tue Jun 23 14:46:56 2015 UTC,especially no network calls and database requests   Oh..  I just have to..  Redo everything I've ever done.
androiddev,3asnre,s73v3r,1 point,Tue Jun 23 15:42:39 2015 UTC,"Heh. If you have an app with network calls on the UI thread, it won't actually compile on newer versions of the SDK. That change was, I guess technically a good thing, but a bit annoying when you just want to knock up something simple, quickly.  But then when has it ever been possible to do something simple and quick on Android? ""Oh, you want a blank app to get started on? Here are like 50 source files to get you going!"""
androiddev,3asnre,Zhuinden,3,Tue Jun 23 16:15:21 2015 UTC,Making them in the Activity doesn't mean they're on the UI thread.
androiddev,3asnre,jackhexen,1 point,Tue Jun 23 18:01:13 2015 UTC,I think the NetworkOnMainThreadException is actually a wonderful thing. A bunch of coders on Stack Overflow who ask about that exception would be making network calls on the main thread if it weren't for the strict policy! It doesn't take THAT long to execute stuff on another thread.
androiddev,3asnre,Zhuinden,1 point,Tue Jun 23 16:53:16 2015 UTC,Just try to keep your classes smaller than 200 lines of code (excluding comments). I hardly can imagine a class that must exceed 400 lines. Such classes are architectural mistakes in 99% cases.   Small classes are usually much simpler and more reliable than a bigger one. There is a very good article about this: The Kiss Principle
androiddev,3asnre,jackhexen,1 point,Tue Jun 23 16:34:40 2015 UTC,"Well technically based on the clean code guide,  the idea is that those are done by the interactors, and interactors are called by the presenter, and the presenter is called by the activity (which is the view)."
androiddev,3asnre,CrysisAverted,1 point,Tue Jun 23 15:45:40 2015 UTC,This is very good. We can learn different approaches. ;)
androiddev,3asnre,CrysisAverted,1 point,Tue Jun 23 11:28:23 2015 UTC,Context con = RegisterActivity.this;  You then pass this in to your asynctask. You then pass in the object reference to Webservices(con). You'll leak your activity context this way and introduce a memory leak.
androiddev,3asnre,Zhuinden,1 point,Wed Jun 24 03:17:24 2015 UTC,How would you suggest I solve this? The Webservices requires a context for some services (I access shared preferences in there which I believe require a context).
androiddev,3aun48,changingminds,1 point,Tue Jun 23 17:21:27 2015 UTC,Are you going to have the user enter their mail server info? Because if you're not that won't work well. I tried this with a Gmail account and it got flagged as hacked email as soon as I launched (email sent from multiple geo locations).  I ended up using Amazon SES service. It's free or nearly free for low volume.  There is a few similar services as well such as SendGrid and others.   Ley me know if you have questions.
androiddev,3aun48,Pyro979,0,Wed Jun 24 02:15:35 2015 UTC,http://www.ecloudic.com/2015/01/3-ways-to-lose-your-weight-100-percent.html
androiddev,3atz9e,menegatti,1 point,Tue Jun 23 14:20:53 2015 UTC,What worked for me in Up Navigation as I intended was this.  It assumes A is defined as B's parent in the manifest.
androiddev,3atz9e,Zhuinden,1 point,Tue Jun 23 14:29:50 2015 UTC,Thanks! I came across that right after I posted this question and it does work :D  However I'm still wondering why the back stack builder fails.
androiddev,3atz9e,Zhuinden,1 point,Tue Jun 23 14:34:02 2015 UTC,"I have no idea. Doing it manually is a bit tacky, but considering it works, I'm not complaining. I came up with it because I redefined the activity transition animation, and it totally broke when the activity in the back was recreated even though it existed, heh."
androiddev,3atz9e,iv_maradox,1 point,Tue Jun 23 14:44:03 2015 UTC,"shouldUpRecreateTask returns false, because the affinity of activity B doesn't match the affinity of the task (because activity C has been started via intent-filter without FLAG_ACTIVITY_NEW_TASK I assume).   You can try to start activity B with the flag FLAG_ACTIVITY_NEW_TASK, which should create or append to a task with the correct affinity."
androiddev,3at3ni,nobler55,8,Tue Jun 23 08:05:53 2015 UTC,The Google I/O schedule app is a good place to start for a lot of things: https://github.com/google/iosched  Specifically:   The database and content provider: https://github.com/google/iosched/tree/master/android/src/main/java/com/google/samples/apps/iosched/provider The sync adapter: https://github.com/google/iosched/tree/master/android/src/main/java/com/google/samples/apps/iosched/sync   There is also an explanation of what their sync process for the app is at: https://github.com/google/iosched/blob/master/doc/SYNC.md  If nothing else the iosched app is a good way to see one of the ways a larger app can be put together.  small update: there was also a Google blogpost about the iosched 2014 sync process at http://android-developers.blogspot.com.au/2014/09/conference-data-sync-gcm-google-io.html
androiddev,3at3ni,GreatJusticeForSGU,2,Tue Jun 23 09:42:45 2015 UTC,"I've never used content providers but 2500+ lines of code for a small offline base setup is just wow, is it really worth it? Most third-party sql/nosql libraries are easier to setup and use, do I miss something?"
androiddev,3at3ni,entropio,2,Tue Jun 23 11:58:02 2015 UTC,It's worth it to me when I start having the data updates happening at odd times in the background and I want the UI to change in response ie list backed by cursor adapter from a content provider uri.  There are some interesting side effects as well like when you start passing just the uris to fragments and they can then just organise retrieving the required data.  Also I think content providers help by  forcing me to keep a clear separation between data and presentation.
androiddev,3at3ni,GreatJusticeForSGU,1 point,Tue Jun 23 12:50:45 2015 UTC,"I don't quite understand what you mean by ""passing just the uris to fragments"". Could you explain what you mean by this please? and maybe a tiny example?"
androiddev,3at3ni,GreatJusticeForSGU,3,Tue Jun 23 19:30:28 2015 UTC,"Ok this is going to be a long example but I think it shows the basics of what I was talking about above.  Yes it is a lot of code to begin with but as I mentioned above I did get a benefit out of it.  Say I am writing a rugby union scheduling app and I want to display a list of rugby games.  I define a content provider URI for the games:   content://rugby.provider.RugbyProvider/games   and a mime type of:   vnd.android.cursor.dir/vnd.junta.rugby.game   Which really is just a fancy way of saying to the content provider ""when you see this URI execute a SELECT * FROM GAMES query and return the results"".  Ok now I want to display the game data returned from this content provider URI.    I create a GameListActivity that contains a single GameListFragment:  public class GameListActivity extends Activity implements GameListFragment.OnGameSelectedListener {    ...   GameListFragment gameListFragment;    @Override   protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.game_list_activity);     gameListFragment = (GameListFragment)getSupportFragmentManager().findFragmentById(R.id.game_list);   }   ... }   As well as a GameListFragment that uses a LoaderManager to turn the content provider URI into the SQL result set:  public class GameListFragment extends Fragment implements LoaderManager.LoaderCallbacks<Cursor> {   ...   @Override   public void onActivityCreated(Bundle savedInstanceState) {     super.onActivityCreated(savedInstanceState);     getLoaderManager().initLoader(0, null, this);   }   ...   @Override   public Loader<Cursor> onCreateLoader(int id, Bundle bundle) {     // Where Games.CONTENT_URI = ""content://rugby.provider.RugbyProvider/games""     return new CursorLoader(getActivity(), Games.CONTENT_URI, PROJECTION, null, null, Games.GAME_ID + "" ASC"");   }   ... }   So any time in my application I want to display a list of games I would do the following:  Intent intent = new Intent(this, GameListActivity.class); startActivity(intent);   Now say I want to reuse this GameListActivity to display different lists of games, for example the list of games for a specific team.  I create a new content provider URI for team games:  content://rugby.provider.RugbyProvider/teams/#/games (where # is the team id in the database)  which will return the same game mime type as above:  vnd.android.cursor.dir/vnd.junta.rugby.game  When the content provider sees this URI it will now execute a ""return all the games for this specific team only"".  So how do we use this?  When I want the app wants to display the team games, I will now pass a URI along in the Intent when I start GameListActivity via Intent.setData:  int teamId = 123;  Intent intent = new Intent(this, GameListActivity.class); // Just builds the above URI: content://rugby.provider.RugbyProvider/teams/123/games Uri uri = ContentUris.withAppendedId(Teams.CONTENT_URI, teamId).buildUpon().appendPath(""games"").build();   intent.setData(uri); startActivity(intent);   To support this we now need just need to change the above GameListFragment to look in the Intent for the URI:  public class GameListFragment extends Fragment implements LoaderManager.LoaderCallbacks<Cursor> {    private Uri gamesUri;    @Override   public void onActivityCreated(Bundle savedInstanceState) {     super.onActivityCreated(savedInstanceState);     gamesUri = getActivity().getIntent().getData();     if (gamesUri == null) {       // Use the default ""content://rugby.provider.RugbyProvider/games"" instead       gamesUri = Games.CONTENT_URI;     }     getLoaderManager().initLoader(0, null, this);   }   ...   @Override   public Loader<Cursor> onCreateLoader(int id, Bundle bundle) {     return new CursorLoader(getActivity(), gamesUri, PROJECTION, null, null, Games.GAME_ID + "" ASC"");   } }"
androiddev,3at3ni,guillaumeyp,1 point,Wed Jun 24 00:56:28 2015 UTC,This is wonderful! Thanks for taking the time!
androiddev,3atqq7,LoonySpoony,3,Tue Jun 23 13:04:36 2015 UTC,Clippy. Nuf said.
androiddev,3atqq7,justec1,1 point,Tue Jun 23 14:31:18 2015 UTC,[Office Assistant](Clippy)](https://en.wikipedia.org/wiki/Office%20Assistant](Clippy\)):       See https://en.wikipedia.org/w/api.php for API usage     Relevant: List of User Friendly characters | Office Assistant   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me
androiddev,3atqq7,autowikibot,2,Tue Jun 23 14:31:53 2015 UTC,"Trello uses their mascot, Taco the Husky, quite well. It fits their brand and - more importantly - is not distracting."
androiddev,3api7v,nuuneoi,12,Mon Jun 22 13:19:20 2015 UTC,"Impressive amount of effort went into this. I like the writing tone and the frequent ""add this, see result"". Thank you!"
androiddev,3api7v,sellers04,8,Mon Jun 22 16:21:54 2015 UTC,"This is so frustrating that there are a ton of bugs that I'll have to make workarounds for, then constantly keep an ear out for them to be fixed so that I can undo my workaround and implement the correct way.. And had I run into these bugs myself I would have potentially spent hours trying to figure them out, not knowing that there was nothing to figure out!  Thanks for a great article and saving me hours of time that I would inevitably have spent trying to figure out these bugs."
androiddev,3api7v,devDoron,7,Tue Jun 23 00:35:55 2015 UTC,Very detailed! Thanks
androiddev,3api7v,c0nnector,2,Mon Jun 22 15:09:15 2015 UTC,saved thanks
androiddev,3api7v,perez89,2,Tue Jun 23 01:07:22 2015 UTC,"How did they manage to release that with all that bugs. They seem like kind of bugs that should be spotted instantly while testing. Also that layout in a layout wrapped in another layout looks ugly.  Great effort though, It will be very helpful. I love mini-videos after each step."
androiddev,3api7v,drabred,2,Tue Jun 23 07:10:27 2015 UTC,"Control-f ""bug"". 10 results, yikes. I'll give Google some more time to work out these bugs (as always seems to be the case with new, shiny google software products) before using it myself."
androiddev,3api7v,KolakCC,3,Tue Jun 23 12:57:48 2015 UTC,Is the support library FAB fixed yet? Looked like square shit on my 4.1 Jellybean. Forced to use third party one.
androiddev,3api7v,shvelo,2,Mon Jun 22 23:01:48 2015 UTC,"They said it already been fixed internally so we should be getting that in the next revision. As of the moment just set the attribute app:borderWidth=""0dp"" which should fix the bug."
androiddev,3api7v,bbqburner,1 point,Tue Jun 23 13:16:46 2015 UTC,"I was looking for something that would help me dive into the Material Design side. And this was just perfect. The way the whole Post has been written - Narrative and  a nice flow , makes it a must read. Thanks for the share."
androiddev,3api7v,boonexus,1 point,Mon Jun 22 19:02:29 2015 UTC,"Thanks for this, will definitely look more into this soon."
androiddev,3api7v,itsalllies,1 point,Mon Jun 22 23:01:17 2015 UTC,"Very nice, add another bug that I havent figured out. The NavigationView takes 100ms to load (on first open) and open in my project, very frustrating. Gotta spend time debugging today."
androiddev,3api7v,caman9119,1 point,Tue Jun 23 14:35:43 2015 UTC,"I'd like to see better docs for the library. Magical values are everywhere. ""This is how we to do it!"" even on the official website."
androiddev,3api7v,jackhexen,1 point,Wed Jun 24 08:43:06 2015 UTC,"Well written, thank you so much! I will need this. Upvoted and saved.  Now for a small rant: this library sucks. Noting works with each other, nested views everywhere and magical strings to make it all work. I feel like this is amongst the poorest written Google libraries out there... And I have not started on all of the bugs. Am I the only one here who thinks this lib is written kind of halv assed?"
androiddev,3atnyk,OogieFrenchieBoogie,2,Tue Jun 23 12:37:14 2015 UTC,"As always, material design is intended to be a guideline. It's cool if you could follow it, but that doesn't meant you are restricted heavily to the design spec. Alignments, use of spaces, elevation, focus, all have far more ""material effect"" instead of a small difference in padding. Also, the 24dp padding is actually applied for tablets.  Secondly, the 16dp is nice since material design spec prefers content to be always having a minimum 16dp margin from the nearest screen border. If you put 32dp paddingStart in the toolbar,  I can only assume the toolbar will not have a drawer toggle since 32dp is actually a lot of space for it to look right."
androiddev,3atnyk,bbqburner,1 point,Tue Jun 23 13:29:55 2015 UTC,"I have seen apps with 16dp left padding for the toolbar navigation icon, but also apps with 0dp left padding because of the navigation icon start immediatly at 0 left position (for example a DrawerLayout menu icon). This is an example"
androiddev,3au1i2,papercushion,1 point,Tue Jun 23 14:39:29 2015 UTC,"The app I work on now has a ""video feed"" on the main screen.  You should definitely be using a RecyclerView, if you follow the api and properly recycle views, everything should be fine."
androiddev,3au1i2,lolkittens,1 point,Wed Jun 24 22:23:22 2015 UTC,"I have no need to change the ListView implementation to RecyclerView because:   It would take significant time to migrate and currently I do not need the flexibility offered by RecyclerView. My views are already being recycled correctly. I already have a very dynamic custom holder pattern that works well. RecyclerView's benefits (animations / custom layoutmanager etc) are not applicable to my use case, yet.    Going forward, I will migrate to RecylerView to keep aligned with the current standard, but listview isn't going anywhere soon.   The issue I've encountered is due to TextureView's surface being returned asynchronously and calling back to the wrong item as the view gets recycled. Using a RecyclerView implementation would have the very same issue.   But just as an update, I've figured out the logic for correctly recycling a textureview when there's multiple videos and my feed now has auto play / pause videos.   Cheers for the reply."
androiddev,3au1i2,lolkittens,1 point,Thu Jun 25 10:45:32 2015 UTC,"I don't see how this problem would exist if the views are being properly recycled.  When recycle is called on an item from the list, the textureview for example drops all of it's listeners and clears out it's state+resource. It's literally 3 lines of code in my app and none of this happens.  Sorry I couldn't be more help."
androiddev,3au1i2,rexes13,1 point,Thu Jun 25 17:43:04 2015 UTC,"Instead of ListView you should try to use RecyclerView as a first step.  The whole thing with videos autoplaying is quite tricky. One solution is to use WebViews with HTML5 or just create your very own VideoPlayer, so you can manage it according to your needs.   In general, messing with Videos in Android is a quite interesting part and I think that Google hasn't given enough attention to it!"
androiddev,3au1i2,rexes13,1 point,Tue Jun 23 14:58:09 2015 UTC,"Why Recylerview over listview? I'm recycling views in both cases, so it doesn't alleviate the issue? There isn't any major advantage of switching to recyclerview, in my use case anyway. I've already wrote a custom listview to notify me which views are visible and based on that I can auto play / pause.   I think you're missing the main issue I'm having. The listview / recyclerview is fine, and so is the media player. Webviews / Android's VideoPlayer are not customisable, I need access to low level caching and also media format flexibility. Correctly recycling textureviews / surfaceviews is where I'm struggling. I haven't dealt with either views before so I'm curious how other people approached this.   Cheers,"
androiddev,3aq6qi,Ziem,4,Mon Jun 22 16:44:14 2015 UTC,"I've implemented retrofit with a cache so I don't need to do this as its automatically checking headers (via okhttp) and so my code just looks like its making a network request but really gets the results from the cache.  However, its informative in the sense of understanding those Rx operators. Thanks!"
androiddev,3aq6qi,bart007345,2,Mon Jun 22 18:23:03 2015 UTC,"can you please give out a code snippet of how you are setting up the cache? I can detect if the user is online but whenever I set the cache-control to ""public, maxAge = some number"", the cache-control is set to ""none"" in the logs. When the user is offline, it displays correctly: ""public, only-if-cached, max-stale= some number"" but nothing is being cached in the first place.  I'm using Rx btw but prefer my cache to be on the network layer just like you"
androiddev,3aq6qi,atioxx,1 point,Tue Jun 23 13:12:40 2015 UTC,"Hi,  so here's how I create the cache:  Cache cache = DiskUtils.createCache(context, DiskUtils.MEGA_BYTE * 10, DiskUtils.MEGA_BYTE * 2);   You'll have to google creating a space on the device to hold the cache, its on the developer site.  Then just pass the cache to okhttp and then pass that to retrofit:  RestAdapter.Builder builder = new RestAdapter.Builder();     builder.setEndpoint(baseUrl);     builder.setLogLevel(logLevel);      OkHttpClient okHttpClient = new OkHttpClient();     okHttpClient.networkInterceptors().add(new StethoInterceptor());     okHttpClient.setReadTimeout(7, SECONDS);     okHttpClient.setConnectTimeout(7, SECONDS);      if (cache != null) {         okHttpClient.setCache(cache);     }   HTH"
androiddev,3aq6qi,bart007345,1 point,Tue Jun 23 13:37:12 2015 UTC,"can you also provide the interceptor where you add your headers?  This is how I did it I commented out the interceptor setter.  Yours is different in some way, I will need to test it."
androiddev,3aq6qi,atioxx,1 point,Tue Jun 23 13:51:47 2015 UTC,"I don't set any cache headers on the request, thats the job of the server, to tell me how long the data is good for. OkHttp then respects that."
androiddev,3aq6qi,bart007345,1 point,Tue Jun 23 14:02:55 2015 UTC,"I managed to make it work, thanks to you. Turns out I was using the request interceptor for retrofit to set the cache-control instead of the response. My workaround was to check if a connection was present then store the response for 1 minute and for the request, I was checking that if there was no connection, I would stale the old response and display an internet connection error message.   I will post the link to the changes as soon as I commit them."
androiddev,3aq6qi,atioxx,1 point,Fri Jun 26 00:13:31 2015 UTC,changes ... do you have any comments?
androiddev,3aq6qi,atioxx,0,Fri Jun 26 00:40:15 2015 UTC,"Have you managed to implement a reliable ""offline mode""? I find that the cache expires with the Cache-Control header, even if the user remains offline the whole time."
androiddev,3aq6qi,jimeux,1 point,Tue Jun 23 08:08:17 2015 UTC,"I've not needed that but if you want a ""backup"" copy you may have to go the way the article suggests."
androiddev,3aq6qi,bart007345,2,Tue Jun 23 09:36:01 2015 UTC,"Awesome article, and I learned you can highlight a range in a github file."
androiddev,3aq6qi,quinnjn,1 point,Tue Jun 23 00:00:42 2015 UTC,"Wave of the future dude,  Interactive eroti reactive programming :).  It's like ajax all over again."
androiddev,3aq9cp,SMcArthur,5,Mon Jun 22 17:03:24 2015 UTC,"Filing the registration for your trademark usually costs about $1,000   That's a lot of money for indie developers to take a risk on, most indie developers are just hoping to make a bit of money from their app, if they pay for a trademark on their app name how are they going to know in two months time the money they're making from their app will dry up?   I'm guessing it'd be a similar fee for UK citizens?"
androiddev,3aq9cp,markyosullivan,3,Tue Jun 23 10:25:34 2015 UTC,"I am sympathetic that it's not an insignificant amount of money to many bootstrapping developers.  You could always try to register a trademark it on your own without an attorney to save money. I just don't recommend doing it that way since there are a thousand potential errors to make when registering your trademark and you may pay hundreds of dollars just to end up with something useless.   Or perhaps worse than useless. I had a client recently come to me after using LegalZoom to trademark his game name that, while it was technically different than a major brand's name, was FAR too close and definitely considered trademark infringement even though it wasn't identical. Any lawyer would have told him to choose a different game name. But since he tried to go it alone and didn't understand the law well enough, he had to face a cease and desist letter from a very aggressive plaintiff who wanted him to not only abandon his trademarks, but remove his game from the app store and provide an accounting of profits."
androiddev,3aq9cp,TheoremMetal,1 point,Tue Jun 23 15:25:12 2015 UTC,"Out of curiosity, what recourse does he someone in that scenario have at that point? Did you accept his case? Would you take on such a case?"
androiddev,3aq9cp,TheoremMetal,2,Wed Jun 24 02:46:40 2015 UTC,"Yes, that is exactly the kind of IP case I often take on. Without going into any identifying details, I got an outcome my client was very satisfied with, even though he essentially had to surrender. I negotiated abandoning the trademark applications and a twenty day window to change the game name in exchange for ""megacompany"" not pursuing my client for any damages or having the game immediately removed from all channels of distribution. Even though it wasn't a ""victory"" in the traditional sense, it really was the best possible outcome for my client given the facts and law."
androiddev,3aq9cp,donrhummy,1 point,Wed Jun 24 03:06:53 2015 UTC,Wow. That's impressive.
androiddev,3aq9cp,impracticalIdeas,2,Wed Jun 24 14:01:39 2015 UTC,"if someone infringes on your trademark, the trademark is only going to protect you when you go to court. if $1000 is a lot of money, how will the developer afford a lawyer for the court case?"
androiddev,3aq9cp,Glurt,7,Tue Jun 23 14:44:58 2015 UTC,"Hey guys, I’m an intellectual property lawyer for app developers and software companies.  One common problem I’ve noticed is that far too many app developers and especially mobile game developers wait too long to register their trademarks, and they end up prejudicing their rights and hurting their chances of having any real success.   Why should you bother spending time and money to register a trademark? Read this short article I published today to find out. While it is explicitly written towards game developers, the lessons apply to any and every app developer.   Hopefully this article is helpful, and if you have any questions, please feel free to post here and I’ll answer.   *Nothing I post in this thread is legal advice. I am only speaking very generally about the law in the United States."
androiddev,3aq9cp,fredgrott,1 point,Mon Jun 22 17:03:51 2015 UTC,"My apps and games are available in all countries. It's not exactly practical to go around chasing trademarks in all of them. What do you recommend? Just the major markets? Still, I'd guess that about 90% of my users are spread across at least 10 countries (USA, UK, Australia, Brazil, India etc are the top ones IIRC)"
androiddev,3aq9cp,Cg2XHPxz,2,Tue Jun 23 11:01:02 2015 UTC,"Trademark registration worldwide can get very expensive and I've only seen clients do it when they are already flush with cash (from a previous game or from the current game they want to trademark worldwide after its already proven successful).   Generally speaking, registering a trademark in the United States is the most important place to register since, (1) for mobile apps, that's where Google, Apple, and Amazon are located, and (2) the largest sales market is usually in the U.S. That said, there are situations where it makes sense to register a trademark elsewhere instead."
androiddev,3aq9cp,markyosullivan,2,Tue Jun 23 15:46:53 2015 UTC,If I had a trademark for my game would I then need to police the Play/App store to make sure no one is infringing or is this automated?
androiddev,3aq9cp,jmanda1,3,Tue Jun 23 13:50:56 2015 UTC,The only automated policing is that the USPTO will not register other trademarks with the exact same game name in the exact same class of goods. The Google Play/App store will not be automatically policed. You will have to do that yourself or have someone else do it for you.
androiddev,3aq9cp,JimDabell,1 point,Tue Jun 23 15:17:42 2015 UTC,one of the reason to trademark the app name is that bad actors attempt to use that name for their own SEO purposes..if its trademarked the search engines will block those attempts
androiddev,3aq9cp,JimDabell,-4,Mon Jun 22 19:10:28 2015 UTC,Bad actors? What are you a fear mongering Republican senator?
androiddev,3aq9cp,jmanda1,1 point,Tue Jun 23 02:56:49 2015 UTC,Is there a place where I can easily check on existing trademarks to see if I'm infringing on one?
androiddev,3aq9cp,WhiskeyFist,4,Tue Jun 23 10:26:33 2015 UTC,"Generally, when I do a trademark search for a client, I search Google, the state trademark registry of wherever they are located (which is not on line in California), and the U.S. federal registry: http://www.uspto.gov/trademarks-application-process/search-trademark-database"
androiddev,3aq9cp,patpit,1 point,Tue Jun 23 15:19:19 2015 UTC,"Great post! Thanks very much, very helpful. I have a couple questions:   What about graphics? Let's say game characters. I've been told no need to register them, you just need to prove they were present in your game before everyone else. So, screenshots on the Play store/website would be enough? Can a company from anywhere in the world register a trademark? Would it still go through UPSTO?"
androiddev,3aq9cp,WhiskeyFist,2,Mon Jun 22 21:16:17 2015 UTC,"What about graphics? Let's say game characters. I've been told no need to register them, you just need to prove they were present in your game before everyone else. So, screenshots on the Play store/website would be enough?   You should copyright* your source code and graphics. Copyrighting is easy and less expensive than trademarking. It is an incredibly important step that most developers don't do and absolutely has to be done within 90 days of publishing your game or you severely prejudice your rights.  You can also trademark your game's main characters (like Mario or Link), but it's not nearly as necessary to do as it is to trademark your game name or studio name.   Can a company from anywhere in the world register a trademark? Would it still go through UPSTO?   Yes and yes. Unlike copyrights (which can be registered in any country and are essentially enforceable worldwide), trademarks are country by country specific. And since Google is located in the U.S., and the U.S. is often the biggest single market for most apps, it is imperative that you register your trademark in the U.S., no matter where your company is located.   *edit: by copyright, I mean ""register your copyright"""
androiddev,3aq6l1,asarazan,4,Mon Jun 22 16:43:12 2015 UTC,Thanks a lot for this!  But could you also add the recommended Proguard configurations to the page as well?
androiddev,3aq6l1,mysterygift,3,Tue Jun 23 01:50:14 2015 UTC,http://levelmoney.github.io/velodrome The proper proguard line is now listed on the project page.
androiddev,3aq6l1,mysterygift,1 point,Tue Jun 23 05:59:49 2015 UTC,Thanks!
androiddev,3aq6l1,guillaumeyp,3,Tue Jun 23 06:02:02 2015 UTC,Oh good point! I'll take a look at it as soon as I have a minute.
androiddev,3aq6l1,c0nnector,3,Tue Jun 23 01:58:48 2015 UTC,"It's another cool boilerplate killer, thanks"
androiddev,3aq6l1,c0nnector,3,Mon Jun 22 19:11:04 2015 UTC,Android annotations has something similar https://github.com/excilys/androidannotations/wiki/OnActivityResult. But it's better as a standalone lib
androiddev,3aq6l1,eikaramba,1 point,Tue Jun 23 13:28:52 2015 UTC,Wow I completely duplicated their interface. Hope they have a good sense of humor :-/
androiddev,3aq6l1,lnkprk114,2,Tue Jun 23 16:22:48 2015 UTC,I stopped using AA since it causes much overhead(e.g untraceable errors).  Instead i've collected a few libs that do the same job and it's less messy. This lib will be perfect replacement
androiddev,3aq6l1,jackhexen,1 point,Tue Jun 23 18:36:08 2015 UTC,"why? I mean can you please send me a plain example of what we would save, because in my head its just not really worth it. I can just use a switch statement and that is not really more verbose to read"
androiddev,3at05t,hellotimmutton,1 point,Tue Jun 23 07:15:04 2015 UTC,"I recently implemented this by using SlidingPaneLayout, it wasn't very hard."
androiddev,3at05t,theheartbreakpug,1 point,Tue Jun 23 19:20:26 2015 UTC,"Thanks for the tip, I'll check it out"
androiddev,3as907,thestrox,3,Tue Jun 23 02:29:19 2015 UTC,"I'd do it on the backend. If the HTML changes for any reason your app will stop working until you update it. Parsing the web on the backend will allow you to change whatever you need to change once and keep the app as it is.  You can use BeautifulSoup (http://www.crummy.com/software/BeautifulSoup/) on AppEngine, for example. Keep a cron job that updates the data every few minutes or days (depending on the site), and just return a JSON."
androiddev,3as907,aovila,1 point,Tue Jun 23 02:43:20 2015 UTC,Thanks for your suggestion.  BTW i just heard about jsoup.  What do you think about it?
androiddev,3as907,watchme3,2,Tue Jun 23 05:11:44 2015 UTC,"use jsoup to parse the html, there s nothing to think about it. If you are thinking about htmlunit then know that it doesn t support android."
androiddev,3as907,HaoChen,2,Tue Jun 23 19:29:10 2015 UTC,I can recommend Jsoup as it is easy to use. There is a Java program running on my server which uses Jsoup to parse HTML files and everything works great.
androiddev,3as907,aovila,1 point,Tue Jun 23 20:20:00 2015 UTC,"Never used that library. But if it's going to be Java, I guess it's one option."
androiddev,3at1rw,ToplessTopmodel,6,Tue Jun 23 07:38:15 2015 UTC,"No doubt, google nexus 5"
androiddev,3at1rw,aminelaa,3,Tue Jun 23 07:52:31 2015 UTC,"I test my app on my personal device, a second-hand Nexus 5. To me, it is still the best device to have the purest Android experience without constructor ROMs (hi Samsung). Nexus 4, Moto G or Nexus 7 also match this requirement.  Nevertheless, you have to test your app on old devices, with low dpi, with less memory, etc so that you can detect where you app has imperfection. I keep an old HTC One S (Android API 16) which proved to be useful, particularly to adapt my images density.  I would add that you could play on the best-seller device, which is today the Samsung Galaxy S3 (then S4 then S2 the S lol).  Of course, it is better to have the real devices but Genymotion is a blazing fast virtual device."
androiddev,3at1rw,guillaumeyp,2,Tue Jun 23 07:56:11 2015 UTC,"Nexus 5. They get updates instantly, you know the OS works as it's intended and they're dirt cheap."
androiddev,3at1rw,augustuen,1 point,Tue Jun 23 09:30:50 2015 UTC,"I use Genymotion for my testing needs as I can do low DPI to high DPI. What you want for a phone is a phone you will use so when you write code you have a device you are willing to use.   If you go crappy low end, which you need to test against, you will be annoyed with your phone all the time.   I personally use a Note 4. Gives me a chance to see Samsung bugs when testing. Has a high DPI screen so I get to test against that. I can set up multi-window which I try to support as well. I get to use a stylus to see how that plays out and it has the best camera I have ever used on a smartphone - not saying the best out there but the best I have owned.  The Google Nexus 5 is also an excellent choice. It gets updated much more often than anything Samsung will do.  You did not give a budget or a carrier or a region of the world. That could also make a difference on which phone could be recommended."
androiddev,3at1rw,MKevin3,1 point,Tue Jun 23 12:20:57 2015 UTC,If you're buying you should buy Nexus 5 for development if you want to test right on real device how it runs and looks. m using g2.
androiddev,3at1rw,xitize,1 point,Tue Jun 23 12:24:28 2015 UTC,I'd go for Nexus 5. Or Samsung Galaxy because of their popularity (unfortuneatly)
androiddev,3at1rw,drabred,1 point,Tue Jun 23 14:09:24 2015 UTC,while (true)     1. Best beginner lessons.     2. Best dev phone. }   Just search the subreddit. These questions are asked every week and there isn't one final answer.
androiddev,3at1rw,droanmalik,1 point,Wed Jun 24 02:33:05 2015 UTC,The one in your pocket
androiddev,3apjhb,lacronicus,6,Mon Jun 22 13:32:20 2015 UTC,"Company: WillowTree  Job: Android Engineer  Location: Charlottesville, VA and Durham, NC  Allows remote: No  URL: pm me, or http://www.willowtreeapps.com/careers/  WillowTree is a great place to work, and we're always looking for smart people. We've got a lot of cool projects going on now, and always more coming through. It's a great company, and a great community."
androiddev,3apjhb,VoodooXTC,3,Mon Jun 22 15:42:06 2015 UTC,"Can confirm pretty awesome place to work at, I am an Android Engineer/Lunch of Legends DRI working at WillowTree. On Monday's we have something called Lunch of Legends were a few of us play League of Legends during lunch. It really helps improve our teamwork and coordination i.e. ""adc or feed u noobs""."
androiddev,3apjhb,Richie681,1 point,Mon Jun 22 15:56:50 2015 UTC,"To add onto that,  we also have lunch Minecraft sessions. Lunch --insert game here-- sessions really."
androiddev,3apjhb,VoodooXTC,2,Mon Jun 22 16:30:02 2015 UTC,"Yup, Lunch of Legends got pushed back for Smash Lunch. Eight players is not enough...  http://imgur.com/BQKkV4i"
androiddev,3apjhb,Richie681,2,Mon Jun 22 17:16:02 2015 UTC,"WillowTree is the best company ever. We're opening up our new satellite office soon (the one in Durham up there) so if you want to be part of a new branch from the bottom floor, now's the time. It'll be a fun ride.   Also we get to do fun stuff like this: http://goo.gl/EPqQVc"
androiddev,3apjhb,chipuha,1 point,Mon Jun 22 15:57:30 2015 UTC,"This looks like an awesome place to work!    Just out of curiosity, how much experience would you need to work there?  I've spent a lot of time programming and I've made a few apps, one of which is published.  However, it has mostly been a hobby and I have never had any formal training or education in programming.  I don't think I could even make an app from scratch without a lot of google searches on how things work.  What are the qualifications of the people who work with you?"
androiddev,3apjhb,Richie681,1 point,Mon Jun 22 18:54:28 2015 UTC,"We usually hire a pretty broad range. From experienced developers to fresh college graduates. We can always teach the more inexperienced recruits if need be, and in the past it's what we've done.   We do require at least some experience in app development, and we make applicants complete a test project if it gets to that point."
androiddev,3apjhb,carlospzx,3,Mon Jun 22 21:30:21 2015 UTC,"Company: American Express  Job: Mobile Engineer - Android  Location: Phoenix, Palo Alto, New York  Allows remote: Yes  URL: https://amex.jibeapply.com/jobs/15002267?lang=en-GB&src=JB-10780"
androiddev,3apjhb,JobspressoTeam,3,Mon Jun 22 14:36:12 2015 UTC,"Hi, the job listing says Pheonix, AZ only. Is the role really remote-friendly?"
androiddev,3apjhb,carlospzx,1 point,Mon Jun 22 16:19:18 2015 UTC,"Hey, sorry about that, I picked a link from our site and I didn't notice it says Phoenix, but don't worry about that, it also applies for the locations that I mentioned, remote 100% included.  See this tweet from our Android Engineering Director: https://twitter.com/yogurtearl/status/606124380280586241"
androiddev,3apjhb,TweetsInCommentsBot,1 point,Mon Jun 22 17:06:46 2015 UTC,"@yogurtearl   2015-06-03 15:44 UTC  Amex is hiring Android engineers ( Remote, Phoenix, Palo Alto, NYC, etc ). Come join us. Questions? just ask!     This message was created by a bot  [Contact creator][Source code]"
androiddev,3apjhb,amusice,2,Mon Jun 22 17:06:54 2015 UTC,"Company: GotChosen, Inc  Job: Senior and Junior Android Developers  Location: Orlando, FL  Allows Remote: No  URL: https://www.gotchosen.com  VISA: No  Feel free to email your resume to austinm@gotchosen.com  In your role as Android Developer, you will be working with a team of ~ 30 developers who are developing an entirely new native (iOS and Android) mobile applications which interacts with a REST API on our servers. The team works in conjunction with a UI team that is designing the interface for our native applications. It is fast-paced work in a relaxed environment. Due to the proprietary nature of our work, all development is done on-site.   Responsibilities  Developing robust Android applications as part of a team  Working with designers to ensure the designed interfaces are implemented correctly.  Ensuring we comply with best practices for user interface development, including accessibility and internationalization / localization  Collaborating with developers, QA members and management using the Agile Scrum project management methodology  Other duties as needed  Requirements  Experience with Java development and Android SDK  Experience with version control software, preferably Git or Mercurial  Experience building mature code (clean, self-documented and unit tested)  Experience consuming REST APIs that serve JSON  Experience using IDE debugging tools (Android Studio)  Experience working in an Agile environment  Experience creating keys and signing apps for testing and distribution  A deep understanding of creating custom views and life cycles  Familiarity with automation testing, builds, and continuous integration environment (preferably using Maven or Gradle)  Be familiar with concepts of dependency injection, and dependency injection libraries (using RoboGuice, Dagger, ButterKnife, or similar)"
androiddev,3apjhb,rexes13,1 point,Mon Jun 22 14:37:50 2015 UTC,How does someone apply at your company?
androiddev,3apjhb,amusice,1 point,Tue Jun 23 10:15:45 2015 UTC,"Hey Rexes,   Shoot an email to austinm@gotchosen.com with your resume!   I'll edit the post as well.   Thanks!"
androiddev,3apjhb,JobspressoTeam,2,Tue Jun 23 18:05:14 2015 UTC,"Company: Inside.com   Job: Senior Android Engineer   Location: San Francisco, CA or Remote   Allows remote: Yes - Anywhere in the US, but be able to work a pacific time zone schedule.   Brief description: Inside.com is hiring a Senior Android Developer that has experience delivering world class applications on the Android platform. We are looking for a motivated and talented individual to work with us either on-site in San Francisco, CA or remote – your choice! Remote candidates must be US based and able to work a pacific time zone schedule. Additionally, this position requires 2-3 weeks of travel per year.     For full description, please visit: http://jobspresso.co/job/senior-android-developer/"
androiddev,3apjhb,csurapaneni0823,1 point,Mon Jun 22 16:26:26 2015 UTC,Is this a contract or full-time position?
androiddev,3apjhb,JobspressoTeam,1 point,Thu Jun 25 04:52:21 2015 UTC,Full-time.  This is stated in the job listing.
androiddev,3apjhb,prlmike,1 point,Thu Jun 25 16:35:43 2015 UTC,"Company: New York Times  Job: Senior Android Engineer  Location: New York, NY  Allows remote: No  VISA: No  Come play/work with RxJava, Groovy and Dagger for one of the IO Material Design Award Winners.  We have a fantastic team, flexible work schedule and a ton of growth potential."
androiddev,3apjhb,Instantiated,1 point,Thu Jun 25 20:43:22 2015 UTC,"Company: Flipboard Inc.  Job: Android Engineer  Location: Palo Alto, CA  Allows remote: No  URL: Jobvite  VISA: You must already have work authorization for this year.   Flipboard is looking to hire an experienced Android engineer to join our team in the heart of Palo Alto. We use a full stack of modern technologies and libraries, and iterate very quickly. Our team currently consists of 4 full time engineers. We're an ambitious startup, and have a great company culture. We'd love to bring on another to the family :)  Feel free to ask any engineering related questions here, and I or someone from the team will happily respond with more details. If it's anything recruiting related, probably better to go directly through the Jobvite channel."
androiddev,3arpoh,smc9999,1 point,Mon Jun 22 23:40:24 2015 UTC,At minimum $100 an hour for a ballpark number.
androiddev,3arpoh,Knoxie_89,1 point,Tue Jun 23 00:11:39 2015 UTC,Most iOS and Android devs I have spoken to are around $100 an hour US dollars. That is in the midwest region of the US. I would assume the coasts of the US change closer to $150 - $200.
androiddev,3arpoh,MKevin3,0,Tue Jun 23 12:22:56 2015 UTC,Converted to US Dollars something about $202 an hour.
androiddev,3artau,megaremi63,4,Tue Jun 23 00:11:40 2015 UTC,Go to Udacity they have some great free tutorials there.
androiddev,3artau,tartangeek261,2,Tue Jun 23 00:27:47 2015 UTC,There's the official training https://developer.android.com/training/index.html (and API demos in SDK)  Stuff by Vogella http://www.vogella.com/tutorials/android.html  Videos by Derek Banas https://www.youtube.com/playlist?list=PLGLfVvz_LVvQUjiCc8lUT9aO0GsWA4uNe  Videos by Slidenerd https://www.youtube.com/playlist?list=PLonJJ3BVjZW6hYgvtkaWvwAVvOFB7fkLa
androiddev,3ap535,changingminds,7,Mon Jun 22 10:45:13 2015 UTC,"I've never heard of such an Intent, and for security reasons I really don't think there should be. A nasty app could try to trash or lockup the device for instance.  Good analytics is the way to go here.   It seems to me that the uninstall is a bit of a diversion - If a user appears in your analytics for 2 mins but then never appears again, it could be that they have uninstalled immediately or it could be they have just never opened your app again. In either case, seems like it should be treated as a ""bounce""."
androiddev,3ap535,jarofgreen,2,Mon Jun 22 11:52:11 2015 UTC,"Not quite though, a user who hasn't uninstalled can still be reached via push notifications and such - so the two cases aren't quite the same."
androiddev,3ap535,DijkstraGotSkills,1 point,Mon Jun 22 16:38:46 2015 UTC,"True, but I would argue that if the user hasn't opened the app and suddenly gets a push msg later which is just marketing/appeals to play all your going to do is piss them off. (Depending on context of what your app actually does of course, maybe it's a notification they actually really want)"
androiddev,3ap535,jarofgreen,1 point,Tue Jun 23 08:19:48 2015 UTC,"Sure, but it doesn't change the fact, if the app is still installed, they are 100% reachable for re-engagement, if it's uninstalled, 0%."
androiddev,3ap535,DijkstraGotSkills,4,Tue Jun 23 15:21:08 2015 UTC,"there is one very fishy way of doing this but it won't work on ART systems.  If you write a JNI portion of your code to fork a process of your app, and register to listen to changes in the /data/data/com.your.packagname folder with inotify_add_watch and then fire an intent to your app since it happens before the action happens this should allow you to run a fast BroadcastReceiver action pre-deletion"
androiddev,3ap535,thepoosh,1 point,Mon Jun 22 18:31:46 2015 UTC,"There is this start up called ""appjolt"" which detects uninstalls. I don't work for them but if all you want is uninstall tracking, they would be a good free solution."
androiddev,3aovo4,Zhuinden,8,Mon Jun 22 08:16:51 2015 UTC,"I have a serious question. Is the original (excuse the lack of a better word) Android development system NOT good enough for majority of the developers? Why do we need to use Dagger? Or all these other libraries? Is it not possible to make a well-designed, polished and responsive app without any of these libraries?"
androiddev,3aovo4,ASKnASK,5,Mon Jun 22 15:00:15 2015 UTC,"Of course you can, but let's take Retrofit for example - you can always write your own REST API calls with mere HttpUrlConnection, here is a rough example  String json = ""{\""user\"": \""theUser\"", \""password\"": \""thePassword\""}""; byte[] jsonBytes = json.getBytes(""UTF-8"");  HttpUrlConnection httpUrlConnection = ((HttpUrlConnection)(new URL(""http://your.api.com/restService/registerUser"").openConnection()); httpUrlConnection.setMethod(""POST""); httpUrlConnection.setFixedLengthStreamingMode(jsonBytes.length); httpUrlConnection.setDoOutput(true); httpUrlConnection.connect(); OutputStream outputStream = httpUrlConnection.getOutputStream(); outputStream.write(jsonBytes); httpUrlConnection.close(); //omitting try-catch IOException etc for brevity   Compare that with what you could roughly do with Retrofit:  public interface UserService {      @POST(""/registerUser"")      void registerUser(@Body UserRegisterBO userData); }  UserService userService = new RestAdapter.Builder()        .setEndpoint(""http://your.api.com/restService"")        .build()        .create(UserService.class); UserRegisterBO userData = new UserRegisterBO(username, password); userService.registerUser(userData);   Much simpler, yes? Libraries aren't written because they're ""necessary"", but because they make your life significantly easier. It helps you create better quality code, or does tasks for you that would otherwise take much more time to implement yourself. Libraries help you with not having to reinvent the wheel."
androiddev,3aovo4,Shockwave_,1 point,Mon Jun 22 15:31:28 2015 UTC,"I think there's a line though where libraries are detrimental–not necessarily to the code but to the coder. I feel like if one cannot understand how a library works, then using a library isn't for them. For example, if I had started doing networking in my app by using Retrofit, I might have the misconception that it is easy and that it only requires a few lines of code. I think it's great to use libraries, but use them sparingly and with care.   That's not to say that I haven't just wanted to crank out an app in a week for my own personal use, never to share with anyone and haven't used every library possible to make it easier; I just think that for people that are learning, using libraries is sometimes not the best route to take.  So, in summation, we should use libraries like Retrofit and Dagger, but we also need to understand when and how to use them and how they work so that we are not relying on them too heavily, because that will lead to us being bad developers."
androiddev,3aovo4,Shockwave_,1 point,Tue Jun 23 00:31:08 2015 UTC,"To be honest, my counterargument to that is the library QueryDSL.   I dare you to try to understand what the heck is going on in that library, because I have no idea. It is designed to be easy to use and provide type-safe queries, but as to how it works? It relies on a Visitor<R, C> interface, then stuff is happening and it magically becomes JPAQuery. I have no idea what happens, even though I was reading the source.    Does that mean I shouldn't be using it and should just use raw SQLs instead? No, I don't think so - the benefits of using it are easily quantifiable.   Or for example, do I need to understand the inner workings of Hibernate completely to use it as an ORM mapper? Not necessarily, unless you have to debug it - although usually if it breaks, that just means you didn't follow the documentation right.  So while I agree that you should understand what problem it solves and how to use it, sometimes there is just so much magic going on in the back that understanding it completely would take far more dedication. Of course, understanding helps in future projects you have, but is it a necessity to understand the inner magic of these libraries in order to use them? Not really."
androiddev,3aovo4,jackhexen,1 point,Tue Jun 23 07:09:24 2015 UTC,"I mean that you should be able to do what you want without a library. If you're using SQL, you should at least be able to write your own SQL queries. If you're doing networking, you should at least understand how to write your own network calls. Essentially, libraries should allow you to write code easier, not necessarily allow you to do something that you're incapable of."
androiddev,3aovo4,ASKnASK,2,Tue Jun 23 22:38:06 2015 UTC,"Dagger is a number 1 library if you don't want to waste your brain while trying to keep all dependencies and object relations in your head.  Libraries on Android are awesome. They reduce code you write, they are open-source (usually under Apache or MIT), and the quality of most popular android libraries is very high. You CAN live without them, but your development speed will never be good.   On my last project I have 700KB of hand-written code, and 720KB code that has been generated by libraries. There are also libraries for networking, database, threads, and more. Imagine I would write all that code myself? No, thanks. I'm not a robot, if a machine can write code for me, it should. If I can reuse someone's high-quality code, I will."
androiddev,3aovo4,adilp,2,Mon Jun 22 15:38:18 2015 UTC,"I was worried people might take my question the wrong way. I didn't mean normal libraries like the Android design support lib or Picasso or gson etc. I meant specifically these libraries that modify the code style (or what I assume is the default way of defining classes and activities etc). Specifically Dagger, RxJava etc."
androiddev,3aovo4,jackhexen,2,Mon Jun 22 15:54:41 2015 UTC,"Dagger isn't any less a ""normal library"" than Picasso (note, Glide is better, and note, Fresco might be even better than Glide). It just solves a slightly less pragmatic problem.   It's not a question of ""how do I download an image from an URL and cache it and display it in an image view"".   It's ""my activity is a bloated mess, so I ripped out my logic into classes but now I have no idea how to bind them together and my code is an unmaintainable blob of spaghetti"".  Dagger resolves the dependency graph of your objects, and enforces an idea of modularity in your code.  I can't help you out with RxJava, I haven't invested enough time in it to use it to solve the problems it was designed for - which is primarily handling data as streams, mapping them and binding actions to a set of conditions, etc. Functional programming takes effort to learn, although if you used the Java 8 Stream API then that helps give a taste."
androiddev,3aovo4,bart007345,2,Mon Jun 22 16:01:23 2015 UTC,So basically its a way to separate things? So not all the code is in your activity/fragment right? You can have classes to do certain things and then inject it back into the activity with dagger?
androiddev,3aovo4,bart007345,3,Mon Jun 22 16:06:59 2015 UTC,"Yep!   This way, what people tend to do is that the Fragment receives a Presenter class (...or is a presenter class in my experiment with retained headless fragments), the presenter class receives interactor classes with @Inject, and when you do some sort of action in the view, you call the appropriate method in the presenter that calls the interactor which does all the magic.    This keeps your logic separate from Activities/Fragments, rips it apart to be ""modular"" and not having bloated Activities that download files, save to database, and initializes / maintains the view states, etc. and have 1500 lines of code in one class."
androiddev,3aovo4,bart007345,1 point,Mon Jun 22 16:11:12 2015 UTC,"Oh, I see. On your ""why dagger?"" a detailed answer is here: http://konmik.github.io/snorkeling-with-dagger-2.html  The reason why people use RxJava is that because they search for uniformity.   You don't want to create a thread class if the only thing you want is to call a function in the background.   The same about callbacks. Why create 100500 callback interfaces if you can use a single RxJava ""subject"". A callback function has been defined once. Now it can be reused. If you reuse callbacks - you can substitute or ""chain"" their calls, thus making code very flexible.  These libraries enforce good programming practices: uniformity, decoupling, declarative programming over imperative, functional programing over procedural. A good code answers the question: ""what should be done?"" while bad code answers: ""how it should be done?""."
androiddev,3aovo4,bart007345,2,Mon Jun 22 16:10:47 2015 UTC,"I have given up on Dagger 2. Right now, I do not test my activities/fragments so using look ups for dependencies from a sub class of Application works fine.  In my next project, I do intend to write Activity/fragment tests with Espresso so I'll use the trick where you can swap in a mock Application context to get hold of dependencies.   This article explains the basics (see comment too for a way to use in InstrumentationTestCase2)."
androiddev,3aovo4,jackhexen,2,Mon Jun 22 09:13:28 2015 UTC,"The only messy part about Dagger2 is that you can extend from Components, but you cannot extend from modules. So I personally had to provide a factory of sorts (I named it Provider) that provided the type of implementation that I wanted. Which is funny because easy mockability should be the primary benefit, but apparently it's more about injection and dependency resolution!  Thanks for the link, so essentially the Application is the component that you can directly obtain references from, and you'd have to bind the graph together manually.   Fair enough. I think it's a far cleaner approach than redefining Object context.getSystemService(String) and then saying MagicService.getForContext(context) even though that's what Square seems to do most of the time.  (What made you give up on Dagger2? I was punching it until it started working the way I wanted it to, so I'd like to think I have a bit of grasp on what it does and how to kick it into gears - maybe I can help you with it?)."
androiddev,3aovo4,jackhexen,1 point,Mon Jun 22 09:33:42 2015 UTC,Thanks for the offer. It was actually seeing that SO post that put the final nail in the coffin for me regarding Dagger2.  I do DI for testability and thats not actually the primary focus of Dagger2. I can do without the complexity for zero testing gain.  I come from a server side background and have used Spring from the early days. I'm super suspicious of complex to setup frameworks like Dagger2 and will avoid them if i can.
androiddev,3aovo4,Tarenius,1 point,Mon Jun 22 09:55:14 2015 UTC,"Ah. I tried to make a step-by-step thing with some extra explanations for possible pitfalls (for example that if you use component dependencies then you cannot use scope on your module @Provides methods).. I guess I'll try to simplify it and revise the post later. The ability to use @Inject is worth it for me, makes the business logic much cleaner - even if it takes a tiny bit of plumbing. It sure as hell isn't as bad as Flow and Mortar if you ask me!  (But yes, the lack of simple mockability for modules was a WTF moment for me when I noticed.)"
androiddev,3aovo4,jackhexen,1 point,Mon Jun 22 10:00:24 2015 UTC,"go for it, it may help someone but for me its just lipstick on a pig!"
androiddev,3aovo4,jackhexen,1 point,Mon Jun 22 10:03:25 2015 UTC,I feel that way about Rx but I can't shake the feeling I just think it's ugly because I don't understand it :|   (but that's a question for another day)
androiddev,3aovo4,sonorangoose,1 point,Mon Jun 22 12:51:20 2015 UTC,"in the case of RxJava, the benefits outweigh the disadvantages!"
androiddev,3aovo4,bart007345,1 point,Mon Jun 22 12:58:38 2015 UTC,I think you can extract a common interface from a module and inherit another from it.
androiddev,3aovo4,bart007345,1 point,Mon Jun 22 10:04:53 2015 UTC,"Yes, that is the other alternative - however, you still need to specify the module bound to a component with its SexyModule.class parameter, and so replacing the module isn't really possible. Hence why I extracted the interface of providing the dependencies, then gave the provider to the module as a constructor parameter. Bit bloaty in code, but still better than it not being possible."
androiddev,3aovo4,pakoito,3,Mon Jun 22 11:35:20 2015 UTC,"http://www.yegor256.com/2014/10/03/di-containers-are-evil.html  I'm not a big fan of pure OOP programming - my coding style is OOP+FP mix, but I am subscribed to this awesome OOP purist's blog. Some ideas, like ""no code in constructors"", ""immutable objects"" are very good."
androiddev,3aovo4,jackhexen,3,Mon Jun 22 09:55:21 2015 UTC,How anyone could possibly think this mess is better than using a DI framework is beyond me.
androiddev,3aovo4,pakoito,2,Mon Jun 22 11:21:05 2015 UTC,"This is just a point of view. At first I was also thinking this is a mess. But after understanding how OOP is different, and which practices are considered to be good, the approach becomes quite obvious and well-architected.   Currently our classes are just collections of functions, I do not know is it good or bad, but this is definitely not OOP."
androiddev,3aovo4,jackhexen,1 point,Mon Jun 22 11:32:36 2015 UTC,"I think it's both fascinating and ugly at the same time. To be fair, what hurts me most in this is the ""merge"" and the ""release"" and the like. Use an enum for string literals!  Some of this looks like something that shouldn't be DI though, but rather lambdas. He did claim he prefers objects to even lambdas, although I don't think he thought that one through."
androiddev,3aovo4,pakoito,1 point,Mon Jun 22 11:41:23 2015 UTC,"He didn't tell that he is against lambdas. He uses them in the example you're referring to.  For me stream/objects it is just a syntax preference, have nothing to do with an architecture. I prefer streaming, but OOP is fine too.  The difference a * b vs new Multiplication(a, b)is not big. But OOP allows to execute it lazily, provide an interface and such."
androiddev,3aovo4,jackhexen,1 point,Mon Jun 22 11:49:34 2015 UTC,"That does look pretty hideous, but things can be improved somewhat using embedded typesafe DSLs. Here are 3 resources which are fascinating reading, whether you use them or not.   http://www.slideshare.net/ekabanov/embedded-typesafe-domain-specific-languages-for-java http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.180.4784&rep=rep1&type=pdf http://java.dzone.com/articles/type-safe-dependency-injection   The first 2 articles were written before lambdas and method references, which makes things even better."
androiddev,3aovo4,jackhexen,2,Mon Jun 22 18:23:52 2015 UTC,"The article shows how to use Guice with @Inject and calls its a ""dark"" pattern but does not say WHY its bad. I'll take DI over the code he then showed any day."
androiddev,3arepk,Aspi2012,2,Mon Jun 22 22:11:47 2015 UTC,"1 Reason why I don't reply to reviews:  It'll take me forever to reply to hundreds of reviews daily. ""Why don't you reply to a few good ones?"" Again, it'll take me forever to sift through them all to find the good ones.   Almost all the reasons are just plain impractical. You should develop other solutions for finding what features the users want, same for bugs etc."
androiddev,3arepk,lordoftherings911,2,Tue Jun 23 10:48:51 2015 UTC,"Very good point. As the post says, you'll need to come up with a strategy that works for you and your app. It's not suggesting you reply to hundreds. Perhaps it's just 1* star reviews you reply to. Hopefully if you have developed a good app you won't have hundreds of 1* reviews anyway!"
androiddev,3amyvs,rexes13,50,Sun Jun 21 20:29:28 2015 UTC,"Edit: I'm not a recruiter, but I've been growing a team and interviewing a lot of people.  I've hired 3 devs so far this year.  Up to 8 total full-time android devs now.  Here's what I look for:    Good attitude  Good attitude  Good attitude   If someone doesn't respond well to code review, or doesn't understand how to give it with a positive tone, they're not going to last.  You have to know how to nit-pick, but make me like you for doing it.  This is a soft skill that not many people have.  The best part, I don't have to appoint someone ""senior developer"", because leaders emerge naturally according to the quality of their ideas and the respect they earn by being a nice person.  All I have to do is make sure I'm paying them right."
androiddev,3amyvs,TurboJetMegaChrist,3,Sun Jun 21 21:40:56 2015 UTC,I wish I could work for someone that had that attitude.
androiddev,3amyvs,TODO_getLife,4,Mon Jun 22 09:43:02 2015 UTC,"If nothing else, your post has given me the impetus not to be an asshole during code reviews."
androiddev,3amyvs,SnowdensOfYesteryear,17,Mon Jun 22 05:32:12 2015 UTC,Was this something that you didn't think to do before?
androiddev,3amyvs,Money_on_the_table,1 point,Mon Jun 22 08:38:55 2015 UTC,I was OK with being an asshole.
androiddev,3amyvs,SnowdensOfYesteryear,2,Mon Jun 22 15:34:02 2015 UTC,because leaders emerge naturally according to the quality of their ideas and the respect they earn by being a nice person. All I have to do is make sure I'm paying them right   Now that's a great attitude and way of doing things.
androiddev,3amyvs,pier25,2,Mon Jun 22 05:58:49 2015 UTC,Can't really upvote this enough - especially the part about leaders emerging naturally. This is absolutely correct and is the way it should be.
androiddev,3amyvs,eValval,1 point,Mon Jun 22 13:23:52 2015 UTC,"This is currently the situation in my current job, where i was ""assigned"" as the team's director, by emerging naturally. But this is a thing that you can not prove to a company through a CV......"
androiddev,3amyvs,Megapwnd,36,Mon Jun 22 20:11:45 2015 UTC,"*Not a recruiter or hiring manager, but I am an Android dev and have interviewed multiple candidates.    Some of the things I would like to see in candidates I interview: -Developed apps that I can see on the Play Store -Definite bonus if they have the app on their phone so I can see it -Knows specifics about Android -Knows specifics about Java -Can code on the whiteboard  As far as the specifics I mentioned in Android, things I would like them to know: -Difference between Context and ApplicationContext -Activity lifecycle (onCreate, onResume, etc.) and their order -What is a manifest file for? -Have they ever used 3rd party libraries like GSON, Joda Time, Picasso, Volley, etc. (most candidates have no idea what I'm talking about when I ask this) -How do I do something simple like put an ImageView on the screen? -Have they dealt extensively with ActionBar (or its new counterpart Toolbar)?  Again, some candidates have no idea what I'm talking about when I ask that. -What are the differences between Activity and Fragment?    As far as Java specifics: -Access specifiers -Soft and Weak References  (some candidates have never heard of these) -How does Java pass pointers to a method (always by value, never by reference)? -What are the primitives in Java?    I would say that if you can answer all of those things in an interview and can do some whiteboard coding, then you are ready to go.  If you're hesitant about any of those, you should research them a bit until you're comfortable with them."
androiddev,3amyvs,wittywombat,10,Sun Jun 21 22:26:21 2015 UTC,"Funny, cause I can answer most of these. I only had a handful of Android-related interviews and everyone pretty much gave me the generic ""we like you and your initiative in learning Android but we want someone more senior"".  Well, in my experience, everyone wants someone who has extensive experience with the entire stack. Also, my white board skills are not that great, so there's that.   Just my 0.02$. For reference, I am not actively looking for a job right now. My resume sucks. I ended up landing some kind of backend role, although someday I want to try to get into mobile."
androiddev,3amyvs,Cephas00,3,Sun Jun 21 23:02:13 2015 UTC,"""we like you and your initiative in learning Android but we want someone more senior"".   It's funny, but last interview I had I was told ""we like you and you'd be good for the team but we want someone more junior"". It's a bit difficult to know what to take from that!"
androiddev,3amyvs,Aeon2303,18,Mon Jun 22 08:44:14 2015 UTC,We want to be able to pay someone less
androiddev,3amyvs,Cephas00,3,Mon Jun 22 09:48:37 2015 UTC,... I suppose that makes sense. It's a little awkward when things haven't really gotten to salary discussions so it's purely assumption based.
androiddev,3amyvs,kaze0,2,Mon Jun 22 09:56:01 2015 UTC,They don't feel like they could pay you enough.
androiddev,3amyvs,kaze0,1 point,Mon Jun 22 10:10:03 2015 UTC,"They don't like you for one reason or another or they have been deluded into thinking there are actually tons of senior android devs out there.   At prior jobs we've turned away junior developers because management wanted more senior people but the rest of the actual development team thought they were fine.  I've also been turned down as not senior enough, and anything else would have been more a more useful criticism. Even ""One of our people intensely hates you"" would have been more helpful."
androiddev,3amyvs,wittywombat,1 point,Mon Jun 22 10:13:42 2015 UTC,"Haha, yeah. I'm starting to think there's something about my that turns them off. Some do tell me that they ""like"" me and feel that I would be a great fit to the team but found someone else. (WHATEVER THAT MEANS, probably just an excuse to get rid of me). My personal favorites are the ones that tell me I'm a great fit and when I ask for feedback, no reply. At least tell what's wrong so I could fix it."
androiddev,3amyvs,lordVader1138,7,Mon Jun 22 13:19:09 2015 UTC,"Regarding to libraries. Have interviewed two candidates (3.5 yrs and 2 yrs android exp), applied for senior posts and knew nothing about appcompat. One of them knew it's existence when I asked about it..."
androiddev,3amyvs,ZakTaccardi,2,Mon Jun 22 05:55:59 2015 UTC,"oh man. that is so bad. Developers who understand libraries get work done, a lot quicker. I am building a new version of an app that handles an RSS feed. the old version manually parsed through the XML, with a bunch of if statements, to sort it into a manually defined class (very poor approach, which also lead to a lot of null-pointer exceptions).  With the power of third party libraries behind me, I fired up Retrofit, did some googling, found it works with SimpleXML, and I copied the RSS Feed into a program that auto-generated a bunch of SimpleXML classes. I got this thing done in less than an hour.  Third party libraries ftw!"
androiddev,3amyvs,lordVader1138,2,Mon Jun 22 12:30:09 2015 UTC,"a lot quicker.   Yes this is what I am going through from last months. I would also like to add not only lot quicker but solid code.  If somebody wants to be a developer (at least in my team) at least support libraries' knowledge is required. We are working with studio, gradle, retrofit, rxjava. And shipped code with. Though later two introduced recently, we are working in studio before version 0.8."
androiddev,3amyvs,ZakTaccardi,2,Mon Jun 22 13:16:24 2015 UTC,"good point about the solid code, which is what a lot of people don't understand. By using Retrofit, you are a first-class networking API. Imagine writing those HTTP requests yourself.  As app devs, we cannot spend our time perfecting each aspect of our program, so by using a solid third party program, a first-class i implementation is handed to us for free."
androiddev,3amyvs,markyosullivan,1 point,Mon Jun 22 13:59:42 2015 UTC,I've been looking into appcompat recently to enable Material Design for pre-lollipop devices. Pretty shocking someone would apply for a senior position without knowing about it.
androiddev,3amyvs,lordVader1138,1 point,Mon Jun 22 13:43:54 2015 UTC,It's becoming pretty normal in our local development market. Lot of people don't experiment and stick to old codes. I have heard some companies still choose to stuck with eclipse because new things like studio and gradle are things to fear...   And they don't have reasons to change as they are still getting paid. That's unfortunate.
androiddev,3amyvs,rmvt,7,Mon Jun 22 16:15:00 2015 UTC,"can you elaborate on the whiteboard coding? why's it so important to you? personally i've always found whiteboard anything, awful."
androiddev,3amyvs,Megapwnd,-4,Sun Jun 21 23:43:41 2015 UTC,"Basically when it comes to whiteboard coding, we want to see that a candidate knows how to code under the pressure of a time limit and without an IDE to help them.  It usually involves something simple like dealing with arrays or linked lists.  It's just to get a feel for what their code looks like (is it horrible?) and how efficiently they solve it (did they just brute-force it?).  Remember: you don't have to have everything memorized for this; the interviewer understands if you write a comment that says ""Here is where I would sort the array"" if that is part of your solution and you don't want to write out the sorting algorithm.  They just want to get an idea of how you code."
androiddev,3amyvs,lacronicus,48,Mon Jun 22 00:53:28 2015 UTC,"That's kind of silly. Have you ever, in your entire career, been in a situation where you had to write code in a short time limit without an IDE? If that's all you've learned about a candidate, IMO you've wasted everyone's time.   For me, whiteboard coding is about judging how well the applicant can think/talk in code. I won't judge syntax, make up your own language for it if you want, I don't really care. I do care about you logic being easy to follow, lack of any serious logic errors, and that you've covered your edge cases. The whiteboard is scratch paper, not the answer sheet."
androiddev,3amyvs,mattmassakure,8,Mon Jun 22 01:35:37 2015 UTC,"I agree with this, we've come a far way in programming then to resort to the ""write it out"" method. IDEs have become a serious tool."
androiddev,3amyvs,adrianmonk,6,Mon Jun 22 04:08:31 2015 UTC,"Have you ever, in your entire career, been in a situation where you had to write code in a short time limit without an IDE?   Serious question? Because, yes, that exact thing has happened to me.  I was in a meeting during the launch of a new feature, we had just put a press release on our web site announcing it to the world, and I was supposed to run a tool to change some data/config that caused the functionality to be enabled on our production servers. I had tested it beforehand, but when I went to actually run it, something had recently changed that made the tool crash at runtime. I forget the details, but it was either a permission issue or a schema change.  I thought about using the IDE, but soon I realized that for various reasons it was not in a working state to open the project. So I opened a text editor, figured out a pretty trivial fix, had an honest debate with myself where I concluded it would not destroy production, made the change, ran a command-line build, and ran it again. And it worked. Crisis averted.  Ideally this wouldn't have happened, but we were past the point of no return, and editing with a text editor allowed me to do the least bad thing under the circumstances.  Now, back to the original topic. Is this an important skill that should be part of the hiring decision? I don't know about that.  EDIT: Oh, I forgot, it actually happened another time. I found out about an issue that urgently needed to be fixed... while I was on a layover... right before it was time to board the plane. One other person could have fixed it but nobody could contact them. So I bought the in-flight wifi, which was flaky and very slow. The only thing that worked reliably was to ssh in to my workstation and run ""screen"" so I could quickly pick up where I left off every time the connection dropped."
androiddev,3amyvs,lacronicus,2,Mon Jun 22 05:23:30 2015 UTC,"Interesting stories, and I'm glad someone was able to answer ""yes"" just to highlight how incredibly rare it is. And in both cases, you still had better tools than just a whiteboard. I would be willing to bet that most modern developers can't even claim two instances."
androiddev,3amyvs,bart007345,2,Mon Jun 22 11:06:11 2015 UTC,Optimize for what you do 99.9% of the time. There's no guarantee what you want to do could be achieved outside of an IDE anyway.
androiddev,3amyvs,adrianmonk,4,Mon Jun 22 06:55:33 2015 UTC,"Optimize for what you do 99.9% of the time.   I agree. But someone asked if this ever happens in an entire career. The answer to that question is yes.  It doesn't mean it should be part of the interview process, but that wasn't the question."
androiddev,3amyvs,kaze0,1 point,Mon Jun 22 07:31:06 2015 UTC,But you were still using a text editor. Which is still a million times better than writing on a fucking whiteboard.
androiddev,3amyvs,ComputerJerk,1 point,Mon Jun 22 10:15:37 2015 UTC,Probably one with syntax highlighting no-less ...
androiddev,3amyvs,kaze0,2,Mon Jun 22 13:43:54 2015 UTC,But we give candidates 3 colors of markers
androiddev,3amyvs,ComputerJerk,2,Mon Jun 22 13:54:48 2015 UTC,Bonus points if the whiteboard has graph lines on it so you can get your indentation right
androiddev,3amyvs,kaze0,1 point,Mon Jun 22 14:00:44 2015 UTC,Tests in college!
androiddev,3amyvs,trebuszek,5,Mon Jun 22 10:14:10 2015 UTC,"My first coding interview was like that, and let me tell you, the code on the whiteboard does not reflect overall skill. Some people panic when you put a pen in their hand and have them stand in front of 2 senior devs who are watching your every move."
androiddev,3amyvs,Scullywag,5,Mon Jun 22 01:30:49 2015 UTC,"Unless your day to day workflow involves:   writing code on a whiteboard, photographing it and using OCR to convert it to text, and then compiling that text   whiteboard coding is irrelevant.  Let them code in their IDE of choice if you want a realistic idea of how they write code.  Code on a whiteboard can give you an idea of how they reason about code, and how they verbally communicate that reasoning, but that should not be confused with their ability to write code."
androiddev,3amyvs,bart007345,2,Mon Jun 22 02:19:09 2015 UTC,"White boarding is useful to design high level for communication, not low level coding."
androiddev,3amyvs,kaze0,1 point,Mon Jun 22 06:57:19 2015 UTC,I'd argue that it's even terrible for that but the other tools suck as well
androiddev,3amyvs,bart007345,1 point,Mon Jun 22 10:16:15 2015 UTC,I would struggle with this even though I pride myself on my code and have been programming for 15 years.  I do tdd and that's not really possible outside of an IDE. I get something working and then go back and improve it for readability with the tests as my backup.
androiddev,3amyvs,el_bhm,1 point,Mon Jun 22 06:53:06 2015 UTC,"If I am ever asked to solve anything on a white board, I lose an interest in working for the company rapidly. Especially when they are  there is a catch or mainly one answer. Because I view those as masturbatory devices. I totally get the idea behind them. See how he works and solves problems. Problem being, those are usually already solved problems. Ones that usually took more than those (painful to an interviewer) 15 min to find the optimal answer. The answer you are actually looking for. Often it reminds me of watching a 10 year old solving an equation. You know the number. Outcomes are your dissapoitment or aproval.  Situation is quite different in the office when you have a giant WB. You actually solve a problem, often with coworkers. Real problem at hand that usually has two or more solutions. It brings satisfaction, and money."
androiddev,3amyvs,noisyjazzman,3,Wed Jun 24 09:21:19 2015 UTC,"That's a nice list, thanks. I'm in a similar position to the OP, except that I haven't started applying yet. Just preparing to do so (a return to dev after some years doing other things).  I would say though that it seems like a low bar. I've been learning Android for all of 2 weeks (and am new to Java), and can answer all the factual questions. Is the general knowledge of applicants really of that low a standard? And is this a US perspective? I'm Australian-based, and can't imaging many applicants wouldn't leap that bar with ease.  Whiteboarding can tricky because it's coding-as-performance so you can fall foul of the tension of the moment."
androiddev,3amyvs,ZakTaccardi,2,Sun Jun 21 23:40:54 2015 UTC,what is the deal with whiteboard coding? It's highly unrepresentative of real world coding.
androiddev,3amyvs,sourd1esel,1 point,Mon Jun 22 12:23:15 2015 UTC,Cheers this was insightful.
androiddev,3amyvs,markyosullivan,1 point,Mon Jun 22 04:02:36 2015 UTC,"Judging from your list, the 3rd party libraries, Java specifics and the coding on the whiteboard would probably most likely let me down.  I've never had to code on a whiteboard and I hate the thought of it, I know I'm most likely going to be asked to do it eventually for some interviews.  Would you be able to post what you'd be looking for in those Java specific questions?"
androiddev,3amyvs,sponezzis,1 point,Mon Jun 22 13:40:46 2015 UTC,"Could you (or anybody else, really) recommend some books/resources for learning some android dev best practices? I kind of fell in to android dev at my current job because it needed to get done and there wasn't anybody else to do it. Most of what I know about proper android practices are what I've gleaned from various StackOverflow questions."
androiddev,3amyvs,radixdiaboli,-5,Mon Jun 22 16:55:04 2015 UTC,What are the differences between Activity and Fragment?   One of them you don't ever need. =p
androiddev,3amyvs,lacronicus,11,Mon Jun 22 00:17:20 2015 UTC,"Looked at your CV, here's a few things:   3 pages is way too long. Cut it to one page. Drop most complete sentences, have multi-column lists, things like that. Recruiters want quick answers to their questions, and get enough applicants where they can toss CV's with multiple pages. I don't think headers need to be so big, things like that. Look at other CV's for ideas. This one is a big deal, and I'd suggest taking care of it first.  going with the last one, you can drop most text like ""As an Android Developer I have completed several Applications:"" the header is enough to get by on.  Highlight the upsides to the work you've done, don't mention the downsides. For example, ""The application, as shown in demo, has just a basic UI because of the short time we had to develop the prototype."" sounds like you're making excuses for not producing a solid product on a short deadline.  instead, focus on ideas like ""rapid prototyping"" and ""minimum viable product"". It's basically the same thing, but has a much more positive connotation.  ""Also began using Swift to develop iOS Applications, but had to stop because of time and work load limitations."" unless you've got something to show, I'd just throw it in the ""familiar programming languages"" and explain the situation if they ask.  I'm not familiar with the certificates under ""Qualifications."" Might just be being american, or it might not. If I'm not just being dumb, I'd make a point of either explaining what the mean, or dropping them. Also, if relevant, add a section about fluent languages (assuming these aren't related) ""Successfully completed a semester as Assistant System Administrator at CSLabs of Informatics Department at Athens University of Economics and Business."" - I'd focus less on the business title, and more on what you did. The other ones were pretty solid in that regard. Again, focus on how it's relevant to Android development. Maybe you led a team, maybe you collaborated, maybe you worked alone and showed personal initiative. Find something useful and run with it.    The CV is your elevator pitch, and it's pretty much the only thing recruiters have to go on. Making the ""perfect"" resume is an art, and I'd suggest learning all you can about it."
androiddev,3amyvs,lacronicus,3,Mon Jun 22 11:28:56 2015 UTC,"Thanks a lot for your reply. Regarding the Swift portion of the CV, i tried to replicate an Android App that i have built for an external source, into Swift for iOS. The result was pretty good and i could show it but it's not on the AppStore."
androiddev,3amyvs,CuriousCursor,4,Mon Jun 22 11:35:35 2015 UTC,"Cool. I'd say something to that effect then. ""Ported Android app to iOS using swift"" and explain the app store stuff if they ask. Give the reader the info they really care about, and skip over practically everything else. Talk about your work, why you're the one to hire, and skip over the circumstances."
androiddev,3amyvs,lacronicus,3,Mon Jun 22 11:43:22 2015 UTC,Great. Thanks a lot!
androiddev,3amyvs,CuriousCursor,2,Mon Jun 22 11:44:20 2015 UTC,"Also instead of writing ""can provide details if needed"", write the details in bullets. Write what tools you used to overcome what problems. Like:   Utilized Bla bla APIs to integrated bla bla feature"
androiddev,3amyvs,titaniumblight,2,Mon Jun 22 17:49:31 2015 UTC,"Yeah, you pretty much just want to use that phrase for references.   The people looking through your resume will not go out of their way to ask you for something, if it's not there, consider it lost. If you think it's important, add it. And, again, make it relevant."
androiddev,3amyvs,adrianmonk,1 point,Tue Jun 23 00:03:16 2015 UTC,"Exactly. When I'm interviewing, I'm already at the point where it's ""You got here because of your resume, let's see what you can bring to the table that's relevant to us.""  Most of the time, I don't even talk about the resume unless there's something that interests me on there.  It's like Tinder. We're never gonna talk about why we swiped each other right :p (ok that's a stretch lol)"
androiddev,3amyvs,CuriousCursor,7,Tue Jun 23 00:40:51 2015 UTC,"Ex-hiring manager here for Android and iOS developers. I hired a complete team of 8 Android and 8 iOS developers to work on 8 apps, 4 Android and 4 iOS. I, myself, am an Android-centric developer, so I always paid special attention to Android devs. On the iOS side, I had my team lead handle the technical portion of the interviews. I worked closely with recruiters and candidates. I can tell you the following:    recruiters are, generally, not technical types, they are sales people who win their business on making relationships with hiring managers like me. Most of the recruiters that I've dealt with use LinkedIn Pro to get leads matching search terms like ""Android Developer"", etc.. Good recruiters then cross-reference names and use more sophisticated tools to filter the list even further depending on the needs of the client. For example, gathering Business Intelligence data from LinkedIn about certain users is how LinkedIn makes money. Recruiters pay for this data because companies like mine pay a lot of candidates. So, make a really good LinkedIn profile with terms like ""Android Developer"", ""4 apps in the Play Store"", ""uses Material Design"", ""developing apps targeting api level 11 and above"", ""agile/scrum"", ""very fluent with Git and Github"", ""appreciates code reviews"", ""uses the pull request process"" Your LinkedIn profile is all about getting noticed by LinkedIn Pro's filters. Be sure to get endorsed by connections if you can. Get connected to other Android devs as well. The best way to do this is to attend a Meetup and shake hands with every person there and ask for their card. Your original question was about getting your CV in order, but really its about meeting people and getting noticed. I got almost all of my jobs because I knew someone working at the place BEFORE I showed for the interview. But, you will need to list skills and education about Android. If you don't have a Github account with some samples, then this is the place to start. Be sure to highlight your Github account. If your work must remain private, then adapt some of your favorite gists into something you can open source. Study up on Github on what Android repos are the most popular. Study those and list them on your CV.   I hope this helps a little."
androiddev,3amyvs,titaniumblight,6,Mon Jun 22 01:51:08 2015 UTC,"LinkedIn Pro's filters. Be sure to get endorsed by connections if you can.   Do endorsements really count for a lot? I've sort of avoided them because they seem like such a low-credibility source of information. I've had people offer to endorse me for skills that they can't possibly have any knowledge of, so it seems like it should be too easy to accumulate lots of meaningless endorsements."
androiddev,3amyvs,immranderson,1 point,Mon Jun 22 05:54:15 2015 UTC,They don't.
androiddev,3amyvs,CuriousCursor,1 point,Mon Jun 22 17:43:58 2015 UTC,"You are correct about endorsements being meaningless, but it is the context that is important. They are meaningless to me and you, but not to recruiters and LinkedIn. Those endorsements probably give you ""SEO juice"" in some capacity. Even if I am wrong, they can't hurt you."
androiddev,3amyvs,jlt6666,3,Tue Jun 23 00:50:21 2015 UTC,"When I interview a candidate, I'll chat and joke around with them a bit to figure out their personality. For the technical portion of the interview, I'll sit down with them and ask them to code out a simple app that displays a list of items. Each item in the list contains an Image and some Text. When you tap an item it takes you to another screen and displays ""Hello, Text of selected item"" It's completely open ended -- architectural decisions are up to them, but if they're unsure of the best way to build things out -- they're free to ask me any questions. They're also allowed to use the internet. After they're done, I'll review the code with them and ask them why they made the decisions that they did, and if there are any improvements they think could be made.  When I ask this, there are a few things I'm hoping for:  Are they using a RecyclerView or ListView? How?  Are they using Fragments or Activities?  Where are they putting their logic for their lifecycle methods?  Are they familiar with libraries that can make their lives easier?"
androiddev,3amyvs,JackBrush,1 point,Mon Jun 22 00:56:16 2015 UTC,"Thanks for your reply, but as i mentioned before, i can't get to the point of getting interviewed."
androiddev,3amyvs,jlt6666,1 point,Mon Jun 22 09:22:34 2015 UTC,"Interesting. I did something similar but I wrote a basic broken app which didn't show a list it was supposed to (and when it did, it showed the wrong thing) and they were supposed to fix around 6 bugs in 20 min, preferably without googling (because the bugs were simple).  For a longer interview, I might steal this idea :D  You also get to see how comfortable they are with the tools."
androiddev,3amyvs,EL_sasquatch,6,Mon Jun 22 17:52:00 2015 UTC,"Are you just not getting hired or are you not even getting interviews?  Where are you applying?  Are there any potential things you suspect you are doing wrong (like you are being asked questions in interviews and you don't know the answers?)  How many resumes have you actually sent out.  What area are you trying to find jobs in (city, state, country, whatever you are comfortable giving out)?"
androiddev,3amyvs,aldo_reset,4,Sun Jun 21 22:33:25 2015 UTC,I am not getting any interview chances. I ve sent out many resumes and trying to find a suitable position in various areas. I just wanted to leave my country and work in a competitive technology environment in another country.
androiddev,3amyvs,xqjt,23,Sun Jun 21 22:36:10 2015 UTC,I think relocation is what's hitting you.
androiddev,3amyvs,HaMMeReD,1 point,Sun Jun 21 23:27:49 2015 UTC,"If relocation is such a big thing, how do companies get to hire new people? I know a lot of people that got offers and after that they relocated."
androiddev,3amyvs,Deafdev,9,Mon Jun 22 20:08:01 2015 UTC,What countries (where are you and where are you trying to go)?  I suspect this is what is getting you.  Think about it.  You get two comparable resumes one is local one is from another country. The local one is just going to be a whole lot easier to deal with.
androiddev,3amyvs,CuriousCursor,1 point,Mon Jun 22 03:00:25 2015 UTC,"I've seen some great engineers have absolutely terrible resumes. Make sure you have somebody familiar with the industry objectively critique at your resume.  edit: not saying this is your problem, just something to be aware of."
androiddev,3amyvs,Deafdev,2,Mon Jun 22 05:02:08 2015 UTC,I posted my Resume. If you can take a look and give me any advice i would be grateful.
androiddev,3amyvs,bryanlogan,1 point,Mon Jun 22 09:23:35 2015 UTC,"I suspect your difficulties are mostly coming from visa issues, especially if you are applying in countries that already have vast amounts of engineers available (e.g. the US)."
androiddev,3amyvs,bryanlogan,1 point,Mon Jun 22 05:30:33 2015 UTC,"It makes sense then. Not getting ANY interview in a normal situation would mean that there is something very wrong with your CV and/or introduction mail. For a position in another country, you need to have a very strong cv. Depending on the countries, it can be very long and costly to bring a stranger, so you really need to have a profile that really stands out."
androiddev,3amyvs,CuriousCursor,3,Mon Jun 22 08:35:43 2015 UTC,"I do some interview process, in no particular order.  1) General Attitude  2) Understanding of Java and Android Ecosystem  3) Knowledge of build scripts (gradle preferred)  4) Some questions about pitfalls and problems commonly seen in android  5) Understanding of modern architecture concepts (dependency injection, rx, conscious uncoupling, messaging, etc)"
androiddev,3amyvs,CuriousCursor,1 point,Sun Jun 21 22:41:29 2015 UTC,"Thanks for replying, but i still haven't got the chance to get interviewed somewhere."
androiddev,3amyvs,CuriousCursor,2,Mon Jun 22 09:23:04 2015 UTC,"I'm in the middle of applying for Android positions so I can share my experience so far. I've been focusing on larger  companies, Facebook, Google and Microsoft, and I've gotten through several rounds of interviews and onsites, but haven't managed to get an offer as of yet. (so maybe my advice should be ignored.)  From what I've found, most of these bigger companies don't really care about your Android knowledge... At all. They're looking for strong fundamental software engineering skills and allow their smart engineers to.learn Android once they join the team. So you need to really understand you data structures and algorithms.   In my interviews so far, the Android specific questions I've been asked have been very basic. Viewholders, background threading options available in android, basic design questions. A Majority of the questions have been geared towards solving classic cs questions. (String manipulation, permutations/combinatorics, trees, etc)  I think if you want to find a good Android development position, you need to look at it the same way as any other software engineering interview. Improve your whiteboarding skills, interpersonal skills, and focus less on learning Android specific problems."
androiddev,3amyvs,amusice,2,Mon Jun 22 02:02:37 2015 UTC,It's just that i haven't got any interviews to be able to judge my whiteboarding skills and stuff like that.
androiddev,3amyvs,Euden,2,Mon Jun 22 09:17:50 2015 UTC,"Being a decent app developer isn't enough anymore. The job market is full of people who can make apps. What we're seeing a lack of is people who also have good devops, so on top of the usual coding skills look for people with CI, Gradle, Jenkins/TeamCity/GoCD, automated testing. oh and Git, I'm still amazed by how many developers have poor Git skills (and how many rely on Sourcetree)"
androiddev,3amyvs,Cephas00,1 point,Mon Jun 22 08:00:18 2015 UTC,"There's honestly nothing wrong with relying on Sourcetree or Smartgit to get things done quickly (or to organize things), but one should still know the command line and how it works."
androiddev,3amyvs,Cephas00,2,Mon Jun 22 17:54:25 2015 UTC,"Yeah, agree with that, most often I see it being used as a crutch though"
androiddev,3amyvs,Cephas00,2,Wed Jun 24 08:24:01 2015 UTC,"You do have an error in your CV.  Unless you've done systems administration for -8 months. I know when people have a ton of applicants, errors like this on a CV can be a first-step to screening.  Put an expected graduation date.  Companies don't want to hire someone who still has a year of school left."
androiddev,3amyvs,Cephas00,2,Mon Jun 22 13:55:28 2015 UTC,"Actually regarding this, there are companies like Google that don't even care about the Degree and require relevant work time experience."
androiddev,3amyvs,rodrigograca31,3,Mon Jun 22 16:15:30 2015 UTC,"Yes, not all companies care about a degree, but the ones that do, they'll want to see that there."
androiddev,3amyvs,CuriousCursor,1 point,Mon Jun 22 16:55:05 2015 UTC,-8   You still haven't fixed the problem though. It says October 2013 - February 2013 on your CV.
androiddev,3amyvs,thepoosh,1 point,Mon Jun 22 17:57:36 2015 UTC,What problem are you referring to?
androiddev,3amyvs,markyosullivan,3,Mon Jun 22 18:42:05 2015 UTC,"Dude, it says OCTOBER 2013 TO FEBRUARY 2013 on your resume. Unless you're a time traveler, you couldn't have worked from October to February of the same year.  Gosh, attention to detail man!  (sorry, I just really dislike when people don't read properly even when the problem is spelled out to them)"
androiddev,3amyvs,Cephas00,1 point,Mon Jun 22 18:47:39 2015 UTC,Sorry this was a typo cause I rewrote it from scratch. Haven't sent that one to anyone. I am still building it.
androiddev,3amyvs,shnuffy,2,Mon Jun 22 19:03:12 2015 UTC,"Oh okay. Well, I hope it's nice and good with the correct details once you're done with it."
androiddev,3amyvs,shnuffy,2,Mon Jun 22 19:08:00 2015 UTC,"Not a recruiter, but I do lead the mobile team at GotChosen & therefore hiring for it.   As far as Android goes, we start driving down whatever path you lead us down. So for example, if you answer a question about Fragments, we try to get to a point where we can't ask anything else, or find something you don't know just to see where your limits are. We are going to show you code, and ask what's wrong with it. This is where you should know a lot about different contexts, good practice, and bad practice theory. For example, if you see a static context, you should know that Activity is going to leak.   It's cool if you have apps up, but we are going to see how it looks in about 20 seconds, and then care more about how it works. Sample project apps aren't really something we are looking for when we ask for apps, we want a fully functional product.   As far as Java goes, we are going to ask you about data structures to see what you know and what you don't know.   We make you do two whiteboard problems. One is a really simple warm up problem, should be a loop and one line of code, yet, it takes some people 30 seconds (record in the office is ~19), and then some people 20 mins. The next we let you pick from 3 different problems that general focus around a data structure and sort, recursion, and a mix of the two. We don't expect you to get them right, and we don't expect syntax to be correct. However, it helps show your process, and at what point you feel like you need help. i.e., did you spend an hour on the last problem and never ask for help, even though we told you that you could? Another example is I asked someone to do it, and he challenged back, what are you going to learn from me doing this. I mean honestly, do you think you can learn anything about how I program from a whiteboard.... Nope, but I did just learn that if you get a Jira ticket you don't like you are going to complain about it.   Other than that, we want to know things like your experience with 3rd party libraries, Gradle, Dependency Injection, Unit Testing, etc. We don't expect everyone to know everything, but we want to know at what level you know about those things. It's also why we have Seniors and Juniors."
androiddev,3amyvs,shnuffy,1 point,Mon Jun 22 15:08:46 2015 UTC,So far this is the best process of hiring someone i have ever read online. Would be glad to get interviewed by you just for the sake of the experience :)
androiddev,3amyvs,moar_throat_yogurt,1 point,Mon Jun 22 16:18:28 2015 UTC,"I found this website which offers some pretty good questions / tasks to improve your chances at interviews for bigger companies like Google, Facebook etc: Link"
androiddev,3amyvs,marcouberti,1 point,Mon Jun 22 08:41:07 2015 UTC,"One thing I haven't seen mentioned - do you send a cover letter/email when applying for jobs?   Does it outline what you're looking for, and why your experience makes you someone to consider by referencing your CV?"
androiddev,3amyvs,cirion5,1 point,Mon Jun 22 08:51:46 2015 UTC,Check my #2 edit. I tried with and without but no luck..
androiddev,3amyvs,SpiderFan,1 point,Mon Jun 22 09:16:21 2015 UTC,"Just at a quick glance I would say your tone is far too casual.     During this period I also got down with using I decided to try my luck I had to abandon that part of Development.    To me these are all pretty big red flags.   You could easily create something succinct with a few bullet points   Worked on several Android Business to Business projects  Developed internal and client back end systems using Amazon Web Services Began using Swift to develop iOS applications   A few other points - don't make excuses in your CV.    C++(little experience, only during academic years) has just a basic UI because of the short time we had to develop the prototype.    Either have a layout where you can specify your competence level (Experienced, moderate etc) or just leave it out.  I typically see a ""Computer Skills"" section that covers languages, IDEs, usage of SQL, version control. All important things to say.  Also, it's a personal preference but I dislike it when a CV says things are ""available upon request"". Either include the information or don't mention it and let me decide if I want to know more.  Finally, the formatting is a little strange with your page breaks and line breaks. There are some phrasing/spelling issues (obviously you're not native - but try to ask someone who is to check over things)."
androiddev,3amyvs,stackinpointers,1 point,Mon Jun 22 09:49:37 2015 UTC,Thanks a lot for your advices!   EDIT #1:Fixed my CV according to your recommendations
androiddev,3amyvs,ObjectiveCopley,2,Mon Jun 22 09:51:12 2015 UTC,"You still need to be more succinct.   that my company had me assigned to.   Is entirely redundant. You could have something about projects you've worked on e.g.  Android projects   Project A - some high level description   Something A that was needed Something else good that I did    Back end projects   Project B   Built in Node.JS, using Amazon Web Services. Achieved X    For your IDEs you can just make a list - PhpStorm, Android Studio, Eclipse. People won't care that you used to use one and now don't. They just want to see you have awareness of tools."
androiddev,3amyvs,ObjectiveCopley,2,Mon Jun 22 12:22:23 2015 UTC,Thanks again. Will fix it according to your new recommendations.
androiddev,3aq2fa,sourd1esel,1 point,Mon Jun 22 16:11:05 2015 UTC,biases: I am member of this site:  gun.io
androiddev,3aq2fa,fredgrott,1 point,Mon Jun 22 20:02:15 2015 UTC,"/r/materialdesign has tons of great people, not sure if for hire."
androiddev,3aq2fa,wittywombat,1 point,Mon Jun 22 21:28:05 2015 UTC,Cheers thanks.
androiddev,3aq2fa,jarofgreen,1 point,Tue Jun 23 02:27:32 2015 UTC,"Local events. Find Local UI\UX\Tech events, turn up and start asking people there."
androiddev,3apugc,Deathwalkx,1 point,Mon Jun 22 15:09:45 2015 UTC,"Are you trying to delay an action/event/animation in an app? or just slow down the phone?  if its just an action/animation you can use postDelayed http://developer.android.com/reference/android/os/Handler.html#postDelayed(java.lang.Runnable, long)  If its to slow down the entire phone thats a different matter."
androiddev,3apugc,xkludge,1 point,Mon Jun 22 20:34:41 2015 UTC,"Ideally I,d like to slow down the entire phone, i.e make every app open with a 1 second delay as an example."
androiddev,3apugc,lacronicus,1 point,Mon Jun 22 21:00:27 2015 UTC,"I've not heard of anything that would let you do exactly what you want, but you could create a custom launcher that would satisfy your example.   Fork an open source launcher, add an arbitrary delay when user clicks an app, done. Not perfect, since you now have to convince people to use your custom launcher, and it really only works for the example you gave and nothing else, but it's something."
androiddev,3alcnp,ShampooBubble,100,Sun Jun 21 09:34:53 2015 UTC,"A consistent design across platforms can have benefits, but if that design is based on guidelines for another platform then you run the following risks:   Some users will dislike it and will leave you bad reviews. You can look at that as being ""people are dicks"", but it's a fact that if your app looks like a port from another platform then you will get some bad reviews in the Play store because of that. You may get less engagement in your app because of the failure to follow the correct platform guidelines - that will affect the level of custom you get. Check out videos like this one, showing Trello increasing engagement when they went Material - that's in a playlist with some similar stories. Your competitors will take business away from you when they get a Material designed app. Ask yourself - given the choice of two apps for competing companies, would you pick the one that has Material or the one without? Your company's unique selling point is going to have to be massively unique and valuable to make people pick the non-Material app.   Ask them how they'd feel if someone just dropped a port of an Android app onto iOS. Would that be an app they'd want to use? Would they be excited by it? Feel more or less loyal to the company's product/service because of it? Feel more or less inclined to purchase because of it?  We both know the answers to those questions. And those are the reasons that should be behind the use of native platform guidelines on each platform.  Be dispassionate. Present your concerns as risks - ones which you feel will impact the company's bottom line. Make sure you have put them in (polite) writing. And then, if they're still set on this, go ahead and do what they want you to anyway. They're paying for it. But use Material in some hobby projects at home, because you might be needing a new job in the future... :-(  (Edited for clarity)"
androiddev,3alcnp,philipstorry,12,Sun Jun 21 10:43:31 2015 UTC,"This is a huge advice, thank you :)"
androiddev,3alcnp,philipstorry,2,Sun Jun 21 11:00:53 2015 UTC,No problems. Good luck in your cause - I hope you get them to see sense!
androiddev,3alcnp,eleven_t,13,Mon Jun 22 17:08:27 2015 UTC,Great advice. I used similar argument to persuade my iOS loving colleagues  and it worked out great in the end. They get it now :>
androiddev,3alcnp,ghostsarememories,11,Sun Jun 21 10:58:54 2015 UTC,"Be dispassionate. Present your concerns as risks - ones which you feel will impact the company's bottom line. Make sure you have put them in (polite) writing.   Even if you plan to do a presentation, make sure to follow it up in writing!"
androiddev,3alcnp,jiminiminimini,6,Sun Jun 21 15:47:00 2015 UTC,be dispassionate is great advice. thanks
androiddev,3alcnp,markyosullivan,90,Mon Jun 22 00:44:38 2015 UTC,Companies doing iOS design for Android phones really pisses me off.
androiddev,3alcnp,adrian110288,21,Sun Jun 21 10:39:43 2015 UTC,Tell me about it mate! The designers at my company are in love with iOS anything I suggest for Android version of the app goes to bin with an argument that 'iOS version doesnt have it' FFS!!
androiddev,3alcnp,sli,14,Sun Jun 21 14:43:42 2015 UTC,"Even worse (for me): mobile sites that try to look and work like iOS apps. I'm not even mad, I'm just disappointed."
androiddev,3alcnp,ajpri,5,Sun Jun 21 17:32:53 2015 UTC,My bank's app... For Android...   Even worse it is the old iOS  (before iOS 7) design. All the app is just a wrapper consisting of a webview.
androiddev,3alcnp,MrUseL3tter,3,Sun Jun 21 23:24:57 2015 UTC,I haven't even seen a bank app in my country that isn't a hybrid piece of shit.
androiddev,3alcnp,ciny,2,Mon Jun 22 07:00:30 2015 UTC,"I'm a WP user, companies doing ios/android ui and ux for WP piss me off even more..."
androiddev,3alcnp,iudela,-41,Mon Jun 22 09:25:42 2015 UTC,LOL. Some of the most successful apps on Android are direct copies of successful iOS apps. Who cares what an Android nerd like you thinks.
androiddev,3alcnp,jimeux,37,Sun Jun 21 18:58:23 2015 UTC,"Google is unlikely to feature your app in the Play store if you don't follow its guidelines. Just show your boss any Android app from any of the top tech companies.  Don't underestimate the influence of the designer either. I've seen comments on Dribbble and the like that'd make any Apple fan boy proud.   I don't think the login screen is a total disaster as a user though. When people screw around with the action bar and normal position/behaviour of things, that's when I start reaching for the uninstall button."
androiddev,3alcnp,Rhed0x,23,Sun Jun 21 11:22:46 2015 UTC,iOS design on Android will make users hate the app. I wouldn't install it at least then.
androiddev,3alcnp,sli,17,Sun Jun 21 12:51:10 2015 UTC,The iOS look on Android feels like Gingerbread to me.
androiddev,3alcnp,Exallium,22,Sun Jun 21 17:35:00 2015 UTC,"I'm sorry if this is harsh but sometimes people need to learn a lesson the hard way. If your employer doesn't respect you enough to heed your advice, I'd give them what they want and let the users speak for themselves.  I usually handle these situations by making them aware that what they're doing is incorrect. If they still don't change, I give them what they asked for. It's their money, and their company."
androiddev,3alcnp,IWantToBeAProducer,15,Sun Jun 21 12:39:58 2015 UTC,"Yea. I would make sure that your dissent is documented, but don't be smarmy about it, or they'll hang you when they feel their design was a success."
androiddev,3alcnp,Taiosa,8,Sun Jun 21 12:52:47 2015 UTC,This is the route I took with a very iOS centered team who love anything and everything ios.  Instead of arguing I did what they said. Then I did a user evaluation with numbers that couldn't be ignored - it wasn't intuitive for people to use.
androiddev,3alcnp,Exallium,2,Sun Jun 21 15:51:05 2015 UTC,This is a great idea if you can get the user data :)
androiddev,3alcnp,Taiosa,2,Sun Jun 21 16:15:59 2015 UTC,What user data?  I personally run user evaluations in person because I can see and ask people about their thinking whilst using the app :). (Think-aloud model) If the problem is big enough you shouldn't need that many people to show it's a common problem. But the good thing with in-person evaluations is that you'll end up seeing problems you had completely never thought of! Very small and minor details that can make a big difference once improved. Often when we develop we get so used to using our products we can't see them with fresh eyes :).
androiddev,3alcnp,erwan,3,Sun Jun 21 21:52:56 2015 UTC,"The problem is:  * of the app fails it may not be clear that the non-standard design is responsible  * if they accept that it's the reason, they may not have the budget to redo the design from scratch"
androiddev,3alcnp,s73v3r,1 point,Sun Jun 21 17:01:07 2015 UTC,"Do the user evaluation that /u/Taiosa above suggested, but do it using a quick UI prototyping tool. Don't worry about functionality. Then bring your findings to them. That way there should be budget to get a redesign. Make sure you have Android users doing the evaluation.  Also, you might want to say that it will take more time because you have to do extra work on the look of the app because you can't use a lot of the stock widgets."
androiddev,3alcnp,SuperDNRS,11,Mon Jun 22 05:00:57 2015 UTC,Sadly the world is full of incompetent leaders. And by incompetent I of course mean leaders that are ignorant and stupid enough to ignore advice from the true experts – the actual devs. /RantOff
androiddev,3alcnp,ghostsarememories,6,Sun Jun 21 15:20:38 2015 UTC,"To be fair, he went to a design expert. Maybe not a good one, but a specialist nonetheless. A better (cross-platform) design expert might have highlighted this issue.  Now, it's up to the dev expert (just another kind of expert, not a true expert, no-one is an expert in everything) to make the case for separate android and ios apps. There are plenty of objective grounds to make the case on (dev time, maintenance time, app performance, effect of look&feel on store-rating and hence sales). Part of the job of the expert is to communicate their expertise effectively to the people who make the decisions.   Once the higher ups have all the data from the experts, they will then make a decision (usually based on time and money). It's up to the dev to make their case compelling."
androiddev,3alcnp,buyacasha,1 point,Sun Jun 21 16:04:20 2015 UTC,"Whenever I as a developer know more about my platform's design guidelines than the designer does, I conclude that the designer sucks and should be replaced. Someone who designs for mobile needs to know these guidelines by heart. They can then stray away from them as a consequence of an informed decision. If they don't adhere to the guidelines because they don't know any better then they are bad at their jobs."
androiddev,3alcnp,PT2JSQGHVaHWd24aCdCF,22,Mon Jun 22 11:19:09 2015 UTC,"My only advice is: be careful, don't get fired because of this."
androiddev,3alcnp,konk3r,22,Sun Jun 21 11:37:35 2015 UTC,"I don't know, I wouldn't want to work in a company that refused to take advice from their internal experts. I wouldn't want to be fired, no, but I have quit jobs for trying to use me as a dumb tool before."
androiddev,3alcnp,jrobinson3k1,13,Sun Jun 21 13:38:21 2015 UTC,"It's not like Android devs are in low demand. Get exactly what you want out of your job, because you're a highly desired employee."
androiddev,3alcnp,BikerMouseFromMars,4,Sun Jun 21 15:01:27 2015 UTC,because you're a highly desired employee.   This depends strongly on your location and your willingnes to relocate...
androiddev,3alcnp,thefizzingwhizzbee,7,Sun Jun 21 18:04:02 2015 UTC,"I am not a developer, I work on the business side. I try to stay up to date with programming changes and trends, but honestly I don't speak the language.   I have read some of the guidelines for material, and read some articles on it. I just don't get it. I don't understand how it is different than IOS design. I don't understand how shading a specific way is so impactful. An ELI5 for material design would be extremely helpful in trying to convince me to go that route.    Also, stats, show that material design engages uses better. Show that it converts better. Show that people are more likely to pay for a material design app."
androiddev,3alcnp,s73v3r,2,Sun Jun 21 14:28:50 2015 UTC,"I speak from myself as a user. If I find any single app built for Android that uses iOS-y design, I will be pissed, I will give rate maybe 2 (3 tops) and rant a bit. There's no single problem to this, it's everywhere, every swipe, click, every interaction that should be familiar to me seems out of place. Basically the company are alienating their users.  The statistic is a bit dissapointing because Lollipop is new. But if you're using Android Support Library then you can use Material Design from Froyo upwards.  I don't know about iOS, but I suppose Apple have their own guidelines too. So it doesn't make sense for me to use Apple's design in Android.  And thanks for reaching out to us, I really appreciate that."
androiddev,3alcnp,buyacasha,2,Sun Jun 21 14:42:00 2015 UTC,"That's cause you're too close to the platform. Most people won't go that far. They might not like the app as much, but they won't rate it poorly simply because it doesn't follow the design guidelines."
androiddev,3alcnp,IWantToBeAProducer,1 point,Mon Jun 22 05:03:22 2015 UTC,"I just don't get it. I don't understand how it is different than IOS design. I don't understand how shading a specific way is so impactful. An ELI5 for material design would be extremely helpful in trying to convince me to go that route.   It's not just about material design. It's about having the right components at the right places do the right thing. It's about the design language matching the platform so that users feel right at home because they recognise it and are familiar with. Your app should feel like it belongs. On top of that, every platform offers a set of UI components that fit their design guidelines. Using them makes the process smoother and cheaper.  Long story short, if you don't adhere to the platforms guidelines (But designers do have wiggle room there to make your brand and app stand out!), the app will most likely feel low quality.  At the end it just boils down to this: If you wan't a professional app and flawless experience, you'll need designers that know both platforms very well and are able to adapt the design where necessary."
androiddev,3alcnp,IWantToBeAProducer,10,Mon Jun 22 11:11:58 2015 UTC,"Side note: that screen isn't iOS specific either. I would find that to be an acceptable design on Android. From your description I was expecting to see a UINavigationBar, but then again this is only one screen.   I agree that you shouldn't make the two platforms look identical if that means mimicking one platform over the other, but if your design is unique to both platforms there really is no reason not to make them look the same."
androiddev,3alcnp,cappslocke,2,Sun Jun 21 12:50:50 2015 UTC,"no, I only show you 1 screen, the others are not general enough. The designer uses specific iOS, the nav bar, bottom menu. Although bottom navigation (like instagram) is acceptable. But the designer uses iOS mindset which I think would not be acceptable if they keep doing this."
androiddev,3alcnp,Phreakhead,1 point,Sun Jun 21 13:09:50 2015 UTC,"Yea, that's fair. If they are directly copying default ios controls that's bad. If it were something unique to share between platforms I would say that's fine."
androiddev,3alcnp,buyacasha,3,Sun Jun 21 13:41:14 2015 UTC,"If the designs aren't too specific to Android or iOS, boss is right. I disagree about the professionalism point; if the universal design is clean, aesthetic, easy to use.. users will appreciate something different."
androiddev,3alcnp,ghostsarememories,3,Sun Jun 21 15:18:09 2015 UTC,"I agree with this. The login screen looks nice. I think designers still have plenty of latitude in using elements of material design, while maintaining an app's unique branding.   I've talked to a lot of designers who said material design is nice, but if you follow it too exactly then you're basically usurping all your own unique branding with Google's branding.  As long as you swap out the appropriate icons (share, menu, settings icons especially), and have a decent working action bar, you can have a bit more freedom with the rest of the design."
androiddev,3alcnp,n4h0y,0,Sun Jun 21 21:01:10 2015 UTC,"While that is true, I'd still strongly advocate against it. Unless the design team is really really good at what they're doing, chances are the teams from Google and iOS did a better job and thought of more edge cases. In my experience, universal design is usually introduced because either the design team doesn't know shit and doesn't understand what UI guidelines are, the design team only knows one platform and doesn't know how the other platforms are different or someone from management / project owner get's involved."
androiddev,3alcnp,_N_O_P_E_,4,Mon Jun 22 11:17:06 2015 UTC,"When you're making your case, be sure to include the time and cost to develop and maintain IOS versions of built-in (or easily available) android controls (throughout the app, not just the login and across versions of both IOS and Android) . Also, don't forget any performance/memory costs."
androiddev,3alcnp,DominikTVDE,4,Sun Jun 21 15:44:58 2015 UTC,"Why is a ""design"" important? Because it allows users to feel familiar and comfortable with the application and helps them to intuitively use the app. Most android users don't give a damn about how iOS apps look. On the other hand apps that are designed differently from other Android apps will make the users feel strange and unfamiliar, this will lead to the perception that the app is not intuitive and hard to use."
androiddev,3alcnp,zimm3rmann,3,Sun Jun 21 17:02:20 2015 UTC,"iOS has design guidelines, Android has design guidelines and Windows has design guidelines. Show him the 3 documents and say that the branding will be universal but each version will be following the guidelines of the OS. This means quality. If he don't understand, it's time for a scotch my friend."
androiddev,3alcnp,tiguralom,7,Mon Jun 22 00:03:06 2015 UTC,"Say them its more expansive and slower to develop the app like iOS, Googles Design would be easier, faster, more stable and less expensive.  No boss can say no to theese arguments :)"
androiddev,3alcnp,HaMMeReD,4,Sun Jun 21 10:39:44 2015 UTC,Should scale better too.
androiddev,3alcnp,schwiz,4,Sun Jun 21 14:59:34 2015 UTC,"You have been brainwashed and your boss is right. Look at Afterlight. A beautiful, professional app and a hugely successful one featured all over the place in Google Play. A direct port of the iOS app. Not a hint of material design in it."
androiddev,3alcnp,RevolcFael4,1 point,Sun Jun 21 19:51:29 2015 UTC,"In the meantime we can ask iOS users to test our app. Got it, everyone's happy!"
androiddev,3alcnp,huopak,2,Mon Jun 22 10:35:06 2015 UTC,"In android you can do you Themes as flavors. Leave your default app blank and 100% holo/material/default theme with styles.xml integrated with blank/empty/placeholder styles, then make a build flavor, put in your custom styles and resources.  That way you can maintain two themes easily, and business can always have branding however they want, in a consciously decoupled manner from the UI."
androiddev,3alcnp,s73v3r,2,Sun Jun 21 16:44:14 2015 UTC,Perhaps a cost benefit analysis could help. Meticulously theming and writing custom views for every widget and view in the app is going to take a lot more time and the benefit of that is a universal app that will confuse native users who aren't using the other platforms and don't benefit from the universal ui.
androiddev,3alcnp,timothyjc,2,Sun Jun 21 18:02:54 2015 UTC,"From the words of an advanced user like me, the major selling factor for any app is updated visual guidelines. I love material design, I sometimes download or use an app just because it looks good. Don't get me wrong, iOS design is great too, but only on iOS. It isn't meant for Android. It is a different platform and has different needs. A universal design is only good if it works with all platforms efficiently and currently both platforms have different design languages. If it isn't material, I won't download it unless I have to. Any app developed today should follow at least basic material guidelines (colored status bar, icons, possibly navigation bar or hamburger menu) or they risk looking outdated and uncaring to their target audience.   You can show this to the company if you want. I'm not a developer, just a user who appreciates good design and getting things done properly."
androiddev,3alcnp,BenjaminGeiger,2,Sun Jun 21 18:46:09 2015 UTC,"Oh and side rant: I get the feeling that they hire me to do what they want, not to give advice or improvement. I mean, they shouldn't do that, they know nothing about android dev and yet, because some CEO wants it like that and I should just do it.   You should quit."
androiddev,3alcnp,eppingjetta,1 point,Sun Jun 21 18:58:23 2015 UTC,"Too soon, mate"
androiddev,3alcnp,jackhexen,1 point,Mon Jun 22 03:45:11 2015 UTC,No it's not. Just don't put the gig on your resume.
androiddev,3alcnp,LordRaydenMK,2,Mon Jun 22 05:06:54 2015 UTC,"If they are not listening to you, despite you pointing things out to them, then it sounds like you just gotta do the design they provide and take home your paycheck. Maybe next job you take, look for a more competent boss.  You can always do some cool Material Design app in your free time, for your portfolio/personal satisfaction/profit/keeping up the skills."
androiddev,3alcnp,fredgrott,2,Sun Jun 21 19:35:45 2015 UTC,"Regarding your side rant:  You have two options. You can change your company, or you can change your company."
androiddev,3alcnp,donrhummy,2,Sun Jun 21 20:35:02 2015 UTC,At least this design follows ONE of the two platform design concepts. Our app designers send me stuff that looks designed for the web .. in 2001. ::shudder::
androiddev,3alcnp,ghostsarememories,2,Sun Jun 21 23:36:45 2015 UTC,Non-material apps just LOOK OLD.
androiddev,3alcnp,donrhummy,2,Mon Jun 22 10:42:37 2015 UTC,There is a nice presentation about design failures on Android by Genymobile. Maybe it will help you. link
androiddev,3alcnp,ghostsarememories,1 point,Mon Jun 22 10:43:17 2015 UTC,Going bold with evidence! Thanks!
androiddev,3alcnp,sweYoda,2,Mon Jun 22 11:16:24 2015 UTC,Tell your boss that their users who use android devices are Already Trained to Expect Google style apps from using Google apps which are all styled as material..tell him explicitly that he is asking you to design android app designed to loose users not gain them
androiddev,3alcnp,potato0,2,Mon Jun 22 23:09:53 2015 UTC,"Go on Google's developer site and find their pages on design guidelines. highlight all the places that clearly state what's acceptable and what's not that contradicts the iOS design. Being from official Android website, your boss will see it violates Android guidelines"
androiddev,3alcnp,kw01sg,4,Sun Jun 21 14:44:29 2015 UTC,"From the bosses' point of view, so what if the app violates Google's design guidelines? They don't care about Google's (or Apple's) guidelines.  What they are interested in is the consequences. Will it be rejected from the app store? Will it sell fewer units? Will it get lower ratings (and as a result, sell badly)? Will it cost more to make? Will it cost more to maintain? Will it take longer to make? Concentrate on these things.  The thing is, if they violate Apple's guidelines, the consequences are higher because they are a stricter gatekeeper."
androiddev,3alcnp,ghostsarememories,1 point,Sun Jun 21 15:53:56 2015 UTC,"the boss, coming from an apple world will assume violating the guidelines will be bad for the app. he doesn't need to tell them it's allowed"
androiddev,3alcnp,sweYoda,2,Sun Jun 21 16:28:21 2015 UTC,"If the boss is just a Apple customer rather than developer, they may not even be aware of the concept or utility of UI guidelines, they might just like their IOS apps because they're pretty and work (on IOS).  They might also (mistakenly) think that keeping the look&feel the same will reduce development and maintenance costs compared to two separate designs."
androiddev,3alcnp,denley,3,Sun Jun 21 16:49:53 2015 UTC,"I am not saying it is wrong to be pushing for material design, but... ""I tried again that ""universal"" design won't look proffesional"" What? Just because you do not use material design doesn't mean the app won't look professional. I have no idea what your company is like or what the app is for, but there are benefits to having it look the same on all platforms for certain apps and/or companies.  Yes, sometimes as a developers others will not listen to your advice, sometimes you are right and other times you are wrong. Ultimately, it's the owners of the company who are responsible for the success or demise of the company.  You can only give advice."
androiddev,3alcnp,sweYoda,15,Sun Jun 21 10:13:59 2015 UTC,"Using iOS design language on an Android app most definitely does look unprofessional.  It doesn't necessarily look low quality, but one of the keys to looking professional is properly integrating with the platform. The design guidelines aren't Google's attempt to define ""what an Android app looks like"", which in turn defines what looks professional.   They also define basic UX elements, which are necessary to usable, much less professional."
androiddev,3alcnp,s73v3r,4,Sun Jun 21 10:42:56 2015 UTC,Gonna second this. Nothing says a poorly ported app than an app using iOS design patterns.
androiddev,3alcnp,tartangeek261,1 point,Sun Jun 21 14:12:48 2015 UTC,"Using iOS design language on an Android app most definitely does look unprofessional.   Not to someone who uses IOS day to day. It probably looks great.   The boss must be convinced.   Have him/her install a top-tier apps on IOS and use them, and then have them try the same apps on an equivalent spec Android device. Is the design different? Why? Do they like it? How do the store-ratings compare? How do the number of downloads compare?  Try blog examples of benefits from top level app companies (with executive summaries), breakdowns of increased costs or development time, data from participatory interactions from real users (real, real-users, not the dev's shills) comparing demo versions of alternatives."
androiddev,3alcnp,MaxJohnson15,2,Sun Jun 21 16:14:24 2015 UTC,"It just seems out of sync with other better designed apps if I don't use Google guidelines. And well, yes I will do what they want eventually, but i'm a bit bummed."
androiddev,3alcnp,rubsnick,0,Sun Jun 21 10:16:40 2015 UTC,"They are mere guidelines, just that, guidelines. It's Googles guidelines. It doesn't mean they are perfect or appropriate for every app. It's great with guidelines, but if everyone follows the same path we will have good looking apps where it's easy for users to use them because everything is consistent. Again, I am not saying it's anything wrong with that, BUT what you lack then is innovation and a way to stand out from the crowd. I don't know what company it is nor what kind of app, but for some it is beneficial to have consistency.   There will come more opportunities where your advice is valuable, stop being bummed out! ;)"
androiddev,3alcnp,BorgDrone,6,Sun Jun 21 10:26:41 2015 UTC,But what's the possible benefit of consistency? I would think it's rare for any single user to use the same app on both iOS and Android. I just can't see any value at all in cross-platform design consistency.
androiddev,3alcnp,philipstorry,4,Sun Jun 21 10:31:30 2015 UTC,"I would think it's rare for any single user to use the same app on both iOS and Android.   Good point, I will use this line :)"
androiddev,3alcnp,BorgDrone,3,Sun Jun 21 10:35:12 2015 UTC,"Here's one example: let's take Facebook it has a vast number of different user demographics. Some of which don't not handle change as well as others, for example - older people. Consider this scenario:  one of these people are using iOS and Facebook, for whatever reason this person changes to Android and installs Facebook now the design is completely different and the person is struggling too much with the interface and stops using it or takes the advice of their children to use the awesome Google+ app instead. This is just an example.   As a company, if you have a platform that works really well and brings in profit and you suddenly make changes it can both be a good thing, but it can also be a bad thing. The point being is that taking this risk (however small) is not yours to take unless it's your company.  Another example, perhaps your company is using the app for package delivery, I don't know, some kind of handling of goods or something. Your employees are used to the interface of iOS, but the manager wants to be flexible and change to Android at a moments notice if he/she does not like Apple anymore or he/she wants their employees to be able to use whatever phone they like. But he/she does not want there to be any hassle with because of a new interface.  Perhaps these examples weren't very good, I am just coming up with them on the spot. A problem with different interfaces is also that as soon as you want to make a change to the interface there might have to be two changes in different ways... double the cost for designers."
androiddev,3alcnp,philipstorry,1 point,Sun Jun 21 10:58:53 2015 UTC,"It's not that rare. However, I would think that most people who do use both platforms regularly are aware of both design styles, and would easily adapt"
androiddev,3alcnp,denley,1 point,Mon Jun 22 05:11:26 2015 UTC,This may have been said before but to have the app 'Universal' does not make sense. I would doubt People using the app on Apple devices are going to ALSO use Android. Material design as far as I can see is there not only to look nice...duh...but also is all about usability and uniformity on the Android platform. It is a hard slog trying to educate people who are not open to change and advice from someone who knows better. good luck with it all! Sounds like you need to work for yourself!? just saying! ;-)
androiddev,3alcnp,BorgDrone,1 point,Sun Jun 21 23:48:33 2015 UTC,Most casual users don't give a shit about material design.  It's only going to change again down the road and the smaller companies can't keep changing constantly with it.  Wouldn't be worth it.
androiddev,3alcnp,vemacs,1 point,Sun Jun 21 23:45:32 2015 UTC,Just do the bare minimum and Polish up your resume so that you can find a better job
androiddev,3alcnp,BorgDrone,-15,Sun Jun 21 17:29:05 2015 UTC,"Sorry to say this, but your boss is right.   In my experience it's better to have a custom design than use Google's guidelines. They will change their mind for Android n+1 anyway. Even if you did follow Material design, it'll still look out of place on the 99% of phones not running 5.0 or later."
androiddev,3alcnp,Cg2XHPxz,6,Sun Jun 21 09:55:48 2015 UTC,"In my experience it's better to have a custom design than use Google's guidelines.   I'm curious about your experience. It seems to be contrary to most other people's.   They will change their mind for Android n+1 anyway.   Wrong. Google I/O was within the last month - did you not see anything from it? Here's Matias Duarte's keynote speech on Material. Yes, there have been some improvements. Basically some new features and some slight tweaks - but it's much the same as it was before that speech.  So Android n+1 has been announced, and Material is still here - with some tweaks. Not only is Material still here, it's being actively refined and maintained, and Google are preparing to bring Material to website design as well.  Basically, your statement is provably wrong - and finding that proof is trivial.   Even if you did follow Material design, it'll still look out of place on the 99% of phones not running 5.0 or later.   Nope. I have two Android devices - a phone with Lollipop, and a tablet on Kitkat. Having a Material design on Kitkat is just fine - in fact, I like it because it makes the tablet feel a bit more modern. And gives me a consistent interface across the two devices, which is nice.  I think your advice is very wrong. Material is a good design system, and it has a number of benefits when used well."
androiddev,3alcnp,KickingLettuce,-3,Sun Jun 21 10:25:14 2015 UTC,"I'm curious about your experience. It seems to be contrary to most other people's.   Due to device fragmentation even if follows the guidelines it will still look out of place on the majority of devices. If you go for a custom design that is in line with your company's branding it's not nearly as annoying to users as a design that is tailored for the wrong version of the OS.    Not only is Material still here, it's being actively refined and maintained   I'll believe it when I see it. Google has been messing with their UI every 1-2 versions since the beginning. Not just giving things a new look but actively changing how things are expected to work. Stuff that was promoted in one version as the way to do things is suddenly discouraged and replaced by something completely different.   I love Material Design and think it's gorgeous, but I don't believe for one second that Google has finally made up their minds about how an Android UI should look and function.    And gives me a consistent interface across the two devices, which is nice.   How does it give a consistent interface ? It looks completely different from everything else in KitKat. The whole concept behind the way Android apps are built using Activities is to loosely couple components so they could be integrated with other apps and part of the system and everything looks like it's one consistent whole. This has been the concept behind Android since day 1. You're not so much building applications as you are building plugins for Android. Has Google abandoned this vision ? If so then can we please get rid of the concept of Activities."
androiddev,3alcnp,Phreakhead,1 point,Sun Jun 21 10:40:26 2015 UTC,"I'll believe it when I see it. Google has been messing with their UI every 1-2 versions since the beginning. Not just giving things a new look but actively changing how things are expected to work. Stuff that was promoted in one version as the way to do things is suddenly discouraged and replaced by something completely different.   Well, Material Design is supposed to fix that. As I said, they've updated it recently - but with small improvements rather than sweeping changes.  I'm not going to say that Material is the final form of how Android will function. But Material is supposed to go beyond Android and also into the web (via the Polymer framework).  If you've used the next-generation Inbox webmail interface that seems likely to replace GMail, then you've used Material on the web.  Given this, I'm unsure how you can remain convinced that Material is a flash-in-the-pan-for-one-version-of-Android.   How does it give a consistent interface ? It looks completely different from everything else in KitKat.   Do you know how often I, as a user, see KitKat?  Not very.  The KitKat tablet is a Samsung. So the launcher isn't the stock Android one anyway. (And I've since replaced it with Nova Launcher.) The only place I really see KitKat is in the device's Settings menu, and the notifications area. Both of which Samsung have customised anyway.  And that's fine. Because even when both my phone and my tablet were both on KitKat, there wasn't complete consistency between the two. My phone is a Sony Xperia Z1. The volume controls on it were completely different to the Samsung tablet's, or the Samsung phone that preceded it. I think that the Sony is closer to the stock Android experience, but it doesn't matter really.  However, if I fire up the Google Calendar app, it's consistent across both devices. If I fire up Sync for Reddit, it's consistent on both devices. Whatever app I fire up, I never notice any inconsistencies - Material Design meant a lot of developers looked at their apps, and the result is more consistency for me as an end user.  I think you're confusing consistency at the OS level with consistency for people's actual usage patterns. Due to the customisations from my device manufacturers, I'm never going to get the former (consistency at the OS level with Android). But that's OK, because I'm not spending all day in Settings or the notification tray. I'm spending all day in Inbox, Calendar, Sync for Reddit, Chrome and other apps. And there, I get consistency.   The whole concept behind the way Android apps are built using Activities is to loosely couple components so they could be integrated with other apps and part of the system and everything looks like it's one consistent whole. This has been the concept behind Android since day 1. You're not so much building applications as you are building plugins for Android. Has Google abandoned this vision?   Activities are a product of the design decisions behind Android - which was designed to function on memory and storage constrained devices. Activities are fairly consistent with that vision. Part of the original purpose of Activities was to force developers away from traditional patterns that work on desktops (which have plentiful resources). Or at least, that was my understanding.  I'm unsure why that has much to do with design consistency though. You seem to think I'd have a better, more consistent experience if all my devices only worked as their base OS works. I disagree - I like the fact that apps aren't prevented from ""upgrading"" their UX beyond what the OS provides. I'm not going to buy a new tablet just because I got a newer phone - or vice-versa.  I think we have very different ideas of what consistency means to the end user, so this conversation is probably never going to be productive. :-("
androiddev,3alcnp,Cg2XHPxz,4,Mon Jun 22 18:12:43 2015 UTC,73.6% of all statistics are made up
androiddev,3apud5,DarkAnother,3,Mon Jun 22 15:08:59 2015 UTC,An api running on tomcat can service significantly more requests per second than PHP while developing an api in PHP tends to be a less time consuming endeavor.  I usually lean towards neither and create an api using Node and Express.
androiddev,3apud5,ejackman,1 point,Mon Jun 22 18:45:41 2015 UTC,node for the win...fastest way to create API's
androiddev,3apud5,atioxx,1 point,Mon Jun 22 19:06:40 2015 UTC,http://www.django-rest-framework.org/
androiddev,3apud5,andybak,1 point,Tue Jun 23 07:54:20 2015 UTC,Sometimes django is a nightmare to get sorted.  Flask is ez mode.
androiddev,3apud5,kevelbreh,1 point,Tue Jun 23 09:13:01 2015 UTC,"Hmmm. I've never found Django a nightmare. If you anticipate the backend is going to grow, Django's a huge win in terms of functionality.  (and even if you don't anticipate it is going to grow, it usually does ;-)"
androiddev,3apud5,andybak,1 point,Tue Jun 23 17:40:05 2015 UTC,Only the initial setup I've found to be a bit convoluted. From there on out it is rather smooth sailing
androiddev,3apud5,kevelbreh,1 point,Wed Jun 24 06:52:27 2015 UTC,Not really though. I find Flask and Scotty way easier
androiddev,3apud5,cghio,1 point,Tue Jun 23 14:18:50 2015 UTC,I'm using Java + restlet for backend. Migrated old code from Golang so i can focus on 1 language.
androiddev,3apud5,AutobotSux,1 point,Tue Jun 23 00:00:28 2015 UTC,"Barring any other major criteria (known large scale, etc) I would use the language you're most familiar with, that usually seems to be the most important factor.  For my last backend I used Java Play framework 1.3 - https://www.playframework.com/ with mysql. I haven't gotten around to learning Play 2 because it didn't seem to provide many benefits and I like v1, but you might be better off going with 2 at this point overall. I then deploy on Heroku. Happy to answer any questions."
androiddev,3apud5,megamatt2000,1 point,Tue Jun 23 01:09:41 2015 UTC,"I built my backend with nodejs, express and mongo. I have never used JavaScript before but it was quite easy to build a simple API and database following tutorials. My logic is still written in Java and I only use JS for database read."
androiddev,3apud5,HaoChen,1 point,Tue Jun 23 05:54:13 2015 UTC,What were some of the tutorials you used? Quite Interested. Never used NodeJS for anything but would love to see what I can do! :)
androiddev,3apud5,imkieren,1 point,Tue Jun 23 10:43:00 2015 UTC,This tutorial is the best one in my opinion:  https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4
androiddev,3apud5,HaoChen,1 point,Tue Jun 23 11:58:31 2015 UTC,"My vote goes for Spring Boot, and if you want, you can use JHipster to bootstrap the app for you."
androiddev,3apud5,Zhuinden,6,Tue Jun 23 14:49:11 2015 UTC,Why obviously? You can use either Java or PHP to built APIs. PHP is the more common approach but Java is just as viable.   http://blog.takipi.com/java-micro-frameworks-the-new-trend-you-cant-ignore/
androiddev,3aoia8,changingminds,2,Mon Jun 22 05:14:20 2015 UTC,Im just using a textfield and a send button which then opens the mail app and adds the text + system data.  If you expect a lot of mails its probably better to use something else tho.
androiddev,3aoia8,T3KO,1 point,Mon Jun 22 12:55:40 2015 UTC,"If I sit down and type a long message and the app sends me to Gmail, I'd just be pissed. Plus it doesn't look very professional, I'm basically handing out my email id."
androiddev,3aoia8,T3KO,1 point,Mon Jun 22 16:34:43 2015 UTC,Because you dont want to click the send button in gmail or you dont want me to have your email?
androiddev,3aoia8,TODO_getLife,1 point,Mon Jun 22 16:58:39 2015 UTC,"Both, and it's cheap-ish."
androiddev,3aoia8,code_mc,1 point,Mon Jun 22 17:13:38 2015 UTC,"Do you want users to able to contact you anonymously? Because that's going to be open to a lot of abuse from spam and just anyone really.   At some point they are going to have to give their email address or contact information so that you can get back to them and so they actually send you something worthwhile.  I don't know what app you built, but if the user has to login to use your app, they've already given you information, so maybe send their email with their message to your backend via a feedback form in your app?  If you're app is serious in what it does, and not just a app for a bit of fun (like a game where they just want to play not talk to the developers) then people are more likely to send you an email and this is all a non issue. Nothing wrong with sending them to an email client in that case, we do it."
androiddev,3aoia8,code_mc,2,Mon Jun 22 23:46:34 2015 UTC,Use a webhost and write a small php/python script where you post the data to. Can't believe this hasn't been suggested...
androiddev,3aoia8,jarofgreen,1 point,Mon Jun 22 13:51:26 2015 UTC,"Well, I have no idea how to do that. Time to google. Anyways, do you know any copy-paste-able solutions? I can't imagine the code being much different in different cases.  *Apparently this deserved a downvote."
androiddev,3aoia8,vapid_chap,1 point,Mon Jun 22 16:37:28 2015 UTC,Well if you really have 0 experience with something like that the crashalytics solution might be better.
androiddev,3aoia8,morgazmo99,1 point,Mon Jun 22 17:25:10 2015 UTC,I'd be surprised and interested if there isn't a service for this. Certainly for websites there are several services that put a widget on your website for you and handle the data.
androiddev,3aoia8,TiberiusAbadon,1 point,Mon Jun 22 06:48:11 2015 UTC,Have a look at intercom. https://www.intercom.io/. They have just released an Android sdk for integrating.
androiddev,3aoia8,adrock3000,1 point,Mon Jun 22 08:31:26 2015 UTC,"I used Crashlytics, had a dialog which offered a place for the user to put their thoughts and optionally their email..  Once the data was collected I bundled it into a generated crash report.  For a small app, it seemed free and relatively full featured."
androiddev,3aop0u,DaveShredder,1 point,Mon Jun 22 06:38:26 2015 UTC,Google does not provide search volumes. Mobile Dev HQ and Sensor Tower provides some approximate stats on the search volumes within the Playstore.
androiddev,3aop0u,vinod_s19,1 point,Mon Jun 22 19:20:34 2015 UTC,I use MobileDevHQ for this. It's a useful guidelines but take it with a pinch of salt!
androiddev,3aovxw,SpaceRapist,6,Mon Jun 22 08:21:34 2015 UTC,"You basically sign up for every affiliate thing possible and put it in an app, track user completions, and pay the users a fraction of what you make."
androiddev,3aovxw,jargoon,-4,Mon Jun 22 09:08:02 2015 UTC,I see. So are there any guides on this sorta thing?
androiddev,3aovxw,Davis445,1 point,Mon Jun 22 09:13:45 2015 UTC,"MintCoins is one way to make money online.  There are many other free ways too.  Most sites will have some type of guide/FAQ page on them, so that may be helpful.  Davis  http://www.proof-of-payments.com/"
androiddev,3aodsu,CaddoSierra,3,Mon Jun 22 04:26:01 2015 UTC,You can do something in between: Define the layout for one item and then create the layout programatically by inflating the item's layout as often as required.
androiddev,3aodsu,Fellhuhn,3,Mon Jun 22 04:45:02 2015 UTC,"If the number of items is variable, i would use a listview.  I would define an adapater with my row layout so that i can use with 3 and 12803109 items."
androiddev,3aodsu,xsfotix,2,Mon Jun 22 08:19:02 2015 UTC,Why don't try both and see which works better?
androiddev,3aodsu,ueman,2,Mon Jun 22 12:27:10 2015 UTC,"It sounds like you will know the layout needs at design time, so I would use a linear layout and use includes for each child layout if they really are the same.   The added complexity of using a list view or recycler view is only worth it if you have an unbounded list of items and need the view recycling functionality."
androiddev,3anajx,mind_blowwer,3,Sun Jun 21 22:11:51 2015 UTC,"This give you a rough idea and what to actually do:  http://inthecheesefactory.com/blog/fragment-state-saving-best-practices/en  Remember, in all those lifecycles, the bundle savedInstanceState that was passed will never be null upon configuration changes. If you move from activity to activity, without triggering configuration changes (e.g. rotation), savedinstancestate will be null.   E.g. If you move from activity A to activity B, rotated activity B, then goes back to A, savedinstancestate won't be null on BOTH A and B. As long as there is any configuration changes, you can bet the savedInstanceState bundle being there. The only case I haven't tested is if from activity A, you go to activity B, rotate B, reverse rotate B, and goes back to A.  Hence a basic init strategy for any standard activity or fragments:  void onCreate(Bundle savedInstanceState){     if(savedInstanceState == null){         //first init     } else {                 //the below if condition isn't necessary since it'll always be null unless you have setRetainInstance(true) for a fragment.         if(myVar == null)          {             myVar = savedInstanceState.getParcelable(""my_var"")         //restore states to vars/views                      }     }             }   Alternatively, having a retained Fragment saves many future headaches albeit, for me personally, it just felt ""dirty"" since the same thing can already be achieved in a simple singleton initialized in your custom Application class."
androiddev,3anajx,bbqburner,1 point,Mon Jun 22 09:39:43 2015 UTC,"So if the object I'm using does not implement Parcelable and is from a 3rd party API, is my best course of action to wrap it in an object and implement Parcelable so I can store it in the Bundle?  I like the idea of the singleton, but is there any negatives of using this concept? Will it prevent views that should have been destroyed from being garbage collected? How do you clean up this data properly? For example, I think when the back button is pressed in a fragment, the data stored in the singleton for that fragment should be cleaned up. Would you do that in the onStop() method?"
androiddev,3anajx,bbqburner,1 point,Tue Jun 23 00:22:13 2015 UTC,"Yes. Just use the parcelable generator plugin for AS and then verify the fields (e.g. list, non parcelable property).  As for the second question, don't store your views in the singleton. Just your data. Rebind them to the views upon activity/fragment creation. You can clear them on Application exit/or onBackPressed"
androiddev,3anajx,r4md4c,0,Tue Jun 23 02:26:30 2015 UTC,"This might be useful  public void onSaveInstanceState(Bundle outState){      getFragmentManager().putFragment(outState,""myfragment"",myfragment); } public void onRetoreInstanceState(Bundle inState){    myFragment = getFragmentManager().getFragment(inState,""myfragment""); }           Read about putFragment and getFragment in FragmentManager."
androiddev,3anajx,izzzi,2,Sun Jun 21 22:55:55 2015 UTC,"This is unnecessary, the Activity class takes care of fragment state saving for you. All you need to do is implement the save/restore state functions in the activity/fragments for your own data.  See: http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/5.1.0_r1/android/app/Activity.java#1367"
androiddev,3anajx,izzzi,1 point,Sun Jun 21 23:42:42 2015 UTC,"What is considered your ""own data""? What is actually handled automatically? How do I restore the listview when the back button is pressed?"
androiddev,3anajx,pepefatha,1 point,Mon Jun 22 00:14:01 2015 UTC,"Your own data is anything you hold in collections, variables, etc. Data in views will also be saved for you (but not adapters!)"
androiddev,3anync,fadelakin,1 point,Mon Jun 22 01:57:06 2015 UTC,"I'm currently doing the same thing. Basically define all my layouts in layout-land(along with whatever additional qualifiers, i.e.; layout-land-sw700dp etc). Using the qualifiers you can define layouts for 7 inch tablets, 10 inchers, etc. Really easy.  I also fix the orientation in each Activity via the manifest"
androiddev,3anbdi,seventhwall,4,Sun Jun 21 22:19:09 2015 UTC,I believe you need to be 18 to validate a contract in the USA. (I am not a lawyer!)   But shit kids lie anyway and visit porn sites
androiddev,3anbdi,d36williams,6,Mon Jun 22 00:45:06 2015 UTC,Illegally signing a contract is a bit more serious than heading to pornhub at 16.
androiddev,3anbdi,Xethaios,1 point,Mon Jun 22 02:48:11 2015 UTC,"At least in Germany you need to register as company if your goal is to make any money. Only if your income (sales, ads) is so low that you just cover your costs it gets rates as hobby and gets ignored by the tax office."
androiddev,3anbdi,Fellhuhn,1 point,Mon Jun 22 04:32:11 2015 UTC,No such thing a minor can't enter a contract. Because it would be invalid in court.
androiddev,3am3yb,denley,4,Sun Jun 21 15:54:11 2015 UTC,Using Crashlytics (and other crash reporting tools) you will find bugs in everyone's code. This is normal. Is it ok to ignore? That's up to you to decide. Is it crashing a lot? Then it might be worth looking into a work around/etc.
androiddev,3am3yb,donnfelker,3,Sun Jun 21 16:07:05 2015 UTC,Well it sucks especially when its a framework crash like this. If its a library I'm using I will typically open an issue on their github page and post the stacktrace for them. Usually developers are thankful for the report and eager to fix the issue.
androiddev,3am3yb,schwiz,1 point,Sun Jun 21 18:29:47 2015 UTC,"It's good to know that it's a normal occurrence.  It's just the odd report here and there, and they seem far removed from my app's own code, so I guess I'll just ignore them.  Thanks!"
androiddev,3am3yb,dzjay,2,Sun Jun 21 16:35:31 2015 UTC,"Yes, I've seen reports with symantec in the package name."
androiddev,3am3yb,bonkersz,1 point,Sun Jun 21 18:19:52 2015 UTC,"Yes, this is normal.  I sent a feature request to the crashlytics folks to mark such crashes as something other than ""closed"" as they are not in my power to fix."
androiddev,3am3yb,ciny,1 point,Sun Jun 21 19:15:25 2015 UTC,"yup, samsung specific bugs, rom specific bugs, xposed plugins bugs... unless it's the same stacktrace over and over again I don't pay much attention to them."
androiddev,3am3yb,alex_li,1 point,Mon Jun 22 09:34:45 2015 UTC,The OpenSSLDigetContext class was removed from AOSP about a half year ago. It looks like it had some finalization issues - see https://android.googlesource.com/platform/external/conscrypt/+/4bff0a1%5E!/
androiddev,3ao1rm,FenrirAB,1 point,Mon Jun 22 02:26:40 2015 UTC,"Most/all reddit apps use the reddit api. Check if the site you're making an app for has one. If not, you'll have to scrape the site (I've had success with jsoup) and figure out how to display it. Unfortunately, WebView won't let you create your own layout.   If you're planning on publishing this, you need to make sure that the site owner is OK with this, and get permission in writing for an appeal if and when Google decides to ban your app.  Developer Distribution Agreement   5.5 You represent and warrant that you have all intellectual property rights, including all necessary patent, trademark, trade secret, copyright or other proprietary rights, in and to the Product. If You use third-party materials, You represent and warrant that you have the right to distribute the third-party material in the Product. You agree that you will not submit material to Store that is copyrighted, protected by trade secret or otherwise subject to third party proprietary rights, including patent, privacy and publicity rights, unless you are the owner of such rights or have permission from their rightful owner to submit the material."
androiddev,3alce4,trying222,15,Sun Jun 21 09:29:48 2015 UTC,"Just started @ NY Times and its pretty damn amazing.  The tech stack is awesome,  Everything is built on Groovy, Dagger and RxJava.  Being a larger company allows working closely with Google on new tech, for example Smart Lock was premiered at IO with NY Times app as the sample prior to anyone else having access to it.  Its nice to work somewhere that puts enough emphasis on Android specific design to win  a material design award @ IO.  Edit: shameless plug -  currently hiring."
androiddev,3alce4,prlmike,2,Sun Jun 21 14:04:22 2015 UTC,"Not the biggest Groovy fan (prefer Kotlin), but RxJava and Dagger! Awesome!"
androiddev,3alce4,ZakTaccardi,1 point,Sun Jun 21 16:39:09 2015 UTC,"Very cool, this is the kind of answer I was hoping for.  While I'm personally looking for west coast companies, it's great to hear examples like this."
androiddev,3alce4,donnfelker,10,Sun Jun 21 23:22:22 2015 UTC,"This is 100% subjective to your expectations of a traditional 'job'. If you like working a ton of hours, for less money, with a small chance of a huge success, the maybe startups are more for you. If you like working 8-5 and then going home to tend to your garden, well then you'd be more in the corporate arena (well-established companies, etc). If you like to always be working on different things, then contracting/consulting might be up your alley. Every one of them has pluses and minuses. Just because a company releases cool open source or has challenging problems doesn't mean it will be interesting to you (though it may be fascinating the next person). Ultimately its about what type of life you want to live and where you can best find a match to your desired lifestyle."
androiddev,3alce4,m0zzie,2,Sun Jun 21 16:12:06 2015 UTC,"This is brilliant advice.  It's something I've really figured out for myself recently, but you've put it into much better words than I could have."
androiddev,3alce4,danoz73,2,Mon Jun 22 01:14:41 2015 UTC,"If you are interested in serious technical challenges surrounding Android development, look for applications that bump up against the massive hardware diversity in the ecosystem. This includes video/media recording/encoding, high quality geolocation implementations, envelope-pushing UI challenges, etc.  Ideally... pair those challenges with a significant user base in which the hardware diversity is represented in full and a user base that loves your application.  Learning will come in any environment that has the above characteristics, but if you want to learn from more experienced devs, try looking for later stage startups or a larger (but still innovative) company that have those qualities. If you want to learn from your own mistakes (and you will make many of them), try a smaller startup that already has good traction."
androiddev,3alce4,sarcasmguy1,-1,Sun Jun 21 17:30:32 2015 UTC,"I'm not an android developer (web developer) but look for a place that embraces creativity and testing the boundaries. It seems like you are interested in creative work and work that is bleeding edge. A simple 9 to 5 job won't really suit you (I think) as those can become very monotonous and boring quickly.   A startup would work nicely cause you will have to push personal boundaries and really think out of the box to make something a success. Also, as a startup, the hours will be much more flexible. I am currently at a company that is fresh out of startup (2 years old). I have to put in at very least 7 hours a day, but the time doesn't matter (unless we are on a very tight deadline).  Also, contribute to some cool open source projects you see on Git. Companies looking to hire really do look at GitHub a lot for potential programmers. It can also keep you busy and interact with other developers.  Edit: spelling"
androiddev,3aooqx,dragosholban,7,Mon Jun 22 06:34:12 2015 UTC,"Saving password in Shared Preferences. AsyncTask which is controlled by Fragment. getting EditTexts in each individual method. You could initialize your variables in onCreateView. Blindly going with in getActivity(). If you have flaky internet connection, and you close the app before AsyncTask has performed the task, you'll get NPE because Activity is already detached. Text values stored in pref and sent to the server might be different. I could change the edittext value when asynctask is connecting to the server. getActivity().finish(). Why is a fragment controlling when to shut activity down?"
androiddev,3aooqx,jayrambhia,2,Mon Jun 22 07:00:24 2015 UTC,"some caveats on this.  We have a number of apps using this native approach and we know have to go back and replace them with a single webview implementation.  The issue is that an organisation has to create an endpoint to submit the username/password to and this has been hacked numerous times for us. This may not apply to your situation but worth thinking about.  Also, I was watching one of the Udacity courses from Google and they said not to implement your own login screen if possible and use Google/Facebook/etc. Makes for a better UX."
androiddev,3albr7,Ziem,1 point,Sun Jun 21 09:17:30 2015 UTC,"Honestly hosting an artifactory instance is so easy, it's open source, provides group/user permissions (with encrypted password) for repositories and is very easy to backup/restore.  The only issue is that it requires somewhere around a gig of ram but that's not much of an issue really."
androiddev,3albr7,CuriousCursor,1 point,Sun Jun 21 22:25:34 2015 UTC,"if you're hosting your lib on github, jitpack works really well"
