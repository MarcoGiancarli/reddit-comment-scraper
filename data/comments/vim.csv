vim,3e2bbf,SaltyChimp,3,Tue Jul 21 12:22:32 2015 UTC,"if i were you, i would make a clean rc and see if that fixes it. you also might want to post the file so we can try to help you better"
vim,3e2bbf,senorsamuel,3,Tue Jul 21 13:35:58 2015 UTC,Post your vimrc.
vim,3e2bbf,PornFreeWarrior,1 point,Tue Jul 21 13:41:51 2015 UTC,"On windows? Check $ HOME is set, newer windows versions don't."
vim,3dxqih,sgoody,16,Mon Jul 20 12:05:15 2015 UTC,I think of myself as a command line user. Vim is my text editor. I am reluctant to take on any additional complexity.
vim,3dxqih,Soyiuz,3,Mon Jul 20 13:05:03 2015 UTC,"Exactly. The terminal is my IDE, not vim. I use vim to efficiently edit text files, which is what it's very good at. For whatever other stuff I need, I'll use the array of other small, modular tools I have in my toolbox.  If you're looking for a big old feature-bloated IDE, use emacs."
vim,3dxqih,csreid,5,Mon Jul 20 21:18:01 2015 UTC,We are the knights that say *nix! ::I'll show myself out::
vim,3dxqih,Soyiuz,31,Tue Jul 21 00:02:00 2015 UTC,"I do. I tried emacs + evil out of curiosity and still keep init.el that I like to play with/tweak from time to time. But for me vim wins and here's why:   plugins are designed with vim philosophy in mind; when I install new vim plugin I know that if I end in some weird buffer I can navigate it using hjkl or just type :q to quit it. In emacs, for example, I got confused by emmet plugin not expanding as it should. I tried something like div*5 and it would only create one div. Why? Because emacs emmet plugin was designed with emacs in mind and emmet's author didn't consider that you can use emacs in normal mode and not have you cursor after sentence rather that 'on' last letter of a sentence. When you're using emacs you have to constantly tweak everything to get it work in vim-like way. infinite extensibility in itself doesn't really mean anything; I find it that having a solid set of defaults and capable API is better than being able to change anything at anytime. Stuff like having terminal in your editor, file explorer, etc. doesn't really matter that much to me since I have other tools capable of doing that. I don't feel the need to have mail client, rss reader or irc in my text editor. I don't really use that many plugins. My most used ones are probably YCM (which I didn't find good enough alternative on emacs side) and syntastic. Other than that it's default vim features that are more important to me. Recursive macros, undo, etc. And they sometimes bug out in unexpected ways when using evil.    What are your reasons for sticking with Vim rather than moving to Emacs+Evil?   The question should be rather 'What is my reason to move to emacs+evil rather than sticking with vim?'. You should adapt your environment to yourself rather than trying to adapt yourself to your environment. Did you try out emacs+evil because one day you thought to yourself 'man, I wish I could extend my editor in whatever way I want' or just because it seems like it's hip thing to do recently?  Also what do you mean by 'not as good as'? Good at what? How did you measure emacs 'goodnes' vs vim 'goodnes'?"
vim,3dxqih,PornFreeWarrior,11,Mon Jul 20 13:06:18 2015 UTC,"Well put. Emacs does better everything that's not more or less directly related to the actual EDITING. But I don't really need most of the extra stuff Emacs offers because I'm looking for a simple editor, not a Lisp environment. I'm actually going to use emacs and evil when I finally get into Common Lisp - just like I use any other IDE along with Vim for other languages.  Besides, Vim as an editor is really better IMO. It's easier to configure and you have the established environment where everything is consistent and everything about it (even vimscript) is made with editing in mind. Vim covers 99% normal editing needs and the config is nice to use.  Also funny how downvoted this thread is on a vim board."
vim,3dxqih,wienerboat,4,Mon Jul 20 15:33:52 2015 UTC,"Apart from general curiosity, I was lured over by things such as folk suggesting that certain Emacs modes offer greater integration with the languages, e.g. that for something such as JavaScript Emacs better understands the semantics of the text and that plugins/modes were by extension more featureful when it comes to manipulating text.  Don't get me wrong, I'm perhaps not that much of a power user that I could necessarily tell the difference, but I konw that for both Emacs and Vim you need to invest a serious amount of time to reap the benefits, so I was willing to go into using Emacs with an open mind that there would be riches to be had.  EDIT: For the bits of customisation and bug fixes on other plugins that I attempted I also found VimScript to be totally alien and bizarre, given that I am never going to be very actively developing my text editor I took a look at Emacs Lisp and saw it seemed to be much more natural and obvious."
vim,3dxqih,BluddyCurry,12,Mon Jul 20 14:18:48 2015 UTC,"I also keep wading into emacs once in a while. However, now that neovim is being developed, I don't think emacs has much of a future (as in, it'll survive, but it won't thrive). Emacs+evil gives you a lot of the things we want as users, but it's all locked into the emacs-lisp ecosystem. This is the wrong way of doing things. What you really want is editor-neutral tools and scripting languages that can communicate with any editor, and this is what neovim offers with its plugin model. Vim is good enough for me now, and neovim should take over once it's more mature."
vim,3dxqih,Sean1708,5,Mon Jul 20 14:36:39 2015 UTC,Have you given neovim a try recently? It's completely replaced vim for me.
vim,3dxqih,OriginalSyn,1 point,Mon Jul 20 18:41:29 2015 UTC,"It has for me as well, for the most part, but my favourite xdebug plugin isn't working so I have to switch to regular vim when debugging php code.  :("
vim,3dxqih,Sean1708,1 point,Mon Jul 20 18:53:37 2015 UTC,"That's a shame, do you know why? It's the first time I've seen a plugin not work on neovim."
vim,3dxqih,OriginalSyn,1 point,Mon Jul 20 19:09:53 2015 UTC,Neocomplete is another plugin that doesn't.  I switched to YCM until Deoplete is stable.
vim,3dxqih,Sean1708,2,Mon Jul 20 19:34:44 2015 UTC,"Oh yeah, I'd forgotten they hadn't sorted if_lua out yet."
vim,3dxqih,OriginalSyn,1 point,Mon Jul 20 19:44:44 2015 UTC,Oh an the reason that DBGPavim doesnt work is due to Issue #80 in the python-client.
vim,3dxqih,macbony,2,Mon Jul 20 20:47:14 2015 UTC,"I was on neovim for a few months, but then they made a change that causes me to get extraneous keypresses when exiting insert mode so I dropped it. The issue's been ongoing since February and there's no indication it'll actually be fixed anytime soon, though tarruda is working on it. I wish they would have just reverted the alt-key junk instead of leaving nvim broken on a platform for the last >5 months.  https://github.com/neovim/neovim/issues/2093"
vim,3dxqih,Michaelmrose,1 point,Mon Jul 20 20:32:25 2015 UTC,"Most relevant piece  "" Its just a problem with how terminals represent the alt modifier. With its default settings, tmux will wait 500 milliseconds after a escape byte is received to pass it forward. So if you press esc and after 200 milliseconds press j, tmux will send esc + j together which will be parsed as alt+j by neovim. Vim does not have this problem because by default it doesn't recognize the alt modifier in terminals, so esc + j are interpreted as two different key presses. There's nothing I can do about this without taking the ability to parse the alt modifier in arbitrary keys.  The problem reported by @aeruder is the same, but the reason it is not fixed by lowering the timeout is because showmatch uses a sleep function which causes a lag that results in esc+j arriving together in the input buffer.  The only idea I have for fixing this issue is to run the TUI in separate thread. Since it is something that will have to be done for the gtk UI, I will defer fixing this issue to a later time."""
vim,3dxqih,fewforwarding,1 point,Tue Jul 21 03:45:21 2015 UTC,It sounds like I'm in the minority but I refuse to use an editor without colorschemes and a nice gui.  Gvim for me. maybe nvim has colorschemes but nothing feels as nice in the terminal
vim,3dxqih,glacialthinker,1 point,Mon Jul 20 21:27:19 2015 UTC,"My colorscheme is almost identical (very slight differences in shades) between gVim and vim in urxvt. The differences are because the terminal colors come from a palette of 256, so the colors don't match exactly. GUI... I turn off the menu and don't use a mouse anyway.  The terminal also has the advantage of combining glyphs from several fonts, to fill in the unicode symbols which might not be in your primary font."
vim,3dxqih,Sean1708,1 point,Mon Jul 20 23:41:38 2015 UTC,"I keep trying to move to a GUI but I've never found one that I liked. But I use iterm2 so the terminal is just an Alt-Space away and loads up instantly, plus it has true-colour support do there's very little difference between it and a GUI."
vim,3dxqih,bilog78,6,Tue Jul 21 07:06:49 2015 UTC,"However, now that neovim is being developed, I don't think emacs has much of a future (as in, it'll survive, but it won't thrive).   I assume you're talking about “emacs as an alternative to vim” here, right? Because I don't think the introduction of neovim will have any impact whatsoever on emacs usage, and I say that as someone that has no love at all for emacs. The two cater to completely different crowds, in terms of mindset. There is absolutely nothing that can happen in the *vi* world that will significantly affect emacs usage, and the only thing that can happen in the emacs world that would affect *vi* users would be a revolutionary restructuring of the ecosystem to be more modal-friendly, which is never going to happen anyway."
vim,3dxqih,BluddyCurry,4,Mon Jul 20 18:22:13 2015 UTC,"Yes. There has been an exodus from vim to emacs+evil. Emacs has traditionally had a small user base, while vim has had a relatively large one. I think once neovim really takes off, this trend will stop and reverse itself, and emacs will stay with its small group of users."
vim,3dxqih,bilog78,1 point,Tue Jul 21 01:57:57 2015 UTC,"Ah, yes, for that I agree, neovim is quite likely to bring back the evil turncoats ;-). It'll probably take some time, but at the speed neovim is making progress it might actually be pretty soon."
vim,3dxqih,frumsfrums,7,Tue Jul 21 06:40:25 2015 UTC,"I just moved too, and share your perspective exactly. :D  My reasons for moving were to explore the plugins (magit, org mode, Tuareg mode, Haskell mode), and for the client-server model. Honestly though, they are not that much more awesome than vim's equivalents that I'd swear by Emacs... Like, I've read about how magit is better than fugitive, but I'm not that much of a power user of either to appreciate it yet I guess. And the client-server thing doesn't really bother me that much, to tell the truth; I get the occasional pause from Syntastic and CtrlP, but it isn't unbearable. neovim and neoterm cover Emacs' REPL use cases somewhat.  In all, I've realised that what I want out of Emacs is vim, with all its nuances and quirks, just without vim's downsides. For me, and others with this mindset, maybe it's a better idea to wait for and support neovim than to leap into a new ecosystem.  That said, I'll still use Emacs for certain things -- use the right tool for the job. I just prefer vim as my general-purpose editor. In a large Haskell or OCaml project I'll probably give Emacs another shot. Like you said, Evil's feature-completeness is great.  On a side note, I saw this video and thought it was pretty funny that they were bashing Emacs Lisp when one of the reasons I was moving was to have an elegant language for extensibility. :D"
vim,3dxqih,flukus,4,Mon Jul 20 14:26:52 2015 UTC,"In all, I've realised that what I want out of Emacs is vim, with all its nuances and quirks, just without vim's downsides. For me, and others with this mindset, maybe it's a better idea to wait for and support neovim than to leap into a new ecosystem.   This is it for me too. Every time I hear someone say ""vim is not an IDE"" it seems like such a cop out for the things vim doesn't do well. It has a make command built in for god sakes, it is an IDE. It just doesn't have the power of a real plug in language.  Hopefully neovim + lua will open up some more possibilities."
vim,3dxqih,tuhdo,2,Mon Jul 20 23:07:49 2015 UTC,"Yes, it's more awesome. You just haven't used it enough. For instance, if you haven't use Helm and Flycheck, you don't know Emacs yet. The REPL, it's more than just running the primitive REPL in terminal. What you get with running REPL inside Emacs is that the REPL is integrated with the whole system. For example, if you run a REPL inside Emacs, you get all Vim editing features provided by Evil in the REPL, and everything that every package in Emacs offers. Or you can use the code completion package in Emacs to do something like this. The REPL is much much more than just for entering code and see result.  Emacs Lisp maybe terrible compared with other Lisps, but it's mile better than VimL and it has a proper development environment, that is Emacs itself."
vim,3dxqih,StorKirken,2,Mon Jul 20 18:34:25 2015 UTC,"Regarding your example, isn't that already doable in the bpython repl? What's the benefit? Vi-like movement can be had by running the process from a tmux pane or a neovim :term."
vim,3dxqih,tuhdo,1 point,Mon Jul 20 18:59:20 2015 UTC,"Python is just an example. In general, REPL based languages when integrated with Emacs looks like that. And it's not just Vi like movement but Vim and evey editting features you added via plugins. Imagine you can use EasyMotion or auto pair closing in any REPL."
vim,3dxqih,tuhdo,1 point,Mon Jul 20 19:05:37 2015 UTC,"Here is another example how a REPL is supposed to be integrated. Or even better, integrated directly with Emacs through Org."
vim,3dxqih,ikirudennis,6,Mon Jul 20 19:18:31 2015 UTC,"I had also heard wonderful things about orgmode.  Have you tried vim-orgmode: https://github.com/jceb/vim-orgmode/.  I have not used it very much, but it does seem quite nice."
vim,3dxqih,sasquatch007,5,Mon Jul 20 12:17:31 2015 UTC,"I did use it a good while ago, but I never used it to the extent that I've used org-mode, so can't comment. Certainly it did seem to be ""ok"".  To be fair though, I've decided that I don't need the mental load of learning a ""system"" just for notes/todos and I've fallen back to todo.txt and markdown."
vim,3dxqih,tuhdo,6,Mon Jul 20 12:43:43 2015 UTC,"I've also experimented with Emacs and evil-mode. Multiple times. As well as Spacemacs. I like Lisp. It's definitely better than Vimscript.  Thing is, every time I try Emacs, I end up spending absurd amounts of time configuring and installing packages, and never quite getting everything working right. Eventually I quit in frustration and go back to Vim.   Here's what I eventually realized: Configuration is not a positive. If you feel the need to customize or configure or install plugins, it's a sign that something is wrong with the program. Why doesn't it do something reasonable to begin with?   On Emacs, that is a clear indication that there is a lot wrong... including the default (insanely bad) keybindings.  On Vim... well, there's a lot wrong there, too, really. I mean, look at all the options that the large majority of users are going to want enabled, but are disabled by default. Still, though, you get a good text editor with a minimum of configuration, and I've finally learned to just stop screwing around with it. (Well... not entirely. New textobjs are too good to pass up.) My text editor is my text editor, my shell is my shell, my window environment is my window environment."
vim,3dxqih,sasquatch007,2,Mon Jul 20 14:29:15 2015 UTC,"You are using stock Vim. I think people who switched to Emacs want more from Vim with plugins, and is unsatisfied with what it offers."
vim,3dxqih,tuhdo,1 point,Mon Jul 20 18:28:45 2015 UTC,"I used to use lots of plugins. And that was the source of my frustration. Constantly tinkering and adjusting and fixing a program that doesn't behave the way I want it to is not productive, regardless of whether you're doing it in Lisp or Vimscript. This is my point. If you have to use lots of plugins, either the program you're using is crap or you don't understand it. (Don't take that statement too literally or seriously.)"
vim,3dxqih,sasquatch007,1 point,Mon Jul 20 19:37:24 2015 UTC,"A lot of plugins improve workflow significantly. For example, in Vim it's much more difficult to get Unite working i.e. compile C code. In Emacs, you get it for free: simply download the package from the package manager, and done. It also works cross platform.   Have a look at my old comment for what powerful features 3rd party plugins can provide."
vim,3dxqih,Wiggledan,2,Tue Jul 21 04:40:03 2015 UTC,"Sure, some of those are neat. And I'm aware of how easy it is, in theory, to install Emacs packages using the package manager. I've done it; I've used Helm and Projectile and a pile of other Emacs packages.   But:   I don't want most of that stuff; The stuff I do want, I mostly don't want as part of my text editor; The stuff I do want in my text editor, I don't want to have to download, install, and maintain a package for, because that always ends up being more work than it's supposed to be.    I think the root cause of all these Emacs (and Vim) packages is our crappy computing environments. It's like we're trying to get away from the idiotic design decisions made over decades that led to the environment we're now stuck in. We try to just shove the whole development process into our text editor so we can forget about all the other stuff. I sympathize, but I don't think it's the right solution."
vim,3dxqih,bakuretsu,2,Tue Jul 21 05:27:45 2015 UTC,Good ol' Unix philosophy: do one thing and do it well.
vim,3dxqih,gumnos,5,Tue Jul 21 14:08:27 2015 UTC,"The trouble with emacs package interfaces as an evil user is that emacs packages are generally designed to follow emacs conventions. ""q"" to close things, ""g"" to refresh things, ""C-u"" as a modifier key to invert or change meaning of a command, etc.   You have to either pick up those things or labor to remap the things you use into an evil style. It's not easy."
vim,3dxqih,tuhdo,4,Mon Jul 20 15:55:22 2015 UTC,"I tinkered with emacs early on before becoming a vimmer.  A couple of the major factors for me:   vi/vim works without having to make sure my terminal-details are configured properly. There were times with emacs where I had to twiddle with my terminal emulator to make sure that various characters were sent properly—how alt/arrow/function keys were sent (I know now that esc prefixing can get the alt+key behavior) vi/vim was available just about everywhere whereas often emacs would need to be added/installed (and where vi/vim wasn't available, there was ed which is made easier to understand when you grok vi/vim). I like being able to just sit down and work without cobbling together my tool-set. vi/vim was much faster to start up. Things have equalized a bit and emacs both offer a client/server model now to amortize some of that cost, but vi/vim still wins in most of my use-cases and tests. And it's hard to beat the startup time of ed for small editing jobs 😉 I have a pretty minimal (and mostly optional) vimrc, meaning that I can sit down at any computer with vi/vim and be productive almost immediately. Most emacs users I know have a long and customized configuration file making it harder for them to sit down at an arbitrary emacs session and be as productive.  Famously, Tim O'Reilly switched from emacs to vi/vim because of a mishap with his emacs profile.   I do grant that emacs is more powerful and that Lisp is a far more elegant language than vimscript, but I tend not to do much extending of my editor, so for my use cases, vi/vim wins.  (edit: messing with Markdown list notation)"
vim,3dxqih,gumnos,3,Mon Jul 20 12:48:52 2015 UTC,"Yeah, those are good points. I'm a Windows user by day, so the portability isn't terribly important to me.  But I've got to agree that vanilla (or out-of-the-box) Vim is much more productive. I do have quite a few plugins installed, but I really don't feel disoriented when I'm without my vimrc. Also, I've found it to be pretty easy to just store my Vim config in a git repo, then just clone it when I'm somewhere new."
vim,3dxqih,gnuvince,0,Mon Jul 20 12:56:31 2015 UTC,"vi/vim was not available on Windows and it's an order of magnitude to make it works properly on Windows compared with Emacs, when it comes to adding plugins."
vim,3dxqih,benbergman,3,Mon Jul 20 18:36:44 2015 UTC,"I found the base installation experience about the same for both, but I don't use plugins much, so it wasn't an issue for me.  I'll take your word that emacs was easier, but plugins like vundle and Tim Pope's pathogen should ameliorate plugin-management troubles in vim."
vim,3dxqih,this-is-water-,4,Mon Jul 20 19:18:27 2015 UTC,"I switched from Vim to Emacs 8-9 years ago, way before Evil was even a thing, and the hardest thing to do was accept that I'd need to leave behind the editing habits that I'd learned and adopted in Vim and make new ones.  It was really hard initially, and I kept bouncing between Emacs and Vim, but once I got over the initial hurdle, and it was a rather big one, I haven't looked back.  I tried evil when it came out, it's a great Vim emulation mode and I don't use it.  I don't feel that I'm slower editing text in Emacs than in Vim (which I still use regularly I should say), but I approach things differently: for example, I used to use the f and t commands in Vim a lot, in Emacs I use incremental search instead.  I use macros like there's no tomorrow and it's really nice that both editors have that feature."
vim,3dxqih,tuhdo,1 point,Mon Jul 20 17:20:40 2015 UTC,"I may try Emacs again, but without Evil. But there's something I can't quantify that keeps bringing me back. It could just be that I've built up a momentum with Vim they I can't match anywhere else."
vim,3dxqih,tuhdo,4,Mon Jul 20 17:36:14 2015 UTC,This reminds me of an article I read a while back discussing what it is about vi(m) that makes it a good editor and pointing out that no other editors have learned from it yet: https://medium.com/@mkozlows/why-atom-cant-replace-vim-433852f4b4d1  tl;dr - vim's composability make learning/discovering new tasks really fast once you know the basic commands
vim,3dxqih,juanjux,2,Mon Jul 20 14:44:54 2015 UTC,"I think there's certainly a joy of discovery in vim. Not ever being a serious emacs user, I don't know if this applies there as well. But in addition to making learning/discovering easier, composability also makes editing fun, or something like that. I'll often need to look up a vim command to do something, and once I do, I have this great feeling of understanding exactly why it works, and getting excited thinking about how I can modify it for different purposes. I guess I just wanted to say, there's both an efficiency to this but also some kind of weird psychological benefit, at least in my mind."
vim,3dxqih,nautola,2,Mon Jul 20 17:44:47 2015 UTC,"Well, but you have something that replicates Vim editting interface in Emacs now."
vim,3dxqih,Sean1708,1 point,Mon Jul 20 19:28:27 2015 UTC,"Yes, Emacs already has Vim editing interface.   tl;dr - try Spacemacs."
vim,3dxqih,ephrion,4,Mon Jul 20 18:25:52 2015 UTC,"I sometimes use other editors for a time and then go back to Vim. It's not lost time because when I return home I always add some plugins to have in Vim some cool feature that I learned in other editors. And that is one of the better things about Vim: no matter how cool is this feature on that editor, there is a Vim the plugin that implements it."
vim,3dxqih,HAEC_EST_SPARTA,3,Mon Jul 20 14:49:25 2015 UTC,"I managed to make the switch just recently.  I was a fairly hardcore Vimmer, I did plugins, macros, registers, all that jazz.  Then I was using evil-mode for a while.  I got frustrated with it and decided I'd give straight emacs a try.    It's been going well thus far.  Vim keybindings are a little better, but I find that the emacs ones offer advantages too.  I press fewer keys.  I'm more deliberate with which keys I press.  With Vim, the emphasis was on speed, so I flailed all over the keyboard slapping keys as fast as I could."
vim,3dxqih,ephrion,3,Mon Jul 20 16:03:38 2015 UTC,"I don't think it's controversial to say that emacs is all about extensibility, and it's amazing at it. What might be controversial to say is that emacs is not very good at customisability. For me it felt like I was having to wrote an entire set of plugins just to set up my init.el, and there just doesn't seem to be any agreed upon standard for how the user interface for plugins should work.   I mean elisp is a vastly better programming language than vimscript, but for a configuration language? Vimscript all the way. This is why I'm so glad that Neovim isn't getting rid of vimscript, because as much as Lua will be amazing for writing all the short little plugins I've written I just can't imagine writing my .vimrc in it.  Edit: Oh and terminal emacs very much feels like a second class citizen in the emacs world."
vim,3dxqih,HAEC_EST_SPARTA,2,Mon Jul 20 17:48:32 2015 UTC,"I've tried to learn emacs several times now for the exceptional Haskell support. I have many of the same complaints as you, but I think my biggest problem is that emacs doesn't really ""fit"" in well with a workflow built on vim.  Emacs wants you to use it for everything. Vim seems much more comfortable just being the text editor and letting you use whatever else you want. Emacs is also just slower than vim, and having to wait 3-4 seconds for my editor to boot, when I'd already be making the changes I want with vim."
vim,3dxqih,allabout001,1 point,Mon Jul 20 15:22:25 2015 UTC,"Emacs can actually boot quickly too after the first time you start it up.  If you run emacs --daemon on startup, then you can type emacsclient to open a new Emacs frame about as quickly as vim.  However, many Emacsers (?) just open Emacs once, then put it on its own desktop (assuming you're on a system that supports multiple desktops), switching over to it whenever necessary."
vim,3dxqih,StarGangCo,4,Mon Jul 20 18:09:50 2015 UTC,I know. Or I can just do vi and not worry about any of that.
vim,3dxqih,tuhdo,3,Mon Jul 20 19:43:32 2015 UTC,Of course.  I just wanted to mention the Emacs daemon option in case it would be of use to anyone.  :)
vim,3dxqih,StarGangCo,3,Mon Jul 20 20:21:47 2015 UTC,"20 years ago I would spend weeks/months learning some technology for no apparent practical benefits, other than I just wanted to know it. Not today! Now I care more about ""doing what, for what purpose"", care less about how I do it. Good or bad mentality? I am not sure. But that's the reason I am sticking with Vim to get things done, for now.  Tried Spacemacs sometimes ago, super super appealing stuff. I am planning to learn it again in the very near future.  I feel it's going to be a foot race between Neovim and Evil (Spacemacs) to attract people who already know some Vim. So far, the dark side has been winning in mid-term!  Check r/emacs periodically, you will see many have converted."
vim,3dxqih,tuhdo,1 point,Mon Jul 20 16:31:07 2015 UTC,Emacs made my hands hurt. That is all. RSI is no joke. Ctrl-w ctrl-x... chording all day long.
vim,3dxqih,StarGangCo,2,Mon Jul 20 20:31:41 2015 UTC,"But, you can use most Vim features in Emacs with Evil. Key binding is non-issue."
vim,3dxqih,tuhdo,1 point,Tue Jul 21 03:20:46 2015 UTC,That delay when you hit escape in evil is too much.
vim,3dxqih,tuhdo,1 point,Tue Jul 21 07:43:42 2015 UTC,"What delay? Probably something is wrong with your config. When I press escape, it switches as fast as Vim."
vim,3dxqih,StarGangCo,1 point,Tue Jul 21 07:50:28 2015 UTC,Last time I used evil the delay was necessary so that alt+letter combinations could be distinguished from escape.
vim,3dxqih,tuhdo,2,Tue Jul 21 11:22:33 2015 UTC,Now it is not necessary. Works perfectly fine on both terminal and GUI. You can test with Spacemacs.
vim,3dxqih,StarGangCo,1 point,Tue Jul 21 11:36:10 2015 UTC,"If you are on OSX, then just use GUI Emacs. There's a workaround for Emacs with Evil in iTerm, but I'm not sure. In Linux, it works perfectly fine."
vim,3dxqih,SMACz42,1 point,Tue Jul 21 11:38:36 2015 UTC,Using Linux here and running it in a terminal. Prefer to stay out of the GUI.
vim,3dxqih,Ahed91,1 point,Tue Jul 21 13:34:28 2015 UTC,Then probably there's something wrong with your Emacs configuration or terminal configuration. It works fine for GNOME Terminal. Maybe you should try xterm.
vim,3dxqih,bilog78,1 point,Tue Jul 21 14:17:30 2015 UTC,"I'm using urxvt but the source code is a mess (almost as messy as Xterm), I might switch to Konsole for the true colour support but not if I still starts all that kded stuff. Could try the terminal of gnome, heard they also support true color now."
vim,3dxqih,fuzz3289,1 point,Tue Jul 21 15:39:33 2015 UTC,"Not really on topic, but I absolutely love todo.txt. I piped it into conky (I'm assuming linux here) and have it always on my desktop.  Markdown is awesome too. It seems like you have a good workflow. Vim is a great editor. I haven't been able to shake it yet."
vim,3dxqih,Resquid,-2,Mon Jul 20 23:04:17 2015 UTC,"My reasons, hmmmmmm........  first I moved from windows$$ to Linux .. Then discovered vim which was a pre-installed package .. after 20 months using vim ..  I didn't feel like i want to learn emacs at all ..  --> The END <--"
vim,3dz8yq,artotal,2,Mon Jul 20 19:02:45 2015 UTC,"PRO TIP: if the * operator works to search for what you want (which usually means it doesn't have non-word characters in it, depending on your settings), you can issue a replacement command and leave out the search portion; the last searched value will be used.  In other words, search with *, then if you want to change all occurrences of that value in the whole buffer with FOO, just do:  :%s//FOO/g"
vim,3dz8yq,bakuretsu,2,Tue Jul 21 00:16:07 2015 UTC,"I think reddit screwed up your formatting. * does not search for <class> but for \<class\>.  \< and \> stand for beginning and end of word respectively (other regex-engines often use \b).  \<vi\> will only find words that begin with v and end with i (i.e. there has to be a non-alphanumerical character before and after the word).  Example (put cursor on vi):  vim is vi improved  Now hit * and you will search for \<vi\>. Only vi will be found, even though vi is contained in vim. If you on the other hand use g*, you wil search for vi without the word boundary and vi in vim will also be found.  Read up on :h \< for more information.  Hope that helps  EDIT: There is an easier way to do what you are trying to achieve.   Move cursor over word you want to search for, class. Start a search with / and hit <C-r><C-w>. Vim just copied the word under the cursor into the search buffer for you to edit further.   See :h c_<C-r><C-w>."
vim,3dz8yq,pandabrain,1 point,Tue Jul 21 11:07:18 2015 UTC,Amazing :)
vim,3dz8yq,EricTboneJackson,1 point,Tue Jul 21 14:49:18 2015 UTC,In my case I don't understand why when I use *   Vim select: /<ajouter> and not  /ajouter  Thanks
vim,3dz8yq,dougcosine,-1,Tue Jul 21 00:26:29 2015 UTC,"I want to change: /<class> to /<class="""">  E486: Pattern not found: <class\="""">   That error should tell you what you did wrong.  You're supposed to be searching for /<class> and instead you're searching for /<class=\"""">. Also, why are you escaping the =?    Find all instances of /<class> and replace them with /<class="""">:  %s,/<class>,/<class="""">,g"
vim,3dycaf,marcelomuzzi,2,Mon Jul 20 15:13:17 2015 UTC,"I you didn't read it yet, you should do it now: http://learnvimscriptthehardway.stevelosh.com/  It's the best advice i can think by now..."
vim,3dycaf,alx741,1 point,Mon Jul 20 15:40:21 2015 UTC,"Oh, yes, I've read a bit on this site, but I haven't really dedicated a good amount of time to it. I will definitely check it out properly in the future though. Thanks for your answer! :)"
vim,3dycaf,EricTboneJackson,0,Mon Jul 20 17:11:39 2015 UTC,"You didn't say what the script is supposed to do.   if anyone knows how to unite all this cmd (I'm on Windows) function calls in just one cmd promt, I'd be very grateful, it is really annoying having to press something to close 5 screens   I'd write a batch file to do the work and have a Vim command that simply invokes it."
vim,3dycaf,Sorthum,1 point,Mon Jul 20 19:01:16 2015 UTC,"Oops, I'm sorry about that. I'm trying to have a mapping that call pandoc and converts the current markdown file I'm editing to a pdf. I was running into the problem that pandoc does not work well with files that have spaces in their names, so I tried to address that in the script. And lastly, the pdf output is moved to the folder ~/pdf. I hope this is clear! Thank you for your reply!"
vim,3dycaf,rubbsdecvik,2,Mon Jul 20 19:32:35 2015 UTC,I'd do that in the shell; vim script is overkill for this.
vim,3dycaf,rubbsdecvik,2,Tue Jul 21 05:52:41 2015 UTC,Have you tried using the vim-pandoc plugins? They offer a pretty good set of integration commands.
vim,3dv1a4,small-wolf,3,Sun Jul 19 19:17:14 2015 UTC,"for the last TEN years I've never encounter a plugin written in mzscheme in discussions or searches. Who knows, there might be good ones out there."
vim,3dv1a4,allabout001,3,Mon Jul 20 01:09:55 2015 UTC,How does the lua/perl/python/ruby/(pure vimscript) ratio break down?
vim,3dv1a4,flukus,2,Mon Jul 20 03:07:56 2015 UTC,"I think it's mostly vim script,  unless specific abilities/apis are needed. I think python would be the second highest."
vim,3dv1a4,jecxjo,1 point,Mon Jul 20 11:01:00 2015 UTC,This got me thinking. Archlinux doesn't support it out of the box so I'm trying to get vim compiled with mzscheme support. Not working so well.
vim,3duumy,zapolon2,1 point,Sun Jul 19 18:21:17 2015 UTC,"You can start vim and open the current syntax for markdown: e: $VIMRUNTIME/syntax/markdown.vim. Inside this you can see what colours were defined. Copy this file somewhere else inside your runtime path and modify it to your needs.  More help can be found in :h hi for ""Highlight command""."
vim,3duumy,layneobserdia,3,Sun Jul 19 19:11:17 2015 UTC,"No syntax file (worth using) defines its own colors. This is the responsibility of your color scheme. Consider using a different color scheme, or otherwise modifying the one you are using.   I just don't know what highlight group they belong to.   You can examine all the defined highlight groups by running :highlight. You can also just do :highlight markdown<Tab> to find the specific group.  There are also small scripts you can find to determine the name of the highlight group under the cursor, which would be more convenient if you plan on doing this a lot."
vim,3duumy,___violet___,1 point,Sun Jul 19 20:04:23 2015 UTC,Those are typically better defined by plugins/colourschemes - you could try the pandoc syntax plugin or a colourscheme. Otherwise you will find more answers in :h color or :h syntax and syntax/markdown.vim (in your runtimepath).
vim,3duumy,nath_schwarz,2,Sun Jul 19 18:35:20 2015 UTC,"function! GetSyntaxID()     return synID(line('.'), col('.'), 1) endfunction  function! GetSyntaxParentID()     return synIDtrans(GetSyntaxID()) endfunction  function! GetSyntax()     echo synIDattr(GetSyntaxID(), 'name')     exec ""hi "".synIDattr(GetSyntaxParentID(), 'name') endfunction   Drop these in your vimrc and you can do :call GetSyntax() when your cursor is over some text to see what highlight settings it belongs to."
vim,3duumy,magus424,2,Sun Jul 19 21:57:34 2015 UTC,Thank you so much! Works like a charm!
vim,3dv4aa,layneobserdia,3,Sun Jul 19 19:42:33 2015 UTC,Do you know for sure that it's vim and not the shell?  Try testing STDIN and STDOUT and see if there's a difference when not in vim. Also see if there are differences in the network connection. Does your work computer use a VPN or connect any differently then your personal?
vim,3dv4aa,tonyswitchblade,3,Sun Jul 19 20:05:41 2015 UTC,Thanks for the help. But the issue was s system preference.
vim,3dv4aa,xkcd_transcriber,2,Sun Jul 19 20:18:16 2015 UTC,"Image  Title: Wisdom of the Ancients  Title-text: All long help threads should have a sticky globally-editable post at the top saying 'DEAR PEOPLE FROM THE FUTURE: Here's what we've figured out so far ...'  Comic Explanation  Stats: This comic has been referenced 765 times, representing 1.0479% of referenced xkcds.    xkcd.com | xkcd sub | Problems/Bugs? | Statistics | Stop Replying | Delete"
vim,3dv4aa,___violet___,4,Sun Jul 19 20:28:32 2015 UTC,"roboguy_ from IRC hit it in his first question. The difference was OS X System Preferences for Key Repeat and Delay Until Repeat.  Now both are on ""fast"" and ""short"" and it's a huge difference for performance."
vim,3dv4aa,EricTboneJackson,-1,Sun Jul 19 20:28:45 2015 UTC,BTW: I can recommend to set both to the fastest level to be more productive.
vim,3dv4aa,wbsgrepit,2,Sun Jul 19 20:05:46 2015 UTC,Why? In what context is mashing keys more productive than the alternatives? This strikes me as misguided advice.
vim,3dv4aa,EricTboneJackson,4,Sun Jul 19 20:10:38 2015 UTC,"In what context is mashing keys more productive than the alternatives?   It's not about mashing keys, it's about holding down keys in certain situations. Having a lighting fast repeat rate (faster than any OS will let you set via stock utilities), as first seen in the legendary editor Brief, is a game-changing improvement which you can't fully appreciate until you've lived with it for a while.  I wrote a utility for doing this in Windows which you can get here. Try it for a week or two. I used keyrate 150 1 which is a 150ms delay and the maximum repeat rate. Note that for a while this will make it harder to type with accidentally repeating letters. This is quickly overcome, though people sitting down at your keyboard will say, ""WTF?""  Note, I'm a Vim power user. I've have been using Vim for 20 years, but more than that, I'm a guitarist/gamer/etc. and confirmed hotkey junky -- in other words, I haven't just been using Vim a long time, I use it well. I know every navigation shortcut and use them. But sometimes simply zipping to your location is faster than working out and executing a semantic navigation command. You quickly learn when it's more appropriate and your overall speed goes up."
vim,3dv4aa,wbsgrepit,5,Sun Jul 19 20:28:36 2015 UTC,"I don't see how ""jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj"" can ever be faster than c-f or c-d.  Even the initial 150 ms delay is slower before the second down char goes than just shifting a half or full page.  That's just silly."
vim,3dv4aa,Bloodshot025,-1,Sun Jul 19 21:36:33 2015 UTC,"First, 150ms is a lot faster than you think. You'll fail at typing for a while. Like I said, actually try it.  Second, where did I say anything about using j to navigate pages? If you're not navigating pages it's tons faster, but that's utterly missing the point. The repeat also works for w,b,s-),s-],c-f, so on and so forth, as well as your own bindings (for instance, I use c-j to scroll line-wise will retaining centering on the current line). It's a twitch skill, like playing a video game. Once you're adept it's simply another tool in your arsenal. You're adding, not taking away.  Sometimes counting words and using a count modifier on w is the most expedient way to position the cursor. Some times holding w for 250 ms and timing the release perfectly is much faster. It a twitch skill, but when mastered it's more efficient in many scenarios.  I work in a Unix lab with a bunch of neck-bearded Vim experts, but I still get the experience of people looking over my shoulder going ""WTF, Eric?""  A decade before Vim there was Brief, which had many of the features we take for granted in Vim (programmable, unlimited undo, unlimited border-joined split windows, etc.) The only real thing Vim lacks compared to Brief is the ultra jackable key-repeat rate, but that's understandable because Vim is cross-platform and Brief was a DOS app with its own keyboard driver."
vim,3dv4aa,wbsgrepit,2,Sun Jul 19 22:09:31 2015 UTC,"To each their own,  but I have also been using vi/vim for a long time (starting SunOS 1983 here) and I am well aware of how repeat delay and rate work.  I am also saying that for me,  that jjjjj  or wwwww or c-f c-f c-f c-f are all wasted time -- if I want to edit a word on the same line I f to it,  if I want to go down 9 pages I 9c-f and if I want to move down a section I just do it instead of flopping a repeat.   When I move in VI move as fast as my thought allows by doing this,  not stopping my thought to concentrate on over under shooting a repeated keystroke.   edit to add: The difference is between: pressing a movement key, waiting for the 150ms (or whatever delay before repeat), waiting for what I think will be the right number of repeats, letting go of key, seeing if I overshot or undershot, correcting placement, doing what I actually wanted to do.  vs  Thinking I want to change ""word"" to ""work"", fwcwwork, what do I want to do next?"
vim,3dv4aa,EricTboneJackson,1 point,Sun Jul 19 23:05:09 2015 UTC,"if I want to go down 9 pages I 9c-f   Honestly curious, how do you know how many pages you want to go down? I usally C-D a few times if I want to look at a chunk of code a few screenfuls big."
vim,3dv4aa,wbsgrepit,1 point,Sun Jul 19 23:18:12 2015 UTC,"I usually only move down by page fulls if I know the file well and can visualize the location I want to get to.   If I am unfamiliar with the file,  then I would fall back to relating to what I want to edit by jumping to a known word or whatever I am looking for.   The only time I really ever would hit c-f c-f c-f c-f is if I was reading a page at a time."
vim,3dv4aa,EricTboneJackson,-3,Mon Jul 20 05:07:44 2015 UTC,"I am well aware of how repeat delay and rate work   No you're not, because you have to take heroic measures to enable the kind of delays and repeat rates I'm talking about.   I want to go down 9 pages I 9c-f    If you happen to know you want to go down 9 pages, having first spent the time to count. By the time you've scanned a line counting words or looking for a suitable target for f, my cursor is already positioned where I want it, faster than you every fucking time. I guarantee it. If count+verb is faster, I've already done that at least as fast as you. If simply ""sliding"" over at high speed is faster, I've done that and you can't.   seeing if I overshot or undershot   Again, you're speaking from a position of sucking at this activity. It's like saying you can get basketballs into a basket faster by walking them up a ladder, because you've never seen the accuracy with which a professional player can deliver them from distance.   Thinking I want to change ""word"" to ""work"", fwcwwork, what do I want to do next?   Again, you're contriving situations where this doesn't apply, which is either a strawman or failure of imagination.  As long as you haven't actually tried it, long enough to get good at it, you're speaking from ignorance and I'm not."
vim,3dv4aa,wbsgrepit,0,Mon Jul 20 05:27:29 2015 UTC,"Yeah, because you are unique and special when it comes to basic computer knowledge.    Mac OS  defaults write NSGlobalDomain KeyRepeat -int 0  Windows:  modify FilterKeys settings  Linux: xset r rate 20 50  Or you can go further and modify BIOS image to hack out a few more cps on intel (at least on unsigned MBs).    Yep you are special and it requires heroic measures to meet your leetness.   Edited:    I responded to the comment as it initially existed which was:   I am well aware of how repeat delay and rate work   No you're not, because you have to take heroic measures to enable the kind of delays and repeat rates I'm talking about."
vim,3dv4aa,___violet___,-3,Mon Jul 20 00:02:51 2015 UTC,Brilliant argument.
vim,3dv4aa,EricTboneJackson,2,Mon Jul 20 00:08:21 2015 UTC,If you set it to lower values OS will slow you done e.g. while holding j or k. I frequently hold them down for smooth scrolling which is not possible with lower values.  Also you can type faster with faster settings.
vim,3dv4aa,rubbsdecvik,4,Mon Jul 20 00:11:38 2015 UTC,"To be clear,  those settings only apply to the time delay from a key press (and hold)  transitioning from one character to repeating character and the delay between repeating characters once key repeats start.  If you are using vim optimally you are not doing ""jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj"" very often (but instead a more concise movement),  and even if you do this does not modify typing speed at all.  Even typing ""all"" most sane users press ""L"" two times -- which is not modified by repeat speed..."
vim,3dqk1e,samb0t,49,Sat Jul 18 14:11:57 2015 UTC,I've had mini heart attacks after forgetting I'm not in insert mode
vim,3dqk1e,ooxo,46,Sat Jul 18 15:13:42 2015 UTC,"The worst is Caps-Lock, takes some time until I realize what's going on."
vim,3dqk1e,toupeira,18,Sat Jul 18 15:35:08 2015 UTC,I mapped Caps lock to ESC. Fine on my own computer but the worst when I'm working on a coworkers machine. I hammer on Caps and things start flying around the screen like madness.
vim,3dqk1e,graduallywinning,3,Sat Jul 18 18:22:30 2015 UTC,"Yeah, I can deal with a lot. Vanilla vim or vi, weird plugins, half assed emulators or even a normal editor. All no problem and basically no adaption time.  I still hit capslock whenever I stop typing, though. Muscle memory is a bitch."
vim,3dqk1e,Tarmen,10,Sat Jul 18 18:51:23 2015 UTC,Remap to Ctrl! Caps + [ is how I escape.
vim,3dqk1e,toupeira,2,Sat Jul 18 15:37:18 2015 UTC,"Meh, my muscles already settled on Ctrl+c long ago :)"
vim,3dqk1e,stone_henge,1 point,Sat Jul 18 16:22:57 2015 UTC,"I have it mapped to imap jj <Esc>  Any rare sequence of characters works, but this has the additional benefit of getting you out of insert mode quickly in the exact situation above!"
vim,3dqk1e,AlpineCoder,1 point,Tue Jul 21 21:16:58 2015 UTC,Or just remap it to ESC...
vim,3dqk1e,MeanEYE,3,Sat Jul 18 18:39:26 2015 UTC,"I do both, on a single key. xcape ftw! :D"
vim,3dqk1e,revhippie,8,Sat Jul 18 21:51:34 2015 UTC,"I had a coworker who would regularly forget he was using vim to enter subversion commit notes, beginning with the ticket number.  #5325 ""oh right i'm in vim"" a#5325 - fixed the foo<esc> ""what's it doing?  why isn't it respo- OH GOD"""
vim,3dqk1e,thomasloven,3,Sat Jul 18 18:42:07 2015 UTC,I recently learned that u1. fixes this. Spread the word!
vim,3dqk1e,shriek,3,Sun Jul 19 12:11:20 2015 UTC,Worse is when I'm not paying attention and I start typing and stop when I'm not seeing any characters. I just have to pause and look around and make sure that I haven't created a havoc.
vim,3dqk1e,no-fun-at-parties,16,Sat Jul 18 17:44:28 2015 UTC,"I live in mortal fear that I will accidentally leave 'kkk', in a code comment or an HTML template."
vim,3dqk1e,cnelsonsic,5,Sat Jul 18 17:42:17 2015 UTC,"This always happens to me when someone is looking at my screen, usually when I'm showing off how cool vim is."
vim,3dqk1e,Ar-Curunir,2,Sat Jul 18 19:19:54 2015 UTC,"This happens to me when I'm not in vim, using other editors (shudder). I'm always scared I'll leave a kkk in a ODF document or something, especially cuz I use pentadactyl too."
vim,3dqk1e,johanegp,1 point,Sun Jul 19 02:57:46 2015 UTC,This is one of many reasons why I always use source code revision.
vim,3dqk1e,golergka,0,Sun Jul 19 03:06:21 2015 UTC,"White hood, white hood Okay kay kay"
vim,3dqk1e,GODZILLAFLAMETHROWER,19,Sat Jul 18 20:57:03 2015 UTC,""""" Leave insert mode with jj inoremap jj <ESC>   The usual fix."
vim,3dqk1e,hesapmakinesi,8,Sat Jul 18 14:50:13 2015 UTC,inoremap jj <ESC> inoremap kk <ESC> inoremap jk <ESC> inoremap kj <ESC>   I use jk more than ESC.
vim,3dqk1e,HackingInfo,0,Sat Jul 18 18:31:45 2015 UTC,This has the double effect of forcing people to not hold a key for movement!
vim,3dqk1e,upvoteOrKittyGetsIt,5,Sat Jul 18 19:28:29 2015 UTC,What? How? It seems like it's encouraging that behaviour. Those are insert mode mappings.
vim,3dqk1e,HackingInfo,3,Sat Jul 18 19:57:31 2015 UTC,"Ah.... Yea, im an idiot... Thanks for the correction. I was thinking that it would prevent people from holding j..."
vim,3dqk1e,upvoteOrKittyGetsIt,2,Sat Jul 18 19:59:41 2015 UTC,No worries :)
vim,3dqk1e,dddbbb,4,Sat Jul 18 20:09:29 2015 UTC,"True. Though, I (hardly) ever idle in insert mode."
vim,3dqk1e,Ninjabassist777,0,Sat Jul 18 15:16:02 2015 UTC,Presumably you do that because it's easy to type and not to avoid this error?
vim,3dqk1e,wittyrandomusername,1 point,Sun Jul 19 02:20:54 2015 UTC,Or install the NyanCat plugin and do imap jj :tabnew<cr>:Nyancat<cr> To train yourself to not do that in insert mode! It's what I do to prevent myself from making the same mistakes over and over.
vim,3dqk1e,OMBUG,9,Sun Jul 19 02:33:35 2015 UTC,"My biggest problem is not that I forget I'm in insert mode, but sometimes I forget that I'm not using vim.  I'll sprinkle an occasional jjj in an email.  Thankfully I always catch it before hitting send."
vim,3dqk1e,tuxayo,4,Sat Jul 18 18:59:31 2015 UTC,"I've lost count of the number of times I've accidentally vomited ""jK:w"" into my code. Shift finger getting a bit eager!"
vim,3dqk1e,OMBUG,1 point,Sat Jul 18 19:25:47 2015 UTC,"I'm learning vim and I'm trying to decipher ""jK:w"" hopping to find something nice and I came the conclusion that's just ""down"" ""man"" ""save"" which together make no particular sense. Am-I correct?"
vim,3dqk1e,rm-rf_,1 point,Sun Jul 19 12:46:50 2015 UTC,"I have ""jk"" mapped to leave insert mode, so the idea is to leave insert mode and save. Shifting too soon for the : and catching the k means you stay in insert mode."
vim,3dqk1e,OMBUG,2,Sun Jul 19 13:13:14 2015 UTC,Any good reason not to map ; to : ?
vim,3dqk1e,tuxayo,2,Sun Jul 19 13:58:13 2015 UTC,TIL ; repeats your last f/t movement.  Mapping jK in addition to jk would work though I suppose.
vim,3dqk1e,IlIIllIIIllIllIllIll,1 point,Sun Jul 19 14:31:56 2015 UTC,the idea is to leave insert mode and save   Very useful indeed!
vim,3dqk1e,commodorefox,7,Sun Jul 19 17:37:25 2015 UTC,"There are much more economical ways of moving than repeated j - examples include: ctrl-f, <number>j, /<regex>"
vim,3dqk1e,moopet,2,Sat Jul 18 14:53:12 2015 UTC,But home row
vim,3dqk1e,zemo,1 point,Sat Jul 18 16:42:02 2015 UTC,For that distance down? There are only a few lines left. G would do it better.
vim,3dqk1e,opcenter,2,Sat Jul 18 17:10:43 2015 UTC,"I'm all about ctrl+d, especially with caps lock mapped to ctrl."
vim,3dqk1e,__baxx__,2,Sat Jul 18 20:07:43 2015 UTC,Sometimes I just want to scroll through the code a line at a time. If you have a pretty fast key repeat setting then it's a smooth scroll.  Being perfectly efficient isn't always the best way to accomplish what you're trying to do.
vim,3dqk1e,jeyoung,1 point,Sun Jul 19 14:10:21 2015 UTC,"Zb, zz and zt are handy for moving about the screen and stuff too... Or moving the screen about at least"
vim,3dqk1e,__baxx__,3,Sat Jul 18 14:58:51 2015 UTC,I prefer the paragraph jump { and } myself.
vim,3dqk1e,haruhiism,1 point,Sat Jul 18 19:30:04 2015 UTC,"Yeah they're handy, I use zz etc for just having an idea of what's about really.... Zz probably the most"
vim,3dqk1e,HackingInfo,2,Sat Jul 18 19:34:49 2015 UTC,"Could it be possible to write a function that copies everything you accidentally typed into insert mode, delete it, and play it back starting in normal mode? The only hiccup for me is how would you get the text of whatever you just typed into a register."
vim,3dqk1e,Morphit,3,Sat Jul 18 17:59:42 2015 UTC,"Thanks! Now I want to make this happen.... I'll update hear once I have something!   Edit: Also, to answer what I think needs to happen. You undo, redo into a buffer, then play the buffer (not in front of a computer right now...)  Edit2: So far I havnt found a proper way yet, but i have found a limited way of doing it: Undo, Redo, dW, Esc, @1 (u<Ctrl-r>dW<Esc>@1) This will allow you to Undo your changes, redo them again (this puts your cursor at the beginning of your latest changes, deletes till the end of the WORD, put you into command mode, and play back the last thing you deleted. This is working on my local at the moment, but its limited in its use. If you started typing in the middle of a word/WORD then this wont work.    I was hoping to find a register that undo saves its text into, or that redo pastes from. But no such luck so far."
vim,3dqk1e,NewAlexandria,1 point,Sat Jul 18 19:40:02 2015 UTC,"I have that in my vimrc - I got the idea from: http://stackoverflow.com/questions/26884104/  I just use D to cut until the end of a line but maybe it ought to take a text object instead.  function! CutAndRunNormal()     normal! D     normal @"" endfunction  nnoremap <leader>e :call CutAndRunNormal()<CR><Esc>"
vim,3dqk1e,ClickHereForBacardi,-1,Sun Jul 19 11:26:10 2015 UTC,This reply is the solution
vim,3dqk1e,c3534l,2,Sat Jul 18 22:38:16 2015 UTC,kkk
vim,3dqk1e,-romainl-,2,Sat Jul 18 21:50:55 2015 UTC,"Worst is when you don't even know what mode you're in and you can't figure out how to go back, then you wind up making all sorts of crazy edits and you panic pressing escape, but you remapped that to caps lock so you start pressing buttons at random making things worse so then you really panic and you just shut the computer off and set it on fire and change jobs."
vim,3dqk1e,wbsgrepit,2,Sun Jul 19 02:30:08 2015 UTC,Doesn't happen if you use the arrows.
vim,3dqk1e,manys,3,Sun Jul 19 10:37:42 2015 UTC,Don't get it.   To me it looks like you meant to type jjjjjjjjjjjjjjjjj not move to the end of the file G.
vim,3dqk1e,cyrusol,1 point,Sat Jul 18 21:09:28 2015 UTC,^f dude
vim,3dqk1e,rm-rf_,1 point,Sun Jul 19 01:27:01 2015 UTC,It happened every so often...  From  int foo(int bar) {     return 2 * bar; }   to  int foo(int bar) {:wq      return 2 * bar; }
vim,3dqk1e,Vomithog,1 point,Sun Jul 19 07:40:38 2015 UTC,just vim things
vim,3dqk1e,weisbrot,1 point,Sun Jul 19 13:54:10 2015 UTC,Somehow ending up with CAPS-LOCK on after disabling the CAPS-LOCK key.
vim,3dsmky,kaminate,5,Sun Jul 19 01:46:42 2015 UTC,"What you're doing is a very uncommon method of indentation. To achieve this, you'll need to write your own 'indentexpr'. I don't recommend that.  Instead, you could keep the comment leaders aligned and indent your comment text instead:  /////////////// // Section A // /////////////// //     blah blah blah //     blah blah blah   Then you can write a 'foldexpr' that will recognize this comment indentation and fold based on it.  Here are some examples: http://superuser.com/questions/560167/how-can-i-write-a-vim-foldexpr-which-is-equivalent-to-foldmethod-indent  https://github.com/idbrii/vim-ficklefold/blob/master/autoload/ficklefold.vim#L25-L29  There's probably useful tips for writing foldexpr somewhere..."
vim,3dne37,del_rio,9,Fri Jul 17 18:04:03 2015 UTC,That is some awesome boss appreciation. In the last 15 years I've had good bosses but none I'd go as far as to buy an awesome present like this for.
vim,3dne37,enanoretozon,16,Fri Jul 17 21:27:44 2015 UTC,"Vim key should be to the left of a the ""A"" key, not in the upper left corner. :-)"
vim,3dne37,Geohump,6,Fri Jul 17 18:19:54 2015 UTC,"And hjkl to jkl;? Remaps vary from user to user, defaults are all the same."
vim,3dne37,cosarara97,3,Fri Jul 17 18:36:50 2015 UTC,"I don't know about you, but I rarely use hjkl actually - mostly only jk for moving between lines."
vim,3dne37,nath_schwarz,2,Fri Jul 17 23:46:09 2015 UTC,Same here. I'm an arrow dependant heathen.
vim,3dne37,rompenstein,2,Sat Jul 18 03:34:35 2015 UTC,Map the arrow's to move between splits. It's heavenly.
vim,3dne37,stubborn_d0nkey,3,Sat Jul 18 04:33:54 2015 UTC,You haven't experienced the joy of  nnoremap <c-h> <c-w>h nnoremap <c-j> <c-w>j nnoremap <c-k> <c-w>k nnoremap <c-l> <c-w>l
vim,3dne37,borring,3,Sat Jul 18 06:33:00 2015 UTC,I really liked this until I realized I needed <C-l> for refreshing the window. Unfortunately I run into cases where my layout goes wonky and I need to redraw. :(
vim,3dne37,turboladen,2,Sat Jul 18 08:36:37 2015 UTC,How about map <leader>R :redraw!<cr>?
vim,3dne37,Charlespwd,1 point,Sat Jul 18 23:58:06 2015 UTC,"C-l is used by some plugins for refresh (which is a logical reuse). For me, I add a mapping to ""fix"" any plugin that doesn't use it."
vim,3dne37,dddbbb,1 point,Sun Jul 19 07:24:07 2015 UTC,"C-l is used by some plugins for refresh (which is a logical reuse)   Yes, so? Since you're using nnoremap, C-l still does what it should when you map using it. That's the difference between nnoremap and nmap."
vim,3dne37,Ran4,1 point,Sun Jul 19 12:38:20 2015 UTC,I'll try it out. If I remember to.
vim,3dne37,stubborn_d0nkey,1 point,Sat Jul 18 07:25:18 2015 UTC,I use the arrows for normal movement and ctrl-arrow for split movement.
vim,3dne37,rompenstein,2,Sat Jul 18 04:49:58 2015 UTC,I use caps lock as Ctrl and then [ to escape. Feels much better in vim and elsewhere when cttl is needed.
vim,3dne37,jimktrains,2,Sat Jul 18 04:31:34 2015 UTC,"Or use them as both. I have them configured in a way where if pressed alone CapsLock behaves as Escape, while in combination with other key it behaves as Control. :) Best of both worlds."
vim,3dne37,MeanEYE,1 point,Sat Jul 18 12:40:41 2015 UTC,Interesting! I didn't know you could do that!
vim,3dne37,jimktrains,1 point,Sat Jul 18 14:04:25 2015 UTC,https://github.com/alols/xcape
vim,3dne37,leeeeeer,4,Sat Jul 18 14:21:16 2015 UTC,"agreed! kill capslock, most productive thing you can do"
vim,3dne37,jojoyuji,10,Fri Jul 17 19:50:17 2015 UTC,TIL:   I find that mapping a pressed caps-lock to be a control from the DE and using xcape for it to be escape when pressed and released works much better. All my mod keys in tmux and vim are one key.
vim,3dne37,SMACz42,4,Fri Jul 17 21:07:36 2015 UTC,Holy crap.
vim,3dne37,holyteach,1 point,Sat Jul 18 04:13:30 2015 UTC,vim-arpeggio and mapping jk to <Esc>.
vim,3dne37,verandaguy,1 point,Sat Jul 18 00:51:05 2015 UTC,This is what I'm using and it's really cool!
vim,3dne37,btapi,3,Sun Jul 19 13:10:58 2015 UTC,"As a vimer, I would love to be you boss."
vim,3dne37,caotic,6,Fri Jul 17 22:39:03 2015 UTC,"You make more money at your job than I do.  (Also, really cool idea and execution.)"
vim,3dne37,holyteach,2,Fri Jul 17 19:06:05 2015 UTC,Is this self made? Where did you get it?
vim,3dne37,IIGrudge,9,Fri Jul 17 18:49:11 2015 UTC,"I'm not OP, but the keyboard is a KBParadise V60 Mini.  Details from the other thread:  ""Oh, I should mention: I decided to go for MX Clears for quieter typing (we work with MacBook Pros). Got the green/red backlit model for obvious reasons. The blank keycaps are from WASD and the Vim key is from Tech Keys.  ""I was considering the Matias quiet switch version, but it was out of stock and the keycaps would be harder/impossible to find. Plus, I think he'll have more fun with these."""
vim,3dne37,holyteach,7,Fri Jul 17 19:09:54 2015 UTC,"I prefer Matias quiet to MX clears, but I haven't tried clears more than a few minutes, so maybe I'd like them more if I used them over a longer period. With Matias switches, you couldn't get those keycaps though.  The V60 is a great keyboard, but for Vim especially, it makes more sense to have the top left key be `~ instead of escape and have ctrl in place of caps-lock, with an additional Fn on the lower left key. Caps lock is still available through Fn+<tab>. All this can be set by dip switches.    From there, I use xcape to get ctrl/esc dual role functionality. Simply perfect 60% setup IMO. The keyboard would simply be brilliant if it would have dual-role capabilities built into the firmware."
vim,3dne37,jollybobbyroger,3,Fri Jul 17 20:45:15 2015 UTC,This is exactly how I set it up! Takes a few hours but it's pretty easy to get used to.
vim,3dne37,casey12141,1 point,Fri Jul 17 21:06:41 2015 UTC,"Also if you remap Caps to Ctl, it's really easy to use ctl+[ instead of esc. I have this keyboard as well (clears, blue/green) and it's great :)"
vim,3dne37,mrinterweb,3,Sat Jul 18 02:16:56 2015 UTC,I wish there was a way to physically try out multiple mechanical keyboards with different mechanical switches to find with switch works for you. I've been buying mechanical keyboards with Cherry browns and have been too pleased to gamble on trying out another switch. Maybe some industrious keyboard retailer could travel to different programming conventions to demo and sell their keyboards. Maybe that would not be the worst business idea ever.
vim,3dne37,ripster55,3,Fri Jul 17 21:01:55 2015 UTC,https://www.reddit.com/r/MechanicalKeyboards/wiki/recommendedsellers#wiki_where_can_try_i_out_keyboards_and_switches.3F
vim,3dne37,paraluna,3,Fri Jul 17 21:58:08 2015 UTC,"There's definitely a lot of guesswork, but the Clears are a lot like Browns, just firmer in the lower half to prevent the key from bottoming out (which makes it 3x quieter)."
vim,3dne37,holyteach,3,Fri Jul 17 21:08:14 2015 UTC,"I have seen ""keyboards"" that have a different switch type for each key (so like ~5 keys total). Not sure where you would get one and if a single key would help you decide though..."
vim,3dne37,vim_viking,1 point,Fri Jul 17 21:14:23 2015 UTC,"One of my students has one of the little key testers (it has 6 keys on it, all in a row, one of each type). It is not enough to make a decision, but it really does illustrate the difference among all the switch types."
vim,3dne37,psaldorn,2,Sat Jul 18 04:06:28 2015 UTC,"Great job! I think the esc vim key is perfect - any serious user remaps to caps lock or sth else, but at least it turns the key into a distinctive and visible decoration (better than just having a dud key - that's what all of mine are)."
vim,3dne37,_punk_,1 point,Sat Jul 18 02:17:12 2015 UTC,That's awesome! I wonder how easy it is to mod G750 laptop keys.. hmm..
vim,3drhju,Plasticooo,2,Sat Jul 18 19:21:46 2015 UTC,It works here. Did you source the vimrc again? Could you post your vimrc?
vim,3drhju,viccuad,1 point,Sat Jul 18 22:51:57 2015 UTC,Hey there!  Its here!  http://pastebin.com/VrHhnn7j  Can you provide me a screenshot?
vim,3drhju,viccuad,2,Sat Jul 18 23:11:47 2015 UTC,seems like the relevant line in your vimrc has a typo:  let gLairline#extensions#tagbar#flags = 's'   when it should be:  let g:airline#extensions#tagbar#flags = 's'   let's see if that is all :)  edit: here is a screenshot: http://i.imgur.com/v45Ta1q.png
vim,3drhju,viccuad,2,Sun Jul 19 10:25:10 2015 UTC,"WOW! This is totally ridiculous! It is working now!!  But damn! I am sorry you wasted your time on this stupid error! But i just didn't see it, and syntax highlighting didnt accuse anything!  Im so glad! Thank you so much!"
vim,3drbo8,Northstat,4,Sat Jul 18 18:31:42 2015 UTC,yes and it's called GitHub. https://github.com/daylerees/colour-schemes/blob/master/vim/colors/github.vim
vim,3drbo8,goajunior,1 point,Sat Jul 18 18:36:41 2015 UTC,thanks!
vim,3drbo8,DarkAbrax,4,Sun Jul 19 03:27:40 2015 UTC,"If you'd like to try out various other color schemes, that you can also modify and download, a nice site is: http://bytefluent.com/vivify/  You can also install the following plugin using pathogen, vundle etc, it installs a nice range of colorschemes: https://github.com/flazz/vim-colorschemes   Regards"
vim,3drbo8,lesguillemets,1 point,Sat Jul 18 22:16:52 2015 UTC,Oh nice thanks!
vim,3do39y,enquea,2,Fri Jul 17 21:14:13 2015 UTC,:set autoread
vim,3do39y,kjoonlee,0,Fri Jul 17 21:39:45 2015 UTC,"Looks like some more tweaks are necessary http://stackoverflow.com/questions/2490227/how-does-vims-autoread-work, but thanks for the pointer!"
vim,3dl4ks,scottchiefbaker,242,Fri Jul 17 03:47:43 2015 UTC,I use the terminal version of Vim more.
vim,3dl4ks,atomic_cheese,33,Fri Jul 17 03:48:01 2015 UTC,Console-mode Vim inside a tmux session is way much more efficient than alt+tabbing between an editor and a terminal IMO.
vim,3dl4ks,cosarara97,6,Fri Jul 17 03:56:39 2015 UTC,"I see this mentioned a lot. How is doing ""Ctrl-B something"" all the time efficient?"
vim,3dl4ks,atomic_cheese,14,Fri Jul 17 05:36:48 2015 UTC,"It's not. I remapped Caps Lock to LControl in hardware and changed the tmux prefix to Ctrl-A. That aside, I'm also using this script which lets you bind Ctrl+[hjkl] to move around tmux panes and vim splits more easily."
vim,3dl4ks,SMACz42,5,Fri Jul 17 05:43:58 2015 UTC,That Caps Lock <---> Control_L switch is spoiling me like none other. Silky smooth.
vim,3dl4ks,makeranton,12,Fri Jul 17 06:04:21 2015 UTC,I find that mapping a pressed caps-lock to be a control from the DE and using xcape for it to be escape when pressed and released works much better. All my mod keys in tmux and vim are one key.
vim,3dl4ks,SMACz42,2,Fri Jul 17 15:24:34 2015 UTC,Woah...TIL that was possible.
vim,3dl4ks,Grazfather,2,Fri Jul 17 20:58:11 2015 UTC,I do the same using Karabiner on OSX.
vim,3dl4ks,sasquatch007,4,Fri Jul 17 21:19:30 2015 UTC,"OK, but I still don't get it. You press a key to switch between Vim and a terminal... so do I (using the GUI Vim). Why is your key more efficient?   People seem so happy with a tmux workflow, I almost want to give it a try, but I can't figure out how it's supposd to be any better than my current setup."
vim,3dl4ks,thearctican,3,Fri Jul 17 13:51:11 2015 UTC,"Because rather than using a window manager and alt-tabbing to switch windows (and having to remember which window you used last), tmux navigation hinges on visual organization.  For me, switching a pane is more like 'The pane I want to go to is two to the left of the one I have focused. [`, left, left] and I'm there.'  Rather than: 'I need to switch windows. [alt+tab]: Is this the right one? Nope. Better press tab twice next time and keep guessing, or pay attention to the app-switcher.  Pane-switching concepts in tmux can be applied to any worthwhile window manager, however.  This video does a great job demonstrating the basic functions of tmux.  Edit: better words"
vim,3dl4ks,meeko13,3,Fri Jul 17 16:11:11 2015 UTC,"Vim inside Tmux user here.  With tmux, I can copy/paste text from my terminal anywhere without having to use my mouse at all. I can also page up/down and search with vim keys. (I'm aware you can do some of this with vim keys in bash but I don't think all the functionality is there.)   Tmux also has a keybinding for 'zooming in' on a pane. This is helpful because I tend to have the left 1/2-3/4 of my screen vim and the other 1/2-1/4 of my screen as a terminal. I can easily hide the terminal pane and make vim 100% when I'm not needing a terminal. I am also aware that you can achieve this with a GUI vim and terminal window (by entering full screen in your GUI vim), but in my opinion, it's not as nice of a workflow.  Another nice thing is that if I accidentally close iTerm, it doesn't matter whatsoever because tmux is holding my session, so I can open up iTerm again, type 'tmux attach' and it's like nothing ever happened. This is also helpful if you just want to close out some applications for a presentation or going home for the night, or if you're starting work on another project but don't want to close all the things you currently have open.  Finally, the last thing I can think of is vim plugins. There are vim plugins that let you forward commands to a tmux pane. This is nice when you're writing tests and want to run the specific test your cursor is on (or the whole file, or anything) without having to leave the window.  Ultimately, I think it's just a preference. Honestly, I don't know what the GUI offers that the terminal version doesn't.  Edit: I thought of another thing. Tmux gives you different...windows? (Honestly, the tmux terminology of windows vs panes is confusing and inconsequential to me so I might call it the wrong thing...) But basically, it gives you multiple workspaces inside the same iTerm window, which is helpful if you're working on multiple projects because each project can get it's own vim+terminal workspace that is encapsulated."
vim,3dl4ks,borring,3,Fri Jul 17 16:13:32 2015 UTC,"It gets even better with Neovim's terminal emulator!  With a terminal as another buffer, I can simply navigate over with my Vim keybindings. I can even copy from it or paste into it. The pasting functionality is the big one. Being able to paste into the terminal directly from Vim allows me to write trivial keybindings to automatically evaluate expressions or pieces of shell scripts in some REPL.  Also, the terminal is just another buffer. That means the buffer can be hidden. The terminal also doesn't block the UI, so I can run things in it while still editing. I actually wrote a function to compile LaTeX documents into PDFs and open it in Evince so I can have a preview of the document. The function used to rely on ! to execute pdflatex. I adapted this function to use Neovim's terminal emulator instead. So now, it sends the commands to a hidden terminal and I can actually write while previewing my doc.  Now the only annoyance is Evince stealing focus every time it I trigger the function. I don't want it overlapping my Vim window and I don't really feel like going back to i3.  I just realized that this had nothing to do with GUI VS TUI.. But it's too late to delete everything. I've already typed too much to go back."
vim,3dl4ks,cosarara97,1 point,Fri Jul 17 07:40:24 2015 UTC,"Could you expand on how you use neovim's teriminal instead of '!'? I wanted to do the same the other day, with that xterm slimv launches."
vim,3dl4ks,borring,2,Fri Jul 17 13:33:03 2015 UTC,"I added comments just for you  "" Compile latex document in hidden terminal let g:termbuf = -1 function! LatexPrev()     "" You can't see it here, but I have an escaped return at end of the line     "" So once the command is pasted into the terminal, it'll press enter     "" To insert a literal character press ^v (or <c-v>) then press your desired     "" key. In this case, <c-v><enter>. It should look like this: ^M     let latexcmd = "" pdflatex -output-directory=/tmp "" . expand('%')     let latexcmd .="" && evince /tmp/"" . expand('%:t:r') . "".pdf""     if &filetype == ""tex""         let s:currwin = winnr(""$"")     else         echo ""This must be used in a buffer with latex filetype""         return     endif      "" Spawn persistent terminal     "" Create the terminal buffer if it doesn't already exist     "" Hide it and go back to previous tab     if bufexists(g:termbuf) == 0         tabnew term://zsh         let g:termbuf = bufnr(""$"")         hide         tabprevious     endif      "" Move to top-most window.     "" If it isn't a terminal buffer, split and summon terminal     execute 1 . "" wincmd w""     if &buftype != ""terminal""         echo ""making new windowwww""         topleft 5new     endif     execute ""b "" . g:termbuf      "" Sleep to give shell time to load     "" Paste command into shell     "" Move back to editing buffer     sleep 500ms     put =latexcmd     hide     execute s:currwin . "" wincmd w"" endfunction`"
vim,3dl4ks,mixandgo,1 point,Fri Jul 17 13:59:43 2015 UTC,"You should try Emacs, it had those features since forever :)"
vim,3dl4ks,borring,3,Fri Jul 17 08:35:13 2015 UTC,"I have tried Emacs. I went in with Evil mode, but so many things were different.  A lot of people say that Evil emulation is superb. But some of the chords (ironically) that are in Vim aren't enabled in Evil. Like C-c to exit insert mode. That is way better than flicking up to Esc.  Also, my Vim brain can't grasp all the different keybindings. Oh.. and I also had no idea how to exit without saving. I kept doing :q! but Emacs says ""thou shalt not quit"" or something like that. :q!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
vim,3dl4ks,weisbrot,6,Fri Jul 17 10:18:58 2015 UTC,any vim user who doesn't remap capslock or sth to escape is a madman in my eyes.
vim,3dl4ks,borring,1 point,Fri Jul 17 10:45:07 2015 UTC,"I actually use  Tab      =  Esc capslock = ctrl   I have also have jk I use whichever I feel like using at the moement. Sometimes, I'll use <c-c> but mostly Tab and jk.  It was awkward using emacs evil mode since neither jk, <c-c>, <c-[> worked, and I didn't know how to map keys so that <tab> would put me into normal mode. So I just gave up =. I didn't stick with it for very long"
vim,3dl4ks,weisbrot,0,Fri Jul 17 11:48:46 2015 UTC,what's the problem with hitting escape to get to normal mode then?
vim,3dl4ks,borring,1 point,Fri Jul 17 12:37:01 2015 UTC,"Oops. My comment was a bit misleading. I meant that I have  :nnoremap <tab> <esc>  Not that I changed the keycodes. Although, the keycode for capslock and L_ctrl are switched."
vim,3dl4ks,liflo,1 point,Fri Jul 17 12:48:38 2015 UTC,What is sth?  Am I the only one who maps jj to esc?  I like that I don't have to get off the home row.
vim,3dl4ks,weisbrot,1 point,Sat Jul 18 13:20:36 2015 UTC,'sth' is short for 'something'. if you have capslock mapped to escape you don't have to come off homerow either btw
vim,3dl4ks,LankyCyril,2,Sat Jul 18 14:51:18 2015 UTC,"I have C-Space as the prefix, and then C-Space again to switch between two last windows.  So, after C-Z and fg, the C-Space double mash is my most used shortcut, and it's really comfortable."
vim,3dl4ks,StarGangCo,1 point,Fri Jul 17 09:44:29 2015 UTC,Tmux supports bindings without the prefix. I also set up some bindings in X so I can use some non-terminal supported combinations to send combinations to tmux via xdotool (you could also just bind things like tmux next-window directly in your window manager but then it wouldn't work on remote terminals).
vim,3dl4ks,fixles,1 point,Fri Jul 17 08:02:27 2015 UTC,I use ctrl p instead of ctrl p in tmux (I dont use the CtrlP in vim)  Once you get muscle memory using tmux it's a lot quicker.
vim,3dl4ks,exDM69,1 point,Fri Jul 17 11:39:44 2015 UTC,"Ctrl-B is a crappy default if you ask me.  I've set up vim + tmux so that window navigation inside vim uses Ctrl-W prefix and tmux uses Ctrl-A prefix. The rest of the keybindings are more or less compatible with default settings, but I did make a few minor changes for tab navigation, etc.  Prefix-less keybindings in tmux together with scripting are also useful. For example I set F5..F8 to be sent directly to the debugger window (cgdb) regardless which window is in focus.  This way, tmux + vim can be scripted to make a small ad-hoc ""ide"" for the task at hand with just a handful of lines of configs."
vim,3dl4ks,tvon,1 point,Fri Jul 17 12:06:44 2015 UTC,"I can very specifically navigate with the keyboard in tmux/screen/vim/whatever, with cmd-tab the order changes, or I have to visually recognize where I'm going.  There are window switchers that can be configured to get around this, but my terminal setup goes with me wherever I go, whatever computer I'm on, whatever OS I'm on and whatever server I'm ssh'd into.  I just see no reason to not primarily use the terminal.  The only downside to tmux+vim is I can sometimes get confused about where I am vs where I'm going, eg with vim it's ""ctrl-w j"" to move down a window, with tmux (as I have it configured) it's ""ctrl-a j"" to move down, so I have at times hit the wrong prefix.  It does not happen often though, as I usually have a vertical tmux split with vim on one side and the shell on another, so left/right is always a ctrl-a change.  When it comes down to it though, it's all preference and learned behavior, so whatever works for ya."
vim,3dl4ks,cosarara97,1 point,Fri Jul 17 14:47:35 2015 UTC,Your tmux config is in every server you ssh into?
vim,3dl4ks,tvon,2,Fri Jul 17 15:18:48 2015 UTC,"If I have an actual account I will put it there, so yes.  If not, then there is a very good chance that it has screen or tmux, both of which I can use with a vanilla config (with minor complaining).  I have to say though, ssh is really where tmux shines (and screen, which is what I started with and is fine but these days everyone uses tmux).  You only need to connect once and you can have as many shells as you want, so you can be tailing logs, editing files, restarting services all at once without having to do any job control.  You also don't have to worry about disconnecting, because if the network drops or you need to change locations/networks you can just ssh back in and re-connect to the tmux session and it will be exactly as you left it.  This is particularly useful if you have various systems sitting around because you can just leave a tmux session running for however long you want and connect to it whenever you want to pick up where you left things.  Aside from having this on a personal server (or a non-personal server, I don't know of any security issues associated with leaving it running aside from the general ""increasing the attack surface area""), if you have a desktop and a laptop you can leave a session running on each and no matter where you are you can work on the other machine with out any session setup.  E.g., I had a work-specific laptop and my own desktop, and if I could always pop from one to the other do pick up wherever I had left off.  Even if I was at the office I could ssh home, join the tmux session and do whatever I was doing.  Great for long-running tasks, like any lots-of-data related thing (downloads, uploads, recovering an external disk, whatever).  Honestly I think tmux is one of those tools that you find indispensable once you've added it to your workflow.  If you often have multiple shell sessions open then you should definitely invest the up-front time giving it a try.  On the other hand, if you don't really use the terminal then it won't be of any use to you."
vim,3dl4ks,iSuggestViolence,1 point,Fri Jul 17 15:54:26 2015 UTC,Ctl-B is awful. I remapped it to ` as suggested from a blog post somewhere.
vim,3dl4ks,SnowdensOfYesteryear,2,Mon Jul 20 21:58:10 2015 UTC,"Basically.  It's more efficient to edit, Ctrl+Z, compile, and fg back into vim.  I actually hate the gui version of vim.  It's so clunky."
vim,3dl4ks,mpbikeman,1 point,Fri Jul 17 07:51:06 2015 UTC,Same here.  Use vim + tmux.
vim,3dl4ks,Tarmen,0,Fri Jul 17 11:00:49 2015 UTC,"Neovim, have terminal stuff in buffers!"
vim,3dl4ks,ford_contour,1 point,Fri Jul 17 14:23:53 2015 UTC,"I'm upholding this one because I invoke terminal vim dozen's of times per day, but I just launch MacVim two or three times leaving it open most of the day..."
vim,3dl4ks,Ninjabassist777,1 point,Fri Jul 17 03:56:19 2015 UTC,"Same here. I should use gvim --remote-tab more often to prevent this (I use Linux, not Mac). Mvim probably has the same feature."
vim,3dl4ks,jwinterm,42,Fri Jul 17 05:20:51 2015 UTC,"Gvim, all day, everyday (except weekends)."
vim,3dl4ks,Simpfally,2,Fri Jul 17 03:59:40 2015 UTC,"vim on linux, gvim on windows  still can't copy something from vim to another vim directly"
vim,3dl4ks,jwinterm,2,Sat Jul 18 20:59:38 2015 UTC,"Yea, I'm on a windows box at work, so that's mostly why I stick with gvim there."
vim,3dl4ks,nath_schwarz,2,Sat Jul 18 21:38:34 2015 UTC,Maybe :h viminfo is of some use for you. It may not be directly but at least you don't have to rely on the systems registers.
vim,3dl4ks,Simpfally,1 point,Mon Jul 20 18:03:49 2015 UTC,"I still haven't found a way to copy from vim to vim, directly or not hehe.  Sometimes I quit vim, cat the file in the console and copy..  I think I'll have to install vim with some special options to be able to copypaste"
vim,3dl4ks,nath_schwarz,1 point,Mon Jul 20 19:35:42 2015 UTC,"I always copy either via tmux or via the systems registers, depending if I have to past to a remote or not."
vim,3dl4ks,Simpfally,1 point,Mon Jul 20 19:50:10 2015 UTC,"Ha I never used tmux, don't really know what it is yet.  I really need to do a proper vim install, getting tired of always opening two terminals, one for vim the other to run the files"
vim,3dl4ks,nath_schwarz,2,Mon Jul 20 20:18:56 2015 UTC,Tmux is exactly for that situation - tmux is an abbreviation for terminal multiplexer.
vim,3dl4ks,Simpfally,1 point,Mon Jul 20 21:12:14 2015 UTC,"Haha, oh well. I know what to do now. Thanks."
vim,3dl4ks,brain_emesis,1 point,Mon Jul 20 22:00:31 2015 UTC,Likewise
vim,3dl4ks,programmertoni,1 point,Fri Jul 17 04:22:06 2015 UTC,Me too!!!
vim,3dl4ks,sigzero,1 point,Fri Jul 17 08:28:21 2015 UTC,...and sometimes weekends for me.
vim,3dl4ks,hydrox24,24,Fri Jul 17 15:10:04 2015 UTC,"Terminal Version 100%.  I feel that using tmux with vim allows me to truly make vim into an IDE, or more accurately, a component of a fully fledged IDE. Too many hackjobs with vim alone. The command line contains a great deal of power, and allows you to basically use any other tool in conjunction with coding."
vim,3dl4ks,ismtrn,0,Fri Jul 17 05:46:43 2015 UTC,"If you use a real tiling VM instead of tmux, you can tile all X windows, and use the graphical version in the same way. Also, yes, the command line is powerful, but you can still use the command line with gvim. In fact vim ""eats"" your current terminal window, while gvim (used with ther server and remote options) spawns a new window and lets you keep the terminal window for doing terminal stuff."
vim,3dl4ks,ASIC_SP,10,Fri Jul 17 13:44:12 2015 UTC,gvim always
vim,3dl4ks,EricTboneJackson,10,Fri Jul 17 04:35:26 2015 UTC,"You should have asked for operating system, too, because the answer is meaningless otherwise. In *unix, I always use the terminal version.  In Windows, it's all about gvim because it's just better. If I'm at a Windows console I'll sometimes use the console version, but most of the time I want to open files in my main, always-running GUI session. I have an alias svim which opens a file in my primary gvim session. Using just gvim or vim opens the file in a new session."
vim,3dl4ks,holyteach,2,Fri Jul 17 08:05:00 2015 UTC,Running vim in a Windows console sounds sort-of grummy. Does that even work?
vim,3dl4ks,EricTboneJackson,1 point,Sat Jul 18 04:10:57 2015 UTC,"Works fine. You only get 16 colors, though."
vim,3dl4ks,Northstat,18,Sat Jul 18 07:26:19 2015 UTC,Don't have gui version installed. I don't know anyone that uses it.
vim,3dl4ks,musicmatze,0,Fri Jul 17 03:59:32 2015 UTC,"Same here. Trying to switch to neovim atm, also!"
vim,3dl4ks,flipjsio,16,Fri Jul 17 08:21:39 2015 UTC,IDE = iTerm2 + Tmux + Vim
vim,3dl4ks,layneobserdia,2,Fri Jul 17 06:22:51 2015 UTC,I'm interested in the reason why you prefer iterm2 over the native terminal in latest OS X.
vim,3dl4ks,afmrak,2,Fri Jul 17 17:43:17 2015 UTC,The only reason I use iTerm2 instead is that I can hold Command + / to find my cursor in the middle of a forest of tmux/vim buffers on a large display
vim,3dl4ks,layneobserdia,1 point,Fri Jul 17 18:37:17 2015 UTC,Thanks :)  was wondering as I'm happy with the native terminal and most people tend to use iterm2 because of features that are delivered via tmux anyway like split panes and tabs
vim,3dl4ks,zapolon2,1 point,Fri Jul 17 18:40:04 2015 UTC,I actually prefer the default terminal because I feel like it responds a bit quicker.
vim,3dl4ks,atimholt,10,Fri Jul 17 20:14:33 2015 UTC,"Gvim is objectively better (at least for my usage. I don’t know what terminal Vim has that GVim doesn’t). It has everything the terminal version has and better rendering. Fonts, colors, and little squiggly underlines for spell-check.  I just turn off all the gui elements and alt-tab if I need the command line."
vim,3dl4ks,StarGangCo,3,Fri Jul 17 07:42:30 2015 UTC,"I use terminal vim and misspelled text has a light pink background. Can use all the same fonts too in urxvt.  What do you mean by ""better rendering""?"
vim,3dl4ks,1337_n00b,1 point,Fri Jul 17 08:07:52 2015 UTC,Light pink background on misspelled text? Tell me more!
vim,3dl4ks,Sean1708,1 point,Fri Jul 17 14:23:18 2015 UTC,Possibly a colorscheme.
vim,3dl4ks,atimholt,1 point,Fri Jul 17 17:14:40 2015 UTC,"I just meant it as a catch-all for the squiggly lines, color support, and the ability to change your font in-editor with scripting. I actually use that."
vim,3dl4ks,StarGangCo,1 point,Fri Jul 17 14:48:46 2015 UTC,So you have a document open using two fonts at the same time or something?
vim,3dl4ks,atimholt,1 point,Fri Jul 17 15:09:45 2015 UTC,"Man, I wish. Maybe a NeoVim Gui will support that.  Though, the sheer uselessness of the feature may keep it from being implemented.  No, wait! It’d be kinda nice to lock a window to a certain number of characters wide, but be able to change its absolute screen width.  Right now, I just have a shortcut to change my font size. I guess I could tie that to file type, but sometimes it’s the mood I’m in at the time, or how many windows I feel I need open in a particular session (okay, that could be scripted for too)."
vim,3dl4ks,StarGangCo,2,Sat Jul 18 03:49:30 2015 UTC,"There's another big plus to gvim in that you aren't restricted to control codes supported by terminals. Although I use vim, my wm config, <leader> and xdotool to achieve the same thing in terminal vim. Can even work over remote shells that way :)"
vim,3dl4ks,what_it_dude,45,Sat Jul 18 07:15:43 2015 UTC,I use the GUI version of Vim more.
vim,3dl4ks,mrinterweb,10,Fri Jul 17 03:48:07 2015 UTC,Make up your mind!
vim,3dl4ks,galudwig,3,Fri Jul 17 11:58:39 2015 UTC,There are two reasons I prefer using a GUI version of VIM like Gvim or Macvim.   Copy to OS clipboard (particularly difficult if using vertical splits). Cmd/Alt+Tab to Vim instead of just to the terminal. In a terminal I'm often running multiple tabs. Then I run multiple tabs in vim. I find I can maintain sanity so long as my editor is separated from my terminal.
vim,3dl4ks,mrinterweb,2,Fri Jul 17 17:08:18 2015 UTC,"For 1., if you compile vim with clipboard support (or of you use neovim) you can yank and delete to the system clipboard no prob. All you gotta do is use the + register.    Is true though. But this inconvenience can be done with with some window managers (i3 for example) or with tmux + a session navigation plugin."
vim,3dl4ks,galudwig,1 point,Fri Jul 17 17:47:35 2015 UTC,"When you mention using i3 or tmux + session navigation for helping with selecting text in one vertical split? I guess it depends on how the text is selected. If the text is selected with a mouse (the bane of vim) instead of visual mode, selecting text in one vertical split spans adjacent vertically split buffers as well as line numbers. If it is easy to copy to the OS clipboard from vim in visual mode, then I could live without selecting text without a mouse."
vim,3dl4ks,mrinterweb,2,Fri Jul 17 20:50:42 2015 UTC,"You don't need visual mode or your mouse. For example, this is how I would copy the current line straight to the system clipboard: ""+yy  or to yank two words: ""+y2w  So you just yank or delete like you would normally between vim buffers, but if you want to use it outside of vim, yank or delete to the + register. It's really quite awesome and easy!   Again, you do need vim compiled with clipboard support though. Takes like fifteen minutes to set up. Or just use neovim which does it automatically."
vim,3dl4ks,borring,1 point,Fri Jul 17 23:29:35 2015 UTC,Thanks I'll try that soon.
vim,3dl4ks,Fireblasto,1 point,Sat Jul 18 00:27:25 2015 UTC,"I don't think that works in vanilla Vim though. Try it with a neovim build.  Also, similarly, you can paste from the system clipboard using ""+p. I have all the different yank and paste commands attached to my leader key for this. example:  nnoremap <leader>y ""+y nnoremap <leader>yy ""+yy nnoremap <leader>Y ""+Y   And paste gets the same treatment"
vim,3dl4ks,epage,1 point,Sat Jul 18 04:58:27 2015 UTC,It works if Vim has been compiled with clipboard support. So either build from source or grab the full featured gvim package which has it it on every distro.
vim,3dl4ks,borring,2,Sat Jul 18 18:28:49 2015 UTC,This is one major reason holding me back from using neovim
vim,3dl4ks,Northstat,1 point,Fri Jul 17 13:45:58 2015 UTC,"What's the exact feature of the GUI that you need? Also, have you seen this page?"
vim,3dl4ks,interiot,3,Sat Jul 18 04:56:22 2015 UTC,"lol don't downvote him because he likes the GUI version, it's still vim!"
vim,3dl4ks,happyteapot,1 point,Fri Jul 17 04:10:32 2015 UTC,"GUI for files that I keep open for a long time on local machines, console for remote machines or local development.  I use one Vim instance with lots of tabs, and it's just quicker to find the master Vim window when it has its own icon in alt-tab."
vim,3dl4ks,tsahyt,6,Fri Jul 17 13:13:06 2015 UTC,"60/40 gvim, vim"
vim,3dl4ks,dantheman1723,4,Fri Jul 17 06:58:01 2015 UTC,Gvim unless I'm just editing some config file quickly when I'm already working in the terminal.
vim,3dl4ks,mojave_wasteland,4,Fri Jul 17 12:18:29 2015 UTC,"Both, but GVIM more frequently. Terminal if I'm remote."
vim,3dl4ks,StarGangCo,3,Fri Jul 17 05:25:02 2015 UTC,"Terminal version, because:  1) gvim has these ugly white borders around its window when it's maximized / switched to fullscreen.  2) Like somebody already said, you can use tmux to stop using Alt+Tab all the time (I have F12 bound to ""switch window"" and some other hotkeys, so I don't need Ctrl+B). Or, if your terminal supports tabs, you're good to go already.  3) Terminal version's look is controlled by the terminal, so there are more ways to control how your vim looks (transparent background, anyone?)"
vim,3dl4ks,henry_kr,5,Fri Jul 17 06:32:28 2015 UTC,"Transparent terminal backgrounds were a big deal back in 1996, I think there were few terminals that supported it at the time. I was using enlightenment 16 + Eterm. Now it seems kinda tacky to me. I do what's least harmful to my eyes and that definitely doesn't include having to read text on a patterned background."
vim,3dl4ks,5225225,4,Fri Jul 17 08:06:15 2015 UTC,"Along with bouncing windows I've never really got in to transparency, other than the initial 'ooh, this looks cool' phase. It only takes a little while before the 'actually I can't read anything' phase kicks in."
vim,3dl4ks,BillyBoyBill,2,Fri Jul 17 09:43:38 2015 UTC,"Wait, dark backgrounds cause eye damage? I would think it's the other way round, as light backgrounds are effectively looking into something bright constantly."
vim,3dl4ks,5225225,2,Fri Jul 17 09:50:19 2015 UTC,"Nope, they aren't bad for you.  ""Straining"" your eyes (e.g. by reading in the dark) can be uncomfortable, but won't cause long term damage.  Otoh, make sure your sunglasses have proper UV protection and always wear protection when welding.   Source: child of an ophthalmologist"
vim,3dl4ks,KnightHawk3,2,Fri Jul 17 11:23:03 2015 UTC,"I'm already short sighted, so I'm fine there.  And bright colour schemes make me need to squint, and my eyes definitely do hurt after browsing a website that is bright for a long time."
vim,3dl4ks,KnightHawk3,1 point,Fri Jul 17 14:41:54 2015 UTC,"How is it bad for your eyes, a quote I remember is, ""You will never hurt your eyes by using them""  (within limits obviously)"
vim,3dl4ks,5225225,1 point,Fri Jul 17 11:31:23 2015 UTC,Perhaps. But why is it bad for your eyes?
vim,3dl4ks,5225225,2,Fri Jul 17 11:39:57 2015 UTC,"Transparent windows looks nice if you have a fitting background. If you have a really bright background, agreed it looks like crap.  https://u.teknik.io/lPfusu.png is a fake-busy scrot of my desktop, with transparent terminals."
vim,3dl4ks,5225225,1 point,Fri Jul 17 11:08:23 2015 UTC,"Fair enough. I like it, I tried opaque terminals but couldn't get used to them, transparent looks better."
vim,3dl4ks,5225225,1 point,Fri Jul 17 11:09:46 2015 UTC,"You're gonna need a source for that. I can't find anything that says transparent terminals cause eye strain (or white on black colour schemes, for that matter).  People have said that it reduces eye strain, for both those statements."
vim,3dl4ks,5225225,1 point,Fri Jul 17 11:23:17 2015 UTC,"Although there is no reliable evidence to suggest that even long-term intensive use of VDUs is damaging to the eyes, it is true that VDU users tend to complain of eye strain more than non-users.   http://www.eyecaretrust.org.uk/view.php?item_id=113"
vim,3dl4ks,AlpineCoder,1 point,Fri Jul 17 11:22:09 2015 UTC,"I have. Therefore, at least one person has."
vim,3dl4ks,galudwig,2,Fri Jul 17 11:26:44 2015 UTC,"I actually write most of my code in transparent terminals with videos (usually MST3K or anime) playing behind them. It doesn't seem to have any noticeable effect for me in terms of eye strain as compared to opaque terminals, but YMMV. I think it also depends quite a bit on the monitor, I don't particularly like doing this on the built in retina on my MBP, but always have them going when I'm on my big IPS panel."
vim,3dl4ks,AlpineCoder,2,Fri Jul 17 11:34:42 2015 UTC,Whoa that would murder my productivity if I did that.. How the hell do you stay focused?!
vim,3dl4ks,VCavallo,2,Fri Jul 17 11:59:34 2015 UTC,"For me it seems about the same as listening to music. I may stop every now and again to watch a really good scene or something, but when I'm in the zone it's just background, I don't even notice it."
vim,3dl4ks,StarGangCo,1 point,Fri Jul 17 12:05:15 2015 UTC,"Have you heard of Solarized? If not, you need to look into it. I can't go back."
vim,3dl4ks,VCavallo,1 point,Fri Jul 17 12:10:44 2015 UTC,<3 solarized. On a white background. Sometimes a soft yellow background is nice too.
vim,3dl4ks,mojave_wasteland,1 point,Fri Jul 17 12:14:10 2015 UTC,As far as I knew solarized (light and dark) have their own specific background colors that are pretty important to the full experience.   It's mostly about the quality of the contrast between text and background
vim,3dl4ks,hobb0001,1 point,Fri Jul 17 12:07:36 2015 UTC,"Well, you don't have to have patterned background, you can have some smooth gradient!"
vim,3dl4ks,Michaelmrose,1 point,Fri Jul 17 12:14:30 2015 UTC,"Reminds me of the current fad in TV shows and movies where they start writing on a glass ""whiteboard"". How is that even legible? (Putting aside the fact that it's used to keep the cleavage in-frame.)"
vim,3dl4ks,mojave_wasteland,1 point,Fri Jul 17 15:14:28 2015 UTC,transset can make any window any amount transparent. Then you just need a way to apply it automatically based on the window class of created windows. In i3 this is done with for_window
vim,3dl4ks,Michaelmrose,2,Fri Jul 17 17:51:44 2015 UTC,"I can be wrong, but doesn't this make fonts transparent as well?"
vim,3dl4ks,tsahyt,1 point,Fri Jul 17 20:20:51 2015 UTC,it does but at 95% opaque you can see the background without losing readability
vim,3dl4ks,mlmcmillion,1 point,Fri Jul 17 16:06:58 2015 UTC,"3 is actually one of the main reasons I prefer the GUI version. This way my color schemes are independent from what I use in the terminal. I switch color schemes a lot, depending on the time of day, outside light etc."
vim,3dl4ks,dilithium,3,Fri Jul 17 19:22:06 2015 UTC,"Terminal. Partly because for work we develop in a huge VM, so SSHing is the way to go. But even when I'm working locally I typically just use tmux/vim in the terminal as well since I'm so used to it.  I do wish it would run as snappy in the terminal as it does in gvim though."
vim,3dl4ks,mlmcmillion,2,Sun Jul 19 15:27:54 2015 UTC,"you can use a local editor, using sshfs or rsync.. depends on your workflow"
vim,3dl4ks,dilithium,1 point,Fri Jul 17 18:59:58 2015 UTC,"Until you need to use Git, and then it goes to shit."
vim,3dl4ks,mlmcmillion,1 point,Sat Jul 18 03:47:28 2015 UTC,"with sshfs? .. that works fine. it's just slow on write, but the vim UI will be way faster."
vim,3dl4ks,dilithium,1 point,Fri Jul 17 08:34:28 2015 UTC,"Unless you have anything that uses git status, and then it's absurdly slow (over sshfs). Rsync isn't really an option either, as you end up sitting and waiting longer to refresh changes in the browser. Despite the slight sluggishness in terminal vim vs gui, it's still much smoother overall to just do it in the vm."
vim,3dl4ks,-romainl-,1 point,Fri Jul 17 18:58:22 2015 UTC,"yes, if you do git on your local machine... the way I used to do it was all the git stuff was done on the remote machine through ssh, and sshfs was used only for the local editor. This setup works well except for write speed. I ditched it because tmux / terminal vim was just easier in the end anyway."
vim,3dl4ks,phantom94,3,Sat Jul 18 00:48:43 2015 UTC,"Both, depending on the context. I use them exactly the same way and have them set up exactly the same anyway."
vim,3dl4ks,alasdairgray,2,Fri Jul 17 12:21:23 2015 UTC,I have no reason to use gVim over normal Vim  edit: spelling
vim,3dl4ks,flukus,2,Fri Jul 17 04:17:51 2015 UTC,Both. But some 65% / 35% in favour of MacVim.
vim,3dl4ks,coryknapp,2,Fri Jul 17 10:52:42 2015 UTC,Gvim exclusively. Not that I ever use any of the UI elements apart from mouse interaction when I'm coming from another window.
vim,3dl4ks,kyusan,2,Fri Jul 17 15:26:32 2015 UTC,mostly macvim because the command-s and command-z muscle memory is just too strong.
vim,3dl4ks,acid2do,2,Fri Jul 17 18:22:14 2015 UTC,Only terminal
vim,3dl4ks,gordin,2,Fri Jul 17 19:19:01 2015 UTC,"macvim to open files from the finder, attachments, etc. terminal vim for development."
vim,3dl4ks,Wiggledan,2,Sat Jul 18 13:42:38 2015 UTC,"I switched to neovim 2 months ago, which does not have a GUI yet, so… (Used terminal vim before that anyway though)"
vim,3dl4ks,tmaffia,2,Fri Jul 17 08:33:42 2015 UTC,"On Linux, I use the terminal version, but I use gvim on  Windows"
vim,3dl4ks,verandaguy,2,Fri Jul 17 05:05:39 2015 UTC,"If you are on OSX, you will find that MacVim is really good compared to other gvim clients. It has better integration with the system compared to say gnome vim on linux. You can use many keyboard shortcuts like cmd-s, cmd-c, cmd-v, cmd-o without having to rebind stuff. It has really good integration with the system clipboard which I find is n4ot true of the terminal version or the gui version on other platforms."
vim,3dl4ks,the_peanut_gallery,2,Fri Jul 17 05:32:05 2015 UTC,"There's a GUI version?  But seriously, terminal Neovim all the way."
vim,3dl4ks,toadums,1 point,Fri Jul 17 07:13:41 2015 UTC,I use the two about equally.
vim,3dl4ks,vuldin,1 point,Fri Jul 17 07:22:52 2015 UTC,"Gvim if I am working at home with my external monitor, cause I like a terminal on my laptop screen, gvim on external full screened.   If I am working remote on my laptop I use terminal vim even though it doesn't look or feel as nice"
vim,3dl4ks,Have_you_tried_this,1 point,Fri Jul 17 07:24:37 2015 UTC,I don't think I even have a graphical version of vim installed.
vim,3dl4ks,mikespimpin,1 point,Fri Jul 17 09:49:20 2015 UTC,Terminal.
vim,3dl4ks,henry_kr,1 point,Fri Jul 17 10:57:31 2015 UTC,console
vim,3dl4ks,zoranz,1 point,Fri Jul 17 12:36:46 2015 UTC,I've been using vim since about 2002. In that time I've used gvim for probably less than an hour while I practically live in vim on the terminal.
vim,3dl4ks,Candy_Herbert,1 point,Fri Jul 17 14:14:43 2015 UTC,Only terminal version.
vim,3dl4ks,5225225,1 point,Fri Jul 17 13:13:34 2015 UTC,/terminal
vim,3dl4ks,the0loko,1 point,Fri Jul 17 04:08:16 2015 UTC,Terminal vim all the way. Gotta have those transparent windows yo.
vim,3dl4ks,fixles,1 point,Fri Jul 17 07:16:28 2015 UTC,When working with several files I use gvim because tabs.
vim,3dl4ks,baabelfish,1 point,Fri Jul 17 07:34:23 2015 UTC,Terminal vim inside a tmux session
vim,3dl4ks,DerBunman,1 point,Fri Jul 17 07:38:29 2015 UTC,terminal
vim,3dl4ks,MadTux,1 point,Fri Jul 17 09:17:50 2015 UTC,I use gVIM more often because it is my main editor at work (web developer).  But I also use the terminal version multiple times every day to tinker at server configs and stuff like that.
vim,3dl4ks,wichtounet,1 point,Fri Jul 17 09:41:27 2015 UTC,"I think I would use the GUI version a lot if it didn't feel so clunky, and also functioned properly as a terminal."
vim,3dl4ks,oicpreciousroy,1 point,Fri Jul 17 10:49:52 2015 UTC,I never used the GUI version. Don't see the point.
vim,3dl4ks,PlayMeWhile,1 point,Fri Jul 17 10:54:18 2015 UTC,Gvim Portable/Mac Vim. I've customized my config to the point where the experience is just about the same on Windows and OSX.
vim,3dl4ks,ismtrn,1 point,Fri Jul 17 11:26:55 2015 UTC,iterm2 +  ssh + tmux + neovim. Never even used GUI version.
vim,3dl4ks,GODZILLAFLAMETHROWER,1 point,Fri Jul 17 11:27:56 2015 UTC,"The graphical version. I have an alias vr for gvim --servername VIM --remote-silent. So when I vr file1 it opens a new window with the graphical vim in it, and I get to keep on using the terminal window. When I then vr file2, that file is opened in the same instance of vim.  I think doing it this way is integrates better with a terminal based workflow. I don't loose the terminal window every time I want to open a file."
vim,3dl4ks,__baxx__,1 point,Fri Jul 17 11:37:29 2015 UTC,"I use the terminal more.  I'm often in a VM or on a remote server fixing things with vi(m). I seldom use scp for remote access files so I'm using the terminal first and foremost.  I see a lot of people using tmux. I'm not really clear on the advantage for this. I use terminator to have split panes, I don't really know what I'd need more.  I have a .gvimrc that is sourced in my vimrc for the times I want to use GVIM, with some custom options adapted for the GUI version, but it's been a few month already since I've launched it.  Usually I needed to when I had a plugin lagging, but I made an effort to disable the most plugin and force myself to use the existing functionalities to be more efficient on bare systems. So far so good."
vim,3dl4ks,GODZILLAFLAMETHROWER,1 point,Fri Jul 17 11:41:20 2015 UTC,"I used terminator then tmux, I found tmux nicer and I think it can be scripted more? Not too sure there... Don't remember terminator having multiple windows like tmux either but I could be wrong there"
vim,3dl4ks,__baxx__,1 point,Fri Jul 17 11:49:22 2015 UTC,"What do you mean by multiple windows? Several splits (either horizontal or vertical)? That was actually my motivation for trying terminator (C-T-E and C-T-O to split the terminal).  As it was the main selling point of tmux, I haven't really looked into it. I have all the functionalities I think I need presently, however I'm sure there are useful things I'm not even aware of that are possible in tmux. It's just that I haven't really heard of any."
vim,3dl4ks,1337_n00b,1 point,Fri Jul 17 12:36:17 2015 UTC,"Yeah splits /windows / panes  I never know what to say.... But tmux can have split panes like tmux as well as nested windows?   Ctrl-c will make a new window within the same session, which can then be split up... And tmux works better over SSH and stuff, just seemed like a fuller thing.   I don't really know much about this stuff though, that's just the impression I got."
vim,3dl4ks,kevinjqiu,1 point,Fri Jul 17 12:46:16 2015 UTC,Always terminal. I use Leafpad or Gedit if CLI gets too hairy.
vim,3dl4ks,el_seano,1 point,Fri Jul 17 13:30:34 2015 UTC,Terminal vim + tmux
vim,3dl4ks,CheshireSwift,1 point,Fri Jul 17 13:32:32 2015 UTC,"In Linux/OS X, terminal.  In Windows, gVim.  I hop around a lot."
vim,3dl4ks,__sprinkles,1 point,Fri Jul 17 13:39:17 2015 UTC,"Terminal. Normally in Cygwin Tmux, fwiw."
vim,3dl4ks,metacoin,1 point,Fri Jul 17 13:52:32 2015 UTC,"I've never tried the GUI version, and I've never seen anyone use it. One of these days I'll have to scope it out. VIM and GUI just don't go together in my brain."
vim,3dl4ks,TerrordactylYOU,1 point,Fri Jul 17 15:11:35 2015 UTC,OSX: 80/20 gvim/terminal
vim,3dl4ks,SmokeyDBear,1 point,Fri Jul 17 15:28:22 2015 UTC,There's a GUI version?
vim,3dl4ks,psaldorn,1 point,Fri Jul 17 15:40:20 2015 UTC,"Hard to say, I use gvim whenever I know it's available and vim whenever I don't.  I do a lot of remote logins where I don't X forward so I end up using vim a good bit but it isn't my first choice."
vim,3dl4ks,mathwiz1991,1 point,Fri Jul 17 14:21:36 2015 UTC,"gVim, but not my preference, just works better in windows (and have to use mouse for GameDev anyway, so don't mind.   Shame win8 alt-tab is so unpredictable."
vim,3dl4ks,sybrandy,1 point,Fri Jul 17 14:33:37 2015 UTC,"I used terminal vim and tmux with a full screen terminal on my external monitor until I switched to having two external monitors. On OS X, I can't have a single window span multiple monitors so I switched to MacVim on one monitor and iTerm2 on the other, both fullscreen. I slate set up with commands to switch between them which provides a similar workflow as I had with tmux which has worked out really well for me now."
vim,3dl4ks,maredsous10,1 point,Fri Jul 17 14:47:34 2015 UTC,Terminal plus Tmux when appropriate.
vim,3dl4ks,dhruvasagar,1 point,Fri Jul 17 14:53:08 2015 UTC,gvim on windows with menu and scroll bars disabled.
vim,3dl4ks,_zenbro_,1 point,Fri Jul 17 15:22:44 2015 UTC,"Once you start using vim they way it was meant to, i.e. with only the keyboard and nothing else. It no more makes sense to use the GUI anymore since it does not add any value besides being able to use mouse, which too is reasonably well supported within terminals."
vim,3dl4ks,grokaholic,1 point,Fri Jul 17 16:10:26 2015 UTC,"ArchLinux: i3wm, 80% gvim, 20% vim"
vim,3dl4ks,chriscowley,1 point,Fri Jul 17 17:49:41 2015 UTC,Terminal. Are there benefits to GUI?
vim,3dl4ks,mpbikeman,1 point,Fri Jul 17 18:06:34 2015 UTC,Everytime I use the GUI version I feel just a little bit dirty.
vim,3dl4ks,chriscowley,2,Fri Jul 17 18:16:59 2015 UTC,Please go on...
vim,3dl4ks,bartmanx,1 point,Fri Jul 17 23:55:52 2015 UTC,"Dunno, but to me it feels wrong to use Vim in a GUI. I know I am not being rational, but it just does."
vim,3dl4ks,dougcosine,1 point,Sat Jul 18 01:51:10 2015 UTC,"I use /r/neovim (terminal) 100% of the time.  Most of the time I run it in tmux, after sshing to a machine in the lab."
vim,3dl4ks,corney91,0,Sat Jul 18 14:46:33 2015 UTC,Why did you respond that you use both gVim more and terminal Vim more?
vim,3dl4ks,borring,8,Sat Jul 18 17:01:46 2015 UTC,I'm presuming they're trying a poll where people upvote a comment depending on their choice. Unfortunately Reddit doesn't work like that...
vim,3dl4ks,RotationSurgeon,2,Sun Jul 19 06:43:58 2015 UTC,I thought that was against the rules. I think I read it somewhere. But sometimes it just ends up being something I made up.. So I can never be sure.
vim,3dl4ks,dougcosine,1 point,Sun Jul 19 19:21:28 2015 UTC,"Probably, since it's basically just begging for karma."
vim,3dl4ks,mycivacc,1 point,Fri Jul 17 08:26:12 2015 UTC,That makes sense.
vim,3dl4ks,MrJNewt,0,Fri Jul 17 11:12:25 2015 UTC,Used to use gvim exclusively but now only run neovim.
vim,3dl4ks,SMACz42,0,Fri Jul 17 12:21:30 2015 UTC,Terminal neovim.  The fullcolor support eliminated the last reason for using gvim.
