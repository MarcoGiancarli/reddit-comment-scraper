swift,3e2w1v,cathkay,1 point,Tue Jul 21 15:21:33 2015 UTC,Pretty cool. I use a similar tool called Jibber. It's not free though.
swift,3e422u,ketzusaka,1 point,Tue Jul 21 20:09:56 2015 UTC,"That was very interesting.  I had to look up some more Swift 2.0 docs to fully understand how you were embedding a bare case in an expression.  Even though I'm loving Swift enums, and look forward to embracing the new guard command I still am not sure I like the way that code reads.  Maybe I just need to get used to it.  Other libraries might do it this way:  guard let name:String = json[""name""]?.string else { return }   That reads pretty easy: ""Ensure that this variable, a non-optional string, can be assigned the value of that property otherwise return"".  That's equivalent to this for the linked project:  guard case .String(let name) = JSON[""name""] else { return }   I understand what it means.  The enum result of JSON[""name""] must be the .String case and its associated value should be assigned to name otherwise return.  It just takes a bit longer for me to get there.  Thanks for giving me something to think about."
swift,3e4juw,StraightZlat,1 point,Tue Jul 21 22:15:59 2015 UTC,How about CGRectContainsPoint? https://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/CGGeometry/index.html#//apple_ref/c/func/CGRectContainsPoint
swift,3e4juw,skoll,1 point,Tue Jul 21 22:53:53 2015 UTC,"The thing is that my two points might not be on the same x or y coordinate so if I make a rectangle between those points it wouldn't really make a line between them that I could check if my object is in between, it would create a rectangle that includes areas also not in between my two points."
swift,3e3gml,flCer,6,Tue Jul 21 17:44:25 2015 UTC,"I've used NSOperations extensively. They're incredibly useful for making atomic operations that potentially require dependencies. You can abstract away so much detail, and have classes like ""SignInOperation"", ""SignOutOperation"", that are obvious what they do. You can run these operations from anywhere and have a single expected outcome. In the WW talk this year I was intrigued by the concept of UI operations. I've strictly used them for networking and model work, but bringing them into the UI is a really cool idea. That way you can set up dependencies and have business rules around when/where specific UI operations should occur."
swift,3e3gml,ferdjuan,1 point,Tue Jul 21 18:20:19 2015 UTC,"I use NSOperations a lot, but I am considering making an open source framework that will be more Swift. The idea is to have Futures that are cancelable, along with not only a Futures Queue that works like an NSOperationQueue, but also a Futures Stack that will work like a queue but be LIFO."
swift,3e3gml,FutureIsMine,1 point,Tue Jul 21 18:38:24 2015 UTC,"I used it for NSURLConnection, then I switched over to NSURLSession"
swift,3e0ycv,mattd2173,1 point,Tue Jul 21 02:53:56 2015 UTC,"Having just completed my own SAML implementation , I can definitely tell you the resources are very limited since it's  somewhat outdated technology.   Are you the client or SP? Do you need to build the SAML assertions yourself?"
swift,3e0nbw,questdark,2,Tue Jul 21 01:22:54 2015 UTC,"Absolutely Not, TableViews and CollectionViews use Reuse queues instead. When a cell goes off screen it goes into the reuse queue, and the tableView/collectionViews really are only holding onto around 10-20 items at a time anyway in order to keep their memory footprint down. As for loading elements, that depends on how you want to set it up. Certain apps will have a way to handle speed loading, which is loading ahead, so if Im going to scroll through 70 elements, than Im going to load the last elements first, and go backwards from there. A Stack is a good datastructure to use, you could even make your own NSOperationStack in order to handle those kind of situations if you would like. Keep in mind that while your images are 200-400 kb, they realistically are actually 3-5 megabits once the GPU unpacks them. As for loading 200-400 KB that depends on the network latency, on a wi-fi thats very quick to load, but if Im stuck in a New York metro, that could be a big deal. I recommend you find a way to handle off-line or poor connectivity as well in your app."
swift,3e0nbw,FutureIsMine,1 point,Tue Jul 21 01:45:37 2015 UTC,"So you made it sound like the Table/Collection views handle everything. So for my backend, it's alright to serve upwards of hundreds of items at once?"
swift,3e0nbw,FutureIsMine,1 point,Tue Jul 21 02:13:49 2015 UTC,"That is one option to serve a lot of items at once, however, it will take longer than say serving 10-20 items at a time. If you want to serve a hundred items, make that a long running background download task and notify the user that it is complete."
swift,3e0nbw,Catfish_Man,1 point,Tue Jul 21 02:17:23 2015 UTC,"If you're pulling hundreds of images into ram at any given time, you risk being terminated due to memory usage. Probably best to set up something to download them to disk as a cache, then asynchronously load the ones you need to show from there."
swift,3e0nbw,mistermagicman,1 point,Tue Jul 21 04:43:05 2015 UTC,"No - for your backend I recommend looking into a way to provide a URL for each image, and use SDWebImage to load them asynchronously - it plays very nicely with table views and collection views."
swift,3e0nbw,yeskia,1 point,Tue Jul 21 04:53:50 2015 UTC,If you're using Core Data as your store you can look at using the fetched results controller which will load into memory objects only when they are being displayed.
swift,3e0nbw,criosist,1 point,Tue Jul 21 03:27:48 2015 UTC,"It sounds like your loading the images in using contentsOfURL: this is probably whats making it slow, use as suggested SDWebImage or if you are already using AFNetworking/AlamoFire then this comes with UIImageView+AFNetworking/AlamoFire which allows lazy loading of images via:  imageView.setImageWithURL(....)"
swift,3dz9dl,guidomb,1 point,Mon Jul 20 19:05:31 2015 UTC,"Very nice! I don't really use ReactiveCocoa because it seemed like a lot of hassle, but this makes me wanna learn it because that's awesome!"
swift,3dz9dl,Kametrixom,1 point,Tue Jul 21 08:58:00 2015 UTC,"Maybe I'm misunderstanding how it works, but shouldn't those declarations in the examples be var and not let?"
swift,3dy30h,foBrowsing,3,Mon Jul 20 14:01:31 2015 UTC,"Do you have any suggestions for tagging?   I can think of a few (not saying we should use all or any of these, just my thoughts):   Original Content Tutorial Question Featured (more of a mod thing) Public Service Announcement Good Resource Code Review ""Can't you just do it for me?"""
swift,3dy30h,tcdb28,3,Mon Jul 20 15:51:51 2015 UTC,"Don't forget a tag for ""Question/Article about Apple frameworks that has nothing to do with the actual Swift language"", so people who are actually interested in the language can filter those out."
swift,3dy30h,fontstache,2,Tue Jul 21 09:23:43 2015 UTC,Yes! This please! It's so annoying on here and StackOverflow to see all those question about Cocoa and whatnot but soo little about the actual language. I'm so happy when I see a Swift framework in functional style or some cool new design-pattern possible with Swift
swift,3dy30h,Kametrixom,1 point,Tue Jul 21 18:33:33 2015 UTC,"That's pretty much what I had in mind, yeah. What I think is important, also, is to be able to communicate when I'm the person who wrote what I've posted.  In general, tags would allow people to selectively block out some kind of posts, which I think might become really important. For instance, there are a lot of beginners' questions on here (which I think is fantastic). I could imagine over the next few months, as Swift becomes more popular, that the volume of those questions would increase. What I'm worried about - and maybe I'm wrong - is that people would get annoyed, and either start downvoting every newbie question, or leaving nasty and dismissive comments. Letting people opt out of the beginner questions might curtail that.  To be clear, I don't think that that has happened yet: everything I've seen on here so far has been 100% positive, and I'm really enjoying all of it. But look at this comment thread on /r/programming, and you'll see what I mean."
swift,3dy30h,tcdb28,1 point,Mon Jul 20 16:38:30 2015 UTC,"I see what you mean... that was a rough thread.   Personally, I like helping inexperienced people out but it would get rather taxing if that's the majority of posts with no way to filter. I also really like the idea of being able to quickly determine OC."
swift,3e0edn,gluecode,2,Tue Jul 21 00:09:55 2015 UTC,SOLVED. Answer here: http://stackoverflow.com/questions/31528290/accessing-values-in-swift-1-2-multi-dimensional-arrays
swift,3dyute,hagrids_a_pineapple,4,Mon Jul 20 17:25:01 2015 UTC,"You'll probably want to use NSTimer:  NSTimer.scheduledTimerWithTimeInterval(60, target: self, selector: ""functionNameYouWantToRunWhenTimerReachesTimerInterval"", userInfo: nil, repeats: true)"
swift,3dyute,tractorrobot,1 point,Mon Jul 20 17:32:46 2015 UTC,Just mind that it timers don't fire in the background ;)
swift,3dyute,vale93kotor,0,Tue Jul 21 05:53:57 2015 UTC,"Wow. I should have known this. A couple questions. With ""60"" as the ticker, this will only update the label every minute. If I want the seconds to update too, is it as easy as adding another timer with a 1 second ticker? Also, say the seconds ticker reaches 0. Can I just include an if-statement in the selector function that says:  if label.text == ""00"" {     label.text = ""59"" }"
swift,3dyute,tractorrobot,1 point,Mon Jul 20 17:42:50 2015 UTC,"I don't really think you'd need another timer, but you could just change the interval to 1 second.   It also may help to store an NSDate that represents the exact moment the timer started. Then you can do some date math to determine the amount of time that has has passed. In your function that your timer is calling, you can create a new NSDate and compare it to your startDate to see how much time is passed. If you get that amount of time in seconds, you can perform updates on your label using that number. If you want to determine if an entire minute has passed, you can divide the total seconds passed by 60. If you want to determine how many seconds have passed into the next minute, you could use the modulus -   So lets say you stored the totalNumberOfSecondsPassed, and it is currently 132.  totalNumberOfSecondsPassed / 60 = 2  //So, at least two minutes have passed. Int math doesn't provide a decimal  totalNumberOfSecondsPassed % 60 = 12 //Modulus provides the remainder. With this info you can update your label to say 2:12"
swift,3dyute,tractorrobot,0,Mon Jul 20 17:57:25 2015 UTC,Very interesting method. An issue I foresee with that in my case that if they were to pause the timer that may not work. I'm sure I can figure out the math just using one second intervals. Thank you so much this is definitely a solid push in the direction I'm looking to head into.
swift,3e024l,triag,5,Mon Jul 20 22:32:38 2015 UTC,"This guy Ray Wenderlich was the base to everything I needed to know when I first started programming. (started with swift) http://www.raywenderlich.com/category/swift  After about 2 weeks of casually learning python on codeacademy, I decided I needed to learn something more applicable to apps. The small time I put into python introduced me to the basic principles of variables and data types. The tutorials by Ray W. showed me so much more as well as how xCode works.  My advice is playing around with code on Playground with code you find reading and learning through tutorials.   But wait.. my NUMBER 1 advice. Type code. Type it every day. Type that shit out and see what happens.. from 5 mins to 6 hours.. maybe you don't make anything useful.. even if it doesn't work in the end. Always remember that you're further than you were when you started. Little by little your programming brain will grow and your mind will be blown in all kinds of awesome ways.  EDIT: P.S. Watching/copying people on youtube is a good break from reading tutorials."
swift,3e024l,WZK47,3,Tue Jul 21 02:57:14 2015 UTC,"I wrote a Swift tutorial series, and it's completely free online: Hacking with Swift. You make 20+ real world projects, you learn concepts in a smooth curve as you need them, and you get a mix of things like UIKit, SpriteKit, Core Graphics, Core Location and more. Did I mention it's free? :)"
swift,3e024l,twostraws,2,Tue Jul 21 18:07:11 2015 UTC,"Try Udemy. There is a great course for $50 right now... keep in mind with absolutely zero programming experience, it will be challenging, but doable. But, understand it gets easier with time.   Good luck!   https://www.udemy.com/complete-ios-developer-course/?utm_term=learn+swift+apple&utm_campaign=Swift-Search-SN&matchtype=b&utm_medium=udemyads&k_clickid=2b9f31d6-44bc-41af-b222-12e6ca44547f_408_Google_Swift-Search-SN_Learn_learn+swift+apple_b_44834611309_c&utm_content=44834611309&utm_source=adwords&gclid=Cj0KEQjwuLKtBRDPicmJyvu_qZMBEiQAzlGN5ncbA7afGgBmzSKUZAF2RGSOKxQtfVF-Aa05Ihso53EaAtzy8P8HAQ&couponCode=200c2b6a-f596-433b-bc2e-ccbaaad78a88"
swift,3e024l,Tofu-tori,1 point,Mon Jul 20 22:39:27 2015 UTC,You need a concept first. Then you can think about the language.
swift,3e024l,Zthulu,2,Tue Jul 21 01:38:57 2015 UTC,Try Stanford's iTunesU course on iOS dev with swift. It's very good and free.
swift,3e024l,kostyan5,1 point,Tue Jul 21 17:18:19 2015 UTC,"Yes, it's good and free, but not for complete beginners. You have to be familiar with OOP, it's even said in the first video."
swift,3dz3op,Sharukh77,1 point,Mon Jul 20 18:26:20 2015 UTC,"Instead of runAction, try using this:  func runAction(_ action: SKAction, completion block: () -> Void)   and stick the transition code inside the completion block.  That way, the transition will not start until the groupOfActions has finished."
swift,3dz3op,DressTheMonkey,1 point,Mon Jul 20 19:08:44 2015 UTC,"I'm really new to iOS development, so I have no idea how to use that. Could you please show me how to? I will deeply appreciate it."
swift,3dz3op,i_am_a_genus,1 point,Mon Jul 20 20:09:00 2015 UTC,I have tried using this function but I'm not putting things in right order since I'm keep on getting errors.
swift,3dz3op,i_am_a_genus,1 point,Mon Jul 20 20:29:32 2015 UTC,"You basically just need to add a callback function to your runAction, then put everything you want to have happen after runAction completes inside of that callback.  For example:  func runAction(action: SKAction, withKey: String, callback: () -> Void) {     // stuff runAction should do     callback() }   and to run it:  runAction(groupOfActions, withKey: ""flash"") { () in     // Do things after runAction is complete     let myScene = GameOverNew(size: self.size)     myScene.scaleMode = scaleMode     let reveal = SKTransition.fadeWithDuration(2.0)     self.view?.presentScene(myScene, transition: reveal) }"
swift,3dz3op,DressTheMonkey,1 point,Mon Jul 20 21:37:50 2015 UTC,"Hey, thanks for responding. I still really don't get it. The code I want to run before the transition is the last part of else statement. I'm getting error and its probably because of me not doing it right. This is what I did:   func didBeginContact(contact: SKPhysicsContact) {      if( moving.speed > 0 ) {          if( ( contact.bodyA.categoryBitMask & scoreCategory ) == scoreCategory || ( contact.bodyB.categoryBitMask & scoreCategory ) == scoreCategory ) {              score++;             scoreLabelNode.text = ""\(score)""         } else {             moving.speed = 0;              bird.physicsBody!.collisionBitMask = worldCategory              var rotateBird = SKAction.rotateByAngle(0.01, duration: 0.003)             var stopBird = SKAction.runBlock({() in self.killBirdSpeed()})             var birdSequence = SKAction.sequence([rotateBird, stopBird])             bird.runAction(birdSequence)              runAction(groupOfActions, withKey: ""flash"") { () in                 // Do things after runAction is complete                 let myScene = GameOverNew(size: self.size)                // myScene.scaleMode = scaleMode                 let reveal = SKTransition.fadeWithDuration(2.0)                 self.view?.presentScene(myScene, transition: reveal)             }         }     } }   The runAction method:  func runAction(action: SKAction, withKey: String, callback: () -> Void) {     // stuff runAction should do     self.removeActionForKey(""flash"")     var turnBackgroundRed = SKAction.runBlock({() in self.setBackgroundColorRed()})     var wait = SKAction.waitForDuration(0.05)     var turnBackgroundWhite = SKAction.runBlock({() in self.setBackgroundColorWhite()})     var turnBackgroundSky = SKAction.runBlock({() in self.setBackgroundColorSky()})     var sequenceOfActions = SKAction.sequence([turnBackgroundRed,wait,turnBackgroundWhite,wait, turnBackgroundSky])     var repeatSequence = SKAction.repeatAction(sequenceOfActions, count: 2)     var canRestartAction = SKAction.runBlock({() in self.letItRestart()})     var groupOfActions = SKAction.group([repeatSequence, canRestartAction])     runAction(groupOfActions, withKey: ""flash"")     callback() }   I get an error, ""used of unresolved identifier 'groupOfActions) in didBeginContact method at runAction line."
swift,3dzivw,filipay,2,Mon Jul 20 20:14:35 2015 UTC,"Depends how it's implemented - but you can do progressBar.removeFromSuperview(), or progressBar.hidden = true."
swift,3dzivw,mistermagicman,2,Tue Jul 21 01:08:09 2015 UTC,"A nice way to do it is to use the animation api to allow it to fade away.  After the progress is filled, do this  UIView.animateWithDuration(0.3) { () -> Void in     progress.alpha = 0.0 }"
swift,3dzivw,voidref,1 point,Tue Jul 21 04:30:14 2015 UTC,Thank you! This works very well
swift,3dyls4,mrfoffoloff,1 point,Mon Jul 20 16:22:03 2015 UTC,"If your code is making a POST request, just use AlamoFire or NSURLRequest (I prefer the former.)"
swift,3dx0dg,MasterJones,4,Mon Jul 20 06:04:09 2015 UTC,You can save another 5 bucks for a final price of 10 bucks here: http://crunchadeal.com/coupon/complete-ios8-swift-course-coupon/
swift,3dx0dg,macgeekpro,1 point,Mon Jul 20 07:40:41 2015 UTC,Wow thank you!! Just purchased. Great deal :)
swift,3dx0dg,Rockstarjoe,1 point,Mon Jul 20 19:29:08 2015 UTC,Thanks! Just purchased.
swift,3dx0dg,coral7,0,Mon Jul 20 06:44:44 2015 UTC,"This is a good one...I have only completed 25% of it...from months ago.  The author keeps the content updated.  Hell...I keep going back because everytime Apple changes something (always seems to be improved), he goes back and fixes it."
swift,3dx0dg,clifyt,1 point,Mon Jul 20 20:37:02 2015 UTC,"Thanks! As a Go programmer, I've been intrigued by Swift. Going to start learning!"
swift,3dx0dg,aminoglycine,1 point,Mon Jul 20 20:42:30 2015 UTC,"The discount code worked on the Web class, too. Yay!"
swift,3dx0dg,ichimanu,1 point,Tue Jul 21 07:13:16 2015 UTC,aww the code expired...
swift,3dv5xf,terhechte,1 point,Sun Jul 19 19:56:09 2015 UTC,One of my hopes for Swift is they can come around and figure out a particularly elegant way to let us extend tuples.  God knows Haskell phoned it in.
swift,3dv5xf,CodaFi,2,Mon Jul 20 04:19:55 2015 UTC,"Scala's tuples are pre-generated classes. While it still looks awful, one can extend them:  class Coordinate[T,U](val x:T, val y:U) extends Tuple2[T,U](x,y)   This was a cause of great problems in the past as the auto generated tuples were limited to 22 parameters, but when applying this idea to Swift, this could work as a way of extending tuples:  extension Tuple2<U: Hashable, T: Hashable>(U, T) : Hashable {     var hashValue: Int { return /* magically join two hash values } } let dict: [(Int, String): String] = [(5, ""Yes""): ""Example""]"
swift,3dv5xf,jasamer,1 point,Mon Jul 20 07:37:26 2015 UTC,"One interesting limitation of tuples:  func f(tuple: (String, AnyObject)) {} let t = (""1"", ""2"") f(t) // ""Cannot express tuple conversion '(String, String)' to '(String, AnyObject)'""   Can be quite annoying at times. The solution is to add type information to the tuple (e.g. let t: (String, AnyObject) = (""1"", ""2""))."
swift,3dx58x,Dark_Angelas,1 point,Mon Jul 20 07:07:09 2015 UTC,"I'm hope I'm reading this question correctly... Notification fires off, badge number doesn't update unless application is open and closed?!? If that's the case you need to find a way to update the badge number when the local notification goes off. The easiest way would be to store all the due items in an array and append the new item to the dueItems array when the local notification goes off once the item is appended set the badge number to the dueItems.count. ( I hope that's not too confusing, if it is just refer to this tutorial, I think you will find the answer there... http://jamesonquave.com/blog/local-notifications-in-ios-8-with-swift-part-2/ ) I'm not sure what your asking here.. Are you wanting to keep the notification active until the due task has been cleared? I don't even know if it's possible. I'd probably approach the problem different and instead build a widget to display due tasks.. But I don't think thats what you are after."
swift,3dx58x,Groydis,2,Mon Jul 20 11:04:11 2015 UTC,"I was actually following the tutorial link you sent me. Though I was confused with the setBadgeNumbers() he did, so I implemented in my own way... I will take another look at it... Gmail works like this:    I get a notification I got an email. I open gmail application without clicking the notification. After reading an email and closing the app, the notification is gone.  My app: I get a notification a task is overdue I open the application and complete a task. I didnt touch the notification. Although I completed the task, the notification I received is still there. I still have to clear the notification."
swift,3dx58x,Groydis,1 point,Mon Jul 20 18:09:04 2015 UTC,"Right-o, I understand 2. now!  This -> stack overflow thread as the answer :  http://stackoverflow.com/questions/6340664/delete-a-particular-local-notification effectively you use, UIApplication.sharedApplication.cancelLocalNotification(notification) notification = the notification you want canceled."
swift,3dxuti,Darth__Nader,6,Mon Jul 20 12:46:36 2015 UTC,"When you create a subclass, you can override the superclass/parent class' method of the same name and arguments.  For example, suppose we have an Animal class with a method walk. In this method we make the animal walk on 4 legs.   class Animal {     func walk() {         // Walk on 4 legs     } }   Now we create a subclass of Animal called Human, however humans don't walk on 4 legs, so we can override the walk method to fit our need (2 legs).   class Human: Animal {     override func walk() {         // Walk on 2 legs     } }   The fact that we are overriding to completely change a method here is typically considered poor design. In reality you should avoid overriding methods by creating a good design/structure!  It's not just for changing a method completely though. Suppose in our example we create a subclass of Animal called Cheetah. Now cheetahs do walk on 4 legs, however they also wag their tail, so I can keep the default behaviour of walk by calling super.walk() then add some wagging code within the new override method in Cheetah.   class Cheetah: Animal {     override func walk() {         super.walk() // This calls the original parent (Animal's walk method)         // Also wag tail     } }   This is saying: we are going to override the animal method of walk; still do what animal walk does but also do more."
swift,3dxuti,csvillain,1 point,Mon Jul 20 12:55:55 2015 UTC,Thanks!
swift,3dxuti,TheMiamiWhale,1 point,Mon Jul 20 21:52:05 2015 UTC,"Good explanation but I just want to clarify one thing:  super.walk()   calls the Animal walk method in your example, which is why all the Apple populated overrides refer to super.<someMethod>.   In this example though, I'd argue Animal is an abstract class with no implementation of the walk method and thus no super call, but this is besides the point of what OP is asking about."
swift,3dz32d,Kubiedo,5,Mon Jul 20 18:22:18 2015 UTC,Acorns is actually IIRC a bank / trader so they can perform the bank transfers and move money around. Its real old school and potentially complex stuff from what I've read. Doubtful there is any swift in their stack ;-)  If you want a starting point on transferring money this wikipedia article explains some of it (I was reading it the other day coincidentally): https://en.wikipedia.org/wiki/Wire_transfer
swift,3dz32d,WantToStopRedditting,2,Mon Jul 20 18:38:45 2015 UTC,Thanks so much for taking the time to respond! I definitely learned something new today! Thanks again! :)
swift,3dz32d,FR_STARMER,2,Tue Jul 21 08:01:48 2015 UTC,"There may be Swift in their front-end app development, though. The wire-transfer functionality, probably not."
swift,3dz32d,WantToStopRedditting,1 point,Mon Jul 20 18:57:07 2015 UTC,Ah true forgot the client is part of the stack :D  I've been working on backend services a bit too much lately I guess.
swift,3dtija,ohmydev,13,Sun Jul 19 08:35:28 2015 UTC,"As someone who's eying Swift and being a total beginner, thanks for the inspiration/motivation"
swift,3dtija,Hipshaker,4,Sun Jul 19 09:30:08 2015 UTC,This is exactly my experience. Nice write up!
swift,3dtija,MrMaverick82,3,Sun Jul 19 10:03:34 2015 UTC,"Very inspiring, awesome write up. My question is however, did you ever have questions when things didn't work out and you didn't know why? There have been many times when I'm working on something and at some point I get stuck and it get's really annoying when I can't solve it out myself and would like to ask someone but don't know who."
swift,3dtija,throwawaycompiler,2,Sun Jul 19 11:53:20 2015 UTC,"Glad you enjoyed it! And ya there have been plenty of times where things didn't work out (especially when I downloaded an example app straight from Github and Xcode threw up a bunch of warnings) and honestly the first thing I do is search google, then I check stack overflow to see if someone there encountered the same errors, if nothing comes up then I would actually post on stackoverflow (after reading some solutions on SO I came to realize that there was not much tolerance for laziness so I made sure I truly couldn't find the solution anywhere else online before posting there)   I've spent days debugging things only to find out the solution was super simple. No matter what problem I've faced there has never been a problem that I couldn't solve, you just need to be willing to put in the work. Honestly, it's worth it. Even after finding a simple error caused a big, I usually learned like 20 other things in the process of debugging that made me a better developer. Think of it as a learning opportunity, not a roadblock"
swift,3dtija,jlrc2,1 point,Sun Jul 19 15:21:29 2015 UTC,"When all else fails, I start to return to the fundamentals. I revisit tutorials about the syntax and the very basics of whatever part of the code I think is causing trouble. It doesn't always fix things, but I always walk away knowing things better and many times I realize my mistake/come up with another way of doing the same thing."
swift,3dtija,alt51,1 point,Sun Jul 19 16:23:47 2015 UTC,Totally agree.  I learn more from little bugs that have me stumped for a day or so than I do any other method.  It's basically the process of learning all the ways that don't work and then when you do get it right you understand why it works so much more.
swift,3dtija,Tofu-tori,2,Mon Jul 20 07:10:07 2015 UTC,"Thanks for taking the time to share, good read and good advice!"
swift,3dtija,thelinuxfreak,2,Sun Jul 19 12:40:55 2015 UTC,Great tips! Are there any specific Swift tools that you would recommend to a fellow beginner?
swift,3dtija,halfaton,3,Sun Jul 19 14:16:25 2015 UTC,"Learn how to use Cocoapods, it makes developing very interesting and could save you a lot of time as well as open up potential features you didn't even consider. There is a tiny bit of a learning curve but it's worth it.  The Github swift trending page is a perfect ""tool"" to utilize as well, use it for inspiration and see what you can make with the existing projects.   I use Sketch for UI, it's great for mocking things up (and it makes you feel like a pro after using Xcode because you don't have to worry about ""I can't add this feature because I don't think I can code it"", your mind will run free)"
swift,3dtija,cjorgensen,2,Sun Jul 19 15:25:42 2015 UTC,"just getting into swift, appreciate this road map I should anticipate, thanks :)  took a peek at cocaopods prior and kinda scratched my head and thought ""I'll come back to that"", but after googling found the following...   http://www.raywenderlich.com/97014/use-cocoapods-with-swift  posting it as the tutorials I've found on that site have been the clearest most helpful I've found so guessing this will be useful to folks on this thread.  if you've programmed any OO before but new to swift, do check out that site, there a few great articles that connect the dots to your prior experience. I got pretty tired of reading tutorial after tutorial, watching some online stuff, and the tutors simply skipping over important details, that site was the first to explain the why of everything it was telling you to do."
swift,3dtija,caizo_ryan,3,Mon Jul 20 00:26:44 2015 UTC,I threw a buck your way just for the post. Thanks.
swift,3dtija,kueller,1 point,Sun Jul 19 22:06:13 2015 UTC,"Thank you! I seriously appreciate it, glad you enjoyed the post!"
swift,3dtija,kueller,2,Mon Jul 20 02:50:26 2015 UTC,Its ana awesome app! Great job! Can I please ask how many downloads did you get?
swift,3dtija,alt51,3,Mon Jul 20 04:52:50 2015 UTC,"Nice app! I will actually use that!  How did you solve the problem of varying connections? It's something I'm trying to build into my app now as the app relies on an internet connection to download a JSON file to function, but Reachability seems to work intermittently (although it could be because I don't fully understand it)."
swift,3dtija,kueller,1 point,Sun Jul 19 10:51:31 2015 UTC,"Thank you! Hopefully I'm understanding your question right, by varying connections do you mean different internet speeds (so downloading occurred at different rates and potentially caused crashes when data wasn't loaded fast enough) the way I fixed this was to make sure everything was to use asynchronous downloading and reloaded the view when the file was downloaded, also utilizing optional a to make sure that nothing crashed if the file was downloaded. Try using your app on airplane more and make sure things work as antipated when the file can't load. And if you require a JSON file I suggest maybe storing a JSON file on the phone which you can access in case there is no internet connection (so maybe a JSON folder with some placeholder messages and stuff)   My apologies If I failed to answer the question, seriously let me know if I messed up, I would love to help you out in any way I can"
swift,3dtija,SnowBelow,1 point,Mon Jul 20 02:55:59 2015 UTC,Imgur   Mind blown. Why did I not think of doing that? I've been so set on just getting it downloaded and working I didn't even think of it.  Thanks so much.
swift,3dtija,Lambaline,1 point,Mon Jul 20 18:02:10 2015 UTC,"Don't want to step on ohmydev's feet here, but I recently worked on a project that required JSON data to function, the easiest way to do things is to keep a local version of the files you need to function.  Then, when there is a connection, download new data and update the local file. This will allow you to just pull your data from the local JSON file while knowing that it's the most up to date data that you can currently provide to the user."
swift,3dtija,mick1203,2,Mon Jul 20 07:15:29 2015 UTC,"Yes, thanks! That's exactly what I'm going to do. Thanks for your help!"
swift,3dtija,brknrcrd,1 point,Mon Jul 20 18:02:37 2015 UTC,Great tips! Currently watching the free lectures Stanford offers on iTunesU. Still looking for more tools to help in the process of learning. I will look into the book that Apple offers.
swift,3dtija,jedrekk,1 point,Sun Jul 19 20:53:13 2015 UTC,"Interesting writeup. One question though, where do you draw inspiration for new apps from?"
swift,3dtija,winter_has_arrived,1 point,Mon Jul 20 03:06:52 2015 UTC,"So I usually draw inspiration from the Github tending swift page or the tutorials. For example, if I someone posts some code for a camera app I might think ""oh, I saw this tutorial on creating a Twitter like app on this site, maybe I can combine it with this camera app to make something like Instagram"" this process keeps going until I have something completely different than the separate components. I usually just make these apps for fun to see if I can, but it usually always ends up becoming something really cool that could be a potential app that I would put on the App Store!"
swift,3dtija,ReasonReader,1 point,Mon Jul 20 03:15:54 2015 UTC,Exactly like my experience has been. Good summary.
swift,3dtija,jlrc2,1 point,Mon Jul 20 04:54:01 2015 UTC,Thanks so much for taking the time to make this post! I just started getting into ios development too. How does making money with your app work exactly?
swift,3dv26r,bearchinski,6,Sun Jul 19 19:24:50 2015 UTC,"Most of the really useful books/tutorials are written for Objective-C. Swift is only just over a year old after all. The good news is that exactly the same concepts and APIs are used in both Objective-C and Swift. So that means if you've had prior programming experience you can just look up some 'older' resources that are written with Objective-C in mind (look for some of the more popular Cocoa books on Amazon, for example).  Also, there's http://www.raywenderlich.com, which I see you've already found. There are loads of good tutorials on there, such as http://www.raywenderlich.com/46988/ios-design-patterns (yes, this is iOS, but it almost all applies to OS X too, iOS and OS X are more similar than they are different). There's a Stanford MOOC too that's meant to be good; again, it's iOS, but it'd still be worth it. If nothing else it'd help with finding your way around Xcode.  WWDC videos from older years are incredibly useful, especially the ones where they introduce a major feature, to give you a better understanding of how some of their APIs work, e.g. Core Data, Core Animation, document-based apps, etc.  Finally, I'd just trawl Github for some good open source Mac apps to give you an idea for how a more complicated app should look like.  Edit: If you want to know things like naming conventions etc. for Swift, Apple's official Swift book is a good place to start, and this guide is also pretty good https://github.com/raywenderlich/swift-style-guide"
swift,3dv26r,k62,2,Sun Jul 19 20:57:22 2015 UTC,I wouldn't recommend the learn-translate approach. Swift has its own styles and idioms that you will miss out on if you are only translating. The Big Nerd Ranch Guide to Cocoa Programming (5th edition) is 99% swift code. I've been through it and the examples are fantastic. Also I know the authors and they are very attentive to the online support forum with all of the updates to swift that can't be reprinted into the book.  http://www.amazon.com/Cocoa-Programming-OS-Edition-Guides/dp/0134076958
swift,3dv26r,ifshes16im16,1 point,Mon Jul 20 05:12:52 2015 UTC,"Learn enough Objective-C that you can translate it into Swift, and a whole world of documentation and such will open up to you. Swift documentation for developing OS X applications is limited at best right now."
swift,3dwnzk,Larryn1030,1 point,Mon Jul 20 03:51:26 2015 UTC,"self.resultsLocationArray.append(object.objectForKey(""location"") as! String)   object.objectForKey(""location"") returns nil and you try to force-cast it to String.  The better way would be:  if let l:String = object.objectForKey(""location"") as? String {    // ... }"
swift,3dwnzk,sabiland,1 point,Mon Jul 20 09:01:05 2015 UTC,I'm not getting any results.. :(
swift,3dw8e2,manu2805,1 point,Mon Jul 20 01:28:33 2015 UTC,"I've seen a lot of stuff with Layer, and their API looks really easy to implement, but their pricing leaves a lot to be desired. I'm also wondering what else people have used, preferably with a decent free plan."
swift,3dw727,Larryn1030,1 point,Mon Jul 20 01:16:49 2015 UTC,"Seems like you might be unwrapping a nil value.  In most cases you want to try to avoid using ! to unwrap.  It's much safer to do something like this:  if let location = object[""location""] as? String {     self.resultsLocationArray.append(location) }   Something to note, it's not a good design to have an individual array for each value you're trying to use, especially if you safely unwrap like above.  You will only append each array if there is a value, so if one object has a nil value, your whole array is going to be off since it will be a value short.  A quick and easy alternative would just be saving all the result objects in one array:  var parseResults = [PFObject]()  query.findObjectsInBackgroundWithBlock { (objects:[AnyObject]?, error:NSError?) -> Void in     if let objects = objects as? [PFObject] {         for object in objects {             parseResults.append(object)         }     } }  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {      var parseObject = parseResults[indexPath.row]     var cell:mainCell = tableView.dequeueReusableCellWithIdentifier(""Cell"") as! mainCell     ...     cell.profileLbl.text = parseObject[""profileName""]     cell.messageTxt.text = parseObject[""tweet""]     ...  }   Also, with Parse objects, I find it a lot cleaner to use the shorter syntax for accessing an objects values:  object[""valueName""]   instead of    object.objectForKey(""valueName"")"
swift,3dvef9,KwattKWatt,1 point,Sun Jul 19 21:09:04 2015 UTC,"What is an app that you use everyday? What is something that you do everyday? Im sure that there is something you would like to make. Keep it simple at first and go from there. Don't think of making a new facebook, keep it simple , how about re-creating Apple's Notes app?"
swift,3dvef9,FutureIsMine,0,Sun Jul 19 22:36:57 2015 UTC,I would really like a new reddit app. But there is another guy creating it already and doesn't that also require a bit of network knowledge? I want to start small and go big but I don't know what to start with and where to go! Thanks for the comment.
swift,3dvef9,silver_belt,3,Sun Jul 19 23:15:20 2015 UTC,"First app I ever made was a digg app. It became a reddit app. It then got me my first full time software job, and I've been gainfully employed for about 5.5 years now.  Humble beginnings."
swift,3dvef9,FutureIsMine,1 point,Mon Jul 20 00:34:21 2015 UTC,Thanks for the inspiration!
swift,3dvef9,spinwizard69,2,Mon Jul 20 00:39:19 2015 UTC,"Don't worry if someone else made an app that you want to make. Make it anyway, I bet your going to do some parts better the them. That does require knowledge of Networking but there are plenty of resources for it."
swift,3dvef9,spinwizard69,1 point,Sun Jul 19 23:33:14 2015 UTC,I think I will go for it! Thank you!
swift,3dtxcx,octocoupler,4,Sun Jul 19 12:50:25 2015 UTC,"The type for userInfo is Dictionary<String, AnyObject>?. Make sure the value passed into the user info dictionary is an object-type (as opposed to a value-type) or that it's boxed into an object type.  You can't use NSTimer without importing Foundation anyways, as it's in Foundation.  Swift only converts native Strings to NSStrings (and other natives-types to NS-Types) when it needs to, such as when interfacing with Objective-C APIs like NSTimer."
swift,3dtxcx,tcdb28,1 point,Sun Jul 19 14:43:59 2015 UTC,"I imported SpriteKit, so I don't need to import Foundation. And does it really only convert Strings when it needs to? It appears to have side effects like this as well: http://stackoverflow.com/questions/24149456/swift-different-array-behaviour-with-import-foundation  My solution now is to use gcd. It may be slightly overkill but I find working with Objective-C practices like selectors a bit weird"
swift,3dtxcx,tcdb28,2,Sun Jul 19 20:56:38 2015 UTC,"When you import almost any Apple-provided framework, you are implicitly importing Foundation as well (because they are all built on top of Foundation). So with SpriteKit you also get Foundation. Go ahead and try to access NSTimer or NSString or an other foundation type. They're all there.  As to the SO post, I will say that is an interesting quirk though it no longer appears to be an issue. I was unable to reproduce the OP's findings so I did a little digging. From The Swift Programming Language (pre-release) (emphasis mine):   Swift also provides two identity operators (=== and !==), which you use to test whether two object references both refer to the same object instance.   Since Swift native types (Int, String, Array, etc.) are value-types (structures in fact), this specific quirk is no longer present. You actually get an error if you attempt to use === with Swift native types. This reinforces my earlier statement that Swift only converts native value-types to Foundation object-types when requested (i.e. manually casting) or needed (i.e. when interacting with Foundation--based APIs). Any ""quirks"" that are found when importing Foundation are usually a misunderstanding of how Swift works.  The problem with using NSTimer is not that Swift can't automatically convert a Dictionary to NSDictionary (because it will without any input needed from the developer), it's that you are trying to pass a value-type structure into an API that only works with reference-type objects. You need to box your info userInfo value into an object if you want it to work with NSTimer or change your structure to a class.   I do not think that going to GCD is a better solution. GCD is a great API that has it's uses but IMO should be a last resort when all other options cannot solve the problem. GCD has it's own quirks and issues. They are typically a lot harder to track down. And I find it humorous that you find ""working with Objective-C practices like selectors a bit weird"" but are willing to drop down to such a low-level, advanced API like GCD."
swift,3dtxcx,tcdb28,1 point,Mon Jul 20 15:34:11 2015 UTC,"Thank you for your response. I think the code checker in Xcode incorrectly marked my code as incorrect, because until I explicitly imported Foundation (instead of via SpriteKit) it wouldn't accept [""info"", 0] for userInfo. I'm not able to reproduce that anymore, but it caused me to be under the impression that I had to import Foundation explicitly and change the behaviour of my code.  As for the preferring GCD, it's probably unreasonable. It's mostly that I encountered all these errors trying to use NSTimer, and decided to just make my own simple timer (that's made for Swift). When I looked online the first thing I found was an example using GCD and I was able to implement that rather effortlessly."
swift,3dtxcx,zSprawl,1 point,Mon Jul 20 20:34:03 2015 UTC,Cleaning your project before a build will help clean out any old errors and other cruft.
swift,3dupd8,iakar,8,Sun Jul 19 17:36:34 2015 UTC,"That's the ternary conditional operator. It's like a condensed if statement:  if condition {   something } else {   something else }   is equivalent to:  condition ? something : something else   It's able to do one extra thing than the if statement, though: it can return a value. This is actually its most common use. So this line of code:  let answer = (number % 2 == 0) ? ""even"" : ""odd""   will set answer to ""even"" if number is even, and ""odd"" if number is odd.  In your example, it's doing a similar thing. The equivalent if statement looks like this:  func isLeapYear(year:Int) -> Bool {   if year % 100 == 0 {     return year % 400 == 0   } else {     return year % 4 == 0   } }"
swift,3dupd8,foBrowsing,3,Sun Jul 19 17:49:22 2015 UTC,"And to take it one step farther in swift, you can say something like   Label.text = SomeOptional ?? ""Default""  Where the double question mark says use this value if it is not nil and unwrap the optional, or use this other value (""Default"") if it is nil  Edit: this is called the nil coalescing operator"
swift,3dupd8,esthepiking,1 point,Sun Jul 19 19:33:55 2015 UTC,"You can do 'the same' in ObjC by writing   Label.text = NSStringThatMightBeNil ?: ""Default"""
swift,3dupd8,iv_mexx,1 point,Sun Jul 19 19:57:25 2015 UTC,if year % 100 == 0 {  return (year % 400 == 0)   } else {  return (year % 4 == 0)   }  It's the same as saying this. Some people use it as shorthand for really simple if else statements.
swift,3dupd8,swemoney,1 point,Sun Jul 19 17:46:38 2015 UTC,Thanks!
swift,3dupd8,EricCerney,1 point,Sun Jul 19 18:22:13 2015 UTC,"That's the ternary operator. To help you understand it, that line is the equivalent of:  if year % 100 == 0 {   return year % 400 == 0 } else {   return year % 4 == 0 }   So the expression to the left of the ? is the condition. If the condition evaluates to true, the result to the left of the : is used. If the condition is false, the result to the right of the : is used.  Its just some sugar so that you can write that common style of if-else in one line."
swift,3dupd8,robot_lords,1 point,Sun Jul 19 17:51:42 2015 UTC,Thanks!
swift,3dtrxr,xakaa,1 point,Sun Jul 19 11:30:15 2015 UTC,My guess would be that SKLabelNode is blocking the touches from being received by the SKShapeNode. This is odd because SKShapeNode should have userInteractionEnabled set to false by default (so touches should be passed up to the SKShapeNode). Maybe check to make sure that userInteractionEnabled is not getting set to true somewhere...
swift,3dt4g6,ekeen1,2,Sun Jul 19 05:00:59 2015 UTC,"border has a ? because its an optional: a variable which could possibly be nil.  Its an optional because the method CSShapeLayer() returns an optional object.  This is very common for initializers of Swift classes.  The line     border?.strokeColor  means ""The strokeColor variable of an instance which may be set to nil.""  The safe way to access properties of an optional is through optional chaining which would look something like this:  var color if let thisBorder = border {     color = thisBorder.strokeColor }   The ""if let"" statement basically says ""only run the code inside this statement if border is not nil.""  If border isn't nil, you can access all of its properties from within the ""if let""s code block.  It much safer this way since there's no chance of ever unwrapping an optional value and finding nil, which would crash your program."
swift,3dt4g6,WongWray,1 point,Sun Jul 19 07:39:26 2015 UTC,Thanks for the reply. What is the difference of putting     border.strokeColor?  instead?
swift,3dt4g6,WongWray,2,Sun Jul 19 16:35:58 2015 UTC,It means that strokeColor is the optional (and might be nil) so the optional chaining would look like:  if let color = border.strokeColor {     //do something with color }   If both border and strokeColor are optionals then you can always nest the 'if let' statements like so:  if let thisBorder = border {     if let color = thisBorder.strokeColor {         // do something with color     } }
swift,3dt4g6,cryo,1 point,Sun Jul 19 16:45:32 2015 UTC,"I see now, thanks so much."
swift,3dt4g6,Themako1,1 point,Sun Jul 19 16:58:30 2015 UTC,"Or make multiple bindings in a single one since Swift 1.2:  if let thisBorder = border, color = thisBorder.strokeColor {     // do something with color }"
swift,3dt4g6,Themako1,2,Mon Jul 20 08:56:40 2015 UTC,"It's optional chaining. It says that borders is and optional so if that doesn't return anything then everything after that won't run, so stroke color wouldn't be set then"
swift,3dr2fl,dancemonkey,5,Sat Jul 18 17:11:05 2015 UTC,"When you use the reverse() method, all of the evaluation is postponed. (generally speaking, when a struct that is a wrapper for some sequence ends in View, it means it's lazily evaluated) What actually happens under the hood is to do with the indices of the collection reverse() is called on: that's why it needs RandomAccessIndexType. What I'd imagine happens is that it does subscript calls to the underlying collection.  You can see that the way collections are reversed changes based on the index type: for instance, if you reverse a String.CharacterView you get ReverseCollection<String.CharacterView> , instead of the ReverseRandomAccessCollection you get on an array.  All of this stuff is for efficiency - sometimes you can avoid the evaluation of an entire sequence with reverse().  This also means, though, that you can't index the reversed collection. It's easy enough to force the evaluation of it, though, just initialise an Array:  let forwards = [1, 2, 3, 4]  let lazyBackwards = forwards.reverse()  let eagerBackwards = Array(lazyBackwards) // [4, 3, 2, 1]   And you'll get back your integer subscripting."
swift,3dr2fl,foBrowsing,1 point,Sat Jul 18 17:24:51 2015 UTC,"Thank you! So this has changed then? The app I'm updating is on the app store, and previously I directly indexed the reversed array with no issues.  EDIT: Just tested in playground, works perfectly, thank you again!"
swift,3dr2fl,foBrowsing,1 point,Sat Jul 18 17:29:51 2015 UTC,"Yeah, the old reverse() returned an Array, as far as I remember. They've made a lot of similar functions lazy, actually."
swift,3dr2fl,DressTheMonkey,1 point,Sat Jul 18 18:11:59 2015 UTC,"Thanks for the help, I appreciate it."
swift,3dscvb,CashForRedditGold,2,Sun Jul 19 00:08:19 2015 UTC,"I really think tuples are meant as a kind of create-it-use-it-destroy-it data type, rather than anything more permanent.   In this case, looking at the code as someone who doesn't know the first thing about what is stored in 'fullTracker', I have absolutely no idea what those three values mean.  It could be someone's name, height and favourite year! Or it could be the name of a city and an (integer) x,y coordinate pair!  Now of course you know what it means, but I can guarantee after finishing this code and putting it aside for 6 months and working on something else, when you come back, you will need just a little reminder of what it means (especially the order of the medication uses and medication uses intended).  So, no, I don't think a tuple is a good way to store this.  So, the question is, what to use instead.  If NSCoding weren't involved, I would probably use a struct.  Because presumably an entry in fullTracker is created and not modified (ie it is immutable).  But, given that you want to use NSCoding, and NSCoding only handles classes, then I would create a class.  It is true you can screw around and manage somehow to store a struct, but why bother when it is so easy and straightforward to store an instance of a class.  Even though I was using a class, I would still make it immutable.  In other words, there would be an init method which sets all the properties, and then after that those properties can be queried but not changed (ie they have gets but no sets).  Furthermore, I'd use an NSDate to store a date and not a String.  This is because a String will allow you to put any old nonsense in there, whereas an NSDate will be limited to real dates.  And, later, you will be able to format the date in any format you like, whereas a String will only ever look like just what it looks like, unless you were to create a bunch of date parsing and formatting code.  But, NSDate already has all that code just ready for you to use.  One final small note, fullTracker isn't a very explanatory name.  I'd consider something like medicationEvents or medicationInstances or anyway something which indicates that it contains multiple instances of something to do with medication.  Again, the reason being for easy and swift comprehension by anyone reading this code (which could include you in a few months time)."
swift,3dscvb,DressTheMonkey,1 point,Sun Jul 19 05:27:10 2015 UTC,"Thanks.  Good advice.    For now, I made a custom class for the data to be stored, but even with that I'm having significant difficulty.  I'm brand new to coding/swift so a little of this is still over my head.    I added a custom class TrackedMedications with three variables (date, medicationUsed, medicationProperUsageNumber).  I then added to my original Medication class a variable to hold an array of type TrackedMedications.  Thus, any added medication will have a storage variable for these inputs.    Where I'm running into trouble is pulling the data back out.  It's stored in an array of classes with three variables: a NSDate and two integers.    How can I pull those integers out and total them up?  I tried this:      for (index,item) in myMedsList.enumerate() {         let array = item.fullTracker         var totalAttempts = 0         var successfullAttempts = 0         for instance in array {             totalAttempts = totalAttempts + instance.numProperUsageForDate             successfullAttempts = successfullAttempts + instance.numUsedForDate             //sums values for tracking purposes for all dates         }         let tuple = (index, totalAttempts, successfullAttempts)         let total = tuple.1         let successes = tuple.2     }   but it won't recognize those variables outside of the for loop so nothing works to add them up."
swift,3dscvb,DressTheMonkey,1 point,Tue Jul 21 04:05:58 2015 UTC,"Well, if it won't recognise those variables outside of the for loop, then you need to move them before the for loop!  And get rid of that tuple!  You can just say  let total = totalAttempts let successes = successfullAttempts // not exactly the best spelling of successfull ever!   It isn't clear whether you want a total for each item in myMedsList or a grand total of ALL items in myMedsList.  And if I make a guess, of course I'll be wrong.  Just to get you thinking, here's how I would get the total of the medicationUsed in an instance of Medication.  (code is untested and written in the browser, so errors are possible) define this function inside the class Medication (so it is a method) which looks like this:  func totalMedicationUsed() -> Int {     return fullTracker.reduce(0) { (accumulator, item) in accumulator + item.medicationUsed } }   Now you could do a similar thing for the other one (medicationProperUsageNumber).  Then you could write  a function or two which take an array of Medication instances and total those up (so you get totals of totals).  *Very important: * take this one step at a time.  Don't write a huge slab of code and then try to make it all work.  Write a small bit, get it working; then write the next small bit, and get it working etc.  That will be much easier than creating a large amount of code and having a large number of errors to track down.   And you are not just getting errors because it is new: I've been programming for donkey's years and I still do it by writing a little and trying it and so on."
swift,3dscvb,DaemonXI,1 point,Tue Jul 21 09:59:35 2015 UTC,Seems like the perfect use for a Core Data class.
swift,3ds4tu,Raygun77,3,Sat Jul 18 22:50:42 2015 UTC,Why wouldn't you use slack? There's already an iOS Developers slack group with over 1k members: http://ios-developers.io
swift,3ds4tu,REFERENCE_ERROR,2,Sun Jul 19 00:34:48 2015 UTC,"Thanks for letting me know about the slack, awesome!"
swift,3ds4tu,voidref,0,Sun Jul 19 03:55:13 2015 UTC,A small group makes relationships possible.
swift,3ds4tu,voidref,1 point,Sun Jul 19 02:59:50 2015 UTC,So 10% of us in /r/swift signed up for your thing it would be bad?  This statement makes no sense.
swift,3ds4tu,AnimalPharmacist,1 point,Sun Jul 19 04:09:24 2015 UTC,I'm in.
swift,3ds4tu,0_0mg,1 point,Sat Jul 18 23:33:27 2015 UTC,PM me your contact info
swift,3ds4oc,debausch,1 point,Sat Jul 18 22:49:18 2015 UTC,The main view isn't in the tab bar?
swift,3ds4oc,Themako1,1 point,Sun Jul 19 04:48:45 2015 UTC,"If all of your views are embedded in a navigation controller, they should all have a navigation bar which automatically provides a Back button in the top-left corner.  If you have the Nav bar but no Back button for whatever reason, try putting this in your viewDidLoad:  self.navigationItem.hidesBackButton = true let newBackButton = UIBarButtonItem(title: ""Back"", style: UIBarButtonItemStyle.Plain, target: self, action: ""back:"") self.navigationItem.leftBarButtonItem = newBackButton   Then just have a ""back"" function that pops off the right viewcontroller.  If by ""main view"" you mean your app's first VC (called the initial view controller) then try this:  self.navigationController?.popToRootViewControllerAnimated(true)"
swift,3drphc,TheNebulizer,3,Sat Jul 18 20:30:51 2015 UTC,Try incrementing your App's build number. I had this problem when trying to implement IAP for the first time. Increasing the build number (not version) made the IAP methods magically start working.
swift,3drphc,br4ds,1 point,Sat Jul 18 22:35:03 2015 UTC,"This actually worked! Thanks! The only problem I'm having now is I'm getting the error ""You are not authorized to make purchases of this InApp in Sandbox at this time"" when trying to purchase the IAP. Any other ideas?"
swift,3drphc,Lapter,2,Sun Jul 19 06:29:49 2015 UTC,You must test on real device. Logout from your current account by going settings iTunes and App Store. Then go to iTunes connect and create sandbox users. Login with those users and test. It should work
swift,3drphc,br4ds,1 point,Sun Jul 19 08:26:56 2015 UTC,You have to add a sandbox user in iTunes Connect that is authorized to test the IAP when in Sandbox mode.
swift,3dpd45,cmclewin,2,Sat Jul 18 04:04:52 2015 UTC,"You should go with 2 functions, e.g. addButtonClicked and editButtonClicked. In general, its better to have separate actions when it's easy to tell the buttons apart (i.e. when they're not in a tableView).  For your 2nd question, you could compare the sender to a property if you had made one, so: if (sender == self.addButton)."
swift,3dpd45,svwolfpack,2,Sat Jul 18 05:01:23 2015 UTC,"You could assign a tag in IB, and use a switch statement, but this would be a bad programming practice.  Functions should have a clear purpose, rather than jamming multiple sets of logic into a single function - so I agree, split it into 2 functions."
swift,3dpd45,Stephen110,1 point,Sat Jul 18 12:41:07 2015 UTC,"Great, thanks. I'm trying to conform to common practices as much as I can."
swift,3dpd45,OkruszekWKlawiaturze,2,Sat Jul 18 14:33:36 2015 UTC,In case when you have specify View controller then I would go wit different IBAction on TouchUpInside.  If you want more universal solution then I would go again with IBAction and create handler and those IBActions would call those handlers.
swift,3dqiu4,aznrice,4,Sat Jul 18 13:58:01 2015 UTC,"Well for starters, install Xcode 6.4.   Then poke around RayWenderlich.com"
swift,3dqiu4,audiblefart,1 point,Sat Jul 18 15:02:28 2015 UTC,so i updated xcode but it update it to Version 6.2 (6C131e). Why didn't it go to .4?
swift,3dqiu4,audiblefart,1 point,Sun Jul 19 02:46:37 2015 UTC,Good question. You did this via the App Store? Maybe you need to update your OS too?
swift,3dqiu4,balph1,1 point,Sun Jul 19 03:24:44 2015 UTC,got it! thanks! will check out raywenderlich.com
swift,3dqiu4,mistermagicman,4,Sun Jul 19 04:13:39 2015 UTC,Get Xcode 6.4 and watch the Stanford iTunes U course: https://itunes.apple.com/nl/course/developing-ios-8-apps-swift/id961180099?l=en
swift,3dobmd,RiZ3,1 point,Fri Jul 17 22:20:34 2015 UTC,Are you trying to slide between the tabs or within the tabs? check out UIPageViewController:  https://developer.apple.com/library/prerelease/ios//documentation/UIKit/Reference/UIPageViewControllerClassReferenceClassRef/index.html
swift,3dobmd,kev89431,1 point,Sat Jul 18 00:27:11 2015 UTC,"Basically what I envisioned is the main page will have the ""sign up and login tab"" at the bottom. But I want the user to be able to swipe left and right while the tabs are still at the bottom. Each new page will have information.   edit: thanks, I'll check that out right now"
swift,3dobmd,kev89431,1 point,Sat Jul 18 01:23:59 2015 UTC,"I see. What you wanna do is use UIScrollView paging to slide these views & have 2 buttons at the bottom. You don't need to use tabs. Your main/container view will have: scroll view, login button, signup button. The scroll view contains the stuff you wanna swipe.  https://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/UIScrollView_pg/ScrollViewPagingMode/ScrollViewPagingMode.html  https://www.youtube.com/watch?v=PGAHR2Ji7jc"
swift,3dobmd,colonel_hahous,1 point,Sat Jul 18 03:00:37 2015 UTC,"Not completely sure what you mean.   How many tabs? Just Sign Up and Login? One of the points to note about UITabViewControllers is that at least one of the tabs should be selected at all times. Which tab is selected while you want the user to be able to swipe left and right?  Either way you should make the UITabViewController the rootViewController of the window and put your other controllers (one for each tab) as child controllers of the tab view. It sounds like you want one, or both, of these child view controllers to be a UIPagedViewController.  Hope that helps."
swift,3dorda,Dark_Angelas,2,Sat Jul 18 00:38:38 2015 UTC,You should avoid using orientation and idiom checks in favor of size class testing. That will allow you to support multitasking nicely in the fall.
swift,3dorda,ketzusaka,1 point,Sun Jul 19 23:26:45 2015 UTC,This is in pseudo code:  If device == iPad {     //do animation } else if device == iPhone && deviceOrientation == landscape {     //do animation }  Using the same way you check for iPad device you can check for iPhone. Doing it that way will return any  iPhone but the iPhone 6+ is the only iPhone that does the split view on landscape so the animation should not run (not tested) in other iPhones.   You can check for specific device but depends on iOS target. Check this stack overflow question - http://stackoverflow.com/questions/26028918/ios-how-to-determine-iphone-model-in-swift  To check for orientation use:  If UIApplication.sharedApplication().statusBarOrientation == .LandscapeRight ||  UIApplication.sharedApplication().statusBarOrientation == .LandscapeLeft {     // do landscape code }  You could also do a switch statement on the orientation for better code and set a bool in it if in landscape which you use to check in the if statement for your animation. Hope this helps.
swift,3dnip3,dale-x,1 point,Fri Jul 17 18:37:54 2015 UTC,The title is positioned at the center of the Nav bar. I would suggest making your own UILabel and admit to the navigation bar to position it your self.
swift,3dnip3,kalvin126,1 point,Fri Jul 17 22:18:16 2015 UTC,I'll give it a shot. Thanks!
swift,3dmga3,DenardRobinson,2,Fri Jul 17 13:40:07 2015 UTC,"The method you chose is dependent on how related your other class is to the view controller containing the method you would like to call.  Highly Related: add a property to the class wanting to make the call to store a reference to the view controller instance  Moderately Related:  Use a delegate/protocol structure, where the method being called may be common among other view controllers, and all you care about is that the method is implemented by the delegate.  Moderately Related:  Use a closure as a callback.  The reason this is still moderately related is that the view controller still has to interact directly with the class to set the property.  Not Related:  Use NSNotificationCenter to trigger the event, where the class emits a message, and the view controller monitors for the message, using the method to call as its action."
swift,3dmga3,Stephen110,1 point,Fri Jul 17 14:47:01 2015 UTC,"Sorry, still learning some of this stuff. How do I get the reference of the view controller? And then I imagine I'd just pass it as an argument in the other classes' construction?"
swift,3dmga3,Stephen110,1 point,Fri Jul 17 15:32:55 2015 UTC,"How is an instance of the class created?  Directly from the view controller?  I wouldn't use the constructor to pass a reference to the view controller, just have a public property. (Again, if the view controller and the other class are highly related)  // Inside your other class - instance level public variable public var viewController:MyViewController?  // where you want to call the view controllers method if let viewController = self.viewController {   viewController.someMethod() }  // Inside your view controller var myClass = MyClass() myClass.viewController = self  Hopefully this makes sense, it's kind of a bitch to type out on mobile."
swift,3dmga3,armlesshobo,2,Fri Jul 17 16:30:17 2015 UTC,"I feel a better way would be to use a message manager that manages all things message related. Then, create a message delegate that includes a method that is called when new messages arrive and passes the new messages as an argument. Have your main view controller implement that message delegate and then use that new set of passed-in messages however you need to in your main view controller."
swift,3dmga3,armlesshobo,1 point,Fri Jul 17 14:56:59 2015 UTC,"The view controller is pretty much completely messages related, hence why I wanted to keep sending the message capability within that class."
swift,3dmpz6,foBrowsing,3,Fri Jul 17 15:01:24 2015 UTC,"On a side note to the article, I wish there was a way to know which behavioral and personality traits help shape our affinities toward certain concepts i.e. the author clearly states his love for functional programming and how he doesn't really identify with OO concepts.    However I readily embrace OO concepts and all things associated with it (i.e. Domain Driven Design, framework architecture design, inheritance, generics, interfaces, event driven design - I love that stuff).    And on the other hand I just can't seem to garner much interest in functional programming (beyond basic usage e.g. LINQ).  But it seems clear to me that a particular mindset clearly prefers one over the other.  Most of us tend to approach things with a ""my way is better"" attitude whereas more often than not both solutions are equally productive and valid when used in their correct context."
swift,3dmpz6,shooky1,1 point,Fri Jul 17 16:57:38 2015 UTC,"I think a lot of it has to do with how you're exposed to the different concepts, and what uses you have for them. That said, there's a definite affinity for the mathematical in FP. Although that may be because it's still so tied to academia.  Check out a few seconds from this video that was up on /r/programming the other day (it's Bjarne Stroustrup). Around 6:10 he says some interesting things about OOP: ""Everybody knew ... you had to be a genius to write object-oriented programs. Real programmers just couldn't do it."" Pretty stark parallel with FP, I thought."
swift,3dmpz6,ElvishJerricco,2,Fri Jul 17 17:16:14 2015 UTC,"To me the biggest problem with protocol oriented programming and the generics involved is the fact that we can't parameterize on the Self type.  For example, this prevents us from creating a proper Functor protocol.  protocol Functor {     typealias A     func fmap<B>(f: A -> B) -> Self<B> // error! Self includes A; no way to re-parameterize. }"
swift,3dixuw,supburger,1 point,Thu Jul 16 17:21:19 2015 UTC,If you are using https://developer.apple.com/library/ios/samplecode/Reachability/Listings/Reachability_Reachability_m.html#//apple_ref/doc/uid/DTS40007324-Reachability_Reachability_m-DontLinkElementID_8  You could have to check connectionRequired's bool methods for telling you to check status of internet.
swift,3dixuw,iNoles,1 point,Thu Jul 16 18:34:39 2015 UTC,I'm not using that. I'm using this.
swift,3dixuw,TheMiamiWhale,1 point,Fri Jul 17 01:32:43 2015 UTC,"Sounds like reachability isn't posting a change notification but without any other code it's hard to tell. Wherever you are changing reachability, make sure you are posting a notification. For example, something along the lines of:  NSNotificationCenter.defaultCenter().postNotification(""kReachabilityDidChange"", self)"
swift,3dixuw,TheMiamiWhale,1 point,Fri Jul 17 01:37:38 2015 UTC,I'm a bit confused about this. I was under the impression the Reachability library I'm using will post that notification for me.   What other code do you need? I pod installed the Reachability library and import Reachability at top of controller file. Other than the code in my question is the contents of the controller.
swift,3dixuw,chedabob,1 point,Fri Jul 17 02:14:47 2015 UTC,"After looking through the Reachability source, it is called, so what you have above should work. In fact, I downloaded the Reachability sample project from Github, copy and pasted what you have above into the ViewController class, and ran it on an iPad mini 3 and didn't see any issues. Your println calls were fired and showed up in the console.  My guess is there is an issue with how you are using CocoaPods and integrating it with your project or something along those lines."
swift,3dixuw,TheMiamiWhale,1 point,Fri Jul 17 13:34:31 2015 UTC,My next task will then be testing what's exactly causing this. Maybe there is a conflict with another library??? Thanks for the help so far.
swift,3dixuw,TheMiamiWhale,1 point,Fri Jul 17 13:52:27 2015 UTC,"Take ""ReachabilityChangedNotification"" out of quotes. It's a constant provided by the library"
swift,3dixuw,TheMiamiWhale,1 point,Fri Jul 17 06:58:14 2015 UTC,"In the general case, you are correct, and your recommendation is definitely a best practice. However, in this particular case, the library constant is defined as the string he used, so it should work."
swift,3dkcs0,kev89431,8,Thu Jul 16 23:40:18 2015 UTC,"Mm, one problem is that you are promoting the use of ! which, ideally, should never be used. This code is bad  if a != nil {     a!.... }   and should be replaced with  if let x = a {     x.... }   There is also some conflation, I think, between optional types, unwrapping and safe ""chain unwrapping"", perhaps because they all use very similar syntax. I do think you understand how it works on the surface, but not how it's truly intended, or at least you don't convey that in the article."
swift,3dkcs0,cryo,2,Fri Jul 17 09:01:42 2015 UTC,or in swift 2.0    guard let a = a else { errorHandling } a.doSomething()
swift,3dkcs0,nemesit,1 point,Fri Jul 17 10:51:39 2015 UTC,"guard else is awesome, though I think it's a bit advanced for beginner."
swift,3dkcs0,likesnoodles,1 point,Fri Jul 17 18:50:15 2015 UTC,"You're absolute right. That's bad code. I did it on purpose to show the reader there're different ways. Just because it's bad code that doesn't mean it's not valid code. I immediately show the reader there's a better way to do it by using ""if let""  Line 41: ""if let"" allows you to combine line 34 & 35 & also unwrap :)   The article mixed up all these topics together to show the readers how these features work together.   Thanks for your comment."
swift,3dkcs0,likesnoodles,1 point,Fri Jul 17 18:45:27 2015 UTC,Swift beginner here. Why is  if a != nil {     a!.... }   bad code?
swift,3dkcs0,likesnoodles,2,Sun Jul 19 03:09:32 2015 UTC,"the code first checking if a is not nil & then unwrap it using a!  instead of doing that you can do ""if let x = a"", which will exactly does the same thing & now you don't need to keep having (!) after x because it already unwrapped. The code is now cleaner & easier to read. It also the preferred way to work with optional."
swift,3dkcs0,ios_game_dev,1 point,Sun Jul 19 19:27:08 2015 UTC,Thank you!
swift,3dl0h8,xStory_Timex,3,Fri Jul 17 03:09:45 2015 UTC,I'd recommend using CocoaPods.  Then you can just run the 'pod update' command to get the latest version.
swift,3dl0h8,alt51,2,Fri Jul 17 06:51:13 2015 UTC,Download the newest file every time they update and replace it with the old one...
swift,3dkmas,questdark,3,Fri Jul 17 01:02:36 2015 UTC,"Yup, someArray.insert(someValue, atIndex: 0)  Also in the future, googling 'swift array methods' will give you a list of methods you can use on arrays (or other types)!  Happy coding."
swift,3dkmas,nill0c,2,Fri Jul 17 01:09:05 2015 UTC,"Or even better, look up Array on swiftdoc.org: http://swiftdoc.org/type/Array/"
swift,3dkmas,jtbrown,3,Fri Jul 17 01:26:00 2015 UTC,"Or even better, use Apple's own documentation: https://developer.apple.com/library/prerelease/ios//documentation/Swift/Reference/Swift_Array_Structure/index.html#//apple_ref/swift/struct/s:Sa"
swift,3dkmas,SirGlaurung,1 point,Fri Jul 17 07:42:37 2015 UTC,I had no idea they published that. Thanks!
swift,3dkmas,jtbrown,1 point,Fri Jul 17 17:28:32 2015 UTC,"It's part of the Swift 2.0 documentation, so if you're using 1.2, be aware that it will be a bit different."
swift,3dkmas,SirGlaurung,0,Fri Jul 17 17:36:39 2015 UTC,Thanks guys!!!
swift,3dkmas,nill0c,0,Fri Jul 17 02:12:03 2015 UTC,"No problem, when I was getting started programming 2/3 of the battle was learning the terminology so that I could google (or stack exchange) for answers effectively.  Since I was self taught, I'd do things like manually shift an array up so that I could insert a value and other things like that."
swift,3dkjp9,alpental,3,Fri Jul 17 00:40:11 2015 UTC,cell.textLabel.text = itemSet[indexPath.row].name
swift,3dkjp9,oxym0r0n,1 point,Fri Jul 17 03:49:14 2015 UTC,"Awesome! And you too /u/dar512, thanks a lot guys."
swift,3dkjp9,jtbrown,1 point,Fri Jul 17 04:11:46 2015 UTC,"I think you want to set the textLabel with the name and detailTextLabel with the quantity, right? Try that and see if it's what you want."
swift,3dkjp9,dar512,1 point,Fri Jul 17 01:29:42 2015 UTC,"Yeah, that's what I'm going for, but this would be the only way I know how and it doesn't work:   cell.textLabel!.text = String(itemSet.name[indexPath.row])   I'm looking for the syntax to set the textLabel..."
swift,3dkjp9,jtbrown,5,Fri Jul 17 01:35:44 2015 UTC,"If itemSet is an array of structs, then your syntax is off.   Try this:  cell.textLabel!.text = String(itemSet[indexPath.row].name)   Plus if .name evaluates to a string, you shouldn't need the cast."
swift,3dl09z,CapnFaps,5,Fri Jul 17 03:07:42 2015 UTC,Nope - you can use virtual machine/hackintosh to run MacOS and test your iOS app on iPhone/iPad simulator. But it's much better to have at least some kind of Mac (Mac mini will be OK) and at least one real iOS device (iPod/iPhone/iPad).
swift,3dl09z,atatator,2,Fri Jul 17 06:05:15 2015 UTC,Is really suggest getting a least a new iPod Touch if you don't have an iPhone though. The simulator isn't 100% accurate and playing around with your app in your hand gives you a much better idea of how the app feels.
swift,3dl09z,Ceribis,1 point,Fri Jul 17 12:05:26 2015 UTC,thanks :)
swift,3diayo,slartibartfist,2,Thu Jul 16 14:29:36 2015 UTC,"This looks cool.  Your design seems reasonable.  Do you have a github repo set up yet? I'm willing to help you out with the UI aspects of this if you like.  Also, what can you tell me about fjords?"
swift,3diayo,voidref,1 point,Thu Jul 16 17:45:31 2015 UTC,"Thanks for the vote of confidence :)  No repo set up yet; I seem to be starting a new fresh Xcode project roughly every half an hour at the moment as I feel my way round the language and concepts.  And I've just stumbled across the Stanford lectures on Swift, on iTunes U - bloody hell, what a resource. Trying to absorb as much as I can in as little time as possible... thanks for the offer of help - I may take you up on it once my code looks a little less embarassing :)  Fjords: overrated."
swift,3diayo,voidref,2,Fri Jul 17 07:23:29 2015 UTC,"Tell you what. I'll set up a repo for you to use with some UI in place. You can download it and use it, or set up the Github.app to make it easier for me to help you out with other stuff..."
swift,3diayo,voidref,1 point,Fri Jul 17 07:42:13 2015 UTC,"Cool, thanks.  I'm working my way through the Stanford stuff; think I've got the concepts of what I need to do down, but it's the nitty gritty of where to create my channelStrip subView, the syntax of loading it, how to then deal with actions and outlets etc.  As ever when learning a new language with a monster project in mind, I've got loads of data structures planned out, but I'm trying to work out what the quickest (ie most minimalist/bare-bones) is that I need to implement before trying to jump into the functionality..."
swift,3diayo,voidref,2,Fri Jul 17 11:21:38 2015 UTC,"OK, find the repo here:  https://github.com/voidref/MotionControl  Give me a github account name and I can add you as a collab, or transfer it to you.  It's really basic, but that's probably what you need at the moment."
swift,3diayo,voidref,1 point,Fri Jul 17 08:55:40 2015 UTC,"Wow, that's very kind of you - thanks so much for spending the time.  The thing I'm struggling still to get my head round is how to create the channel strips programmatically - so my channelData could be loading from a file - as I won't know ahead of time how many channels will be connected.  Is there a way I can create a ""template"" of one strip, then populate my main view with instances of it? And if so, I'm guessing I don't just want to populate it with views, but with view controllers, so each instance can handle it's own view logic?"
swift,3djzyz,jonathanlv7,1 point,Thu Jul 16 21:58:48 2015 UTC,If I were you I would implement bannerviewcontroller as root view controller. This way you will have banner always visible and better control everywhere. This is actually recommended way by Apple. I think there was a wwdc session in 2014 about it. Search for BannerViewController on GitHub. I am sure something will come up. You may also check Apple's implementation by downloading iAdSuite http://developer.apple.com/library/ios/#samplecode/iAdSuite/Introduction/Intro.html Good luck
swift,3djzyz,Lapter,1 point,Thu Jul 16 22:16:48 2015 UTC,"I got everything to work, but when the app first opens the place where the iAd should be is a white rectangle before the iAd loads. Is Apple okay with this? Or do I need to come up with a whole new way to display the Ad to avoid that white space in the beginning."
swift,3djzyz,Lapter,1 point,Thu Jul 16 22:54:44 2015 UTC,"If you setup the way I told you there would be no white space. When ad comes it will push your view up and show the ad at the bottom and when ad is not available it will hide the ad and push your view down. Apple recommends hiding ad when it is not available. I don't think showing white space will cause anything besides bad user experience. If you don't want to do in Apple way, you can hide/show your ad view by corresponding to iAd delegate messages"
swift,3djzyz,zSprawl,1 point,Fri Jul 17 04:15:09 2015 UTC,"Make the rectangle transparent and then fade in alpha when banner is found.   UIView.beginAnimations(nil, context: nil) UIView.setAnimationDuration(1) UIGAd.alpha = 1 UIView.commitAnnimations()"
swift,3dig3e,Sebaall,1 point,Thu Jul 16 15:10:05 2015 UTC,"I don't know why they say to add the headers to the 'compile sources' build phases, but I never have any headers in there.  Remove the header in question from the Compile Sources build phase, and see what happens."
swift,3dig3e,voidref,1 point,Thu Jul 16 17:33:24 2015 UTC,"It removes the warning, but linker error is still present."
swift,3dig3e,voidref,2,Thu Jul 16 17:47:09 2015 UTC,Did you add the static lib to the project?
swift,3dig3e,voidref,1 point,Thu Jul 16 17:49:53 2015 UTC,Do you mean that? http://imgur.com/IpeB8jy
swift,3dig3e,voidref,4,Thu Jul 16 18:28:34 2015 UTC,"Yeah, that looks ok.  So, was the library compiled with the same settings you are using for the project (arch, target, etc)?"
swift,3dig3e,voidref,1 point,Thu Jul 16 18:37:13 2015 UTC,"The library was sent to me by iBeacon manufacturer, I am not the author of the library."
swift,3dig3e,voidref,3,Thu Jul 16 19:29:44 2015 UTC,"Another thing I just thought of, is the library file in the library search path in your project?"
swift,3djspc,questdark,2,Thu Jul 16 21:04:27 2015 UTC,"While its late in the day and I am having some trouble picturing what exactly you are trying to do, I think there should be a way around needing the button. Is it possible to get rid of the button and use the didSelectRowAtIndexPath and in that method use a NSNotification to send the required information via a dictionary under 'userInfo'? That solves your problem of only wanting to send the information for that particular cell while still allowing it to go through the prepareForSegue. Not sure if it helps..  edit: a word"
swift,3djspc,-jabberwock,1 point,Thu Jul 16 21:56:53 2015 UTC,"Can't you perform the segue in the completion handler of your animation?  Also, UITableView has a indexPathForSelectedRow property that gives you the index path of anything that was selected. However, as you said, I'm guessing your button is overriding the default cell selection behavior."
swift,3djf2i,atm_vestibule,1 point,Thu Jul 16 19:24:42 2015 UTC,"Don't know exactly what are you trying to do, but it seems that you could use a global property that could be accessed in different parts of your app. You could have a struct and a static property on it like:  struct Global {     static var available: Bool = false }   Then you can set it based on the button in the view controller like this:  Global.available = true   And access it in AppDelegate like:  if Global.available { // show notification}   Just remember that AppDelegate is a class that is instantiated on app launch and your view controller may not be available at this moment (the user may not open it yet) so be careful.  PS: If you would like to persist the user selection between app launches you should look up storing values in NSUserDefaults."
swift,3djf2i,xlogic87,1 point,Thu Jul 16 20:30:49 2015 UTC,It didn't work. I put the struct declaration in one class and the other couldn't access Global
swift,3djf2i,xlogic87,1 point,Mon Jul 20 15:56:00 2015 UTC,Don't put it in a class. As the name suggests it should be global. If you put it in a class you can still access it by ClassName.Global.available
swift,3dizs9,boboguitar,1 point,Thu Jul 16 17:35:21 2015 UTC,"What exactly are you trying to accomplish? all the same or different for each?  What have you tried that doesn't work?  I would think setting the tintColor of the UITableViewHeaderFooterView would work for foreground text, and setting the background color on the contentView from the UITableViewHeaderFooterView would also do the trick."
swift,3dizs9,voidref,1 point,Thu Jul 16 18:04:24 2015 UTC,http://stackoverflow.com/a/19173639/2287993
swift,3dip1s,YouHawk,2,Thu Jul 16 16:16:47 2015 UTC,Works for me:   Swift 1.2 Swift 2
swift,3dip1s,foBrowsing,2,Thu Jul 16 16:28:50 2015 UTC,well...i found the problem. xcode shows me 2 different versions. So I suppose the string is right http://puu.sh/j1ufV/d16a996937.png
swift,3dip1s,aandrewc,2,Thu Jul 16 16:38:38 2015 UTC,"You can also use NSJSONSerialization to easily create JSON from normal swift objects.  let params = [""username"" : ""Andrew""] let json = NSJSONSerialization.dataWithJSONObject(params, options: nil, error: nil) // Use json in request"
swift,3dge17,mad_poet_navarth,8,Thu Jul 16 01:43:22 2015 UTC,"Make vertex a tuple.  (a:Float, b:Float, c:Float)"
swift,3dge17,Stephen110,2,Thu Jul 16 03:13:16 2015 UTC,"Why did I not think of that... Such an easier solution.  But it would be a tuple of Vertex objects. So:  struct Triangle {     let vertices: (a: Vertex, b: Vertex, c: Vertex) }"
swift,3dge17,oxym0r0n,1 point,Thu Jul 16 03:20:33 2015 UTC,I fail to see why a tuple is better.
swift,3dge17,foBrowsing,5,Thu Jul 16 13:32:35 2015 UTC,"Faster, clearer, with index-like lookups (vertices.0).  I can't understand why an array is a good fit here - take one of the answers below let verticies : [Vertex?](count: 3, repeatedValue: nil). That doesn't just mean that the array length is immutable - it means the whole thing is immutable. So every triangle you make will have three vertices equal to nil. The getters and setters described below won't work.  Here's how I'd do it:  struct Vertex {   let x, y: Double }  struct Triangle {   var vertices: (Vertex, Vertex, Vertex) }   And then here's how you'd use it:  var myTriangle = Triangle(vertices: (Vertex(x: 0, y: 0), Vertex(x: 1, y: 1), Vertex(x: 1, y: 0)))  myTriangle.vertices.0 // (0, 0) myTriangle.vertices.1 // (1, 1) myTriangle.vertices.2 // (1, 0)  myTriangle.vertices.0 = Vertex(x: 5, y: 5)  myTriangle.vertices.0 // (5, 5)   Why do you need indexing, by the way? I can't imagine a use-case for it. At any rate, it's doable:  extension Triangle {   subscript(idx: Int) -> Vertex {     get {       switch idx {       case 0: return vertices.0       case 1: return vertices.1       case 2: return vertices.2       default: fatalError(""Index out of range"")       }     } set {       switch idx {       case 0: vertices.0 = newValue       case 1: vertices.1 = newValue       case 2: vertices.2 = newValue       default: fatalError(""Index out of range"")       }     }   } }   Used like this:  myTriangle[0] // (0, 0) myTriangle[0] = Vertex(x: 5, y: 5) myTriangle[0] // (5, 5)"
swift,3dge17,Alphasite,1 point,Thu Jul 16 14:13:26 2015 UTC,"I opened a playground to make sure but you are right -- the whole thing is immutable. I'm going with the tuple idea, and will try to get the Indexable ... protocol? working, but there's scant info on it. If I figure it out I'll append it to this thread."
swift,3dge17,oxym0r0n,1 point,Thu Jul 16 23:34:07 2015 UTC,"Named tuples are nice as well:   typealias vertex = (x: Double, y: Double, z: Double) var v: vertex = (1.0, 2.0, 3.0)  v.x v.y v.z   It appears to work nicely in Swift 2 but i remember some issues with <=1.2."
swift,3dge17,spinwizard69,1 point,Sun Jul 19 11:23:49 2015 UTC,"You need to actually have a value for each of the 3 items initially in order to initialize the array. Or, you could make the value optional, then you can use  nil for the values. Either way, you should also use the repeatedValue property.  Also, since it's an array of Vertex, shouldn't the property be called vertices? ;)  struct Triangle {     let verticies : [Vertex?](count: 3, repeatedValue: nil) }   or   struct Triangle {     let vertices : [Vertex?](count: 3, repeatedValue: Vertex()) }   If you are trying to allow the struct to be initialized with an array of vertices, meaning you can't set up your array as above, then there is really no way for you to limit the capacity. Arrays don't have a capacity in Swift. I would do something like this probably:  struct Triangle {     var pointA: Vertex {         get {             return vertices[0]         }         set {             vertices.replaceRange(Range(start:0, end:0), with: newValue)         }            }     var pointB: Vertex {         get {             return vertices[1]         }         set {             vertices.replaceRange(Range(start:1, end:1), with: newValue)         }            }     var pointC: Vertex {         get {             return vertices[2]         }         set {             vertices.replaceRange(Range(start:2, end:2), with: newValue)         }            }      private var vertices: [Vertex] = []  }"
swift,3dge17,cryo,1 point,Thu Jul 16 03:14:16 2015 UTC,"thanks, I think the first form will work for me."
swift,3dedp6,soiboughtafarm,10,Wed Jul 15 16:49:50 2015 UTC,Honestly Core Data takes a bit to grasp but once you do it isn't hard to use. If you want an even simplified version and if your needs are very basic you can look into Realm.io . I've never used it but some people here recommend it and from the documentation seems like a pretty solid solution for your storage stuff.
swift,3dedp6,koalefant,3,Wed Jul 15 17:40:35 2015 UTC,"I'd offer another vote to check out Realm. I've been using it lately, and the dev shop I am at has been using it in a few recent projects and it has been pretty slick.   https://realm.io/docs/swift/latest/"
swift,3dedp6,tractorrobot,3,Wed Jul 15 19:46:05 2015 UTC,What about using Magical Record for Core Data? It simplifies all the hard part of using Core Data.
swift,3dedp6,fernandomlicon,1 point,Wed Jul 15 23:31:17 2015 UTC,I am going to play around with Realm.io -- seems intuitive and powerful.
swift,3dedp6,voidref,1 point,Thu Jul 16 00:01:39 2015 UTC,"I have been using Realm, and like it a lot more than the other db solutions I've seen so far."
swift,3dedp6,ASnugglyBear,2,Thu Jul 16 17:59:15 2015 UTC,"Been doing this for a very long time:  Core Data shines when you need lots of things depending on fetched results controllers (which are great at updating UI based on database changes in lists the UI), and when you really need to have huge amounts of data that's only partially in memory at a time.  Core Data Migrations, threading, and various other quibbling bits are really hard for most beginners to grasp  You personally, I'd guess just using SQLite directly since you're familiar with it, and skip anything looking like a ORM such as Yap or Realm.  If you do decide to go core data, check out marcus zarra's excellent book on the topic"
swift,3dedp6,rwilcox,2,Wed Jul 15 20:10:33 2015 UTC,"Ehh, I as actually +0 on the Zarra book. I was expecting great things but it seemed to make weird assumptions (I'd read something, go, ""wait what?"" Then spend an hour googling to find more; or info wyas everywhere; or basics were blown past (""seriously, you couldn't have added just a 30 line sample about X?"")). My copy of the book is at work, so I don't have specific examples, sorry.  I made it into a good book by force of will / tons of note taking / mostly using it as a refresher book for things I used to know... But I'd suggest it not be your only or first CoreData book..."
swift,3dedp6,ASnugglyBear,1 point,Thu Jul 16 11:10:07 2015 UTC,"It really clearly explained what each of the components are doing for the people I've pointed to it. The ""lets roll a fetched results controller ourself"" was particularly illuminating"
swift,3dedp6,favorited,1 point,Thu Jul 16 16:24:00 2015 UTC,+1 about the Zarra book
swift,3dedp6,oxym0r0n,3,Wed Jul 15 21:29:30 2015 UTC,"CoreData will very likely do what you need. It's really just a way to map a database to an object oriented way of thinking. It is still backed by an SQLite store.  If you are comfortable using SQLite already, it's not a bad idea to just use that. SQLite is compatible with iOS.  Realm is a good alternative, if you are looking for something like CoreData. It is much easier to learn, however, be warned because it is in Beta still, there are features that are missing that you would expect from the database solution. I could not use it for my applications because of missing features. It is growing rapidly, but is still lacking in my opinion.  If you decide to use CoreData, I highly recommend that you use MagicalRecord. It will make your life 100x easier."
swift,3dedp6,PabloXPicasso,2,Thu Jul 16 03:18:48 2015 UTC,"Another option if you are storing locally is to use SQLite, which is a regular relational database, but not network based.  You can think of it as the file format for your App, and then use SQL commands to store and access your data. It does not support things like stored procedures, but has pretty complete coverage of basic relational concepts.   You can find out more about it at http://www.sqlite.org .   I don't know enough about Core Data, as it also will allow you to use SQLite as the back end storage, but you wouldn't access it with traditional relational database commands."
swift,3dedp6,criosist,1 point,Wed Jul 15 17:26:08 2015 UTC,you can us SQL as Core Datas backend and still use traditional commands as strings
swift,3dedp6,menckenjr,2,Wed Jul 15 19:20:04 2015 UTC,"You can do that, but the Core Data schema is optimized and kind of opaque.  Going SQLite has a few advantages, among them: you have full control over schema and queries, you can tune the threading directly without having to use pinball machine body english to keep it from going blooey at the wrong time and you can take advantage of SQLite features (like custom SQLite functions that let you layer in expensive computations to be done by the engine)."
swift,3dedp6,refrigagator,2,Wed Jul 15 23:07:22 2015 UTC,I think I am going to work with SQLite as some have recommended I have looked at some of the wrappers such as SwiftData https://github.com/ryanfowler/SwiftData and they look much more intuitive (to me) than Core Data.
swift,3dedp6,SingleMonad,3,Wed Jul 15 17:57:49 2015 UTC,check out Magical Record for Core Data if you want to go that route. It makes Core Data super easy.
swift,3dedp6,boboguitar,2,Wed Jul 15 18:00:49 2015 UTC,I think it's not that hard to use:  Stanford's iTunes course shows you how to get up and going in an hour.  I use it for everything except sensitive data.
swift,3dedp6,SingleMonad,1 point,Wed Jul 15 19:44:39 2015 UTC,Why not sensitive data?
swift,3dedp6,boboguitar,1 point,Wed Jul 15 23:32:00 2015 UTC,"A local SQLite store will keep text in the clear. So, don't store passwords or anything else that needs to be encrypted unless you do it yourself."
swift,3dedp6,tractorrobot,1 point,Thu Jul 16 00:00:18 2015 UTC,"High jacking the thread to ask a core data question. My backend is parse and I am syncing it to the coredata database. I do this because their are some features I won't update a lot but still want to do it remotely. So right now, I am syncing my database every 5 days when the user opens the app.   My question is what is your procedure for syncing data? Right now I just sweep through my object name attributes and if there are new ones on my backend, then I insert a new object and if there is 1 less on my backend, I delete. I don't have a way to update objects in the app without just wiping all data and then re-downloading data periodically."
swift,3dedp6,fernandomlicon,1 point,Wed Jul 15 23:35:47 2015 UTC,"Add a ""lastModifiedDate"" to your model. To see if an object needs to be updated, check If the lastModifiedDate from the server is later/more recent than the date saved on your object locally"
swift,3dedp6,contradel,1 point,Thu Jul 16 04:16:38 2015 UTC,"I will recommend you to check over MagicalRecord, it's a great tool for using Core Data, it simplifies it a lot so you don't have to worry about the right configuration"
swift,3dedp6,kev89431,1 point,Wed Jul 15 23:42:04 2015 UTC,"It might be a silly solution, but it can scale: For local storage turn your model into JSON and just save it on the harddrive. Querying just by loading it all back into objects and doing searches. You might want to do some encryption.  It can scale with MongoDB for a more relational database feel and online support."
swift,3dedp6,mike_haney,1 point,Thu Jul 16 01:20:29 2015 UTC,"You can probably use NSUserDefaults, it persists data locally & easy to work with.  https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSUserDefaults_Class/"
swift,3dfygu,WongWray,1 point,Wed Jul 15 23:34:29 2015 UTC,"Any class will work with delegate methods, you just have to declare the class to use the required protocol(s).  These are also known as interfaces in other languages.  I don't follow exactly what you are needing with creating a class that can be instanced to be a delegate.  The main reason for delegate methods is to support dynamically populating data and handling configuration/events.  An example would be handling a text field being edited, or handling populating a UITableView - the delegates are going to handle each situation in a specific way (populate the table with a specific set of data, or save data that has been entered into a specific text field).  Could you elaborate on what you are trying to accomplish?"
swift,3dfygu,Stephen110,1 point,Thu Jul 16 00:37:48 2015 UTC,Here's the problem I'm having.  I want a class that a VC can create an instance of and get the user's location via the instance's methods.  I can't get my iPhone to ask for permission to use location services so I was just wondering if it might have something to do with the CLLocationManagerDelegate not working on this class
swift,3dfygu,fluchtpunkt,1 point,Thu Jul 16 00:48:49 2015 UTC,"Yes. Though you have to be careful, because delegates are usually weak or unowned variables, you have to keep a strong reference to the object that acts as delegate.   Example for a tableView that uses separate classes for UITableViewDataSource and UITableViewDelegate:  class MyTableViewDataSource: NSObject, UITableViewDataSource {     func numberOfSectionsInTableView(tableView: UITableView) -> Int {         return 2     }      func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {         return 1     }      func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {         let cell = tableView.dequeueReusableCellWithIdentifier(""Cell"", forIndexPath: indexPath) as! UITableViewCell         return cell     } }  class MyTableViewDelegate: NSObject, UITableViewDelegate {     func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {         println(""Did select Row"")     } }  class ViewControler: UIViewController {     var tableView: UITableView!      let tableViewDelegate = MyTableViewDelegate() // need to keep instance variables because tableView.dataSource is unowned     let tableViewDataSource = MyTableViewDataSource() // ditto      override func viewDidLoad() {         super.viewDidLoad()         self.tableView.dataSource = tableViewDataSource         self.tableView.delegate = tableViewDelegate     }      // no dataSource and delegate methods in the viewController }"
swift,3dfygu,tcdb28,1 point,Thu Jul 16 00:51:05 2015 UTC,"As the others here have said, yes you can. It can be quite useful to use objects other than view controllers as delegates. Take the UITableViewDataSource protocol for example: you can abstract your data source into its own object rather than putting that code into the view controller. This helps to keep the VC simple and the data source can be more easily reused.  Most tutorials you find online are trying to explain a specific topic as simply as possible. In this situation, it is easier and more clear to keep the code as concise and together as possible.   In real projects, I consider delegating away from the view controller to be a veteran technique and should be the default choice when appropriate."
swift,3dfygu,tcdb28,1 point,Thu Jul 16 01:15:03 2015 UTC,Could you tell me if I'm doing it correctly here?  I'm trying to find out why my app isn't asking me for permission to use location services and I'm not sure what is stopping my didUpdateLocations from being called.  I thought maybe it could be a problem with how the delegate is set up?
swift,3dfuw5,Minkks,2,Wed Jul 15 23:06:23 2015 UTC,You should use some image caching library. I had a good result with SDWebImage https://github.com/rs/SDWebImage.
swift,3dfuw5,Lapter,1 point,Wed Jul 15 23:30:15 2015 UTC,I'll look into this. Thank you!
swift,3dfuw5,sabiland,1 point,Thu Jul 16 05:11:01 2015 UTC,SDWebImage   Indeed a very good library.
swift,3dex5c,liampolemarch,2,Wed Jul 15 19:04:35 2015 UTC,"Probably the simplest way to write the array (array must have plist-compatible elements):  let success = (myArray as NSArray).writeToFile(""myArray.plist"", atomically: true)   To read the array (cast array to correct item type or leave as AnyObject):  let myArray = NSArray(contentsOfFile: ""myArray.plist"") as [AnyObject]?"
swift,3dex5c,Komputer9,1 point,Wed Jul 15 19:46:01 2015 UTC,Thanks!
swift,3dex5c,DressTheMonkey,1 point,Thu Jul 16 00:50:36 2015 UTC,Check out NSPropertyListSerialization.
swift,3da3pn,Dark_Angelas,8,Tue Jul 14 18:03:17 2015 UTC,"I like Bond, SnapKit, BrightFutures, and HanekeSwift for building reactive apps."
swift,3da3pn,rozzlapede,9,Tue Jul 14 18:56:22 2015 UTC,"Bond, SnapKit ,BrightFutures, HanekeSwift"
swift,3da3pn,Zurce,1 point,Wed Jul 15 04:13:49 2015 UTC,"Bond does seem quite useful. HanekeSwift actually comes in handy with something I'm doing, so thanks for that too! :)"
swift,3da3pn,zSprawl,1 point,Wed Jul 15 01:12:20 2015 UTC,"Wow, Bond seems awesome! I can't wait to try it in my next project. BrightFutures looks really nice as well. It's great to see that swift enables useful libraries like this to function so nicely"
swift,3da3pn,eValval,4,Tue Jul 14 21:11:46 2015 UTC,http://realm.io/
swift,3da3pn,voidref,1 point,Wed Jul 15 00:36:19 2015 UTC,Swift and iOS beginner here. Would a good use case for this be temporarily holding some data while waiting for it to be sync'd with a server? Or is this too heavy of a solution for that and I should use some something lighter?
swift,3da3pn,Gagege,1 point,Wed Jul 15 13:58:56 2015 UTC,"It depends.  Ream's strength is it's query and persistence model. It's an object database.  If that lines up with your needs for an object store, then it's fine."
swift,3da3pn,voidref,5,Wed Jul 15 17:33:26 2015 UTC,Alamofire
swift,3da3pn,Lapter,3,Tue Jul 14 18:21:11 2015 UTC,Alamofire is awesome!
swift,3da3pn,binskt,2,Wed Jul 15 02:58:25 2015 UTC,"https://github.com/oisdk/SwiftSequence  Pure Swift, all about Sequences, also lazy ones. Similar to Haskell's"
swift,3da3pn,Kametrixom,2,Wed Jul 15 01:41:22 2015 UTC,Quick for testing: https://github.com/Quick/Quick
swift,3da3pn,jtbrown,2,Fri Jul 17 01:59:04 2015 UTC,Why do they have to be swift if your making iOS ? Can you not still read and subclass Obj-C ?
swift,3da3pn,criosist,3,Wed Jul 15 07:48:55 2015 UTC,There's some Swift idioms that are not well expressed or difficult to express in Objective-C. Having a native Swift or Objective-C-with-Swift-idioms can be preferable to just straight Obj-C/Cocoa libraries. It makes for faster and more maintainable Swift programs.
swift,3da3pn,giantsparklerobot,1 point,Wed Jul 15 11:14:52 2015 UTC,So I'm just barely getting into Swift and all this library business is till way over my head. Anyone willing to take a few mins and give me a quick run-down of what they're really for and how to use them?
swift,3da3pn,areios_x,4,Wed Jul 15 01:17:04 2015 UTC,"The basic concept of libraries and frameworks is it is some code someone has written that they have made available for reuse. Take the alamofire library people are recommending, what it does is web requests in an elegant way. Pretty much every app has to talk to the web so instead of 1000s of people writing code that does the same thing over and over some person has been kind enough to write that code well once and made it available for other developers to use."
swift,3da3pn,bombastic191,3,Wed Jul 15 05:37:55 2015 UTC,Brilliant. Thanks for the clarification!
swift,3da3pn,areios_x,1 point,Thu Jul 16 23:40:22 2015 UTC,"It depends on what you're doing.  Like /u/Lapter said, Alamofire is a great library, but I'd recommend against it if you don't need to do any networking."
swift,3da3pn,shiggie,1 point,Tue Jul 14 18:42:05 2015 UTC,"SwiftyJSON, Haneke and Alamofire for any sort of talking to a RESTful API."
swift,3dc8qk,questdark,1 point,Wed Jul 15 03:31:55 2015 UTC,"Common Mistakes With Adding Custom Fonts to Your iOS App  Using custom fonts in Xcode 6   You just drag the font file (.ttf) into the resources area on the left pane of Xcode.  When you drop it in, a dialog box will appear. Make sure the target for your application checkbox is checked. Then add the following key to your plist:  Fonts provided by application With the values of the filename ""myFont.ttf""  UPDATE (see comment below)  Also make sure the font is added to the Copy Bundle Resources (found under Target -> Build Phases) I just spent about an hour on this, and I was the one who answered this question months ago lol."
swift,3dc8qk,sabiland,0,Fri Jul 17 07:48:56 2015 UTC,"It happened even with me but only in text fields, I solved it buy adding text in the text field and removing it on view did load. Try it! Hope it helps."
swift,3deoop,PM_ME_YOUR_APP_IDEA,2,Wed Jul 15 18:06:26 2015 UTC,Have you looked at UIKit Dynamics?
swift,3deoop,DressTheMonkey,1 point,Wed Jul 15 19:30:06 2015 UTC,"It's like one of those blinds where there are horizontal slats connected with strings.   When you pull on one it's like connected to the others, but when you push it pushes the others when it collides with them.  You can also flick them around and they will fly off screen and dismiss themselves.  The imgur app also has something like this: http://imgur.com/KzjghaN"
swift,3deoop,criosist,1 point,Wed Jul 15 18:11:35 2015 UTC,the imgur one looks to be a UIView with a UIPanGestureRecognizer on it and then translating the views position based on the gesture. The other maybe using spritekit potential for collision ?
swift,3dc6hd,b1t633k,3,Wed Jul 15 03:12:43 2015 UTC,Pretty sure you don't need to be an IT company to get a corporate account.
swift,3dc6hd,RDSWES,1 point,Wed Jul 15 03:25:50 2015 UTC,"Thanks for the reply! as I inquired they dont have a plan to register. so can this be possible? thanks again,"
swift,3dc6hd,voidref,1 point,Wed Jul 15 03:34:20 2015 UTC,"They're too cheap to apply for a business account eh? Well, it being under your name will give you quite a lot of power over the app then.  If it can't be used by general users, then it probably won't be approved, that is what business ad-hoc accounts are for.  https://developer.apple.com/programs/enterprise/  It's $300/yr, seriously no reason for the business not to do it."
swift,3dc6hd,DeutschlandFickJa,1 point,Wed Jul 15 05:53:20 2015 UTC,Thanks for the reply mate! will give them the pros and cons on our next meeting!
swift,3dcl1c,jonathanlv7,3,Wed Jul 15 05:26:21 2015 UTC,"You could use dispatch_once with a block to start the music.  var onceToken: dispatch_once_t = 0  func startTunes() {     dispatch_once(&onceToken) {         // Start music here          // This will only be called once, regardless of how many times you call startTunes().     } }"
swift,3dcl1c,NESNathan,2,Wed Jul 15 09:20:17 2015 UTC,I'm going to try this out and if it works I'll give you billion dollars.
swift,3dcl1c,NESNathan,1 point,Wed Jul 15 18:17:44 2015 UTC,SIIIIIIIIIGH. Didn't work. When I go back to the initial view controller another copy starts up and I have two overlapping copies playing.
swift,3dbg6m,ThatsMrShitheadToYou,2,Tue Jul 14 23:45:41 2015 UTC,Check out https://github.com/gali8/Tesseract-OCR-iOS and https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html .
swift,3dbg6m,iMichael_,1 point,Wed Jul 15 01:05:11 2015 UTC,"Tesseract is great because it's free, open sourced and supported by Google.  But (like any OCR) it's a resource hog and runs slowly on mobile.  It's also not the greatest OCR engine I've ever worked with, but I'm used to working with ABBYY engines (finereader), which are incredibly expensive.  I'm not sure what you're using it for, if you're using it on small images for basic recognition it should do fine.  If you're working with larger images or need higher accuracy, you might look into handing off the OCR to a server (send it an image and receive a json object back).  Even using Kadmos (industry standard handwriting recognition), I wouldn't expect great OCR results on handwritten words."
swift,3dc1is,thesirivoice,3,Wed Jul 15 02:32:20 2015 UTC,"It should just be  self.addGestureRecognizer(UITapGestureRecognizer(target: searchBar, action: ""resignFirstResponder""))   note: this is without testing it or anything..."
swift,3dc1is,waterskier2007,3,Wed Jul 15 02:42:09 2015 UTC,"This is where the documentation can come in really handy. At the top of the page, you can click to show Objective-C, Swift, or both implementations side by side."
swift,3dc1is,ArvoHeikki,2,Wed Jul 15 03:01:27 2015 UTC,"Wow I've been looking through the documentation all day and never saw that, thanks!"
swift,3dc1is,ArvoHeikki,1 point,Wed Jul 15 07:32:56 2015 UTC,No problem! Apple really has done an excellent job weaving Swift into the online documentation.
swift,3dc1is,itbwtcl,2,Wed Jul 15 09:37:16 2015 UTC,"Thank you ArvoHeikki. Swift developers need to know this. Unfortunately the parent post has been downvoted to zero and beyond (for now at least).  This is one of the most valuable tips a beginner or experienced Apple developer could be given in 2015. Swift may be the one-true future, but there is a bunch of ObjC out there, and it isn't going away tomorrow. Swiftians need to know how to read Objective C, or at least have an accurate and handy cross-reference. They also need to learn to love ""the documentation""."
swift,3dc1is,kalvin126,2,Wed Jul 15 09:50:11 2015 UTC,"let gestureRecognizer = UITapGestureRecognizer(target:searchBar, action: ""resignFirstResponder"")  self.addGestureRecognizer(gestureRecognizer)  I think this would be how you would translate it to swift."
swift,3dc1is,liampolemarch,1 point,Wed Jul 15 02:46:58 2015 UTC,http://objectivec2swift.net/
swift,3dbbv6,xStory_Timex,1 point,Tue Jul 14 23:11:27 2015 UTC,"In your image, there is no square max image. The max image and min image are shown to the left and right of the progress bar.  How are you setting the green color?  Care to show some code where you set up the slider?"
swift,3dbbv6,waterskier2007,1 point,Wed Jul 15 01:56:48 2015 UTC,well regardless is there anyway to make it square at all times?
swift,3dbbv6,waterskier2007,1 point,Wed Jul 15 15:48:52 2015 UTC,I'm confused. You do or don't want it to be square? You still haven't posted any code relating to how you set up the slider.  Check out the UISlider documentation  Specifically the setThumbImage:forState: method
swift,3db330,atm_vestibule,1 point,Tue Jul 14 22:06:33 2015 UTC,Hard to say. Look at viewDidLoad and viewWillAppear on the new ViewController at least for starts.
swift,3db330,zSprawl,1 point,Tue Jul 14 22:14:59 2015 UTC,"I did, nothing noteworthy there :/"
swift,3db330,voidref,1 point,Tue Jul 14 23:24:48 2015 UTC,"I even went ahead and connected the segue to a blank, classless, viewController and it still happened"
swift,3db330,kennyjmeyers,1 point,Tue Jul 14 23:25:14 2015 UTC,Look for a dismissViewController:animated call somewhere.
swift,3d9n0s,questdark,1 point,Tue Jul 14 16:08:40 2015 UTC,"If I understand correctly, the user's already denied your request in the past? If that's the case, they need to enable it in their settings under location services. You can let them know that's the case and give them instructions on how to do so  Relevant Stack Overlfow"
swift,3d9n0s,asd821,1 point,Tue Jul 14 16:15:49 2015 UTC,Right. I wanted a way for the pop-up to show up so they they just press allow in the app as opposed to going back to settings. Just a little detail. But thanks for that link! I'll certainly be using that as the alternative.
swift,3d9n0s,mveinot,1 point,Tue Jul 14 16:19:10 2015 UTC,Yep. (Un)fortunately Apple designed it this way so an app can't keep pestering a user with an authorization dialog.
swift,3d8koa,bettyechelon,4,Tue Jul 14 10:11:31 2015 UTC,"This happened to me during the first submission of my first app - for me, there was no way around it besides removing the webviews that contained the content, which means we couldn't link to our source website anywhere within the app.  I believe you may be able to apply a custom style sheet to a UIWebView or a WKWebView, in order to hide the links for purchasing stuff, but I've never done so."
swift,3d8koa,kreeger,2,Tue Jul 14 12:52:53 2015 UTC,Maybe you can use the - webView:shouldStartLoadWithRequest:navigationType: method from UIWebViewDelegate to prevent the WebView from following the link from the logo on the login page.
swift,3d8koa,iv_mexx,1 point,Tue Jul 14 12:21:55 2015 UTC,This works perfectly thank you - hopefully Apple will agree...
swift,3d8koa,ArvoHeikki,1 point,Tue Jul 14 12:37:19 2015 UTC,Would it be possible for you to just set up your login dashboard instead of using a UIWebView to display the site's? The situation sounds unresolvable if you're dead-set on piping users directly to the site's login panel.
swift,3d8hed,nsomar,2,Tue Jul 14 09:29:10 2015 UTC,Great explanation!
swift,3d8hed,lyinsteve,1 point,Tue Jul 14 12:12:07 2015 UTC,Thanks for reading :)!
swift,3d8hed,dancemonkey,2,Tue Jul 14 12:37:22 2015 UTC,"Thank you for posting this. I understood the article, and while those are great techniques I don't see what it has to do with generics. Are generics used in another way that I'm not understanding?   You seem to be an experienced developer so I'm asking honestly, you seem to have explained the heter- vs. homogeneous concepts very well but I just didn't see any generics in there. Can you expand on that, or was it there all along and I just don't understands generics?"
swift,3d8hed,dancemonkey,1 point,Tue Jul 14 14:36:41 2015 UTC,"Thank you for reading :), When I first started writing the article I wanted to cover the generic constraints related to Heterogeneous/Homogeneous containers. However I pivoted to only cover the containers. I renamed the title to ""Heterogeneous vs Homogeneous Containers in Swift"" to address this issue. Thanks for the hint :)  Does it make more sense now?"
swift,3d68v6,phriend2spin,6,Mon Jul 13 21:12:21 2015 UTC,Can you give a little context as to where you're coming from? What's your background both in software and specifically in iOS development? Have you had interviews?
swift,3d68v6,perishabledave,0,Mon Jul 13 21:39:38 2015 UTC,I am coming out of school. I've been in development classes for a couple of years and have about a year of iOS development experience. Maybe I just need more experience? How do you get more experience in this field? Work on your own?
swift,3d68v6,perishabledave,11,Mon Jul 13 21:45:38 2015 UTC,"CS degree? Where (geographically) are you looking for work?  In any case looking for the first job is probably the hardest and the most important. Try to find somewhere that has experienced developers you can learn a lot from. Having a passion project, an iOS app you can demo in an interview will help a lot."
swift,3d68v6,_nagem_,2,Mon Jul 13 21:57:02 2015 UTC,"Was this year of experience a year spent developing apps on your own or for/part of a company? Your first dev job out of school is usually doing shit work while you actually learn how to be a developer and doing iOS work is not usually something they give to recent grads. Every iOS engineer I know has 3-5+ years in software in general as well as their iOS experience. You might have to get a job doing something else first, maybe at a company that has a mobile department and switch to that department after you get your feet wet in the industry.   Edit: Freelance development is considerably different, the above is only relevant for FTE doing iOS for a company."
swift,3d68v6,ASnugglyBear,1 point,Mon Jul 13 22:09:02 2015 UTC,What degree are you coming out with? What city are you in?
swift,3d68v6,perishabledave,1 point,Tue Jul 14 04:46:22 2015 UTC,Basically JAVA certifications and courses in android and iOS development. It's a from a technical school. I'm in northern Utah.
swift,3d68v6,ASnugglyBear,7,Tue Jul 14 05:13:37 2015 UTC,"So here's the problem, you don't have a computer science degree so you need experience, but you need experience to get experience; it's the classic bootstrapping problem.  Let me lay out the bad before the encouragement. There are lots of grads coming out of a four year, who don't have any experience, but if there somewhat commentary they've been exposed to data structures, algorithms, networking, some software design, etc. Not all of this is day to day relevant to an iOS developer, but it is good grounding. It's easier to hire someone who has this grounding with no experience over someone who hasn't and doesn't have experience.  Yea, sounds rough. But you can work over those deficiencies. You'll have to work hard and persevere, but once you get a foot in it will get easier.  Keep coding your own stuff in the meantime. Try to make something interesting. Maybe an application that makes web calls. Do some custom UI controls. Code, code, code. Put some of it on Github, it won't be everyone's metric, but it's useful.  Read, read, and read. You missed out on a four year degree, so try to work off those rough edges. Don't be discouraged if you don't know much, it's more of a lifelong process. I'm still learning. Try taking coursers courses on networking, data structures, operating systems etc.  You won't know it all overnight, but building a thirst for knowledge will in the end beat the kid who has an education but no desire for more knowledge.  Read wide and deep. Deep in this case is specific to iOS design. Do you know the different and historic models of memory management in iOS? How do you handle concurrency in iOS? How do you deal with massive view controllers? What's single responsibility principal? How do you use core data, core graphics? Again there is so much.  You don't have to know it all, but start diving in until you get your first job, then don't stop. And try to find a job who wants to teach and invest in you. The first job is the stepping stone to other jobs and is important.  Best of luck to you. Let me know if you'd like me to review code or review a resume."
swift,3d68v6,zSprawl,1 point,Tue Jul 14 07:33:19 2015 UTC,Super helpful thanks. I will keep you in mind.
swift,3d68v6,ios_game_dev,3,Tue Jul 14 12:57:26 2015 UTC,"Okay, so you don't have a degree, this is going to be the problem: you will have a rough time getting job one....but job 3-6 may not be so rough  Utah in particular has more schools than places consuming their grads from what I understand. Prepare a self paid move to Atlanta, Austin, SF, LA, Boston, Chicago, etc  You may have to take an internship instead of a full time position at first   I strongly suggest putting in talks to conferences you can travel to easily, especially ones that record talks, and rehearse your butt off for the talk. This can definitely be an in to jobs, and looks great on a resume  Put out high quality libraries that solve pain points in the industry. Follow every iOS dev you can find on Twitter, and be helpful with answers, but not about things you can't really answer. Retweet everyone who says they are hiring, and apply to any of them you'd like to work for making it clear you're moving yourself"
swift,3d68v6,frownysmiles,1 point,Tue Jul 14 05:49:04 2015 UTC,Thanks
swift,3d68v6,JohnnyH97,1 point,Tue Jul 14 12:52:22 2015 UTC,"Sadly, no degree or experience is the issue. Aim to get something entry level, and learn from the pros there. I'm not familiar with Northern Utah but it's a lot easier to be hired by a company local than working remote for your first job given your circumstance (no degree or experience), so some of your problem might be location.   I have a pretty decent background in IT in general, but my iOS development is more a hobby and I'm a beginner at Swift. I do see job offers every other day though for 80k+ entry level in San Diego, so don't lose hope."
swift,3d68v6,PM_ME_YOUR_APP_IDEA,4,Wed Jul 15 01:21:08 2015 UTC,"I'm completely self-taught. I don't have a CS degree, although I have taken a few CS classes at university. I got hired at the first place I interviewed and I've been there for over two years. When I applied for the job, I had about 7 apps in the app store, including 1 game, and some code on github. More than anything else, I believe a good portfolio contributed to the speed of my hire. Of course, once you get to the interview, you need to know what you're talking about, so brush up on OOP, memory management, multi-threading, design patterns, etc. You might also consider practicing writing code on a whiteboard.  Edit: Clarification"
swift,3d68v6,Rudy69,2,Tue Jul 14 05:12:39 2015 UTC,"You want to work for Apple developing iOS, or do you mean you want to develop software for iOS? Because I do it as a hobby with the intention of building a portfolio. If you're not stuck working retail to support your kid(s), then spend all the time you can building software, building a portfolio, and learning while you earn a degree. That's what I would do if I could go back in time. I'm not sure what established developers do/have done though."
swift,3d68v6,entelechy_,2,Mon Jul 13 22:09:03 2015 UTC,"I was able to find a couple of clients after about 8 months of studying swift. Nothing full time, but if you look around and sell yourself and your product well, you'll have some bidders. Just never expect the customer to come to you. Don't think to yourself that after taking a programming course, be it online or an actual class, that the customer will come to you with a lacklustre résumé. Work hard, put your body and soul into your programming, and even try to use a Steve Jobs-esque mindset that the work your doing is ""Revolutionary""."
swift,3d68v6,sabiland,2,Tue Jul 14 01:50:41 2015 UTC,"I might be an outlier, but I've applied to 3 jobs and got hired on one at the interview.  One other, higher management disliked me for some reason and ovverrode all other people's opinions, even head of IT's. The other I applied for when I just graduated, and all their junior positions were filled, they told me my knowledge wasn't cutting it for a higher position.  Some background on me: I studied Applied Informatics at Hogeschool Gent, Belgium. Here I earned a Bachelors degree cum laude. I keep up to date with all the new technologies and try to create as much dummy apps as possible to check out APIs I learn about. I don't really have an app idea at the moment for a new app, hence my username.  To give some tips: try to get at least a bachelors degree in informatics, the more focused on mobile apps, the better. Don't lose hope when you don't get a job, there are a lot of companies looking for guy s like us. Also, check StackOverflow Careers and LinkedIn for jobs."
swift,3d5o4r,terhechte,1 point,Mon Jul 13 18:47:59 2015 UTC,"This is really interesting and well done. I'm not sure I understand the utility in defeating CoreData's uniquing by using value types. In all my work with CoreData, I've never once thought of uniquing as anything other than a huge asset."
swift,3d5o4r,amlynch,1 point,Mon Jul 13 23:23:19 2015 UTC,"The #1 reason is that Core data is awkward in Swift. Swift wants to work with structs and be able to do other things with it. Im also noticing that this framework doesn't have a reference to a managedObject, just an ObjectID which means that this is quiet thread safe, all you need to do is pass this struct to a managedObjectContext on another thread and just pull out the managedObject and than work with it. You can also batch fetching tons of objects by managedObjectID using a fetchRequest."
swift,3d5o4r,FutureIsMine,1 point,Tue Jul 14 05:03:20 2015 UTC,"Thanks! Utility depends a bit on the use case, of course. If you're using NSManagedDocument or other Cocoa/UIKit tightly coupled UI <-> Core Data functionalities, then CoreValue is of limited use.  However, if you're doing lots of operations and processing on the items in your CoreData store, then using CoreValue can yield a huge performance boost and make the interaction with CoreData objects much less awkward (i.e. way less code to write). The reason for this is that NSManagedObject's valueForKey has a lot of implicit dynamic dispatch in order to look up a value. Swift's type inferencers does a (by now) a very good job of optimizing calls and inlining them. All this can't be done for valueForKey. Of course, one can create an NSManagedObject subclass, but that's still a lot more heavyweight than a lightweight struct + some protocol extensions.   In Addition to that, as FutureIsMine points out, threading is much easier with value types."
swift,3d5o4r,Kametrixom,1 point,Tue Jul 14 11:08:36 2015 UTC,"Really great framework, but there's something I don't like: the introduction of 5 new weird operators..  When using this many new operators the code gets unreadable quick and you also have to understand the operators to understand the code, which is redundant otherwise (when using names functions and methods)  Will keep this framework in mind though in case I have to use CoreData, thanks :)"
swift,3d6ycz,nvzqz,2,Tue Jul 14 00:25:45 2015 UTC,"Yeah, interfacing with the C foundation types is such a pain in Swift still.  One thing I noticed is that the API you are using is deprecated in 10.11:   ""Use a LaunchAgent, XPCService or the ServiceManagement APIs instead."""
swift,3d6ycz,voidref,1 point,Tue Jul 14 06:13:05 2015 UTC,Is there somewhere I can find a list of all of the deprecated 10.11 APIs?
swift,3d6ycz,voidref,1 point,Tue Jul 14 06:41:07 2015 UTC,If you grab the release notes from XCode 7 it should tell you.  Otherwise just use a copy of XCode 7 and turn on the deprecation warnings when you compile.
swift,3d6ycz,voidref,2,Tue Jul 14 06:42:43 2015 UTC,Here's the doc for LaunchAgents:  https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html  I'm probably going to end up using this for Orangered! when I do the swift port.
swift,3d6ycz,voidref,1 point,Tue Jul 14 06:25:16 2015 UTC,Thanks!  The reason I went about it the way I did was because it adds the app to the list of startup apps found in system preferences. Would this allow the user to remove the app from starting at login like how it currently does or not?
swift,3d6ycz,voidref,1 point,Tue Jul 14 06:43:34 2015 UTC,"I'm not completely clear on this, I am investigating right now what this deprecation means."
swift,3d6ycz,voidref,1 point,Tue Jul 14 06:46:00 2015 UTC,"Wow, Apple has made it even more of a pain in the ass to do, it seems. Good times.  Anyway, here's a tutorial on it from back in the XCode 4 days, so it's not exactly a new thing that the LSSharedFile API has been deprecated.  http://blog.timschroeder.net/2012/07/03/the-launch-at-login-sandbox-project/"
swift,3d6ycz,voidref,1 point,Tue Jul 14 07:01:14 2015 UTC,"It looks like the whole new system boils down to using SMLoginItemSetEnabled and having a helper app in your main app's bundle that launches your main app.  Dang Apple, A P P C E P T I O N much?"
swift,3d6ycz,voidref,1 point,Tue Jul 14 07:06:33 2015 UTC,I'm kind of confused as to why you'd need the helper app. How would you launch the helper app to begin with?!
swift,3d6ycz,voidref,1 point,Tue Jul 14 07:12:05 2015 UTC,You don't the system does. That is what the SMLoginItemSetEnabled() function is for.
swift,3d6ycz,voidref,2,Tue Jul 14 07:13:00 2015 UTC,"I'm just frustrated that it can't be as simple as NSApplication.sharedApplication().setLoginItem(true) or something like that. It's a bit ridiculous on Apple's part to make such seemingly simple functionality (to the user, at least) so complicated to implement."
swift,3d6c98,naiim,1 point,Mon Jul 13 21:36:38 2015 UTC,Are you calling discoverServices on the active peripheral after didConnectPeripheral calls back?
swift,3d6c98,bencalder,1 point,Mon Jul 13 23:59:54 2015 UTC,"I believe so, how would I find out, I only have one peripheral I am working with and I get a message that it has disconnected if that ever happens. Shouldn't there only be one active peripheral then? Thank you!"
swift,3d6c98,Adamw88,1 point,Tue Jul 14 19:59:23 2015 UTC,This is what I used to learn a little bit about CoreBluetooth. Give this a look over and hopefully it will help!
swift,3d6c98,Adamw88,1 point,Tue Jul 14 20:55:58 2015 UTC,Thank you so much! This was exactly the kind of thing I was looking for!
swift,3d5pxy,charlesfries,5,Mon Jul 13 19:00:28 2015 UTC,"If you need high performance, you can do it with dispatch_async() by passing a time created via dispatch_walltime().   But the easier way is to use a NSTimer. If you look at the initialisers of NSTimer, you'll find one that takes a NSDate as the first parameter, so there's no need to check regularly. This example fires in a minute, but NSDate refers to an absolute point in time, and you can use any date you want:  NSTimer(fireDate: NSDate(timeIntervalSinceNow: 60), interval: 0, target: self, selector: ""someMethod"", userInfo: nil, repeats: false)  Maybe you're not aware that NSDate can express points in time with millisecond-precision, not just ""dates"" in the sense of day/month/year.   Another thing you might want to look into is NSDateComponents to create your NSDate object."
swift,3d5pxy,jasamer,1 point,Mon Jul 13 19:44:51 2015 UTC,"Maybe something like this would help?  (NOTE: closure is run on main thread)  class func delayAndRun(delay:Double, closure:()->()) {         dispatch_after(             dispatch_time(                 DISPATCH_TIME_NOW,                 Int64(delay * Double(NSEC_PER_SEC))             ),             dispatch_get_main_queue(), closure)     }"
swift,3d5pxy,sabiland,1 point,Fri Jul 17 07:55:38 2015 UTC,Could you explain a bit more on how to use this? I'm not too familiar with closures.
swift,3d5pxy,sabiland,1 point,Sat Jul 18 14:59:36 2015 UTC,"delayAndRun is a class (static) (it does not have to be of course) method and can be called like this:  Helper.delayAndRun(2.0, closure: { () -> () in                 // your code here...              })   So, closure-code will be executed after 2 seconds-delay on main (GUI) thread."
swift,3d70ql,CapnFaps,6,Tue Jul 14 00:44:44 2015 UTC,No. I still have an app on the App Store that was last updated when iOS 6 was new.  But perhaps this is something that happens if the app stops working on a new iOS version? Removal is such case would make sense.
swift,3d70ql,barrrt,3,Tue Jul 14 01:01:12 2015 UTC,"No, apple will not let you update using an old version of Xcode but it doesn't remove the old apps"
swift,3d70ql,shitidiotturtle,1 point,Tue Jul 14 06:38:05 2015 UTC,"I had a few apps on the store that I created in Xcode 4. Then I got a job, didn't touch my apps for a few years, and just recently started messing again with Swift. They are still there, but one has horribly broken (wouldn't start in iOS 8 at all), and it was still on the store. Good thing they were all free..."
swift,3d42aj,charlesfries,1 point,Mon Jul 13 10:29:27 2015 UTC,What are you using to play the audio? AVAudioPlayer? AVAudioEngine? MPMusicPlayer?
swift,3d42aj,rithms,1 point,Mon Jul 13 12:13:23 2015 UTC,"I'm not playing any audio. Say a user opens the Music app and plays a song. Now, when they open my app, how can I control the music that is currently playing?"
swift,3d3zbl,questdark,2,Mon Jul 13 09:47:59 2015 UTC,"This sucks quite a bit... it's because transitionFromView removes the fromView from the superview, and adds the toView to the fromView's (previous) superview. This alone wouldn't be an issue, if it weren't for auto layout, which I assume that you use. By removing the views from their superview, all layout constraints of the view that refer to the superview are lost. Hence, no more constraints positioning the view when it's added back in, so it gets a frame with size zero, which is why you can't see your view anymore when you flip back.  Probably you'll have to put the view back in its superview and add the layout constraints in code before transitioning back, which sucks."
swift,3d3zbl,jasamer,1 point,Mon Jul 13 21:30:39 2015 UTC,"If the views being removed/added is indeed the problem (I haven't checked the code, but I'm inclined to believe jasamer), perhaps adding UIViewAnimationOptionShowHideTransitionViews to the options would help? Using that will cause the views to be hidden/shown rather than removed/added.  This may cause other problems, though, so don't expect a magic wand here."
swift,3d3zbl,DressTheMonkey,1 point,Tue Jul 14 07:02:17 2015 UTC,"I didn't know about that option, sounds like that should work!"
swift,3d1537,timanglade,1 point,Sun Jul 12 17:35:56 2015 UTC,There were a lot of really good talks given at this conference.
swift,3d13ps,mini_forager,2,Sun Jul 12 17:24:51 2015 UTC,"Firebase and Backendless are the only other 2 solutions I know of that can be considered worth exploring. In fact, I feel maybe Firebase might be more up your alley considering you just need a straightforward data store to push to and pull from (bonus: realtime)."
swift,3d13ps,Azarro,2,Sun Jul 12 20:02:41 2015 UTC,"If you have experience on MySQL why not use it? Display all the info in JSON and make every app read it, you could create it your own small API."
swift,3d13ps,idleservice,2,Sun Jul 12 20:04:09 2015 UTC,"Another vote for a simple back-end here. Parse hasn't been great in my experience, and if you're concerned about cost then it's probably not a good idea to lock yourself in."
swift,3d13ps,Drarok,2,Sun Jul 12 20:45:32 2015 UTC,Solid advice in this thread
swift,3d2od9,WongWray,2,Mon Jul 13 01:14:13 2015 UTC,"From the JSON, the value for findItemsByKeywordReponse and ack is an array. I don't remember SwiftyJSON too well but I'd assume it's something like this: JSON[""findItemsByKeywordResponse""][0][""ack""][0].stringValue"
swift,3d2od9,perishabledave,1 point,Mon Jul 13 02:26:15 2015 UTC,"Thank you so much, that was driving me insane.  But I'm having trouble getting the itemSearchURL.  Wouldn't it be  let url = jsonObj[""itemSearchURL""][0].string!   ?  That as well as  let url = jsonObj[""itemSearchURL""].string!   give me the same error as before.  What am i missing?  EDIT:  Nevermind, got it to work:          let url = json[""findItemsByKeywordsResponse""][0][""itemSearchURL""][0].string!"
swift,3d2od9,maizirinid,1 point,Mon Jul 13 02:38:26 2015 UTC,It is because itemSearchURL is a property of an element in the JSON array findItemsByKeywordsResponse. You'd better get the indentation right before trying to read it. :)
swift,3d2od9,rithms,1 point,Mon Jul 13 12:13:47 2015 UTC,"For future reference, if you have a hard time understanding the format of a JSON string, you can use an online JSON formatter. Using one of those should make it easy to follow until you get the hang of it. There are even browser plugins you can use to present JSON in an easily readable format."
swift,3d0wft,questdark,2,Sun Jul 12 16:21:15 2015 UTC,"Both map and table views can be set up to use the same datasource so there's no memory penalty for that. The easiest way to do what you're asking is to have a parent viewcontroller with two child viewcontrollers, one for map and the other tableview, with the toggle switch in the shared region (navbar).  The only thing to keep track of is that in the yelp app you can zoom in the map and then do redo the search in that region. This means that the map can affect the data source so when you toggle back to tableview it should update to reflect the changed data.  Also, for both table and map views tapping on an item pushes the detailed view onto the navcontroller. You will need to decide if the navcontroller is at the parent level or if there are separate navcontrollers for table and map."
swift,3d0wft,fubarx,0,Sun Jul 12 17:12:50 2015 UTC,"Hey! Thanks for the initial comment. I've been trying to set up the parent-child relationships for a while now. Am I on the right track? I've been following this tutorial: https://github.com/codepath/ios_guides/wiki/Container-View-Controllers-Quickstart  I created a new ViewController class with an Xib file which I placed a navigation bar (the shared region), and a view to display the child VC's. So I'm actually having trouble doing the flip animation. It seems it can do an instant subview substitution, but when it comes to transitioning via animation, it fails.   Also, is there a way to create the parent VC  (container) in storyboard? The tutorial seems to only work if I have my container as root, which I suppose is no problem, since it is.   Here's the code I used to provide animation:                  class TwoTabViewController: UIViewController {               @IBOutlet weak var contentView2: UIView!             @IBOutlet weak var contentView: UIView!             var firstViewController: UIViewController?             var secondViewController: UIViewController?                 private var activeViewController: UIViewController? {                 didSet {                      removeInactiveViewController(oldValue)                     updateActiveViewController()                 }             }              private func removeInactiveViewController(inactiveViewController: UIViewController?) {                 if let inActiveVC = inactiveViewController {                     // call before removing child view controller's view from hierarchy                     inActiveVC.willMoveToParentViewController(nil)                      inActiveVC.view.removeFromSuperview()                      // call after removing child view controller's view from hierarchy                     inActiveVC.removeFromParentViewController()                 }             }              private func updateActiveViewController() {                 if let activeVC = activeViewController {                     // call before adding child view controller's view as subview                     addChildViewController(activeVC)                        contentView.addSubview(firstViewController!.view)                     contentView2.addSubview(secondViewController!.view)                      if activeVC == firstViewController {                         contentView.addSubview(activeVC.view)                         activeVC.view.frame = contentView2.bounds                         println(""oof"")                         //UIView.transitionFromView(contentView2, toView: contentView, duration: 1, options: UIViewAnimationOptions.TransitionFlipFromRight, completion: nil)                      } else {                         activeVC.view.frame = contentView.bounds                         println(""shit"")                         UIView.transitionFromView(contentView, toView: contentView2, duration: 1, options: UIViewAnimationOptions.TransitionFlipFromRight, completion: nil)                         contentView2.hidden = false                     }                      // call before adding child view controller's view as subview                     activeVC.didMoveToParentViewController(self)                    }             }                @IBAction func switchButton(sender: UIBarButtonItem) {                 if activeViewController == firstViewController {                     activeViewController = secondViewController                 } else {                     activeViewController = firstViewController                 }              }               override func viewDidLoad() {                 super.viewDidLoad()                  contentView2.hidden = true                  activeViewController = firstViewController                 // Do any additional setup after loading the view, typically from a nib.             }              override func didReceiveMemoryWarning() {                 super.didReceiveMemoryWarning()                 // Dispose of any resources that can be recreated.             }               /*             // MARK: - Navigation              // In a storyboard-based application, you will often want to do a little preparation before navigation             override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {                 // Get the new view controller using segue.destinationViewController.                 // Pass the selected object to the new view controller.             }             */          }"
swift,3d0wft,fubarx,1 point,Mon Jul 13 07:31:12 2015 UTC,There's an easier way to flip from a a viewcontroller to another:  vc.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal; [self presentViewController:vc animated:YES completion:nil];  And to flip back you can do this:  [self dismissViewControllerAnimated:YES completion:nil];  This works with the whole screen. Not sure if this is what you want to do but it's much easier than the traditional view flipper.
swift,3cz7n0,Dark_Angelas,2,Sun Jul 12 03:03:19 2015 UTC,"Short answer:  Use weak or unowned when you are storing the closure somewhere.  Long answer:  Read up on ARC, closure capture lists (with a focus on weak and unowned), retain cycles and you'll more or less understand.   Also, that showError() call seems redundant. return when there was no error and call self.showError() on the last line of the closure."
swift,3cz7n0,PM_ME_YOUR_APP_IDEA,1 point,Sun Jul 12 05:08:34 2015 UTC,"By default, a block will keep a strong reference to the objects accessed inside it. In the case where an object owns a strong reference to a block which accesses self (or owns a reference to an object who owns the block), you will have created a retain cycle. Two objects hold a strong reference to each other, and thus, can never be deallocated, resulting in a memory leak.  In your example, it is not necessary to use weak or unowned self. Grand Central Dispatch does not keep a strong reference to the block you give it.  Here's a quote from the Swift Programming Language about the difference between weak and unowned:   Like weak references, an unowned reference does not keep a strong hold on the instance it refers to. Unlike a weak reference, however, an unowned reference is assumed to always have a value. Because of this, an unowned reference is always defined as a non-optional type.   Edit: Clarification"
swift,3cz7n0,ios_game_dev,1 point,Sun Jul 12 04:03:13 2015 UTC,If it owns you and you own it one of you has to get out of this toxic relationship.
swift,3cz7n0,CodaFi,1 point,Sun Jul 12 05:13:52 2015 UTC,"Grand Central Dispatch does not keep a strong reference to the block you give it.   Can you say more about that.  That doesn't seem right.  If GCD doesn't have a strong reference to the block and the view controller doesn't either, then who is keeping that block alive until it makes it to the front of the dispatch queue and gets executed?  Or do you just mean that it no longer has a strong reference AFTER it executes the block?  If that's the case then I'd still use [weak self] because if the VC pops there's no reason to parse the data so there's reason to keep the VC alive during a long network timeout.  I would use [weak self] in the OP's example."
swift,3cz7n0,skoll,1 point,Sun Jul 12 17:07:18 2015 UTC,"Yes, I just mean that GCD does not continue to keep a strong reference to the block after it is executed. Regarding whether you should use unowned for purposes other than preventing a retain cycle, I believe that different situations call for different measures. In the example above, if the VC pops before the block is executed and self is deallocated, this block will crash when attempting to access self. With that in mind, the block should either use weak self (which supports optionals) and do appropriate checks for nil, or allow the block to retain self. It all depends on the desired outcome."
swift,3cz7n0,ios_game_dev,1 point,Sun Jul 12 19:11:07 2015 UTC,"It is not necessary in this example. The difference is the following:  Without [unowned self], the code basically means: the controller self refers to cannot be deallocated until loading is complete, because the loading block keeps a strong reference to it. So even if you exit the controller before it has finished loading and don't use it anymore, it will only be deallocated after loading the url completes.  With [unowned self], it means that the controller should be deallocated if it isn't used anywhere else (i.e. there are no more strong references to it). So if you exit the controller before loading is complete, it will be deallocated.  This also shows a bug in the code above: the controller may be deallocated before loading completes; that will crash the application since it calls methods on self. I strongly suggest you use [weak self] instead, which forces you to check whether self still exists (unowned self basically makes self an implicitly unwrapped optional, while weak self makes it a normal optional)."
swift,3d04a8,xlogic87,1 point,Sun Jul 12 10:35:25 2015 UTC,"I had quite some troubles for the very first time implementing IAP not so long ago.  Here below I am pasting one of my ViewController's code for IAP (non-consumable), which is working ok (purchase/restore).  Ignore the code about GUI, just look at the purchase/restore code. Because my IAP is non-consumable, there has to be separate ""Restore"" option (Apple guidelines).  class UnlockViewController: UIViewController, SKProductsRequestDelegate, SKRequestDelegate, SKPaymentTransactionObserver  {      var UpgradeProduct:SKProduct? = nil     var UpgradeRequest:SKProductsRequest? = nil     var DoneButton:UIBarButtonItem!     var EmptyButton:UIBarButtonItem!     var ShouldUpgradeAndRestartOnDismiss = false     var ProductIDS = Set<NSObject>()     @IBOutlet weak var UpgradeRestoreUserMessages: UITextView!     @IBOutlet weak var UpgradeButton: UIButton!     @IBOutlet weak var RestoreButton: UIButton!      let DefaultCornerRadius:CGFloat = 10.0      override func viewDidLoad() {         super.viewDidLoad()          SKPaymentQueue.defaultQueue().removeTransactionObserver(self)         ProductIDS.insert(UnlockMemorizeriumProductId)          self.navigationItem.title = MemorizeriumRealAppName          DoneButton = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Done, target: self, action: Selector(""closeUpgradeRestore""))          let euib = UIButton()         EmptyButton = UIBarButtonItem(customView: euib)         showDoneButton(true)          RestoreButton.layer.backgroundColor = DefaultResultsTableColor.CGColor         RestoreButton.layer.cornerRadius = DefaultCornerRadius          UpgradeButton.layer.backgroundColor = DefaultResultsTableColor.CGColor         UpgradeButton.layer.cornerRadius = DefaultCornerRadius          UpgradeRestoreUserMessages.backgroundColor = DefaultResultsTableColor         UpgradeRestoreUserMessages.layer.cornerRadius = DefaultCornerRadius     }      override func didReceiveMemoryWarning() {         super.didReceiveMemoryWarning()         // Dispose of any resources that can be recreated.     }      private func showDoneButton(show:Bool)     {         self.navigationItem.leftBarButtonItem = show ? DoneButton : EmptyButton     }      func closeUpgradeRestore()     {         SKPaymentQueue.defaultQueue().removeTransactionObserver(self)         self.navigationController?.popToRootViewControllerAnimated(true)          if ShouldUpgradeAndRestartOnDismiss         {             NSUDER.upgradeMemoToFullVersion()         }     }      private func setUserMassagesInfo(info:String)     {         UpgradeRestoreUserMessages.text = ""...\(info)...""     }      private func setUserMessagesProcessing()     {         setUserMassagesInfo(""processing"")     }      func paymentQueue(queue: SKPaymentQueue!, restoreCompletedTransactionsFailedWithError error: NSError!) {          showDoneButton(true)         setUserMassagesInfo(""\(error.localizedDescription), try later"")     }      func paymentQueueRestoreCompletedTransactionsFinished(queue: SKPaymentQueue!) {          // NOTE: IF successfully restored, this VARIABLE will be TRUE!         if !ShouldUpgradeAndRestartOnDismiss         {             showDoneButton(true)             setUserMassagesInfo(""nothing to restore, you have not yet purchased \(MemorizeriumRealAppName)"")         }         else         {             // NOTE: RESTORATION WAS SUCCESSFULL !             closeUpgradeRestore()         }     }      // NOTE: Upgrade / Restore      @IBAction func btnRestore(sender: AnyObject)     {         if self.navigationItem.leftBarButtonItem == EmptyButton         {             return         }          setUserMessagesProcessing()          showDoneButton(false)         SKPaymentQueue.defaultQueue().removeTransactionObserver(self)         SKPaymentQueue.defaultQueue().addTransactionObserver(self)         SKPaymentQueue.defaultQueue().restoreCompletedTransactions()     }      @IBAction func btnUpgradeRestore(sender: AnyObject)     {         if self.navigationItem.leftBarButtonItem == EmptyButton         {             return         }          setUserMessagesProcessing()          showDoneButton(false)         SKPaymentQueue.defaultQueue().removeTransactionObserver(self)          if !SKPaymentQueue.canMakePayments()         {             showDoneButton(true)             setUserMassagesInfo(""parental control is enabled, upgrading \(MemorizeriumRealAppName) is not possible at the moment"")         }         else         {             SKPaymentQueue.defaultQueue().addTransactionObserver(self)             UpgradeRequest?.delegate = nil             UpgradeRequest = nil             UpgradeRequest = SKProductsRequest(productIdentifiers: ProductIDS)             UpgradeRequest?.delegate = self             UpgradeRequest?.start()         }     }      func productsRequest(request: SKProductsRequest!, didReceiveResponse response: SKProductsResponse!) {          let products = response.products          // NOTE: WE ONLY EXPECT 1 PRODUCT!         if let p:SKProduct = products.count == 1 ? products.first as? SKProduct : nil         {             UpgradeProduct = p             let pay = SKPayment(product: self.UpgradeProduct!)             SKPaymentQueue.defaultQueue().addPayment(pay)         }         else         {             genericUpgradingError()         }     }      func paymentQueue(queue: SKPaymentQueue!, updatedTransactions transactions: [AnyObject]!) {          for t in transactions         {             let singleTrans = t as! SKPaymentTransaction              switch singleTrans.transactionState             {              case .Purchased:                  SKPaymentQueue.defaultQueue().finishTransaction(singleTrans)                 ShouldUpgradeAndRestartOnDismiss = true                 // NOTE: Purchase was successfull                 closeUpgradeRestore()              case .Restored:                  SKPaymentQueue.defaultQueue().finishTransaction(singleTrans)                 ShouldUpgradeAndRestartOnDismiss = true              case .Failed:                  SKPaymentQueue.defaultQueue().finishTransaction(singleTrans)                 genericUpgradingError(custom: ""purchase process failed / canceled"")              default:                  ()              }         }     }      private func genericUpgradingError(custom:String? = nil)     {         showDoneButton(true)         setUserMassagesInfo(custom != nil ? custom! : ""error happended (is internet connection available?)"")     }      func request(request: SKRequest!, didFailWithError error: NSError!) {         genericUpgradingError()     }  }"
swift,3cyrs9,hepperplz,2,Sun Jul 12 00:23:54 2015 UTC,"In a nutshell, generating a PDF on OS X or iOS is intrinsic to the printing capabilities of the AppKit and the UIKit.  The methods you want to read up on are NSView's dataWithPDFInsideRect(), and writeEPSInsideRect()"
swift,3cyrs9,ReasonReader,0,Sun Jul 12 04:45:07 2015 UTC,"First of all, I have to say, I'm a bit disappointed there are so many iOS development questions in just /r/swift. You could also post this in /r/iOSProgramming, as you'll be using Cocoa to solve this problem. Swift != iOS. Objective-C != iOS.   Anywho, I've done what you're talking about. You'll need to use Core Graphics. This is old school non-ARC stuff, so it'll be a tough one if you haven't been doing this for a while. You'll need to do some basic memory management. You'll need to essentially take a screen shot of the view and use CGContextDrawPDFPage. Sure, you can generate the content in a web view, but how do you know the size of each page? That's another problem you'll have to solve. I've done exactly what you're talking about for a client, and it took a bit to get it right.  If you google creating a PDF in iOS you'll get plenty of results. No, they won't be in swift, but there's plenty of info out there on creating PDF documents in iOS.   Hope that points you in the right direction."
swift,3cyrs9,iDeviceDeveloper,1 point,Sun Jul 12 01:20:37 2015 UTC,"Thanks for your comment. :)  The reason for posting it here versus /r/iOSProgramming was because I was curious if this could be achieved with Swift, without needing to go anywhere near ObjC. I don't think that is reason to be disappointed?  Secondly, I've already searched for a semi-straightforward (and Swift based) solution, I've even tested out a few snippets people had offered (e.g. here and here, but to no avail (or at least, not in what seemed a straightforward way).  While generating a PDF from a screenshot (using Core Graphics) is a good fallback method, its just image data bundled inside a PDF container (i.e. no text accessibility or vector support, etc), correct?  If HTML (with CSS styling) could be exported to the PDF I'd assume that the content would be appropriately accessible (not just bitmap data).    Although it seems easier to send the data I need to a PHP script that generates the PDF (like this, and then download said PDF, the big problem with that idea is the need for an internet connection..."
swift,3cyrs9,iDeviceDeveloper,4,Sun Jul 12 03:41:33 2015 UTC,"Uh, are you wanting to draw something manually? You said generate something in HTML. Why wouldn't you just load up a web view and back out a PDF using core graphics? If you want to draw a PDF all manually, you can do that, and you would have to use Core Graphics. If you're afraid to go near Objective-C, I can almost guarantee you what you're describing is too complicated. You could hard code an HTML file, and load it up in an web view.   I'm not saying I'm disappointed in you specifically. I'm saying you're asking an iOS development question. There's an iOS programming subreddit. Not going anywhere near Objective-C is near impossible if you're trying to be an iOS developer.   I'll get off my soap box now though.   Also, learn to love Apple's documentation. Everything you're wanting is right here. It's literally called ""PDF Document Creation, Viewing, and Transforming""."
swift,3cyrs9,maplemario,2,Sun Jul 12 03:56:46 2015 UTC,"If you don't want to go anywhere near objective-c, you might want to take a break from ios and come back in a year to see if things have changed. As it stands you were always bound to run into something you wouldn't be able to do in swift.  To stay on topic though, you are probably right in regards to the bitmap part."
swift,3cxcfg,Shaunthehugo,13,Sat Jul 11 16:45:47 2015 UTC,Parse. Seriously. Not sure why people are mentioning MySQL.  Google it. It's designed for mobile. I've created 30+ apps including working on a chat app with 1mil realtime users.
swift,3cxcfg,calmclear,6,Sat Jul 11 19:45:28 2015 UTC,"Out of interest, what chat app? :)"
swift,3cxcfg,philhudson91,3,Sat Jul 11 21:01:23 2015 UTC,If you're making a realtime chat app you probably want to go with something like Firebase rather than Parse.
swift,3cxcfg,JALsnipe,1 point,Sat Jul 11 22:47:20 2015 UTC,"If you're doing realtime chat use Layer Atlas. atlas.layer, it's great if you need to roll out something quickly with read receipts, photos,  and notifications that actually arrive correctly."
swift,3cxcfg,calmclear,2,Thu Jul 16 02:42:30 2015 UTC,"I'm really interested in what you think about the cost? I personally love the Parse Api, but i do not feel like my apps will be able to scale since the cost per api request will be huge with more than the free amount of users. What are your experience on the cost with a larger app that uses more than a few api requests per user online? Also I'm curios on how many users you can have with the free 1800 reqs per min?"
swift,3cxcfg,Dextes,2,Sat Jul 11 21:34:17 2015 UTC,"Quick question for you. Have you ever had an issue with the 1000 limit on queries? We have an app where we want to send a notification to everyone in a certain area. The only problem is our largest case could be around 50,000 users (not likely but it's a possibility). I know we can get up to 10,000 by using skip but my client would rather have a better solution."
swift,3cxcfg,Rudy69,1 point,Sun Jul 12 07:15:28 2015 UTC,"Parse user here, enjoying it as well."
swift,3cxcfg,boboguitar,5,Sat Jul 11 21:22:31 2015 UTC,Why don't you use iCloud (CloudKit)? https://developer.apple.com/icloud/
swift,3cxcfg,jzed,2,Sat Jul 11 19:05:13 2015 UTC,I want it to be multi-platform later on
swift,3cxcfg,jzed,2,Sat Jul 11 19:17:47 2015 UTC,"Gotcha. You might want to take a look at Azure.  MS is actually doing some great PaaS (platform as a service) stuff there. https://azure.microsoft.com/en-us/documentation/articles/mobile-services-ios-get-started/ If you don't mind getting your hands dirty, then Amazon's AWS is hard to beat. http://aws.amazon.com/mobile/sdk/"
swift,3cxcfg,bosslee,1 point,Sat Jul 11 19:50:47 2015 UTC,Thanks for all your help
swift,3cxcfg,jzed,1 point,Sat Jul 11 21:43:43 2015 UTC,Hi /u/jzed   Like to seek you opinion on MS Mobile Services. After reading through the link that you shared. I see that MS Mobile Services only works for mobile services. (no pun intended) i.e. If you have an iOS app that is doing great and you are building your team to do up a desktop app. It would not be possible to leverage on the same database / service. because it does not have a JS sdk. Do correct me if I'm wrong on this.   I'm asking this because I'm working on an IOS app with a web app in the pipeline for my client so I thought of using windows mobile service. Thank you very much.
swift,3cxcfg,dispensation,2,Sun Jul 12 00:37:02 2015 UTC,"I have not used it, but there is a wider variety of methods to access those backend services, JavaScript included.  https://msdn.microsoft.com/en-us/library/azure/jj554207.aspx  Not sure why the other site does not mention it.  Really, most all of the azure services can be accessed via REST, the mobile, JavaScript, etc. sdk just make it easier."
swift,3cxcfg,Rudy69,1 point,Sun Jul 12 02:30:46 2015 UTC,"As well as the platform lock-in, I'm pretty sure CloudKit doesn't actually allow you to set up private accounts for users to share between each other like Parse or Firebase can. Either you can post something publicly in the app or post data only you can access but User 1 can't post a private message to User 2 yet. Correct me if I'm wrong (I'd like to be wrong on this)."
swift,3cxcfg,dispensation,1 point,Sat Jul 11 23:40:35 2015 UTC,It's a huge downside. A client of mine wanted to use it but had to use Parse instead because we couldn't have user accounts
swift,3cxcfg,dGasim,1 point,Sun Jul 12 07:25:34 2015 UTC,"I thought as much. It's a shame, I hope Apple fixes this soon, surely they realise how limiting CloudKit is in its current state?"
swift,3cxcfg,Stephen110,6,Sun Jul 12 09:45:21 2015 UTC,"That is going to be a painful process but here it is:   Find a Cloud hosting service. Recommend: Amazon AWS, Microsoft Azure, Google Compute. Others: Linode, DigitalOcean etc. You might need multiple servers if your data gets big and you will need to configure your infrastructure.  Plan your database based on what you need to do. Do you need reporting, joins, etc? If yes, go with SQL. If not, I would go with Mongo. Because it is simple to configure, easy to scale, and it is unstructured, so the flexibility is higher. But again you need to figure it out. Parse uses a NoSQL database (I don't know if it is Mongo, but it might be). After you setup your database, you need to create an interface for your REST application to make it talk to the server. No Mobile client should talk directly to the Database. It should talk to the interface and get a response, preferably in JSON format.   To build a REST application, first choose a language - PHP, Python, Ruby, Javascript/NodeJS Then choose a framework. For PHP, check out Slim. For Python check out Django. For Ruby, check out Ruby on Rails. For JS/NodeJS, check out ExpressJS + Mongoose. Most people I know use MEAN stack. MEAN stands for Mongoose,Express,AngularJS,NodeJS for web applications. In your case, you just need to ignore AngularJS because you will be basically making an API server. If you ask my personal preference, it is PHP because I am comfortable with the language but I know for a fact that when Swift Open Source comes out and people start writing web libraries for it, I will change the language to Swift. Parse itself uses Javascript if coding is needed.  Create your REST API. Some personal tips on routing. Use version number for your API. For example have route like ""GET /v1/users"". And use plural when giving a name for your endpoints. For example, ""/v1/users"", ""/v1/places"", ""/v1/photos"".   If you want to go with this approach, it is going to take lots of time and you will be facing LOTS of problems. If you are doing it for learning, go for it. But if you are doing this for something production and you are doing it alone, I can assure you that you are going to hate switching between languages. If I were you, I would go with Parse.com or CloudKit."
swift,3cxcfg,crewshin,2,Sat Jul 11 22:09:06 2015 UTC,"MySQL is just the database, which is independent of the backend api you chose to implement.  I'm a big fan of SailsJS (uses node and is built on top of express).  You would also get the added benefit of built in socket implementation (using socket io), which could be crucial with your style of application.  And yes, it does support MySQL.  http://sailsjs.org"
swift,3cxcfg,BlueHippoMonster,2,Sat Jul 11 17:08:22 2015 UTC,Definitely go with parse if your requirements are simple. It's quite nice.  If you have a more complicated need... I HIGHLY recommend sails.js. It's un-freaking-believable. Built on top of node and express but it's feature set is amazing. The socket work alone under the hood is worth it imo.  Other than that /u/dGasim posted some nice info.
swift,3cxcfg,Dark_Angelas,1 point,Sun Jul 12 00:04:27 2015 UTC,[removed]
swift,3cxcfg,alt51,1 point,Sat Jul 11 17:49:06 2015 UTC,"Noob Q. What exactly is backend?  I was interviewing for an entry level ios developer position and the interviewer asked me 'are you more interested in backend stuffs'?  Can iOS development considered both? Front end = Interface Builder, Backend = logic stuffs...?"
swift,3cxcfg,asniper,1 point,Sun Jul 12 06:49:01 2015 UTC,"Backend refers to the application's data store, meaning where and how it stores it's data.  Examples are mySQL, MongoDB, Parse and others."
swift,3cxcfg,alt51,1 point,Sun Jul 12 07:53:09 2015 UTC,"By your definition core data is a backend. Databases are only a part of a backend  It's usually 3 parts, database,  an application and server"
swift,3cxcfg,zSprawl,1 point,Tue Jul 14 00:06:48 2015 UTC,You're correct.  I was just trying to get the basic idea across to Op.
swift,3cxcfg,atatator,1 point,Thu Jul 16 07:09:58 2015 UTC,"He really just wanted to see if you chuckle when he asked if you were interested in ""backend stuff""... :o"
swift,3cxcfg,ASnugglyBear,1 point,Wed Jul 15 01:31:52 2015 UTC,I can recommend Play framework + Hibernate + MySQL + Amazon AWS for scalability.
swift,3cxcfg,KevCon,1 point,Sun Jul 12 17:19:04 2015 UTC,This plus the beginner course is enough to make a RESt backend for your app you can run on heroku or another cloud vendor  http://www.purelyfunctional.tv/web-dev-in-clojure
swift,3cxcfg,calmclear,-1,Sat Jul 11 20:26:26 2015 UTC,Use Parse for iOS
swift,3cyksz,WongWray,3,Sat Jul 11 23:17:36 2015 UTC,"You're doing the wrong thing in the wrong place. You shouldn't be doing Core Data stuff in your app delegate.  Refactor (or just move) the Core Data code out of the app delegate and into a dedicated model class.  An easy (but not necessarily always good) way of referencing the objects you need, in this case your managed object context, is to create a singleton or shared object – Google it, it's a very simple concept. Then use the context from within your view controller instead of trying to assign it to a specific view controller in your navigation hierarchy."
swift,3cyksz,MrJules,1 point,Sun Jul 12 02:53:44 2015 UTC,"Does the model just create a new context? I've been assuming that I needed the AppDelegate's context specifically, is that not the case?"
swift,3cyksz,MrJules,2,Sun Jul 12 03:12:11 2015 UTC,"The app delegate doesn't have a managed object context by default, so someone has to put it there. And you really shouldn't put it there since it's not the app delegate's responsibility to know about your data.  You don't create a new context; it's the same you have now, you just move it from the app delegate into a different class. It helps with separating your model code from your other code which shouldn't handle that kind of stuff."
swift,3cyksz,MrJules,1 point,Sun Jul 12 03:40:40 2015 UTC,"Sorry, I'm not understanding something that's probably very easy: How can I move the context from the app delegate if the app delegate doesn't have the context by default?  And how would I move the context other than giving the view controller context properties and passing during segues?  Thanks for your help, clearly I'm very new to this :)"
swift,3cyksz,iDeviceDeveloper,1 point,Sun Jul 12 04:31:58 2015 UTC,"In your original code sample you have this:  self.managedObjectContext       So your code has a property or method called managedObjectContext, right? Simply move the code that references NSManagedObjectContext, NSPersistentStoreCoordinator, and NSManagedObjectModel into a separate class.  However, in your edit you're essentially doing what I'm suggesting, since the app delegate instance is a shared object (hence the name UIApplication.sharedApplication().delegate). So you could continue to do that, though I would still suggest you move it into a dedicated model class."
swift,3cxd30,PNT101,1 point,Sat Jul 11 16:51:46 2015 UTC,"unfamiliar with ""the impossible game,"" but iOS Games by Tutorials (Ray Wenderlich) walks the reader through creating several simple games.  One of them is a side-scroller, and there's an entire chapter devoted to ""scrolling""  I recommend the digital version - updates are free.  I bought the book 5 months ago, and a significant portion of the code within is already broken from two version updates to swift."
swift,3cw4le,proudlyhumble,1 point,Sat Jul 11 07:15:53 2015 UTC,"Well... not exactly but there are ways around it. You'll need a second video with the alpha channel. You can then combine those using the AVAnimator library to generate the video with alpha. Have used this method in apps that were on the app store. Works well. Check out the ""kitty boom"" example here: http://www.modejong.com/AVAnimator/examples.html"
swift,3cw4le,driftme,1 point,Sat Jul 11 15:22:05 2015 UTC,Thanks; I'd stumbled across AVAnimator but looks like you have to pay if you want to use it in a commercial app.
swift,3cvi9g,vinags,3,Sat Jul 11 03:03:54 2015 UTC,"As you can see, the second piece of code is much more readable. Also, it's much less error prone.  Unfortunately, you have to indeed make an array of all cases yourself.    Also, as per Xcode 7 beta 3, you won't need to specify the 0 nor do you have to specify a String (it will default to the name of the case).  You could've also shortened your for loop in the first example to the following:  for i in 0..<4 {     print(i) }"
swift,3cvi9g,basthomas,1 point,Sat Jul 11 06:00:45 2015 UTC,I was afraid of the 'unfortunately'...just hoping for an easier way.  Oh yeah...slipping into old habits...thanks for reminding me.
swift,3cvi9g,DressTheMonkey,2,Sat Jul 11 06:19:04 2015 UTC,"Hello.  You say the second version is much more meaningful to read, and I agree.  Then you say it doesn't seem worth it to add 'enums' in this case, but I disagree.  IMHO, making something more meaningful to read is the top reason to do anything in code.  Furthermore, by using the enum, you were able to get rid of the comment saying what the different numbers mean.  Again, a very strong reason for doing it the second way is because comments are subject to bitrot (if you changed it so 5 meant row and 17 meant column, you'd have to be sure to manually update the comment) whereas the enum is binding the numbers and the names and it is enforced by the compiler.  Also, note that this for loop example of usage is a very atypical use of an enum.  A more typical use would be (old style followed by new style):  let mrPacmanHeading: Int = 0 let msPacmanHeading: Directions = .upDiagonal   And unless you keep repeating the comment to say which integers mean which directions, it becomes extremely hard to remember what is going on.  I'm speaking of course of a large app with loads of variables and types; anyone can keep track of stuff in a page or two of code.  So, as you can tell, I'm a fan of the enum approach and I personally wouldn't do it any other way."
swift,3cvi9g,SheepWheatOre,1 point,Sat Jul 11 05:51:27 2015 UTC,"I agree with all you said. If I can glean a few more thoughts from you, if this is an atypical use of an enum, is there another more preferable and readable way to do what I am trying to do?"
swift,3cvi9g,foBrowsing,2,Sat Jul 11 06:17:30 2015 UTC,"Not sure what you’re going for, but maybe (untested):  enum Directions:Int {     case diagonalUp = 0, diagonalDown, row, column     static let count:Int { return Directions.column.rawValue + 1 }      var isDiagonal:Bool {         switch self {         case .diagonalUp, .diagonalDown: // if case in Xcode 7             return true         default:             return false         }     } }  for directionValue in 0..<Directions.count { // TODO: add generatorOf to Directions     if let direction = Directions(rawValue: direction.isDiagonal) {         if direction.isDiagonal {             println(""This is a diagonal"")         } else {             println(direction.rawValue)         }     } }"
swift,3cvtbx,proudlyhumble,2,Sat Jul 11 04:55:42 2015 UTC,Download Xcode 7 beta 3? It's working fine for me.  If you still use iOS 8.4 on your phone then you need to copy the contents of the latest official Xcode so you also have it on the new one.
swift,3cvtbx,idleservice,1 point,Sat Jul 11 07:50:55 2015 UTC,I have Xcode 7 beta 3. My iPhone is running iOS 9 beta 3. Is your device running 8.4 or 9.0 beta 2 or beta 3?
swift,3cvtbx,idleservice,1 point,Sat Jul 11 14:36:30 2015 UTC,"I upgraded yesterday, I was on iOS 8.4. Now I'm on both beta 3 (public beta 1) on my iPhone 5S and I have no problem."
swift,3cvtbx,frownysmiles,2,Sat Jul 11 15:41:11 2015 UTC,Someone found a solution:  http://stackoverflow.com/questions/31306389/ios-9-beta-3-cant-trust-enterprise-developer-apps
swift,3cvtbx,frownysmiles,1 point,Sat Jul 11 16:55:18 2015 UTC,For iOS 9 I suppose you'd need Xcode 7. I just deployed my app to my phone. No paid developer account required.
swift,3cveno,the_droog,2,Sat Jul 11 02:29:30 2015 UTC,"The results you are seeing: everything appearing in the same font and size are the result of using the text property of a label; that is how that works.  I think you have a couple options:  1) Create two labels, one to hold the time, the other to hold the am/pm label.  Put different fonts/sizes or whatever you want there.  Then in the code, use two date formatters, the first containing just the time and set that on the first label, the second containing just the am/pm and set that on the second label.  2) use the attributedText property of UILabel to set an attributed string (NSAttributedString).  Here again you would use two formatters to get the two parts of the date, then you would use the methods of NSAttributedString to put each piece into a single attributed string and then set that as the label's attributedString property."
swift,3cveno,DressTheMonkey,1 point,Sat Jul 11 06:00:51 2015 UTC,"This is what I'd like to do, but I can't seem to get the date components to display in the label.  ""1) Create two labels, one to hold the time, the other to hold the am/pm label. Put different fonts/sizes or whatever you want there. Then in the code, use two date formatters, the first containing just the time and set that on the first label, the second containing just the am/pm and set that on the second label."""
swift,3cveno,DressTheMonkey,1 point,Sun Jul 12 18:47:45 2015 UTC,"If you have sorted this by now, then well done and just ignore the rest of this.  If not, I'd be glad to try to help if you can post some code which isn't working along with your description of what you are trying to do and what is actually happening.  I can't tell if you are successfully getting the two strings containing the correct date components and you are having trouble displaying those strings in labels, or if the problem is getting the strings containing the date components.  So (to coin a phrase I'm sure no one has ever used before): a hunk of code is worth a thousand words."
swift,3cveno,freaktheclown,1 point,Tue Jul 14 06:20:50 2015 UTC,"Try this:  NSTimer.scheduledTimerWithTimeInterval(1.0, target: self, selector: ""updateTime"", userInfo: nil, repeats: true)"
swift,3cv6i2,bulldogs93,2,Sat Jul 11 01:14:17 2015 UTC,"Instead of passing nil for the handler, pass a closure. This will be executed when the user tap ""OK"". For example:  alert.addAction(UIAlertAction(title: ""OK"", style: .Default, handler: { _ in     self.performSegueWithIdentifier(""some_ID"", sender: nil) }))   Edit: added example"
swift,3cv6i2,ios_game_dev,1 point,Sat Jul 11 01:39:14 2015 UTC,Awesome. Thanks!
swift,3ctz1i,JohnnyH97,1 point,Fri Jul 10 19:28:23 2015 UTC,"Why not use CoreData, or some sort of persistent backend (Parse.com is good if you don't have server software experience)?"
swift,3ctz1i,zackkitzmiller,1 point,Fri Jul 10 20:40:11 2015 UTC,"I attempted using CoreData, yet it didn't play so well with a generated collection view. I'm wondering if there are any alternatives, and although I've used Parse in the past and thoroughly enjoyed it I need to locally store data this time."
swift,3cre4i,ejzee,8,Fri Jul 10 04:05:06 2015 UTC,"Short answer. Yes. Swift is a good language to learn for a beginner programmer.   I'm a full-stack engineering working in the startup world of SF and I started out programming in Matlab. I work mainly with Java and Javascript, but was able to make an iOS app with Swift in a matter of couple months. If you know the basics of programming, OOP, data structures, algorithms, MVC switching from languages should be fairly easy. I would have to say that Objective-C has a steeper learning curve than Swift and that the majority of startups/corporations nowadays still code in Objective-C, but some of the newer ones are transitioning to Swift."
swift,3cre4i,littlepinkrose12,1 point,Fri Jul 10 05:01:36 2015 UTC,"It's clearly going to take some time before I'm proficient. Is it unreasonable to think there will be a solid amount of demand for people writing in Swift in, say, a year or two from now?"
swift,3cre4i,Adamw88,5,Fri Jul 10 05:23:02 2015 UTC,"I would venture to say yes, there will be. Swift is a much easier language to learn that Objective C, and you have access to all of the Objective C goodies to use. I see Apple pushing Swift to be their primary language in the not-too-distant future."
swift,3cre4i,driftme,3,Fri Jul 10 14:58:48 2015 UTC,"My professional experience has been: Startups are often using swift. Large established (fortune 500-ish) companies often have established code bases in Obj-c. Swift is amazing and growing in popularity but currently there's more existing code out there in Obj-c, and still a lot of apps that need work done with it. Going forward, the popularity and reach of swift will continue to increase. It's a good thing to learn."
swift,3cre4i,sxeteej,3,Fri Jul 10 21:38:17 2015 UTC,"Hello, I think I can give some insight here. Some background on me. I have been programming for about a year now. I am a Computer Science and Mathematics student at Florida State University. At FSU we learn C++ for our first language and use it throughout that major. It was my first language and it was a struggle to learn. I didn't really feel like I had a grasp on it until after my third major programming course, Data Structures. That being said, I learned to code very well. I learned OOP very well and I learn Data Structures very well.   My first iOS language was swift and I have been coding in that for about 6 months now and it was very easy to learn coming from C++. IMO it is an easy language to code in and that is a very good thing. It removes a huge barrier from learning to code.    I've been told the reason my university uses C++ as its first language is that it is a lot easier to go from C++ to another language then it is to go the other way around. Depending on your goals and you available resources I would try my best to get a formal education in programing if you can in C++ as it has gone very well for me. Mobile is a lot of fun but while learning it I felt like there was a lot of stuff I would not have understood. Most resources out there are tutorials and they just kinda tell you to do stuff and at most scratch the surface as to why.   If you are in a situation where great resources like going to university aren't available then I think swift would be a great first language. My introduction classes would of been a HELL of a lot easier if I had some background in programming and like I said before, swift is one of the easier languages to learn. Another benefit is that it's a lot of fun to make apps so you always will have a larger motivation to learn then you would just reading a C++ book or something like that.   Sorry for the ramble but I hope you can find you answer somewhere in there. Good luck and when it comes down to it, just start coding something, it won't hurt."
swift,3cre4i,muffinman744,1 point,Fri Jul 10 04:46:55 2015 UTC,"C++ is a pretty hard first language, most universities learn java first then C++. I guess that makes learning higher level languages pretty easy then!"
swift,3cre4i,voidref,3,Mon Jul 13 17:09:18 2015 UTC,"I would say Swift is an excellent first language.  The playgrounds are far and above incredible tools for learning.  Swift is pretty easy to explore, and as you progress it has quite a number of features that are hallmarks of modern languages. (OO, value types, lexical closures (blocks), scope control, etc)  One of the things that Swift does not make easy is pointers. These are one of the things that other C-like languages expose wantonly, and are the cause of many programming errors. Swift is able to interact with them, but not really like these other languages and they aren't plainly exposed.  But that's ok. I started out with BASIC of all things, before I went to C++ early in my career. If I never have to look at another example of manual memory management or pointer arithmetic, I would be more than overjoyed.  Just remember, Swift is still really new as a language, so don't forget to keep up with changes and read sites like NSHipster and watch all the WWDC videos you can make time for. Even if you have no idea what they are talking about, it's good to just get used to the things that people do with the language.  Good luck!"
swift,3cre4i,chaotic_goody,3,Fri Jul 10 17:35:47 2015 UTC,"TLDR: Yes!  Swift definitely won't affect your ability to grow as a programmer later on. Just remember that there are lots of languages with different priorities and tradeoffs, and there's something to learn from each of them.  You might be frustrated if you swap to another language later and it doesn't have something that you're used to in Swift, but honestly that's probably going to be the case no matter what you learn first.  Playgrounds are an amazing tool for learning, and will certainly help with the rate at which you can iterate on ideas and learn."
swift,3cre4i,gilgoomesh,1 point,Fri Jul 10 05:12:21 2015 UTC,"I'm fully expecting to be frustrated, so this isn't a turn off. Thanks for the response!"
swift,3cre4i,gilgoomesh,3,Fri Jul 10 05:20:33 2015 UTC,"Swift 2.0 is a huge improvement.  Cocoa is vastly easier to use since APIs return the correct types (instead of the ambiguous Objective-C ""AnyObject"") and error handling is now easy (instead of pure torture).  Additionally, large numbers of bugs and obvious functionality holes have been plugged.  I know this doesn't directly answer if Swift is good for a beginner but if you're simply looking for a comparison to 1 year ago: Swift 1.0 betas were nearly unusable. Swift 1.0 was constantly frustrating with continual crashes and unreadable compiler errors. Swift 1.2 worked okay but gave weird errors and crashes you if you tried to do anything interesting with generics, currying, enums or reflecting.  Swift 2.0 is vastly better for anyone trying to use it."
swift,3cre4i,lusion,1 point,Fri Jul 10 05:44:27 2015 UTC,"A follow up responding to a specific line in your question:   Is learning Swift first going to somehow corrupt my ability to grow as programmer latter on?   Certainly not. There is so much in common between Swift and other modern imperative languages (e.g. Rust, C# 6, C++17 and to lesser extent functional languages like Scala) that time learning Swift will certainly not be wasted or corrupting."
swift,3cre4i,BrainDeadUnit,2,Fri Jul 10 05:54:27 2015 UTC,"In principle you can start with anything. There are people who manage starting with C++ and that is a terrible first language. Friendly beginner languages just let you focus more on programming concepts rather than wasting lots of time on syntax and gotchas. But ultimately it is your own motivation and drive that matters. It is more important that u think it is fun than it being the ultimate beginners language. Swift allows u to do a lot of fun stuff e.g. With SpriteKit, CoreAnimation etc which is not readily accessible elsewhere.  I think you should just try Swift. If it feels hard try small talk, racket or Python instead. There is no loss trying. I think people make too big deal out of making the right choice of first language. Most skills learned one place is transferable to another language"
swift,3cre4i,Elito25,1 point,Fri Jul 10 14:07:59 2015 UTC,"Smalltalk is a great entry point, especially if you want to use Apple's languages. For those who don't know, Obj-C is basically ""Smalltalk bolted onto C,"" and Swift feels like someone wanted a language sitting somewhere between Smalltalk and Scala (Or, more so of, trying to pull Obj-C, along with its Smalltalk concepts, into a Scala world).  If anyone has trouble trying to understand OOP, I also suggest Smalltalk. It really opened my eyes as to how to actually program in an OOP style (instead of just ""procedural with objects"")."
swift,3cre4i,twostraws,1 point,Mon Jul 13 04:30:06 2015 UTC,"In my opinion, it is a very good first language. For me, I went through the swift book back when it was first released. I started making little iOS apps but I decided that wasn't for me. Although I only stuck with it for 2 months, it put me on the fast track for another language, Java. Eventually, I learned C++ and a few other languages. Swift is one of the easier modern languages so it is great to learn it as a foundation for other programming languages."
swift,3cre4i,IpadAnnie,1 point,Fri Jul 10 15:22:26 2015 UTC,"I absolutely, whole-heartedly recommend Hacking with Swift. Disclaimer: I am pretty much as biased you can get :D"
swift,3cre4i,BrainDeadUnit,1 point,Fri Jul 10 21:48:26 2015 UTC,"The main issue that I see is that Swift seems to keep changing.  Lots of example code out there is almost up to date, but not quite.  This can be frustrating for a beginner.  Also, some code samples you find are not so great.  As a beginner, I've come across code tutorials that aren't as well thought out as they could be."
swift,3cre4i,Voley,1 point,Sat Jul 11 01:42:28 2015 UTC,"I'm going to dissent and say that I think Swift is generally a horrible first language.  It's.. not easy. To really leverage the language and do useful things with it, you have to understand some not-basic programming concepts. The Swift language, on its own, isn't the easiest thing to wrap your head around (many ways to approach one problem, some ""advanced"" techniques are pretty standard, a lot of thinking quite abstractly (which, IMO, is hard for a beginner), and good luck to any beginner trying to wrap their head around what an Optional is). But you'll rarely be using Swift on its own -- you'll be using it in all of Apple's ecosystem, which is no small task for a beginner to pick up. Learning Swift will hit like a pile of bricks.  But, if you're willing to stick it out, why not. If you can deal with the frustrations and several roadblocks you'll encounter on trying to do useful things in Swift, you can probably become a proficient Swift programmer in less time starting with Swift than Other Language -> Swift.  However, my recommendation would be to spend about 1 or 2 months studying either Ruby, Python, or Javascript, learn to do all the basics there, then begin to pick up Swift. I think your chances of success will go up, you'll stumble less, and it'll be less of a headache. I'd recommend Ruby and Javascript over Python, as they ""think"" more in the same manner to Swift. With Python you tend to find code that ""thinks"" in a C-style way. Choose Ruby if you'd be interested in learning Obj-C in the future (both borrow heavily from Smalltalk), Javascript if you want a more ""Full stack"" approach. Whichever language you choose, you'll now benefit from being able to use the different languages for different tasks.  I wouldn't bother with C or Obj-C right now. Both of these languages take quite a bit of effort to become proficient in, and will distract you from your goals. They're something you can pick up later.  tl;dr: Swift is a hard language, especially for a beginner to programming. However, which language you should learn depends on your goals. If your goal is to program in Swift, just suck it up and dive into learning Swift. If you want an easier path, first spend a couple months on Python, Ruby, or Javascript."
swift,3cre4i,LeanIntoIt,-1,Mon Jul 13 04:14:29 2015 UTC,"That's a swift sub, what kind of answer do you expect?   But I need to warn you, that if you ever want to become an employed iOS or Mac developer, you will have to learn objective-c.   If it is a hobby, swift is fine."
swift,3cre4i,Voley,2,Fri Jul 10 12:54:22 2015 UTC,"You don't think Apple is going to completely supplant Objective-c with Swift, as is their apparent goal?  I think they will, within 2 more years."
swift,3cre4i,PabloXPicasso,2,Fri Jul 10 14:22:44 2015 UTC,"Ok, there are thousands of production apps in Objective-c that are never going to be rewritten in Swift. What do you mean under ""supplant""? Apple has not been doing much with Objective-C either way. They add some nice syntax sugar every couple years, but that's it. If anything it is stating that Objective-C is not going anywhere, since all new libraries support Objective-c and not abandon it/"
swift,3cre4i,majeric,1 point,Fri Jul 10 14:55:38 2015 UTC,"I would also add that, at least for the time being, knowing Objective C is still valuable, as numerous 3rd party examples and libraries are still in Objective C.  Just being able to read and understand that (sample) code will be helpful to the 'working' programmer."
swift,3cre4i,voidref,-3,Fri Jul 10 15:26:55 2015 UTC,"A programming language without the supporting libraries, is like learning a verbal language grammar and knowing no words.   Swift is still too dependent on Obj-C libraries."
swift,3cre4i,majeric,2,Fri Jul 10 08:41:17 2015 UTC,"Can you give an example of where Swift is incomplete as a language because it relies on ""ObjC"" libraries?  Swift has it's own standard lib. The only time I use any libs that were written in objc is when I am interfacing with the Cocoa Kits."
swift,3cre4i,voidref,0,Fri Jul 10 17:22:22 2015 UTC,It makes Swift a second class citizen because you have to know something about obj-c to use those libraries.
swift,3cre4i,BrainDeadUnit,2,Sat Jul 11 00:32:29 2015 UTC,"The was Swift interoperability works, you don't, actually.  From the point of Swift development, it doesn't matter what language they are written in, you just have to know how the interface works.  Have you ever used CoreAudio APIs? The interfaces are in C, but implemented in C++, how much do you have to know about C++ to use them? None."
swift,3cre4i,PabloXPicasso,1 point,Sat Jul 11 00:36:05 2015 UTC,"I really do think a Swift programmer benefits from understanding ObjC's approach to using all of the ObjC/Cocoa libraries/frameworks, but is totally something you can get around. ObjC just doesn't ""think"" in the same way as most languages, and I think it really shows up in how you use the frameworks.  But I think majeric's point still stands: Good luck using Swift without Apple's ecosystem. You're going to pretty much learn some portion of Apple's ecosystem to do anything useful in Swift, and because of this, I can't really recommend it (nor ObjC) to a beginner. Python or Ruby, where you have the luxury of asking, ""What's a library?"" after building half of a blogging platform, would be a better start."
swift,3csuek,YouHawk,1 point,Fri Jul 10 14:23:24 2015 UTC,This tutorial seems pretty legit:  http://webindream.com/soap-with-swift/
swift,3csuek,Stephen110,0,Fri Jul 10 14:55:09 2015 UTC,"I saw that one as well, but I dont know how my soapMessage should be. That`s why I asked here."
swift,3csuek,PabloXPicasso,1 point,Fri Jul 10 15:00:26 2015 UTC,"Hi, I know this doesn't give you exactly what you are looking for.  We have used the Sudz service ( http://sudzc.com ) which generates obj-C code.  You will probably  still need to modify the generated code to handle the parameters.  You should then be able to use Swift Interop to call use the generated Objc code.  It does handle all the SOAP metadata and xml formats, so you don't have to.   I have used it for many projects and it does it's job well."
swift,3cqnoe,Octavian-,6,Fri Jul 10 00:15:37 2015 UTC,"You approach the ui design differently, but the swift language itself is the same. You can see my first OS X swift app here if it helps.   https://github.com/mveinot/InsteonCommander"
swift,3cqnoe,mveinot,4,Fri Jul 10 00:38:45 2015 UTC,"Are the skills required for iOS and OSX development completely transferable,   The UI frameworks are similar, but the UIKit was designed by people who had decades of experience in developing with the AppKit.  The key difference I would say is that the UIKit is considerably streamlined."
swift,3cqnoe,ReasonReader,6,Fri Jul 10 02:19:56 2015 UTC,"The language is not the thing to worry about.  OS X development has its own 9 circles of Hell, and lying in Malbolge waiting for you is AppKit.  If you can manage to get over the 30 years of cruft, odd corner-cases, APIs older than you are, randomly missing conveniences, semi-useless controls, and arbitrary complexities you'll be fine.  That said, if you can make it on Mac, you can make it anywhere.  The other way around, not so much IMO."
swift,3cqnoe,CodaFi,7,Fri Jul 10 02:17:19 2015 UTC,While this sounds negative...it's more an accurate portrayal of a somewhat challenging platform
swift,3cqnoe,ASnugglyBear,2,Fri Jul 10 03:25:44 2015 UTC,"Is it really anymore challenging than other desktop operating systems?    You look at Windows, Linux, BSD and whatever and you find lots of cruft.   Last I knew most of GTK and gnome was written in C.    At least Objective C is a tiny step above that.    That being said Swift does nothing for either iOS or Mac OS in replacing the tool kits with something more modern.  Cocoa is still there wth Swift."
swift,3cqnoe,spinwizard69,1 point,Sun Jul 12 05:01:22 2015 UTC,"Objective-C is not what makes the mac platform challenging. APIs of Cocoa are. To quote /u/CodaFi    The language is not the thing to worry about. OS X development has its own 9 circles of Hell, and lying in Malbolge waiting for you is AppKit   I think desktop mac software is a bit harder to write than many of the other platforms. Not impossible...just harder. And I'm a lover of the platform."
swift,3cqnoe,ASnugglyBear,1 point,Sun Jul 12 14:20:35 2015 UTC,Its like a violinist learning to play the viola
swift,3cqnoe,downvotefodder,0,Sun Jul 12 23:03:16 2015 UTC,"They're not completely transferable. OS X uses a framework from the NeXT days called Cocoa, which is an ancestor of iOS's Cocoa Touch. My understanding is that Cocoa still has some quirks that have been left over from the earlier days. There are also going to be APIs that are available on one platform but not the other.   I have recently been thinking of a Mac project and found that the Big Nerd Ranch has just released the 5th Edition of their Cocoa Programming guide. I just received my copy on Monday and it looks good. From what I can tell, you probably want to have access to some Mac specific materials."
swift,3cqjtz,zSprawl,15,Thu Jul 9 23:45:25 2015 UTC,"I strongly recommend using and learning auto-layout. It is tricky at first, even with a simple app, but once you master it, it saves you a lot of coding by hand for every possible screen size, both present and future.  I hope they improve the way constraints are presented in xcode soon though as sometimes it can be hard to modify the correct one (or figure out which two conflict if you have an issue)."
swift,3cqjtz,MarsSpaceship,-12,Fri Jul 10 00:35:50 2015 UTC,"It is tricky at first, even with a simple app, but once you master it...   ...it continues to be a piece of crap.   Xcode is a pack of bugs, issues and limitations wired together. Auto layout is designed by satan, that works for the part of Apple that deals with developers, as his master touch."
swift,3cqjtz,zSprawl,1 point,Fri Jul 10 02:29:35 2015 UTC,"I agree it is poorly done, but when it works, I find it nicer than trying to determine every device screen size and orientation permutation."
swift,3cqjtz,MarsSpaceship,2,Sat Jul 11 18:13:50 2015 UTC,everything about auto layout makes me cringe but obviously when it works it is better than doing manually.
swift,3cqjtz,n0ds,-2,Sat Jul 11 22:07:03 2015 UTC,Everything about this comment is true.  Autolayout is painful.
swift,3cqjtz,ReasonReader,2,Fri Jul 10 03:03:46 2015 UTC,"Do most companies write the UI code or just use Autolayout?    Can't speak for most companies, but at Apple they're trying to move to Autolayout wherever possible.  It's the best way to future-proof their UI to cope with new devices (like the iPhone 5 to 6 transition.)"
swift,3cqjtz,ReasonReader,5,Fri Jul 10 02:22:26 2015 UTC,"I have serious doubts Apple uses auto layout or even Xcode for their projects,    Doubt all you want, but I've been there and I know that they do.   Do you really think Final Cut is created using this crappy version of Xcode we know? I don't think so.   As it happens, I've worked in ProApps, and I know first hand that they use the same tools you have access to."
swift,3cqjtz,ReasonReader,2,Fri Jul 10 02:32:44 2015 UTC,What an interesting fantasy life you have.
swift,3cqjtz,ReasonReader,2,Fri Jul 10 02:38:27 2015 UTC,"Try again, that sentence doesn't parse.   If you write code the way you write English, then I suspect that Xcode is not the problem."
swift,3cqjtz,MarsSpaceship,-6,Fri Jul 10 02:52:44 2015 UTC,You would understand if you were able to talk a second language and if English was not your first. You would also know how to be polite.
swift,3cqjtz,Pango56,3,Fri Jul 10 02:56:18 2015 UTC,"It really depends on what you are trying to do. If you are a new developer I highly recommend learning to use Autolayout for fairly simple layouts. The majority of simple apps out there can be done using autolayout and it saves you the headaches of different screen sizes and what not. It's not perfect by any means and can be frustrating with tons of constraints conflicting and such but it can help you a lot especially if you are doing very static layouts. Plus, it's easy to lay things out manually with springs and struts - just set the frame as either constants or relative to the superview, why not give autolayout a try and learn something new?"
swift,3cqjtz,ios_game_dev,1 point,Fri Jul 10 02:58:31 2015 UTC,Thanks for the response! I think I understand it now.
swift,3cqjtz,ArvoHeikki,3,Fri Jul 10 02:59:35 2015 UTC,"I work for a company that builds apps for huge brands like NBC, Coca-Cola, Chick-fil-a, etc. We use Autolayout. Some people think Autolayout is buggy, or that Xcode does not handle Autolayout well. These people do not understand Autolayout, so they are inclined to bad-mouth it. Modern apps are not built for iPhone + iPad like they once were. Your app must support any device resolution and aspect ratio, no matter how absurd. Just look at the split screen functionality on iPad in iOS 9. Autolayout is currently the best mechanism to achieve this."
swift,3cqjtz,Relleum,2,Fri Jul 10 03:02:16 2015 UTC,"There are still people who stubbornly insist on designing pixel-perfect layouts by hand for every different screen size, but I think Apple has made it clear that this is only going to become more and more of a chore for developers as time goes on, and they're really trying to push autolayout as a result.  The increasing expectation is that developers learn to think differently--more simply, really--about how they design layouts, instead of trying to over-engineer things, which is not only harder, but can lead to cluttered, confusing designs. They want users to be able to interact with the same app on any device, any screen size, in any orientation, and have it look beautiful. Autolayout aids in that process, and you should definitely learn it.  As with many things in programming, autolayout generates quite a bit of drama because people are invested in the ways they've always done things, and they don't like change."
swift,3cqjtz,blaizedm,1 point,Fri Jul 10 00:05:21 2015 UTC,"How can I learn about how frame/bounds relates to autolayout?  For instance, if I create a custom view and tie it to xib that uses autolayout, none of it is respected when I use that view as an InputAccessoryView.  Check out this gist to see what I mean: https://gist.github.com/anonymous/965d52e86b6b3a89260d  Notice I have to set the frame with actual CGRectMake(0, 0, 375, 100), but the problem comes in when I have variable height and now have to manipulate the height constraint and the frame.   These are the weird case that make using autolayout and interface builder difficult to reason about.  Whenever a thread shows up like this, many say that IB and Autolayout are the way to go.  But honestly, I can't find a worthwhile open source app that uses storyboards, xibs, and autolayout successfully.  Take a look at https://github.com/netguru/roomguru -- I see lots of clean code, and yes they use autolayout but through cartography only."
swift,3cqjtz,NathanJang,1 point,Fri Jul 10 01:48:46 2015 UTC,Do you mean Interface builder? Because you can write autolayout constraints in code as well.
swift,3cqjtz,moridinbg,1 point,Fri Jul 10 17:56:30 2015 UTC,"I don't have an answer for you, but PureLayout is a pretty great interface for autolayout."
swift,3cqjtz,ASnugglyBear,1 point,Fri Jul 10 03:08:03 2015 UTC,"Go for auto layout, it would (generally) make your life much easier. It can be a bit tricky in the InterfaceBuilder (+ really sucks for version control there) and the Apple solution for AL in code is a bit verbose, so once you grasp it well I would suggest to have a look at http://snapkit.io  Also, bear in mind that for complex layouts with tens of interdependent views (e.g. keyboard) there is a non-trivial performance penalty."
swift,3cry76,th3phantom,2,Fri Jul 10 07:55:42 2015 UTC,"Just viewing your list, I don't think you will necessarily need a private API to get....things like speed, direction  should be available via Core Location or Core Motion."
swift,3cr7wm,charlesfries,2,Fri Jul 10 03:10:23 2015 UTC,"From what I remember when I tried it and got an error message, the phone needs to be on iOS 9 as well. Now that the public beta is out, it should work, right?"
swift,3cr7wm,frownysmiles,1 point,Fri Jul 10 04:09:36 2015 UTC,"Got it working. I had to use another Apple ID however, because I was getting an error due to a bug in the Xcode beta."
swift,3cr7wm,Sebaall,1 point,Fri Jul 10 04:45:40 2015 UTC,"iOS 9 is not needed. I successfully ran apps from Xcode 7 on iOS 8.3 and 8.4 (with small hack, because Xcode 7 beta does not support developing on iOS 8.4 devices)"
swift,3cr7wm,frownysmiles,1 point,Fri Jul 10 21:25:21 2015 UTC,small hack
swift,3cr7wm,Sebaall,1 point,Sat Jul 11 15:45:32 2015 UTC,"Yep, you just need to copy some catalogue from Xcode 6 and paste it into Xcode 7's app bundle. Search my comment history, I linked to a SO's thread with this hack."
swift,3cr7wm,frownysmiles,1 point,Sat Jul 11 16:16:40 2015 UTC,"I have no use for that because I'm on El Capitan, iOS 9 and Xcode 7."
swift,3cr7wm,Sebaall,1 point,Sat Jul 11 23:23:02 2015 UTC,I thought that was a question.
swift,3cr3l0,WongWray,1 point,Fri Jul 10 02:32:20 2015 UTC,Try moving your request authorization and start of updates into viewDidAppear.  Prompts likely won't work since the view hasn't even loaded when you currently call on the location manager to start updating.
swift,3cm8u5,FollowTheBlind,9,Thu Jul 9 00:26:11 2015 UTC,"They've enforced it on function declarations in Swift 2.0, maybe closures will be covered as well?"
swift,3cm8u5,tonyunreal,7,Thu Jul 9 11:33:19 2015 UTC,"I wouldn't say it's the wrong way, but it's definitely inconsiderate, especially for libraries offering code for others to use.  I agree. It should be a common practice, and I think it will be as the language becomes more popular."
swift,3cm8u5,toastykittenz,3,Thu Jul 9 10:59:26 2015 UTC,"I get the gripe, but I think Apple's trying to give developers a way to provide their own context-dependent names for closure variables, which has the benefit of leading to more readable code. And you can always read the documentation (as you probably should be anyway) to find out exactly what the exposed variables are for."
swift,3cm8u5,ArvoHeikki,11,Thu Jul 9 01:38:08 2015 UTC,"Well nothing stops you from changing the name of the param in your block. The problem is that with such a method signature, you cannot quickly find out what each parameter actually stands for. Typically the Quick Help breakdown of the method is enough, but in this case you do have to dig into the documentation just to answer the simple question ""What IS that String I receive?""  For comparison, this has never been a problem in Objective-C:  http://imgur.com/a/4o1cj"
swift,3cm8u5,Hawk_Irontusk,2,Thu Jul 9 01:49:24 2015 UTC,"Yes, but your way obscures the parameters type which is a far worse situation. I'd much rather know the required type than the name someone decided to give to a parameter."
swift,3cm8u5,toastykittenz,1 point,Thu Jul 9 11:11:16 2015 UTC,"In what way does it obscure the parameter's type?  If you're using Xcode, the auto-complete will show both the name and type with his example."
swift,3cm8u5,Hawk_Irontusk,1 point,Thu Jul 9 13:33:58 2015 UTC,"Showing both is a good solution, but that's not what he shows in his screenshot.  EDIT (in response to the edit above):  His screenshot obscures types because he shows:  aBetterMethod { (status, message, success) -> Void in code }   If he did this, I'd agree with his suggestion:  aBetterMethod { (status: String, message: String, success: Bool) -> Void in code }"
swift,3cm8u5,toastykittenz,2,Thu Jul 9 13:36:53 2015 UTC,"I see what you mean.   Fix your example OP!  EDIT: @Hawk_Irontusk - The first one is post-autocomplete, the second is what autocomplete shows before you fill in the parameters."
swift,3cm8u5,ArvoHeikki,0,Thu Jul 9 13:45:44 2015 UTC,"I guess I don't see why going into the documentation to find out what a parameter stands for is such a huge deal, though. Closure arguments in the frameworks are designed to allow developers to easily, immediately, and locally implement customized solutions that improve the readability of their code. Part of this customization is leaving the naming up to the developer."
swift,3cm8u5,AeroelasticFlutter,9,Thu Jul 9 01:56:30 2015 UTC,You can still change the names of the params in the block you define. Doing it OP's way just makes the autocomplete suggest useful names.
swift,3cm8u5,foBrowsing,1 point,Thu Jul 9 02:23:20 2015 UTC,"That makes a tonne of sense. I don't think it should be enforced, but I can't imagine a downside for the standard library functions, and other libraries. Did you file a radar?"
swift,3cm8u5,k337,1 point,Thu Jul 9 19:30:27 2015 UTC,Does the function definition dictate the autocomplete?
swift,3cm8u5,k337,1 point,Thu Jul 9 22:21:20 2015 UTC,"What a stupid question, I need sleep"
swift,3cpf4z,WongWray,1 point,Thu Jul 9 18:37:34 2015 UTC,What is your queryURL? Are you using HTTPS?
swift,3cpf4z,littleodie914,2,Thu Jul 9 18:49:17 2015 UTC,"printing out queryURL.description gives me:  URL: 0046500733437/ --https://api.outpan.com/v1/products/XXXXXXXXXXXXXXXX/  where XXX...XX is my apikey and 0046500733437 is the GTIN number. I construct the queryURL like so:  baseURL = NSURL(string: ""https://api.outpan.com/v1/products/\(apiKey)/"") queryURL = NSURL(string: ""\(gtin)/"", relativeToURL: baseURL)   EDIT: I already see my problem, had my URL set up incorrectly.  Thanks for pointing me there"
swift,3cpf4z,zSprawl,1 point,Thu Jul 9 18:59:12 2015 UTC,It is worth mentioning you need to whitelist urls in the info.plist starting with iOS 9.
swift,3cntnx,toastykittenz,3,Thu Jul 9 10:20:27 2015 UTC,"I would suggest using a combination of an enum and an extension:  // External Json declaration (ignore this, just mirrors the underlying dict) struct Json {     let dict : [String : String]     subscript (key: String) -> String? { return dict[key] } }   // Your own code // In Swift 2, String values are the enum raws by default enum Keys : String {     case Hi     case There     case Test }   // Extend the Json struct (or class) to be usable with your valid keys extension Json {     subscript (key: Keys) -> String? {         return self[key.rawValue]     } }   let data = Json(dict: [     ""Hi""    : ""Ola"",     ""There"" : ""Lol"",     ""Test""  : ""Wut"" ])  data[.Hi]       // ""Ola"" data[.There]    // ""Lol"" data[.Test]     // ""Wut""   This way it's very easy to write, Swifty, you don't write anything more than needed and you can't get a wrong key"
swift,3cntnx,Kametrixom,1 point,Thu Jul 9 20:29:46 2015 UTC,"I prefer using a struct. The struct lets you store static members of different types and in an enum with raw value you can only store one type.  But in your case, when you only use strings as the static values, then you can use an enum. The only inconvenience will be that you will have to always get the raw value of the enum like:  let jsonKey = JSONKeys.Name.rawValue   For the struct it would be a little shorter:  let jsonKey = JSONKeys.Name"
swift,3cntnx,xlogic87,2,Thu Jul 9 12:36:23 2015 UTC,I agree with this as well. We use structs to define our JSON keys for the exact same reason stated above.
swift,3cntnx,artary3,1 point,Thu Jul 9 13:53:33 2015 UTC,Thanks for clearing it up for me. Structs it is!
swift,3cntnx,driftme,1 point,Thu Jul 9 13:22:35 2015 UTC,"I'd use an enum. Not in Swift 1.2, but in the new version, according to apple: ""If an element of an enum with string raw type does not have an explicit raw value, it will default to the text of the enum’s name.""  So you could do   let jsonKey = JSONKeys.Name   with the enum as well... soon =]"
swift,3cntnx,artary3,2,Thu Jul 9 13:41:44 2015 UTC,Well damn. Maybe I should just settle this with eenie-meenie-miney-mo.
swift,3cntnx,xlogic87,2,Thu Jul 9 13:50:56 2015 UTC,"The nice thing about this in Swift 2.0 is that you get the nice switch support which knows when it is exhaustive.  Something like this...  enum JSONKeys: String { case Name, Desc }  switch key {     case .Name:           name = json[key]     case .Desc:          desc = json[key]     }   If you are using 1.2 however I would stick with Structs. Overall it's a pretty minor difference either way :)"
swift,3cntnx,artary3,1 point,Thu Jul 9 14:08:18 2015 UTC,Not sure about this. I think Apple means that the raw value will default to the enum's name but to get it you will still have to write:  let caseValue = SomeEnum.SomeCase.rawValue
swift,3cntnx,driftme,1 point,Thu Jul 9 13:56:15 2015 UTC,"Maybe you're right I haven't tried it myself yet, just saw it this morning from here  http://ericasadun.com/2015/07/08/swift-new-stuff-in-xcode-7-beta-3/"
swift,3cntnx,driftme,1 point,Thu Jul 9 14:11:06 2015 UTC,"Will report back with confirmation one way or the other, installing the beta right now."
swift,3cntnx,Uncle-Jemima,1 point,Thu Jul 9 14:34:52 2015 UTC,"enum JSONKeys: String {     case name     case job     case age } let myRawString = JSONKeys.name.rawValue //this produces ""name"" let myString = JSONKeys.name  //this produces ""JSONKeys.name""   Tested a few different things. Less cool than I thought, but still more options than before. Previously, you would have to define the string literal to back your case."
swift,3cntnx,driftme,1 point,Thu Jul 9 16:36:05 2015 UTC,"Yeah I'd say it's be better to use a Struct with static constants. Say you were using Java or another language to parse some JSON, you'd typically do something similar and just define your JSON keys as static constants.   As for the Enums, those are good for when you have a class that can be a certain ""type"" of that class, so you handle each ""type's"" logic accordingly. Say you have a Cat class, and you need to handle whether your Cat is: .Indoor, .Outdoor, .Both. You'd create an Enum with these cases, create an instance variable that holds onto the ""catTypeEnum"" and set that variable accordingly so you can handle the set up for each case."
swift,3cpf9z,DenardRobinson,1 point,Thu Jul 9 18:38:46 2015 UTC,"I don't know what exactly are you trying to achieve but generally you should look at string interpolation for manipulating string content.  var meal = ""dinner""  var mealQuestion: String {     return ""What would you like for \(meal)?"" }  println(mealQuestion) // would print ""What would you like for dinner?""  meal = ""lunch""  println(mealQuestion) // would print ""What would you like for lunch?"""
swift,3cpf9z,xlogic87,2,Thu Jul 9 20:13:36 2015 UTC,"Yeah I know string interpolation, but there's no way to store these pre-constructed responses in some object and then fill the blank in once you know what should go in  the blank?"
swift,3cpf9z,zSprawl,2,Thu Jul 9 22:05:02 2015 UTC,"Create a class and load the strings from JSON or something similar. That way you can keep updating the JSON. Especially since it sounds like you want to make an app that will respond to your wife or whatever for you, so you will have to keep adding messages and changing said JSON file."
swift,3cpf9z,fluchtpunkt,1 point,Thu Jul 9 22:28:33 2015 UTC,thanks!
swift,3cpf0m,atm_vestibule,1 point,Thu Jul 9 18:36:40 2015 UTC,"Have you heard of a service called Parse? It will basically do everything you are looking for, and the best part is that it is free until you reach a pretty significant volume of alerts or database entries (I don't remember the exact amount). It has got a great set of APIs for most modern languages as well, including Swift.  https://parse.com/"
swift,3cpf0m,supportforalderan,1 point,Thu Jul 9 22:23:34 2015 UTC,"Yep, saved me a lot of time trying to create a backend."
swift,3cpf0m,boboguitar,1 point,Thu Jul 9 23:27:46 2015 UTC,Surely all you need is an API call that had the transaction ID (specific to the request) and hit an endpoint that says user declined telling it to go to the next person in the queue ?
swift,3cnh0i,xlogic87,7,Thu Jul 9 07:19:25 2015 UTC,"This is something that fills books. And there are actually books about that. For example Pitch Perfect by Erica Sadun & Steven Sande, which is specific for app developers. So you might want to check that book out.   Here is something that most developer forget: sending press releases and pitches to media outlets, bloggers and review sites.   Yes, this means you have to figure out how to write a good pitch, and you have to create a list of relevant media outlets.    It's still very likely that nobody covers your app. But still do it, you never know if your app is exactly what the journalist was looking for. If you receive feedback or engage with journalists, keep their names and some notes about them. Next time you know already who you should address and how you should address them. Build a relationship with journalists. They are some of the most important multipliers for your marketing efforts. Figure out what they write about, what they like about apps and what they don't like. Next time you send them a pitch, you can emphasize things they will like about your app. Make it personal without being creepy.     If you have an app that is relevant for a specific target audience of non-IT websites/magazines you should send them a press release as well. For example if you create an app for gardening, don't hesitate to send the press release to a Gardening Magazine. Even if the magazine has never covered apps before. Of course you have to adjust your pitch for the audience.   And regarding app review sites, once your app is in the store you will be contacted by many ""app reviewers"" that offer to review your app in exchange for money. You should ignore them, you won't get a return of investment from these services. They are basically scammers.    I also noticed that some apps are featured on the app store. Do you have to pay Apple to promote the app that way or is there some kind of algorithm that selects the apps?   They select the apps by hand, you don't have to pay them. If you want to be featured create great apps that use the latest Apple technologies. Last year, during the iOS8 release, they covered apps that had things like Today Extensions. This year they'll probably cover apps that implement the iPad multitasking stuff, or the search API. So make sure that your app is in the store with some iOS9 features on day 1 of the iOS9 release."
swift,3cnh0i,fluchtpunkt,1 point,Thu Jul 9 22:22:31 2015 UTC,Thanks for the great reply! I would never have thought of sending press releases to media outlets. Probably because I have a strong feeling that they will just ignore me but still worth the shot.
swift,3cnh0i,mmellinger66,2,Fri Jul 10 10:51:17 2015 UTC,"Just drop it in the appropriate reddit group: :-)  https://itunes.apple.com/us/app/h4-spanish-lite/id388918463?mt=8  To be honest, I've tried iAd with zero luck.  At one point, Facebook was helpful, but the last campaign I did didn't generate many downloads.  I've posted my link to reddit and Hacker News but I couldn't see difference in downloads.  I'm not sure how to find my particular audience.  The App Store is so crowded I just see fewer downloads over time, no matter what I do."
swift,3cnh0i,zSprawl,2,Thu Jul 9 18:25:42 2015 UTC,I've tried these things too with little luck. The only thing that worked for me is when Big Bang Theory used one of my apps in their episode. That worked! Besides that... yeah not so much.
swift,3cnh0i,mavdev,1 point,Fri Jul 10 00:34:36 2015 UTC,which app?
swift,3cnh0i,caizo_ryan,1 point,Fri Jul 10 01:06:26 2015 UTC,really? which app man!
swift,3cnh0i,zSprawl,1 point,Tue Jul 14 07:16:05 2015 UTC,"Whipped   It is nothing special but it's my most popular app, lol."
swift,3cnh0i,caizo_ryan,1 point,Tue Jul 14 17:23:57 2015 UTC,Woah man! Did you contact them or something or it happened without your knowing?
swift,3cnh0i,zSprawl,1 point,Tue Jul 14 19:14:11 2015 UTC,"Not sure if they used my app or the one other whip sound app that was on the store at the time, or even another from another platform. If you watch the episode, they are careful not to mention the app name or show it.  All the same, I'm honored and pleased my toy app might have been on the show. Not like it was meant to make any money or anything. I was just trying to mess with the MediaPlayer libraries..."
swift,3cnh0i,mmellinger66,1 point,Tue Jul 14 21:35:36 2015 UTC,"Thanks for the reply although not very encouraging :) In your case, when did you get the most downloads? Was it just after release or maybe the download count kept growing with time?  The App Store is super crowded that is why I am trying to think of a way to efficiently promote my app if possible. This is my first app I don't know what to expect at all. I put significant effort into building the app and I would like people to use it especially since I think it is useful :) I wonder how many downloads can an unknown developer of an unknown app expect over the course of the life of the app on App Store..."
swift,3cnh0i,mmellinger66,2,Thu Jul 9 18:52:13 2015 UTC,"I get more downloads in Europe and Asia.  It might be because there's less competition.  Don't overlook localizing your app.  Apple has a store in Turkey, for example.   They are also making a big push in China."
swift,3cmxwu,questdark,1 point,Thu Jul 9 03:53:23 2015 UTC,NSURLConnection is deprecated. Also I believe I remember hearing that NSURLSession uses a separate process to do the actual networking.
swift,3cmxwu,_IPA_,3,Thu Jul 9 04:01:46 2015 UTC,"NSURLConnection is not officially deprecated by Apple.  NSURLSession is, for most use cases, a superset of NSURLConnection's functionality, so it is widely assumed that one day it will replace NSURLConnection.   There are still, however, a few edge cases (eg, synchronous requests) that NSURLSession can't handle (yet?) so I would expect NSURLConnection to stick around awhile, even if these uses are limited.  Generally coders should default to using NSURLSession."
swift,3cmxwu,klngarthur,2,Thu Jul 9 17:32:04 2015 UTC,"Actually, /u/_IPA is right.  I was at the NSURLSession session at WWDC this year, and as of iOS 9 NSURLConnection is deprecated.  They don't have any plans to remove it at this point, but it is not recommended to use in new code."
swift,3cmxwu,wswatson,2,Thu Jul 9 23:57:53 2015 UTC,"It's not mentioned as deprecated in the documentation or the IOS9 release notes.  It does appear as though the important methods needed to use it are actually deprecated, though.  Strange that Apple wouldn't announce the deprecations with the other changes."
swift,3cmxwu,klngarthur,2,Fri Jul 10 00:14:41 2015 UTC,"OK I had a second look, and the 10.11 docs mention it as being deprecated: https://developer.apple.com/library/prerelease/mac/documentation/Cocoa/Reference/Foundation/Classes/NSURLConnection_Class/index.html  but actually not all of the methods listed are marked as deprecated. Either way, it seems clear to me that Apple is wanting devs to switch to NSURLSession if they can."
swift,3cmxwu,_IPA_,2,Mon Jul 13 14:26:51 2015 UTC,"Agreed that they want developers to switch, but those docs are the same as the iOS docs.  This is what it looks like when they completely deprecate a class.  They make it very obvious that a class is deprecated by displaying a message at the top and putting the deprecation in the availability section.  As I said before, It's odd that they deprecated the important methods but left the class as non-deprecated.  Perhaps there are some private methods in there that NSURLSession or some other frameworks depends on that they didn't want or have the time to migrate yet."
swift,3cmxwu,klngarthur,1 point,Mon Jul 13 17:25:25 2015 UTC,So I should abide by NSURLSession?
swift,3cmxwu,_IPA_,1 point,Thu Jul 9 04:06:39 2015 UTC,If it's supported by the OS versions you need to support.
swift,3cmxwu,_IPA_,-1,Thu Jul 9 04:10:48 2015 UTC,"I believe this is another big difference, stated on Apple's website,   [NSURLSession] gives your app the ability to perform background downloads when your app is not running or, in iOS, while your app is suspended."
swift,3cllo7,twostraws,1 point,Wed Jul 8 21:25:18 2015 UTC,Release notes.
swift,3cllo7,jbehrens94,1 point,Wed Jul 8 21:25:48 2015 UTC,Anyone experiencing Autolayout errors after upgrading? My b2 project has one inconsistent view after upgrading to b3.
swift,3cllo7,cheifshiggum,1 point,Wed Jul 8 21:32:34 2015 UTC,Anyone have any idea on how to fix my incremental compilation? I can't use Whole Module Optimization cause I get an 'abort flag 6'. The smallest change is triggering a complete recompile and it's driving me mad. Don't know if there's any other settings that could affect this.
swift,3cllo7,zSprawl,0,Wed Jul 8 22:41:52 2015 UTC,I had to go back to Xcode 6 because I needed to fix current bugs in current apps. :p I wish they didn't lock you out of using both side by side.
swift,3cllo7,zSprawl,2,Wed Jul 8 21:51:25 2015 UTC,? You can have 6.4 and 7.0 beta installed side by side just fine.
swift,3cllo7,sveinhal,1 point,Wed Jul 8 21:57:42 2015 UTC,"When I do, the simulator gets seriously jacked and confused. I end up having like 10 references to each simulator in both versions of Xcode, and often have to boot up the beta so my phone can be seen in the normal version. I also get tons of linking errors in the current version that crash out Xcode completely when the beta is also installed.  I've tried reinstalling the entire thing from fresh too, so finally just loaded Yosemite and Xcode 6.4 so I can keep learning Swift."
swift,3cllo7,zSprawl,0,Wed Jul 8 22:00:00 2015 UTC,You must be doing something wrong.
swift,3cllo7,jbehrens94,1 point,Thu Jul 9 17:27:20 2015 UTC,lol thanks
swift,3cllo7,zSprawl,1 point,Thu Jul 9 20:28:42 2015 UTC,Not when he is on OS 10.11
swift,3cllo7,FollowTheBlind,1 point,Wed Jul 8 22:00:18 2015 UTC,"Nah I did upgrade to El Capitan, of course. It was just so annoyingly buggy, I went back."
swift,3cllo7,zSprawl,2,Wed Jul 8 22:03:28 2015 UTC,Why would you ever do that on your primary machine that you use for day to day development
swift,3ckwl2,LL_Cool_Bean,31,Wed Jul 8 18:32:38 2015 UTC,"Swift is a safety-oriented language, making it very difficult to shoot yourself in the foot. To fill this deficit, Apple released the world's first standalone foot-shooting app: Xcode."
swift,3ckwl2,foBrowsing,1 point,Wed Jul 8 18:42:25 2015 UTC,"Xcode is like the Gunslinger in TF2. No mater what the conversation is about, someone will figure out a way to wedge in a complaint about it 😆  ""Oh man, I got caught in the rain on my walk today.  I should complain about Xcode somehow..."""
swift,3ckwl2,CQH,20,Wed Jul 8 18:47:57 2015 UTC,Step 1. Implicitly unwrap your foot.
swift,3ckwl2,dotmax,9,Wed Jul 8 19:20:38 2015 UTC,"Oh god, your foot wasn't there!"
swift,3ckwl2,CatsAkimbo,1 point,Wed Jul 8 19:23:57 2015 UTC,"Error code: x04048482828444  ""Wtf? What does that shit even mean?"""
swift,3ckwl2,boboguitar,6,Thu Jul 9 23:29:24 2015 UTC,You attempt to shoot yourself in the foot but upon implicitly unwrapping your foot you find it never existed and crash.
swift,3ckwl2,meridious3,5,Wed Jul 8 20:26:34 2015 UTC,"if let actualFoot = foot {   if let actaulBullet = bullet {     if let actualGun = gun {          self.shootFoot() } }else{  return nil }    Not only have you created a pyramid of doom shooting yourself in the foot, you need a more functional approach to do so."
swift,3ckwl2,FutureIsMine,2,Wed Jul 8 19:57:55 2015 UTC,"wait but after it finds the foot, and then fails to find the gun nothing is returned..."
swift,3ckwl2,Hipst3rKiwi,3,Wed Jul 8 21:55:43 2015 UTC,You see the problem with the Pyramid of doom? You can't even shoot yourself in the foot with it.
swift,3ckwl2,FutureIsMine,3,Wed Jul 8 22:48:44 2015 UTC,"You try to shoot yourself in the foot with the ultra-modern Swift gun, but you discover the gun has no trigger.  Instead, it's designed to shoot automatically only when pointed safely at its intended target, with any type of bullet.  Occasionally it explodes in your hand and takes off your arm."
swift,3ckwl2,buffering,3,Wed Jul 8 19:47:18 2015 UTC,👉💥👣
swift,3ckwl2,slow_churn,5,Thu Jul 9 16:11:44 2015 UTC,You shoot yourself in AnyObject as! Foot.   Xcode crashes. Expected penis.
swift,3ckwl2,zSprawl,2,Wed Jul 8 21:32:42 2015 UTC,Fatal error. Unexpectedly found blank when shooting the gun.
swift,3ckwl2,omfgtim_,2,Wed Jul 8 20:05:56 2015 UTC,"While writing the code to shoot yourself in the foot, Xcode crashes. Your foot is lost in a corrupted project."
swift,3ckwl2,inscrutablemike,2,Wed Jul 8 20:47:13 2015 UTC,The long con (warning: requires a time machine)   start using Swift in a real project after WWDC 2014 work on features updates the months that follow WWDC 2015 comes. You now have to figure out when it is the best time to convert thousands of lines of code to Swift 2.0 so you can work on iOS9 features. If you've done the conversion you realistically cannot release before October.    /rant
swift,3ckwl2,fluchtpunkt,1 point,Wed Jul 8 23:26:09 2015 UTC,"You aim at your foot, but the compiler crashes and you can't shoot at all."
swift,3ckwl2,fclout,1 point,Wed Jul 8 21:07:48 2015 UTC,You schedule yourself to shoot yourself in the foot but that task is unexpectly completed later by someone else. At least you'd have closure on the situation.
swift,3cly7c,atm_vestibule,1 point,Wed Jul 8 23:01:29 2015 UTC,"So, it sounds like you know how to catch the notification, correct?  If you are asking about the user experience, it depends on what the next (desired) action is by the user.   What about some type of banner in your app's look and feel?"
swift,3cly7c,chrizbo,1 point,Thu Jul 9 01:45:59 2015 UTC,"Yeah so on a programming standpoint what do I need to do to tell the view controller, or some sort of object on the storyboard, that I got a notification?"
swift,3cly7c,chrizbo,1 point,Thu Jul 9 14:31:47 2015 UTC,Here is a Stackoverflow answer that shows how you can show a notification based on this:  http://stackoverflow.com/questions/7965417/ios-push-notification-alert-is-not-shown-when-the-app-is-running/7965961#7965961  You could always use a platform like AppBoy or any other open source alerting UX to do it yourself inline.   You just need to catch the notification and then display the UX you want...
swift,3ckoug,darkhelmet41290,2,Wed Jul 8 17:40:23 2015 UTC,"You have to fully initialize the UICollectionViewCell subclass object that you return from your collectionview:cellForItemAtIndexPath: method, which is part of the UICollectionViewDataSource protocol.  That's how the data gets into the collection view's cells. It's the same pattern as the TableView."
swift,3ckoug,inscrutablemike,1 point,Wed Jul 8 20:17:49 2015 UTC,"Ok, thanks!"
swift,3cl84p,AnderZ_,3,Wed Jul 8 19:51:32 2015 UTC,"You could take a look at NSTimer, it should solve your problem."
swift,3cl84p,Dierdr4,3,Wed Jul 8 21:33:53 2015 UTC,"I like to use the following function:  func delay(delay: Double, closure:()->()) {     dispatch_after(         dispatch_time(             DISPATCH_TIME_NOW,             Int64(delay * Double(NSEC_PER_SEC))         ),         dispatch_get_main_queue(), closure) }   Then you can just call it anywhere with a simple:  delay(0.5) {     // do shit  }"
swift,3cl84p,zSprawl,1 point,Wed Jul 8 21:54:07 2015 UTC,Found this on SO and it works wonderfully
swift,3cl84p,willtoja,2,Thu Jul 9 23:52:32 2015 UTC,"Why not create a for loop that instead of going through lottoLabels it also iterates through the indices then do a dispatch_after for the label with a delay based on the index?  dispatch_async(dispatch_get_global_queue(QOS_CLASS_USER_INITIATED, 0)){      for (index, label) in enumerate (self.lottoLabels) {         println(self.lottoNumbers)         var lotto = String(self.lottoNumbers.removeLast())         self.lottoNumbers.shuffle()          let timeDelay = time_dispatch(TIME_DISPATCH_NOW, Int64(Double(index) * Double(NSEC_PER_SEC)))         dispatch_after(timeDelay, dispatch_get_main_queue(), { () -> Void in                 label.text! = lotto         }     } }   I might be wrong here but maybe you could give it a shot and let me know if it works?"
swift,3cjs7u,xStory_Timex,3,Wed Jul 8 13:36:11 2015 UTC,Create an instance variable to hold the view for you
swift,3cjs7u,petaren,4,Wed Jul 8 14:25:20 2015 UTC,There's a really easy way to access views elsewhere without making new variables. Just tag the view:  view1.tag = 1 //the tag is an integer   Then in your other function:  let theViewToAccess = view.viewWithTag(1) as? UIView //or whatever type theViewToAccess!.backgroundColor = UIColor.redColor() //now you can modify it
swift,3cjs7u,driftme,1 point,Wed Jul 8 14:43:35 2015 UTC,tagging worked like a charm. thank you
swift,3cjs7u,vinnydakid,1 point,Wed Jul 8 17:18:20 2015 UTC,"If I'm creating a subview from a XIB with it's own .swift file populating it, how can I change a button or label from that subview? I tried using this method, but I can't access anything that I actually have in the XIB, even after connecting it to the matching .swift file."
swift,3cjs7u,yeskia,2,Wed Jul 8 20:56:51 2015 UTC,Wouldn't you go view.subviews.first?
swift,3ch98j,ajn123,3,Tue Jul 7 22:07:49 2015 UTC,"You should check out exercism.io  There are a whole bunch of language tracks, including Swift. You do the exercise, then submit it back to the site and other users offer you feedback."
swift,3ch98j,Hawk_Irontusk,2,Tue Jul 7 23:51:34 2015 UTC,Roomguru Gulps
swift,3ch98j,Develop3r,3,Wed Jul 8 09:09:05 2015 UTC,"Eidolon is the full kiosk app made by Artsy. It is a very good representation of what great Swift code looks like (and ReactiveCocoa), made by some of the best open source Cocoa developers. A few of them also happen to be core contributors to Cocoapods."
swift,3ch98j,runtimeintrospection,1 point,Wed Jul 8 02:08:31 2015 UTC,"Skilled.io is a curated showcase of apps made in Swift, get on the mailing list :)"
swift,3ch98j,bezalmighty,-1,Wed Jul 8 17:38:47 2015 UTC,"I use github search tools. On Github, look for a specific function like this:  functionName extension:.swift   This will return all swift results that contain functionName"
swift,3ch98j,Allezxandre,5,Tue Jul 7 23:21:44 2015 UTC,I think OP was looking for recommendations of apps that are considered well written.
swift,3chj1u,SlayterDev,2,Tue Jul 7 23:21:18 2015 UTC,Why is there a picture of a guy and girl as the thumbnail?
swift,3chj1u,seven_seven,4,Wed Jul 8 03:22:32 2015 UTC,"Reddit uses the Open Graph Protocol to choose the thumbnail.  In this case, it's the user's GitHub avatar."
swift,3chj1u,favorited,3,Wed Jul 8 03:35:12 2015 UTC,That would be my github profile pic
swift,3chj1u,FourMoreCups,4,Wed Jul 8 12:25:07 2015 UTC,"So for my Senior project in College, Ive decided to develop a programming language using Swift (also Objective-C++ and LLVM) called DeafShark. I've gotten a bit of a jump start on it and can already write some simple programs and compile them into a binary format.  The syntax is similar to Swift itself but I'm trying to give it my own spin.  Here's what you can currently do:   variables functions loops (for/while) print to console   Quirks:   While loop is more like a do while (working on it) Can't set a string to a variable yet (put can pass them to functions)   Planned features:   Classes/Structs Standard Library other stuff...   What I ask from the community is some suggestions and criticisms (aside from the obligatory ""Why make a new programming language?""). Grab the source and break it. Post issues on my github so that I can fix it and extend the language.  Thanks for checking it out!"
swift,3chtar,TortugaChris,1 point,Wed Jul 8 00:43:49 2015 UTC,Are you loading the images manually with a file name or using the xcassets catalog?
swift,3chtar,Ceribis,1 point,Wed Jul 8 01:36:16 2015 UTC,"I'm adding them in Images.xcassets. Interestingly, I kept seeing just grey on the simulator but am about to go out to dinner with my grandma so I JUST ran it on my phone and the image is showing fine. I ran it in the simulator again and the image isn't showing on there, so I think it may possibly be a simulator error."
swift,3chtar,Ceribis,1 point,Wed Jul 8 01:41:22 2015 UTC,Sounds like a bug in Xcode 7 then. Submit a bug report and give them your project as stripped down as possible so Apple can see the issue.
swift,3cfpzj,Ruht_Roh,7,Tue Jul 7 15:43:00 2015 UTC,"I dunno if this is what you're looking for but you might try Hacking with Swift. Lots of projects you can make.  A Stanford professor also has slides in a public Google drive folder. There's also videos of the lectures on youtube (be aware that they're using an older version of Swift). You can try to do the ""homework"" posted on the slides and introduced in the lectures as projects."
swift,3cfpzj,0_0mg,1 point,Tue Jul 7 17:21:34 2015 UTC,"Thank you for posting this. I was aware of the YouTube video series, but I had not seen the slides and homework assignments were made available as well."
swift,3cfpzj,ZT01ZG,1 point,Tue Jul 7 17:38:07 2015 UTC,"Alright this is actually really helpful, Thanks a ton for the response :)"
swift,3cfpzj,danwatney,1 point,Tue Jul 7 17:47:44 2015 UTC,It's actually the iTunes U course mentioned below.
swift,3cfpzj,mosn,1 point,Tue Jul 7 20:54:22 2015 UTC,"You can also download the whole course including video,slides and home work  from iTunes U. https://itunes.apple.com/en/course/developing-ios-8-apps-swift/id961180099  It's the same, Just bit easier to navigate thought"
swift,3cfpzj,jtbrown,3,Tue Jul 7 22:30:09 2015 UTC,Lots of people like the Stanford course on iTunes U - it's super popular and has excellent reviews. I'm not sure whether they take you through projects or not.  I wrote a 5-Part Guide to Swift that takes you through creating a project - a REST client that talks to a backend JSON API.
swift,3cfpzj,niutech,3,Tue Jul 7 18:24:22 2015 UTC,"A good start is the Swift Resorce Center, in partcular its YouTube channel with over 250 Swift video lessons and guides."
swift,3cfpzj,lunarchaos42,2,Tue Jul 7 23:39:11 2015 UTC,"Treehouse Training has veen very helpful with Objective-C so I would assume their Swift course is also very informative. Also, iTunes Standford Course"
swift,3cfpzj,dotcomputer,2,Tue Jul 7 18:18:48 2015 UTC,"You need to look into youtube and google for more tutorials online and .PDF versions of books. Don't rely on one source for it all as more will be able to explain code in different ways.   I've had the best luck with youtube and following along with a tutorial. Plus with video you have to type it out in your own xcode environment, and you can make tons of comments, and follow along.   The only downside is that you may be on different version, and it completely sucks to follow everything down to the Tee for 30 minutes, only to realize they are on a different version, or there was a splice int eh video and he didn't explain something in detail, or to have to stop the video every minute if the guy goes too fast. Having to debug 5 items sucks after following along. So keep it simple. I recommend passing date in one project. Then the next to do scroll wheels. Then another for tables and multiple viewcontrollers. But overall if you have a good goal, within reach, you'll be fine. But you have to keep chunking away at it."
swift,3cfpzj,itrex,2,Tue Jul 7 20:30:00 2015 UTC,Bitfountain has a great course for beginners: http://bitfountain.io/courses/complete-ios8
swift,3cfpzj,mosn,2,Tue Jul 7 21:06:34 2015 UTC,"I don't recommend Stanford course or hackingwithswift for the start. It quickly gets very complicated and some advanced topics will be discussed earlier in the course, However I absolutely recommend hackingwithswift as it provide excellent explanation of what happens behind the code.   For start I'd recommend waiting Teamthreehouse Amit Swift Basic course. It is absolutely the best way to understand basics of swift and later on they will walk you through building your first swift app. Plus you have one month free trial.   Also Lynda.com Simon Allardice has  some absolutely fantastic basic guides on swift. It is only for paid subscription though.   I find bitfountain.io very practical but lacking discipline a bit.   And Hey. Happy coding, It'll change your life :)"
swift,3cfpzj,Albatraozz,1 point,Tue Jul 7 22:38:05 2015 UTC,"Simon on Lynda.com does a great job of explaining what's going on. However I felt the course was a bit to short and left me wanting more, which is a good thing but I wish he could send you off in a more clear direction."
swift,3cfpzj,mosn,1 point,Wed Jul 8 08:28:04 2015 UTC,Agreed and he explains stuff super fast. It's sometime a bit hard to keep up for non natives.  I also found myself going to back swift fundamentals and listen carefully to fill the gaps.  I hope he comes up with more course in the future
swift,3cgx05,rockcem,5,Tue Jul 7 20:40:22 2015 UTC,"$179! Listen, please at least check out Hacking with Swift for 10 minutes. If you hate it, fine, go ahead and pay your money for an alternative that might suit you better. Fortunately, it's completely free so you lose nothing :)  (Note: I wrote Hacking with Swift. I think it's great, but obviously I'm biased.)"
swift,3cgx05,twostraws,1 point,Wed Jul 8 07:38:55 2015 UTC,"Even though I did pay the $179 already it seems like what you have is great so I'm definitely gonna have that on the side when I need help, thank you!"
swift,3cgx05,zSprawl,1 point,Wed Jul 8 14:48:17 2015 UTC,"Hacking with Swift is pretty nice, especially the price. The website is very text heavy, so if you are a heavy visual learner, you may want to try some of the other video solutions. Twostraws does have some outdated videos, which honestly are still very usable. There are differences, but you learn what they are very quickly, and troubleshooting is par for the course anyhow. It really forces you to really learn what your doing. Plus, he is clearly here on redit if you need help. :)"
swift,3cgx05,k337,1 point,Wed Jul 8 21:57:32 2015 UTC,"Yeah, thats one of the reasons why I went with Code With Chris, I'm a very visual learner.. but I'm still definitely gonna look at Hacking with Swift too."
swift,3cgx05,Goodbunny,4,Wed Jul 8 23:45:18 2015 UTC,Ray Weiderlich's site pretty much taught me how to be an iOS Developer.
swift,3cgx05,PannekoekDoos,1 point,Tue Jul 7 22:24:41 2015 UTC,"Agreed. I struggled a bit until I discovered his tutorials. It wasn't so much ObjC, as plain C was my first language, but with help understanding the APIs and how they fit together."
swift,3cgx05,Octavian-,5,Tue Jul 7 23:05:32 2015 UTC,iTunes U is free and will get you started.
swift,3cgx05,dcoupl,1 point,Tue Jul 7 20:58:59 2015 UTC,"Question about that: I looked up his series on iTunes U and he indicated that in order to get through his material you should already have a background in object oriented programming. I don't have that, so where should I start?"
swift,3cgx05,Adamw88,1 point,Wed Jul 8 21:37:57 2015 UTC,I've been enjoying http://learncodethehardway.org for C and Python. If they offer the language(s) or skill(s) you are interested I would def recommend it!
swift,3cgx05,twostraws,1 point,Wed Jul 8 05:36:00 2015 UTC,"So I can tell you that I am learning an insane amount about the iOS SDK, best practices, Swift etc. using just these 4 resources:   Ray Wenderlich's site and his iOS Apprentice Series. I'm about to start the second tutorial and it is over 250 pages, so there is a ton of content there and it's broken down very well and very easy to follow/understand. The Stanford class taught by Paul on iTunesU is so far fantastic! I am loving the pace and Paul is a great professor who has been teaching iOS and app development for years now. Seriously, it's free and easily one of the highest rated learning tools out there. The free Swift book by Apple in iBooks is a great read. If you read through that a little bit and then watch the Stanford class, you'll find yourself knowing what Paul is setting the students up for before he even does it in code (i.e. He'll ask the students 'Why is this line of code here throwing an error do you think?' -- You'll already know why because you've read the book and know where the common mistake/concept is that he's trying to drive home). This subreddit. Seriously, this has got to be one of the most helpful subreddits I've seen in regards to actually assisting users. They are constantly posting useful links to tutorials, articles, demos etc. Utilize the community!!   I hope this helps, as I too am a budding iOS developer working on creating an app for a start up I'm in here in Houston."
swift,3cgx05,koalefant,1 point,Wed Jul 8 15:56:33 2015 UTC,"If you find any spare time (yes, I know that's probably not likely!), or want to try creating some projects, you might enjoy my free Hacking with Swift tutorial series. And I agree about this subreddit – it's supportive, encouraging and helpful all in one!"
swift,3cgx05,Adamw88,1 point,Wed Jul 8 17:47:07 2015 UTC,"Omg I never realised this courses were so expensive. I taught myself programming and the best learning tool is just making something. It took me about a year and I landed a really nice job after that.  Most of the things you can learn from free resources. Apple documentation I find at quit useful and wwdc vids too, plus they are free."
swift,3cgfb3,zomgz0mbie,2,Tue Jul 7 18:37:50 2015 UTC,Sounds like what you're looking for is Layer
swift,3cgfb3,nivals,1 point,Wed Jul 8 02:33:45 2015 UTC,Jabber
swift,3cgfb3,dGasim,2,Tue Jul 7 20:13:45 2015 UTC,"Don't use Jabber unless you want to waste your time. XMPP libraries are old, unsupported and usually have poor documentation."
swift,3cgfb3,danwatney,1 point,Tue Jul 7 20:44:02 2015 UTC,"That really depends though. Sometimes setting Ejsbber is just fast And easy.   Also I just remembered. OP, checkout thr Telegram ach ay API. It is open source and looks promising"
swift,3cfnwj,ergotayours,3,Tue Jul 7 15:27:42 2015 UTC,"The Apple Swift language docs discuss this:  https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html  ""Function parameters have both an external parameter name and a local parameter name."" ... ""By default, the first parameter omits its external name, and the second and subsequent parameters use their local name as their external name."" ... ""The use of external parameter names can allow a function to be called in an expressive, sentence-like manner, while still providing a function body that is readable and clear in intent.""  More detail at the link."
swift,3cfnwj,olentangy61,1 point,Tue Jul 7 15:44:01 2015 UTC,Thanks a million!
swift,3cfnwj,john_alan,1 point,Tue Jul 7 15:56:57 2015 UTC,This will be changing in swift 2.0
swift,3ch9f4,Albatraozz,2,Tue Jul 7 22:09:11 2015 UTC,"You can do what I did to practice. Make an app where -you can choose from different trips  -each trip contains multiple (more than 30, so you have to use meta-geofences) predefined points of interest  -each point of interest should have a custom map annotation -the PoI callout should be highly customized, not using the default options -the app needs to find a path between the points  -the app needs to notify the user when he reaches a point of interest   Took me quite some time but it helped me a lot."
swift,3cgrcv,Hipst3rKiwi,2,Tue Jul 7 20:00:58 2015 UTC,"I might be overthinking this...  // First I choose two different colors. // UIColor(red:0.176,  green:0.180,  blue:0.188, alpha:1) // UIColor(red:0,  green:0.604,  blue:0.992, alpha:1)   I calculate the RGB difference. Red - Red, Green - Green, blue - blue etc.  Take the difference and divide it by the screen width.  // This would get called from your scrollViewDidScroll. let screenWidth = view.frame.width  let redIncrement = (0.176/screenWidth) * scrollview.contentOffset.x let greenIncrement = (0.424/screenWidth) * scrollview.contentOffset.x let blueIncrement = (0.804/screenWidth) * scrollview.contentOffset.x   view.backgroundColor = UIColor(red: 0.176 - redIncrement, green: 0.180 + greenIncrement, blue: 0.188 + blueIncrement, alpha: 1)   // This is just a simple example. And would need to be adjusted for handling multiple screens but hopefully this helps. If it doesn't, I take no offense.  // Edited formatting"
swift,3cgrcv,He_Says,1 point,Tue Jul 7 23:16:27 2015 UTC,Thank you too much! this actually works perfectly (not that i ever doubted your programming skills) ! now to just figure out how to do it for various colors...
swift,3cezb8,claudiug1,10,Tue Jul 7 11:48:16 2015 UTC,"I wrote my own, so obviously I think it's rather good. It's also free, which certainly helps! Hacking with Swift – it has 35 free tutorials right now, all graded so you learn as you build real projects."
swift,3cezb8,twostraws,3,Tue Jul 7 12:35:16 2015 UTC,You the real MVP.
swift,3cezb8,MacCultist,2,Tue Jul 7 15:30:41 2015 UTC,Hacking with Swift looks seriously awesome. Nice work!
swift,3cezb8,jtbrown,1 point,Tue Jul 7 18:38:44 2015 UTC,"Thank you! I come by here every day, so if you have questions you can post here or on /r/hackingwithswift and I'll do my best to help."
swift,3cezb8,twostraws,1 point,Tue Jul 7 19:08:18 2015 UTC,"Site says ""All projects were written from scratch using the latest version of Swift"", so 2.0?"
swift,3cezb8,spinozasrobot,1 point,Wed Jul 8 00:56:55 2015 UTC,Never mind... I just saw the answer in the FAQ!
swift,3cezb8,spinozasrobot,1 point,Wed Jul 8 00:58:20 2015 UTC,"If you're really desperate to use Swift 2, tutorials 31 to 35 are all written in Swift 2 because they target iOS 9. Have fun!"
swift,3cezb8,twostraws,2,Wed Jul 8 07:40:29 2015 UTC,iOS Apprentice
swift,3cezb8,ArvoHeikki,2,Tue Jul 7 12:07:14 2015 UTC,"iOS 8 SDK Development  (pragprog)  It doesn't harp on the language, but gives good coverage of the language as you use it.  Covers a lot of tooling and design issues as well."
swift,3cezb8,frodokun,1 point,Tue Jul 7 14:20:20 2015 UTC,"Maybe this book can help you, I used the previous version to get going with iOS 7 and obj-c  https://www.createspace.com/5177731"
swift,3cezb8,dwltz,1 point,Tue Jul 7 12:03:29 2015 UTC,No.  Far too many half assed books and tutorials are out in the wild from guys who don't know what the fuck they're doing.
swift,3cee79,Hipst3rKiwi,1 point,Tue Jul 7 06:56:37 2015 UTC,"This is a great question. Hmmm... so your code definitely has action methods to buttons, constraints, etc. I don't think those are convertible to a storyboard.  I am glad you are thinking that Storyboarding is the way to go, whenever possible of course."
swift,3cee79,souhoh,1 point,Tue Jul 7 08:59:49 2015 UTC,"Ok, thanks! Although I was wondering if I could make a view in story board and then add it to another view as a subview via code"
swift,3cee79,7re,1 point,Tue Jul 7 13:52:58 2015 UTC,I don't think there's a way to convert code into an equivalent storyboard.  Storyboards can be useful for some things but not good for others. Getting your coding down first isn't a bad way to learn.
swift,3cee79,jimejim,1 point,Tue Jul 7 10:11:46 2015 UTC,"Aww ok, but is it possible to add a storyboard view as a subview to something else?"
swift,3cee79,jimejim,2,Tue Jul 7 13:49:44 2015 UTC,"You can access storyboard view controllers in code, so I would start doing any new views in there and slowly migrate over. See:  http://stackoverflow.com/questions/9896406/how-can-i-load-storyboard-programmatically-from-class"
swift,3cee79,notquitedrdeath,1 point,Tue Jul 7 18:15:53 2015 UTC,Thank you!
swift,3cee79,iDeviceDeveloper,2,Tue Jul 7 18:50:03 2015 UTC,"Once you're a little more comfortable with the way it's done, I'd also check out this for turning storyboard identifiers into code:  https://github.com/krzyzanowskim/Natalie  It's going the opposite direction of what you want to do, but it gets rid of worrying about the strings all the time."
swift,3cee79,sooopd,1 point,Tue Jul 7 19:02:57 2015 UTC,"Probably because there's still a fair way to go before the Storyboard interface is the tool it should be. Also because understanding how to programmatically design interfaces is a good skill to have.  In short, no, you're going to have to convert it the hard way."
swift,3ceklj,vinags,6,Tue Jul 7 08:23:44 2015 UTC,Structs have value semantics. Change a value inside a struct results in reassigning the whole struct.  struct MyStruct { var x : Int } var m = MyStruct(x: 23)    // this m.x = 42 // is equivalent to creating a whole new instance: m = MyStruct(x: 42)    // if the variable is immutable it is not possible: let n = MyStruct(x:10) n.x = 20    If your struct has a method that changes the structs internal values you are required to mark this method as such:    struct MyStruct { var x : Int func doesNotChange() {  /* do nothing*/ } mutating func changeX() { x = 5 } }    let o = MyStruct(x: 18) o.doesNotChange() // this works o.changeX() // Now the compiler will complain here because o is immutable but it knows your method would modify o
swift,3ceklj,laszlokorte,2,Tue Jul 7 08:39:51 2015 UTC,"Thanks. Very clear explanation. Much appreciated.  On reading about the differences of classes and structs, a lot was made of copying and referencing, but I do not remember reading about not being able to change a value from within the struct. Maybe 'value types' was used, but the implications of this was not mentioned.  Thanks again."
swift,3ceklj,koalefant,3,Tue Jul 7 09:37:58 2015 UTC,"On a phone so can't type lots, put 'mutating' in front of that func for the struct"
swift,3ceklj,xlogic87,2,Tue Jul 7 08:34:11 2015 UTC,That works. Thanks. And it gave me another key word to look up for further understanding.
swift,3cgkaq,tkaboris,2,Tue Jul 7 19:12:05 2015 UTC,"There are a bajillion in the app store.  Perhaps try to reproduce one you think works well for you?  Start with the requirements, not the tool you'd like to use.  That should point you in the right direction for your architecture!"
swift,3cgkaq,spinozasrobot,1 point,Wed Jul 8 01:20:43 2015 UTC,It entirely depends on what you want the Bible app to do. Building an app that essentially lets people read the Bible start to finish would have a completely different design than an app that would allow someone to enter a verse number and read the specific verse.  What's the actual purpose of the app?
swift,3cgkaq,TheMiamiWhale,1 point,Tue Jul 7 20:33:28 2015 UTC,"Actually i wanted an app that lets me read Greek source text on top pane and allows me to custom translate verse on the bottom pane. So I read top and bottom panes .Save it and edit my translations. Yes it's kind of different then other ones, and was thinking to start with the basic bible read dev and then do these specific requirements"
swift,3cgkaq,TheMiamiWhale,1 point,Tue Jul 7 20:50:09 2015 UTC,"Just based on the info you've given in this post, this is the structure I'd use:   A table view that shows all the different books, selecting a book takes you to a table view of all the chapters, which takes you to a table view of the next smallest sub-division, etc. (it's been a while since I looked at a bible so I'm not 100% on the overall structure but you get the idea) Once you get to the table view that shows all the given translatable pieces of scripture, selecting the one you want to translate takes you to a screen with a text view on top and a text view on bottom. The view on top is read-only and the user input goes on the one on the bottom.   Another thing you could try, if you are looking for a challenge, is make the book table view have sections that expand/contract which represent the chapters. This would offer a cool effect for the UI and also save the user having to dial into an extra view controller. It's not that hard to code up once you are comfortable with table view controllers.  Just my $0.02..."
swift,3cda2z,EraOfInvention,14,Tue Jul 7 00:38:39 2015 UTC,"You see that bang (!) you've got after the toInt() call?  There's your crash.  toInt() does not round its input.  If anything, it does the opposite and returns nil when it sees any non-integral value.  Then, when you go to unwrap it with the bang, you attempt to force a value that doesn't exist, ergo Exception!  What you want here is to use an if-let statement to safely unwrap the value toInt() may or may not give you, which looks a bit like this:  if let val = age.text!.toInt() where age.text != nil {     result.text = ""Your cat is \(val * 7)!"" } else {         result.text = ""Please input a whole number!"" }   This way, your error branch will be taken if age.text is nil and if toInt() fails.  EDIT: The replies to this each spell out more terse ways of expressing this if you're so inclined [you should be able to remove the where clause and bang entirely].  But I find expressing your invariants makes you honor then a bit more than not :)"
swift,3cda2z,CodaFi,3,Tue Jul 7 00:54:07 2015 UTC,Tomorrow I'm going to dive into using this in xcode until I really understand why and how it works. But right now I'm going to go ahead and say thanks!
swift,3cda2z,SheepWheatOre,2,Tue Jul 7 05:53:16 2015 UTC,"Even simpler with Optional Chaining:  if let val = age.text?.toInt() {      result.text = ""Your cat is \(val * 7)!"" } else {     result.text = ""Please input a whole number!"" }   BTW, In Swift 2, String.toInt() is replaced with Int(String)."
swift,3cda2z,littleodie914,1 point,Tue Jul 7 12:04:55 2015 UTC,"Note that text from a UITextField should return an implicitly unwrapped value, so you shouldn't need the optional chain. You can just use:  if let val = age.text.toInt() {"
swift,3cda2z,jtbrown,1 point,Tue Jul 7 12:53:11 2015 UTC,I don't think this is true. The docs for UITextField show this:  var text: String?   So I think you do need to unwrap.
swift,3cda2z,littleodie914,1 point,Tue Jul 7 18:44:44 2015 UTC,"I see an optional in the docs as well, but that doesn't seem to be the case in Xcode 6.4:  http://imgur.com/sfMQeWo"
swift,3cda2z,Arkanta,2,Tue Jul 7 18:49:59 2015 UTC,"if let val = age.text!.toInt() where age.text != nil {   You should avoid ! like plague.  A much more readable way, is to use optional chaining. It makes swift behave with nil values pretty much like Objective C always did (except that the return value is an optional)  Here's how it behaves:  (sorry for the little mistake in the middle)  https://c.arnaud.moe/U9bSL0oW.png"
swift,3cda2z,blackratdog,1 point,Tue Jul 7 06:45:24 2015 UTC,"You say ""if the text in the text field is not equal to nil (aka, a whole number) "". However, the textfield's text not being nil doesn't mean it's a whole number. It is also not nil if it contains any text at all. It may also not be nil even if it is empty because an empty string is not the same as nil. Not sure how it works though. So basically every case goes through to the first option and nothing reaches the else part.  Then you try to force the conversion to Int which obviously crashes because you can't convert ""dog"" (for example) to an integer. I'm a Swift newbie myself but I hope this helps."
swift,3ce35m,SouthernPotato,1 point,Tue Jul 7 04:52:57 2015 UTC,"Nope, don't have a clue"
swift,3cdvqz,patniemeyer,1 point,Tue Jul 7 03:42:11 2015 UTC,Tried looking with address sanitizer turned on?
swift,3cdvqz,nemesit,1 point,Tue Jul 7 08:27:02 2015 UTC,Interesting - I tried the XCode 7 address sanitizer and it did point to a location but given that it doesn't crash in debug or when compiled with 6.4 I am not sure there is much that I can do with the info...  It is crashing in a comparator and the stack shows two seemingly valid objects...  so I assume some kind of release bug in the compiler.  I'll keep experimenting.  Thanks.
swift,3cdvqz,cheifshiggum,1 point,Tue Jul 7 21:11:12 2015 UTC,I'm also curious about the compile speed benefits people are experiencing as whole module optimisation is supposed to parallelise the build progress better. What difference are people seeing? Like patneimeyer I'm unable to get it working due to compiler segfaults but I'm curious.
swift,3ccxst,Illusions_Micheal,1 point,Mon Jul 6 23:00:43 2015 UTC,I use SwiftMath if that's any help.
swift,3ccxst,twostraws,1 point,Tue Jul 7 09:07:29 2015 UTC,"Thank you! How would I incorporate this library in one of my projects. Sorry, I know this is really basic and all but I am an absolute beginner with swift"
swift,3ccxst,twostraws,1 point,Tue Jul 7 18:36:36 2015 UTC,"Read Installing Carthage and also the Adding Frameworks section, then follow the installation instructions."
swift,3ccxst,cruyff8,1 point,Tue Jul 7 19:07:27 2015 UTC,"Ok, so I created a cartifle and attempted to build it by running carthage update. I am getting a build failed error referencing no valid signing identities. Does this mean I can't use carthage because I don't have an apple developer account? Is there any way around this?"
swift,3ccxst,cruyff8,1 point,Wed Jul 8 02:39:24 2015 UTC,"You could make life easier by exposing, e.g., the polynomial root finder as a web service using webpy:  class Roots:     def GET():        eqn = web.input()['eqn']        result = newton(eqn, 0)        ret_ = {'result':  result}        ret = json.dumps(ret)        return ret   And query it by posting to this web service, *http://web.server/rootendpointmap?eqn=<equation-to-find-roots-for>"", which will return json. Process as you see fit and Bob's your uncle..."
swift,3ccxst,shiggie,1 point,Tue Jul 7 10:56:01 2015 UTC,I'm not sure I'm entirely sure what's going on here. It sounds like you use pythons polynomial root finder directly from the web? I'm fairly new to programming and this seems like it might be a little over my head. Could you explain more?
swift,3cdp5x,SwiftN00B,1 point,Tue Jul 7 02:44:40 2015 UTC,Apple Documentation
swift,3cddvj,jayman16,2,Tue Jul 7 01:10:50 2015 UTC,Can you be more specific then linking the entire tutorial?
swift,3cddvj,zSprawl,2,Tue Jul 7 04:02:14 2015 UTC,"There's not a lot here that is really helpful in working out what your problem is. One thing that jumps to my mind is that tutorial is using a lot of hardcoded numbers for locations and sizes, that means your elements will only be in the correct position for one screen resolution. All others will look wrong."
swift,3cddvj,notquitedrdeath,1 point,Tue Jul 7 04:13:13 2015 UTC,"Sorry for not being clear, while trying to put the grid over the background, it does not look the same as the example. It is not it the same spot"
swift,3cddvj,notquitedrdeath,1 point,Tue Jul 7 10:22:02 2015 UTC,"Perhaps a screenshot? It does sound like a problem with absolute positioning though, you'll want to look at ways to get the size of the screen and then base your grid position on that."
swift,3cd414,tehchriis,5,Mon Jul 6 23:50:03 2015 UTC,Depending on what exactly your doing and how your doing it of course but.....  When your user presses said button couldn't you add the entry to your collection (presumably an NSArray) at index 0 and then call reload data for the table?  That should add it to the top instead of the bottom.
swift,3cd414,Dilligaf_Bazinga,1 point,Tue Jul 7 00:10:12 2015 UTC,"This is the easiest way to do it.   A UITableView adds rows in the order they're in its data source. If you move things in that data source around then call tableView.reloadData(), it will move rows around to match the order of its data source."
swift,3cd414,7re,1 point,Tue Jul 7 02:45:36 2015 UTC,"Sorry for the late reply, I dind't get time to work this out. But I can't seem the solution to this. Rather than explaining what my code is like, I just followed this tutorial :  https://www.youtube.com/watch?v=cAQtOsfkD5A he uploaded his project to this site: https://github.com/TDAbboud/WeightLogger  it does indeed use an NSarray, but I feel as if this coredata thing works differently.  is this the code line you're talking about?  var results: NSArray = context!.executeFetchRequest(request, error: nil)!  Thanks"
swift,3cbbq0,questdark,5,Mon Jul 6 16:04:32 2015 UTC,"IMHO Parse is great, and it's a great tool if you don't have the resources (time and skill) to build a backend of your own. It's also great to kickstart your projects without worrying about backend and focusing in product and user experience.  Me and my team used it to prototype the first version of our app, but then moved to our own API before launch. The reasons were 2: the high cost of Parse when it scales, and the barriers to customization you'll surely face."
swift,3cbbq0,itrex,2,Mon Jul 6 16:19:14 2015 UTC,"To add to this, if you set up a proper MVC structured app, then it will be fairly trivial to swap out the backend later when needed and you won't have to dig through your entire codebase to make changes. Another tip with Parse is to not use generic PFObjects, but rather create your own models; it will save you time later. This also applies to logging frameworks, analytics, etc."
swift,3cbbq0,StolenKid,1 point,Tue Jul 7 02:33:24 2015 UTC,"Gotcha. Thanks for the comments. I think I have enough to make up my mind, and already building a custom backend, I guess I'll check out Parse next time!"
swift,3cbbq0,drgreenair,1 point,Tue Jul 7 00:56:00 2015 UTC,"I love using Parse from a development perspective.  It's pretty simple to use and takes a lot of time off development if you don't have a full team behind you.  However, I don't know that I would actually use Parse on a project that could grow fast.  The price is too high once you get to a certain point, and while I know that the stuff I""m working on won't reach that level, just the idea of a barrier there is enough for me to use my own backend API."
swift,3cbbq0,alt51,1 point,Mon Jul 6 20:55:48 2015 UTC,"If you want to do significant work using your backend(eg website, complex sql, etc), then parse is probably not the best solution as the only way to access your data would be via their rest API, which would have significant latency."
swift,3cbbq0,klngarthur,1 point,Mon Jul 6 21:12:56 2015 UTC,"Parse is great when you want something quick and pretty solid. You may even learn a few new things especially with cloud code. When your app starts growing you can expand inside parse (which gets pricey) or build your own service(s) in your language(s) of choice. Personally I love to code my own services and the control I get doing it. The downside is the time it takes to build, test, and deploy. If you can build and deploy a backend smoothly then do it.  Also: A promising alternative Parse is Apple's CloudKit web services."
swift,3cbbq0,angelcasado,1 point,Tue Jul 7 00:42:29 2015 UTC,"if the object relational queries are complex, I'm not sure if Parse would be a good fit."
swift,3cbbq0,eviltofu,1 point,Tue Jul 7 03:50:28 2015 UTC,http://rocketdb.io  I'm working on a dev tool for this exact problem
swift,3cbbq0,austingatlin,2,Mon Jul 6 17:04:42 2015 UTC,"It'd be foolish to build on a backend without knowing how much the service would charge, though. Even for a POC, I wouldn't want to be locked in then find that it costs some amount that doesn't align with my revenue expectations."
swift,3cbbq0,me_asplode,-3,Mon Jul 6 18:30:42 2015 UTC,"Very true. RocketDB will be Free to test out, and we will release pricing upon launch.  I'm quite confident RocketDB will be way cheaper than any competitors. If it wasn't, there would be no point in building it.  If you want to give it a try, i think it will be exactly what you are looking for. Thanks"
swift,3cbbq0,austingatlin,6,Mon Jul 6 18:42:14 2015 UTC,"But that's the point, though. It would be difficult to try it out without knowing if this is even within my reach. Will this service cost me $5 a month, or $100 a month? What are the limits of the available plans?    Pricing can also affect how (much) an app uses a service.  Simply being free during beta (or even during an initial trial period) is not enough to determine whether it's even worth considering.  Sadly, tight budgets and tight development timelines don't allow for a lot of experimentation and switching between backend services."
swift,3cbbq0,me_asplode,0,Mon Jul 6 18:49:54 2015 UTC,I hear ya.  It will be a few weeks before you'll be to use RocketDB Beta. I was just saying it might interest you.
swift,3cet3w,KNNMMDV,2,Tue Jul 7 10:26:54 2015 UTC,"you can just delete all the cathage stuff, but then you have to install the dependencies manually - https://github.com/Haneke/HanekeSwift  ... but why do you want to do that manually? carthage works fine"
swift,3cet3w,stoneburner,-1,Tue Jul 7 11:20:11 2015 UTC,Can you build a working one for me please? I cannot figure it out. Maybe I can look at yours and learn something.
swift,3cet3w,stoneburner,1 point,Tue Jul 7 11:30:02 2015 UTC,NO (sorry)
swift,3ccm6h,xStory_Timex,1 point,Mon Jul 6 21:33:46 2015 UTC,"I suspect that your image for filterButton is the wrong dimensions, or lacks the @2x/@3x in its name.   Also, you should use initWithImage if you're not going to use text."
swift,3ccm6h,sneeden,1 point,Tue Jul 7 05:18:52 2015 UTC,"Along these lines, try adjusting your assets file. Each image has 3 versions. Try moving them around, especially if you only have one version of an image."
swift,3cbvw9,Renkai,5,Mon Jul 6 18:31:53 2015 UTC,"Write a function that gets called when the user selects a table cell.  You can use tableView:didSelectRowAtIndexPath: https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewDelegate_Protocol/#//apple_ref/occ/intfm/UITableViewDelegate/tableView:didSelectRowAtIndexPath:  I would put all my code in a separate function called displayButton or whatever, and call that from the tableView function"
swift,3cbvw9,driftme,2,Mon Jul 6 21:13:31 2015 UTC,"This is the way to do it.  Caveat: if you're using a UITableViewController (which I assume you are based on your title) the button will be added to the UITable rather than a view above it, meaning it will scroll as if it is on the table (which it is). To get around this, either use a UIViewController as a UITableView delegate instead, add the button to some view above the table (like a navigation bar) or offset the button's frame whenever the table is scrolled."
swift,3cbaby,onthefence928,2,Mon Jul 6 15:53:43 2015 UTC,This might help you a bit. That UI looks a lot like the Passbook UI. It won't be 100% but this tutorial might give you some ideas how you could achieve it.   https://maniacdev.com/2014/05/a-uicollectionview-based-component-for-creating-stacked-card-layouts-like-passbook-and-reminders
swift,3cbaby,rubberball801,1 point,Mon Jul 6 17:47:38 2015 UTC,"That's really useful thanks,  any idea what to do with the category view stuff?"
swift,3cbaby,0_0mg,1 point,Mon Jul 6 17:52:53 2015 UTC,"For the ""paged controller"" you should probably take a look at UIPageViewController. I'm attempting to make something to that effect, sort of like the Instagram ""Activity"" tab (dual lists, swipe to navigate to each of them). This view controller helped."
swift,3cbaby,0_0mg,1 point,Tue Jul 7 00:12:59 2015 UTC,How do i get page view controller to  work with the category tabs instead?
swift,3cbmt8,austingatlin,12,Mon Jul 6 17:27:11 2015 UTC,"Saying it will be free during beta, but not listing the post beta prices does not encourage me to sign up at all. If I am going to be spending time and resources building a project or playing around with RocketDB, it is necessary to know if I would continue using it after the beta and the prices are important for that."
swift,3cbmt8,snagra,4,Mon Jul 6 19:36:52 2015 UTC,"How is RocketDB better than Parse?   You say you can write all of your code in Swift... Does that include your ""server side triggers"" on the backend? If not, that might be a misleading."
swift,3cbmt8,fqn,3,Mon Jul 6 20:09:42 2015 UTC,"Supports iOS, Android, and Javascript?  Given that non-iOS Swift is less than a month old, the statement is find, as long as your ""dream"" doesn't include server side triggers.  Anyway, no download, no documentation, 4 lines of ""example"" code, including }'s.  This is basically a spam harvester at the moment.  Maybe it'll be great, but as of now, there's nothing to announce."
swift,3cbmt8,shiggie,2,Mon Jul 6 21:24:13 2015 UTC,"Awesome question! There are tons of great backend services like Parse. RocketDB gives you everything they offer and more.  Here is where we differ... All of RocketDB is real-time unlike Parse, and our unique trigger system allows the developer to do anything they want on the server side if needed be in the client-side language they love.  Meaning you can handle any technical scenario you can think of that several backend services can't accommodate without having to still create your own unique infrastructure.  Since Apple is open sourcing Swift. Yes."
swift,3cbmt8,ANAL_FIST_RAPE,-2,Mon Jul 6 21:40:11 2015 UTC,"apple also open sourced FaceTime.  oh, wait..."
swift,3cbmt8,naughty_ottsel,1 point,Tue Jul 7 01:11:19 2015 UTC,"I have been looking for a backend solution which will allow me to prevent certain fields of a class being sent to a client based on another field.  Parse gave me the option to use cloud triggers, but that couldn't stop someone using the parse api to query the class directly. Would this solution offer me that?"
swift,3cbte4,aguywithagoat,2,Mon Jul 6 18:14:12 2015 UTC,When Xcode 7 comes with 10.11 in Autumn.
swift,3cbte4,ak1ngs,1 point,Mon Jul 6 19:38:18 2015 UTC,Thanks. They didn't say anything more specific? Just Fall 2015?
swift,3cbte4,ak1ngs,2,Mon Jul 6 20:02:49 2015 UTC,They are never less vague than that.
swift,3cbte4,notquitedrdeath,1 point,Mon Jul 6 21:11:03 2015 UTC,"Treat em mean, keep em keen?"
swift,3cawbo,mad_poet_navarth,2,Mon Jul 6 14:00:04 2015 UTC,"Xcode 6.1.1 means you're using Swift 1.1. The swift version is tied to your Xcode version, so if you want to use the latest features you need to be on the latest Xcode. 6.3 and 6.4 both use 1.2, and 7 uses 2.0."
swift,3cawbo,mistermagicman,2,Mon Jul 6 14:18:58 2015 UTC,You're using v1.1.
swift,3cawbo,ak1ngs,1 point,Mon Jul 6 14:25:40 2015 UTC,"I'm not sure how to get it programatically, although I'm sure there's a way, but if you just want to determine if you have 1.2 or not then you can open a terminal and type xcrun swift and it will say ""Welcome to Swift version *.*""."
swift,3cawbo,OMCS,1 point,Mon Jul 6 14:17:44 2015 UTC,In your terminal type: swift --version
swift,3cawbo,andorbot,1 point,Mon Jul 6 17:56:35 2015 UTC,Although Swift didn't have a REPL from the first version on
swift,3cawbo,Kametrixom,1 point,Tue Jul 7 00:18:23 2015 UTC,Oh really? I didn’t know that. Is this command dependent on the REPL? I thought maybe it was available once there was a compiler.
swift,3cawbo,andorbot,2,Tue Jul 7 09:50:11 2015 UTC,"I looked it up, you're right, there was a repl from the beginning, but you had to type xcrun swift and first set the beta XCode to be the default ;)"
swift,3c9yaq,caizo_ryan,5,Mon Jul 6 06:40:36 2015 UTC,"A few suggestions to clean up your app.  Firstly, there's a lot of typos (Its/It's, Finnally/Finally etc). Fix them up before you show people.  The views seem to jump around a bit when they load. The Perimeter view is one example. It jumps up about 20 pixels after it's displayed. If you're centering it on the screen you should do that before you show the view.  Some of the views had a lot of ""Not Applicable"" on them. If that's the case, don't show it.  Good luck."
swift,3c9yaq,bprc,1 point,Mon Jul 6 10:26:28 2015 UTC,Thanks a lot! I'll make sure to clean all of this.
swift,3c9yaq,npva,3,Mon Jul 6 10:32:28 2015 UTC,"I just can't hear the startup ukulele music anymore, it is just everywhere! ;)  However, I think the idea is original, a bit of polishing and it could be really cool, it makes me think of Soulver."
swift,3c9yaq,sabiland,1 point,Mon Jul 6 12:16:29 2015 UTC,"Thanks a lot! I was going to create something like soulver before when I didn't know it existed, but then I finally created this! Just check out I edited the video the post has the new updated link :)"
swift,3c9yaq,alt51,2,Mon Jul 6 12:22:56 2015 UTC,Can I expect to Have 1000 - 10000 Downloads? or am I asking for too much?
swift,3c9yaq,alt51,1 point,Mon Jul 6 14:43:44 2015 UTC,"Well, you should expect more if you wish to earn some money ;-).  Do not forget to Integrate Appirater.  Appirater is a class that you can drop into any iPhone app (iOS 4.0 or later) that will help remind your users to review your app on the App Store"
swift,3c9yaq,flCer,1 point,Wed Jul 15 11:45:40 2015 UTC,Hehehe thanks
swift,3c9yaq,criosist,1 point,Wed Jul 15 14:04:45 2015 UTC,"I really like the idea, but I think if you had a designer work on the UI it would be 100% better than it is now."
swift,3c9yaq,criosist,1 point,Mon Jul 6 20:59:42 2015 UTC,I wish I could afford one😢
swift,3c9yaq,JavaNut13,1 point,Tue Jul 7 18:42:23 2015 UTC,Yeah I know the feeling.  The functionality of the app is good.  Just keep pushing ahead and you'll get to where you want to be.
swift,3c7kmu,timanglade,1 point,Sun Jul 5 17:10:52 2015 UTC,"I wrote few and liked it, but it would be nice if Xcode had some support for this. Cocoa is a bit too verbose for writing by hand, and you need full blown project for debugging and autocompletion."
swift,3c9pt1,bulldogs93,2,Mon Jul 6 04:58:20 2015 UTC,"Something like MBProgressHUD or MRProgress might be of interest to you, or at least give you a good starting point."
swift,3c9pt1,twostraws,1 point,Mon Jul 6 22:00:45 2015 UTC,Thanks. I'll give these a shot.
swift,3c84bj,hagrids_a_pineapple,4,Sun Jul 5 20:06:44 2015 UTC,"I think using NSUserDefaults to PERSIST your data is probably a good thing. On the other hand, I think using the NSUserDefaults class in each of your controllers is a BAD thing, because of its opaqueness and lack of type-safety. Instead, you should probably read the appropriate values from NSUserDefaults into a struct in your initial VC, then pass that struct between subsequent VC transitions using prepareForSegue.  On the other hand, I admit I have run into a pain point with prepareForSegue that has caused me to compromise a tiny bit on the ""global variables are bad"". I realized pretty quickly that if I want to define cross-cutting behavior that depends on common access to some kind of (essentially) global state, like user preferences, or credentials or what have you, prepareForSegue really sucks for providing that state to VCs because there will be cases where it will also need to provide unique state between two VCs in addition to the global state, which means that each VC might have its own unique implementation of prepareForSegue, and that is a nightmare for maintainability.   What I ended up doing was defining a protocol (""AccessToUserPrefs"") that defines an optional property representing the state I wish to pass to all my VCs.   protocol AccessToUserPrefs {   var optPrefs: MyUserPrefsType? { get } }   Then I define a UIViewController extension that extends the protocol and defines a computed property with a getter that accesses the global state.   extension UIViewController : AccessToUserPrefs {   var optPrefs: MyUserPrefsType? {     get {         return MyUserPrefsType.loadPrefs()     }   } }   This makes the global state accessor a centralized implementation that can be optimized or swapped out in the future without having to refactor N-number of VCs. And your VC logic that merely reads the state can be written in a way that is agnostic to how it was provided in the first place:  if let prefs = optPrefs {   // prefs is defined, so do user-specifc behavior }   If in the future you choose to go with a purely prepareForSegue-based approach, you can change your extension to use objc_getAssociatedObject and objc_setAssociatedObject to mimic instance storage, or you could change it to use a UINavigationViewController hierarchy, etc.   EDIT: I would also like to point that the above approach becomes even more powerful with Swift 2.0 Conditional Protocol Extensions."
swift,3c84bj,rozzlapede,6,Mon Jul 6 03:36:45 2015 UTC,No!
swift,3c84bj,brwnx,2,Sun Jul 5 20:27:45 2015 UTC,Why not??
swift,3c84bj,Catfish_Man,6,Sun Jul 5 20:41:08 2015 UTC,"Could you elaborate on the ""needs to be stored permanently"" part? Other than that, what you're describing so far sounds like using NSUserDefaults as global variables, with no real benefit over just using globals... but the stored permanently part is interesting, and might make defaults appropriate."
swift,3c84bj,yeskia,1 point,Sun Jul 5 21:06:29 2015 UTC,"All I need to happen is to be able to press a button in the initial viewController that stores a number and a string as well as few booleans to decide if something should appear or not. These need to be saved (hence user defaults) from launch to launch and they are not right now which is preventing me from doing a bunch of things with the program. The variables I am trying to save with defaults have a purpose, I'm not just trying to avoid using something like prepareForSegue."
swift,3c84bj,Catfish_Man,4,Sun Jul 5 22:21:40 2015 UTC,I'd probably still pass the required information as some sort of data object through prepareForSegue and then have the view controller that require that data it to handle it's persistence itself.
swift,3c84bj,flCer,2,Mon Jul 6 00:19:06 2015 UTC,"That seems fairly reasonable then. I see a lot of people using defaults for things that don't need to persist, which is needlessly wasteful and convoluted, but your situation sounds like a fine use for it."
swift,3c84bj,zSprawl,2,Sun Jul 5 22:23:37 2015 UTC,"Well, based on what you wrote, NSUserDefaults is indeed a good choice. You're not storing much, and you need data persistence."
swift,3c84bj,Socraz6,1 point,Mon Jul 6 03:19:01 2015 UTC,"I would store the settings in NSUserDefaults, but still pass the data via segue (or some other means) within the program. NSUserDefaults is really only for ""saving"" of settings, and should be looked at as a ""write/read to disk"" vs. ""writing/reading from memory"". While in the big scheme of things, it won't matter in this case, but as you create larger things, it could."
swift,3c84bj,eviltofu,3,Mon Jul 6 04:51:14 2015 UTC,"NSUserDefaults has a history of being abused, which is the reason you got a strong (though unhelpful) response.  It has been explained to be as a way to store a small  amount of data globally, and permanently.  IE User preferences.  I used it once to store a token that a person had previously signed up for a thing, and could skip the first couple of sign in View Controllers."
swift,3c7vrc,xStory_Timex,1 point,Sun Jul 5 18:51:15 2015 UTC,"It's kind of the the point of a scrollview that its subviews don't necessarily have the same size as the scrollview itself - otherwise, scrolling would be a little unnecessary.  How do you expect/want the views in the scrollview to change? If you want them to occupy the space that's available on the screen (minus the keyboard area if it's shown), the scrollview doesn't really make a lot of sense.  When I have scrollable content in a scroll view and the keyboard appears, I usually set the content insets at the bottom of the scrollview to the keyboard's height, so that all of its contents are accessible. This doesn't change the views inside of the scrollview of course, but that's usually what I want anyway."
swift,3c7vrc,jasamer,1 point,Sun Jul 5 19:27:28 2015 UTC,I just want the height to be equal to the scroll view height
swift,3c7vrc,jasamer,1 point,Sun Jul 5 20:45:01 2015 UTC,What's the purpose of the scroll view? Do its contents scroll horizontally?
swift,3c7vrc,jasamer,1 point,Mon Jul 6 01:41:54 2015 UTC,yep
swift,3c7vrc,flCer,1 point,Mon Jul 6 02:07:53 2015 UTC,"Ok. In general, a equal-heights constraint between the scrollView and it's subview should do it. Don't forget to call layoutSubviewsIfNeeded after you change your constraint."
swift,3c6t1w,_JasonMcCoy,2,Sun Jul 5 11:38:10 2015 UTC,"I've watched all of Allardice's tutorials, and I can't remember there being anything in the ""iOS App Development"" course that would have changed since November 2014. The course is so basic level, I don't think anything that fundamental even could really change.  In fact, that's maybe my biggest gripe with that course; it kind of ends at making the simplest default UIs function, but you won't come out the other end, ready to make your own apps to be put on the App Store. There's also no other course on Lynda that you could watch afterwards to pick up where that one left off.  So to answer your questions;   Yes. Lynda has a separate ""Updated on"" date, if a course has been updated. This one hasn't. Yes. You should also probably watch Allardice's two other Swift courses. Probably not. Even Apple can't invent a whole new different language every year or so."
swift,3c6t1w,groenroos,1 point,Sun Jul 5 12:08:14 2015 UTC,You seem knowledgeable. She what should I watch/follow now that I'm done with that course?
swift,3c6t1w,iRaphael,2,Sun Jul 5 16:36:53 2015 UTC,"Well as I mentioned, Lynda doesn't offer anything to directly continue from where that course left off. If you already have a Lynda subscription/trial going, maybe check out Allardice's other courses as per your interest.  What I did personally was grab a copy of Design+Code which had some overlap with that course, but I feel took it a bit further towards making real apps (also 20% off Sketch, yay).  Also, as /u/twostraws mentioned below (but failed to provide a link), they seem to have compiled quite an extensive-looking set of hands-on tutorials. Looks very in-depth, and seems to be free of charge. We should arrange a celebration in this person's honor."
swift,3c6t1w,groenroos,2,Sun Jul 5 16:51:59 2015 UTC,"I put a link to the Swift 2 article rather than the main set of tutorials; I already post here quite a lot and I'd hate to be seen as spamming the subreddit with non-stop links!  <<  Looks very in-depth, and seems to be free of charge. >>  I try! More is coming soon. I took a few days out to do a bit of app coding myself (rather than just writing about it!), but I'll be back to the tutorial grindstone soon enough :)  << We should arrange a celebration in this person's honor. >>  I'd be happy enough if people just helped spread the word! I am utterly talentless at marketing, so word of mouth is all I have."
swift,3c6t1w,twostraws,1 point,Sun Jul 5 17:59:09 2015 UTC,"I was reading through the tutorials, and was just about to comment on how one might hope a bit more screenshots to make it look less dry; when I realized you have video versions of them on YouTube! And no link that I could find anywhere on the site! (Not to mention the hi-res videos as promised on YouTube)  What happened? I daresay if the videos weren't such potato quality, you'd have Lynda beat!"
swift,3c6t1w,groenroos,1 point,Sun Jul 5 18:33:05 2015 UTC,"Swift 1.2 happened, which meant having to re-record all the videos. There's over 20 hours of video in total, but it took me a huge amount longer to make because of re-takes, editing, etc. Even if I had re-done the videos, Swift 2.0 just happened, so the same problem re-occurs!  Keeping the books in text form is much easier to maintain: I can make tweaks as needed to keep it up to date, but never need to start from scratch.  As for screenshots: you're absolutely right. Originally I wrote the books for Amazon Direct Publishing, where screenshots are very expensive. 30 projects later that's not an issue any more, but it'd be quite a lot of work to go back to re-make screenshots!  I think what I'll do is wait for Swift 2.0 / Xcode 7 to go final, at which point I'll update the text to bring it into line with the newest changes. I'll use that opportunity to take screenshots too, all being well!"
swift,3c6t1w,twostraws,1 point,Sun Jul 5 18:40:15 2015 UTC,"Ouch. Yeah, I do get why that would be annoying.  I think Lynda tries to solve this by splicing a larger tutorial chapter into chunks of 4-5 minutes each, so you could theoretically swap out just a single chunk as required. This is of course providing that that code isn't then revisited later on in the tutorial...  You could also always handle it with YouTube annotations (""use as! instead of as here"", etc), but those could also distract from the focus of the task at hand.  All in all, I don't blame you at all. Looking forward to the updates!"
swift,3c6t1w,groenroos,2,Sun Jul 5 18:59:22 2015 UTC,"I don't know. I didn't try the course, largely because I made my own free Swift course. But if the Lynda course appeals to you, why not? Everyone learns in their own way, and you know yourself best. I hear this a lot, and the answer is definitely ""no"". If you learn Swift 1.2 really well, a quick skim over my What's new in Swift 2 article will be enough for you to upgrade.   Don't spend your time worrying about what's coming in the future. Do something great now, and it'll definitely pay off no matter where Swift goes."
swift,3c6t1w,twostraws,1 point,Sun Jul 5 15:25:29 2015 UTC,"I've just finished watching this course. It gives a good introduction to iOS programming with Swift, explaining the most important concepts behind iOS apps and XCode. I think the course is great for a beginner and I'm really happy with what I've learned.   XCode didn't change much from the time this course was released, so you can't say it's outdated. I've read about new Swift features, but that isn't related to what this course teaches. You're really just getting the essentials here, but that's what a beginner needs.  It's a very good course, I really recommend taking it."
swift,3c6t1w,gloriousbookworm,1 point,Sun Jul 5 14:13:03 2015 UTC,"The only real difference I found was needing to put ""as!"" in place of all the ""as"" since that recently changed, but that was it. If you use iOS9's Xcode, there are a few other differences, but part of troubleshooting them is learning. Depends how new  you are. I found it decent as a good ""I know other programming languages but not Swift"" refresher. No. It differs with more advanced stuff, which you aren't going to be using during training."
swift,3c7eck,realistic_hologram,1 point,Sun Jul 5 16:09:38 2015 UTC,Don't think about it in terms of manipulating the table. You need to update your data source and reload the table.
swift,3c7jr1,krahmaja,3,Sun Jul 5 17:02:16 2015 UTC,"How to make a scrolling table view of data while learning Swift  How to fetch data from the web and display it in neatly  I wrote Hacking with Swift with the intention that it be followed in order, so jumping from tutorial 1 straight to tutorial 7 might be hard – if you get stuck, try doing projects 2, 3, etc."
swift,3c7pun,Airglow26,4,Sun Jul 5 17:58:44 2015 UTC,"""force my users"" is never a good start to any user story."
swift,3c7pun,CQH,2,Sun Jul 5 23:30:25 2015 UTC,Can confirm. I have rated apps as 1 star because they forced me to watch tutorial videos.   People should make their apps obvious instead of having a 2 minute video that explains all the basic features that are hidden behind gestures.
swift,3c7pun,fluchtpunkt,1 point,Mon Jul 6 00:54:30 2015 UTC,Heeeyyyy!!!  We are cake-day bros!  (or bro and sis)
swift,3c7pun,CQH,3,Mon Jul 6 05:20:09 2015 UTC,"Place the tutorial into its own view controller, present it modally, and don't present a close button until they reach the end. As for an ID number, you could show an alert controller asking for it, with only an ""OK"" button to dismiss. If they don't enter anything (check the character count after trimming) just re-show.  I should add that you need to be careful not to annoy your users on their first run of your app."
swift,3c7pun,twostraws,1 point,Sun Jul 5 18:49:29 2015 UTC,"On first launch, set a flag (simple bool variable will work) and save it to NSUserDefaults. When the app launches, you can check for that flag and show your tutorial if they haven't loaded the app before.  Contrary to what other users have said, there is nothing wrong with a well-done and unobtrusive on boarding process.  Rating an app 1 star because of a tutorial is obnoxious and unnecessary. If the app is poorly designed thats one thing, but there's nothing wrong with a tutorial or walkthrough.“"
swift,3c94ks,masudhossain,10,Mon Jul 6 01:30:22 2015 UTC,I don't think it is a good way to start a business relationship with the mindset that someone is going to lie to you.  In the scheme of things... if they deliver when they say they will and what you pay them is an amount you and they are satisfied with... why does it matter?
swift,3c94ks,notoriousb1t,-20,Mon Jul 6 02:00:50 2015 UTC,"Of course it matters. It matters because no one should pay $50 for 1 hour of work when the developer took only 15min to do it. And an inexperienced person will never know how long a code should take to finish, but doesn't mean they should be screwed and taken advantage of for it.   Why else do you think majority of employers now expect you to do a 'programming test' when you apply for a job? It's a way for them to tell if you're being true to your words on your resume."
swift,3c94ks,permenant_waves,4,Mon Jul 6 03:06:26 2015 UTC,"Not that I disagree with your points on honestly, but here's something to consider. If a developer bills their time very strictly, the more experienced/faster you are, the less you make. Conversely, someone with less experience who takes longer to do the same work would be paid more. This is clearly not right. Hourly development rates are only a convenient way to generalize things. In the end it's all about making both parties in the transaction happy."
swift,3c94ks,shooky1,2,Mon Jul 6 04:03:43 2015 UTC,"In almost all cases the developer is using many years of training and experience in order to get to the point where a task only takes 15 minutes.  If you were to invest time and money in training yourself or your employees on how to do the same 15 minute task, I think you'll quickly find that $50 is extremely cheap!"
swift,3c94ks,bobvila2,0,Mon Jul 6 22:47:25 2015 UTC,"Sure, but the point of the post was to test a developer to see how long a specific task should take on average skill set and pay.   Of course a developer who charges more is expected to do more per hour, but we are taking about AVERAGE.   Example: Two developers who has the same capability and both charges $50 an hour, but one takes twice as long to finish a project."
swift,3c94ks,shiggie,5,Mon Jul 6 23:08:50 2015 UTC,"If you don't have a solid understanding of what you're hiring someone to build you aren't going to be able to assess that persons ability. There is no trick question.  Also, If you're budgeting a couple hundred bucks on elance and just giving the person a simple spec, I would say just don't. More times than not it will be a horror story."
swift,3c94ks,flCer,1 point,Mon Jul 6 03:51:46 2015 UTC,"There is no magical truth question you're going to be able to ask.  You have to know more about the subject matter at hand.  In this case, either you know how hard and how long it should take (or at least, a fair estimate), and you can judge for yourself, or you're going to have to trust the developer.  One solution I've seen: Pay someone else that knows their shit and that you trust to interview these people.  You'll pay a bit more up front, but that'll get you some peace of mind."
swift,3c94ks,flCer,0,Mon Jul 6 21:44:51 2015 UTC,"know how hard and how long it should take (or at least, a fair estimate), and you can judge for yoursel   That was the whole point of this post, but people took it offensive thinking i'm calling them a liar.    One solution I've seen: Pay someone else that knows their shit and that you trust to interview these people. You'll pay a bit more up front, but that'll get you some peace of mind.   That's a great idea! Thanks!"
swift,3c94ks,ThorBreakBeatGod,1 point,Mon Jul 6 21:57:34 2015 UTC,"Can you give me some context on what the project is like? It really depends on what you are hiring him for.   In my opinion, a good app developer should be able to translate visual design specifications from the design to the screen relatively quickly. On the other hand, the data side takes a while longer - and it really depends on what you're asking for.   Anything goes, unless you give the context of the assignment."
swift,3c94ks,koalefant,0,Mon Jul 6 03:15:20 2015 UTC,"Sure, I can send you the basic capability/requirement sheets we sent the developers if you want.   And we created a function prototype for the developer and labeled each button/link and what it does. Needless to say, we designed each page of the app and gave in detail what the developer needs to do. He literally has no creativity involved because we did it for him."
swift,3c94ks,zSprawl,1 point,Mon Jul 6 05:48:16 2015 UTC,"A seasoned developer should have their share of experiences on user interfaces. Depending on your requirements and goals, perhaps he didn't feel he should offer you input. I'm a front-end iOS developer and we have a dedicated designer on our team.   Since there is a designated designer, I ask him for the designs of each page - as specific as possible - because I don't get paid to spend the day weighing each design decision. That's the designer's job. I give suggestions when asked, but otherwise, I don't impose in their territory.  It really depends on what you require from him. Make it clear and a good programmer should at least give sensible design decisions.   Send me the goods, I can give you some advice within the scope of my experience."
swift,3c94ks,zSprawl,1 point,Tue Jul 7 09:54:20 2015 UTC,"Look, all coders and developers subscribe to the 'Montgomery Scott Principle' - y'all think we're wizards and miracle workers, so we will always tell you whatever task you want will take way longer than it actually will in order to keep up that perception.  But for real, you can only ask how long it would take to code in a perfect and pristine environment... which no one has had, ever.  So it's not really a fair assessment."
swift,3c94ks,dcoupl,1 point,Mon Jul 6 03:46:20 2015 UTC,"Don't hire based on time. A good dev has a deep understanding of the frameworks available and a good grasp of the tools. Also things like gracefully handling errors, properly commenting code etc.   Just set out a project total cost and hire the one that seems to be the best fit. What matter is it if it takes them 10 minutes or 10 hours, the important thing is they fulfilled your project requirements and you end up with something you are happy with."
swift,3c94ks,zSprawl,-1,Mon Jul 6 04:53:31 2015 UTC,"Just set out a project total cost   Yah, that's what we are planning on doing. But it's just hard to assess the capability of a programmer just by what their words are."
swift,3c75mb,ajn123,2,Sun Jul 5 14:36:52 2015 UTC,"Haha I'm getting that too, and tried to research it as well. All the answers I read just say to give up and stop worrying about it, it's just a warning. Apple might fix it sometime."
swift,3c75mb,fqn,0,Sun Jul 5 14:48:49 2015 UTC,It crashes my app!  It is causing me so much pain.
swift,3c75mb,fqn,2,Sun Jul 5 14:58:41 2015 UTC,"I don't think it's crashing your app. Check your logs again, you might be missing the real source of the crash."
swift,3c75mb,dancemonkey,1 point,Mon Jul 6 06:09:39 2015 UTC,"This was happening in my simulator as well but not causing any crashes. Maybe your crash might be actually caused by something else, and this keyboard thing is a coincidence?"
swift,3c75mb,Enlightenment777,1 point,Sun Jul 5 15:01:42 2015 UTC,"here's a downvote for you, because you didn't post the question on Reddit, instead as a lazy-fuck you linked to your question on another website.  https://www.youtube.com/watch?v=tqY3VHubd_g"
swift,3c75mb,zSprawl,1 point,Mon Jul 6 14:43:23 2015 UTC,"It's a bug in Xcode. Some will tell you to disable or enable the software keyboard in the simulator, but it happens on the phone too. You get the right keyboard you requested, so ignore it. It is NOT crashing your app."
swift,3c73sj,dannybrown9,2,Sun Jul 5 14:16:07 2015 UTC,"It won't work that way:  This happens first:  inputTextView.text = textView.stringByAppendingString(catchContent)       So now the content of the string is everything you have written so far.  self.inputTextView.textColor = UIColor.redColor()   This sets EVERYTHING red.  You should use a mutable string for that:  var myString:NSString = ""Random Text"" var myMutableString = NSMutableAttributedString()   Define a Mutable String with Font Georgia and size 18 from the string source, in this example from myString.      myMutableString = NSMutableAttributedString(string: myString, attributes: [NSFontAttributeName:UIFont(name: ""Georgia"", size: 18.0)!])    Add attribute redColor to the Location 2 with the Length 4 (This colors ""ndom"" from ""Random Text"" red!)      myMutableString.addAttribute(NSForegroundColorAttributeName, value: UIColor.redColor(), range: NSRange(location:2,length:4))   Just set the mutableString to the UIElement.      labName.attributedText = myMutableString"
swift,3c73sj,Alisamix,1 point,Sun Jul 5 14:53:03 2015 UTC,Now can you make the text red using transparent ink?  https://www.youtube.com/watch?v=BKorP55Aqvg
swift,3c73sj,djkimothy,1 point,Sun Jul 5 16:16:55 2015 UTC,UIColor.redColor().colorWithAlphaComponent(0.5) //0.5 is 50%. alpha goes from 0-1
swift,3c73sj,driftme,1 point,Tue Jul 7 02:45:48 2015 UTC,"Simply open TextEdit on your Mac, design your string the way you want, with all the colors, etc, bold, italic.  Save the file to an RTF file and load it into an instance of NSAttributedString()"
swift,3c6ukl,vinags,2,Sun Jul 5 12:03:23 2015 UTC,let rows = 100 let validRange = Set(0...rows)
swift,3c6ukl,foBrowsing,1 point,Sun Jul 5 12:04:58 2015 UTC,Hah...as simple as that.  thanks!
swift,3c42d3,donvito,4,Sat Jul 4 16:00:00 2015 UTC,"God, this was just beautiful, fantastic, bravo!  But I am a communist functionalist, and would be remiss if I didn't gripe about some part of this post for the party.    I think the whole structs/classes debate is missing a crucial point: We need to think a little beyond just black and white.  Perhaps if we stopped thinking about struct/class as immutable/mutable or OO/FP and started thinking about the precise set of semantics each brings to the table we would get somewhere.   It is possible, and often desirable, to present an immutable interface with a reference type.  It is also possible to wrap a mutable core with a struct.  The two can coexist just fine.  The larger point of both sides seems to be stop exposing a mutable interface, and that I can get behind.  Programmers reason better about data than anything else.  Hypothetically, the closer to data we can make things look, the better we can lock down invariants and start to reason about our code.  Fundamentally (I'm talking electrons in transistors here) we mutate, you just can't escape it, but what you also shouldn't do is resign yourself to that fact.  Sure, there are always cases where immutability makes things look downright disgusting, especially in Swift where things just don't generalize past a very thin level of abstraction, but I can reason about that mess in a way I just can't with arr[i++][j--] = x+++++y;.  Finally, if I see another FP basher bring up that paper again I will make it my life's goal to realize ekmett's universe in Swift.  That thing is about how laziness affects your perception of algorithms, not how ""FP iz bad u guys"".  Hell, she even presents the real algorithm in ""pure"" Haskell in her conclusion.  If you want to carry her argument to its logical conclusions, this post would be about why we should all be using SML."
swift,3c42d3,CodaFi,2,Sun Jul 5 01:57:56 2015 UTC,"Plus I really dislike how the author completely wrote off monads as 'too complex'. Like, for real, take some pride in your work as a computer scientist and learn the tiniest bit about the functional abstractions that made Swift possible."
swift,3c42d3,lyinsteve,1 point,Sun Jul 5 04:30:58 2015 UTC,I think the author was being purposely flippant with that comment. The rest of the article offers strong rebuttals to the struct-first philosophy that functional programmers prefer in Swift.
swift,3c42d3,ArvoHeikki,1 point,Sun Jul 5 04:48:31 2015 UTC,"But I think there has been/is quite a bit of thought about what classes and structs ""bring to the table"" semantically. The problem is that a lot of people (typically those oriented more toward functional programming) look at Swift's far more flexible implementation of structs and run absolutely wild, suggesting that this increased flexibility must mean that we are destined to use structs, and only structs, everywhere.  On the flipside, I don't think we were in any more danger of OO folks using classes where they should have used structs than before Swift came into existence. It's the functional people who've gone off the deep end and are trying to toss classes out the window. We can talk about semantics all we want, but as usual with things functional, the case against mutability and reference types is built largely on arcane, or otherwise limited, hypotheticals. One of the most genius things about this article is how it envisions an arbitrarily large project, specifically so we can avoid cute toy examples that ultimately bear little resemblance to anything of use or scale."
swift,3c42d3,ArvoHeikki,2,Sun Jul 5 04:39:53 2015 UTC,"Oh please, don't argue ""functional isn't practical"".  It just isn't true when you have large financial institutions, social networks, and more and more ""everyday engineers"" starting to pick up principles from it.  Yeah, the community has gone off the deep end with immutability, but is that necessarily a bad thing?  Nobody wants classes to die, but to wither.  Mutable, imperative, stateful code has been driving ""practical"" CS since SML lost in 74'.  Now's the time to change all that for the better."
swift,3c42d3,CodaFi,1 point,Sun Jul 5 04:54:22 2015 UTC,"Yeah, the community has gone off the deep end with immutability, but is that necessarily a bad thing?   Yes, it is a bad thing. Why? Because despite the fact that functional programming has come into vogue in recent years, there's no one-size-fits-all paradigm in the field. I think the common misapprehension is that OO people believe there's no other way to write an application. In reality, I see the same attitude, reversed, from functional people in almost every case. Nothing was ""won"" or ""lost"" in this fictional war, and you guys really are the only ones still fighting it. OO people, meanwhile, are writing useful applications.  In the Swift/iOS world, I have yet to see a code presentation that rides the functional paradigm as hard as possible and isn't both/either (A) a toy example and/or (B) only showing us the final, prettified implementation and hiding away all the files full of ugly glue that holds it all together."
swift,3c42d3,ArvoHeikki,1 point,Sun Jul 5 05:36:19 2015 UTC,"I'll be the first to admit those in The Party can be zealous (I certainly take pride in my evangelism), but what they're pushing is the future.  We finally have the computing power and sufficiently expressive type systems that we can start reasoning about software totally.  Stateful computation is antithetical to that kind of reasoning, so in my mind, any move towards immutability and non-dynamism is a win.  Give the community time.  Swift is young, the platform is all written in that aforementioned antithetical stateful style.  For now, the creep of map and filter and the rise of parametric reasoning suffice for my tastes given the current environment.  [That won't stop me pushing for more, of course!]"
swift,3c42d3,CodaFi,1 point,Sun Jul 5 06:03:00 2015 UTC,"But the problem is that if functional were ""the future""--which is to say the one dominant paradigm to conquer all others--it certainly was already ""the future"" decades ago. It's not like there was just some huge breakthrough yesterday (which is about when FP surged back into popularity) that suddenly made it viable for practical software development.  I think that what we're seeing in OO is the creeping in of key elements of FP (like you said: map, filter, mindfulness about mutability, etc), things that genuinely make software development more convenient, safer, and so on, but not really the overarching, OCD nature of FP itself. It's that final projection, often attempted by orthodox FP folks, that I take exception to, largely because it's it's inessential to the project of incorporating those other features into the OO paradigm.  Honestly, if there's anything that's going to drive people away from FP techniques, it's the notion of ""purity"" that undergirds so much of the evangelism. Programmers have always been pragmatists at heart. You can program completely in a strict, C-like imperative style (or close to it) in most OO languages. That's a result of pragmatism, and is fundamental to the very culture of modern programming. And yet, when it comes to FP, it seems there are believers and infidels, with nothing in between. That kind of mentality is simply not destined to take hold in the larger community of programmers. Hybridization is where it's at--and we're seeing it happen all over the place. But Swift is not going to become Haskell. It just isn't going to work like that.  Additionally, one reason why I think ""pure"" FP isn't likely to sweep OO into oblivion is because you have to be able to read the diagrams in articles like the one you linked to in order to really harness the full power of the paradigm, used in the ""purest"" possible way. You might see it as a sign of professional weakness for a programmer not to be able to readily comprehend all of that, but the reality is that we do need mere mortals to fill out the ranks. There simply aren't enough people with Math MAs/PhDs to take up all open positions in the software engineering field. The natural modeling of OO has always been one of its greatest strengths, and I think it's very much underrated in that regard. It turns out that it's actually a huge advantage for people to be able to comprehend, in an intuitive way, the software models that they're designing."
swift,3c42d3,ArvoHeikki,2,Sun Jul 5 06:29:19 2015 UTC,"All I see is ""math is hard, man"".  Math is hard, so is CS.  There's a lot of effort going into making a lot of the cutting edge stuff more accessible to the layman, hiding a lot of the nastiness, shuffling things around in the theory, all towards the goal of the most expressive and interesting system possible.  I see none of that on the OO side of things.  The fact of the matter is FP subsumes OO (in the sense you can recover OO with a sufficiently expressive type system), and there comes a point where it doesn't make sense to keep acting like it doesn't.  That sufficiently expressive system also happens to be fertile ground for the formalization of mathematical concepts.  If you want to slap a labels on Category Theory mumbo-jumbo to make it more accessible, be my guest.  But don't sit around and dismiss theoretical things because they're theoretical.  After all, running electrons through wires to do useful things was once a pipe dream; one realized by generations of mathematicians and engineers. So buck up and crack open a white paper every once in a while.  Who knows, you might learn something!"
swift,3c42d3,CodaFi,1 point,Sun Jul 5 07:16:02 2015 UTC,"No, it's not ""Math is hard."" That's not it at all. It's, ""These particular mathematical concepts are not readily accessible unless one puts a special amount of focus on Mathematics.""  I find it kind of absurd how FP people are still puzzling over how to make their paradigm more accessible to the ""layman"" when those very same ""laymen"" have already, for decades and decades, been making applications of the required complexity without being Math specialists. Oddly, it's the pragmatic programmers of the world who are adopting the aspects of FP that they find most useful and importing them into OO languages. You guys are hoping that this means FP will overtake OO, but again, that's not how it's going to work, for the simple fact that OO is still an effective and powerful paradigm, and has been for decades now.  And I'm not dismissing here. I'm saying that, at some point, yeah, the ""normal""-ness of the people doing the coding becomes a bottleneck. It's simply not efficient to expect a person to become a Math specialist when we have programming paradigms in place that (A) completely get the work done in superlative fashion (though I'll readily accept that ""superlative"" means something different to people who ship products and people who get OCD over statefulness and theoretically-possible race conditions) and (B) don't require you to really know any Math beyond HS algebra. FP has its ideal domains. We get that it's particularly well-suited to modeling problems in the general Mathematics field, because it adheres to the formal definitions of the field. But most of the problems we're trying to solve are not most naturally modeled as math problems. What OO allows us to render in quasi-concrete terms via classes and objects, FP re-casts in another form of abstract gobbledegook. We're not looking at machine code anymore, but we might as well be for how understandable the application is (again, unless we're dealing with a Math-centered problem, in which case the model fits perfectly to the domain)."
swift,3c42d3,ArvoHeikki,2,Sun Jul 5 08:01:51 2015 UTC,"No one questions the volume of work the current regime has produced, what they question is the quality.  At the end of the day, the set of programs I can write in C and the set of dangerous programs I can write in C overlap significantly.  In Haskell that overlap is much smaller, in Idris even more so, in Coq and Agda [almost] nonexistent.  We have spent far too long hooking objects together to describe a particular solution to a problem we've long since forgotten.  In FP you describe the problem and work with the compiler and type system to arrive at a safe and effective answer.  I don't believe you when you say that not every problem has a ""Mathematical [read: Reasoned]"" solution, because that corresponds precisely to the case where you aren't describing the problem well enough (you haven't produced a Type specific enough to model your problem effectively).  I do believe a lot more work has yet to be done lowering the jargon down to a level where mere mortals can understand it, but you could very well say the same thing of OO's incredibly rich vocabulary to the uninitiated.  It's all the same jargon, you're just familiar with one side of it.  To dismiss the other side because it's too ""out there"" is akin to dismissing Mandarin Chinese because it doesn't follow English's lexicographic structure."
swift,3c42d3,CodaFi,0,Sun Jul 5 08:19:56 2015 UTC,"...the set of programs I can write in C and the set of dangerous programs I can write in C overlap significantly. In Haskell that overlap is much smaller...   But the difference is that, given enough skill in defensive programming, I can make a safe C program that actually does something practical (I'll allow, again, that ""safe"" means something different for people shipping products and people being OCD about statefulness and theoretically possible race conditions). Give me a solid OO language and the outlook only gets sunnier.   I don't believe you when you say that not every problem has a ""Mathematical [read: Reasoned]"" solution...   Because that's not what I said. I said that most problems we're working with are not most naturally modeled in raw Mathematical terms. One thing I'm consistently amazed by is how much FP evangelists underrate the aptness of a problem model in software development. It's not just some trifling thing. It turns out to actually be really important, and it's the biggest reason why OO has dominated in the field. And by the way, OO programmers aren't just a bunch of dunces who couldn't pass HS trigonometry. One gets the feeling all too frequently that FP folks feel otherwise.   I do believe a lot more work has yet to be done lowering the jargon down to a level where mere mortals can understand it, but you could very well say the same thing of OO's incredibly rich vocabulary to the uninitiated.   I'd never argue that OO is without its issues when it comes to jargon, or whatever. As a self-taught programmer, I had to learn all of it on my own. The reality, though, is that OO--once you push past the jargon--makes intuitive sense, largely because it implies a taxonomy metaphor (not to mention other visual metaphors, like that of the factory) that we readily understand from basic studies in all sorts of other areas (middle school science, for example).  Again, I'm not ""dismissing"" anything here. I argue very openly that there are aspects of FP that OO languages can, and should, incorporate to make things more convenient and to allow OO programmers to execute tasks more effectively. The oddest thing in this whole debate is how the OO ""side"" gets accused routinely of dismissing FP, and meanwhile, the FP ""side"" is openly committed to basically seeing OO obliterated.  I'll just reiterate that practicality and pragmatism have been at the heart of modern programming since the days of the early MIT hackers in the 1950s. OO comes directly out of that tradition, and I don't think we're going to see any great shift in that regard, protestations of language/paradigm campers notwithstanding."
swift,3c42d3,ArvoHeikki,2,Sun Jul 5 08:55:26 2015 UTC,"That article is unreadable on an iPad, scrolling changes the zoom level around."
swift,3c42d3,_cortex,1 point,Sun Jul 5 08:19:38 2015 UTC,I love reader mode for exactly this kind of site. It turns that mess into something readable.
swift,3c42d3,Hawk_Irontusk,1 point,Sun Jul 5 15:53:54 2015 UTC,"Oh look, another ""I don't understand and I feel threatened by functional programming, therefore it's silly"" post."
swift,3c4xy2,CatoTheFI,2,Sat Jul 4 20:49:06 2015 UTC,Update: Just found it for $10. Don't see any reason not to get it at this point.
swift,3c4xy2,xelman,1 point,Sat Jul 4 21:29:12 2015 UTC,"Nice - just got it.  For $10, even if the content isn't great it'll still probably be worth it."
swift,3c4xy2,xelman,1 point,Sat Jul 4 22:56:36 2015 UTC,Great! I did too and am charging through it. Let me know how your progress goes!
swift,3c4xy2,supportforalderan,1 point,Sun Jul 5 19:50:08 2015 UTC,There's an Apple Watch one by the same guy - I picked that up too on the chance that they are both good.  Taking advantage of the $10 while it exists.
swift,3c4xy2,luggagepls,2,Mon Jul 6 01:57:13 2015 UTC,"Its really awesome. He's a really great teacher and it has definitely helped me go from zero swift knowledge to being able to build functional apps.    The course isn't always up to date, though, as some of the lessons use old information that can be flat out wrong, often requiring you to go hunting online for the real instructions.  He does update the course, though, it just takes a really long time, often 3-4 months after a change before he'll update the video."
swift,3c4xy2,supportforalderan,1 point,Sat Jul 4 21:53:44 2015 UTC,"Oh dear, I'm interested in learning Swift and he definitely knows marketing tactics -- I'm so close to purchasing it already!  Would you be able to provide examples of some ""old information"" stated in the course?"
swift,3c4xy2,supportforalderan,1 point,Sun Jul 5 14:53:45 2015 UTC,"Its just thing that have been affected by the update to iOS 8.1 and 8.2 really. That, and he relies on Parse for a lot of lessons, and they have changed their API a little bit from what's there. Honestly, every time I had an issue, I just straight googled the error and found the solution, or checked the comments for that video, someone usually solved it.  There were maybe 10 lessons of the 150 that were impossible if you straight followed the video, unfortunately they were often the major ""final lesson"" of the chapter.  That being said, I don't think its a deal breaker, especially for $10. Those issues might even force you to be better than if they weren't in there."
swift,3c4xy2,small_bee,1 point,Sun Jul 5 18:15:47 2015 UTC,"Thanks for the feedback. I was a little concerned about the issues of updates, but I think it'll be alright.  How long did it take you to complete? I'm charging through it right now but suspect I'll slow down a bit further in."
swift,3c4xy2,Schikelgrubber,1 point,Sun Jul 5 19:51:06 2015 UTC,"It took me about 6 months, but that was really on and off. Sometimes I'd go a week and complete an entire section, other times it would take me a month.  I think that if I actually sat down and did it non-stop, i'd be able to get it done in about 2-3 months.  Of course, I was doing it after coming home from a 10 hour job with an awful commute, so I had to force myself to do it, otherwise I'd just sit and play video games.  It also helped that I had a a pretty decent amount of experience as a programmer before starting the course. It isn't strictly necessary, of course, but it helped me clear the starting lessons much faster than if I was learning basic programming concepts from scratch."
swift,3c4xy2,supportforalderan,1 point,Sun Jul 5 22:20:30 2015 UTC,Does it have instructions on how to make it work using a PC? Do you happen to know how? Thanks!
swift,3c4xy2,tha2ir,1 point,Sun Jul 5 03:25:49 2015 UTC,It does
swift,3c4xy2,tha2ir,1 point,Sun Jul 5 04:48:57 2015 UTC,"It used to, but they actually were removed 2 weeks ago because of something involving udemy not liking instructions on how to break a eula.  He offers a refund if you can't get it to work on PC, though."
swift,3c5gxa,foBrowsing,2,Sat Jul 4 23:59:35 2015 UTC,"I didn't write this, and I'm sure it's already featured on here somewhere, but just in case, a very relevant chart/study guide I like to reference whenever I'm trying to figure out where to go next:  http://alphatolaunch.com/getstarted/  At the moment, I'm going through the Stanford course by Paul Hagerty and I love it. If you have a basic foundation in OO-programming, he moves at a pace that is pretty quick but also challenging enough that you feel engaged. I definitely feel like I'm building up a solid foundation.  EDIT: Whoops. I should mention that I'm a newbie still, so my post may not be as helpful for you if you've already crawled through some higher material."
swift,3c5gxa,awong05,2,Sun Jul 5 01:35:51 2015 UTC,"Hacking with Swift has slightly outdated videos or documentation with no pictures, but is very good and useful videos. iOS Apprentice is great as PDFs. Lynda has a good course too of videos. Great for the first time as it teaches you some key basics."
swift,3c3bkt,Dark_Angelas,4,Sat Jul 4 10:26:53 2015 UTC,"This is not Swift specific. Comment as little as possible and as much as needed.  It very much depends on the obscurity of the code. Sometimes intelligently named methods and parameters are enough.  If you have a (stupid example) method like  func addOneToNumber(number: Float) -> Float {     return number + 1 }   there is no need to comment. It is obvious from the naming of the method and parameter what it does.  Assume that the person reading the code has no idea what it does. Comment accordingly. If you add a hack or weird workaround, explain what it does and why it does it."
swift,3c3bkt,kielrene,5,Sat Jul 4 10:44:07 2015 UTC,"/// An enum to represent possible arithmetic failures. /// * AddToMax - An attempt was made to add to the respective 'max' of an IntegerType. /// * SubtractFromMin - An attempt was made to subtract from the respective 'min' of an IntegerType. enum ArithmeticError: ErrorType {     case AddToMax     case SubtractFromMin }  /// Adds one to a number /// /// - param numberToAdd: The number to add 1 to. /// - returns: numberToAdd with 1 added to it. /// - throws: ArithmeticError.AddToMax if numberToAdd is Int.max. /// - precondition: The number is less than Int.max. /// - postcondition: The number has 1 added to it. /// - complexity: O(1) func addOneToNumber(numberToAdd: Int) throws -> Int {     // We can't add 1 to Int.max, so check to see if the     // passed-in number is Int.max.     if numberToAdd == Int.max {         // If it's Int.max, throw the AddToMax ArithmeticError         // to give context to anyone who calls this function.         throw ArithmeticError.AddToMax     } else {         // Add 1 to the number and return it.         return numberToAdd + 1     } }  /// Subtracts one from a number /// /// - param numberToSubtract: The number to subtract 1 from. /// - returns: numberToSubtract with 1 subtracted from it. /// - throws: ArithmeticError.SubtractFromMin if numberToSubtract is Int.min. /// - precondition: The number is greater than Int.min. /// - postcondition: The number has 1 subtracted from it. /// - complexity: O(1) func subtractOneFromNumber(numberToSubtract: Int) throws -> Int {     // We can't subtract 1 from Int.min, so check to see if the     // passed-in number is Int.min.     if numberToSubtract == Int.min {         // If it's Int.min, throw the SubtractFromMin ArithmeticError         // to give context to anyone who calls this function.         throw ArithmeticError.SubtractFromMin     } else {         // Subtract 1 from the number and return it.         return numberToSubtract - 1     } }   Perfect. Eh, maybe it needs more OOP. 😉"
swift,3c3bkt,lyinsteve,1 point,Sat Jul 4 13:55:19 2015 UTC,Is that a comment type new in Swift 2? Xcode doesn't seem to process - param numberToSubtract: The number to subtract 1 from. but works with :param: numberToSubtract The number to subtract 1 from.
swift,3c3bkt,yeskia,1 point,Sun Jul 5 12:09:58 2015 UTC,"Yeah, it is. The Swift 2 migrator actually moves your comments over to the new form!"
swift,3c3bkt,lyinsteve,3,Mon Jul 6 04:16:27 2015 UTC,"There's a modern myth that code doesn't need comments and that well written code can be read in the same way as you might read a book.  Both of these are wrong.  Examples that show that comments are not needed invariably show code that is so sterile and simple (e.g. number + 1 below) that it is meaningless. In reality, real code is complex and obscure, written quickly - usually to a tight deadline, hacked into submission and tested inadequately.  In this reality code comments are a frequent help for the poor sucker (with inadequate training and experience) who comes along afterwards and has to clear things up."
swift,3c3bkt,vjosullivan,2,Sat Jul 4 11:08:23 2015 UTC,"I'd day writing comments is usually a lot faster than writing a test or refactoring. It is not always obvious how to test something or how to refactor it.  As I believe Blaise Pascal once said ""I am sorry my letter is so long, but I didn't have time for a short one."" It takes more time to write good code.  Anyway I don't see tests and comments as mutually exclusive. They serve different purposes. I have looked at many tests where I have wondered ""what the hell is being tested here?!"" I wish somebody had written a comment about the intention of these tests."
swift,3c3bkt,lusion,1 point,Sat Jul 4 15:30:15 2015 UTC,"Not necessarily, sometimes you have to write a shitty hackaround just because you don't have time for a day's planning a well-architected system when you only really need to write some straightforward code and monkey patch one edge case, in which case writing a comment is so much faster. I mean, what you said sounds great in theory. But tests and good architecture both take a lot more time than running a git diff before you commit, looking over the code you wrote and adding some comments to explain why you do things."
swift,3c3bkt,maplemario,2,Sat Jul 4 23:41:53 2015 UTC,"Getting comments ""just right"" is tricky and ultimately you'll need to reach a point where you're reading code that you wrote some time ago or have to explain your code to someone else before you really get it there IMO.  As far as Cocoa, I personally find that I have relatively few comments in my view controllers (usually only if I'm either doing something new or unusual with UI that the comments explain - both what's happening and why I'm doing it).  My model objects, on the other hand, usually have more commentary, explaining usage and implementation.  This also has a benefit that, when I start seeing more elaborated comments showing up in my views, it's a pretty good code sniff that my model is leaking in and that it's time to reconsider the model interface."
swift,3c3bkt,jsydik,1 point,Sun Jul 5 02:19:39 2015 UTC,"Commenting shouldn't explain how your code does what it does. You can read the source code for that. Comments should explain the context. What goes in, what comes out, what this affects elsewhere, what elsewhere affects this and why we're doing it this way.   This is from a Visual Basic style guide but it's pretty universal. https://en.m.wikibooks.org/wiki/Visual_Basic/Coding_Standards#Commenting_Code"
swift,3c3bkt,billcstickers,3,Sat Jul 4 14:28:40 2015 UTC,"I'm not sure I agree with comments not explaining how your code does something. Take this, for example:  /* Scan indices right-to-left until finding one that is not    at its maximum (i + n - r). */ for (i=r-1 ; i >= 0 && indices[i] == i+n-r ; i--)     ;  /* If i is negative, then the indices are all at    their maximum value and we're done. */ if (i < 0)     goto empty;  /* Increment the current index which we know is not at its    maximum.  Then move back to the right setting each index    to its lowest possible value (one higher than the index    to its left -- this maintains the sort order invariant). */ indices[i]++; for (j=i+1 ; j<r ; j++)     indices[j] = indices[j-1] + 1;  /* Update the result tuple for the new indices    starting with i, the leftmost index that changed */ for ( ; i<r ; i++) {     index = indices[i];     elem = PyTuple_GET_ITEM(pool, index);     Py_INCREF(elem);     oldelem = PyTuple_GET_ITEM(result, i);     PyTuple_SET_ITEM(result, i, elem);     Py_DECREF(oldelem); }   (line 2476 - 2503 of the itertools module in Python) For something like that, isn't it more clear? (obviously it depends on where it's used, and there are going to be examples of over-commenting, I'm just not sure about saying so absolutely that comments shouldn't explain method)"
swift,3c3bkt,foBrowsing,2,Sat Jul 4 10:46:00 2015 UTC,"/* Update the result tuple for the new indices        starting with i, the leftmost index that changed */   That is most definite over commenting and with better variable naming most of the other comments wouldn't be needed either."
swift,3c3bkt,billcstickers,1 point,Sat Jul 4 11:01:24 2015 UTC,"The more custom and unique your method/function/class is, the more commenting it needs. If it's the viewDidLoad() method in a simple UITableViewController, or an IBAction from a button press that just calls performSegue(), it probably doesn't need any comments. A complicated sorting algorithm in a singleton data manager will probably need some explanation of what's going on."
swift,3c3bkt,blaizedm,1 point,Sat Jul 4 11:33:21 2015 UTC,i don't comment much but that is due mainly to the fact that i'm fairly new at programming and most of the code i write is only ever read by myself.  When i get to a situation where other people will be working on the same codebase i will comment whatever is not obvious.
swift,3c3bkt,neonmansion,2,Sat Jul 4 11:37:21 2015 UTC,I've found that I write better code if I have an audience. Consider putting some of your code open-source on GitHub! 😃
swift,3c3bkt,lyinsteve,1 point,Sat Jul 4 13:41:00 2015 UTC,"By then, it will be too late.  Get into the habit now.  And you do have an audience.  You.  I've gone back and looked at my own code and not known what I was doing, even when I tried to comment rigorously."
swift,3c3bkt,shiggie,1 point,Sat Jul 4 13:57:05 2015 UTC,"Like everyone says, it depends.  You should try to be light on comments.    Method naming and well developed Api should be by there very nature expressive.  If you're commenting a lot I would expect that you are not creating clean interfaces and you are probably not following(not to be dogmatic) the single responsibility principle to any degree.  Tests should be a good means of also expressing the intent of a method.  That being said if it's still not clear, or it takes to long to grok what you need, go for it.   Just avoid being comment heavy.  It could also be a good opportunity to do some refactoring if time permits."
swift,3c3bkt,n0phear,1 point,Sun Jul 5 03:35:22 2015 UTC,Real programmers don't comment 😆
swift,3c3bkt,vinags,1 point,Sat Jul 4 19:35:38 2015 UTC,"I generally don't write that much comments next to methods or functions but I tend to write fairly long comments in front of a class to make people understand what the motivation behind the class is and how to use it. Once you understand what a class is for a lot of the method names will make sense by themselves.  In general I try to comment why some choice was done or things you should be aware of when using a method. Most methods don't have any gotchas so I don't comment them.  In general though I would say that more abstract code requires more documentation that concrete code. So things like protocols and abstract base classes might need more explaining than their particular subclasses.  My impression is that if you want to keep the need for comments to a minimum you have to write very concrete code, but that easily kills code reuse and requires a lot more boilerplate. Writing more abstract gets you more tight code but demands that people learn the concepts in your code. Some people hate reading comments, or have some sort of moral aversion towards them so it all depends on your audience I guess."
swift,3c3bkt,lusion,1 point,Sat Jul 4 23:26:02 2015 UTC,"My most important rule of thumb: if I do the obvious thing, and end up having to change it, I put a comment in explaining why the new code isn't doing the obvious thing."
swift,3c3bkt,Catfish_Man,0,Sat Jul 4 23:37:30 2015 UTC,I write doc comments if my code is going to be used by anyone else.  I don't generally bother if it's only for myself.
swift,3c29fg,banukatanaya,1 point,Sat Jul 4 02:21:47 2015 UTC,"It's not that Parse doesn't scale well, it's that it's almost completely lacking enterprise features (e.g. backups) and the support is atrocious."
swift,3c29fg,greeneyedguru,1 point,Sat Jul 4 05:50:18 2015 UTC,"Azure Mobile Services is not bad, not as ""cool"" as Parse but definitely scalable for long term projects."
swift,3c26jo,AxeEffect3890,1 point,Sat Jul 4 01:54:37 2015 UTC,"I'm not sure, but could it be a problem caused by DRM. Apple music puts DRM on the music files."
swift,3c26jo,Lars34,1 point,Sat Jul 4 08:06:59 2015 UTC,are you calling    func beginGeneratingPlaybackNotifications()
swift,3c26jo,criosist,1 point,Sat Jul 4 08:29:04 2015 UTC,Yes I have that under viewWillAppear
swift,3c24aj,zSprawl,3,Sat Jul 4 01:32:16 2015 UTC,http://makeappicon.com
swift,3c24aj,vinnydakid,1 point,Sat Jul 4 01:56:06 2015 UTC,Looks like it. Thanks!
swift,3c24aj,clawesome,2,Sat Jul 4 02:10:02 2015 UTC,http://appicontemplate.com/ios8
swift,3c24aj,jineshshah36,1 point,Sat Jul 4 04:14:05 2015 UTC,Preview can do it
swift,3c24aj,jineshshah36,1 point,Sat Jul 4 01:40:58 2015 UTC,Automatically... or is this a sarcastic comment? :p
swift,3c24aj,souhoh,2,Sat Jul 4 02:09:34 2015 UTC,"I'm sorry I misunderstood what you were looking for. You can use preview in Mac to generate different icons at different sizes and resolutions. If you're looking to automate the process that's a different story, but preview can definitely do it on a one time basis"
swift,3c24aj,dgdosen,-3,Sat Jul 4 07:58:26 2015 UTC,"If you don't have anything to contribute to the original post, please don't post at all."
swift,3c24aj,curiousapps,1 point,Sat Jul 4 05:07:40 2015 UTC,big fan of sketch by bohemian... There are templates for anything you need.
swift,3c24aj,MaddTheSane,1 point,Sat Jul 4 20:29:54 2015 UTC,I use Sketch 3 for my mac
swift,3c24aj,spinozasrobot,1 point,Sat Jul 4 21:41:15 2015 UTC,"I can see someone creating an Automation workflow that does this. Granted, I have a limited knowledge of Automation, but I'm fairly certain you can copy and resize images using built-in recipes."
swift,3c1dh0,bobdawgg,4,Fri Jul 3 21:33:18 2015 UTC,This might be a good excuse to learn some Objective -C. You'll run into more and more cases as you go along and having both languages under your belt never hurt anyone.
swift,3c1dh0,cguess,2,Fri Jul 3 23:01:34 2015 UTC,"This is why it's kinda tricky to recommend a coding language for a beginner, with regards to Swift vs Objective C"
swift,3c1dh0,iamsebj,5,Fri Jul 3 23:34:10 2015 UTC,"I've settled on telling people 'Implement your stuff in Swift, but learn how to read and understand Objective-C.'"
swift,3c1dh0,lyinsteve,2,Sat Jul 4 03:39:06 2015 UTC,Just learning Swift right now for my first (OS X) app. This approach is serving me well.
swift,3c1dh0,mveinot,-1,Sat Jul 4 13:28:34 2015 UTC,"I discourage this, very much. Apple is going to, in a year or two, put all their efforts on Swift and stop updating or writing any code in ObjC. They have already started.  Learning a language is not a 1-2-3 step. It takes a lot of time. Why waste time on learning something that is going to be pretty much second-choice in a year? I don't suggest OP does this."
swift,3c1dh0,souhoh,3,Sat Jul 4 05:25:36 2015 UTC,"A year...? They have 20+ years of highly stable code base the migrate, trust me it's not going anywhere for awhile. In addition to the fact that it will definitely be supported for a few years, every single 3rd party library is coded in Objective-C, and to be able to use and debug them you should have a pretty basic understanding. Would you suggest someone not learn C because Java can do the same thing?"
swift,3c1dh0,cguess,2,Sat Jul 4 14:43:10 2015 UTC,They have already started.   Where?
swift,3c1dh0,kielrene,0,Sat Jul 4 10:51:28 2015 UTC,Here is the list of WWDC 2015 videos dedicated to each language respectively this year  Objective-C:  Nothing!  Swift:   106 - What's New in Swift-HD 411 - Swift in Practice-HD 401 - Swift and Objective-C Interoperability-HD 408 - Protocol-Oriented Programming in Swift-HD 409 - Optimizing Swift Performance-HD 403 - Improving Your Existing Apps with Swift-HD 414 - Building Better Apps with Value Types in Swift-HD
swift,3c1dh0,souhoh,2,Sat Jul 4 11:24:11 2015 UTC,"So? Swift is the new shit, sure. That doesn't mean that Objective-C is going anywhere soon. It's 30 years old. Not much to add to it or say about it anyway, especially if there is a new language that few people know about.  Nevertheless, Apple itself is barely using it internally. Rumor is that up until recently it was impossible for them to build Swift-based frameworks, because their internal build system was Objective-C only.  It will be years until Apple will drop Objective-C."
swift,3c1dh0,kielrene,1 point,Sat Jul 4 11:33:00 2015 UTC,"That doesn't mean that Objective-C is going anywhere soon   I totally disagree. Objective-C will be deprecated in less than 5 years, mark my words. Just like garbage collection, Objective-C has always been the black sheep, hence the creation and focus on Swift."
swift,3c1dh0,souhoh,4,Sat Jul 4 12:08:10 2015 UTC,Do you seriously believe Apple will rewrite everything in Swift in the next five years?  It took Apple 10 years to deprecate Carbon.
swift,3c1dh0,kielrene,2,Sat Jul 4 14:15:10 2015 UTC,"ObjC has been the primary implementation language for what became OS X and iOS since the late 80s. ""Black sheep"" is pretty much the opposite of reality."
swift,3c1dh0,Catfish_Man,1 point,Sat Jul 4 21:57:48 2015 UTC,what do you want to implement from Facebook? The login via Facebook?
swift,3c1dh0,itrex,1 point,Fri Jul 3 22:19:25 2015 UTC,"if you consider using parse, there is a way to integrate Facebook into your app. I personally haven't done it myself but it's there."
swift,3c1dh0,banukatanaya,1 point,Sat Jul 4 01:44:32 2015 UTC,"If i understood you correctly, you just want to add facebook integration into your app? i.e with a ShareSheet?   Here is a tutorial about sharesheets  http://www.techotopia.com/index.php/An_iOS_8_Swift_Facebook_Integration_Tutorial_using_UIActivityViewController  Or use this one (without sharesheet)   http://www.ioscreator.com/tutorials/facebook-tutorial-ios8-swift  The second tutorial should be very simple :D"
swift,3bzjvp,crawler23,6,Fri Jul 3 12:35:05 2015 UTC,"Would be a lot better if this was an iPad app I could use. Too many free resources on the Internet that are easily accessible via a browser on a laptop for me to justify paying $40 for this app. UI also looks cheap, if that makes any sense. Anyways, I'll wait for the reviews and see if this is worth anything. Until then, good luck with it, I'll be sure to keep up with any updates/improvements you guys make!"
swift,3bzjvp,Macuse,2,Fri Jul 3 18:19:09 2015 UTC,Well done. The more that is available on Swift the better. Thanks.
swift,3bzjvp,vinags,4,Sat Jul 4 08:21:36 2015 UTC,"$40, I hope you aren't serious about that."
swift,3bzjvp,spinwizard69,4,Fri Jul 3 13:26:15 2015 UTC,"hehe, when even developers don't want to pay reasonable prices for software you know that the market is totally fucked."
swift,3bzjvp,donvito,-2,Fri Jul 3 22:07:43 2015 UTC,Why not? 40$ is about the price of one session with a tutor - we think this app if worth more than that  P.S.: You can use the code LEARNTOCODE to get a 10$ discount on the training app.
swift,3bzjvp,_JasonMcCoy,4,Fri Jul 3 13:42:03 2015 UTC,"Price is fine for me, but I will wait for the Swift 2.0 version."
swift,3bzkuu,Airglow26,2,Fri Jul 3 12:46:10 2015 UTC,"Yes, you can use any type you like in your array. Just replace Int with String in the examples you see.  Something like this should also work:  let xs: [[[String]]]"
swift,3bzkuu,Hawk_Irontusk,2,Fri Jul 3 13:42:53 2015 UTC,"Of course:  let ar = [   [""a"", ""b"", ""c""],   [""a"", ""b"", ""c""],   [""a"", ""b"", ""c""] ]   Maybe I've misunderstood you, though."
swift,3bzkuu,foBrowsing,3,Fri Jul 3 12:47:37 2015 UTC,"You can add as many dimensions as you want:  let ar = [ [     [""a"", ""b"", ""c""],     [""a"", ""b"", ""c""],     [""a"", ""b"", ""c""]   ], [     [""a"", ""b"", ""c""],     [""a"", ""b"", ""c""],     [""a"", ""b"", ""c""]   ], [     [""a"", ""b"", ""c""],     [""a"", ""b"", ""c""],     [""a"", ""b"", ""c""] ]]  ar[0][0][0] // ""a""   I mean, am I missing something here? Is that what OP meant?"
swift,3bzkuu,foBrowsing,1 point,Fri Jul 3 13:26:52 2015 UTC,Can we go deeper?
swift,3bzkuu,kanye_is_a_douche,8,Fri Jul 3 13:30:24 2015 UTC,"Of course we can!  extension Array {   func goDeeper() -> [Array] {     return self.map { _ in self }   } }  [""a"", ""b"", ""c""].goDeeper() // [[""a"", ""b"", ""c""], [""a"", ""b"", ""c""], [""a"", ""b"", ""c""]]  [""a"", ""b"", ""c""]     .goDeeper()     .goDeeper()  //[ [ //    [""a"", ""b"", ""c""], //    [""a"", ""b"", ""c""], //    [""a"", ""b"", ""c""] //  ], [ //    [""a"", ""b"", ""c""], //    [""a"", ""b"", ""c""], //    [""a"", ""b"", ""c""] //  ], [ //    [""a"", ""b"", ""c""], //    [""a"", ""b"", ""c""], //    [""a"", ""b"", ""c""] //]]"
swift,3bzkuu,foBrowsing,5,Fri Jul 3 16:03:51 2015 UTC,Array.goDeeper() is genius. I love it.
swift,3bzkuu,Hawk_Irontusk,2,Fri Jul 3 16:11:15 2015 UTC,Well done
swift,3bw82h,twostraws,2,Thu Jul 2 17:39:54 2015 UTC,Some time ago I started my little project -https://github.com/SebastianOsinski/SwiftRandom - because I've noticed there are no 'good' ways to generate pseudorandom numbers from distributions other than uniform. Apparently that's not the thing anymore.
swift,3bw82h,Sebaall,1 point,Thu Jul 2 20:09:39 2015 UTC,Your work seems to tackle a very different issue to Apple's – I wonder if this is the sort of thing they would be interested in once Swift gets open sourced for real?
swift,3bw82h,Sebaall,1 point,Thu Jul 2 20:12:27 2015 UTC,I don't think there is need to incorporate so many statistical distributions into stdlib. Most people don't most of them and I know it :).
swift,3bw82h,skoll,2,Thu Jul 2 20:31:03 2015 UTC,Is there still a way to pick a seed for random numbers using GameplayKit?  There are cases for wanting a highly random output of numbers that can later be repeated.
swift,3bw82h,Adamw88,2,Sat Jul 4 02:55:21 2015 UTC,Yes. See this chapter for how to seed GameplayKit random numbers.
swift,3bwo94,curiousapps,2,Thu Jul 2 19:38:52 2015 UTC,"Had a look at the apps. As you said, very basic but I like the UI design and I couldn't break them so that was positive. Keep it up and build something more complex!"
swift,3bwo94,xlogic87,1 point,Thu Jul 2 22:24:59 2015 UTC,Thanks!
swift,3bwo94,micro435,2,Sat Jul 4 06:40:43 2015 UTC,Nice job.  I really liked Tiplet.  The design was really nice and it was simple.  I didn't like Plus One however.  I thought it was a little too simple and the color of the buttons kind of threw off the simple aesthetic UI.  Nice work on both of them though.
swift,3bwo94,BackwardsBinary,1 point,Thu Jul 2 23:43:14 2015 UTC,Also the status bar was dark instead of matching the UI style.
swift,3bwo94,micro435,1 point,Fri Jul 3 12:31:02 2015 UTC,Thanks for the comment.  What do you think i should do to the plus one UI to make it better?
swift,3bxxsd,bc879,3,Fri Jul 3 01:58:02 2015 UTC,You can have an image as a button.   So create a button image in any program you prefer and then import it to the project.
swift,3bxxsd,Strawberry_pie,2,Fri Jul 3 05:02:50 2015 UTC,"Yeah, I thought about doing that but I feel like programmatically would be an easy copy and paste. Thanks for the advice!"
swift,3bxxsd,souhoh,2,Fri Jul 3 05:54:03 2015 UTC,"OP, look at IBDesignable and IBInspectable and create a property on UIView namely ""rotation"" or so, and in there, create an ""affine transform"" that rotates your view. This is doable and EASILY doable. If you want more info, let me know."
swift,3bxxsd,lyinsteve,1 point,Sat Jul 4 05:13:20 2015 UTC,"Thanks for the tip! Still haven't been able to play around with peoples suggestions yet but I'll try this out when I can, thanks again!"
swift,3bxxsd,souhoh,2,Sat Jul 4 10:57:20 2015 UTC,Sadly Interface Builder doesn't handle rotation. You'll have to handle that programmatically.
swift,3bxxsd,jasamer,1 point,Fri Jul 3 04:10:28 2015 UTC,This is WRONG. IBDesignable and IBInspectable allow you to create a property such as rotation and then create an affine transform in that property to rotate the view RIGHT in IB.
swift,3bxxsd,lyinsteve,1 point,Sat Jul 4 05:12:18 2015 UTC,"Wow, that sucks. Well, here's how I'm doing it at the moment..  var1.transform = CGAffineTransformMakeRotation(1.6)    That rotates my label 90 degrees, would this be the way that you would do it? It's the only way that I could find :/  Also, thanks for replying! much appreciated"
swift,3bxxsd,lyinsteve,6,Fri Jul 3 05:53:31 2015 UTC,"Seems correct, except that Pi isn't 3.2. You probably wanna rotate by M_PI/2."
swift,3bxxsd,autowikibot,1 point,Fri Jul 3 07:24:44 2015 UTC,"Ah, can you explain this to me? I'm still unsure as to how this rotation thing works, I'm not sure what the number represents so I just played around with it, 1.6 seemed to rotate my label 90 degrees, however 3.2 didn't make it rotate 180 as I found out haha. What does the M_PI/2 stand for? What does it do in terms of rotation?  Thanks!"
swift,3bxxsd,lyinsteve,2,Fri Jul 3 12:07:05 2015 UTC,"Well, I'm not sure how far you are into schooling, but M_PI_2 is a constant that's declared in the C math library. It it a substitute for (pi / 2), which in radians equates to 90 degrees."
swift,3bxxsd,jasamer,1 point,Fri Jul 3 12:41:44 2015 UTC,"Never heard of M_PI_2 before or that it equated to 90 degrees, that helps to know though! Thanks for the info"
swift,3bxxsd,lyinsteve,3,Fri Jul 3 13:03:39 2015 UTC,Short hands:   0 = 0 = 0° = 360° M_PI = pi = 180° M_PI_4 = pi/4 = 45° M_Pi_2 = pi/2 = 90° 3*M_PI_4 = 3pi/4 = 270°   This is by no means meant to represent the whole Unit Circle. You'll learn this when you study pre-calculus. Glad to help!
swift,3bx24q,lsolniczek,1 point,Thu Jul 2 21:24:58 2015 UTC,"This is very interesting, and I agree that it seems fairly clear API! Do you think you could add to the page an idea of what happens if you tried to write ""String in Chain in String"" – which ""String"" is matched? And how about performance – presumably this is doing a fair amount of string matching? Doing that would help make the project more appealing to use.  I'd suggest you avoid unnamed parameters to help make the API even clearer. For example, underline(1) – what does the 1 mean?  More broadly – and this is just gut instinct stuff I'm bouncing around as discussion, not a recommendation! – I wonder whether re-spinning this to be more imperative would make more sense? Compare this:  string.match(""Chain"").withStroke(1, andColor: UIColor.blackColor()) string.match(""In"").underline(1, andColor: UIColor.yellowColor())   The first one can be read out loud and makes sense: ""match chain with stroke."" The second is half imperative: ""I want In to be underlined."" How would it look if you went totally imperative? As in:  string.underline(""Chain"") string.underline(""Chain"", inColor: UIColor.yellowColor())"
swift,3bx24q,twostraws,1 point,Fri Jul 3 15:44:12 2015 UTC,"Erm, did you know that an NSAttributedString can be initialized with path to an RTF file that you can create right on your Mac?"
swift,3bwy86,iOSKoray,3,Thu Jul 2 20:53:48 2015 UTC,"You can do it 'classically'. Just open Terminal, go to the project's directory (in terminal) and use git init command to create new local repository. It should be visible by XCode almost immediately. If you have problem navigating to project's directory in Terminal, you can use small app from Mac App Store called Go2Shell, which places itself in Finder and allows you to open Terminal in directory currently opened in Finder."
swift,3bwy86,Sebaall,1 point,Thu Jul 2 21:40:06 2015 UTC,"Thanks but if i try to push it now, xcode says: The current branch could not be determined.  I also tried it with terminal. i did cd ""MyFile"" then:   git remote add origin https://MYURL.com  git push -u origin master  It also didn't  work ...  I get the following error:   error: src refspec master does not match any. error: failed to push some refs to 'origin'  btw: If i open my Xcode Project, in the left sidebar there are question marks next to my files..."
swift,3bwy86,hw_t_dstr_ngls,1 point,Fri Jul 3 15:06:04 2015 UTC,Source control -> Create working copy
swift,3bwrt0,agmcleod,2,Thu Jul 2 20:05:40 2015 UTC,"If you want the whole thing to scroll as one, then you can use one tableview with different sections. But if you want each of those lists to scroll independently then you would need separate UITableviews.  To handle separate tableviews set the viewcontroller as datasource and delegate for all of them. Then in IB look for the 'tag' attribute for each tableview and set them to different numbers (eg top tableview has tag = 1, middle has tag = 2, etc.   Then at runtime in the datasource and delegate methods use the UITableviews being passed to those methods and switch on their individual tag values.  The tag field is there for precisely this sort of thing and is baked into UIView. You can use it for handling multiple objects from a single delegate."
swift,3bwrt0,fubarx,1 point,Thu Jul 2 20:35:34 2015 UTC,"I would use a table view with sections for this. If you want to scroll them independently I agree with fubarx, but I would rather have used 3 separate controllers. IMHO I think the tag stuff is nice to avoid if possible. And frankly for most people getting used to splitting up their controllers into more parts would not be a bad thing. People then to use UIViewControllers as massive dumping grounds for everything.   objc.io has a pretty nice issue on how to split up your view controllers and make them less fat. Check it out it is pretty nice: http://www.objc.io/issues/1-view-controllers/"
swift,3bwrho,quickswiftquestion,2,Thu Jul 2 20:03:05 2015 UTC,"It's hard to tell, but I suspect you're looking at something like this:  let parsedUrl = BFURL(inboundURL: url, sourceApplication: sourceApplication)   Code completion ought to be your friend here."
swift,3bwrho,twostraws,1 point,Thu Jul 2 20:15:35 2015 UTC,"Considering you're calling a class method on BFURL, it would probably look like:  let parsedUrl = BFURL.URLWithInboundURL(url, sourceApplication: sourceApplication)"
swift,3bwrho,ios_game_dev,1 point,Fri Jul 3 03:54:40 2015 UTC,Start typing and let Xcode fill in the rest for you. :)
swift,3bwrho,zSprawl,2,Fri Jul 3 19:26:32 2015 UTC,Good point. This tends to be the best approach. But it's still good to understand the difference between class methods and instance methods.
swift,3bve69,KNNMMDV,1 point,Thu Jul 2 13:42:24 2015 UTC,Anybody?
swift,3bve69,ios_game_dev,1 point,Thu Jul 2 19:45:54 2015 UTC,"NSURLConnection has been deprecated in favor of NSURLSession. Using this might solve your problem. It also looks like you're using some custom class called JSON for deserialization? You could try using Cocoa's NSJSONSerialization.  let jsonData = try! NSJSONSerialization.JSONObjectWithData(data!, options: NSJSONReadingOptions(rawValue: 0))   If you are not using Swift 2.0, you will not need the 'try!'  PROTIP If this code is being executed from the main thread, you should not perform a synchronous network request, as it will block your UI until completion. Either use an asynchronous request, or dispatch to a background thread before doing your request."
swift,3bw0d0,ssh_root,1 point,Thu Jul 2 16:40:43 2015 UTC,I don't think this specific scenario is thought of by any library. Do it yourself?
swift,3bv3bv,bc879,2,Thu Jul 2 11:51:45 2015 UTC,"On mobile so not going to write code. And the answer will depend on how your laying out your views.   For example, If you're not using autolayout and doing everything with just frames, then you should just need to update the label's frame's origin.   If you are using autolayout then you probably need to update the layout constraint's constant that controls the horizontal layout for the label (e.g. the horizontal leading constraint or the horizontal center constraint, etc, maybe even the labels trailing constraint - it depends how your view is laid out). Then you may want  to call layoutIfNeeded on the view (depending on where this code is being used).  If you're using a UIStackView for layout then there's probably still another answer that someone else can provide (I haven't played around with that yet)."
swift,3bv3bv,CouldHaveBeenKing,0,Thu Jul 2 12:34:51 2015 UTC,"Thank you! That really helps, I'm using auto layout so I will try and see if I can update the constraints in my code.  Also, how could I not have auto layout for my label? I feel like if I don't put in at least three constraints for each label/button etc then their positions are really unpredictable haha"
swift,3bv3bv,CouldHaveBeenKing,1 point,Thu Jul 2 12:45:06 2015 UTC,"You should be able to get fine control a lot of the time with just 2 constraints for labels. Maybe there are situations where you want to also have control of a maximum width of the label (so it doesn't grow off the screen) which would require a couple additional constants.   If you weren't using autolayout at all and doing everything by frame size and position calculation for all your views, then you wouldn't be using constraints. I personally don't develop that way, but I know people who still do. I guess it comes from developing pre-autolayout."
swift,3bv3bv,souhoh,1 point,Thu Jul 2 12:59:44 2015 UTC,"Alright, thanks for the info! Much appreciated."
swift,3btle7,propr1,1 point,Thu Jul 2 01:14:11 2015 UTC,"how about instead putting the selected options in an array, and then using reduce to create a string?  let ar = [""1"", ""2""] ar.reduce("""", combine: +)"
swift,3btle7,voidref,1 point,Thu Jul 2 03:28:03 2015 UTC,"Check out the 'reduce' method on Array:  let val = [1, 2] let str = val.reduce("""") { ""\($0)\($1)"" }"
swift,3btrnn,naht_a_cop,1 point,Thu Jul 2 02:10:55 2015 UTC,"This is more of a Cocoa/osX question, I suspect."
swift,3btrnn,voidref,1 point,Thu Jul 2 03:17:49 2015 UTC,NSWindow has a screen property you can use for this. Use +[NSScreen screens] for the screens available on the current Mac.
swift,3btmcs,bulldogs93,1 point,Thu Jul 2 01:22:37 2015 UTC,"Users should get read-only access to your public database without an account, or read/write with an account. Obviously the private database requires an account either way."
swift,3btmcs,twostraws,1 point,Thu Jul 2 09:00:44 2015 UTC,I am using the public database to access my data but it requires me to log in to iCloud when testing on my phone. Is it because it is tied to my developer account?
swift,3br76p,xlogic87,4,Wed Jul 1 14:23:02 2015 UTC,IOS dev program is only $99 - just for clarification
swift,3br76p,Stephen110,1 point,Wed Jul 1 15:31:32 2015 UTC,"Yup, my mistake"
swift,3br76p,pukotoshana_murkals,1 point,Wed Jul 1 16:32:14 2015 UTC,You get both iOS and Mac now.
swift,3br76p,lo0p3r,2,Wed Jul 1 17:45:28 2015 UTC,"Yeah, you need the beta version of Xcode, it's already working, I tried it on 2 iPhones, both on iOS 8.x. You definitely don't need the iOS 9 beta. Just need an Apple ID."
swift,3br76p,twostraws,2,Wed Jul 1 16:21:28 2015 UTC,"Apple says, ""With Xcode 7, all you need is an Apple ID and you can develop and test on any device"" in its ""New Features in Xcode 7"" document, so I suspect it's available only with the beta. Give it a try, perhaps? The worst that can happen is Xcode 6.4 doesn't do anything."
swift,3br76p,fclout,-5,Wed Jul 1 14:29:28 2015 UTC,I think you also need the iOS 9 beta.
swift,3br76p,Sebaall,3,Wed Jul 1 14:40:06 2015 UTC,"No, you don't. I successfully run my apps without paying, with Xcode 7 beta and iOS 8.3 on my iPhone."
swift,3br76p,FR_STARMER,1 point,Wed Jul 1 17:43:14 2015 UTC,Which I believe you need a dev account to download.
swift,3br76p,Kazbin,1 point,Wed Jul 1 17:08:48 2015 UTC,"You can just go to developer.apple.com and login with your current AppleID and download Xcode 7 Beta. You do not need to be enrolled in the developer program. Just download, move to applications and you can start pushing your apps to your iPhone.     I'm not sure about it, as I only tested it on iOS 8 and afterwords on iOS 9. But I don't think it'll work on anything under iOS 8."
swift,3br76p,sethar_,1 point,Thu Jul 2 14:48:55 2015 UTC,"It will be with the new Xcode, 7 I think. So it won't work now."
swift,3br76p,RDSWES,2,Wed Jul 1 20:59:20 2015 UTC,"Apple released the first beta of Xcode 7 during WWDC, so it does work now."
swift,3br76p,wannadev,1 point,Wed Jul 1 21:07:18 2015 UTC,I guess I just cost my brother 100 bucks.
swift,3br76p,lessin,1 point,Wed Jul 1 21:11:34 2015 UTC,"I have Xcode 7 beta and I can confirm the ability to side load apps without having a developers license. I've had at least 3 apps on my phone to test things out. I'm pretty sure the certificates expire after 3 months through, so you'd need to just quickly reinstall."
swift,3br76p,elitegucci,1 point,Wed Jul 1 21:46:00 2015 UTC,Where do you download the beta? Is it stable/usable? And does it replace normal xcode or is it like a separate app?
swift,3br76p,thenewperson1,2,Wed Jul 1 23:11:33 2015 UTC,"Go to Apple's Dev Site and get it. It doesn't replace your current Xcode. Also, it's mostly stable (though I'm not sure if my issues are more related to being on 10.11 than Xcode itself)."
swift,3br76p,lessin,2,Thu Jul 2 00:23:41 2015 UTC,"it's usable and somewhat stable, it doesn't replace the normal xcode, it just adds a new app called ""X-Code Beta""  here's the download."
swift,3br76p,lessin,2,Thu Jul 2 03:31:31 2015 UTC,here's the download. It just adds a new app called xcode-beta
swift,3br76p,Lambaline,1 point,Thu Jul 2 03:33:25 2015 UTC,"The new Xcode will allow you to test your own apps for free. If you want to test your apps now, you'll need to jailbreak and install something called ""AppsyncUnified"" from Karen's pineapple repo and some software on your Mac. Full details are here."
swift,3br76p,lessin,1 point,Wed Jul 1 23:14:35 2015 UTC,"that's not true, I have multiple devices, jailbroken and non jailbroken, it works on both types of devices with no problems, doesn't even need the latest ios update."
swift,3br76p,Lambaline,1 point,Thu Jul 2 03:35:01 2015 UTC,Oh cool. I hadn't tried the beta Xcode yet
swift,3br76p,lessin,1 point,Thu Jul 2 03:39:04 2015 UTC,"I mean, your method works too, but you don't have to be jailbroken for this."
swift,3br76p,TGCraft321,1 point,Thu Jul 2 03:58:42 2015 UTC,To sign you App you need Xcode 7 beta. After you've signed your app you can use Xcode 6. I am currently having trouble rubbing my apps on iOS 8.4
swift,3br76p,zSprawl,1 point,Thu Jul 2 20:00:06 2015 UTC,"Perhaps I don't understand the question but...  Have you tried TestFlight? I use it to test apps with family and friends. First, you must add their iCloud account to your iTunes Connect as a tester, they download TestFlight from the app store, and then they can download your apps for 30 days to test."
swift,3bte2d,ssh_root,4,Thu Jul 2 00:09:28 2015 UTC,"Use an array, variable names are not made to be declared at runtime.  var event = [Event?](count: 8, repeatedValue: nil)   Gives a variable array of 8 optional Events filled with nil"
swift,3bte2d,Kametrixom,2,Thu Jul 2 00:15:33 2015 UTC,An array of optionals or an optional array? That's the question.
swift,3bte2d,souhoh,1 point,Fri Jul 3 19:27:09 2015 UTC,"and if you're really intent on having incremental names, a close alternative is a dictionary with strings formatted with incremental numbers as keys"
swift,3bt7dv,Dark_Angelas,3,Wed Jul 1 23:13:08 2015 UTC,"The two aren't related.  Swift property observers are meant to replace raw instance variables and custom setter/getter methods.    Instead of an instance variable and custom setter:  @interface MyClass @property NSString* title; @end  @implementation MyClass - (void)setTitle:(NSString*)newTitle {     NSLog(@""Changing title from %@ to %@"", _title, newTitle);     _title = [newTitle uppercaseString]; } @end   You have property observers:  class MyClass {     var title: String = """"  {         willSet(newTitle) {             NSLog(""Changing title from %@ to %@"", self.title, newTitle);         }         didSet {             self.title = self.title.uppercaseString         }     } }   KVO, on the other hand, allows external objects to be notified of changes to another object's properties.  E.g., a window controller could observe changes to a model's title property, and change the window title bar accordingly.  class MyModel: NSObject {     dynamic var title = """" }  class MyWindowController: NSWindowController {      var model = MyModel()      override func windowDidLoad() {         super.windowDidLoad()         self.model.addObserver(self, forKeyPath: ""title"", options: nil, context: nil)     }      override func observeValueForKeyPath(keyPath: String, ofObject object: AnyObject, change: [NSObject : AnyObject], context: UnsafeMutablePointer<Void>) {         if object === self.model && keyPath == ""title"" {             self.window?.title = self.model.title         }     }  }"
swift,3bt7dv,buffering,1 point,Thu Jul 2 00:19:23 2015 UTC,Bindings would be impossible without KVO so there's that. Also I don't know this for sure but I would imagine property observers just use KVO under the hood.
swift,3bt7dv,Nilhomini,1 point,Wed Jul 1 23:16:58 2015 UTC,"Nah, unfortunately (very unfortunately) kvo is not a concept at all in Swift (~1.2).  The custom getter setter is the same concept as properties in obj c, when using setPropertyName (technically you could observe the value change in that method, as long as you weren't using dot notation).  There are alternatives to kvo in swift, it's just not the same though.   This applies to swift classes.  Classes that inherit from NSObject are still kvo compliant."
swift,3bt7dv,Stephen110,1 point,Thu Jul 2 04:49:28 2015 UTC,"There are alternatives to kvo in swift, it's just not the same though.    Care to detail this?   It is a bit confusing right now as to which way to go."
swift,3brpld,atm_vestibule,1 point,Wed Jul 1 16:40:53 2015 UTC,"Have you tried this tutorial?  http://www.raywenderlich.com/32960/apple-push-notification-services-in-ios-6-tutorial-part-1  Push notifications are language independent, your server could be running node, php, whatever... as long as you package the payload correctly and have a valid certificate for the environment(s).  Handling the notification is where swift 1.2 vs 2.0 vs objective c comes in.  Have you gotten to that point, or are you not even receiving the push notification?"
swift,3brpld,Stephen110,1 point,Wed Jul 1 17:28:15 2015 UTC,"Yes--it didn't work. Well, most of it did, and I could get a notification from terminal via php script but the final http server to push notification didn't work. Ultimately what I'm trying to do is have an external device send a signal out... whenever... and from there based on what that signal is, notifies one of like five users using the app. e.g. if the signal is blue tell John, if it's red tell Joey..."
swift,3brpld,Stephen110,1 point,Wed Jul 1 22:10:30 2015 UTC,"Could you post the server side script used to execute the push notification (just the script, no cert or anything else please)"
swift,3bsz8g,voider1,3,Wed Jul 1 22:09:06 2015 UTC,Please don't try to use regular expressions.
swift,3bsz8g,twostraws,2,Wed Jul 1 22:19:08 2015 UTC,Funniest thing I've seen all day
swift,3bsz8g,jimmydapags,1 point,Thu Jul 2 04:04:21 2015 UTC,"I know, I'd never do that. :)"
swift,3bsz8g,lyinsteve,2,Sun Jul 12 23:06:03 2015 UTC,I'd highly recommend checking out Ray Wenderlich's How to Parse HTML on iOS
swift,3bsz8g,TheyCallMeMrPibb,3,Wed Jul 1 22:35:11 2015 UTC,The best thing about this tutorial is the part that makes you question why you need to parse HTML in your app and offers some potential alternatives.  I'd be interested to know what OP's use case is because parsing HTML directly within an app is the sort of thing I'd avoid if possible.
swift,3bsz8g,iOSKoray,1 point,Wed Jul 1 23:06:47 2015 UTC,"I'm making an app for personal use, just give me a notification when a new episode of something gets uploaded. Sorry for the late reply. ;)"
swift,3bsz8g,lyinsteve,0,Sun Jul 12 23:05:42 2015 UTC,But thats obj-c
swift,3bsa9d,Renkai,2,Wed Jul 1 19:08:38 2015 UTC,add a view inside the cells content view and set up some constraints. Then you pick the same color to the tableviews background and the cells view.
swift,3bsa9d,Strawberry_pie,1 point,Wed Jul 1 19:15:51 2015 UTC,Can you elaborate a little more on what you mean by adding a view inside the cells content view?
swift,3bsa9d,Strawberry_pie,2,Wed Jul 1 19:23:52 2015 UTC,"You have a tableview, inside it you have a cell. And inside the cell there is one content view. Thats the one you need to set as the same color as the tableview. Lets say you set it to red. Then you drag in a new view, an UIView. And place it inside the cell.   Create some constraint so there will be some gap, set the color to white (or what ever color you'd like). Then you will have a gap :)  Also remove the separator :)"
swift,3bsa9d,souhoh,2,Wed Jul 1 19:29:35 2015 UTC,Add a spacing cell. A cell whose job is to add spacing.
swift,3boxr2,twostraws,2,Tue Jun 30 23:30:10 2015 UTC,Got to see a live version of this yesterday. Brilliant talk and extremely handy. If only UIStackView did mean we could forget about Auto Layout and Size Classes :(
swift,3bq8qa,maxiedaniels,1 point,Wed Jul 1 07:17:37 2015 UTC,"You can call titleForRow yourself if you want, but it sounds like you're doing quite a bit of work in that method and that's where the difficulty lies.  If you're worried about performance, move the row title calculation somewhere else so you can make titleForRow not much more than an array look up, in which case calling titleForRow is cheap. You could use a shared method call on your model if you like.  If you're not worried about performance but instead about code duplication, just call titleForRow – if later on you find it's slow it's easily refactored."
swift,3bpmge,EngieVizion,5,Wed Jul 1 03:23:41 2015 UTC,"I wrote a free book teaching Swift from scratch, and it's available free online: Hacking with Swift.  As I see it, my book has a few advantages:   It's project-based, so you make real apps while you learn. I teach things as you need to know them, so you get a smooth learning curve and learn things in context. I come here to /r/swift regularly, so you can post here or on /r/hackingwithswift and I'll be able to help. I'm keeping it updated – I have a good selection of iOS 9 tutorials already available. Did I mention it's all completely free? :)   Obviously I'm hugely biased, but I think it's a rather good way to learn Swift :)"
swift,3bpmge,twostraws,2,Wed Jul 1 07:18:37 2015 UTC,Currently on Chapter 10 of this book and it is absolutely amazing.  You must try it out OP!
swift,3bpmge,Kishcoin,1 point,Wed Jul 1 12:59:15 2015 UTC,Awesome! Thanks for sharing. Just about to sit down and go through the tutorials :D
swift,3bpmge,danjadanja,1 point,Wed Jul 1 21:19:43 2015 UTC,Livecoding TV is a new service that has a few people that code in swift if learning by watching is your thing!
swift,3bpmge,koalefant,1 point,Wed Jul 1 04:51:29 2015 UTC,Definitely! Thanks for commenting
swift,3bpmge,bobvila2,1 point,Wed Jul 1 21:20:05 2015 UTC,I think before even delving into programming you should ask yourself what you want to build and go from there. It's much easier to pick up things when you have a purpose and goal in mind.
swift,3bpmge,Petronaut,1 point,Wed Jul 1 07:49:52 2015 UTC,"Primarily games, but would in general like to become educated in a computer language of some sort"
swift,3bpmge,Petronaut,1 point,Wed Jul 1 21:19:14 2015 UTC,"If you're already familiar with object oriented programming iTunes U has a good free class on Swift from Stanford. I have spent most of my time in Ruby and started going through that a couple weeks ago, it's a great intro."
swift,3bnjgb,_JasonMcCoy,4,Tue Jun 30 17:24:14 2015 UTC,"It's really cool that you're making an app to help with his aphasia. However, I think there are already AAC like apps out there, granted they're either super expensive or pretty horrible."
swift,3bnjgb,stacktion,1 point,Tue Jun 30 17:46:50 2015 UTC,"After looking at all the different types of apps out there, I'm thinking the general consensus is like you said, pretty horrible for the price being asked. I think the reason for this is because every person affected by aphasia need to be treated specifically based on their current situation and evaluation. The only way to know how to treat them properly, is to know the affected person personally.  Also, the tools (iOS apps) out there are not personally tailored for patients and are very broad if you know what I mean. So my goal is to make my app as personally tailored as possible for him to have as much reinforced positive emotions as possible when he gets the right answer. The last thing I want him to feel is being overwhelmed by the amount of wrong answers he gets, which aren't relevant to his recovery. Meaning, if we ask him to identify a random dog and he gets it wrong, it will be discouraging. But if we ask him to identify his dog, he may get it right because he is more emotionally attached to that image (dog), I hope. I am making one on paper right now, but I would prefer an app. Hope that makes sense.  Lastly, this app is a supplementary tool to help with his recovery and by no means a replacement for a speech therapist. I will continue to add more images to the app as they come available. Hopefully when I make this app, people will be able to take my app and replace my images with their own. I would never wish for this to happen to someone, but if this gives people any hope of their loved one being on a path to a successful recovery, why not try this."
swift,3bnjgb,stacktion,1 point,Tue Jun 30 18:29:00 2015 UTC,So is it supposed to be similar to a story book? What kind of goals does your dad have that you want to accomplish/supplement his recovery with this app? I know it can be super frustrating for the adult when they know what's going on but can't express anything so it's definitely important to make it stress free. And also sorry that this has happened to your father.
swift,3bnjgb,cjorgensen,1 point,Tue Jun 30 18:44:20 2015 UTC,"Yeah, I'm thinking a story book format. Right now, we're just trying to evaluate how severe his speech is affected, so this is a way. I'm thinking it'll be a short 15 minute exercise. The stroke was recent, so the speech therapists just want to evaluate him."
swift,3bnjgb,infinite_blot,2,Tue Jun 30 19:22:25 2015 UTC,"I had aseptic meningitis when I was in college. One of the drugs they gave me caused horrible aphasia for a short period of time. It was the most panicked I can ever remember being. I'd spout word salad and be so upset no one could understand me. I was making perfect sense to myself. It's nearly impossible to describe, but I knew the words I wanted, and what came out had nothing to do with what I was believing I'd said. I could hear the incorrect words, but my brain translated on the fly so everything seemed right to me. It was just other people that couldn't understand me.  Thankfully it didn't last that long. I thought I was having a stroke. As I was coming out of it though there was still a period of time where I could think of some words, but not others. I remember knowing how to say ""Doorway,"" but having no idea what goes in a doorway. I remember telling my mother the number of my neurologist was ""on one of those things you put addresses and phone numbers on and carry in your wallet to give to strangers,"" but business card was completely gone from my vocabulary.  It was scary and I am sorry your dad is having to go through this. I hope you find an option for him, and if it becomes a matter of too expensive for the app you want reach out."
swift,3bnjgb,cjorgensen,1 point,Tue Jun 30 20:38:41 2015 UTC,"Out of curiosity, what drug?"
swift,3bnjgb,aharpole,1 point,Wed Jul 1 05:28:01 2015 UTC,It was 25 years ago and I don't remember. It was something used to treat migraines. It was a giant pill.
swift,3bnjgb,applevsandroid,1 point,Wed Jul 1 13:08:31 2015 UTC,"Another possible idea: this app sounds pretty simple; you might find that it's easier to implement as a web app.  It's not too tricky to make an application for iOS that is actually a web bookmark that opens a full-screen browser that shows only your app. It can even have an icon on your home screen. A user doesn't even need to know it isn't a real app!  If you're primarily interested in getting the app built quickly, this might be a good route for you (and I'm happy to help if you run into any snags).   If you really would like to learn Swift and native app development, that's also cool and this is looks like a great way to dive in and learn about it!"
swift,3bnjgb,SimianLogic,1 point,Wed Jul 1 04:08:30 2015 UTC,Sent you a PM
swift,3bos3b,Renkai,2,Tue Jun 30 22:45:13 2015 UTC,"If I understand your question correctly, you're looking to set the hidesBottomBarWhenPushed property to ""true"" for any view controller that should hide the tab bar."
swift,3bos3b,twostraws,1 point,Tue Jun 30 23:39:36 2015 UTC,"Thanks for the response. I guess my issue is when I return to the first View Controller, the bottom bar disappears when I set the hidesBottomBarWhenPushed property to ""true"". Do you know if there is any way to add a method to the back button in the nav bar?"
swift,3bos3b,twostraws,2,Wed Jul 1 02:56:37 2015 UTC,"As long as A has hidesBottomBarWhenPushed set to false and B has hidesBottomBarWhenPushed set to true, you should be OK.  You can't connect a method to the Back button, but you can catch viewWillDisappear. Remember that will be called when going to other subsequent views (i.e., pushing another VC onto the navigation stack), so it's not uncommon to have a variable named something like ""navigationForward"" that is used for forwards navigation. If you set that to be true before you show any new view controllers and false when you return, it will be false when going back and you can take any appropriate action."
swift,3bp63x,bc879,2,Wed Jul 1 00:57:02 2015 UTC,"I made a small String extension, giving you an array of UInt8? (A value between 0 and 128 when the character is ASCII, nil otherwise:  extension String {     var ascii: [UInt8?] {         return unicodeScalars.map { $0.isASCII() ? UInt8($0.value) : nil }     } }  ""Hi, there :D 😏"".ascii   gives:  [72, 105, 44, 32, 116, 104, 101, 114, 101, 32, 58, 68, 32, nil]"
swift,3bp63x,Kametrixom,1 point,Thu Jul 2 13:45:12 2015 UTC,"Wow, thanks for that! I did solve my problem already, should've made an edit saying so lol. But that's pretty cool, I'll have to play around with your code. I'm still brand new to swift so I don't know anything lol. I'll show you what I did if you're interested once I get to my computer!"
swift,3bp63x,Kametrixom,1 point,Fri Jul 3 00:00:14 2015 UTC,let firstASCII = var1.currentTitle.utf8.first!   Gives a CodeUnit which is equal to UInt8 (between 0 and 255)
swift,3bp63x,Kametrixom,1 point,Wed Jul 1 01:44:38 2015 UTC,"wow, that seems much simpler. I tried it out but i'm getting a 'Type of expression is ambiguous without more context' error"
swift,3bp63x,Kametrixom,1 point,Wed Jul 1 02:14:59 2015 UTC,"Can't use computer right now, but something like this should be possible"
swift,3bp63x,cryo,1 point,Wed Jul 1 08:12:51 2015 UTC,"This does work for me (Swift 2):  let str = ""hi you"".utf8 let first = str.first        // first = 104 let second = str[str.startIndex.successor()]         // second = 105 let third = str[advance(str.startIndex, 2)]         // third = 32"
swift,3bp63x,cryo,1 point,Wed Jul 1 15:41:45 2015 UTC,"But hardly ASCII, unless you're sure your original text contains only ASCII characters. Otherwise, of course, there is no way to get the ASCII value as there isn't one."
swift,3bp2dh,tidwall,2,Wed Jul 1 00:10:48 2015 UTC,Looks cool! Are there any limits to this compared to the Go implementation?
swift,3bp2dh,lusion,1 point,Wed Jul 1 15:44:50 2015 UTC,"No functional limitations for channels. The select keyword is native to Go, but with Swift it's compiled at run-time. So there's a slight performance hit for using select in Swift, though it should be negligible."
swift,3bp2dh,TheyCallMeMrPibb,2,Wed Jul 1 23:59:15 2015 UTC,"Whoa, I was recently thinking about how useful something analogous to Go channels would be in Swift! Does the underlying implementation use GCD?   This looks absolutely brilliant and I can't wait to play around with it, thank you for sharing!"
swift,3bq9fh,bc879,3,Wed Jul 1 07:26:53 2015 UTC,"static as in storage duration or static as in member qualifier?  If you're looking for the former, all top-level lets and vars have static storage duration; they exist the whole lifetime of the program.  IIRC, Swift goes a step further by making their initialization lazy by default!  static the member qualifier is, as you said, a keyword you can apply to variables and functions in classes and structures."
swift,3bq9fh,CodaFi,1 point,Wed Jul 1 08:42:09 2015 UTC,"Well the static keyword in the C/C++ world is pretty confusing as it can mean so many things. To add to what CodaFi said. If e.g. you want to use static to make a function or global variable private to a file, you can use private in Swift. Private and public access modifiers in swift apply to files and not classes and structs."
swift,3bq9fh,lusion,1 point,Wed Jul 1 20:26:09 2015 UTC,"Just put static before the variable declaration, and it will live at class/struct/enum scope.  class Thing {     static let property = ""Constant!"" }  enum Something {     static let property = ""Constant!"" }  struct AnotherThing {     static let property = ""Constant!"" }  Thing.property Something.property AnotherThing.property   All of those work"
swift,3bofr2,dotcomputer,5,Tue Jun 30 21:12:48 2015 UTC,"The biggest difference is known as ""passing by reference"" vs. ""passing by value"". For a class, when you talk about its name in your code (in your example car1) all you're really talking about is its name. in contrast, when you talk about the name of a struct, you're talking about the actual thing. And the code acts like that. Here's an example:  class SomeClass {   var a, b: Int   init(a: Int, b: Int) {     (self.a, self.b) = (a, b)   } } struct SomeStruct {   var a, b: Int }  var cla = SomeClass (a: 1, b: 1) var str = SomeStruct(a: 1, b: 1)  var ar1 = [cla] var ar2 = [str]  cla.b = 2 // {a 1, b 2} str.b = 2 // {a 1, b 2}  ar1 // [{a 1, b 2}] ar2 // [{a 1, b 1}]   The arrays act differently here - ar1 contains the name of cla, whereas ar2 contains a copy of str. So, when you change a property of str, you don't touch what's in the array.  The other differences kind of follow from this: immutability is more applicable to structs, for instance. All of these things allow the compiler to perform some serious optimisations, which means, in practice, that structs are far, far faster.  So why would you use a class? Well, in the past one reason might have been in order to allow a certain type of inheritance. But we're all drinking the protocol-oriented-programming gatorade these days (as we well should - on the off chance you've not seen this fantastic talk stop reading right now and watch the bejaysus out of it), so that's not really applicable anymore. What is still applicable is shared state - if you want something to be passed by reference, classes are the way to go."
swift,3bofr2,foBrowsing,1 point,Tue Jun 30 21:28:44 2015 UTC,"I notice the pattern in your class example, and thanks for that, but the lingo or 'ars' and a, b's throw me in an endless loop, logically lol. But I may use it to come up with a more dumbed down class.   If you have time, would you be able to comment the lines or chunks of code?  Will check out the link in detail tmrw night and to some test in the Playground. Thank you again."
swift,3bofr2,lusion,1 point,Wed Jul 1 02:36:54 2015 UTC,"To add to foBrowsing. Structs are things such as int, float, point, vector2D, circle, range, index etc. Basically smaller objects you want value semantics for, meaning assigning from one variable to another should make a copy. Classes are things such as Person, Car, Window, Sprite, Scene, BankAccount etc. That is larger objects which has a more clearly defined identify and were you definitely don't want things to accidentally get copied. Variable assignments should just create a different pointer/reference to the same object."
swift,3bos5i,Airglow26,2,Tue Jun 30 22:45:33 2015 UTC,"I think you've got some fundamental issues with your data structures. Why have your Fields represented as elements in an array of the fields hold different information?  You'd do much better to add those as individual properties to your Event struct.  Your logic also doesn't do what you think it does.  Where is the original array coming from? If it's an array you're creating, consider passing an array of structs instead.  EDIT: Okay, I just realized it's coming from Hpple. That makes more sense.  Well, let's look at what you're getting and the best way to turn that into usable data. You said they're in a long array, and each 4th element marks a new event?  Well, we can use Swift's Stride that iterates through every n items.  So we can make an Event struct, like this:  struct Event {     let event: String     let date: NSDate     let points: Int     let venue: String }   Note that I combined date and time into an NSDate, because that manages both dates and times. You'll need to combine the time and date, separately, into an NSDate. I can help with that once you get there.  Let's look how you build those Events.  Say you've got an array of nodes that's got the following format:  let nodes = [""Correspondent's Dinner"", ""9:00PM"", ""44"", ""April 25th"", ""White House"", ...] // Assuming each element is a TFHppleElement with those strings as their 'content'   You can stride over them like so:  var events = [Event]() for index in stride(from: 0, to: nodes.count, by: 5) {     let eventName = nodes[index].content     let time = nodes[index + 1].content     let points = Int(nodes[index + 2].content)! // careful here, if the HTML doesn't actually convert to Int, this will crash.     let date = nodes[index + 3].content     let venue = nodes[index + 4].content     let event = Event(event: eventName,                       date: /* parsed NSDate from 'time' and 'date' */ NSDate(),                       points: points,                       venue: venue)      events.append(event) }   Depending how your data is structured, that should give you a properly parsed Event list."
swift,3boa5u,Townsocks,2,Tue Jun 30 20:31:47 2015 UTC,"it's not declaring a function, it's calling a function. row and column (the second one) are declared by the subscript above  the function being called: indexIsValidForRow(row:Int, column:Int) -> Bool  so for example if you did  var foo = Matrix(rows:4, columns:4)  foo[10][4]  would throw a fatal error of ""Index out of range"" when the subscript getter called  assert(indexIsValidForRow(10, column:4))"
swift,3boa5u,SimianLogic,1 point,Tue Jun 30 21:47:32 2015 UTC,Oooo... I can see it better now. The column:column example they used threw me off. They could have used a different name!
swift,3boa5u,lusion,2,Tue Jun 30 23:47:30 2015 UTC,"I have to speculate what your misunderstanding is. I think you are confusing the different usage of the : (colon) symbol. For instance:  let rows: Int, columns: Int   This defines columns as a variable of type Int. How do I know this. I look at the very first keyword in the statement. It says ""let"" that means I am defining a variable and thus anything coming after the colon is a type. However:  assert(indexIsValidForRow(row, column: column)   What keyword does this statement start with? Swift is easy, the first keyword says what it is. If it is not var, let, for, if, while, init, func, class, protocol or some other keyword then we got a method or function call.   So indexIsValidForRow is a method call. That means the : symbol (colon) has a different meaning. It is separating the name of an argument and the argument value. So ""column: column"" in this context means, argument column gets the value of variable column.  What makes me a bit in doubt about whether this is your issues is that you have not complained about this in much earlier code, as this pattern is repeated all over the place."
swift,3boa5u,cryo,2,Tue Jun 30 21:58:35 2015 UTC,"You're right, it was the "":"" that was throwing me off (along with using the same name twice). Surprisingly enough, it didn't register to me as odd as up to that point in the book.   I bet the reread will show me I got everything backwards and upside down =P"
swift,3boa5u,tonygoold,2,Tue Jun 30 23:50:30 2015 UTC,Please format code better for Reddit:   empty line before and after four spaces before each line
swift,3bnyfx,RoadRageRR,1 point,Tue Jun 30 19:08:09 2015 UTC,Could you post the code where you use that function?
swift,3bnyfx,lyinsteve,1 point,Wed Jul 1 04:13:20 2015 UTC,"That's the thing, everything I do seems to fail when trying to call it. I've done it in other languages, but not swift, and Google turned up nothing. I know it's just one line, but for the life of my I cannot generate a workable solution.."
swift,3bnyfx,lyinsteve,1 point,Wed Jul 1 12:16:16 2015 UTC,"Gotta cover all my bases here: Is that file in your Compile Sources list? Click your project at the top of the Xcode file navigator, then click Build Phases and look in Compile Sources."
swift,3bk48e,Schikelgrubber,11,Mon Jun 29 21:42:07 2015 UTC,"Ugh, requires flash."
swift,3bk48e,voidref,7,Tue Jun 30 01:45:06 2015 UTC,I was excited until I saw flash. I'll stick to twitch.
swift,3bk48e,Hawk_Irontusk,4,Tue Jun 30 02:17:10 2015 UTC,can anyone stream? do I have to be good to stream?
swift,3bk48e,mavdev,2,Tue Jun 30 00:10:37 2015 UTC,"If it's like Twitch then no, you don't have to be good at all."
swift,3bk48e,alt51,2,Tue Jun 30 07:54:56 2015 UTC,"Every now and then you might catch some iOS development, but for the most part it's about half game development and half web development.  Still pretty cool to watch though."
swift,3bk48e,alt51,1 point,Tue Jun 30 07:57:29 2015 UTC,What does this offer over using Twitch's own Development/Programming category?
swift,3bk48e,Ignisar,1 point,Tue Jun 30 09:17:33 2015 UTC,A.W.E.S.O.M.E
swift,3bludj,bc879,1 point,Tue Jun 30 07:08:15 2015 UTC,"I may be wrong but in the switch statement, two doubles are not actually passed to the performOperation function. A block is passed and it will do something with two parameters ($0 and $1) once it's called.  That's why in performOperation, the operation method is called with two parameters that are popped from the operandStack (operandStack.removeLast()).  Hope I'm making any sense ... :)"
swift,3bludj,TheStigec,1 point,Tue Jun 30 07:40:25 2015 UTC,"Alright, so I understand the second part of your explanation, but not the first part lol. What do you mean by a block is passed? Do the $1 and $0 contain no doubles until the operandStack.remove part is called and are returned back to inside the switch statement? Still very confused haha  Thanks for replying!"
swift,3bludj,cryo,5,Tue Jun 30 08:05:21 2015 UTC,"You need to read up on closures in Swift. Basically, an anonymous function is passed as a method parameter, and called from within performOperation. The $0 and $1 are short-hand syntax for the first and second argument respectively.  https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html  It looks like there is a problem with the square root operator, by the way, since it will pop two arguments off the stack and call a function which only accepts one (and will also discard the other one)."
swift,3bludj,idiomatic,1 point,Tue Jun 30 09:01:19 2015 UTC,"Oh cool, thanks for that! I'll check out the documentation. And yeah, theres a separate function for sqrt that I just didn't include.  Thanks for your help!"
swift,3bl56t,jemmons,2,Tue Jun 30 02:48:14 2015 UTC,"I have really loved these two articles.  I get a sort of geekish satisfaction about thinking about how clever it seems to create this cool Haskell  way of doing things but make it look like regular C#/Java way of handling errors, while at the same time building on swift constructs already established and useful by themselves. And then to top it off them made it very naturally fit in with the existing Objective-C way of dealing with errors.  There is a kind of cleverness about this I think is seldom appreciated. People will usually praise fancy stuff in made from the ground up languages like Haskell or Rust. But I think it is equally impressive to figure out how you can bolt on some really elegant functions onto something existing which has a lot of limitations. Finding clever solutions to the messiness of the real world takes its own sort of genius."
swift,3bl56t,lusion,1 point,Tue Jun 30 22:09:36 2015 UTC,"This is exactly what I was trying to say with these articles, and you've said it so much better than me, here. Thanks so much!"
swift,3bl56t,lusion,1 point,Wed Jul 1 17:59:16 2015 UTC,"Why thank you :-) I usually find myself complementing others for saying things the way I wanted. I did the cheapo work though as you went through all the trouble of really analyzing this stuff. I really like to know what is going on in the code I write. It gets a bit distracting for me when I have no idea what the memory and CPU implications of what I do. Maybe a bad habit from having done C/C++ for too long.  To further rant a bit about the under-appreciated. As a developer with over average interest in UX and design. It does annoy me a lot how fellow tech geeks and developers seldom appreciate all the hard work that has gone into Apple products. When some user interaction is completely natural nobody even notice it is there, and so it is taken for granted.  I feel Swift is a bit similar. People easily just look at it as a bag of features, without appreciating that the difficulty of blending in a language which is fundamentally different from Objective-C. Objective-C is like a type hippie, anything goes, there are no rules, it is all zen. While Swift is this crazy static type nazi, that will get on your case for the smallest mistake or wrong assumption."
swift,3bl08m,bc879,1 point,Tue Jun 30 02:06:48 2015 UTC,"I feel like I must be misunderstanding your question.  Do you mean, just incrementing the unicode character?"
swift,3bl08m,shiggie,1 point,Tue Jun 30 05:00:33 2015 UTC,"Yeah, pretty much that. So I want a button that with every click, the buttons' text will change to the next letter in the alphabet, once it gets to the last one, it should loop back around to the letter 'A' again (i'm guessing that will be a simple if statement for the last letter). How do I increment through the unicode characters? (if that's the best way to do this). I've incremented through ASCII values before in c++ but not sure how to in swift  Thanks for taking the time to reply!"
swift,3bl08m,nosyws040,1 point,Tue Jun 30 05:16:35 2015 UTC,"I can use unicode encoding to do that but failed in Character, it hasn't a init method with int parameter      let c:Character = button.titleLabel!.text!.characters.first as Character!     button.setTitle(""\(UnicodeScalar(c.unicodeValue() + 1))"", forState: .Normal)   and unicode value extension from http://stackoverflow.com/questions/24463992/converting-character-in-an-array-to-an-integer     public extension Character {    public func utf8Value() -> UInt8 {         for s in String(self).utf8 {             return s         }         return 0     }      public func utf16Value() -> UInt16 {         for s in String(self).utf16 {             return s         }         return 0     }      public func unicodeValue() -> UInt32 {         for s in String(self).unicodeScalars {             return s.value         }         return 0     }     }"
swift,3bi5pl,cathkay,1 point,Mon Jun 29 12:34:23 2015 UTC,"Okay so Swift throw is really just returning Either types, but is there any way a developer can actually experience the difference between this an a Java style throw? Are there things you can do with one of the systems which can't be done with the other?"
swift,3bi5pl,lusion,1 point,Tue Jun 30 22:18:36 2015 UTC,"It's not really returning Either types, but it's somewhat conceptually equivalent to it. It's essentially a pure compiler feature, whereas in Java and C# it's a runtime feature (stack unwinding).  In C# an exception can happen everywhere and for any reason. They are much tighter controlled in Swift."
swift,3bi5pl,cryo,1 point,Tue Jun 30 22:28:12 2015 UTC,"cryo gave you a correct answer. It's equivalent to return, but not exactly a return, because it can throw errors of any kind and you can't specify it. Nick Lockwood wrote exact same thing about similarity to Java exceptions in his article"
swift,3bjnoa,dotcomputer,5,Mon Jun 29 19:41:36 2015 UTC,"It seems like you may want to take a step back and perhaps take a course on Object Oriented Programming.  You've got a lot of questions in your post so I'll try to just give some basic pointers.  You should think of Classes as something that describes a certain type of object. For my example, let's have a Car class that will describe a car. Any function written for this Car class should perform a certain action on our car. We also need to think of the properties of the Car. Here's a few  var speed: Double var color: UIColor var make: String var model: String var year: Int   So, then we might have some functions like  func accelerate() -> Double {     speed += 1.0     //return the speed in case we want to know what our new speed is     return speed }  func stop() -> Void {     speed = 0 }   etc...  No, obviously not all of your functions can live in these objects. You might need to add some functions to your view controllers, so you can connect your buttons and other UI elements actions to them, but the classes and their functions are what you should use to make changes to your data (normally called your 'model').  Let me know where else I can expand on this."
swift,3bjnoa,waterskier2007,1 point,Mon Jun 29 20:56:31 2015 UTC,"Car and animal are two common examples in OO but they're pretty awful because they're so hard to relate to what programming you already know.   Class conceptually do four things: namespace, bundle data, bundle behavior, and extend behavior.   Namespacing is the easiest to understand: it's nice to have a hierarchy of names, like math.squareRoot or whatever.  Data bundling is a little trickier but not too bad. Imagine you have a line drawing function. How should its call signature look? It could be drawLine(x1, x2, y1, y2) or drawLine(x1, y1, x2, y2), but really it would be more clear as drawLine(point1, point2). So make up a class called Point and say it has an X and Y as members of it. A class is just a way of bundling together related data.   The third thing is where it gets tricky. Let's say we want to talk about reading in data. It could be from a local file, from user typing, from the Internet… whatever. We just want to know whether a thing can be read. Well one way is to make a class with a Read method and then make subclasses for the different things you want to read. Then just specify you need a Reader and let the subclass get switched out later.   Finally, once you understand the idea of subclassing it lets you write code with the idea that different behaviors can be swapped in as new methods in a subclass later."
swift,3bjnoa,earthboundkid,-1,Thu Jul 2 03:33:44 2015 UTC,"It is not bad with free functions. But we do need to stuff data into some data structures right? Say we have a point struct with an x and y coordinate. We want those to go together.  Some data is such that we want to make sure users of the data is not using it in the wrong way by mistake. So you hide the member variables of you data type (class or struct) and only allow the data type to be manipulated by directly by some method you have attached to the class.  This is what we call encapsulation which is an important principle in OO programming and many other paradigms.   You can of course provide extra free functions which operate on your data type but now those functions can only function by calling the methods you have exposed. They can't fiddle with the internal data of the data type, and thus you as a creator of that data type can be certain it is not used in the wrong way.  Be pragmatic. If you don't need a class, don't use it. I don't see any benefit of having a class for each IBAction, that just sounds painful.  Finally from the point of view of an IDE, it can be useful to have classes just because you can then easily get method completions on an object showing you what you can do with that type."
swift,3bjc7l,minsanity6,3,Mon Jun 29 18:20:40 2015 UTC,"Okay I am not going to look at this in detail but here are a few pointers. Dismissing a view controller does not throw it out of memory, so there is no reason why you should see a memory reduction. However you should not see the memory usage keep increasing each time you show the view controller.  Secondly you got to read up on some theory and not just hack around. Understand what stuff is. weak pointers don't take ownership. If you don't understand what that means, just read up on it in Apple's Swift book. So if an object is only pointed to by a weak pointer which is the case with your GameScene, that object will be freed  almost immediately and the weak pointer set to nil, because there is no pointer holding on to it. Nobody has ownership of it.  When all strong pointers stop pointing to an object, that object will be deallocated and all weak pointers pointing to it will be set to nil."
swift,3bjc7l,lusion,1 point,Mon Jun 29 21:07:44 2015 UTC,"Thank you for your answer. I did read relevant pages in Apple's Swift book, but I'm still struggling with fixing ""memory keep increasing"" problem. Honestly, I don't even know why the memory gets piled up every time I dismiss and call it again. I just can't figure out what is causing this problem. For different View Controllers, memory gets reduced as I dismiss the VCs, but this one just doesn't work..."
swift,3bk234,atm_vestibule,1 point,Mon Jun 29 21:27:08 2015 UTC,"I already have the system in place to where the correct user gets an SMS, so even the user data isn't that important. But it'd be nice for future development.   Instead of sending an SMS, is there a system in place where the app can listen for a certain event at some address or something?"
swift,3bk234,dwltz,2,Mon Jun 29 21:28:42 2015 UTC,You might want to look into remote push notifications :)
swift,3bjf68,vlastimilfiser,1 point,Mon Jun 29 18:41:37 2015 UTC,"Do you need to use the Facebook SDK? If not, use the built-in iOS APIs and you should be able to attach a link unless things have changed even further."
swift,3bjf68,twostraws,1 point,Mon Jun 29 19:15:18 2015 UTC,"I have the native functionality implement already now. But I can't share dynamic text string into the alert view. The native SDK is just test, if is it possible to do it with official library - but this is not the right way. The issue is on the FB Policy side. :("
swift,3bjf68,dwltz,1 point,Mon Jun 29 19:25:16 2015 UTC,"I don't think Facebook allows pre-filled share texts anymore. About a year ago I built an app (not iOS) that would allow a user to share a video they would record in an interactive installation. Facebook rejected our app because we would fill the share text with a standard message. Even though the user could still customizes it, we weren't allowed to suggest a text.   I think iOS won't be (much) different in the aspect.."
swift,3bj2ep,squarefrog,6,Mon Jun 29 17:10:17 2015 UTC,It probably wouldn't but there's really no reason you should have to do this. This is really bad user experience.   What exactly are you struggling with?
swift,3bj2ep,squarefrog,1 point,Mon Jun 29 17:28:31 2015 UTC,I don't get why this happens.......
swift,3bj2ep,milo526,1 point,Mon Jun 29 17:29:51 2015 UTC,Would you like to see my code?
swift,3bfboy,foBrowsing,3,Sun Jun 28 18:42:29 2015 UTC,"Very nice and Swifty! I don't know if I could use this in any of my projects, but I'll keep this in mind ;)"
swift,3bfboy,Kametrixom,2,Sun Jun 28 19:16:20 2015 UTC,"Cheers! Yeah, I went mad with protocol extensions. Great fun."
swift,3bfboy,Kametrixom,1 point,Sun Jun 28 20:05:17 2015 UTC,"I just read some of your source-code...  And wow! It's amazing! I think I never have seen anything more beautiful and Swifty! You really made great use of the latest features and also used ones that most people probably don't even know. I'm really amazed in how you did this, you're a genius to me, the true King of Swift.  What's your background though? Obviously you like Python and Haskell, but what have you been working as? What have you done to be so good at this? Because this is truly a masterpiece."
swift,3bfboy,Kametrixom,3,Tue Jun 30 19:15:07 2015 UTC,"Gosh, I'm blushing. I started learning programming maybe a year ago - procrastinating from my exams. The Stanford course. I maybe knew a little Python before then, but I've only started Haskell since, and I'm still struggling through it (chapter 5 of ""learn you a Haskell"" at the moment). I've also done a bit of C.  That code you're looking at is the result of a tonne of iteration, and it's literally all I'm good at. Since I'm not a professional programmer, the easiest projects for me to do are to write library-like things like this (rather than, say, an actual app). Since I've no computing background, I couldn't (yet!) do a more practical framework, like something to do with networking, or something that integrates with some other service. So what I'm left with are basically the math functions, sequence functions, and string functions. And sequence functions are the most fun!"
swift,3bfboy,Kametrixom,2,Tue Jun 30 20:10:33 2015 UTC,"Awesome! I understand, I'm too not very good at integrating with other stuff (I tried a few but I wasn't amazed). I have started (kinda) programming 7 years ago (I was little) with VBA, a few years later I started with Java, got really into it. Then Swift came out a year ago and now I don't even know Java anymore. I'm actually really motivated now to learn Python, Haskell and to write something as beautiful as your framework in Swift.  What are you studying right now?"
swift,3bfboy,lusion,3,Tue Jun 30 20:24:29 2015 UTC,"Medicine at the moment. Nowhere near as fun.  Yeah, since I'm doing it as a hobby I've the luxury of just learning and doing what's fun - Python and Haskell fit right into that. I haven't done Python in a while, but I'm loving Haskell so far. The interpose function, for instance, in Haskell, is:  interpose :: a -> [a] -> [a] interpose _ (x:[]) = [x] interpose y (x:xs) =  x : y : interpose y xs   Which just blows my mind. (it's completely lazy! whaaaaat?!)  If you're into generators in Python (they've got some cool features that Swift will probably never have) David Beazley is the guy to look up. Ooh, and Raymond Hettinger - how could I forget. He's probably one of the best speakers I've ever seen in the world of programming, and he wrote itertools: the library that I was trying to emulate.  I'm struggling with this practical malarkey even now, though. I just cannot figure out cocoapods. I've seen so many talks saying ""oh they revolutionised code sharing on iOS"", or ""oh they made it so easy"" and it's all whizzing over my head."
swift,3bf4hy,questdark,3,Sun Jun 28 17:40:54 2015 UTC,viewDidLayoutSubviews
swift,3bf4hy,kurostyle5,1 point,Sun Jun 28 18:15:01 2015 UTC,This is exactly what I was looking for. Thank you man.
swift,3bf0ev,phriend2spin,12,Sun Jun 28 17:04:19 2015 UTC,"I've noticed a disturbing trend of beginners using force-unwrapping all over the place because they don't understand optionals and they think ! ""fixes"" things.  I think teaching the purpose of optionals and how to handle them safely is essential for any beginner course."
swift,3bf0ev,JimDabell,3,Sun Jun 28 18:16:56 2015 UTC,There's a real trend of beginners to just do whatever it takes to make programs compile -- without actually letting the compiler help you.  So I'd say you should start by telling them how the compiler is there to help 😉
swift,3bf0ev,lyinsteve,2,Sun Jun 28 18:41:45 2015 UTC,"Of course interop often makes that necessary, but I try to isolate it as much as possible (e.g. by unwrapping in the overridden method and calling a private method with the result). It's getting much better, though."
swift,3bf0ev,cryo,1 point,Sun Jun 28 18:40:13 2015 UTC,Thanks this will be for students who are proficient in Java and C#.
swift,3bf0ev,lusion,5,Sun Jun 28 18:51:03 2015 UTC,"Yeah I second this. At my work I see the ! abused all the time and people writing stuff like:  if foo != nil {     foo!.doStuff() }   Instead of using the more idiomatic and less likely to screw up approach:  foo?.doStuff()   It is also important to be aware of the ?? operator. I use that a lot to provide default values. E.g. I wrote some string functions to find the start of a word given a caret.  let i = self.rsearch(caret)?.successor() ?? startIndex   So rsearch here is an extension I created which searches backwards for first occurrance of whitespace. That might of course fail and return nil, since there might not be a whitespace. But in this case the word boundary should be from the very beginning, which is elegantly solved with the ?? operator."
swift,3bf0ev,hagerty9009,3,Sun Jun 28 21:54:17 2015 UTC,http://swifteducation.github.io
swift,3bf0ev,RDSWES,1 point,Sun Jun 28 19:34:57 2015 UTC,Any idea if they have anything like this for Android? I am also in charge of restructuring the Android class. This looks awesome so far.
swift,3bf0ev,hagerty9009,3,Sun Jun 28 23:14:25 2015 UTC,"This is actually Apple endorsed, if not outright sponsored by Apple. They link to it from :  https://developer.apple.com/education/"
swift,3bf0ev,lusion,1 point,Mon Jun 29 01:15:38 2015 UTC,"Not that I know of, I'm sorry."
swift,3bf0ev,tjnson,3,Mon Jun 29 01:13:50 2015 UTC,"One of the biggest things if these is C# and Java developers is to know that Swift is not on a VM, compiles to native code and does not use a garbage collection. So students need to understand object ownership, reference counting, how to avoid reference cycles, and understand how you use weak pointers.  I mean in every day usage you hardly ever have to think about this, but any Swift developer should be aware of this.  Not sure about C# people, but Java developers seem to be really into throwing exceptions left and right for almost anything. That is not the swift way. Most simple error handling is just deal with by having an optional type as return value, so nil can signal failure.  Other things that are quite different from a Java perspective is that primitive types such as int and float are actually structs in Swift so they can have methods and implement protocols and such.   Initializers is also quite different from Java and C# and probably requires more coverage that is needed in these languages since they can return nil and there the distinction between designated initializers and convenience initializers."
swift,3bf0ev,naughty_ottsel,3,Sun Jun 28 22:06:03 2015 UTC,"The best thing about swift is how the design is heavily based off protocols. Try and get in the habit of writing things with protocols in mind.   developer.apple.com has a great video called ""protocol programming with swift"" I would highly recommend watching."
swift,3bf0ev,tjnson,1 point,Sun Jun 28 23:49:46 2015 UTC,"Upvote!  I have done the slightly backwards way of writing a class, then creating an abstract protocol from it. Protocol extensions make it even better with default implementation."
swift,3bf0ev,naughty_ottsel,1 point,Mon Jun 29 14:15:32 2015 UTC,"I like to think of a protocol like a header. Write the protocol first, then a class to conform to it. Just me though."
swift,3bf0ev,ThorBreakBeatGod,1 point,Mon Jun 29 22:03:58 2015 UTC,"I think that should be the proper way to do it, but then sometimes it can be handy to abstract it out. But then Protocol Extensions kind of eliminate that, especially when adding additional properties and methods."
swift,3bf0ev,lusion,4,Tue Jun 30 07:45:54 2015 UTC,"Gotta be honest,  If you're writing the curriculum,  and going to reddit for advice, there's an issue that needs to be addressed."
swift,3bf0ev,ThorBreakBeatGod,3,Sun Jun 28 19:23:48 2015 UTC,"Come on this is how it often works. When my school switched from C++ to Java in intro courses, professors had to learn the language over the summer  before they started the semester.  If you know programming, then switching to another language should not be a huge problem.  There is nothing wrong with admitting you don't know everything."
swift,3bf0ev,zebonebo,1 point,Sun Jun 28 21:47:12 2015 UTC,Well no one else wants to touch Swift and I'm the only one trying build interest in my department. So I'm all they have.
swift,3bf0ev,downvotefodder,1 point,Sun Jun 28 19:49:21 2015 UTC,"Fair enough, but i'm surprised no one wants to touch swift, it's a decent enough language, considering how young it is!"
swift,3bf0ev,Awric,0,Mon Jun 29 00:32:32 2015 UTC,I say good on your for seeking the input of presumably seasoned professional Swift developers (to the extent that a year of using Swift can season somebody). Who would know better than actual experienced Swift programmers what the shortcomings of new Swift programmers are? I have experience teaching programming and I can confirm that the people who use the language professionally are the people who know the pain points.
swift,3bf0ev,vinags,7,Wed Jul 1 17:42:32 2015 UTC,If you don't  know then what the fuck are you doing writing the curriculum?
swift,3bf0ev,Pumafied,11,Sun Jun 28 17:35:07 2015 UTC,"I know I'm probably gonna get downvoted to hell for this, but it's comments like these that make this subreddit (or most computer science forums) unapproachable. People like you are too damn hostile."
swift,3bf0ev,Awric,2,Sun Jun 28 23:06:45 2015 UTC,Here! here!
swift,3bf0ev,zebonebo,1 point,Sun Jun 28 23:16:01 2015 UTC,As a whole computer science forums are unforgiving to newcomers and thats a huge short coming of them however I don't think this is the normal hostility. He / She is writing the curriculum and doesn't know what they hell they are doing.
swift,3bf0ev,spinwizard69,0,Sun Jun 28 23:50:55 2015 UTC,"I agree. My apologies for calling you out /u/downvotefodder, it's just a bit frustrating to see similar comments that are way more negative than this."
swift,3bf0ev,ak1ngs,0,Sun Jun 28 23:55:46 2015 UTC,"The OP gives no indication they don't know what they are doing. OP is simply asking the Reddit Swift programming community for some input, which is an entirely valid thing to do. The OP is actually giving you the opportunity to influence the education of future Swift programmers. Maybe try not taking a shit on the opportunity and instead actually being helpful? Just a thought."
swift,3bf0ev,zebonebo,0,Wed Jul 1 17:38:15 2015 UTC,But was he wrong?
swift,3bf0ev,ReasonReader,3,Mon Jun 29 02:26:51 2015 UTC,"Just getting ideas from other people, calm down."
swift,3bed95,swift_n00b_alert,2,Sun Jun 28 13:04:58 2015 UTC,"I don't think there is a place for more nooby questions, although on Stack-Overflow you can often see very.. let's say basic questions ;P  What you're trying to do is:  println(UInt64.max - UInt64(Int.max))   It didn't work because UInt64 and Int are not the same type. And to be able to do subtraction, you have to use the same types. So because UInt64 can have larger values than Int you should cast the Int.max value to an UInt64.  Btw:    UInt64 is equal to UInt Int64 is equal to Int"
swift,3bed95,Kametrixom,1 point,Sun Jun 28 13:11:49 2015 UTC,"From The Swift Programing Language:   In most cases, you don’t need to pick a specific size of integer to use in your code. Swift provides an additional integer type, Int, which has the same size as the current platform’s native word size:   On a 32-bit platform, Int is the same size as Int32. On a 64-bit platform, Int is the same size as Int64.    The same is true for UInt/UInt32/UInt64."
swift,3bed95,SirGlaurung,1 point,Sun Jun 28 14:17:21 2015 UTC,"Oh yeah right, thanks"
swift,3bed95,Kametrixom,1 point,Sun Jun 28 14:19:21 2015 UTC,I can understand your reticence.
swift,3baxe0,avinassh,13,Sat Jun 27 13:48:16 2015 UTC,This is my favourite post about swift new capabilities... By far !
swift,3baxe0,cappie013,4,Sat Jun 27 15:57:59 2015 UTC,"I've done horrible hacks with macros in Objective-C to get what I needed done because of the lack of protocol extensions.  So, it doesn't help in cleaning up that code, but I'm glad to see that I don't have to go through that again in Swift.  Also, I like that every feature is ""my favorite new Swift feature by far""."
swift,3baxe0,shiggie,5,Sat Jun 27 20:22:21 2015 UTC,Mike Ash always does excellent work.
swift,3baxe0,amlynch,1 point,Sat Jun 27 21:01:10 2015 UTC,"Great article! Really indepth, I like it"
swift,3bc13t,timanglade,1 point,Sat Jun 27 19:56:39 2015 UTC,Any video of the slides w/ audio? On mobile.
swift,3bc13t,misterbigtime,1 point,Sun Jun 28 10:09:27 2015 UTC,"The video & slide sync should work well on iPad but yeah, not super phone-friendly. Realm is considering ways to make this work better on mobile, but in the meantime you’d have to watch on Desktop or Tablet, sorry :("
swift,3bd7z2,mad_poet_navarth,3,Sun Jun 28 02:55:11 2015 UTC,"I don’t think you really want to have an array of [AnyObject]? around since it’s a pain to do anything with. When you call NSSpeechSynthesizer.availableVoices(), cast the result right away. If it’s nil, just make it an empty array. After that, you can just iterate through the it with a regular for loop:  let voices = NSSpeechSynthesizer.availableVoices() as? [String] ?? [] for voice in voices {     voiceNameForIdentifier(voice).map { println($0) } }"
swift,3bd7z2,kristoferhanes,1 point,Sun Jun 28 07:22:36 2015 UTC,"Great suggestion. Thanks.   Not yet seen this swiftism before: ""as? [String] ?? []"""
swift,3bd7z2,lyinsteve,1 point,Sun Jun 28 10:34:49 2015 UTC,"as? [String] means try to cast to [String], and if that fails, just return nil as an optional.  ?? is the nil-coalescing operator.  Basically, if the left-hand side of ?? is nil, the expression evaluates to the right hand side. Otherwise, the expression evaluates to the unwrapped form of the left side.  let optionalString: String? = ""hello"" let nilString: String? = nil  print(optionalString ?? ""goodbye"") // prints ""hello"" because optionalString is not nil. print(nilString ?? ""goodbye"") // prints ""goodbye"" because nilString is nil."
swift,3bd7z2,Kametrixom,2,Sun Jun 28 17:21:19 2015 UTC,"You can do this:  voices?.map { (voice : AnyObject) -> Void in     if let v = voice as? String,         name = voiceNameForIdentifier(v) {          print(name)     } }"
swift,3bd7z2,lyinsteve,2,Sun Jun 28 03:09:31 2015 UTC,How about:  (voices as? [String])?.map { voice in     if let name = voiceNameForIdentifier(v) {         print(name)     } }
swift,3bd7z2,Kametrixom,1 point,Sun Jun 28 06:08:40 2015 UTC,Nice!
swift,3bd7z2,voidref,1 point,Sun Jun 28 10:24:27 2015 UTC,"While I like that you can use map as an iteration without a returned value, I feel like it would be better to have a forEach() method added to collection type, just to be more explicit."
swift,3bd7z2,Kametrixom,1 point,Sun Jun 28 05:11:05 2015 UTC,"Well with Swift you can do that by yourself, that's what I like about, you can do anything you want"
swift,3bd7z2,voidref,2,Sun Jun 28 10:30:53 2015 UTC,"True, but I would rather see a standard way of doing things across projects rather than a bunch of roll-it-yourself implementations.  That said, it really is just some syntactic sugar over for let x in y  Of course, who doesn't like sugar! =)"
swift,3bcxj6,banukatanaya,1 point,Sun Jun 28 01:04:42 2015 UTC,"Can you set a breakpoint and see if the ""let newcell = tableView.dequeueReusableCellWithIdentifier(""myCell2"", forIndexPath: indexPath) as! MyTableViewCell"" line ever gets reached?"
swift,3bcs1h,bulldogs93,1 point,Sun Jun 28 00:08:52 2015 UTC,How do you start the data load? Which method do you call it from?
swift,3bcs1h,Ceribis,1 point,Sun Jun 28 04:41:28 2015 UTC,I am calling it from viewDidAppear
swift,3bcs1h,Ceribis,2,Sun Jun 28 07:55:45 2015 UTC,Sorry for the late reply on this. If you're doing that refresh in viewDidAppear it'll run every time the view shows up on the screen. If you only want it loaded once you may want to try moving it to viewDidLoad.
swift,3bcs1h,glhaynes,1 point,Mon Jun 29 10:43:38 2015 UTC,What's triggering the root view controller to load its content? If it's being kicked off from viewDidLoad() or viewWillAppear() then it makes sense that it reloads each time... you need to keep from reloading if it's not time to do so.
swift,3bcs1h,zSprawl,1 point,Sun Jun 28 06:52:38 2015 UTC,The content is being loaded when the function is called in viewDidAppear. Is there somewhere else I can put the function that loads the data so that it does not load again when I do an unwind segue?
swift,3bcpx6,Sharukh77,3,Sat Jun 27 23:47:42 2015 UTC,"I certainly tried to go in depth when I wrote my book on Swift: Hacking with Swift is a free tutorial series that teaches Swift from scratch. The original book has 30 chapters in, and in that you produce 10 games – of which 7 are SpriteKit-based.  If you don't already know Swift, you should resist the temptation to jump straight to project 11 (the first SpriteKit project), because it will likely prove hard for you."
swift,3bcpx6,twostraws,2,Sun Jun 28 00:03:53 2015 UTC,"Awesome. This looks something I can really learn from. I have one question. Aren't their complete Xcode files that already have the code in them, instead of how files are on the github? Or thats just a better way to share Xcode files?"
swift,3bcpx6,cryo,1 point,Sun Jun 28 02:32:13 2015 UTC,"The idea is to learn, not to use completely template code from the start, I think."
swift,3bcpx6,mf_dk43,1 point,Sun Jun 28 10:47:41 2015 UTC,How much programming knowledge do you need to have before going through your book?
swift,3bcpx6,hellofunk,1 point,Sun Jun 28 02:39:16 2015 UTC,There is an Apress book for using sprite kit with Swift. Also covers scene kit. The book is called something like Beginning Games Development with Swift.
swift,3bc1ge,twostraws,-3,Sat Jun 27 19:59:47 2015 UTC,uhm... ok so straight gets no love. Haters gonna hate.
swift,3bc1ge,Panniculus_Harpooner,0,Sun Jun 28 02:44:30 2015 UTC,I guess the straight flag would be an inverted rainbow?
swift,3bcp5k,tkaboris,2,Sat Jun 27 23:40:00 2015 UTC,Parse is great if all you need is to prove a concept but apparently it becomes a hassle when your app actually starts to scale.
swift,3bcp5k,banukatanaya,1 point,Sun Jun 28 03:22:27 2015 UTC,"I suggest using CoreData with iCloud which is the native iOS (and OS X) solution. Users will save their data in the iCloud and can access it from any device they are logged in.  If you really don't want to use iCloud, you can maybe somehow make your app share the data with iTunes, then when the user syncs his phone, he can copy the data from iTunes onto his computer, later he can reimport that data in the same way.  NSUserDefaults are best for small data such as preferences or states, but aren't very good for more than that.  I don't have any experience with Parse and I don't really know what's that about, so I can't help you there.  When you mean by transferring data to also be able to send data to a phone in reach, you'd have to use bluetooth or some wifi communication but that's hella difficult I think.  Easiest and most native way: CoreData with iCloud"
swift,3bcp5k,Kametrixom,1 point,Sat Jun 27 23:53:05 2015 UTC,You could try Parse. Even with no experience it's pretty easy pick up and learn. It's probably worth looking into.
swift,3bco2n,leofrozenyogurt,1 point,Sat Jun 27 23:29:20 2015 UTC,"I think you might need to add more detail – how are you playing sounds? If you're using something like AVAudioPlayer you can just tell it to stop. If you're using SpriteKit, you might need to upgrade to Xcode 7 to get iOS 9's new SKAudioNode functionality."
swift,3bci54,michaelallenkelso,3,Sat Jun 27 22:32:35 2015 UTC,"For scalability, you have to use your own server (either your own machine or buy one) and a web service. I'm 99% sure that imgur wouldn't allow someones app to upload pictures privately just for it's own use (maybe if you pay though).  Btw, how did you make that users can connect to each other without a web service?  Oh EDIT: There's of course iCloud! iCloud has got private AND public data storage. Private storage is private to the user and noone else can access it. But you can use the public part, which can be accessed by every instance of your app. (Of course you need the paid developer account for iCloud)"
swift,3bci54,Kametrixom,1 point,Sat Jun 27 23:59:37 2015 UTC,Ah yes! CloudKit! Thank you :)  And I make them connect to each other with Bonjour!
swift,3baio3,Dark_Angelas,7,Sat Jun 27 09:59:56 2015 UTC,"Hacking with Swift is not for everyone. In fact, in the introduction that's placed at the start of every chapter, it says, ""What I have found time and time again is that any tutorial, no matter how carefully written or what audience it's aimed at, will fail to fit the needs of many possible readers.""  The downsides to Hacking with Swift as I see them:   I try to teach as part of a project. If you're looking for a quick answer to a question, you won't find it in HWS because I try to teach everything in context. I cover very few advanced language features. If you want to work with generics or overload operators, for example, this is not covered. I teach incrementally, trying to produce a smooth learning curve. This means you learn a few new things every project, and can't easily skip ahead. I have very few screenshots. This was originally because I planned to release the entire thing using Kindle Direct Publishing, where screenshots are expensive. It would take quite a lot of time to go back and add screenshots now, and I'm more interested in writing new content. I wonder if I could crowd-source this… There's no option to remove the adverts. The adverts generate remarkably low income, but do at least pay for the entire cost of running the site so that I don't have to worry about it. I don't have a subscriber-only area where extra things are delivered."
swift,3baio3,twostraws,1 point,Sat Jun 27 11:01:28 2015 UTC,Whoa I'm not gonna use your tutorials at all. Too many downsides. (jking)  Thanks for the comment. The downsides are not downsides to me at all. Your descriptions are describing a tutorial that I was hoping to find :D
swift,3baio3,zSprawl,1 point,Sat Jun 27 11:27:51 2015 UTC,I have Hacking with Swift bookmarked as I just stumbled upon it last week. I have been going through the iOS apprentice series and it is good.
swift,3baio3,digitalburro,1 point,Sat Jun 27 17:42:55 2015 UTC,"I'll put it to you this way -- I've gone through very expensive Swift training (corporate training is a big money business and it always shocks me) and the contents of this very expensive training have been almost identical to what is available for free on Hacking with Swift.  I would even go so far as to say I've seen, in some cases, more detail on HwS than in my other training.    I'm not saying that means HwS is for everyone (as /u/twostraws mentions) but my intent in making that comparison is to say that I do believe HwS offers good value and does cover a lot of ground for someone who is looking to get their head in the game."
swift,3baio3,elitegucci,1 point,Sat Jun 27 21:17:53 2015 UTC,"Not promoting these courses, just what I learned from.  I started of with learning Swift through Udemy with the following course Swift the guy basically goes over the Swift book by apple and just makes it more friendly and understandable.   Then I moved on to iOS8ProgrammingWSwift Ray is an awesome instructor and you actually make real world apps as you go through this course."
swift,3baio3,mf_dk43,1 point,Sun Jun 28 15:28:46 2015 UTC,"I'm going through the Udemy Course by Rob Percival and I am thoroughly enjoying it and am learning. I doubt it will get me to be any near proficient but I've been told that it takes years and years of coding and building apps to get 'proficient'. This course has taken me further than any other course and even though it is babying me through the steps, it is teaching me. In order for me to get better, simply going through the tutorial is give me a base and further study will get me better. I plan on trying to build a simple working app from scratch and I will use the resources from here and I will also be doing Ray Wenderlichs course as well."
swift,3bbpky,iOSKoray,1 point,Sat Jun 27 18:14:35 2015 UTC,"Your if statement isn't really doing anything?    if json[""index""] { ...   Notice in their example, they are doing  if json[""field1""][""field2'].intValue == ???   Where they are examining a specific value in the json payload.  I think you are trying to verify the presence of an element but the syntax above isn't evaluating what you're after.  Change your conditional to   if json[""index""] != nil { ...   if you're just trying to establish that the key exists"
swift,3bbpky,digitalburro,1 point,Sat Jun 27 20:47:16 2015 UTC,"Yep i only want to check if ""index"" is existing... I will try it..  Thanks!"
swift,3bbpky,digitalburro,1 point,Sat Jun 27 20:54:56 2015 UTC,"I should also clarify that your question was a bit vague -- I made the assumption that by saying   ParseJson is the method, to parse. However, it doesn't work.. I can't load the Json data..   that was because you weren't getting to the actual ParseJson method call.  If you're getting to that call then you've got another issue.  Be mindful of the JSON contained in ""index"":  ""index"":[{""id"":""2"",""farbe"":""gruen.jpg"", ...   The contents of json[""index""] will return an array and then inside that array, it's elements are represented as tuples -- so be aware that unravelling this particular payload is a tiny bit tricky."
swift,3bbpky,lusion,1 point,Sat Jun 27 21:11:46 2015 UTC,"if json[""index""] != nil    You are my hero! Thanks :D"
swift,3bbkae,karlwiik,2,Sat Jun 27 17:28:24 2015 UTC,"Without more information, there is literally no way to help you."
swift,3bbkae,GreenLanturn,1 point,Sat Jun 27 19:24:17 2015 UTC,What are you using?  Parse?  CloudKit?  Are you asking how to use a UIImageView?
swift,3bbkae,shiggie,1 point,Sat Jun 27 20:01:54 2015 UTC,"You are going to need to store that user info somewhere.  Check out Realm.io for a cool object persistence system.  As for the photo stuff ... what platform you are on REALLY matters. iOS? OSX?  for ios, use PHImageManager, for OSX use a file open dialog."
swift,3bbkae,voidref,1 point,Sun Jun 28 04:46:57 2015 UTC,"i'm having the same issue.. i want to do a puser profile with parse backend on swim, but i have not been able to find a tutorial on the internet...  my user has a username, email from the sign up and profile picture, full name, phone and website from the edit profile.  i'd like to add the edit profile objects to the user class on parse and then populate them on a table....  i hope there's someone who could help..  thanks in advance to all"
swift,3b9bbo,somnibyte,3,Sat Jun 27 01:00:49 2015 UTC,"Good app, you should check out an app called myHomework. I really like your email function."
swift,3b9bbo,wyler0,1 point,Sat Jun 27 02:34:54 2015 UTC,"I really love your app, the design is superb. Nice work. And thank you for the complement, I appreciate it greatly."
swift,3b9bbo,wyler0,2,Sat Jun 27 02:47:59 2015 UTC,Haha it's not my app! Just another app that I use for my school work!
swift,3b9bbo,caizo_ryan,1 point,Sat Jun 27 03:22:26 2015 UTC,"lol, sorry about that. Thank you for showing me the app, I appreciate it. I have done some research on competition for a couple of weeks, this one went off my radar. I like to gain inspiration and implement new ideas. Any inspiration, in my view, is a gift. I'll be improving Studious to better fit the needs of students. The app includes a little mail icon at the top on the dashboard, you can send me feedback (if you setup your mail account on your iPhone) any time and I will try to implement it in the app. I'm striving to update the app frequently in order to help make the lives of students easier. :)"
swift,3b9bbo,caizo_ryan,2,Sat Jun 27 03:27:43 2015 UTC,Great app! How many downloads did you get? Did you do any marketing?
swift,3b9bbo,caizo_ryan,1 point,Sat Jun 27 11:54:52 2015 UTC,"The app stores analytics system hasn't updated quite yet, I'll report back when it does. As a developer, I'm not very good at marketing my products. I'll be picking up some books to read on marketing, but in the meanwhile, feel free to share any strategies you are aware of. :)"
swift,3b9bbo,Comrod,1 point,Sat Jun 27 16:55:12 2015 UTC,"Sure! I was just wondering how many downloads you get for paid apps on no marketing basis, I my self am going to release my first paid app next month, so sorry but I don't have any tips for you but make sure to check this link  http://monetizepros.com/blog/2013/101-ways-to-make-money-with-your-iphone-android-or-mobile-app/  I found out pretty useful! And I'm looking for a programming partner for making a new awesome app which has not yet been thought of and has a lot of potential, so if you wanna join, pm me!"
swift,3b9bbo,Comrod,1 point,Sat Jun 27 20:38:06 2015 UTC,Has it updated yet? very curious about the results!
swift,3b9bbo,MassGravity,2,Mon Jul 6 06:59:11 2015 UTC,"Not really trying to beg for a free app here, but when I first released my app (High School Debate Timer), I dropped a whole bunch of free codes on the debate subreddits and some other debate websites (like Cross-X.com). I think a big part of getting exposure for your app is not necessarily just linking people to it, but giving people easy access to it. And if your app is high quality (and I'm assuming it is), then people who get it for free will tell other people about it, who will pay. So in that sense, giving out free codes is worth it."
swift,3b799o,twostraws,5,Fri Jun 26 15:18:18 2015 UTC,"I'm going through your HWS right now, it's great!  I'd love to see more things integrating online services requests (like JSON) and client/server applications."
swift,3b799o,jessecooper,1 point,Fri Jun 26 22:41:02 2015 UTC,Second this! There's currently a lack of tutorials in general with regards to tying up with online services
swift,3b799o,Fanytastic,4,Sat Jun 27 15:30:34 2015 UTC,"It's been a while since I looked at your tutorials but I've been looking for one for designing turn-based multiplayer games using Gamecenter (in my particular case, a quiz game).  Thanks for all the great content you put out!!"
swift,3b799o,drgreenstumor,1 point,Fri Jun 26 19:25:28 2015 UTC,"Oh – I like this idea! Let's see what others say, but this should definitely be on the list, I think."
swift,3b799o,koalefant,3,Fri Jun 26 20:10:25 2015 UTC,"Writing a socket or simple http server in pure swift would be useful, but maybe a bit out of the scope?"
swift,3b799o,Raiden007,2,Sat Jun 27 10:26:34 2015 UTC,Do you have any tutorials about WatchKit? I would love to check out one from you
swift,3b799o,Adamw88,2,Sat Jun 27 07:57:25 2015 UTC,"No; I was waiting for watchOS 2. This is still in flux, and I'm not particularly keen to zap my Apple Watch with an early beta :)  I'll see what I can do."
swift,3b799o,Hawk_Irontusk,1 point,Sat Jun 27 13:49:41 2015 UTC,Saved this post as I am definitely coming back. I've been hacking my way around iOS for about 2 weeks now and will definitely check out your tutorials!
swift,3b799o,Hawk_Irontusk,1 point,Fri Jun 26 19:17:38 2015 UTC,How about SpriteKit.
swift,3b799o,foBrowsing,1 point,Sat Jun 27 13:38:44 2015 UTC,"Is there something particular about SpriteKit I didn't already cover? Projects 11, 14, 17, 20, 23, 26 and 29 were all on SpriteKit, so I thought I did a pretty comprehensive job."
swift,3ba78n,questdark,3,Sat Jun 27 06:48:25 2015 UTC,"I don't see a reason why panels needs to be optional at all. Change it to this:  var panels = [[Double]]()   Then go ahead and add arrays as normal. You can then return an empty or an array filled with items, depending on the results of your loop. If you desperately want to return an optional, just do a count on the array and return nil if the count is 0.  One other small thing: it looks like you're returning very specific data. Have you considered returning an array of dictionaries instead, with the keys being ""health"", ""sex"", ""mood"", etc?"
swift,3ba78n,twostraws,2,Sat Jun 27 11:19:56 2015 UTC,"Or, indeed, a custom struct."
swift,3ba78n,cryo,1 point,Sun Jun 28 10:50:29 2015 UTC,"A custom struct would be better, actually. Much more type-safe."
swift,3ba78n,lyinsteve,2,Sun Jun 28 18:47:03 2015 UTC,"panels is an optional which gets a default value of nil. You really need to do two things, add an empty array as panels default value and add a question mark for optional chaining when calling append. Appending a whole array is fine since panels is an array of arrays.  var panels: [[Double]]? = [] for elements in HealthChecker {     if elements > 5 {         panels?.append([self.health, self.sex, self.mood, Double(self.death)])     } }"
swift,3b8u09,Naxum,3,Fri Jun 26 22:21:33 2015 UTC,"Just pulling a few that I've collected across projects.   Most of these were reused from blog posts I read or from stack overflow questions that overlapped with my own issues.  I make no claim of creating these, I'm just sharing :)  Date Extensions - Dealing with dates is more complex than it needs to be  public func ==(lhs: NSDate, rhs: NSDate) -> Bool {     return lhs.isEqualToDateEx(rhs) }  public func <(lhs: NSDate, rhs: NSDate) -> Bool {     return lhs.isLessThanDateEx(rhs) }  public func >(lhs: NSDate, rhs: NSDate) -> Bool {     return lhs.isGreaterThanDateEx(rhs) }  extension NSDate: Comparable { //Inspired by: http://stackoverflow.com/questions/29392717/swift-checking-if-2-nsdates-are-the-same func isGreaterThanDateEx(dateToCompare : NSDate) -> Bool {     var isGreater = false      if self.compare(dateToCompare) == NSComparisonResult.OrderedDescending     {         isGreater = true     }      return isGreater }   func isLessThanDateEx(dateToCompare : NSDate) -> Bool {     var isLess = false      if self.compare(dateToCompare) == NSComparisonResult.OrderedAscending     {         isLess = true     }      return isLess }   func isEqualToDateEx(dateToCompare : NSDate) -> Bool {     var isEqualTo = false      if self.compare(dateToCompare) == NSComparisonResult.OrderedSame     {         isEqualTo = true     }      return isEqualTo }  func addDays(daysToAdd : Int) -> NSDate {     var secondsInDays : NSTimeInterval = Double(daysToAdd) * 60 * 60 * 24     var dateWithDaysAdded : NSDate = self.dateByAddingTimeInterval(secondsInDays)      return dateWithDaysAdded }  func addHours(hoursToAdd : Int) -> NSDate {     var secondsInHours : NSTimeInterval = Double(hoursToAdd) * 60 * 60     var dateWithHoursAdded : NSDate = self.dateByAddingTimeInterval(secondsInHours)      return dateWithHoursAdded } }   String Extensions - Some more convenience methods because I'm lazy  extension String { func contains(find: String) -> Bool {     return self.rangeOfString(find) != nil }  func matchesRegex(regex: String) -> Bool {     if let match = rangeOfString(regex, options: .RegularExpressionSearch) {         return true     }     return false }  func stringThatMatchesRegex(regex: String) -> String {     if matchesRegex(regex) {         if let regex = NSRegularExpression(pattern: regex, options: nil, error: nil) {             if let match = regex.firstMatchInString(self, options: nil, range: NSRange(location: 0, length: count(self.utf16))) {                 let matchedRegex = (self as NSString).substringWithRange(match.range)                 return matchedRegex             }         }     }     return """" } }   Color Extension - Because my brain still thinks in HEX values  extension UIColor {     //  based on: https://github.com/yeahdongcn/UIColor-Hex-Swift/blob/master/UIColorExtension.swift     func colorFrom(HexString: String!) -> UIColor {      var red: CGFloat   = 0.0     var green: CGFloat = 0.0     var blue: CGFloat  = 0.0     var alpha: CGFloat = 1.0      var colorString = HexString     if !(HexString.hasPrefix(""#"")) {         colorString = ""#"".stringByAppendingString(HexString)     }     var index = advance(colorString.startIndex, 1)      let hex = colorString.substringFromIndex(index)     let scanner = NSScanner(string: hex)     var hexValue: CUnsignedLongLong = 0     if scanner.scanHexLongLong(&hexValue) {         if count(hex.utf16) == 6 {             red   = CGFloat((hexValue & 0xFF0000) >> 16) / 255.0             green = CGFloat((hexValue & 0x00FF00) >> 8)  / 255.0             blue  = CGFloat(hexValue & 0x0000FF) / 255.0         } else if count(hex.utf16) == 8 {             red   = CGFloat((hexValue & 0xFF000000) >> 24) / 255.0             green = CGFloat((hexValue & 0x00FF0000) >> 16) / 255.0             blue  = CGFloat((hexValue & 0x0000FF00) >> 8)  / 255.0             alpha = CGFloat(hexValue & 0x000000FF)         / 255.0         } else {             print(""invalid rgb string, length should be 7 or 9"")         }     } else {         println(""scan hex error"")     }     return UIColor(red:red, green:green, blue:blue, alpha:alpha) } }"
swift,3b8u09,digitalburro,1 point,Sat Jun 27 21:33:10 2015 UTC,"Thanks especially for the last one, really useful!"
swift,3b8u09,Ashok28,1 point,Mon Jun 29 14:19:18 2015 UTC,"I made a computed global variable which lets me easily check whether the current App gets launched ob login and change it. It's called ""startOnLogin"" and it's just a boolean which you can set and get. I will share when I'm on the conputer again ;)"
swift,3b8u09,Kametrixom,1 point,Sat Jun 27 08:48:02 2015 UTC,SwiftyJSON
swift,3b8u09,dinovo,1 point,Sat Jun 27 11:53:06 2015 UTC,Here it is: https://github.com/Kametrixom/LoginItemManager  Apparently I'm using deprecated functions (Since 10.11) but I can't find a good alternative
swift,3b7un7,cmclewin,3,Fri Jun 26 17:53:38 2015 UTC,"Go to Xcode Preferences Go to ""Downloads"" tab Press the arrow next to the documentation that you want stored on your local. Now the ""Documentation and API Reference"" data will live on your local computer and you can access it with or without internet access. You will access it via Xcode as usual.    http://i.imgur.com/xulKOxa.png"
swift,3b7un7,CQH,1 point,Fri Jun 26 20:50:44 2015 UTC,Thank you! Dash showed me this as well
swift,3b7un7,CQH,2,Sat Jun 27 00:20:35 2015 UTC,"Hahaha, can I have $20, too?"
swift,3b7un7,psophis,3,Sat Jun 27 04:22:29 2015 UTC,Try Dash. It's not a free solution but well worth the price. It has loads of documentation that it can download and store offline.
swift,3b7un7,CQH,2,Fri Jun 26 18:08:38 2015 UTC,That looks perfect from what I've looked at. Thanks!
swift,3b7un7,psophis,1 point,Fri Jun 26 19:01:58 2015 UTC,"So, I should pay $20 for a reformatted version of the official documentation that's I already have access to for free?"
swift,3b7un7,CQH,1 point,Fri Jun 26 20:55:37 2015 UTC,"Not if you're just going for the documentation that you can get from Xcode. But if you want a application can can download arbitrary documentation,  stackoverflow and other sources while provide quick ways to search them, then yes."
swift,3b7un7,shiggie,2,Fri Jun 26 21:11:07 2015 UTC,"I agree, if OP needed access to documentation of 150 programming languages/systems.  But, that wasn't OP's question 😆"
swift,3b7t77,ssharky,0,Fri Jun 26 17:43:27 2015 UTC,Have a look here
swift,3b7t77,Kametrixom,1 point,Fri Jun 26 21:02:48 2015 UTC,"Modulo operation:       In computing, the modulo operation finds the remainder after division of one number by another (sometimes called modulus).  Given two positive numbers, a (the dividend) and n (the divisor), a modulo n (abbreviated as a mod n) is the remainder of the Euclidean division of a by n. For instance, the expression ""5 mod 2"" would evaluate to 1 because 5 divided by 2 leaves a quotient of 2 and a remainder of 1, while ""9 mod 3"" would evaluate to 0 because the division of 9 by 3 has a quotient of 3 and leaves a remainder of 0; there is nothing to subtract from 9 after multiplying 3 times 3. (Note that doing the division with a calculator will not show the result referred to here by this operation; the quotient will be expressed as a decimal fraction.)  Although typically performed with a and n both being integers, many computing systems allow other types of numeric operands. The range of numbers for an integer modulo of n is 0 to n − 1. (n mod 1 is always 0; n mod 0 is undefined, possibly resulting in a ""Division by zero"" error in computer programming languages) See modular arithmetic for an older and related convention applied in number theory.    Image i - Quotient (red) and remainder (green) functions using different algorithms     Relevant: Remainder | Euler pseudoprime   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Call Me"
swift,3b7t77,autowikibot,0,Fri Jun 26 21:03:29 2015 UTC,"Haha, autowikibot"
swift,3b8end,dale-x,2,Fri Jun 26 20:19:47 2015 UTC,Are you using AutoLayout to set the starting size of the button? Changeling the frame will have no effect if AutoLayout is being used.
swift,3b8end,CleverError,2,Fri Jun 26 20:30:11 2015 UTC,if you are using autolayout you need to change the constraint constant then layoutIfNeeded() inside the animation on the button and any other views you want to animate with it
swift,3b8end,criosist,1 point,Fri Jun 26 20:44:59 2015 UTC,"Yeah, I was using AutoLayout. But I took it completely off the button and tried to recreate the button's frame in the ViewController and it still didn't work. Any ideas?"
swift,3b8end,chaotic_goody,2,Fri Jun 26 21:46:43 2015 UTC,Oh! Did you set the translatesAutoresizingMaskIntoConstraints property on your button to Nope?
swift,3b8end,chaotic_goody,1 point,Sat Jun 27 02:08:58 2015 UTC,"I tried putting it in the button itself, in the animateWithDuration function, and in the viewDidLoad method (all at different runs, of course). No such luck. :/ And I can't find any resources/tutorials online to help either. Man..."
swift,3b8end,chaotic_goody,2,Sat Jun 27 05:09:21 2015 UTC,I put a bare-minimum example up on Github for you: https://github.com/jonzhan/UIButtonResizeExample  I used autolayout animations instead of frames because that'll probably be a better habit in the long run.  Let me know if you have any questions! :)
swift,3b7fue,olivermpl,1 point,Fri Jun 26 16:06:35 2015 UTC,"What are the limits on your project? Like, are you allowed to use any of the myriad of external tools out there as kind of a halfway point?  I wish I had a direct answer to your request for a tutorial, but I might have some suggestions that could point you in the right direction:  First, you could use the Amazon Web Service (AWS) S3 Bucket as a sort of halfway point between devices. Then, you'd have your android device and mac syncing to that bucket, just like Dropbox (I built a very basic dropbox clone just for a practice project, using this exact principle.)  Another option, would be you could build a Java application for your mac and a native android app that uses dropbox's API. This might be the easiest way of getting started, since you won't have to worry about things like encryption and properly transferring files.  Like I said, I'm not sure how much you want, or have, to do in regards to building it from scratch, but if you want to get this done ASAP, it would be hard to go wrong with using dropbox, and every good programmer needs to know how to utilize APIs, so its a good skill to practice as well.  https://www.dropbox.com/developers/core/start/java  https://www.dropbox.com/developers/core/start/android  As for tutorials, I don't know of one off the top of my head that would be able to take you from knowing nothing in Swift to being able to build an app like this, at least in a short amount of time.  I'd recommend you stick with your experience in Java, since android is based on Java, and you can run a java app on OSX without any issues."
swift,3b7fue,supportforalderan,1 point,Fri Jun 26 18:55:45 2015 UTC,"Thanks for your answer, but I think I forgot to say that the data transfer should be via usb and not over the internet, because for my project there can be a huge amount of data, so it would take too long with a bad internet connection.  And the thing with java is I'm not a big fan of java and my projects starts in september, so I have plenty of time to learn swift (at least the basics)."
swift,3b7ddx,xStory_Timex,1 point,Fri Jun 26 15:48:25 2015 UTC,"If you include .validate() you'll get an error in your response handler.  If your code looks like this:  Alamofire.request(.GET, ""http://httpbin.org/get"", parameters: [""foo"": ""bar""])      .validate(statusCode: 200..<300)      .validate(contentType: [""application/json""])      .response { (_, _, _, error) in               println(error)      }   Then you'll get an error in  .response { (_, _, _, error) in               println(error) }"
swift,3b7a4m,toorealc,2,Fri Jun 26 15:24:54 2015 UTC,consider adding a readme and some comments so people actually have any idea what this is for
swift,3b7a4m,Ahti333,1 point,Fri Jun 26 15:33:24 2015 UTC,Will Do! :)
swift,3b2rh6,LeftyApps,3,Thu Jun 25 14:30:35 2015 UTC,What's the app called?
swift,3b2rh6,FrostyMarijuanaBud,2,Fri Jun 26 02:17:45 2015 UTC,"It's called ""ReikiPal"".  I didn't post the link because the app itself is not useful unless you are a reiki practitioner and is not very relevant to this group.  :)"
swift,3b2rh6,FrostyMarijuanaBud,1 point,Fri Jun 26 11:30:44 2015 UTC,"Thanks. Post felt real clean. I was like ""this guy isn't trying to sell me something, he genuinely wants to share information with people"" :)"
swift,3b2rh6,Hipst3rKiwi,3,Fri Jun 26 13:54:09 2015 UTC,"A link for the lazy who (like me) though op wanted to make a new app that gives new masturbating ""hand positions"" http://en.wikipedia.org/wiki/Reiki"
swift,3b2rh6,Recolumn,7,Thu Jun 25 15:06:52 2015 UTC,Does OP realize it's bullshit?
swift,3b2rh6,Hipst3rKiwi,2,Thu Jun 25 22:56:14 2015 UTC,Shhh its op's life let him believe in what ever
swift,3b2rh6,Kubiedo,0,Fri Jun 26 12:57:25 2015 UTC,"If I weren't doing reiki, I would have thought of it that way too!"
swift,3b2rh6,twostraws,2,Thu Jun 25 16:27:30 2015 UTC,"Can I ask, start to finish, how long did it take you?  Also, do you have the tutorial you used for iAds?"
swift,3b2rh6,twostraws,1 point,Thu Jun 25 21:51:27 2015 UTC,"I love all the tutorials by him: http://youtu.be/NMdVZ592ZZE   I started learning swift as soon as the beta version came out.  Then I felt pretty comfortable around January, so that's when I decided to build the actual app.  From the interface design to completion it took almost 6 months. It definitely shouldn't have taken that long for a simple app like this.  But I was working on it in my free time, so it depends on the dedication and discipline as well.  I spent the last 2 months dealing with admin work."
swift,3b2rh6,IpadAnnie,2,Fri Jun 26 11:28:37 2015 UTC,"Good job on shipping an app! And you learned Swift at the same time, so a double whammy :)  What you discovered is something called the Ninety-Ninety rule, which states that the first 90 percent of the code accounts for the first 90 percent of the development time, while the remaining 10 percent of the code accounts for the other 90 percent of the development time.  The lesson: sometimes writing code is easy, but having to do all the admin of registering the app, taking screenshots, making a video, writing a description, testing, dealing with Apple, etc, can take a lot longer than expected!"
swift,3b2rh6,kate_floss,2,Thu Jun 25 15:09:23 2015 UTC,"Thanks!  And true that!  It was a huge pain in the butt filling out the description for the app, preparing the screenshots, etc.   the whole process was definitely not straight forward to say the least.  Apple has a bunch of pages to explain it, but it takes a lot of googling to go through it.  I'm surprised they haven't created a more streamlined process."
swift,3b2rh6,twostraws,2,Thu Jun 25 16:26:47 2015 UTC,"The good news is that once you've done it the first time, it's easy to repeat."
swift,3b2rh6,autowikibot,1 point,Thu Jun 25 19:29:10 2015 UTC,This is something I haven't even been thinking about.  I have been trying to learn both Swift & Xcode also while putting together my first app.  So much to think about.  Any suggestions on resources for learning all of this?
swift,3b2rh6,kate_floss,0,Mon Jul 6 02:06:34 2015 UTC,180%?
swift,3b3qv8,Dark_Angelas,2,Thu Jun 25 18:49:51 2015 UTC,Matt Neuberg is my favorite programming book author.  Something about how he explains topics and his general writing that's really enjoyable; not dry at all.
swift,3b3qv8,blazenl,2,Thu Jun 25 22:56:46 2015 UTC,"I finished IOS 8 Programming Fundamentals yesterday and I enjoyed it. I have a background in programming, but am very rusty in OS X/IOS and wanted to build my chops in Swift with IOS.  I just started Programming IOS 8 today. I must say...I really really began to glaze over in the chapter (1 or 2) about Views. I mean, I understand they are important, but I think he lost his vibe here or something trying to convey far too much static information at once. It was definitely a slog (although bits were very interesting, I did find myself having to take frequent breaks so I could refocus my attention). I'll start on the next chapter, Drawing, tomorrow. Being a ""more active"" topic, I hope it will be more interesting/engaging."
swift,3b3qv8,claycle,1 point,Fri Jun 26 03:40:49 2015 UTC,"Did you have previous iOS development experience? I dont have iOS background. Only other programming language background.  I didn't have any problem with Part 1 Language part of the book, but I'm having a difficult time with the Part 2 of his book...  Overall though, a lot of information seems to be written, but his writings are bit verbose..."
swift,3b3qv8,pavelsky,1 point,Sat Jun 27 10:23:18 2015 UTC,"I have ""iOS 8 Programming Fundamentals with Swift"" and I am on Chapter 2 learning about functions. So far I really enjoy it. It seems to be pretty in-depth and it feels like I can use it as a reference later on because he breaks down everything into parts with examples. I've read a ton of programming books in general and I have a good feeling about this one so far."
swift,3b27u2,fat_apollo,7,Thu Jun 25 11:15:06 2015 UTC,"I can't for the life of my figure out why ""protected"" is still not an available keyword for scoping.  Proper class var support would be nice. We have ""static"" now, but it forces you to write ClassName.staticVar rather than just ""staticVar"" (internally), which you could do in obj c, and most other languages.   My biggest concerns with Swift are still Xcode-based. The IDE is slow as molasses, the debugger is still complete crap, the linker still crashes constantly (even if it doesn't say so on screen anymore), there are lots of problems with error messages. I could go on. Swift support in Xcode still feels really beta, which is crazy for software that's been out over a year already."
swift,3b27u2,adremeaux,2,Thu Jun 25 18:50:30 2015 UTC,"I can't for the life of my figure out why ""protected"" is still not an available keyword for scoping.   Maybe that helps:  https://developer.apple.com/swift/blog/?id=11"
swift,3b27u2,fluchtpunkt,1 point,Fri Jun 26 09:58:17 2015 UTC,"Yeah, I've read that. To be honest, it reads like a bunch of BS that someone had to come up with in order to disguise problems they were having developing the feature."
swift,3b27u2,adremeaux,2,Fri Jun 26 14:29:33 2015 UTC,"+1 I really hate debugger, and lack of refractoring."
swift,3b27u2,Jeff_Johnson,1 point,Thu Jun 25 21:29:03 2015 UTC,"all of the XCode issues you mentioned are the reasons I ultimately decided to go with Xamarin.  I was originally using Swift on my home projects but once I had to start using Xamarin for work and saw how stable it was I decided to ditch XCode for good.     I really like Swift and continue to follow its path but until Apple deals with the tooling issues I just can't justify the poor XCode experience when there is a more than adequate native development alternative such as Xamarin.  And C# is very mature and it is soooo nice being able to use LINQ, async/await and also take advantage of extremely simplified JSON serialization/deserialization.  I sincerely hope that Apple will deal with the IDE issues but I've read so many rants by Obj-C developers on how horrible XCode 4 and 5 was that I can't honestly put any faith in that hope.    Earlier versions of Xamarin were painful also but there has been a marked increase in stability and user experience over the last 3 years."
swift,3b27u2,shooky1,1 point,Fri Jun 26 17:13:27 2015 UTC,"I've read so many rants by Obj-C developers on how horrible XCode 4 and 5    Hey man, Xcode 3 didn't even have tabs. If you wanted to be able to move between multiple files, you had to open new windows for each one.  What's crazy to me is how many developers I've worked with that don't take advantage of any efficiency features Xcode offers you. No tabs, no multi-windows or multi-pane, no hotkeys. I've seen developers working in two files that, each time they want to switch, pck up the mouse, click the little grid icon, then find the file in this essentially unordered list of files. I've seen people searching through folders in the organizer pane to find a file rather than cmd-shift-o opening. People who don't know about alt- and ctrl-arrow key movement and selection, so they pick up the mouse to move the cursor a couple lines away. No code snippets, no global find-replace, no hotkeys for build/test/profile... nothing. So I guess for those types, which seem to be exceptionally common, Xcode is just fine?"
swift,3b27u2,adremeaux,6,Fri Jun 26 17:53:44 2015 UTC,"Reflection. You can only get values of properties via reflection, no way to set them."
swift,3b27u2,nepragen,1 point,Thu Jun 25 11:47:55 2015 UTC,"Yeah, proper reflection is a number two on my list. But I think we'll get that eventually."
swift,3b27u2,SirGlaurung,1 point,Thu Jun 25 12:53:43 2015 UTC,I'd like some way of getting static properties via reflection.
swift,3b27u2,foBrowsing,4,Fri Jun 26 07:21:25 2015 UTC,"Oh my goodness, proper generators would be awesome. If there's anything in the standard library that feels a little underfed it's the lazily-evaluated sequences, and trying to add my own in would be so much easier if I could just use yield. That said, I'm not sure Swift is able to stop evaluating code mid-block (and I think it may be something it's fundamentally not able to do - I remember trying to hack in a yield keyword using GCD and dispatch_suspend, but as it says in the documentation, it can't suspend mid-block).  In a similar vein, since recursive enums should be available in the next beta, I'd love to see some linked list structures in the standard library. Maybe along with some itertools goodness."
swift,3b27u2,SheepWheatOre,1 point,Thu Jun 25 11:48:42 2015 UTC,I vaguely remember recursive enums in one of the WWDC videos.
swift,3b27u2,lusion,3,Thu Jun 25 21:55:38 2015 UTC,"Some nice syntax for dealing with grand central dispatch. While GCD is quite nice, it gets kind of ugly when you nest a lot.  Other than that I think my main wishes for swift at this point is not really about the language itself but getting libraries and tools in place. I want proper refactoring for Swift and I want xCode to be more stable and polished when dealing with Swift.  Also I would like to see more libraries made specifically for swift and the ones we have need some more meat. E.g. the string functionality provided is rather thin."
swift,3b27u2,adremeaux,2,Thu Jun 25 18:39:34 2015 UTC,"I was really hoping that at this year's WWDC they would announce that they've rewritten all of the core libraries for Swift. The NS libraries are still heavily rooted in ObjC, which can range anywhere from minor inconvenience to ridiculously annoying, particularly when methods are returning or requiring NSDictionaries or whatever. Toll-free bridging is great and all, but it's slow as hell, and jumping back and forth between two default implementations of a dictionary or string is unbelievably clumsy. Yeah, I can use String for almost everything, except that it's lacking a ton of methods, so then I have to make my String into an NSString, perform some basic operation, then bridge back to a String. Really weak stuff."
swift,3b27u2,nemesit,1 point,Thu Jun 25 18:45:03 2015 UTC,or write your own string extensions and use those :-p
swift,3b27u2,cbkeur,1 point,Fri Jun 26 11:39:38 2015 UTC,"Swift has GeneratorType, GeneratorSequence. What is missing from it that you want?"
swift,3b27u2,gilgoomesh,7,Thu Jun 25 11:32:30 2015 UTC,OP is probably referring not to generators but to semicoroutines or continuations which are a language constructs commonly used in generators to allow exiting a generating loop (saving the stack) and resumption from the previous point as each value is generated.  If this is indeed OP's desire: they are very unlikely. For languages that use a native call stack like Swift (rather than a virtual machine or scripting environment) semicoroutines and coroutines are very uncommon as they are not efficient (versus the generator simply maintaining its own state) and have difficult to manage side effects.
swift,3b27u2,chwilliam,3,Thu Jun 25 11:55:13 2015 UTC,"C# have generators, implemented with yield keyword. And it's implemented internally as a state machine generated by compiler. I can't see how the fact that Swift uses native call stack versus, say, .NET managed stack (which is relatively simple and doesn't have magic ""exit and save the state for re-entry"" commands) changes anything. I'm not saying you're wrong, just can't see the difference.  See: Behind the scenes of the c# yield keyword, and Iterator block implementation details: auto-generated state machines  Having a proper generator can make miracle for performance in chained map().filter().etc() calls iterating over one sequence instead of making a new container for each function call.   Edit: here is a disassembled C# function that uses yield. No funny tricks, just a boring compiler-generated inner class that implements a state machine."
swift,3b27u2,foBrowsing,1 point,Thu Jun 25 12:41:31 2015 UTC,"Yeah, continuations are basically a fancy generator. You can write functionally the same code with Swift generators, but you have to keep track of the state yourself, where async/await/yield will do it for you.  I know something like async/await in general is being brainstormed by the Swift guys, but really what would be awesome is just the ability to do that kind of compile-time restructuring. Scala, for example, has ""macros"" which are basically [sometimes-scary] compile-time transforms that you can write in Scala vs a dumb preprocessor language."
swift,3b27u2,elai,1 point,Fri Jun 26 01:38:06 2015 UTC,"GeneratorType isn't technically a generator, I don't think. (at least not in the same sense as generators in Python) Basically, generators in other languages usually refer to something that can be used with the yield keyword. So, if you wanted to make a generator of 1...n:  generator rangeGenerator(n: Int) -> Generator<Int> {   for i in 0..<n {     yield n   } }   Obviously a contrived example, but to manage the same thing in current Swift you've got to do something like:  func rangeGenerator(n: Int) -> AnyGenerator<Int> {   var i = -1   return anyGenerator {     return ++i < n ? i : nil   } }   Those two examples look about the same difficulty, but if you look at what I had to do in each, there are some big issues with the second:   I had to have my first value be the one just before the first value the generator returns. This is really common when you've got to manage your own state for generators. The entire closure for the generator has to be run before it can return the next value. This means that, for longer, complicated generators, you often get generators that enter a switch statement every time the next value is called, and you've got some signalling variable to signal how many times the closure itself has been called. The switch statement then switches on that signalling variable."
swift,3b27u2,notquitedrdeath,1 point,Thu Jun 25 11:58:40 2015 UTC,"An ability to turn enums into strings and enum strings back to their equivalent enum without having to write the boilerplate functions to do so.    This is based on their names in code, not their string values, since you don't want all enums to be string based.  It would be very useful for logging and so on."
swift,3b27u2,ajpri,1 point,Fri Jun 26 06:25:53 2015 UTC,"More of an Xcode complaint, I want to be able to draw and write notes on a storyboard."
swift,3b27u2,SirGlaurung,0,Fri Jun 26 00:21:02 2015 UTC,Exception Handling! ie. Try-Catch-Finally.
swift,3b27u2,MaddTheSane,2,Fri Jun 26 03:57:26 2015 UTC,Swift 2.0 has error handling.  do {     try someFuncThatThrows() } catch {     handleError() }
swift,3b27u2,non_omnia_expediunt,1 point,Fri Jun 26 07:16:42 2015 UTC,"Error handling, not exception handling. Not a big problem when only using Swift code, but some Cocoa APIs traditionally threw exceptions for a variety of reasons, some of them trivial.  Then there are some third-party frameworks that throw exceptions for the most trivial of reasons. Or expect some degree of exception handling in Objective C code."
swift,3b27u2,lusion,0,Fri Jun 26 16:56:30 2015 UTC,"Switch still not an expression. I really miss Scala's ""match""."
swift,3b4j6q,Airglow26,2,Thu Jun 25 22:21:13 2015 UTC,"Would getting the tr element and then calling [trElement childrenWithTagName: @""td""]; be what your looking for?  That should get all columns of a single row into an array.  edit:  In Swift (woops):    // I think that's what it'll look like in swift trElement.childrenWithTagName(""td"") as! [TFHppleElement]"
swift,3b3hfd,Functional_Alcholoic,2,Thu Jun 25 17:43:02 2015 UTC,"task.resume() doesn't wait for a response. When a response is received it calls the callback for the task. This could be immediately, it could be seconds or years later(exaggerating of course, it's unlikely but ""possible"").  So if your program exits immediately after task.resume() the program is finished, no more callback function.  Using the loop buys time for the response to come and the callback to be called."
swift,3b3hfd,nXiety,2,Thu Jun 25 20:00:25 2015 UTC,Ok thanks!
swift,3b2sx6,twostraws,3,Thu Jun 25 14:42:05 2015 UTC,"Where you put code depends on when you want it to run. As a very rough overview:   If you put code in viewDidLoad it means ""I want this code to run when this view controller is created."" If you put code in didReceiveMemoryWarning it means ""I want this code to run when the device is running out of RAM."" If you put code in viewWillAppear it means ""I want this code to run when the view controller is shown or reshown."" If you put code in traitCollectionDidChange it means ""I want this code to run when the device changes orientation or the user tries iPad multitasking."" If you put code in viewDidUnload it means ""I haven't updated my code in years."""
swift,3b2sx6,twostraws,1 point,Thu Jun 25 15:02:14 2015 UTC,"This is super helpful, thank you. Sorry for the late reply, I told myself that I would look at the comments here when I worked on Xcode again. Loved the last line, haha."
swift,3b2sx6,masonlee,2,Sat Jun 27 15:48:22 2015 UTC,"PS: For what it's worth, it doesn't sound like your training course is that good. Have you considered trying an alternative?"
swift,3b2sx6,moridinbg,1 point,Thu Jun 25 15:03:02 2015 UTC,"To be honest, I actually used your tutorial (Hacking with Swift right?) first, and I didn't like it, which made me switch to Paul Solt's. The reason why I didn't like yours was because I kept encountering XCode errors typing exactly what you did. That said, I'm encountering the same issues with Paul's, except now I'm not naive enough to quit after five minutes (because it's always something wrong on my side), so I would be willing to give yours a try again."
swift,3b2sx6,twostraws,1 point,Sat Jun 27 16:02:45 2015 UTC,"""Lifecycle"" will be a helpful search term. E.g. viewcontroller lifecycle methods"
swift,3b0efi,solwatts,2,Wed Jun 24 23:29:06 2015 UTC,Not by Apple. It's featured on iTunes U and endorsed by Apple but it's written by Yong Bakos.
swift,3b0efi,dazonic,2,Thu Jun 25 13:17:50 2015 UTC,Has this been updated to Swift 2.0?
swift,3b348n,moridinbg,1 point,Thu Jun 25 16:07:15 2015 UTC,"Like this:  class ConformingClass : BaseClass, SomeProtocol {     ... }   You can't just define a type with a class and a protocol, because such a type doesn't even exist yet, you have to create one yourself"
swift,3b348n,Kametrixom,1 point,Thu Jun 25 21:35:30 2015 UTC,"Should be class ConformingClass : BaseClass, SomeProtocol {"
swift,3b348n,voidref,1 point,Thu Jun 25 22:38:22 2015 UTC,"Whoops, thanks, I corrected it"
swift,3b348n,Kametrixom,1 point,Thu Jun 25 22:41:16 2015 UTC,"My example is a bit incomplete, now that I look at it. The situation is more like  class ConformingClassA: BaseClass, SomeProtocol {     *SomeProtocol Implementation* }  class ConformingClassB: BaseClass, SomeProtocol {     *SomeProtocol Implementation* }   I have two conforming classes, both subclassing the common base class and implementing the protocol. But they have different implementations for the protocol. I want to be able to assign any of them to a single variable that declares both the base class and the protocol that it must be implementing. Just like you do in Obj-C with  BaseClass<SomeProtocol> *someVar;   Anyway, apparently it is not a language feature (yet?) My workaround is to declare a variable in the protocol of type of the base class and implement it as a computed property that just returns self. Then I declare the variable as just SomeProtocol and access the base class functionality via the property. Messy, but IMO nicer than casting.  protocol SomeProtocol {     var base: BaseClass { get }     *whatever methods* }  class ConformingClassA: BaseClass, SomeProtocol {     var base: BaseClass     {         get         {              return self         }     }     *whatever methods* }  class SomeClass {     var foo: SomeProtocol      func bar()     {         foo.base.baseClassMethod()     } }"
swift,3b348n,Kametrixom,1 point,Fri Jun 26 00:16:03 2015 UTC,"You should do it like this:  class ConformingClass: BaseClass, SomeProtocol {     *SomeProtocol Implementation* }  class A : ConformingClass {     ... }  class B : ConformingClass {     ... }   Then both your classes are of type ConformingClass"
swift,3b348n,Kametrixom,1 point,Fri Jun 26 00:20:02 2015 UTC,"SomeProtocol implementation differs in the subclasses, thats the whole reason of having two (or more) of them. I could do that, implement the protocol methods as stubs in the ConformingClass and then override them in A and B"
swift,3b348n,Kametrixom,1 point,Fri Jun 26 00:22:24 2015 UTC,"Oh I see, sorry. Yeah that's apparently not possible in Swift just yet. You're looking for abstract protocol methods. See also here"
swift,3b2kdl,bmoote2,3,Thu Jun 25 13:30:33 2015 UTC,"I use size classes to provide an adaptive UI. Size classes allow you roughly distinguish between small and large spaces, so the UI layout which is used on an iPad may be used on an iPhone 6+ as well."
swift,3b2kdl,vatsal_manot,1 point,Thu Jun 25 13:44:40 2015 UTC,"Great, thanks for the pointer. I guess I didn't realize how much could be handled by size classes."
swift,3b4101,erg,7,Thu Jun 25 20:04:58 2015 UTC,"Everyone is entitled to their opinion, but I can't take this guy seriously. He didn't bother to understand why Objective C is so named before calling it a horrible name for a programming language. Don't waste your time watching this, there's no worthwhile content."
swift,3b4101,AtFillmoreEast,1 point,Thu Jun 25 21:01:05 2015 UTC,Anyone who needs advice on what programming languages to learn next seems like they are in it for the wrong reasons.
swift,3b4101,voidref,-1,Thu Jun 25 22:32:02 2015 UTC,He pretty much says what I'm thinking
swift,3aynmw,UpliftNick,5,Wed Jun 24 15:41:43 2015 UTC,"If there's one near you, NSCoderNight is a great resource: http://nscodernight.com"
swift,3aynmw,Catfish_Man,2,Wed Jun 24 16:04:56 2015 UTC,"Oh this is great, thanks for letting me know about this. I'm in San Francisco and would like to meet other Cocoa programmers."
swift,3aynmw,tianan,2,Wed Jun 24 19:19:30 2015 UTC,Will be glad to have you!
swift,3aynmw,Dippindonut,1 point,Thu Jun 25 02:31:29 2015 UTC,This might be the nicest message I have received on Reddit.
swift,3aynmw,movings,2,Thu Jun 25 02:45:05 2015 UTC,yes pls.  Maybe slack channel?
swift,3aynmw,mf_dk43,1 point,Wed Jun 24 23:15:23 2015 UTC,I think this is a great idea! I'm currently trying to learn Swift and would love to meet other people doing so as well :)
swift,3aynmw,Macuse,1 point,Wed Jun 24 15:51:44 2015 UTC,I'd be up for learning along with a few people.
swift,3aynmw,mf_dk43,1 point,Wed Jun 24 17:47:42 2015 UTC,"I would be interested in this as well, learning swift on Udemy currently"
swift,3aynmw,rozling,1 point,Wed Jun 24 18:11:58 2015 UTC,How's that going? Would love to hear from someone taking it. I started doing the Stanford course and it was (in my opinion) terrible for begginers.
swift,3aynmw,Raygun77,1 point,Thu Jun 25 01:32:12 2015 UTC,It's good! building small apps and learning through making stuff. I doubt it will get me near proficient but it has made me understand how it is done. I'm doing the Swift course by Rob Percival
swift,3aynmw,fluchtpunkt,1 point,Sat Jun 27 21:41:17 2015 UTC,I'm down for this. I like Facebook groups although not sure if they make great references later? i.e. maybe that + a wiki would be good?
swift,3aynmw,Raygun77,1 point,Wed Jun 24 18:33:13 2015 UTC,I'd be down. Why not a sub Reddit instead of a fb group?
swift,3aynmw,dickinthevajayjay,2,Wed Jun 24 19:01:42 2015 UTC,Unfortunately /r/swift is already taken.
swift,3aynmw,shibumi2k,1 point,Wed Jun 24 22:22:01 2015 UTC,"Im not able to create a sub reddit since my account hasn't been that active, but it would be great if you started one!"
swift,3aynmw,dwltz,1 point,Thu Jun 25 02:28:59 2015 UTC,How about r/SwiftStudyGroup ?
swift,3aynmw,twostraws,1 point,Thu Jun 25 03:15:16 2015 UTC,That would be great!
swift,3aynmw,Dippindonut,1 point,Thu Jun 25 05:49:00 2015 UTC,Done - just created!
swift,3b1i45,Bleuground,3,Thu Jun 25 05:21:23 2015 UTC,"I receive no errors   That's because you are explicitly telling the APIs you are calling that they shouldn't tell you about any errors.  You are passing nil for the error: argument all over the place.  The one place you do pass in an error pointer, you don't do anything with it.  Stop passing nil in as the error pointer, and then look at the errors you are given.  This will help you track down the problem you are having."
swift,3azpvt,JavaNut13,7,Wed Jun 24 20:21:43 2015 UTC,Swift on Rails.
swift,3azpvt,nepragen,3,Wed Jun 24 21:35:08 2015 UTC,Swift on Sails.
swift,3azpvt,dazonic,2,Thu Jun 25 11:49:08 2015 UTC,That's a great idea. I wonder too whether a good Swift CMS could emerge from the open-sourcing of Swift.
swift,3azpvt,3po,1 point,Thu Jun 25 18:01:55 2015 UTC,Is there any usable template language though?
swift,3azpvt,JavaNut13,2,Wed Jun 24 22:19:21 2015 UTC,Here's one I just found https://github.com/groue/GRMustache.swift
swift,3azpvt,pavelsky,1 point,Thu Jun 25 00:03:47 2015 UTC,Some kind of HAML-with-swift kind of thing would be cool..
swift,3azpvt,lusion,1 point,Thu Jun 25 00:43:07 2015 UTC,"I can't even describe how awesome it would be! I am new to Swift but I already see such a huge potential for the language, I really really like it so far. If I could use it everywhere then I would, and Rails-like Swift framework would be just grand."
swift,3azpvt,Kametrixom,3,Thu Jun 25 03:50:58 2015 UTC,"There are not really any web frameworks, nor any libraries for scientific computing, statistics, machine learning etc. I also miss a open source cryptography library. Apple does provide a pretty good one, but it is missing a bunch of stuff. E.g. it would have been nice to have access to scrypt and bcrypt.  I don't think there is any software for making compilers either. Something like parsec, yacc or lex."
swift,3azpvt,vatsal_manot,3,Thu Jun 25 07:13:22 2015 UTC,"I made a struct which lets you calculate with Intervals if anyones interested. Works accurately with +-/*, inclusive/exclusive borders. Example: 1 / [-1, 0.5[ = ]-inf, -1] u ]2, inf[."
swift,3azpvt,Kametrixom,1 point,Thu Jun 25 09:13:53 2015 UTC,Sounds neat. Do you have it on GitHub?
swift,3azpvt,vatsal_manot,1 point,Thu Jun 25 13:15:39 2015 UTC,"Will post, but first I have to do some documenting and testing and stuff. I'll reply when I'm done"
swift,3azpvt,Kametrixom,1 point,Thu Jun 25 13:32:18 2015 UTC,"Thanks, looking forward to it."
swift,3azpvt,megaman821,1 point,Thu Jun 25 13:38:23 2015 UTC,Made a post: http://www.reddit.com/r/swift/comments/3b4ck0/accurate_and_flexible_multiinterval_type_in_swift/
swift,3azpvt,asniper,1 point,Thu Jun 25 21:30:24 2015 UTC,Is there a Swift HTTP client?
swift,3azpvt,CodaFi,1 point,Wed Jun 24 23:22:50 2015 UTC,"""feature"", client implies an application"
swift,3azpvt,csvillain,1 point,Thu Jun 25 00:07:01 2015 UTC,I've been hoping for ports of GMP and Clojure's Persistent Data Structures (the latter would be much more elegant in Swift than Java).
swift,3azpvt,Kametrixom,1 point,Thu Jun 25 05:36:49 2015 UTC,"numpy for swift, use the gpu for math"
swift,3azpvt,csvillain,3,Thu Jun 25 08:57:22 2015 UTC,"There is Surge which doesn't use GPU but specialized CPU instructions made for vector operations. I tested it once and I believe it was about 10-20 times faster than with normal CPU. Surge uses Accelerate, which you can totally use in Swift, it's just a little weird with the pointers and the method names"
swift,3azpvt,-SoItGoes,1 point,Thu Jun 25 09:07:51 2015 UTC,"Wow, I didn't know about this, thanks"
swift,3azzda,Kametrixom,3,Wed Jun 24 21:31:46 2015 UTC,Run  /Applications/Xcode.app/Contents/MacOS/Xcode       In the console and Xcode will start just fine. It's annoying but it works
swift,3azzda,Rudy69,2,Thu Jun 25 04:11:00 2015 UTC,You can also drag this to your dock for quicker reopening. Thanks for the tip.
swift,3azzda,zSprawl,2,Fri Jun 26 17:39:08 2015 UTC,Now you tell me!   Really though I found out the hard way myself. Fortunately it has been pretty smooth just updating the project to use XCode 7. SSL stuff in Info.plist was the only major change.
swift,3azzda,sneeden,1 point,Thu Jun 25 01:36:46 2015 UTC,"I wish I could be so lucky. When I let Xcode 7 convert my code in the app I'm currently working on, I ended up with like five errors in AppleDelegate. I just restored the previous version of my program and went back to Xcode 6."
swift,3azzda,sneeden,2,Thu Jun 25 05:56:50 2015 UTC,"I had the same general type of issues. I found those delegate errors pretty easy to fix. In most cases (that I've seen) they change something small like a parameter name, or make an option an optional.   I comment out the declaration of the function then right above it use autocomplete to type it again. It's easy to spot the differences when they are side by side.  They changed observeValueForKeyPath as well."
swift,3azzda,jrapp,1 point,Thu Jun 25 17:02:44 2015 UTC,Thanks. That was helpful.
swift,3azzda,zSprawl,1 point,Fri Jun 26 02:22:43 2015 UTC,"Show Package Contents, navigate to Contents -> MacOS, then double click Xcode.  Was able to open a project, build, and run inside the simulator.  Haven't tried much else yet."
swift,3azzda,iNoles,1 point,Thu Jun 25 02:12:51 2015 UTC,They really want us to own multiple Macs :p
swift,3b0oop,nalexander50,0,Thu Jun 25 00:56:27 2015 UTC,"Use convenience inits, then you can chain them."
swift,3b0oop,adremeaux,0,Thu Jun 25 19:12:57 2015 UTC,Would you mind showing an example?
swift,3b0oop,adremeaux,0,Thu Jun 25 19:17:29 2015 UTC,"Well, your setup is a little strange, but something like this should work:  init(withSomeParam:Int, superParam:Int?) {     self.a1 = withSomeParam     self.a2 = 2     self.a3 = 3      if let s = superParam {          super.init(superParam:s)     } else {         super.init()     } }  convenience init() {     self.init(withSomeParam:1) }  convenience init(superParam:Int) {     self.init(withSomeParam:1, superParam:superParam) }   Now you can call either class(), class(withSomeParam:5), class(superParam:123), or class(withSomeParam:42, superParam:9001), and there isn't any copy-pasting of default values.  Please, read the section in the ebook on initializers."
swift,3av3pl,twostraws,2,Tue Jun 23 19:16:19 2015 UTC,Thank you for making these! It is inspirational.
swift,3av3pl,Knaledge,1 point,Wed Jun 24 12:36:26 2015 UTC,Very cool site!!
swift,3aw0vo,niutech,1 point,Tue Jun 23 23:19:50 2015 UTC,"Here, I uploaded it to github myself: https://github.com/Kametrixom/Swift-2.0-iBooks"
swift,3aw0vo,Kametrixom,2,Tue Jun 23 23:39:28 2015 UTC,"Thanks, but it is encrypted using FairPlay!"
swift,3aw0vo,SirGlaurung,1 point,Wed Jun 24 00:39:48 2015 UTC,"There's the online version, but I'm not sure they have a PDF/ePub outside of iBooks."
swift,3aw0vo,Kametrixom,1 point,Wed Jun 24 15:17:40 2015 UTC,"Oh, well then I can't help you, sorry"
swift,3aw0vo,lusion,0,Wed Jun 24 01:02:03 2015 UTC,What is wrong with opening it on ibooks? It is free.
swift,3avymg,_patientzero,1 point,Tue Jun 23 23:01:24 2015 UTC,https://gist.github.com/jhays/4fdb886620464ae03b38 Parallax and shading effects for UIKit
swift,3avymg,tractorrobot,1 point,Wed Jun 24 04:12:23 2015 UTC,If you go to Cocoa Controls you can find some really cool fancy UI things you like with all the code open sourced. These aren't really tutorials but you can definitely dig into something you're interested in and see how it's made. Obviously the code may not be pretty and/or the proper way to do things but it can give you at least a starting point in making your own fancy stuff.
swift,3avymg,Pango56,1 point,Wed Jun 24 05:17:09 2015 UTC,At first I thought stuff like that is hard to accomplish but actually by using spring animations you can do all that cool shit soooo easy.  Most of the time I use stuff from cocoacontrols or edit some controls from there but I'm currently a the level where I love to play around with it by myself and I have to say it's really easy to do your own awesome animation stuff.  Just google swift spring animations or watch the wwdc talk about it. awesome stuff.
swift,3au49y,live_love_laugh,3,Tue Jun 23 15:01:22 2015 UTC,Very cool! I like it
swift,3au49y,Kametrixom,1 point,Tue Jun 23 15:19:43 2015 UTC,I'm happy you do :-)
swift,3auspy,xStory_Timex,1 point,Tue Jun 23 18:01:03 2015 UTC,"Not at expert in Swift at all, but a couple thing you could try are setting the autoresizesSubviews to true, or possibly recalculating the cellWidth. You might want to println(screenWidth) when the search bar is brought into focus just to see if it has changed since the initial calculation. I'll try it in XCode tomorrow if you're still having trouble."
swift,3at6oj,csvillain,5,Tue Jun 23 08:52:02 2015 UTC,"Playgrounds only include the source code and the resources you gave it, nothing else, so it's completely safe to include it in git."
swift,3at6oj,Kametrixom,2,Tue Jun 23 14:00:02 2015 UTC,"Awesome, thanks!"
swift,3augbu,xStory_Timex,1 point,Tue Jun 23 16:33:14 2015 UTC,"yeah, i am doing it in the app (horizontal fullscreen collectionView)   view to the contentView controller as childController to the collectionView   there are some issues you should be aware of... like when reusing those cells (and controllers) - viewWill/DidAppear will not get called, autolayout and stuff  i'd suggest not doing so, ill be refactoring that later"
swift,3avmr1,quique1906,2,Tue Jun 23 21:29:55 2015 UTC,"Looks like you're trying to edit UIKIts UIViewContoller library header  file, which is a no no."
swift,3avmr1,asniper,1 point,Tue Jun 23 23:20:15 2015 UTC,"Ah thanks, that seems to be it"
swift,3at0jd,Lewons,3,Tue Jun 23 07:20:20 2015 UTC,Why not just use a button? You can set a custom image for a button.  UIButton documentation
swift,3at0jd,lyinsteve,1 point,Tue Jun 23 14:14:32 2015 UTC,"Thanks, that's a glod idea, didn't think of it. I'll try it out :)"
swift,3at0jd,Pango56,2,Wed Jun 24 08:36:47 2015 UTC,"You can use a UIButton and add it as a subview on top of say a UIImageView and use either autolayout or just directly set the frame of the button as it will be in the coordinate space of the UIImageView. (For example, if you set the frame of the button to be (0,0) it will be in the top left corner of the image"
swift,3apqxj,NSCFType,2,Mon Jun 22 14:39:34 2015 UTC,Nice!  I think I prefer the - Parameter syntax to :param:.
swift,3aopnk,voidref,16,Mon Jun 22 06:47:13 2015 UTC,"For crusty old Java programmers, protocols are interfaces."
swift,3aopnk,RA_Carson,21,Mon Jun 22 09:47:02 2015 UTC,"For even crustier Objective-C programmers, interfaces are protocols.  From Java co-creator Patrick Naughton:  ""Java's 'interface' is a direct rip-off of Obj-C's 'protocol'""  http://cs.gmu.edu/~sean/stuff/java-objc.html"
swift,3aopnk,gilgoomesh,4,Mon Jun 22 14:15:48 2015 UTC,I was trying to help provide a translation of similar concepts that a subset of people who might be interested could relate to.  Not start a language pissing war.
swift,3aopnk,RA_Carson,8,Mon Jun 22 14:42:16 2015 UTC,I didn't see it as any sort of pissing war; I thought it was a rather humorous response =)
swift,3aopnk,JustAnotherLurker5,-5,Mon Jun 22 16:22:48 2015 UTC,Great example of being completely correct and a dick at the same time
swift,3aopnk,downvotefodder,3,Mon Jun 22 15:51:41 2015 UTC,"so finally got around to watching this and here is my take...  1 - its great that apple is finally promoting best practices.  If they would start to do the same for MVVM that would be great.  I was reading a tutorial the other day that was explaining MVC and it said ""...the C in MVC stands for controller; this is where all of your business logic should reside.""   Yeah - seriously this guy is teaching newbies how to build Massive View Controllers.  2 - The speaker is presenting ""protocol oriented programming"" as if its some awesome methodology that apple invented for Swift.  I guess I shouldn't be too surprised since apple does this all the time when presenting new iOS features that have been present on other mobile OS's for years.    But seriously guys, protocols are interfaces.  Yes there are some slight differences between a Swift protocol and a .Net/Java interface (i.e. providing a default implementation for a protocol) but they are practically the same thing and designing your code architecture to take advantage of abstraction is nothing new.  There is a book titled ""The Complete Reference - Visual Basic.Net"" by Jeffrey Shapiro that was published in 2002 that teaches these same concepts and is where I first learned ""interface oriented programming"" - we simply referred to it as ""coding by interface"".  So this is a minor point but it just irks me when Apple takes on the ""look at what we invented that's never been done before"" attitude.  3 - I take issue with the fact of the speaker showing an older gentleman and labeling him as Crusty and ancient in his methodologies.  Yes I get that in the end Crusty was vindicated but it still leaves an initial impression in many young coders that older programmers are somehow out of touch and can't keep up (Zuckerburg stated this flat out in an interview he gave not too long ago - apparently he isn't aware of age discrimination and the flat out absurdity of the statement).    In my experience I've found that the arguments made by ""Crusty"" are more typically made by a lot of today's JavaScript programmers (young and old).  You wouldn't believe the level of resistance many had to ES6 adopting OO principles.  Especially if they learned to code on traditional JS and don't have experience in another language.    Since this is a swift related talk, I'm guessing that maybe he was attempting to characterize experienced Obj-C programmers that are reluctant to use OO because I seriously doubt that there are any .Net or Java coders (young or old) that don't readily embrace OO.  4 - The speaker forgot to mention the very important guideline of when to use base classes vs protocols - when you need to provide an expected method signature set to unrelated classes use a protocol.  If you want to provide a signature set that should only apply to a group of related types then use a base class (or you could use a constraint if you run into the multiple-inheritance problem).    Additionally (as suggested in the video) create a protocol/interface for your classes when you want to provide a level of abstraction between a classes signature and its implementation (which is useful for things like creating a test or fakes layer i.e. Bob is not yet thru coding the DataServices layer so Jim makes a FakesDataServices layer that implements the DataServicesProtocol and the view model layer only accepts protocol parameter variables - that way the view model doesn't know who is sending it data - it just knows the expected public signature).  5 - I wish Apple would promote a coding standard to easily identify protocols vs classes.  At one point the speaker highlights the Renderer protocol in the Drawable class signature and says ""see Renderer is a protocol not a class"".  My point being is see how he had to point out to us, the audience, that it was a protocol not a class since it isn't immediately obvious.  In .Net and Java its a pretty universally accepted coding standard that interfaces are prefixed with a captial ""I"".  So in .Net the interface would be named IRenderer which instantly provides visual feedback to the person reading the code that this is an interface not a class.  Maybe protocol types should be suffixed i.e. ""RendererProtocol"".  Also there should be a standard to eliminate the ambiguity between allowing the 2 terms ""protocol"" and ""delegate"" from being used interchangeably.  Maybe ""protocol"" is used to identify the type and ""delegate"" is used when naming protocol variables i.e.  func someFunc(rendererDelegate : RenderProtocol)"
swift,3aopnk,shooky1,3,Tue Jun 23 23:58:18 2015 UTC,I think this can be a valuable talk for those people who think Swift is just a rehash of C#. I think this shows how much more powerful protocols in Swift are than interfaces and Java and C#. Although to be fair some of this power goes back to Objective-C.   It is worth remembering that some of the advantages of Swift is advantages that Objective-C already had over Java/C# type of languages.
swift,3aopnk,lusion,0,Mon Jun 22 11:21:48 2015 UTC,"More powerful than C# in what way? C# has had interface extensions since 2007. Infact, most of LINQ is built around interface extension methods, which perform many of the same kinds of logic being showcased in this WWDC video.  Furthermore, very few would consider Objective C's ""message passing"" approach to OOP a benefit; it caused significant overhead with almost no use-cases. Nevertheless, C# added support for it (via the dynamic keyword) in 2010 because it made it easy for Microsoft to provide bindings to C# for their (obscenely convoluted) Microsoft Office API. But it was intended just for those very few use cases; not for every day use.  So again, what advantage are you talking about? There's nothing ground breakingly new here, to C# programmers, just yet another flavour with subtle (mostly syntactic) differences here and there."
swift,3aopnk,xFleury,11,Mon Jun 22 13:26:42 2015 UTC,"More powerful than C# in what way? C# has had interface extensions since 2007   Yes, with that and generic interfaces you can often achieve the same as in Swift, but there are a few features that can't be expressed easily in C#/CLR. For instance, protocol extensions can provide a default implementation for methods that are mentioned in the protocol as well. CLR doesn't support that.  Protocols support constructor requirements and static method requirements.  Some of it is also a matter of exploiting the things that already exist. For example, Swift adds extension methods to some protocols IF their associated type is also Comparable. In C# this would be like adding extensions to IEnumerable<T> (for instance) if T : IComparable<T>. This can be expressed, but often isn't, at least not by the standard library.   Furthermore, very few would consider Objective C's ""message passing"" approach to OOP a benefit; it caused significant overhead with almost no use-cases   Swift doesn't use that, though."
swift,3aopnk,cryo,6,Mon Jun 22 14:53:39 2015 UTC,"Extensions in C# is really just syntax sugar for static functions. In Swift and Objective-C the methods actually get added to the class. So you can do things such as make a class from a third party adopt a protocol you wrote. You don't need to know the type of the object to call the methods added through extensions as this is not just some static function syntax sugar trickery like in C#.  Swift and Objective-C protocols can also be listed to give multiple requirements on a variable. E.g. you can say a variable holds and object which implements both protocol A and B. Further it is the way protocols are used to define constraints for generics.  ""Very few consider message passing a benefit"" is just an empty assertion. Those who love smalltalk and similar languages will quite enthusiastically tell you of the power that gives. You simply have not experienced any use cases because .NET APIs are not designed for it since it poorly supports it. For Cocoa on the other hand a long list of powerful technologies are dependent on it: target-action, key value coding, bindings, core data, delegation, message forwarding, undo systems. remote method invocation etc. All of these things are  made trivial with message passing systems. Not to mention how much easier it is to interface with different programming languages such as ruby, nu, python, f-script etc. Since you don't need to know the exact type of the receiving object, its memory layout, size etc. You can just send a message."
swift,3aopnk,lusion,2,Mon Jun 22 16:12:01 2015 UTC,It's a fascinating topic presented very well.
swift,3aopnk,RA_Carson,2,Mon Jun 22 06:47:33 2015 UTC,It's all protocol oriented object programming to me.
swift,3aopnk,feelix,0,Mon Jun 22 09:55:19 2015 UTC,tl;dw?
swift,3aopnk,TelyX,3,Mon Jun 22 07:39:34 2015 UTC,Swift is a protocol-oriented language at its heart and you should watch this in your free time to understand what that means and how to use it as a benefit to your code.
swift,3aopnk,feelix,0,Mon Jun 22 08:47:39 2015 UTC,"thanks, but i watched it and feel it wasn't really that interesting. I would refer you to this: http://blog.metaobject.com/2015/06/protocol-oriented-programming-is-object.html"
swift,3aopnk,lusion,6,Mon Jun 22 09:11:20 2015 UTC,"Some of it was of course just rehash of regular OOP patterns, but I think what is interesting is how protocols in swift makes it much easier to achieve OOP style design which hasn't really been possible in most statically typed OO languages.  Many of these things have been possible in Smalltalk, Ruby and Python but not in Java, C# and C++ e.g.  Providing default implementations for a protocol isn't something I know of being done in any other mainstream OOP language."
swift,3aopnk,Hawk_Irontusk,2,Mon Jun 22 11:25:17 2015 UTC,"So what? The practices presented in the video are good, they work well in Swift and using them will make your code better. Why does it matter what you call them, where they first appeared or how similar they might be to other techniques?"
swift,3aopnk,feelix,-1,Mon Jun 22 09:49:20 2015 UTC,to those of us versed in OO this simple protocol pattern is not the best way to spend 40 minutes to learn something
swift,3aopnk,Hawk_Irontusk,4,Mon Jun 22 10:42:08 2015 UTC,"I get it now. You're like the anti-Crusty. You've seen this before, so it's not worth revisiting.  I don't mean to be a dick, but how about adding to the community instead of tearing it down? Tell us some other cool applications that those of you well versed in OO take for granted. Give something original back to us instead of being a sideline complainer."
swift,3aopnk,shiggie,3,Mon Jun 22 14:05:52 2015 UTC,"I don't think he was complaining.  I found his comment helpful.  The video has some helpful information, but there are many other videos that I found more helpful.  There is a wide range of people in /r/swift, so OP's advice applicable for everyone."
swift,3aopnk,Hawk_Irontusk,1 point,Mon Jun 22 16:39:06 2015 UTC,"It's not what he said so much as the way he said it   tl;dw?   He didn't watch it. Fair enough.   thanks, but i watched it and feel it wasn't really that interesting. I would refer you to this: http://blog.metaobject.com/2015/06/protocol-oriented-programming-is-object.html[1]   Oh he did watch it. Okay I guess he could have watched it between those posts, but... I doubt it. It looks like his first post was trolling. His goal was to post his ""Your video sucks"" blog post and then   to those of us versed in OO this simple protocol pattern is not the best way to spend 40 minutes to learn something   Talk about how real programmers already know this stuff.  He could have saved a lot of time and effort by just pointing out that the techniques are grounded in OO and linking the article. Or better yet, extending on the information in the video with his extensive OO knowledge."
swift,3aopnk,feelix,-1,Mon Jun 22 16:47:41 2015 UTC,"I didn't watch it and asked for a tl;dw and one was not forthcoming, so I did watch it, and it was not interesting, then I made that post. It shouldn't be hard to sync those events up if you take a look at the timeline."
swift,3aopnk,charlierunkle69,2,Mon Jun 22 21:01:03 2015 UTC,Great presenter. Does anyone else think he actually IS Crusty? ;)
swift,3aopnk,naughty_ottsel,1 point,Tue Jun 23 01:34:27 2015 UTC,"Heh, on one of the slides, it says ""Don't call him Jerome,"" this may be a hint."
swift,3aopnk,niutech,1 point,Tue Jun 23 04:56:28 2015 UTC,I really enjoyed this session and is definitely an interesting way to approach things. But the benefits are instantly visible.
swift,3aopnk,downvotefodder,1 point,Mon Jun 22 08:35:07 2015 UTC,YouTube link
swift,3aopnk,downvotefodder,-1,Tue Jun 23 21:15:34 2015 UTC,"Fuck this guy and his ""crusty old grump"" straw man"
swift,3aopnk,downvotefodder,3,Mon Jun 22 23:47:57 2015 UTC,"Really? The last thing he says is ""Be like Crusty"""
swift,3aopnk,maxgotsull,-1,Tue Jun 23 00:13:26 2015 UTC,Really.
swift,3aqtpk,minsanity6,6,Mon Jun 22 19:35:33 2015 UTC,viewDidLoad is called when the NIB finished loading. At this time the view is not visible on screen.   viewDidAppear is called when the view is visible on screen.
swift,3aqtpk,kielrene,3,Mon Jun 22 19:41:51 2015 UTC,"Good to note is that viewDidLoad is called only once per instance, but viewDidAppear is called every time the view becomes visible, for example when pushing and then popping back on a Navigation controller."
swift,3aqtpk,moridinbg,1 point,Mon Jun 22 21:17:52 2015 UTC,"Another good note is that viewDidLoad is called the first time the UIViewController's view property is accessed, so it could be called before the view is even presented."
swift,3aqtpk,blaizedm,3,Tue Jun 23 08:00:19 2015 UTC,http://stackoverflow.com/questions/5630649/what-is-the-difference-between-viewwillappear-and-viewdidappear. This seems to be a good explanation.
swift,3ar2dm,minsanity6,2,Mon Jun 22 20:38:29 2015 UTC,Could you post the current code you have? It's tricky to work out what your intention is without an example of what you are doing now.  It sounds like perhaps the presenting view controller should be dismissing the children.
swift,3ar2dm,300zxkyle,1 point,Mon Jun 22 20:57:14 2015 UTC,I added my code!
swift,3ar2dm,300zxkyle,2,Mon Jun 22 21:31:16 2015 UTC,"ViscountVics method would work.  You could also make the GameVC a delegate of the WinVC and have a dismiss method that is on GameVC that will dismiss both view controllers.  if (self.delegate && self.delegate.respondsToSelector(Selector(""dismissAll"")) {     self.delegate.dismissAll() }   edit: there are better ways to do this in Swift (especially Swift 2) the basic syntax of my answer is from Obj-C since I've been working with it all day. I personally prefer the delegation over the unwind, since unwinds can be finicky to hook up, and sometimes just plain don't do anything (there are bugs involving navigation controllers in iOS7)."
swift,3ar2dm,300zxkyle,1 point,Tue Jun 23 01:02:13 2015 UTC,Away from my computer right now. As soon as i can i'll have a look see.
swift,3ar2dm,ViscountVics,2,Mon Jun 22 22:52:52 2015 UTC,in this case you gotta use the unwind segue.  steps:   make IBAction of unwind segue on the VC you want to unwind to (in this case the level vc) make a segue from winVC to exit node and select the unwind IBAction that you just created   some stackoverflow answer might help you here.  http://stackoverflow.com/questions/12561735/what-are-unwind-segues-for-and-how-do-you-use-them
swift,3ar2dm,ViscountVics,1 point,Tue Jun 23 00:05:38 2015 UTC,"Thanks, I used unwind and it worked. But if I use unwind segue to go back to the view where it's three views ahead, would it ""dismiss"" the three views? in other words, would it remove the three views from top of the stack?"
swift,3aq62r,Pango56,1 point,Mon Jun 22 16:39:09 2015 UTC,"It means that this parameter shouldn't be nil but its technically possible. It doesn't actually try to unwrap the optional on function call, but rather when you use it. I think implicitly umwrapped optionals as function parameters don't actually make a lot of sense. I'm not on my Mac rn, but maybe it can be used like this:  func prinIt(str: String!) {     print(str) }  var optString : String? = nil // Do some other stuff if optString = nil {      optString = ""lel"" }  printIt(optString)   Does this work?"
swift,3aq62r,Kametrixom,2,Mon Jun 22 17:19:03 2015 UTC,"func prinIt(str: String!) {     print(str) }  var optString : String? = nil // Do some other stuff if optString = nil {      optString = ""lel"" }  printIt(optString)   This does work. However, the exclamation mark seems ambiguous because if you call printIt(nil) it will not throw a runtime error as I would expect it to since implicitly unwrapping nil would cause one. What's the reasoning behind not throwing an error and is it simply a convenience to unwrap the parameter when you use it rather than passing in an optional?"
swift,3aq62r,Kametrixom,2,Mon Jun 22 17:42:26 2015 UTC,"An implicitly unwrapped optional which is nil will only throw a runtime error when the underlying value tries to be accessed. I would suggest to never use implicitly unwrapped optionals as function parameters, because it's very confusing. The example above can be redone like this:  func prinIt(str: String) {     print(str) }  var optString : String? = nil // Do some other stuff if optString = nil {     optString = ""lel"" }  printIt(optString!)   which is more clear because you're unwrapping optString to say that you don't expect there to be nil"
swift,3aq0bm,xStory_Timex,1 point,Mon Jun 22 15:55:21 2015 UTC,Even I would like to know how to do that!
swift,3amu2u,Kingvole,30,Sun Jun 21 19:46:58 2015 UTC,"I wrote a whole book on learning Swift from scratch, and it's completely free online. A couple of days ago, following a suggestion from a Redditor, I added an extra chapter that lets you choose how you prefer to learn, so:   If you prefer to learn by making stuff, click here to learn Swift by making real iOS apps. If you prefer to learn the language in isolation, click here to learn to program in pure Swift.   Obviously I think my tutorials are the best (yay! go me!), but I think they do have a few advantages:   They are completely free; I make my costs back with unobtrusive Google ads. They are project-based, so you learn things with a purpose. I teach Swift on a need-to-know basis, so you never get overwhelmed with things. I come here many times a day to answer questions, or you can find me on Twitter @twostraws.   Enjoy!"
swift,3amu2u,twostraws,2,Sun Jun 21 21:14:59 2015 UTC,"I've been working on the iOS projects, and they've been really good, nice work! Glad to see that there is also a guide for swift on its own :D"
swift,3amu2u,applepod124,2,Mon Jun 22 07:43:59 2015 UTC,"hey thank you! the tutorials on the pure code side are pretty simplistic and easy to grasp. I absolutely love the project side, and the way you split them into two levels.> click here to learn to program in pure Swift"
swift,3amu2u,JustAnotherLurker5,1 point,Mon Jun 22 07:46:35 2015 UTC,Updated for Swift 2?
swift,3amu2u,twostraws,1 point,Mon Jun 22 16:28:09 2015 UTC,"The book will be updated to Swift 2 once it's final. In the meantime:   I wrote an intro to Swift 2's new features including detailed discussions of try/catch, guard, defer, and #available. I've recorded a what's new in Swift 2 video on YouTube The new Swift for Complete Beginners introduction chapter is updated to note Swift 2 changes as appropriate.   So, no shortage of Swift 2 for the keen upgraders :)"
swift,3amu2u,Sebaall,2,Mon Jun 22 18:25:02 2015 UTC,"Hacking with Swift is great! Thank you for it! Actually, I've been doing projects from there in Swift 2 and I find it very useful and beneficial to translate some bits of code to Swift 2. It helps learn the new syntax and spot differences between Swift 1.2 and 2. The only project I gave up translating to 2.0 Syntax is that one using SwiftyJSON - there were soo many errors in this file :). The main reason I use Swift 2.0 is that XCode 7 allows me to test apps on my devices without full developer account. It's so much fun to play with SpriteKit and CoreMotion ;)."
swift,3amu2u,DakotaK_,1 point,Mon Jun 22 21:51:24 2015 UTC,"Have you thought about making a video course, like on udemy or YouTube? I think it would be a good feature, even if you did charge for it, (you can with udemy). Also could you add a (really in depth SpriteKit chapter, section, or book? (I don't mean a how to make a flappy bird clone type thing, as they don't show you much, as I am currently learning SpriteKit.)"
swift,3amu2u,twostraws,1 point,Sat Jun 27 18:18:07 2015 UTC,"I made videos for each of the original tutorials – they are all on YouTube. Problem is, shortly after Apple changed the Swift syntax with 1.2, and they've done it again with Swift 2.0, so the videos date very quickly. Each video took four or five hours to make, and I don't have the resources to keep updating them as each release whizzes by.  As for SpriteKit: Hacking with Swift projects 11, 14, 17, 20, 23, 26 and 29 all use SpriteKit – was there something particular that I didn't cover?"
swift,3amu2u,throwawaycompiler,3,Sat Jun 27 20:31:25 2015 UTC,"If you have some programming experience, and are a ""decently good Object Oriented Programmer"" then you should try and follow the (free) Stanford iOS Course on iTunes.   Also if you haven't already, maybe a quick readthrough of the book The Swift Programming Language published by Apple (also free on iTunes) or here.   I don't know of any other good sources, but it seems that through a Google search there seems to be a lot of ok places to start. Like here, here and here.   If you seem to be already pretty good with the language itself and are confused about XCode and all that goes with it, try the tips here (reddit link). Or just any book, which works for me!   Or like for me, buying a book always works, or helps a ton at least. There are tons on Amazon I'm sure. Or torrent one! Good luck! Remember, start small and build up."
swift,3amu2u,AmirMoosavi,3,Sun Jun 21 20:05:48 2015 UTC,"I used Treehouse, you can get a free 1 month trial and the Swift track should only take you that long.  Ray Wenderlich also has some good Swift tutorials."
swift,3amu2u,Xioo,2,Sun Jun 21 20:43:25 2015 UTC,Treehouse is incredible. The two instructors they have teaching Swift explain everything very well and give great examples to help you understand what everything is/does.
swift,3amu2u,AmirMoosavi,2,Mon Jun 22 12:24:38 2015 UTC,I've gotten so used to watching the videos at 1.5x - 2x speed their voices sound so weird when I play videos at regular speed :P
swift,3amu2u,ArvoHeikki,2,Mon Jun 22 12:50:18 2015 UTC,"The ""iOS Apprentice"" books from RayWenderlich.com would probably be perfect for you. They're tutorial-based, and they work essentially from the ground up.  Delegates and protocols are confusing to pretty much everybody at first because the concepts aren't exactly intuitive. The best way to get better at them is just to practice the pattern, pay close attention to the implementation, and gain an understanding of precisely what you're doing at each step. In iOS Apprentice, you'll see and use delegation all over the place."
swift,3amu2u,sbrown75,2,Sun Jun 21 23:41:34 2015 UTC,"I'll second twostraw's recommendation of his tutorials.  They're quite good.  You'll learn lots working through them.  However, if you're an absolute beginner, I'd start at weheartswift.com's basic tutorials.  The first one is here.  If you're coming from another language, this will go quickly and you can jump into the other tutorials that others have mentioned above and not feel completely out to sea.  Good luck!"
swift,3amu2u,twostraws,2,Sun Jun 21 21:28:31 2015 UTC,"Did you try the new Hacking with Swift introduction? It goes over all the language concepts in isolation, and might have been what you were looking for. Advance warning: It includes Taylor Swift lyrics."
swift,3amu2u,Lanza21,-2,Sun Jun 21 21:31:14 2015 UTC,"You can't just know Swift. All of Apple's frameworks are written in Obj-C. You need to know Obj-C.  That being said, they are so similar that knowing one makes it quite easy to go to the other.  The path I took was:  Learn C on the Mac / Absolute Beginners Guide to C Learn Objective C on the Mac / Big Nerd Ranch Objective C Big Nerd Ranch iOS / Big Nerd Ranch OS X / Apple's Swift Programming Guide"
swift,3amu2u,voidref,2,Mon Jun 22 00:45:13 2015 UTC,You are getting down votes because this is actually not true. Swift is fully interoperable (except where they have explicitly denied access to certain methods as a matter of design) with Cocoa.  You don't need to know objc to use Cocoa any more. This is one of the major selling points for Swift.
swift,3amu2u,sigpoggy,1 point,Mon Jun 22 06:54:45 2015 UTC,"Unfortunately most of Apples programming guides are still in objc. Also most third party libraries are in objc. In addition, often code that Interfaces with objc does work as you might expect and a knowledge of objc is needed to figure it out. Then there are a few cases where you need objc code to solve a problem that swift can't handle like dealing with exceptions. On top of all that, if you want to learn how to do a specific thing and no one has yet shared the swift solution, you will need to understand the objc explanation. There are also the low level memory management issues for C and C++ you might need to understand when using core libraries."
swift,3amu2u,iDeviceDeveloper,1 point,Mon Jun 22 14:22:07 2015 UTC,"Well, some APIs are pretty low level. CoreAudio is a good example. We'll never be rid of obj-c or C for that matter. Do you need to know Obj-C to make an app? No. Is it great to know? Absolutely."
swift,3andbw,NofelMahmood,1 point,Sun Jun 21 22:36:52 2015 UTC,Alternative for offline sync is YapDatabase w/ CloudKit Extension: https://github.com/yapstudios/YapDatabase/wiki/YapDatabaseCloudKit  This has been working really well for me.
swift,3andbw,epaga,1 point,Mon Jun 22 09:16:00 2015 UTC,That is awesome. The best thing about CKSIncrementalStore is that you can reuse your CoreData knowledge and power your apps with it while leaving all the cloudkit hassle to it.
swift,3an5re,canhelp,1 point,Sun Jun 21 21:30:14 2015 UTC,"Looks good so far, I see you use Alamofire, have you used SwiftyJSON in conjunction with it?"
swift,3an5re,AmirMoosavi,2,Mon Jun 22 11:49:00 2015 UTC,I tried using it but SwiftyJson is not compatible with Swift 2 as of now.
swift,3an5re,AmirMoosavi,1 point,Mon Jun 22 15:41:20 2015 UTC,"Didn't know that, from what version of Xcode did they start using Swift 2?"
swift,3annfs,mavdev,2,Mon Jun 22 00:09:51 2015 UTC,For the most part I rely on verbosity and clearly named parameters. There's only been a few times where I put what a function does in a comment above it.  I do however use #prama mark - name to group functions in the outline dropdown menu thing.
swift,3annfs,Ceribis,2,Mon Jun 22 00:32:21 2015 UTC,"""Jump Bar"" is the term you were looking for. :)"
swift,3annfs,tcdb28,2,Mon Jun 22 04:11:33 2015 UTC,I hope to god I never have to work on your code.
swift,3annfs,spinwizard69,1 point,Tue Jun 23 23:36:03 2015 UTC,"Don't get me wrong, the methods I write are typically small and pretty focused so it's not difficult to follow. I'll drop in explains above a method when it's particularly complex or the logic begins to get difficult to follow."
swift,3annfs,Ceribis,1 point,Wed Jun 24 11:46:42 2015 UTC,"Honestly, the comment that you have added doesn't really tell us any more than the function signature does. At least the param and returns part.  I think the main comment stating what the function does is good, but the other part adds nothing to the code. You might want to use the param and returns space to expand on what the method might be used for."
swift,3ao17u,indiejellyfish,1 point,Mon Jun 22 02:21:39 2015 UTC,There's a setting in the compass app to toggle true vs magnetic. I think it's off by default which would be different from your code (newHeading.trueHeading).
swift,3an3it,iD986,1 point,Sun Jun 21 21:10:22 2015 UTC,"You have a few options here, depending on how you want it to adapt:   Do you want it to look just like the 4"" version, centered with white space around it? Do you want it to grow in either or both dimensions to fit the bigger screen size? Or, do you perhaps want it to grow in just one dimension (width perhaps) while he spacing between the button grows?    Let me know and I'll walk you through setting up the right constraints. Are you using IB or code to layout these views?"
swift,3an3it,mistermagicman,1 point,Mon Jun 22 06:51:35 2015 UTC,"Just like the 4"" with white space, because when I add in more languages I need to have room, and the views are laid out using IB"
swift,3an3it,mistermagicman,1 point,Mon Jun 22 11:48:05 2015 UTC,"Alright, not sure why that affects how you lay it out now — either way, they'll just adapt when you add more. Regardless, here's what you need to do:   Each button should have a placeholder view above and below it, so you have a structure like so:  -- placeholder uiview --  -------- button ---------  -- placeholder uiview --  -------- button ---------  -- placeholder uiview --  etc. Now add the follow constraints:   Each placeholder view needs to be pinned to the button or top/bottom edge if it's the top/bottom placeholder, that it's in between, with a constant of 0.  Each button needs to have a fixed height, which you determine however you wish. You accomplish this by dragging a constraint from the button to itself, then selecting height.  Now, for every placeholder, drag a constraint to the top placeholder and select ""Equal widths"" (or select all the placeholder views and use the layout menu to add that) Finally, make sure you setup width constraints (I'll let you decide how to do this — either pin to the superview edges, or set a constant width and center in the superview)   Just update the frames and everything should be good in IB. That should be enough constraints for the buttons to evenly spread out, with the distance being chosen by the placeholders and the fact that they all have the be the same height.   Yes this is annoying, but it's also the only way to do this right now. iOS 9 introduces UIStackView, which solves this issue, but that won't work on iOS 8 or older. If you're familiar with Cocoapods, you can look into OAStackView, which attempts to back port it, but if you're not familiar with Cocoapods and third party frameworks it's probably not worth it right now.   Good luck! Let me know if you need any more help."
swift,3anrh9,live_love_laugh,1 point,Mon Jun 22 00:48:44 2015 UTC,"make sure your running the app on the iOS9 simulator or a iOS9 device as the CGImage property is new in iOS9, or if you are on OSX the property is available only if you are running 10.11  see for iOS9 https://developer.apple.com/library/prerelease/ios/documentation/SpriteKit/Reference/SKTexture_Ref/index.html#//apple_ref/occ/instp/SKTexture/CGImage and for OSX 10.11 https://developer.apple.com/library/prerelease/mac/documentation/SpriteKit/Reference/SKTexture_Ref/index.html#//apple_ref/occ/cl/SKTexture"
swift,3anrh9,Ituron,1 point,Mon Jun 22 09:47:40 2015 UTC,Yeah someone on SO told me the same. I eventually fixed it like this: http://stackoverflow.com/a/30971536/1498652
swift,3amcm6,Pango56,6,Sun Jun 21 17:13:39 2015 UTC,"Shorthand syntax is definitely preferable, although it continues to be irritating that there is no autocomplete support. Fun fact: it works in more than just enums! Try view.backgroundColor = .blueColor(), for example."
swift,3amcm6,twostraws,1 point,Sun Jun 21 17:38:03 2015 UTC,"Why is it preferable? I think it would cause confusion in the future or for anyone looking at your codebase for the first time. Also, I've had trouble using short hand syntax in place like UIView.animateWithDuration(_:delay:options:animations:completion:) for the options."
swift,3amcm6,csvillain,3,Sun Jun 21 19:41:52 2015 UTC,"It's preferable to keep your code concise.  If someone is looking at a line of code, they already have enough context to know that .DetailDisclosureButton means UITableViewCellAccessoryType.DetailDisclosureButton. The difference is that the latter option is an incredible 51 characters long, which, when you consider that many style guides prefer lines of code to be no longer than 80 characters, is quite a chunk of space on your screen.  My Xcode setup uses quite a large font, but there's still enough room for maybe 120 characters per line when I'm running full screen. If I have the option of enums taking up half the space so I can focus on the important stuff, that's definitely preferable.  If someone is new to my codebase, I don't think my enums are likely to prove the most challenging thing to understand – are you really using that many? And are they very similarly named? If so, perhaps the long form is for you."
swift,3amcm6,twostraws,2,Sun Jun 21 21:10:13 2015 UTC,"My somewhat limited experience has been that in Swift, where available, shorthand syntax is preferred as long as it doesn't impact readability. In the specific case of a variable called Direction, it should be pretty clear what the type is without specifying, if the surrounding context supports it."
swift,3amcm6,KyleCardoza,1 point,Sun Jun 21 17:26:03 2015 UTC,"The less I have to write, the better. Also, the less I have to read, the better. If your class has a property named foo.direction, I don't need to be told that foo.direction = Direction.North, I would totally understand foo.direction = .North."
swift,3amcm6,blaizedm,1 point,Sun Jun 21 18:44:46 2015 UTC,"I have mixed feelings about this.  I've had Xcode's code completion/navigation break on me on numerous occasions to where I couldn't have clicked on   .East   for example and chosen to navigate to the definition.  In that instance, the short hand made my life a little more challenging to find the enum and see other values.    I don't think the shorthand is bad, but when the tooling fails you (and for whatever reason mine fails frequently), it can make like difficult.  I'll admit that in C#, I would have done the long-hand version just for readability."
swift,3amcm6,digitalburro,1 point,Sun Jun 21 18:48:38 2015 UTC,This is a temporary limitation of the current Xcode :/
swift,3alz66,sbrown75,2,Sun Jun 21 15:08:08 2015 UTC,"I just finished writing a tutorial about GameplayKit and GKMinmaxStrategist that you might find useful. I took apart Apple's Four in a Row sample code (you're right, it isn't their best!), rewrote it in Swift, simplified the weird bits, then wrote up exactly how it works. It might not be exactly what you're looking for, but I hope it will at least help."
swift,3alz66,twostraws,2,Tue Jun 23 19:14:37 2015 UTC,"I'm giving it a try right now, will report"
swift,3alz66,Kametrixom,1 point,Sun Jun 21 18:14:03 2015 UTC,"I have implemented TicTacToe, but there must be a bug somewhere, because there is no strategy at all right now  -.-"
swift,3alz66,Kametrixom,1 point,Sun Jun 21 20:12:05 2015 UTC,I got you: http://stackoverflow.com/questions/30970216/gameplaykit-how-to-implement-gkminmaxstrategist/30970217#30970217
swift,3alz66,Kametrixom,1 point,Sun Jun 21 23:10:52 2015 UTC,"Wow, this looks like it will be great to dig into.  Thank you for all of your work on this project--and for the code comments!  (And sorry you were downvoted on StackOverflow.)  This should be fun to play with."
swift,3alz66,Kametrixom,1 point,Mon Jun 22 00:49:59 2015 UTC,"Ya, it's okay, I'm not concerned about downvotes, it's just so that if someone looks for something like this they'll find it there :D"
swift,3alz66,Kametrixom,1 point,Mon Jun 22 01:36:17 2015 UTC,I reposted my question in StackOverflow.  http://stackoverflow.com/q/30992459/4831939  Will they be ok with you putting your answer and link to GitHub there?
swift,3alz66,Kametrixom,1 point,Tue Jun 23 01:36:00 2015 UTC,"Haha thanks, I'll try with a more descriptive answer. It has been downvoted because I didn't actually gave the answer on stackOverflow but instead posted a link to the answer. I don't really like that rule but it kinda makes sense"
swift,3am8hu,pavelsky,2,Sun Jun 21 16:36:35 2015 UTC,Absolutely
swift,3am8hu,jimmydapags,2,Sun Jun 21 18:32:36 2015 UTC,"The GoF book is mostly about providing a shared vocabulary for talking about the design of programs. It's pretty broadly applicable. Functional programming patterns usable in Swift probably aren't described by it, but that's fine, it doesn't have to cover everything."
swift,3am8hu,Catfish_Man,2,Sun Jun 21 19:18:46 2015 UTC,"If you want to understand design patterns as found in Cocoa it is worth reading https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaEncyclopedia/Model-View-Controller/Model-View-Controller.html  in addition to Gang of Four. Cocoa design patterns are often older than when design patterns was formalized and so terminology is slightly different.   I also think that the links description  ""MVC as a Compound Design Pattern"" is the best description I have read about MVC. It really helps understand MVC in general and what it means in Cocoa.  Patterns like observer and strategy pattern is probably best described as delegate, datasource and similar in the cocoa world: https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaEncyclopedia/DelegatesandDataSources/DelegatesandDataSources.html#//apple_ref/doc/uid/TP40010810-CH11-SW1"
swift,3am8hu,lusion,1 point,Mon Jun 22 11:30:46 2015 UTC,"Great, bookmarked for the reference, thanks!"
swift,3am8hu,dickinthevajayjay,1 point,Mon Jun 22 14:11:59 2015 UTC,"I'm not familiar with the specific book, however, I definitely know from experience that design patterns carry over into Swift. For example, a Singleton in Swift is implemented in almost the exact same way as Java. Of course, some of the keywords are changed, but all the principles are there. Delegation is another concept, and that comes from the idea of protocols (interfaces in Java). So if you know these base concepts/are learning them through a book, they should be easily transferrable to Swift.  However, there are some things that Swift has that other languages don't. Optionals are one of these examples. You want to make sure you learn how to use these properly and using for example if let and as! vs as? before you start implementing the design principles in your real code."
swift,3am8hu,lusion,1 point,Sun Jun 21 17:26:31 2015 UTC,"Eh is singletons really done the same way as Java? In swift since globals are lazy evaluated you can do singletons more elegantly than in Java, unless Java also has some sort of lazy evaluation of global/static data."
swift,3am8hu,dickinthevajayjay,1 point,Mon Jun 22 11:32:15 2015 UTC,"You're absolutely right - forgot about the lazy allocation. But looking at the big picture, the design principles are going to be the same."
swift,3ald0q,VonEconomo,1 point,Sun Jun 21 09:42:00 2015 UTC,"Well I found a temporary solution to my own problem, but it's not as elegant as I would have hoped for. Instead, it updates the time parameter after each iteration of the animation, but sometimes that lasts a few seconds so it's not as smooth of a transition as I'd like but it's definitely way better than before. This is what I have now, does anyone have any suggestions on how I can achieve a smoother effect so that the time changes can be made more quickly than after the end of each consecutive action?  func animBall() {     //This is the general runAction method to make our ball change color     var animSpeedNow = self.updateAnimSpeed()     println(animSpeedNow)     var animBallAction = SKAction.animateWithTextures(ballColorFrames, timePerFrame: animSpeedNow,resize: false, restore: true)      self.runAction(animBallAction, completion: {() -> Void in         self.animBall()      }) }  func updateAnimSpeed() -> NSTimeInterval{     // Update the animation speed based on the velocity to syncrhonize animation with ball velocity     var velocX = self.physicsBody!.velocity.dx     var velocY = self.physicsBody!.velocity.dy      if abs(velocX) > 0 || abs(velocY) > 0 {         var veloc = sqrt(velocX*velocX + velocY*velocY)         var animSpeedNow: NSTimeInterval = NSTimeInterval(35/veloc)         let minAS = NSTimeInterval(0.017)         let maxAS = NSTimeInterval(0.190)          if animSpeedNow < minAS {             return maxAS         }         else if animSpeedNow > maxAS {             return minAS         }         else {             return animSpeedNow         }      }     else {         return NSTimeInterval(0.15)     } }"
swift,3allsm,0xmort3m,3,Sun Jun 21 12:24:06 2015 UTC,"On the left in the debug area you should see a list, which shows you where your code went through, click on each of them to see if you recognise something from your code. Or just make a full screenshot, I can't help you with just that picture"
swift,3allsm,Kametrixom,1 point,Sun Jun 21 12:31:03 2015 UTC,"Nope, just 2 ""Threads?"", I guess that are threads... both of them saying something like dylib crashed."
swift,3allsm,dwltz,2,Sun Jun 21 20:27:05 2015 UTC,Is this a completely empty app? Like the default you get when just starting a project? Because it looks like there's an error in your code somewhere..
swift,3allsm,Martinco,1 point,Sun Jun 21 13:32:23 2015 UTC,It's an more or less empty app. It's just a Workspace with cocoapods initialized and two added Pods.
swift,3allsm,vuzgoo,1 point,Sun Jun 21 20:28:23 2015 UTC,If it's right away. Put a break on your viewDidLoad and see where it crashes.
swift,3allsm,voidref,2,Sun Jun 21 14:37:45 2015 UTC,I would add a breakpoint for exceptions so Xcode shows you the line it crashed on.
swift,3ajomr,elai,2,Sat Jun 20 21:23:01 2015 UTC,"I don't know how much, but on WWDC they stated that they have made lots of improvements, on debug/release builds and whole-module-optimization. Also the code should compile faster."
swift,3ajomr,Kametrixom,2,Sat Jun 20 22:05:19 2015 UTC,It's certainly not compiling faster on Xcode7-beta but obviously it's a beta.
swift,3ajomr,k337,3,Sat Jun 20 23:26:59 2015 UTC,"It depends a lot on the nature of your code. iirc expressions like ""let arr = [1.0, 2.0, ..., 99.0]"" will no longer make the type-checker go exponential in 2.0, for example (edit: just checked in the interpreter, literal arrays of doubles are indeed much faster). I haven't checked in detail though."
swift,3ajomr,Catfish_Man,1 point,Sun Jun 21 01:53:55 2015 UTC,"This is great news, thank you."
swift,3ajomr,non_omnia_expediunt,1 point,Sun Jun 21 05:34:08 2015 UTC,Just updated our repo with Swift 1.1 vs 1.2 vs 2.0 performance unit tests: https://github.com/vsco/swift-benchmarks
swift,3ajomr,fyell,1 point,Tue Jun 23 19:47:27 2015 UTC,Interesting!   Some good improvements but it isn't there yet.    Of course this is Beta software it will be interesting to see how the shipping compiler does in a few months.
swift,3ai3tl,live_love_laugh,2,Sat Jun 20 11:44:37 2015 UTC,Check out this talk. https://realm.io/news/swift-summit-daniel-steinberg-functional-programming-for-everyone/  Daniel is very active in the Apple dev community and I'm sure he'd be happy to give you some tips. The playground he uses here might be up on his github repo.  Look at this too. http://swifteducation.github.io
swift,3ai3tl,Hawk_Irontusk,2,Sat Jun 20 17:22:16 2015 UTC,"Yes I saw that talk and I was very inspired. I can't seem to find his github account though, I can only find other github accounts with similar names. I really want that turtle playground :-O  Thanks for the links, I appreciate it :-)"
swift,3ai3tl,Hawk_Irontusk,2,Sat Jun 20 17:30:07 2015 UTC,Try these.  https://github.com/dimsumthinking  http://dimsumthinking.com
swift,3ai3tl,VonEconomo,2,Sat Jun 20 17:37:41 2015 UTC,Thank you!
swift,3ai3tl,Kametrixom,2,Sat Jun 20 17:40:11 2015 UTC,"As cool as that is, I (and I'm saying this as a novice/amateur programmer) think it would be cooler to learn how to do something that is a little more applicable, like game designing. iPhones are so commonplace and learning how to develop something fun like a simple iOS game might be more directly relevant to them than designing a program to move a robot. Additionally, it will most likely be a lot less difficult because you can use the graphic oriented that xcode offers for game design like with spritekit scenes and storyboards, which makes the coding process more intuitive and engaging imo."
swift,3ai3tl,Kametrixom,4,Sat Jun 20 22:07:46 2015 UTC,"Swift code can currently only run on OS X and iOS, so you somehow need to make a Swift interface for communication between Mac and hardware."
swift,3ai3tl,poolunion,1 point,Sat Jun 20 13:33:08 2015 UTC,"I think I have an idea, I could just buy the same robot that we used at our university and then program the chip to respond to a usb input. All I need to know then is how to make a OS X Swift app communicate via USB. There is seriously not one tutorial to be found on how to do USB communications in Swift..."
swift,3ai3tl,JiNCMG,0,Sat Jun 20 20:22:18 2015 UTC,"You can also search for Obj-C tutorials, because everything from Obj-C is also available and compatible in Swift. In the last 30 (?) years people have been using Obj-C, but Swift is only one year old, so it's no surprise that there aren't many Swift tutorials yet"
swift,3ai3tl,spinwizard69,2,Sat Jun 20 20:36:36 2015 UTC,I would use swift playground and do animations and a simple game. Being able to see a visual change while programming is great for learning. When I started out programming I really enjoyed when I could interact with something on screen. It's exciting and encourages experimentation. Eg I'd like that in blue or Let's make it faster.  I taught high schoolers to make flash games for a few summers. They struggled with programming but really took to animation.   http://m.youtube.com/watch?v=F9T551Y0mYo https://developer.apple.com/swift/blog/?id=9  I do like the idea of controlling a robot though. My first time programming was in first grade with the LOGO programming language. It had turtle robot that would draw out your program. Telling a robot to draw a square back in 1983 was pretty cool.
swift,3ai3tl,lusion,1 point,Sat Jun 20 15:22:22 2015 UTC,I recommend looking into Make's Robot Kit and the Arduino IDE. It would be cheaper and easier to get it working.   I will be teaching programming to a handful of 5th graders this summer. They have done scratch and code.org. They want to learn to develop games so I am going with Unity. I could do something with Xcode and C++ but Unity lets them see something quicker. Once they are hooked you can get closer to the metal.
swift,3ai3tl,spinwizard69,1 point,Sat Jun 20 21:24:45 2015 UTC,If you want to get real cheap you can control a couple of bits over an RS 232 port.   I've done so in the past to get an I/O to trigger an action.  It is just a matter of using one of the handshaking lines.    Of course these days many PC and all Apple products come without RS 232 ports but adapters can be had dirt cheap.    If you get lucky it is cheaper than using an Arduino.    For simpler projects like launching model rockets or setting off a catapult it is better than buying extra hardware.
swift,3ai3tl,tzigane,1 point,Sat Jun 20 23:22:38 2015 UTC,"I second using Swift to control a game. It has awesome tools for this already with SpriteKit, level editors, playground etc. This is how I got into programming as a kid. I was stunned about how boring programming was when I got to University.   I would create a start projects so that kids could focus mainly on moving stuff around. You know take away some of the boring book keeping. Let them focus on e.g. the behaviour of characters in the game."
swift,3ai3tl,ghostrider1976,1 point,Sat Jun 20 23:13:21 2015 UTC,The type of kids and age makes a huge difference here.    Beyond that why would you use Swift for something like this.  If the goal is to program on a PC then look at Python.   That may be very boring to a kid though even if you use Swift.      To keep interest it would be far better to use the PC to program an embedded chip of some sort.   Arguing comes to mind but there are plenty of alternatives.   The idea here is to control something in the real world.     What to control?    Well robots can be expensive so how about something different like siege implements (catapults and the like).   Simple ones can be cardboard and rubber bands though obviously you can do better.  Triggering can be done in a number of ways all fairly simple.
swift,3aj8gv,_patientzero,4,Sat Jun 20 18:54:16 2015 UTC,The Swift standard library is very minimal. There is a heavy reliance on Objective-C libraries for many common operations. I hope Apple is planning to bolster the STL or the community is going to have a lot of work to do.
swift,3aj8gv,megaman821,0,Sat Jun 20 20:44:01 2015 UTC,"STL = Standard Template Library, by the way, which is for C++."
swift,3aj8gv,cryo,3,Sun Jun 21 16:50:16 2015 UTC,Well there is GNUStep and Cocotron (http://www.cocotron.org) which essentially is about making the Apple GUI stuff available on other platforms. Since this is in objective-c it should be accessible from Swift.   A problem with both of these projects is that they have had very little support behind them. If more people contributed they could probably become quite good solutions.  But I think nobody was that keen on contributing to something which meant they had to program Objective-C to use it.
swift,3aj8gv,lusion,3,Sat Jun 20 23:27:10 2015 UTC,"Even though you probably won't have Apple's Cocoa implementation, the Objective-C interoperability will probably be included.  Maybe it could be tweaked to include C++ interoperability.  With that, you'd have access to GNUstep and Qt, or whatever native toolkit you like"
swift,3aj8gv,shiggie,2,Sat Jun 20 22:16:25 2015 UTC,bindings to a cross-platform GUI library of some kind. a good standard/utility library (will probably come bundled with swift 2.0)   Once you've got both of those things you're ready to rock.
swift,3aj8gv,notunlikethewaves,2,Sat Jun 20 19:42:30 2015 UTC,"bindings to a cross-platform GUI library of some kind.    That might have a place but I'd be willing to bet that people would prefer a new GUI library written in native Swift.   The fact of the matter is that mist of the GUI libraries in use now are very very old, the Gnome and KDE people all are working to with old code bases that don't even support the new features of their native languages.   QT still has a lot of QT  solutions that could be covered via the C++ STL.      a good standard/utility library (will probably come bundled with swift 2.0)    Well I'm not sure about ""good"" but I believe I heard Apple saying that they would contribute a standard library also.    If such a library provided much of the functionality in C++'s STL then it might attract people outside of Apple.    This is one reason why I really hope that Apple submits Swift and its library to an international standards committee of some sort.   The reason being the library and Swift itself could evolve such that the concerns of the outside world are meant.    This is especially important when it comes to involving users from a wider array of programmers."
swift,3aj8gv,spinwizard69,1 point,Sun Jun 21 01:05:55 2015 UTC,"Swifts stl won't support windows, also swifts stl is pretty minimal. If you could get a cross platform version of cocoa then you'd be in business"
swift,3aj8gv,devsquid,4,Sat Jun 20 20:09:48 2015 UTC,"I think the best we can hope for will be (good) bindings to something like QT, as cross-platform Cocoa will never happen.  I've only started looking at swift recently, but if the standard library Swift2 ships with is too anemic then the whole 'cross platform swift' thing could be DOA."
swift,3aj8gv,notunlikethewaves,1 point,Sat Jun 20 20:19:03 2015 UTC,"yea, I am very unsure of its future being something more than an iOS/osX application builder. Its an excellent language however and I really enjoy using it."
swift,3aj8gv,devsquid,2,Sat Jun 20 21:45:00 2015 UTC,"Give it time!   The language is barely a year old, just consider how long it took C++ to get the industry behind it.   By the way C++ became very successful with limited library resources.   The STL (Standard Template Library by the way) improved C++ massively but it still lacks much of what is being asked for in this thread."
swift,3aj8gv,spinwizard69,2,Sun Jun 21 00:14:17 2015 UTC,"eh honestly, I don't see much of a need. Its a nice language, but there are already very good solutions in place that work great! :)"
swift,3aj8gv,devsquid,2,Sun Jun 21 04:52:12 2015 UTC,"Yes, what's the need for innovation…"
swift,3aj8gv,cryo,0,Sun Jun 21 16:51:23 2015 UTC,Swifts great but it's not super innovative. There are plenty of solid high performance languages you can use server side.
swift,3aj8gv,devsquid,1 point,Sun Jun 21 21:17:10 2015 UTC,I think you're missing the point.  One of the biggest benefits is that it's the same language on all platforms. Node.js has a similar benefit. We aren't saying that swift will out-perform everything else... it's just that there are some very nice benefits from keeping it all swift.
swift,3aj8gv,devsquid,1 point,Mon Jun 22 21:03:18 2015 UTC,"lol. No I agree thats what makes it attractive. I would love to use swift in other places than just iOS development, in hopes to consolidate my code base. However currently this is not possible."
swift,3aj8gv,spinwizard69,1 point,Tue Jun 23 01:29:37 2015 UTC,That is a very negative way to look at things.   Basically it is saying what we have now works well so there is no need to try to improve things.  I guess we should all drive model T's then.
swift,3aj8gv,devsquid,1 point,Mon Jun 22 22:57:50 2015 UTC,"lol... How did you and Cryo get that I don't see a need for innovation out of that statement. Swift is great, but other newly created languages are equally great and innovative. Some old languages are great as well, for other reasons than being innovative. Why don't you go drive your hover car around ;D"
swift,3aji4r,jemmons,3,Sat Jun 20 20:21:26 2015 UTC,"Terminology note: ""exceptions"" is the wrong word.  Swift simply calls them ""errors"" to reflect the fact that they will never transparently unwind any scope, unlike exceptions which are usually defined by their transparent stack unwinding. Also because they are used to handle Cocoa/Objective-C's NSError type.  Yes, there's a lot in common between Swift's error handling and Java's checked exceptions (which similarly must declare if the exception can escape any scope so they avoid true transparency). It's arguable that Java's checked exceptions aren't true exceptions but the point is moot: the language's designers get to pick their terminology."
swift,3aji4r,gilgoomesh,1 point,Sun Jun 21 02:56:03 2015 UTC,Totally true! Time to go back and rewrite headlines :(
swift,3aji4r,lusion,2,Tue Jun 30 02:47:14 2015 UTC,That is really awesome. I am really warming up to Swift. They have done a lot of things right. It is quite a challenge to make something powerful and easy at the same time. I like the idea in swift about introducing features gradually. I can imagine you can teach swift using very few features initially.
swift,3aji4r,lusion,1 point,Sat Jun 20 23:23:24 2015 UTC,"Totalyl agree with you. When it was announced at WWDC last year, everyone poked fun at the 'println(""hello"")' slide that showed how concise Swift could be. After all, ""print"" looks pretty much the same in every language, right? But the real trick is what isn't there. There are no includes. No ""main()"". No top-level object wrapper.  Similarly, when Tim Cook told the Goldman Sachs conference attendees that ""you and I could even write an app"" with Swift, developers were (appropriately) incredulous. But looking at it from his point of view, a Swift Playground really is revolutionary! Can you imagine him trying to set up an Xcode project in ObjC? All the stuff he'd have to struggle through do before he could even type anything?  Being able to open up a Playground get something out of Swift with the first line you type might just end up being Swift's secret weapon."
swift,3ajvbc,ahmedraad1,1 point,Sat Jun 20 22:26:16 2015 UTC,Code formatting in your post is broken. I also can't understand what's your intention here - you want all checkboxes to be checked when user taps a single one?
swift,3ajvbc,atatator,1 point,Sun Jun 21 06:18:00 2015 UTC,"hen user taps a single o   no، i want the checkbox is works normal not, when i click on checkbox is selected other checkboxs in cell"
swift,3aihiz,john_alan,1 point,Sat Jun 20 14:40:02 2015 UTC,"Swift is right here: there's nothing it can see from you or the STL that has the type (T, Int) → T and the identifier *.    From the types, you're asking for scalar multiplication to be defined for every type ever!    Because * isn't defined for heterogenous types either (e.g. Int and Int8), you will have to either drop your generic constraint and make all parameters Int, or you'll have to make every parameter generic and constrain them to IntegerTypes, which is literally the definition of * in the STL.  I don't think you need generics to solve this problem.  By having types and static verification at all your program is ""typesafe"".  It is not made any more so by being polymorphic."
swift,3aihiz,CodaFi,1 point,Sat Jun 20 14:58:37 2015 UTC,"right so, I understand your point! how are generics any use!? I mean if they can't even accomplish this simple task what can they do!"
swift,3aihiz,ElvishJerricco,1 point,Sat Jun 20 15:02:28 2015 UTC,"Lets say I remove the Int scalar constraint, and move to:  func genericMultiplier <T> (number: T, multiplier: T) -> T {     return (number*multiplier) }   Can I really not have a generic function that multiplies two ints, or floats, or doubles, or whatever, is that not what generics are designed for!?"
swift,3aihiz,CodaFi,2,Sat Jun 20 15:04:58 2015 UTC,"You're really not understanding generics. They're not just supposed to let you do anything with anything. They're there to let you do with anything, anything that you're allowed to do. They're type constraints that are way more general than just writing the concrete types. For example, if your function were allowed, this would compile  genericMultiply([true, false, false], 2)   What would that even do? Multiplying a list of booleans by 2 doesn't make sense. A strong type system is here to help this problem.  func genericMultiply <T: IntegerArithmeticType> (number: T, multiplier: T) {     return number * multiplier }"
swift,3aihiz,CodaFi,1 point,Sat Jun 20 15:52:34 2015 UTC,"thanks for this, excellent point."
swift,3ajjle,maxiedaniels,2,Sat Jun 20 20:35:16 2015 UTC,"How about this:  enum Shape {     case Circle, Square, Rectangle }  enum Color {     case Green, Blue, Yellow }  enum Property {     case Bouncy, Spinning, Metal }   class Thingy {     var shape: Shape     var color: Color     var properties: Set<Property>      init(shape: Shape, color: Color, properties: Set<Property>) {         self.shape = shape         self.color = color         self.properties = properties     } }  let myThingy = Thingy(shape: .Circle, color: .Yellow, properties: Set([.Bouncy]))"
swift,3ajjle,atatator,1 point,Sun Jun 21 06:05:40 2015 UTC,"Ah sorry, didn't clarify that enough. The sub categories are within each instance of the main categories, etc.... So it's basically an array of booleans within an array of strings within an array of strings within an array of strings.  But I can't decide how to keep track of the labels of each category, nor the booleans. At this point, the best idea I have is using dictionaries, but I'm wondering how people would do this properly.. As I'm only just getting back into coding and I don't feel like I'm approaching this correctly."
swift,3ajjle,atatator,1 point,Sun Jun 21 07:49:45 2015 UTC,"Do you need to persist this structure? If yes, then I can suggest using core data for that (i.e. use core data entities for everything)."
swift,3afmzp,twostraws,2,Fri Jun 19 19:13:49 2015 UTC,"Note: I wrote this before I wrote the main Hacking with Swift series, as a general guide to myself to help keep the course structured. I'm not a big fan of teaching straight theory so I never bothered publishing it, but following a comment from a Redditor I figured I could polish up the text so that it's up to date for Swift 1.2 (and mentions Swift 2 where appropriate) and release it. If it's useful, great! If not, the original tutorials are still there, so it can't hurt!  As always, comments are most welcome."
swift,3afmzp,thenewperson1,2,Fri Jun 19 19:14:28 2015 UTC,"PS: Sorry for the Taylor Swift lyrics. Hard to resist, you know…"
swift,3afmzp,JennysDad,2,Fri Jun 19 19:15:37 2015 UTC,You should never be sorry for Taylor Swift lyrics.
swift,3afmzp,JennysDad,1 point,Sat Jun 20 09:47:13 2015 UTC,"OK - count me in as a complete beginner (48 years old, last programmed in the early 90's in Fortran) - I have a PC and an ipad.  I assume this allow me to develop an app - say a special birthday greeting app for my mother's next birthday.  What would be the distribution method that would allow her to install on her ipad (she lives in another state)?  (forgive my complete ignorance on apple products, have always been a PC person)"
swift,3afmzp,Raiden007,2,Fri Jun 19 19:22:29 2015 UTC,"Developing with Swift requires a Mac running a relatively modern version of OS X. Do you have one of those? If so, follow the instructions to download Xcode, and you're moving.  If you make an app and want to get it onto your mother's iPad, it's tricky without using the App Store. If she's using iOS 8 you can add her as a beta tester, but that still means submitting it to Apple for review. If it's generally useful to lots of people, put it on the App Store and you're done!"
swift,3afmzp,Raiden007,0,Fri Jun 19 19:25:44 2015 UTC,"thank you for your answer.  I'm sad that apple is sort of like the big brother they were supposed to be smashing in that 1984 SB commercial.  When I saw your post I was excited as I've been thinking about trying to program again, and maybe I could do something nice for my mother...  but even if there was an OS X emulator for my PC, if there wasn't a method to get it to her ipad then what's the point?  (Also, didn't I recently read that apple is going to start charging developers $100/mo for even free apps in the store? How are people supposed to distribute things they create?)"
swift,3afmzp,Dippindonut,2,Fri Jun 19 19:47:45 2015 UTC,"Apple charges $100 per year for the right distribute as many apps as you want, and that's unlikely to change for the foreseeable future."
swift,3ahunn,lifehacker25,2,Sat Jun 20 09:06:12 2015 UTC,"There's a few ways you can do this - the way I'd approach it is to create a function called ""resetForm"", or something along those lines, and perform all your cleanup there. You can then add this as a target to your clear button, and fire it as part of a successful callback.   An example would look something like this (under the assumption you're using UITextFields for data entry):  func resetForm() {     textField1.text = nil     textField2.text = nil     textField3.text = nil }   If you're using the interface builder, you can hook this function up to as many button outlets' actions as you need. Hope that helps!"
swift,3afvl3,timanglade,1 point,Fri Jun 19 20:21:05 2015 UTC,Cool application for playgrounds. Playgrounds definitely have huge application for programming education. Though the old playground format with raw HTML and JS support was way more powerful and flexible then the new one with markdown.
swift,3ahna6,john_alan,4,Sat Jun 20 07:02:41 2015 UTC,"They are the same. This isn't really anything to do with GCD, its just a swift syntax feature called a trailing closure. When a closure argument is the last argument in a function you can pass it after the function call.   The swift docs recommend doing this when the closure is too long for a single line call"
swift,3ahna6,shitidiotturtle,1 point,Sat Jun 20 07:25:41 2015 UTC,Super cheers!
swift,3ahna6,shitidiotturtle,2,Sat Jun 20 07:29:28 2015 UTC,"There is a good part in ""whats new in swift"" from this years WWDC where the presenter takes away elements of the closure one by one and mentions why they can be removed"
swift,3ahna6,Alphasite,1 point,Sat Jun 20 07:32:37 2015 UTC,"One thing that's always fun is to create a new alias function, which just takes a closure as its only parameter and you can treat it as a keyword e.g.  func dispatch(callback: () -> ()) {     dispatch_async(dispatch_get_main_queue(), callback) }  dispatch {     /* do things */ }"
swift,3ahna6,atatator,2,Sat Jun 20 14:41:02 2015 UTC,"Captain 2 cents notices: It's better to call this alias something like dispatchAsyncMain, because you obviously want similar aliases for the background queue and sync execution."
swift,3ahna6,Alphasite,1 point,Sun Jun 21 05:42:37 2015 UTC,"You could always just assign a default parameter with the queue. Although having the default queue as the default behaviour would probably be acceptable, even without the parameter."
swift,3ag9v8,ios_game_dev,9,Fri Jun 19 22:16:01 2015 UTC,"let intArrayType = [Int].self let intArray = intArrayType(count: 5, repeatedValue: 1)  let stringType = String.self let string = stringType(13, radix: 2)  print(intArray) print(string)   output:  [1, 1, 1, 1, 1] 1101"
swift,3ag9v8,Kametrixom,5,Fri Jun 19 23:30:04 2015 UTC,"And if you want to do this with your own class, the only caveat is that you need a required initializer.  class Foo {     required init() {} }  let fooType = Foo.self let x = fooType()"
swift,3ag9v8,Nasarius,1 point,Fri Jun 19 23:43:44 2015 UTC,These are excellent! Thank you.
swift,3adrpp,jathusatkunarajah,9,Fri Jun 19 08:07:32 2015 UTC,That thumbnail
swift,3adrpp,santh91,3,Fri Jun 19 10:13:45 2015 UTC,MF DOOM!
swift,3adrpp,vitaminrad,1 point,Fri Jun 19 13:18:52 2015 UTC,"Hey guys, I was wondering if there is a way to make playground run through loops faster. i.e. not show me what's going on in each iteration, rather just complete it. As you can imagine going through 250x250 = 62500 pixels/iterations in a for loop in playground is brutally slow."
swift,3adrpp,fluchtpunkt,2,Fri Jun 19 11:47:16 2015 UTC,"Maybe in Xcode7? As far as I remember either in the ""State of the Union"", or the ""What's new in Xcode"" WWDC session it was said that you can put some code in another file (or something like a module?!) to improve Playground performance.     Edit: It was Session 104 ""What's New in Xcode""   You can add almost unlimited functionality to a playground by adding Swift code to the new supporting sources folder.  This helps you keep your playground clean and focused while also giving you a place to put the supporting functionality.  There is also a performance one here because the supporting sources, they can be compiled down because they're not run interactively.  They're only there to support your playground and that helps them run really, really fast.   By http://asciiwwdc.com/2015/sessions/104"
swift,3afnhp,TortugaChris,5,Fri Jun 19 19:17:56 2015 UTC,"You can use Unicode shapes and emoji, but I think what you're looking for is something like Glyphish."
swift,3afnhp,twostraws,4,Fri Jun 19 19:19:58 2015 UTC,You can also get free icons from Font Awesome.
swift,3afnhp,nepragen,3,Fri Jun 19 20:16:55 2015 UTC,"If you go down the Font Awesome route, you might find FontAwesomeKit useful."
swift,3afnhp,twostraws,2,Fri Jun 19 20:22:29 2015 UTC,"I literally just watched your Swift 2.0 video an hour ago and recognised your username when it popped up on my screen. That was a great video by the way. Thank you though for the reply, I Googled my question for about half an hour and couldn't find anything even close to what I was looking for."
swift,3afnhp,twostraws,3,Fri Jun 19 19:26:55 2015 UTC,I'm glad you liked the video! Don't be afraid to share it with others ;)
swift,3afnhp,twostraws,1 point,Fri Jun 19 19:35:37 2015 UTC,I just noticed that the icons are actually png files. I tried to set one as a UIImage and then use it as the image on a UIButton. It didn't show up at all. Did the way to do it change in Swift 2.0 or did I mess something up?
swift,3afnhp,Alphasite,2,Fri Jun 19 20:23:27 2015 UTC,You probably messed something up :)  (It hasn't changed.)
swift,3af20k,dale-x,1 point,Fri Jun 19 16:33:55 2015 UTC,Make a custom TableViewCell subclass that has a pointer to the UITextField.  You can use the delegate methods for UITextField to send text events back to the TableViewController.  Or you can use the pointer from the TableViewCell subclass and read the text directly from the UITextField.
swift,3af20k,Rexflame,1 point,Fri Jun 19 16:39:32 2015 UTC,"Yeah, I have the subclass already made as UITableViewCell. I also have a pointer form the TextField set up as ""@IBOutlet var input: UITextField!"". I'm not familiar with delegates (I just started learning Swift last week) but I have added UITableViewCellDelegate to both the TableViewController and TableViewCell. But I'm not sure how to send the text events back to the TableViewController.  Thanks for the quick reply, by the way!"
swift,3af20k,Rexflame,1 point,Fri Jun 19 16:57:34 2015 UTC,https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITextViewDelegate_Protocol/index.html  Set text field's delegate property to your table view controller.    Implement func textViewDidChange(_ textView: UITextView) in your table view controller.  Don't forget to declare your table view controller as a UITextFieldDelegate.  https://developer.apple.com/library/prerelease/mac/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html
swift,3af536,RoadRageRR,3,Fri Jun 19 16:57:32 2015 UTC,I don't think that's possible directly. Maybe you can get it by dividing your sprite into multiple ones that are connected and each one has a separate collision bit mask.  EDIT: Probably best to separate your sprite in an image editor
swift,3af536,Kametrixom,1 point,Fri Jun 19 21:10:03 2015 UTC,"Definitely would separate the image into separate nodes and give each color their own category bit mask.  The only other possible thing I could think of would be to check the contact point and use that as a reference point to determine which color it touched, that is if this image stays in place. Best way is probably to split them."
swift,3ad952,roguekiwi,7,Fri Jun 19 04:15:02 2015 UTC,"Just tried to refactor a method name-- says Xcode can only refactor objC or C code, so no looks like not yet."
swift,3ad952,Takuya813,2,Fri Jun 19 04:16:04 2015 UTC,Damn I was really hoping this would be the one where we get refactor back.
swift,3ad952,rajohns08,1 point,Thu Jul 2 12:36:41 2015 UTC,Maybe next time :|  It'll happen eventually!
swift,3ad952,Takuya813,1 point,Thu Jul 2 13:07:17 2015 UTC,"No, nothing works yet for Swift."
swift,3aegzk,RoadRageRR,3,Fri Jun 19 13:40:43 2015 UTC,location.x >= 0 && location.x <= frame.size.width * 0.5
swift,3aegzk,Eckelf,1 point,Fri Jun 19 13:44:04 2015 UTC,Why didn't I think of that. Thanks so much mate. I have been beating my head against the wall. Have a good one!
swift,3aegzk,Eckelf,2,Fri Jun 19 14:04:58 2015 UTC,No problem ;)
swift,3aegzk,SheepWheatOre,1 point,Fri Jun 19 14:06:14 2015 UTC,"Not the “right” answer, but you can make == work with CGFloat and ranges:  let location = CGPoint(x: 0, y: 0) let frame = CGRect(x: 0, y: 0, width: 320, height: 480)  func == (lhs:CGFloat, rhs:ClosedInterval<CGFloat>) -> Bool {     return lhs >= rhs.start && lhs <= rhs.end }  if location.x == (0 ... (frame.size.width * 0.5)) {     print(""yup"") }"
swift,3a8ges,Hgunz47,7,Thu Jun 18 01:31:54 2015 UTC,Link directly to GitHub Swift Education
swift,3a8ges,fareedy,5,Thu Jun 18 01:33:01 2015 UTC,"https://developer.apple.com/education     points to the GitHub page      Swift Curriculum Community  In addition to the amazing resources in iTunes U for Swift Curriculum, there is a new Swift Education community on GitHub that provides access to all of the Xcode projects mentioned in the new high school curriculum on iTunes U. Download the projects for use in your classroom and contribute your own.  Join the community >     and also points to iTunes U but refers to it as (my emphasis):   Swift Curriculum on iTunes U  Universities, schools, instructors and other authors are publishing their curriculum and ideas for teaching Swift to iBooks Store and iTunes U. Check out this amazing collection of resources, including a new free high school curriculum for iOS app development on iTunes U.     Download the resources >   Seems to be more of an endorsement than an official course."
swift,3a8ges,dazonic,6,Thu Jun 18 14:46:32 2015 UTC,"I'm a bit skept that this is from Apple. Formatting is close but not perfect. Nothing mentioning Apple, just the author himself  http://swifteducation.github.io/assets/pdfs/CourseOverview.pdf"
swift,3a8ges,esaruoho,1 point,Thu Jun 18 08:28:43 2015 UTC,"I too am skeptical of iTunes U  having a thing called ""Apple Education"". Doesn't seem legit at all. It even links to http://apple.com/education yeah I dunno it must be a hoaxscam right?  https://itunes.apple.com/us/course/app-development-teaching-swift/id1003406963"
swift,3a8ges,twostraws,5,Thu Jun 18 11:40:31 2015 UTC,"It did get tweeted by the Apple Swift account on Twitter, so I think you're all fairly safe."
swift,3a8ges,esaruoho,1 point,Thu Jun 18 17:15:05 2015 UTC,Im not sure what to think. Probably a really elaborate hoax /s
swift,3a8ges,dazonic,1 point,Thu Jun 18 17:32:07 2015 UTC,"This GitHub repo might be endorsed by Apple, but it's not written by them. Use your head. Perfectly safe and everything, just not published by Apple like this article says."
swift,3a8ges,pskipw,3,Fri Jun 19 00:17:54 2015 UTC,"I wouldn't call this a ""learn to code course"" - it's more course notes for teachers."
swift,3a8ges,StefaScoSteve,1 point,Sat Jun 20 04:26:20 2015 UTC,"I discovered this on iTunesU and I thought that the instructor should make the materials,they should put a link to the github project."
swift,3a8ges,lootedcorpse,11,Thu Jun 18 13:17:53 2015 UTC,irrelevant disrespecting the dead classless
swift,3acwk0,TheMagicSeahorse,3,Fri Jun 19 02:16:18 2015 UTC,You can just use OS X 10.10 as a virtual appliance in VMware Player. Or use an online playground: http://swiftstub.com Or use RemObjects Silver in Wine: http://www.elementscompiler.com/elements/silver/
swift,3acwk0,niutech,2,Fri Jun 19 12:28:33 2015 UTC,"Swift's compiler won't be open-sourced until the fall, when 2.0 leaves beta."
swift,3acwk0,rsmoz,1 point,Fri Jun 19 02:44:13 2015 UTC,"Like others say for the time being I don't think there is any real solution for you, iOS dev tools are exclusively mac."
swift,3acwk0,bombastic191,1 point,Fri Jun 19 06:22:28 2015 UTC,Atom or Sublime text is probably as good as you'll get on Linux. Or http://swiftstub.com
swift,3acwk0,crewshin,1 point,Sat Jun 20 18:39:47 2015 UTC,"You have a mac? This isn't ideal, but you could use Sublime on your Fedora machine and then screen share with something like TeamViewer https://www.teamviewer.com/ to compile/test. I wouldn't suggest programming through it, I tried it and it sucks. You just need someone to install TeamViewer on you mac and leave it running"
swift,3acwk0,misterpink14,0,Fri Jul 17 19:57:21 2015 UTC,get money or die trying
swift,3acwk0,trtryt,-9,Fri Jun 19 03:08:45 2015 UTC,I don't think xcode even works on Hackintoshs
swift,3acwk0,swefdd,1 point,Fri Jun 19 03:09:48 2015 UTC,The last time I tried it it worked really smooth :)
swift,3acwk0,Kazbin,-2,Fri Jun 19 07:04:06 2015 UTC,Do you have your machine specs?
swift,3acwk0,swefdd,2,Fri Jun 19 08:42:16 2015 UTC,"My Machine:    Comp Brand / name    CPU QuadCore Intel Core i5-3450, 3300 MHz   Motherboard Asus P8H61-M LX   Graphicscard NVIDIA GeForce 8800 GTX   Ram 16 GB   Audio Realtek ALC887    Anything else ? :)"
swift,3acnox,FutureIsMine,4,Fri Jun 19 00:56:01 2015 UTC,"Value types are not allocated the way objects are either; they're on the stack. So, similar to value types in C (like int), value types in Swift are cleared when the stack frame they're part of is cleared."
swift,3a9qw7,joshuanlook,7,Thu Jun 18 10:20:11 2015 UTC,"Yes, you can. But be warned:    Things have changed from Swift 1.2, so old code might not work. Things may still change, so your new code might not work in beta 2, 3, 4, etc. It requires Xcode 7, which is in beta and might be buggy. You can't submit Swift 2 apps to the App Store just yet.   You might find my what's new in Swift 2 article useful."
swift,3a9qw7,twostraws,1 point,Thu Jun 18 13:30:08 2015 UTC,Thanks found it extremely useful!
swift,3a9qw7,Rudy69,2,Fri Jun 19 18:18:38 2015 UTC,You can use it now but don't use it for anything you want to submit to Apple before Mid August-early September
swift,3a9qw7,dickinthevajayjay,1 point,Thu Jun 18 17:21:38 2015 UTC,"Yeah - you can download Xcode 7 beta, or you can go to this site to play around with it here: http://swiftstub.com/"
swift,3a9qw7,StefaScoSteve,1 point,Thu Jun 18 12:17:32 2015 UTC,Here you can download Xcode 7 :https://developer.apple.com/services-account/download?path=/WWDC_2015/Xcode_7_beta/Xcode_7_beta.dmg
swift,3a7xxb,twostraws,4,Wed Jun 17 22:52:55 2015 UTC,"Great video! Very helpful.  I'm going through your book online now and it's wonderful. Thanks for all of your hard work, it's incredibly useful for those like myself just starting with Swift."
swift,3a7xxb,ilikemustard,3,Wed Jun 17 23:55:42 2015 UTC,"I'm really glad it's useful to you! I do check /r/swift regularly, so if you have any problems post here and I'll spot it. I'm also happy to answer questions on Twitter @twostraws if that's easier for you."
swift,3ab0fc,PannekoekDoos,2,Thu Jun 18 17:16:39 2015 UTC,I think you're looking for ImageKit. I haven't tried it myself but it sounds very promising
swift,3ab0fc,Kametrixom,1 point,Thu Jun 18 18:16:55 2015 UTC,"Thanks, taking a look."
swift,3aaijk,n0ds,2,Thu Jun 18 15:03:47 2015 UTC,"It's very easy. This is an expected thing from Apple, so they have made things simple to set up in Xcode. Just start taking new classes you would make in ObjC, and make them in Swift. Watch the Improving Your Existing Apps With Swift video from WWDC.  You'll have to create a bridging header (Xcode will offer to make one for your when you add your first class in Swift). The bridging header should #import all the things you want available to the Swift side.  When you want to use any swift code from objective C, just import a ""[YourProjectName]-Swift.h"", which tells xcode to look through your swift code (the file itself doesn't exist).  Note:  You will have a one-time hit of about 9MB in your app size, because it will bundle Swift runtime with your app. This is until Swift can stabilize enough as a language that iOS will start including the binary in iOS, and our apps won't have to include it."
swift,3aaijk,rizzledizzle,1 point,Thu Jun 18 18:18:31 2015 UTC,"Really helpful answer.  Thanks for the video, watching it now."
swift,3aaijk,JimDabell,2,Fri Jun 19 02:06:41 2015 UTC,"Yes, the project I'm working on at the moment is about 80% Objective-C (logic and UI) and 20% Swift (networking).  It's worked quite well, but then we have a good separation of concerns between the different layers – I wouldn't want to mix the two if this wasn't the case.  I've made a few design choices that I wouldn't have had the project been entirely Swift, but it's been very manageable and there's nothing that's really gotten in the way.  I'll be glad when it's entirely Swift, but you don't have to do a full rewrite to get there as long as you take a somewhat structured approach to the migration."
swift,3aaijk,naughty_ottsel,2,Thu Jun 18 18:29:07 2015 UTC,"I would also make the point that it depends what the oldest version of iOS you plan to target. Whilst Swift was brought around with iOS8, Swift Apps can target iOS7 and later"
swift,3a7xsy,nehayward,3,Wed Jun 17 22:51:53 2015 UTC,I'd recommend putting a few coupon codes here in the comments. The best way to start your user base is word of mouth!
swift,3a7xsy,PineappleDildo,1 point,Thu Jun 18 01:59:03 2015 UTC,Here are 5 free promo codes! Please enjoy and share it with a friend!  WNEK6N7FYLT4 4FT9EHP47P9M EREAF6F7EE6E 6PRJ99H434MH PRAKMXPXY3KL
swift,3a7xsy,appsssss,1 point,Thu Jun 18 17:38:42 2015 UTC,Congrats!
swift,3a7xsy,engrbugs,1 point,Fri Jun 19 01:55:58 2015 UTC,How much did you spend all in all. Like buying the dev software and making an online accoumt?
swift,3a9a77,rush905,2,Thu Jun 18 06:25:34 2015 UTC,"you're trying to pass a value of type UIImage to a variable that should be of type UIImageView.  Your solution is probably to assign the UIImage to the image property of your UIImageView:  func setImageForSpot(spot:Int, player:Int){         var playerMark = player == 1 ? ""x"" : ""o""         plays[spot] = player      switch spot{     case 1:         ticTacImg1.image = UIImage(named: playerMark)     case 2:         ticTacImg2.image = UIImage(named: playerMark)     }"
swift,3a9a77,dwltz,2,Thu Jun 18 14:05:13 2015 UTC,Thank you so much! It finally works!
swift,3a9a77,TortugaChris,1 point,Thu Jun 18 17:31:58 2015 UTC,"Glad you got it to work, but you're following Skip Wilsons tutorial, aren't you?"
swift,3a9a77,TortugaChris,1 point,Fri Jun 19 18:23:23 2015 UTC,Yes I am. Should I not be?
swift,3a9a77,aandrewc,1 point,Fri Jun 19 18:25:17 2015 UTC,"No, I just kinda phrased that weird. I followed the same series. He makes some great videos."
swift,3a8fkw,sxeteej,1 point,Thu Jun 18 01:24:23 2015 UTC,Auto layout was difficult for me to grasp at first too. I watched the Stanford Swift videos and the way the instructor explained it was very helpful. I believe he goes over it in the first two videos. I’m on mobile right now but just Google it and you’ll find it.
swift,3a831l,TortugaChris,2,Wed Jun 17 23:33:36 2015 UTC,"From what I understand you would have to:  hide the pause button  screenshot  blur the screenshot  use the screenshot as the background for your new subview overlay that contains your 3 buttons.  Unless that has changed in the last year, i think that is the only way."
swift,3a831l,smakusdod,1 point,Thu Jun 18 00:09:58 2015 UTC,"Thank you so much, I was thinking of having the buttons in the pausescene (The buttons to resume, restart and go to the main menu) already on the screen but hidden until I clicked the pause button and then hide them again when the other buttons are clicked. How would I go about taking a screenshot and then adding it to the screen?"
swift,3a831l,smakusdod,1 point,Thu Jun 18 00:17:02 2015 UTC,here is a tutorial that is close enough i think
swift,3a831l,allocate,2,Thu Jun 18 00:35:34 2015 UTC,Thank you so much for your help. I skimmed over this tutorial earlier and didn't notice that part. I spent the whole day Googling ways to do what I wanted to do and then getting mad that none of them were really helping.
swift,3a6ns2,john_alan,2,Wed Jun 17 17:24:09 2015 UTC,"Each VC has its own reference to the UINavigationController, but the object itself is shared (technically, I think each VC is owned by the containing navigationController). The navigationController also owns one instance of a navigationBar (at least by default?).  How are you moving between view controllers in this stack? If you call self.navigationController.pushViewController(nextVC, animated: whatever) from the current VC, the navigationController will update the navigationBar with whatever nextVC has placed in its navigationItem subproperties, then undo the changes when popViewControllerAnimated is called from  nextVC by plugging the items from currentVC.navigationItem back into the navigationBar."
swift,3a6ns2,payco,2,Wed Jun 17 19:39:48 2015 UTC,Each view controller has its own navigationItem object. When a nav controller displays a view controller it configures its nav bar using the information in the navigationItem.
swift,3a6ns2,JimRoepcke,1 point,Wed Jun 17 19:40:05 2015 UTC,The easiest way to address this is to override viewWillAppear() to set the colors you want for each view.
swift,3a6ns2,voidref,0,Wed Jun 17 22:46:20 2015 UTC,I think this answers the OP's question best. Keep in mind though that there's no default color anymore should you introduce a third view controller: it will retain the nav bar color which was set last.
swift,3a7e1z,swiftaccount,1 point,Wed Jun 17 20:27:18 2015 UTC,Assuming SpriteKit is the technology you are using. You are on the right track. You can capture the vector of the object. Once it has moved out of the frame you could move the object to the expected point on the other side of the screen and apply the vector again. A code example would help if you want a more concrete (in code) solution.  I've had to do something similar to this where the vector had to be reversed in one direction to simulate a bounce.
swift,3a7e1z,300zxkyle,1 point,Wed Jun 17 20:42:05 2015 UTC,"Oh oops, yep I'll be using SpriteKit.  I don't want to pick your brain TOO much here but I do have some questions based off that. Haven't even begun trying to code it so it'll just be general stuff: (Again, I'm super, super new to any form of coding)  Being able to capture the vector solves that problem for sure..how does that look though? You set a variable to be equal to thatsprite.something?  To create someting more smooth looking  you would, like you said, have to wait for the object to be off the screen and then relocate it, so the concept of having just something at the top to collide with doesn't necessarily work then right?  The top of the object would hit the top of the screen  then appear at the bottom instead of leaving then coming back up through the bottom.   Can you/would you make an invisible  frame larger than the viewable frame/game area so the object would leave and then eventually touch that once its out of sight THEN reposition and come back a bit below the viewable frame so it looks like it's sliding in and not just fully teleporting to the bottom?  I dunno if that makes any sense. I'm sort of stuck not knowing what's possible/what you can do / what you cant do..so just tossing out what might make sense to me?  Thanks for any help man, appreciate it a lot."
swift,3a7e1z,300zxkyle,1 point,Wed Jun 17 21:21:24 2015 UTC,"SpriteNode.vector (a little rusty, the object might need a physics property set to have this available).  Something suddenly disappearing off the top of the screen once it impacts the top might look awkward. You could however do that if you prefer. You should be able to detect if an object is within the frame of the screen (or game area rectangle). Once it leaves that space you can (within a frame time space) move it to the next location and apply the vector. So yes smoother.  No need for the larger frame, the previous stuff should explain that.  You get to specify what is able to impact with what in your app."
swift,3a6swt,heikomania,1 point,Wed Jun 17 17:58:55 2015 UTC,I submitted an answer to SO.  If it doesn't work just post a comment there and we can go from there.
swift,3a55mv,PeYoTlL,3,Wed Jun 17 08:45:40 2015 UTC,"It just works (for me).I made a copy of the project(to make sure that i don't break anything,you could use source control).Open the project in Xcode 7 beta to sign the project,don't try to run on your device,just sign it (if you don't have the apple developer program)The open the original project (maybe you broke something)  in Xcode 6.3,and it should work.  I don't have a developer account  Q:Do you have Apple Developer program account that you are using in your project ?"
swift,3a55mv,StefaScoSteve,1 point,Wed Jun 17 09:58:24 2015 UTC,I was able to build and run (and even publish to TestFlight) the project from Xcode 7 before I moved back to Xcode 6. What do you mean by just signing the project ?
swift,3a55mv,StefaScoSteve,1 point,Wed Jun 17 14:52:28 2015 UTC,"Sorry,I meant that you need to make a provisioning profile for the bundle id. Img:http://imgur.com/TPtiMtj"
swift,3a55mv,iNoles,1 point,Thu Jun 18 04:47:18 2015 UTC,That is Xcode 7 features.
swift,3a35pu,senor_tapatio,25,Tue Jun 16 21:26:43 2015 UTC,"I wrote a huge collection of free Swift iOS tutorials called Hacking with Swift. It's a comprehensive set of iOS + Swift tutorials that are free and project based, and also designed to have a smooth learning curve so you're not overwhelmed with detail – you can start without any coding experience just fine.  The fact that it's project based means you make 20 real iOS projects as you learn, so you end up with a library of great stuff to build on. It covers Swift, UIKit, SpriteKit, Core Image, Core Graphics, Core Animation and much more, and all the source code for the projects is available on GitHub.  I wrote it, so my opinion is obviously hugely biased, but I think it's pretty good and I hope others agree :)  I recently started adding new projects for iOS 9 and Swift 2, and even put up a massive new tutorial tonight teaching CloudKit. You might find my article on what's new in iOS 9 a useful primer."
swift,3a35pu,twostraws,5,Tue Jun 16 21:36:44 2015 UTC,Thanks for the response. I'll definitely check it out!!
swift,3a35pu,twostraws,2,Tue Jun 16 21:51:25 2015 UTC,"The main problem you face is the paradox of choice. When I learned to code many moons ago, software was expensive and so were the books that taught you. Today all the software is free, and there's a huge amount of free tutorial material – so much that it's hard to know where to start and what has value.  As a result, people fall into the trap of thinking, ""if X is free and Y is not, Y must be better,"" and throw away their money. My advice: try the free stuff first (Hacking with Swift is great, but there are lots of alternatives that are also free!) and only pay if you didn't get on with the free stuff."
swift,3a35pu,Awsthr,4,Tue Jun 16 22:03:37 2015 UTC,Just actually started looking into your tutorials! I love it so far. I truly appreciate your work!
swift,3a35pu,jman32112,2,Wed Jun 17 01:05:32 2015 UTC,I've gotten about halfway through your tutorials. I love them! They are so informative and teach the reasoning behind why you do the code better than any website I've seen. Also I love that on your website you have warnings for users on the latest Xcode version. Thanks for adding new stuff to it and making sure it's up to date
swift,3a35pu,jeblis,2,Wed Jun 17 08:09:26 2015 UTC,"I was poking around this tutorial today. Looks good, but it might be better for someone brand new to programming to start with a tutorial that just uses the language without the cocoa api complexity first."
swift,3a35pu,twostraws,2,Wed Jun 17 01:53:36 2015 UTC,"I did write a ""Just Swift"" tutorial to begin with, but it was only for my reference – I'm a big believer that new things are easier to remember if you apply them in a real world context as you learn.   However, it would probably take less than an hour to polish up my ""season pilot"", add in the Swift 1.2 and Swift 2 updates, and put it out there in case anyone found it useful – I'd probably add a big warning to the beginning saying I'd prefer people to learn Swift in staged chunks while making real projects, but everyone learns differently so it's worth a shot!"
swift,3a35pu,twostraws,2,Wed Jun 17 07:33:39 2015 UTC,"OK, so it turns out it took a lot longer than an hour to polish up the text, but I got there in the end and the ""no projects, just Swift"" walkthrough is live now. Thanks for the suggestion – I hope it's useful!"
swift,3a35pu,jeblis,1 point,Fri Jun 19 19:17:02 2015 UTC,Wow. That's great. I'll take a look.
swift,3a35pu,Humdeee,1 point,Fri Jun 19 22:23:04 2015 UTC,"I've spoken to you a few months ago, maybe 6 months or so now, but your stuff is very engaging and a big reason why I never got bored with the language. I continuously reference your tutorials now and then when I need a reminder on how to properly implement a feature. Thanks again."
swift,3a35pu,twostraws,1 point,Wed Jun 17 16:02:53 2015 UTC,"Thank you! That's very encouraging to hear. If you didn't know, I've recently added three more tutorials covering iOS 9 and Swift 2: projects 31, 32 and 33."
swift,3a35pu,mosn,1 point,Wed Jun 17 18:08:42 2015 UTC,"Hey,  I just wanted to say thank you for the tutorials that you have made available to public for free. I am new to programming with absolutely zero coding background and found your tutorials very helpful, specially your explanation of the code is a gold mine and has helped me figure out some of the key concepts used in swift.   I defiantly recommend hackingwithswift to any newBs like myself. I am currently using Lynda and Thinkful and I can say the quality of the tutorials is nothing less than what you find in most of paid courses."
swift,3a35pu,vinags,10,Thu Jun 18 17:45:04 2015 UTC,"There are many people taking up Swift...including me. I have used the following resources in my quest to learn Swift:   Hacking with Swift Ray Wenderlich We love Swift Reddit Swift Wiki That thing in Swift Sample code from Apple About Xcode Online Swift Playground StackOverflow   I am documenting my path to learning Swift, but it is a mish-mash, and a work in progress.  Have fun in your learning experience."
swift,3a35pu,niutech,2,Tue Jun 16 22:25:12 2015 UTC,Thanks for the resources!!
swift,3a35pu,HaoleJon,3,Wed Jun 17 04:10:51 2015 UTC,"I would recommend you to look at the Swift Language YouTube channel, where you can find a Stanford University course, Udemy course and the biggest collection of 250+ Swift video tutorials and guides. There is no better educational material than video."
swift,3a35pu,4237_65,3,Tue Jun 16 21:54:41 2015 UTC,"As someone who just started coding about a year ago, I agree that videos are great.  However, most of the ones I have seen with swift, no matter how 'beginner' they are, start off with some concepts that aren't intuitive if you have zero experience.  Myself, I started with Obj-C with an online college course (which wasn't very good) and a book (which was) written by Stephen Kochan.  I just started swift a couple months ago, and I can say, without the Obj-C background, I would have been able to get through the tutorials and make the apps in the videos, but would have missed the underlying principles.  With that said, I don't think you need to start in another language first, swift is pretty user friendly, but be sure to get a good solid base in your learning, and try different strategies.  Udacity has a great free intro into swift, but skips some of the foundations I mentioned.  Udemy has one, but it costs money.  However, if you express interest and wait a while, you'll get a pretty hefty discount (at least I did), and Rob Percival does a good job explaining the basics, which are variables, constants, if-then (loops), etc.  I think the raywendrlich site is good, and he has a podcast, too.  And Stephen Kochan is coming out with a Swift book in November which I think would be a good reference if you need clarification on something introduced in a video, or you're just trying out new things on your own.  The biggest thing is, dive in, try it out, and don't get frustrated.  Coders can have a bit of a club mentality (I saw someone ask on stackoverflow about how to read documentation, the first answer was ""if you can't read documentation, you should learn""), but there's no secret handshake.  There's a lot of code out there, and a lot of coders, and everyone has there own stye.  You learn by doing.  I didn't have a smartphone until 2010 or even know what Facebook was until 2011, but I've built six (really, really dumb) apps after just a few months, and I work 40-60 hour weeks.  Good luck, and happy coding.  Haole"
swift,3a35pu,Adamw88,2,Wed Jun 17 00:31:42 2015 UTC,"I asked a similar question a long time ago on a different forum, and someone went against the grain and offered me advice differing from the other commenters. So I'm going to steal his advice (which helped me immensely) and pass it on to you:  I would learn Ruby first. It is such an easy, intuitive language, and you'll learn it in no time. I'd argue it's easier than Python, which is another easy language. Do code academy, or do Learn Ruby The Hard Way, or do any one of the other dozens of free resources out there.   It's not impossible to learn coding first by learning Swift, but it'll be harder. I think it'll be easier -- even more rewarding -- to come into it with some programming knowledge. Things will just click better.  So, that's my two cents. Learn Ruby, take as long as you need, and then move onto Swift after you've made a few simple text-based programs or games."
swift,3a35pu,rajohns08,2,Tue Jun 16 23:42:05 2015 UTC,Awesome. I'll check ruby out!
swift,3a35pu,senatorkang,2,Wed Jun 17 04:12:29 2015 UTC,"I'm currently working through some of the Swift + iOS tutorials on http://www.raywenderlich.com/ and they seem to be really nice. Especially the free chapter of their iOS Apprentice series that you get for signing up for their newsletter.  Good luck, and give that site a look through! Swift is very friendly; the hairy beast is the iOS SDK!!"
swift,3a35pu,pier25,2,Wed Jun 17 02:05:52 2015 UTC,iOS Apprentice from ray wenderlich
swift,3a35pu,ejpusa,2,Wed Jun 17 03:42:54 2015 UTC,"I tried reading based tutorials first and it just didn't sink in, so I paid for a month of Lynda.com and crammed a foundations of programming course that used JavaScript. Then a couple of Swift specific courses. I found that Simon Allardice was the lecturer that worked best for me and I basically just went through his catalogue and picked things that would help with the project I had in mind.    The reason I paid for it as opposed to using the free stuff is, well, I'm pretty easily distracted especially when I'm new to things and am hanging on to knowledge by a tenuous thread. The production value on the Lynda courses was better than the free ones I saw so there was nothing to distract me like poor sound quality or bad animations that stop me from being immersed. Now that I have a foundation to work from I can use the free stuff and not get distracted but personally I needed that starting point. I plan on heading back to Lynda for my next phase though.   I still have a long way to go though. A looong way.   Edit: I must say though that I'm sure there are very good free tutorials out there, so my experience with quality is probably not representative of most."
swift,3a35pu,banukatanaya,2,Wed Jun 17 05:34:48 2015 UTC,"I know you are asking on /r/swift but if you want to learn on your own and have never coded before, I don't think starting with Swift is such a good idea.  I'd recommend starting with Javascript, Python, or Ruby. Also learning some HTML/CSS is never a bad idea.  I imagine you want to learn Swift to make apps, but programming is a very long term game. You will learn Swift better if you take a detour first, and you will also get a taste of different languages and frameworks."
swift,3a35pu,pier25,3,Wed Jun 17 08:16:37 2015 UTC,"Wow, I actually find JS way more complex then Swift. Swift just comes naturally to me. JS, now that's crazy talk! :-)"
swift,3a35pu,banukatanaya,1 point,Wed Jun 17 09:46:12 2015 UTC,"Hi. I was wondering if starting off purely with swift is a bad idea? Because when i see other languages, maybe because I'm not too familiar with the syntax seems to be almost cryptic to me but with swift, everything seems to be more or less user-friendly."
swift,3a35pu,pier25,2,Thu Jun 18 06:27:22 2015 UTC,"A bad idea? It depends.  If you have someone to teach you what's really going on and explaining why you do things in a certain way, then any language is good to start with. Things will make sense (after some time) and you'll have someone to answer your specific questions. StackOverflow is great for solving concrete technical problems, but it's not so good at solving general conceptual questions which are the ones that you need to solve at the beginning.  If you are going to learn by yourself, copying and pasting code from here and there, etc, things will start to make sense a lot later because nobody will teach you the basics and nobody will answer those conceptual questions for you.  It's like reading a book in order, or read random pages and trying to figure out the story without knowing what things you have missed and which pages you haven't read. Sure with enough time and motivation anything can be accomplished, but why  do it the hard way?  And if you are going to read the book randomly, so be it, but do yourself a favour and start with the simples language you can find."
swift,3a35pu,tomnnnn,1 point,Thu Jun 18 07:16:06 2015 UTC,"Thanks :) yea i'm trying my best not to just look at the codes and accept them as ""these codes do this"" but like breaking them down to see why they do so. It is quite tedious but super rewarding when you can kinda put together the pieces when you need them later. Somethings though as you said are beyond my field of comprehension."
swift,3a35pu,npva,2,Thu Jun 18 09:48:04 2015 UTC,"That's precisely the problem I was pointing out. You are analysing code with a microscope, instead of seeing the big picture. Of course you won't be able to see the big picture unless someone explains it to you, or you spend and awful amount of time and effort."
swift,3a35pu,tomnnnn,1 point,Thu Jun 18 09:57:59 2015 UTC,"I found Swift really easy to get into with minimal experience. Took a few false starts where I chose tutorial series' which weren't to my learning style but, when I hit on the right one, it was great fun and I saw my progression really quickly."
swift,3a35pu,spinwizard69,1 point,Wed Jun 17 13:03:39 2015 UTC,Which one was the right one for you?
swift,3a35pu,vinags,1 point,Wed Jun 17 13:22:38 2015 UTC,I watched a YouTube series (can't think of the name off the top of my head) and followed it up with a book the same people had written. It involved making a game called Zombie Conga if that helps!?
swift,3a35pu,FutureIsMine,1 point,Wed Jun 17 14:16:35 2015 UTC,"If you mean no coding experience at all then you have unlimited options.   I'd look into a college computer science program or something equivalent on line. Further I'd suggest a program that doesn't use Swift.  Why?   Well to learn the concepts upon which you build software and frankly the concocts upon which Swift is built.    In the end if you just learn Swift and the SDK Apple supplies, you will put yourself at a disadvantage.    Especially if you intend to make is a career.    The story is slightly different if you intend this as a hobby but even then a few basic concepts learned properly can do wonders for your ability to work with Swift.   As far as books directed at complete beginners and the Swift language, I don't know of any that I can suggest at the moment.   That really doesn't mean much though as it seems like new Swift programming books come out everyday.   For a beginner the book you choose ought to be focused as much on computer science as it is Swift."
swift,3a3k65,Kametrixom,2,Tue Jun 16 23:16:15 2015 UTC,"I am going to second this. Almost everywhere you see an implicitly unwrapped optional is somewhere you should probably actually be checking, with the new swift 2 guard statement, it makes many cases much cleaner as well.  The one huge exception is the @IBOutlet declarations, where there really isn't any runtime way to recover in your app if these aren't hooked up anyway."
swift,3a3k65,voidref,1 point,Wed Jun 17 22:51:24 2015 UTC,"I disagree about the core data component, you don't want to force cast anything in that framework. Always use if let or guard let instead to make sure that there are actual objects."
swift,3a4i5e,Takuya813,1 point,Wed Jun 17 04:07:10 2015 UTC,"You're gonna have to wrap that in a do {} catch {} block and try the function.  do {    let fileString = try NSString(contentsOfFile: file, usingEncoding: NSUTF8StringEncoding) } catch {    println(error) }"
swift,3a4i5e,lyinsteve,1 point,Wed Jun 17 05:09:46 2015 UTC,I did that-- but i’ll try again in 2 min and report back.
swift,3a4i5e,fluchtpunkt,1 point,Wed Jun 17 05:14:21 2015 UTC,"do {  let startWords = try NSString(contentsOfFile: startWordsPath, usedEncoding: NSUTF8StringEncoding) {   } }   catch {   print(error)  }"
swift,3a4i5e,twostraws,2,Wed Jun 17 05:29:23 2015 UTC,wrong method signature. Don't use usedEncoding:. You should use usingEncoding:  usedEncoding: will write the detected encoding into the pointer you supply. But NSUTF8StringEncoding isn't a pointer.
swift,3a4i5e,twostraws,1 point,Wed Jun 17 06:27:29 2015 UTC,"I think that's just initWithContentsOfFile:encoding:   Didn't see :usingEncoding.  Xcode wants to complete initWithContentsOfFile:usingEncoding to :format:locale:error  but with :encoding I get the same ""extra argument in call"" error."
swift,3a4i5e,cryo,1 point,Wed Jun 17 07:21:57 2015 UTC,"I think you need to slow down a little; you're getting a bit ahead of yourself. The comments above are correct, but you aren't really understanding them – are you sure you really want to be dabbling with Swift 2 so very early in its beta stage?  The problem is happening because Swift does has done away with the error parameter here. You must used do/try/catch. If you include ""error"" in the call, which was correct in Swift 1.2, it will not work in Swift 2.  If you read my discussion of the changes in Swift 2 it might help. But I would suggest you consider using Xcode 6.3.2 for the time being –  you can upgrade to Swift 2 very easily once you understand the basics."
swift,3a4i5e,lyinsteve,1 point,Wed Jun 17 18:59:11 2015 UTC,"OK-- I have more than 140 char here, so I wanted to just get this off my chest.  I was asking if you saw an error with swift 2 or if you had done work on it because I encountered a strange error that I couldn't quite figure out.  I am aware of the change from error to do-try-catch, as I've read the swift 2 differences from you and others.  I really feel like you're patronizing me, and I'm sorry if I come off too frankly. I'm not a novice engineer.  I definitely understood what the posters above were saying, but unless I'm just really bad at my entire life, there is NO method that takes :usingEncoding. From the prerelease iOS doco:  init(contentsOfFile:encoding:) init(contentsOfFile:usedEncoding:)   Those are the only two inits that exist.   The problem is not because I didn't try the method, because that's literally the first thing I did when I read the documentation, saw that it throws an error, and that it returns a nonoptional.   Maybe you can't do ""let X = try func() { } "" with a closure for assignment, but pointing that out would be more helpful than saying I don't understand _:error vs try."
swift,3a4oow,sirinath,2,Wed Jun 17 05:09:34 2015 UTC,"I have no inside information, but from what I glean by looking at what has been said, I think what will happen is that they will publish an official Git repo for the Swift compiler (the CLI utility) and the Swift standard library, which will hold a version which will compile on OS X and Linux (and probably *BSD, maybe even, unofficially, Windows with the right support libraries and programs).  You won't get Cocoa, iOS support, code signing, or anything like that, and you won't get Xcode. What this will enable is integrating Swift as a language into the standard Linux developer tool set, and give them a reason to include support for Swift in Linux-based IDEs (None of which I can name at the moment, but I know there are many, ranging in quality from utter-crap to top shelf).  You will not be able to develop for iOS on Linux with that (though it would surprise me if someone didn't publish an App development library for Android in Swift), but that's not the point of opening Swift. The point is that Apple (and most of us here, I should think!) thinks Swift is awesome, and they want everyone to use it for everything - even and especially things that have nothing to do with Apple.  But that's just (somewhat educated) speculation right now."
swift,3a4oow,KyleCardoza,2,Wed Jun 17 17:28:41 2015 UTC,"It will be good if Google made Android Studio to support Swift code.This will make porting iOS or Mac apps to Android easier (if your project follows MVC).You can use your models at least ,IDK what design pattern Android apps are using  I think that Google has to win from this,because there will be more developer(those that don't like Java) and iOS or Mac in Swift apps will come (faster) to the Play Store"
swift,3a4oow,StefaScoSteve,-3,Thu Jun 18 14:24:10 2015 UTC,The only details we have are that : will be open sourced for Linux and this is going to happen by the end of the year.
swift,3a4oow,StefaScoSteve,3,Wed Jun 17 06:10:42 2015 UTC,Something can't be open sourced for an operating system. The language is open sourced and they (Apple) actively contribute to making Swift work on Linux.
swift,3a1wqd,Alex_marchant,10,Tue Jun 16 16:16:41 2015 UTC,It would be nice if there was some explanation of what a Hype Machine is. Is this an API to some website? Is this a walkthrough/marketing library? Is it a social sharing screen? Is it a user rating prompt?
swift,3a1wqd,me_asplode,1 point,Tue Jun 16 19:30:21 2015 UTC,"After some quick googling and a peak at the code it appears to be for this website, http://hypem.com/ , some type of music discovery platform."
swift,3a1wqd,fefejones,1 point,Tue Jun 16 21:50:33 2015 UTC,"Haha, ya, fair enough. Leave it to the engineer to not try and explain anything. Anyways seems like /u/fefejones pretty much got it, but to use an analogy we'd all understand it's like reddit for music."
swift,3a1wqd,me_asplode,1 point,Wed Jun 17 00:42:24 2015 UTC,"And this library is for an app to get data off of the Hype Machine website? Edit: As opposed to, I dunno, posting? Sorry I don't know how the Machine works. :)"
swift,3a1wqd,me_asplode,1 point,Wed Jun 17 02:19:09 2015 UTC,It's a library to interact with their API. I build www.plugformac.com and it's what we use in the new version.
swift,3a1wqd,rozling,2,Wed Jun 17 02:57:58 2015 UTC,Got it. Thanks!
swift,3a1wqd,Azr79,2,Wed Jun 17 03:24:52 2015 UTC,This looks like a lot of fun to play with - thanks for open-sourcing it and for posting here :)
swift,3a3m0a,fclout,1 point,Tue Jun 16 23:32:14 2015 UTC,I believe that they marked every bug report to do with Swift as possibly fixed (I too had one). What exactly are you trying to do? The function in your example does nothing..
swift,3a3m0a,Kametrixom,0,Wed Jun 17 01:06:39 2015 UTC,This example leaks. Run it with the Leaks instrument.
swift,3a3m0a,Kametrixom,1 point,Wed Jun 17 01:15:51 2015 UTC,"You can use a function instead of a closure, which is really the same, just with a name, so you can call itself within:  func lap(n: Int) -> Int {     if n == 0 { return 0 }     return n + lap(n - 1) }   I checked and it doesn't leak"
swift,3a3m0a,lyinsteve,1 point,Wed Jun 17 01:28:28 2015 UTC,"This example is trivial. I'm not complaining that I don't know how to work around it and I'm not asking for help on it specifically. What I want to know is if there is a new language feature that I'm not aware of and that addresses the closure case specifically, or if I should tell Apple that it has probably not been fixed."
swift,3a3m0a,lyinsteve,1 point,Wed Jun 17 01:51:52 2015 UTC,You should tell Apple it hasn't been fixed. You could probably get them to implement a fix by the time Xcode 7 is out of beta!
swift,3a2sdj,aidanharris1,3,Tue Jun 16 19:53:32 2015 UTC,"Alongside other things, you can use XCPlayground and its method XCPSharedDataDirectoryPath to read/write to its playground sandbox folders."
swift,3a2sdj,Takuya813,2,Wed Jun 17 03:26:20 2015 UTC,"Playgrounds are sandboxed!   Check out this post's answer http://stackoverflow.com/questions/26976462/swift-playground-files-are-not-readable  TL;DR  Playgrounds are sandboxed, so you won't be able to just grab files from anywhere in your user folder. Here's how to add that file to your playground to make it accessible:  Find your "".playground"" file in the Finder Right click and choose ""Show Package Contents"" You should see ""timeline.xctimeline"", ""contents.xcplayground"", and ""section-1.swift"" Make a new folder called ""Resources"" if it doesn't exists yet. Copy your files into Resources folder"
swift,3a2aws,shootmcgoot,2,Tue Jun 16 17:53:34 2015 UTC,I've found paintcode is worth the price. It's hard to beat native draw commands.
swift,3a2aws,coffeekin,1 point,Tue Jun 16 21:37:35 2015 UTC,"Wow. Paint Code looks really great. Unfortunately, in trying to make an educational app and can't afford the licensing for it right now :("
swift,3a2aws,jman32112,1 point,Tue Jun 16 23:07:34 2015 UTC,You could always download the free trial of it gives you enough time
swift,3a2aws,farski,1 point,Wed Jun 17 08:13:45 2015 UTC,"Something like SVGKit should let you load raw SVG into a UIImage-like object. At worst you should just need to take the SVG file's contents and munge the XML and redisplay the result as a new image with SVGKit. If you set up some ID's or classes in the SVG to make the changes you need easy, it shouldn't be too bad."
swift,3a0bce,PeYoTlL,9,Tue Jun 16 05:51:35 2015 UTC,"Swift 2.0 will be released along side iOS 9 & Xcode 7, strongly doubt swift 2.0 in xcode 6.x"
swift,3a0bce,lachlangrant,8,Tue Jun 16 06:11:02 2015 UTC,"swift 2.0 is not ready yet. in one of the WWDC talks they mention a feature which is not in this seed but will be in the next, so it is essentially a beta"
swift,3a0bce,shitidiotturtle,1 point,Tue Jun 16 06:21:12 2015 UTC,I've been developing a game with Swift 2.0 in Xcode 7 (And running it on my iPhone which is only running iOS 8) thinking that I was ahead of the game and preparing for the future. Should I hold off until closer to the final release date?
swift,3a0bce,TortugaChris,6,Tue Jun 16 07:14:33 2015 UTC,A good rule of thumb would be to never develop anything with a beta version of Xcode if you plan on releasing it before the new version of Xcode goes gold.
swift,3a0bce,ArvoHeikki,2,Tue Jun 16 09:41:42 2015 UTC,"as far as betas go it seems pretty stable, the main concern for me is release date since you won't be able to submit until we have an Xcode 7 GM"
swift,3a0bce,shitidiotturtle,1 point,Tue Jun 16 07:17:57 2015 UTC,"I understand that you can not submit iOS app to appstore using Swift 2, but can you at least do beta test for the app written in Swift 2 by using Testflight?"
swift,3a0bce,cnbuff410,1 point,Tue Jun 16 15:29:24 2015 UTC,"You can submit iOS 9 apps for TestFlight in ITunes Connect, so yes."
swift,3a0bce,dotmax,1 point,Tue Jun 16 17:35:44 2015 UTC,"You can submit it, but you can only use it for internal beta, not for external beta."
swift,3a0bce,dotmax,1 point,Tue Jun 16 22:03:25 2015 UTC,"This frustrates me as well. Basically you can't start migrating your code to Swift 2 unless you're willing to wait to release the app in the (late?) fall. The source code is incompatible with Swift 1.2 and it requires new SDKs, so there's no chance Apple would release any public version of Xcode with Swift 2 before those SDKs go GM."
swift,3a0bce,Catfish_Man,1 point,Tue Jun 16 17:41:18 2015 UTC,Yes.. Very frustrating... I was happy to try the new features until I realised I will have to wait 3 months to use it. At least I will have time for watching all the WWDC videos before starting to use it everyday.
swift,3a1oxt,tkaboris,3,Tue Jun 16 15:19:06 2015 UTC,Have you tried using dash docs?
swift,3a1oxt,bashir26,1 point,Tue Jun 16 16:59:51 2015 UTC,Thanks never even heard of it.  Yes it make sense to use it
swift,3a1oxt,iOSboris,1 point,Tue Jun 16 17:52:10 2015 UTC,Actually I wanted to build an app for myself as part of learning programming. So where do I get access to swift api?
swift,3a1oxt,chomskee,1 point,Tue Jun 16 18:46:39 2015 UTC,"I'm not sure about an API to access it, but during WWDC Apple released their own standard Swift documentation for the first time: https://developer.apple.com/library/prerelease/ios//documentation/General/Reference/SwiftStandardLibraryReference/index.html"
swift,39ziwj,niutech,2,Tue Jun 16 01:31:22 2015 UTC,"In other words, it lets you avoid deep nesting of ifs when you unwrap values."
swift,39ziwj,fclout,6,Tue Jun 16 02:04:47 2015 UTC,"You could ""assert"" just as much using an else statement. The unique feature of guard is that the variable exists in the rest of the scope as well, and this is precisely to let you avoid deeply-nested ifs."
swift,39ziwj,fclout,6,Tue Jun 16 02:30:54 2015 UTC,"Those two statements are exactly equal.  guard is interesting for other cases: - It binds variable names (like ""if let"") and the bound variables are live after the guard statement. - It is useful for expressing the notion of a ""guard condition"" which the reader should assume is true for the rest of the code.  This is possible because guard does not allow the ""else"" block to fall through.  -Chris"
swift,39ziwj,clattner,1 point,Tue Jun 16 02:45:29 2015 UTC,"Chris, When you say that guard does not allow the else block to fall through, does that mean that you do not need to explicitly return?  On what scope does this hold true (for instance, would it explicitly continue if used in a for loop)?"
swift,39ziwj,waterskier2007,1 point,Tue Jun 16 03:21:56 2015 UTC,"No, you have to return or continue, Swift cannot decide what specifically you want to do in the else case."
swift,39ziwj,terhechte,2,Tue Jun 16 16:15:56 2015 UTC,"It's easier to miss the negation with an ! than it is to read guard. It makes more sense if you're unwrapping optional as part of a guard conditional but in effect you are guarding for what you DO want, rather than testing for what you DON'T. Your two code samples will do the same thing though."
swift,39ziwj,yeskia,2,Thu Jun 18 02:59:15 2015 UTC,"I have found guard to be useful to test if a good amount of variables actually exist, especially if I write an optional initializer for a class."
swift,39ziwj,FutureIsMine,1 point,Sun Jun 21 19:50:41 2015 UTC,"Aside from being a different kind of ""if let"" there are limitations of what you can put within a guard block.  You have to call something that exits: a throw, a return, or even an application exit(). So this makes control flow easier to reason because a guard must exit."
swift,39ziwj,glide1,1 point,Tue Jun 16 01:55:31 2015 UTC,"The main reason for its existence is the way it does unwrap as others have mentioned. But guard makes sense even in your example, because from a code reading point of view it is very clear what a guard does. I guard HAS to exit a scope, anything else produces a compiler error. So inside a guard you need to put a return, break, throw or continue.  This means when trying to understand what a function does you can easily scan past all the guard statements without looking at what they do because you know they can't do anything but exit your function. With if statements you actually have to look at the carefully to determine whether they are actually guards or not.  I think this is really about the readability and avoiding surprises in swift. You see how you need to explicitly unwrap, mark potentially throwing statements with throw etc. It makes everything very explicit so people don't accidentally do stuff. Just like you have to write override in swift to override a method. You can't override a method by accident."
swift,39zake,WoolyEnt,6,Tue Jun 16 00:20:53 2015 UTC,it will back support to iOS7
swift,39zake,fly2never,2,Tue Jun 16 00:47:29 2015 UTC,Thank you! Now the inverse; will Swift <=1.2 compile on iOS 9?
swift,39zake,lyinsteve,4,Tue Jun 16 04:06:48 2015 UTC,"It will, definitely.  Can you write Swift 1.2 using Xcode 7? Sadly no.  However you can use Xcode 7 to process symbol files from your iOS 9 device, and then deploy Swift 1.2 code using Xcode 6.3."
swift,39zake,FutureIsMine,1 point,Tue Jun 16 04:23:19 2015 UTC,Is it possible to ship an app using Xcode 7 though to a the app store? Or place the binaries from a file made in Xcode 7 into Xcode 6.3?
swift,39zake,Pyroh13453,1 point,Tue Jun 16 04:59:50 2015 UTC,"Nope, nope... sadly"
swift,3a09vn,rush905,2,Tue Jun 16 05:34:17 2015 UTC,"Your syntax was a bit off in modifyInt (missing a parenthesis), as well as the modifyInt() call:  func double(number:Int) -> Int {     return number * 2 } func triple(number:Int) -> Int {     return number * 3 }  func modifyInt(number:Int, modifier: (Int -> Int)) -> Int {     return modifier(number) }  modifyInt(15, modifier: double)"
swift,3a09vn,vitaminrad,1 point,Tue Jun 16 05:58:58 2015 UTC,Thank you! But why does (Int -> Int) have to be in parentheses?
swift,3a09vn,vitaminrad,1 point,Tue Jun 16 15:00:44 2015 UTC,(Int -> Int) describes the function you're passing. It accepts an Int and also returns an Int.  I really love Swift in that everything is typecast (vs. the shit show that JavaScript is)
swift,3a09vn,divinedominion,0,Tue Jun 16 18:15:57 2015 UTC,Going from C++ to Swift is the greatest transition ever. The language really is beautiful.
swift,39xz7e,FutureIsMine,3,Mon Jun 15 18:34:02 2015 UTC,"I've been struggling with interoperabiltiy, I'd love to see an answer to your question. I'm working with an ObjC SDK and it's been a pain in the ass trying to port over the methods to make them callable the .swift file."
swift,39xz7e,rubberball801,3,Mon Jun 15 19:41:19 2015 UTC,This should be taken care of by the SDK ( Realm's objc library is callable from swift ) and the bridging header.
swift,39xz7e,voidref,1 point,Tue Jun 16 03:56:52 2015 UTC,"Thanks, the SDK may be out of date or maybe it's just that I don't fully understand how to do it. I'll keep digging."
swift,39xz7e,rubberball801,1 point,Tue Jun 16 16:19:18 2015 UTC,"Which talk, at what time?"
swift,39xz7e,voidref,1 point,Tue Jun 16 03:58:18 2015 UTC,Improving your existing Apps with Swift.
swift,39xz7e,voidref,2,Tue Jun 16 04:27:21 2015 UTC,"Good talk, but at no point does he override an objc method in a category.  He just makes a new func and calls it from the existing draw."
swift,39xz7e,rubberball801,1 point,Tue Jun 16 05:21:21 2015 UTC,"Yea, I recently re-watched the talk and noticed that as well. Welp, if you can't override a function, might as well make a new one is the next best thing."
swift,39xz7e,rubberball801,1 point,Tue Jun 16 05:31:19 2015 UTC,"Hey OP, thanks for posting the github file for using Swift in with Obj C. Would you mind  adding what it would look like for using ObjC in a Swift file? I actually haven't been able to find many code examples online, only explanations. Thanks!"
swift,39ype2,ejpusa,1 point,Mon Jun 15 21:37:14 2015 UTC,"Building a client-side CMS is an old topic (anybody remember JSCMS?). You can use CloudKit as a backend for it, but this would be insecure. Your credentials could be shown to the user, and they could easily send their own commands using Web Inspector/Console. You would need to use node.js or any other JavaScript server."
swift,39ype2,niutech,1 point,Mon Jun 15 23:33:18 2015 UTC,"From Apple:   If you have a CloudKit app, you can use CloudKit web services to provide a web interface for users to access the same data as your app.   This seems to be a web front end to cloud kit from Apple:  https://cdn.apple-cloudkit.com/cloudkit-catalog  Digging here:   Some database operations require the user to sign in using their Apple ID. Your web app will need to handle authentication errors and present the user with a dialog to sign in. Apple actually presents the sign in page through a redirect URL so that the user’s credentials remain confidential."
swift,39ype2,niutech,1 point,Tue Jun 16 00:39:27 2015 UTC,"When users are singing in using their credentials, they will have access only to their cloud storage. A CMS should have a single data store for all users, autenticated by admin password, so that regular visitors don't need to log in. Therefore admin credentials would need to be stored somewhere at the client side, making a possible security breach."
swift,3a00yz,RoadRageRR,14,Tue Jun 16 04:04:52 2015 UTC,Aw I thought we were bashing nodejs :(
swift,3a00yz,pxpxy,9,Tue Jun 16 06:34:59 2015 UTC,What...are you even talking about? What nodes? What finger? There is absolutely no context for your problem.
swift,3a00yz,cryo,1 point,Tue Jun 16 08:54:13 2015 UTC,Ah. I didn't realize that /r/swift was for swift only. I'm making an iPhone app with swift and am having a few issues. Sorry wrong sub!
swift,3a00yz,waterskier2007,4,Tue Jun 16 14:01:29 2015 UTC,I think that /u/cryo means that you provided no context. I'm going to assume that you are using SpriteKit and you are talking about an SKNode object. It might help to mention that (or clarify if I am wrong) in your OP.  It might also help to post some code.
swift,3a00yz,cryo,2,Tue Jun 16 16:15:46 2015 UTC,"No, but it's not a sub where people can read your mind either. ""node"" can mean many different things. Little information, no context, no code, no details. That makes it a hard question to answer."
swift,3a00yz,FutureIsMine,-1,Wed Jun 17 07:25:34 2015 UTC,I have never posted a programming question anywhere. My fucking bad.
swift,39u9qw,WoolyEnt,10,Sun Jun 14 20:51:41 2015 UTC,"IB is great when it works for you, which is the vast majority of the time, but when it breaks down it breaks down bad. My company's main product has a lot of branches and merging xibs is either completely painless or completely impossible. IB has resulted in a lot of duplicated effort and reimplementing the same thing from scratch multiple times. That's not a typical use case, though, and I imagine IB works just fine for the majority of developers.  Fuck that thing where it changes the version attribute of the plugIn node every time you so much as think about opening a xib, though. So many commits with bonus xibs sprinkled in."
swift,39u9qw,euneirophrenia,1 point,Mon Jun 15 00:52:08 2015 UTC,"I went down to the developer tools lab at WWDC this year to ask an engineer specifically about the problem where merely viewing a XIB arks it as changed (and you look are the XML and only the tools version has changed)  I was told that this behavior is a bug. It's supposed to only change that version number after you have actually done something to modify the XIB.  He went on to say that he had personally played whack-a-mole with this issue, and that we should file radars, and attach XIB XML to the issue, because there may be specific things in the XML that triggers the annoying misbehavior.  So please — everybody — go forth and file radars on this one!"
swift,39u9qw,longstinger,15,Tue Jun 16 02:47:50 2015 UTC,"At the end of the day the answer is to choose whatever is best for the job.  Having been to WWDC multiple times and having worked with clients who have Apple representatives come review our code and give advice, Interface Builder is pushed really heavily by Apple. Personally I love it. Epically these days with all the layout guides / auto layout / size classes IB saves me tons of time. I wouldn't work at a company / an app that didn't make use of interface builder. My time is more valuable than spending hours writing layout code. But if your team and app work better without it, then more power to you."
swift,39u9qw,aandrewc,8,Sun Jun 14 21:27:47 2015 UTC,"And don't forget the Inspectables and Designables, this shit saves  so much headaches"
swift,39u9qw,Azr79,6,Mon Jun 15 11:45:56 2015 UTC,"Do you work with many developers on the same app? How do you manage merge conflicts?  I love doing everything in code, because I don't have to worry about stepping on another developer's toes when making small changes. Check out SnapKit, if you haven't already. You definitely don't have to spend hours writing layout code, plus you can make your layout code much more modular, and refactor it into components. Also check out React Native.  I think you might have the wrong attitude towards Interface Builder - just because a company or app isn't using it, it doesn't mean they're doing it wrong."
swift,39u9qw,fqn,9,Sun Jun 14 21:39:20 2015 UTC,"Xcode 5 changed the format of xib files / storyboards to make them easier to merge. They've recently updated the project file format to better handle some merge scenarios as well.  I'm not saying you should never do any auto layout / view creation by hand (we've built our own helpers to make that eaiser https://github.com/willowtreeapps/WTAHelpers/tree/master/WTAHelpers/WTAAutoLayoutHelpers) but anything that I can do in IB I will.   UIStackView will also make programmatic view layout in an auto layout environment significantly easier too.  React Native is really cool but nowhere near ready for prime time apps IMO!  Again there's no real right answer for this question. Whatever works best for the developer is what's best. What is true though is that the people who built the framework we're using (Apple) are recommending IB use, so it would be unwise to totally write it off."
swift,39u9qw,aandrewc,9,Sun Jun 14 21:53:01 2015 UTC,"I wouldn't say you are doing it wrong, but there is a strong case that you are being very inefficient in your development without using IB. I find it invaluable to work in IB with the preview window in the assistant editor so I can see how it behaves in several sizes from iPhone 4S up to an iPad. Switching to various internationalizations (including the double-string one) lets me quickly see how the layout responds to different content. These days using custom controls with IBDesignable is another huge time saver. If you are having to run your app on several devices just to see if your new complicated layout, then you are missing out in my opinion.  Also counter to what most people are saying, IB is exactly most useful for complex layouts. If you have to debug or adjust a complicated layout, you have to read the code, and essentially simulate it in your head to figure out what to change. That could be error prone, especially if you're digging into someone else's old code.  I never found IB merge conflicts to be a big deal on teams that communicate well and plan ahead. You can modularize by using separate xibs, and with the new modular storyboards there is one less excuse."
swift,39u9qw,viscoelastic,2,Mon Jun 15 10:07:01 2015 UTC,"I can't upvote this enough.   One fun exercise is to look at an Apple or third party developer app and browse it's package contents. While you can't look at the nibs included in the package in IB, you can get an idea of how and how much that application makes use of IB. It may surprise you how advanced of a layout you can create in IB. Especially for universal apps and accounting for all the screen sizes we have these days."
swift,39u9qw,aandrewc,0,Mon Jun 15 13:34:54 2015 UTC,"Every situation and every app has different needs. IB is a great and fast tool for solving less complex layouts. But as the complexity increases so does the hours you will have to put in to tame IB to you and your team's needs. SnapKit makes it almost ridiculously easy to create layout constraints pragmatically. That code will also be readable and easily understood by other developers, both while adding to it and while handling merges, which is not something I could say for IB."
swift,39u9qw,msson_,5,Mon Jun 15 00:55:16 2015 UTC,"I'm a visual person, and the idea of designing a complex UI and setting their respective auto layout rules entirely in code just sounds unnecessarily painful. I'll code subviews within objects in code but for the main elements I can't see doing it any other way than in IB, as cantankerous as it."
swift,39u9qw,anarchyx34,7,Mon Jun 15 01:08:05 2015 UTC,"I think Interface Builder is great if you want to build a relatively simple app.  But I have no idea why you would want to use Interface Builder for something more complex, especially if you're working with other developers. We use SnapKit to write autolayout constraints. I think it's really elegant and fast to write.  I know you can break up your project into multiple storyboards to help with merge conflicts, but we tried that and I did not enjoy it."
swift,39u9qw,fqn,5,Sun Jun 14 21:34:55 2015 UTC,"I've had quite a few complaints from Hacking with Swift readers saying I should create all the UI in code rather than IB, which is obviously a bit strange – there are lots of times when IB makes sense, and there are probably as many times when you want to do it in code. When teaching novices, IB is brilliant, not least because it ensures your Auto Layout is correct.  The addition of UIStackView in iOS 9 is likely to cause me to rely a bit less on IB for future tutorials, because the stack view takes away a lot of Auto Layout thinking. I'm writing a tutorial right now that does all the layout in code, although I'm sure I'll get a fair number of complaints saying I should have used IB!"
swift,39u9qw,twostraws,1 point,Mon Jun 15 00:50:35 2015 UTC,I look forward to this and comparing it to the way I handle doing my layouts (all in code). I'm sure there's optimizations / clever ways to do certain things I'm missing. Would you mind sending me a PM with the link when you release it?
swift,39u9qw,twostraws,2,Mon Jun 15 02:25:52 2015 UTC,"As promised. There's the tiniest bit of storyboard at the beginning, then everything else is done in code. Hurray for UIStackView!"
swift,39u9qw,vinags,1 point,Tue Jun 16 21:46:52 2015 UTC,Thank you!
swift,39u9qw,lusion,2,Wed Jun 17 19:36:31 2015 UTC,"Good question, and it will be interesting to find the consensus.  For me, it is a bit of this and a bit of that.  In some circumstances it is good to it programatically (e.g. an array of labels), and sometimes (probably more often) it is easier to use IB."
swift,39u9qw,blaizedm,2,Sun Jun 14 23:09:35 2015 UTC,"I favor IB. Of course I might write code for some things if that makes more sense. But in general I think people ought to use GUI designers. This I believe from an architectural and maintenance point of view. I have worked on large pieces of software with complex GUI before and I see many problems with coding the UI:   For a developer who doesn't know the app, it can be very difficult to jump into and change GUI done in code. Locating a specific GUI element based on say customer feedback and altering it is much harder when it is in code. With a GUI designer it is trivial. Separation of concerns. By coding the GUI one very easily ends up mixing in complex logic with the GUI code. Changing this later can be difficult to figure out. Using a designer you clearly separate your apps look from your logic. There is no way you risk code getting into your xib file. A xib file is data rather than code. Data is inherently easier to work with than code in the sense that data can much more easily be reasoned about and transformed. You could easily write a tool that transforms or manipulates all your xib files in some way. Designing a good UI is an inherently visual task. You can not easily visualize how well something will look when coding it. Coding requires running the app a lot more. My experience with working on large apps is that turn over time because a real obstacle when coding a GUI. If you need 5 minutes each time you make a GUI change, development really slows down when you start fiddling with adjusting things a few pixels.   You simply experiment a lot more with GUI than with code and thus you need a tool which can give you quick feedback about your choices. A visual tool can do that for you. There is a reason e.g. games are separated into a game engine written in C/C++ and a game logic and levels often done in a script language that allows changing things and experimenting at runtime.  My own impression debating this with people before is that people who care about reuse and architecture but don't really care about UX often favor coding the UI. For somebody with a passion for good and beautiful UIs I think they will tend to be negative towards a coding approach. Designers don't try out their designs by describing them with words, why should you? It is the wrong language for the task."
swift,39u9qw,fluchtpunkt,2,Mon Jun 15 07:08:46 2015 UTC,"I don't think the downvotes are because people disagree with you, I think they're because people are tired of having this debate."
swift,39u9qw,20InMyHead,2,Mon Jun 15 07:57:54 2015 UTC,"At least Swift made the ""dot notation or square brackets"" debate obsolete. ;)"
swift,39u9qw,ObjectiveCopley,1 point,Mon Jun 15 09:10:32 2015 UTC,couldn't find much discussion about it here. the debate is dynamic with every iteration of the languages and IDE as well.
swift,39wek6,ProjektProgram,5,Mon Jun 15 10:11:57 2015 UTC,= for assignment == for comparison
swift,39wek6,rib-bit,2,Mon Jun 15 10:25:28 2015 UTC,oh gosh what a dope. Thanks!
swift,39wek6,ZNickq,2,Mon Jun 15 10:44:10 2015 UTC,"This is also a bad method to do it, check out this stack overflow link: http://stackoverflow.com/questions/11342897/how-to-compare-two-uiimage-objects"
swift,39wek6,aandrewc,2,Mon Jun 15 11:18:47 2015 UTC,"The question's already answered but an interesting snippet from the documentation:  The bulk of what an image is lies in its CGImageRef and not in the UIImage object it is wrapped in. As of iOS 8, you can no longer rely on pointer equality to compare cached UIImage objects as the caching mechanism may not return the same UIImage object, but will have cached image data separately. You must use isEqual: to correctly test for equality.   https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImage_Class/index.html"
swift,39w4qa,binarysmurf,1 point,Mon Jun 15 07:39:49 2015 UTC,"Check out Google Places for iOS, it has exactly what you need! There are tutorials and everything already there."
swift,39w4qa,ZNickq,1 point,Mon Jun 15 09:35:46 2015 UTC,"MapKit lets you search for points of interest. Check the documentation, but I think it's MKLocalSearch."
swift,39v3s6,bridekiller,8,Mon Jun 15 01:22:20 2015 UTC,The ViewController is where most of your apps logic (read: functionality) will go. It works in between the model and the view by retrieving data in a way the model dictates and presenting it the way the view dictates along with changing which model to use and changing which view to use (by changing controllers).   ViewDidLoad is a function that gets called when the view (UI) loads on the screen. It's basically saying the device is ready to do stuff. If you have any other experience programming you can kind of think of it as the main() of your view controller.  Side note: When I first started iOS programming I felt there was a lot of stuff to take in all at once so don't get discouraged I think it happens to everyone.
swift,39v3s6,Bolderthegreat,2,Mon Jun 15 01:49:24 2015 UTC,Thanks! This was a great explanation. I think the hardest part is that I can't find simple explanations like this in most of official apple documentations.
swift,39v3s6,mosn,1 point,Mon Jun 15 05:30:15 2015 UTC,"Yeah I think after seeing patterns for a while it will click with you.  I've been using swift since the beta where there was very little documentation/tutorials. It was rough but I kept using things even if I wasn't 100% sure what they were doing. I specifically remember optionals being really tricky. Eventually I started to understand what they were doing and why they were important, and I actually started to consciously note when I was using them instead of forcing them into my code just to make it work."
swift,39v3s6,Bolderthegreat,2,Mon Jun 15 06:06:01 2015 UTC,Thank you very much for answering my question so clearly and succinctly.  This definitely gave me a starting point for beginning to pursue higher level understanding.
swift,39v3s6,donvito,-12,Wed Jun 17 03:30:27 2015 UTC,The ViewController is where most of your apps logic (read: functionality) will go.    Lol
swift,39v3s6,pkhbdb,6,Mon Jun 15 08:05:49 2015 UTC,Thank you for your contribution
swift,39v3s6,donvito,-13,Mon Jun 15 08:35:42 2015 UTC,"Actually it is a valuable contribution. While I admit that I'm too lazy to write down why that statement is so wrong on so many levels, my innocent ""lol"" should at least make some people stop, think and google before they do stupid things and make their lives miserable."
swift,39v3s6,pkhbdb,8,Mon Jun 15 09:40:11 2015 UTC,"Ok, so you're lazy AND pretentious, we get it. Are you not confident to the point that you don't want to state your opinion on where a beginner should place the logic of his app?"
swift,39v3s6,iOSGuy,2,Mon Jun 15 09:56:37 2015 UTC,In separate classes that a VC may use if needed. ViewControllers should be small classes.
swift,39v3s6,Bolderthegreat,2,Mon Jun 15 12:15:12 2015 UTC,You're not wrong but given that OP says he/she is a beginner I wouldn't feel the need to say this. When they start to actually understand what's going on in their program then they can focus on writing cleaner code.
swift,39v3s6,donvito,-7,Mon Jun 15 17:19:57 2015 UTC,"Ok, so you're lazy AND pretentious   yup   on where a beginner should place the logic of his app?   where it belongs: into the model. now pls consult google and leave me alone."
swift,39v3s6,Lucky_Chuck,2,Mon Jun 15 13:25:18 2015 UTC,"viewDidLoad is part of the view controller's lifecycle. Certain events happening causes different methods to be called during different stages of the lifecycle. Often you will want to override viewDidLoad to make some setups after the view controller object has been instantiated, but before or right after the view loaded. In this method you will call super.viewDidLoad() which will give the default behavior, you can also add custom behavior."
swift,39v3s6,fluchtpunkt,2,Mon Jun 15 04:09:29 2015 UTC,"viewDidLoad is basically the point where you set up your view programatically. Since iOS 6 (?) viewDidLoad is only called once for each viewController instance. It's probably the most important method in a viewController, that's why the Xcode template contains it. If you can't rely on Interface Builder alone you will have to use that method.   ViewController creation happens in two phases:    initialization  view loading   The first phase should happen fast, and after that phase the viewController shouldn't use much memory. You shouldn't access self.view during that phase.    Because the second phase only happens when the viewController will actually be displayed. The view of a ViewController is loaded the first time viewController.view is accessed. Which either happens because UIKit tries to place it on screen, or because you accidentally accessed self.view in the initializer of the viewController. As soon as the view was loaded the viewController will call viewDidLoad. In case you don't use Interface Builder view loading basically creates an empty UIView (for UIViewController), empty UITableView (for UITableViewController), empty UICollectionView (for UICollectionViewController) and so on. In the latter 2 cases dataSource and delegate are assigned during view loading as well. If you use Interface Builder, the viewController will load its view from the assigned storyboard/xib.     The two phase creation is best described with a UITabBarController:  let viewControllerTab1 = UIViewController() // init(), does not load view let viewControllerTab2 = UIViewController() // init(), does not load view  let tabBarController = UITabBarController() tabBarController.viewControllers = [viewControllerTab1, viewControllerTab2]   Before you can create a UITabBarController you have to create the viewControllers it contains, one for each tab. Before the UITabBarController is placed on screen, each of these viewControllers only went through the first phase.    window!.rootViewController = tabBarController // still doesn't load any view window!.makeKeyAndVisible() // (basically) loads the view of the tabBarController,                              // which will then embed viewControllerTab1.view.                              // (i.e. tabBarController.view.addSubView(viewControllerTab1.view))                             // That will trigger view loading on viewControllerTab1   When the tabBarController is shown later, it'll load the view for the first viewController, the view of the other one wasn't loaded yet. If you switch tabs the next viewController and it doesn't already have a view, it will load its view, and viewDidLoad will be called on the instance.     As said, you should be careful to not load the view if you don't need it. Imagine we want to create a backgroundColor property on the viewController. So you can use something like this:  let viewControllerTab1 = UIViewController() // init(), does not load view viewControllerTab1.backgroundColor = UIColor.magentaColor()   You should not do it like this:   var backgroundColor: UIColor {     didSet {         self.view.backgroundColor = backgroundColor     } }   Because you access self.view, so setting backgroundColor would load the view. Do it like this:  var backgroundColor: UIColor {     didSet {         if isViewLoaded() {             self.view.backgroundColor = backgroundColor         }     } }  override func viewDidLoad() {     super.viewDidLoad()     self.view.backgroundColor = backgroundColor }   isViewLoaded() will check if the view was loaded before. You only want to assign the new backgroundColor if the view was loaded. If it wasn't, you assign the backgroundColor after the view was loaded in viewDidLoad()"
swift,39w267,MithSeka,1 point,Mon Jun 15 07:03:19 2015 UTC,"This is called auto completion, because after every "" there has to be another one. You can torn this off in XCode's preferences. I don't know what you mean by things getting completely erased without any action though."
swift,39w267,Kametrixom,1 point,Mon Jun 15 07:06:42 2015 UTC,"The problem is even when I'm done writing the line it'll add a duplicate "". It seems like the autocompletion is buggy. I'll try to add a short video tomorrow. Hopefully that'll help understand this more.   By getting erased what I mean is I type a line. Xcode auto runs the line as it is a playground. After the refresh the new line I entered is disabled or mixed up with a following line. Again, a video might be more helpful in understanding this."
swift,39w267,20InMyHead,1 point,Mon Jun 15 09:10:56 2015 UTC,Double quote thing is just autocomplete. But it's not not unusual for 1st beta of Xcode to be pretty quirky.   File a bug: http://radar.apple.com
swift,39vx38,clfougner,1 point,Mon Jun 15 06:00:14 2015 UTC,"Try to modify these methods: Ask me on @askmeiosdev func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {  return FBSDKApplicationDelegate.sharedInstance().application(application, didFinishLaunchingWithOptions: launchOptions)   }  func applicationDidBecomeActive(application: UIApplication)  {  PFFacebookUtils.session()?.handleDidBecomeActive()  FBSDKAppEvents.activateApp()  }  func application(application: UIApplication,  openURL url: NSURL,  sourceApplication: String?,  annotation: AnyObject?) -> Bool {   return FBAppCall.handleOpenURL(url, sourceApplication: sourceApplication, withSession: PFFacebookUtils.session())   }"
swift,39vx38,askMeiOSDev,1 point,Mon Jun 15 06:27:19 2015 UTC,"Hi, thanks for the quick response!  I'm afraid I'm having a bit of trouble following though:  func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {   return FBSDKApplicationDelegate.sharedInstance().application(application, didFinishLaunchingWithOptions: launchOptions)     } This appears to be the exact same code I already have. What are you suggesting I modify?   func applicationDidBecomeActive(application: UIApplication)  { PFFacebookUtils.session()?.handleDidBecomeActive() FBSDKAppEvents.activateApp() }   This gives me the following error message: 'PFFacebookUtils.Type' does not have a member named 'session'. What is the purpose of the added line of code?  func application(application: UIApplication, openURL url: NSURL, sourceApplication: String?, annotation: AnyObject?) -> Bool {  return FBAppCall.handleOpenURL(url, sourceApplication: sourceApplication, withSession: PFFacebookUtils.session()) }   This appears to be code from prior to Facebooks SDK update from March (FBSDK 4.0). FBAppCall, for example, has been deprecated."
swift,39usf1,Jef_Jkn,1 point,Sun Jun 14 23:34:43 2015 UTC,http://imgur.com/a/TBn2O Here is a link to the images of my code and what happens if i scroll once
swift,39usf1,fluchtpunkt,1 point,Sun Jun 14 23:38:53 2015 UTC,"If your assignment isn't about doing things with UIScrollView, you should probably use UICollectionView instead.  You are currently re-inventing UICollectionView."
swift,39usf1,mistermagicman,1 point,Mon Jun 15 05:59:11 2015 UTC,Thanks! this worked for me :D
swift,39st3t,misanthropolis,8,Sun Jun 14 12:34:10 2015 UTC,"Yes, it will be feasible on Linux at least.  But it will be still a long way to the existence of a healthy ecosystem."
swift,39st3t,heisenbug,8,Sun Jun 14 12:40:53 2015 UTC,"I talked to a few Swift evangelists at WWDC, they said they're interested in porting over some of the Foundation standard library to Swift for the open source release.  Still, it's gonna be a long time before we see things like HTTP servers, routing libraries, database connections, etc in Swift.  Though the C interop will help with that!"
swift,39st3t,lyinsteve,6,Sun Jun 14 12:51:54 2015 UTC,"I'm not so sure about that, never underestimate the craftiness of cocoa developers. I think many of us would create open source libraries for these things.   Foundation would be awesome though, imagine we could use the same models on the server on Linux and on iOS!"
swift,39st3t,_cortex,5,Sun Jun 14 13:22:40 2015 UTC,Isn't that what GNUstep has already done?
swift,39st3t,shiggie,2,Sun Jun 14 14:33:09 2015 UTC,Yes it is.  GNUstep may be a few API revisions behind in Apple terms (feels like iOS 2.0) but it is nonetheless a mature implementation that is already useful for porting applications to Linux (I have done this).  I expect GNUstep to start receiving a lot more attention soon.
swift,39st3t,Darkmoon_UK,4,Mon Jun 15 12:46:02 2015 UTC,"There are already a few http servers, cli libraries, etc written in Swift - even before Swift 2 was announced. These will only improve with the impending linux release."
swift,39st3t,nickoneill,1 point,Sun Jun 14 15:52:19 2015 UTC,"Oh, wow! Those look great -- but they rely on Foundation. They'll probably immediately start porting once Swift is OSS.  This is exciting!"
swift,39st3t,lyinsteve,3,Sun Jun 14 17:52:30 2015 UTC,"CommandLine doesn't require Foundation at all; it only imports Darwin to get at setlocale(3) and localeconv(3), and the locale-aware float parsing is just a fun feature I decided to try to see if I could make it work. It's certainly not necessary for the library to be useful.  Even though Apple is working to make the Swift-ObjC impedance mismatch as low as possible with Cocoa/UIKit/Foundation, it's still there — the Swift stdlib API feels a lot different than using NSString/NSArray/NSDictionary, for example. I think the most interesting (and ambitious!) thing about Swift is the fact that Apple positioned it as a viable systems programming language, not just a better way to write Cocoa apps, so I'm looking forward to more native libraries & tools."
swift,39st3t,jatoben,3,Sun Jun 14 19:56:18 2015 UTC,"An Open Source implementation of Foundation already exists.  Check out: https://github.com/gnustep/base/tree/master/Headers/Foundation  Hopefully GNUstep, or a new fork, will be the subject of a grand community effort in coming months.  Yes, this is exciting :-)"
swift,39st3t,Darkmoon_UK,1 point,Mon Jun 15 13:00:54 2015 UTC,"Careful with the distinction between Foundation and 'standard' libraries.  Maybe you heard differently being there, but from the WWDC literature I read, there was only mention of the Swift 'standard' library, which is specific to the language and distinct from Foundation.  I'd be very surprised (although delighted) if Apple provided an Open Source port of Foundation.  I expect that will be up to the community, using GNUstep as a starting point."
swift,39st3t,Darkmoon_UK,1 point,Mon Jun 15 13:32:49 2015 UTC,Much of CoreFoundation has been open source for years. A lot of Foundation is just an ObjC wrapper around CF.
swift,39st3t,_IPA_,2,Tue Jun 16 01:14:47 2015 UTC,"I'm very optimistic that Swift will become well used outside of the Apple Universe:  arguably, there is already a gap in the Linux Development landscape waiting to be filled by Swift: that of a fully 'modern', natively compiled language that has a huge developer community (and isn't C++).  In addition, the parts that Apple do not intend porting i.e. Foundation, CoreFoundation, CoreGraphics can be found already in the form of the GNUstep project.  Combining these is likely to be an exercise for the community, but I have no doubt that the necessary will and talent will come to bear."
swift,39st3t,Darkmoon_UK,2,Mon Jun 15 13:12:12 2015 UTC,"Really what we'll need is Swift wrappers around GTK and Qt for ""apps"" to be developed for Linux."
swift,39st3t,_IPA_,2,Tue Jun 16 01:16:44 2015 UTC,"To get an idea of the future of Swift on other platforms, and the time and effort that may be involved, compare with Lazarus, which was developed to be an Open Source clone of Delphi, and designed to run on many different OS.  The project in it's earliest form started in 1998.It was not until the late 2000's that it was reasonably workable on linux, windows and mac.  See About Lazarus and History of Lazarus."
swift,39st3t,vinags,4,Sun Jun 14 13:29:36 2015 UTC,Porting an existing codebase to a new platform is entirely different to reimplementing it from scratch.  Lazarus is not relevant here.
swift,39st3t,JimDabell,1 point,Sun Jun 14 17:47:05 2015 UTC,"I disagree (with your second statement). Analogies are not always  one-to-one. I am giving the OP an idea that the use of open source Swift will not be overnight, and it is not an easy task."
swift,39st3t,vinags,2,Sun Jun 14 22:22:40 2015 UTC,"Not easy, but perhaps made easier by the good work already done by the GNUstep project.  See: https://github.com/gnustep/base/tree/master/Headers/Foundation"
swift,39st3t,Darkmoon_UK,1 point,Mon Jun 15 13:04:06 2015 UTC,"Oh god, so many of my colleagues that had a course which they used Lazarus hate it so much.  They also needed to learn Delphi for no good reason..."
swift,39st3t,NEDM64,2,Tue Jun 16 13:08:46 2015 UTC,Swift already works outside of the Apple universe though: http://www.elementscompiler.com/elements/silver/default.aspx
swift,39st3t,ckok,1 point,Sun Jun 14 19:38:45 2015 UTC,Does this mean that now we don't have to use Xcode anymore? a different IDE can now be used? Or is this something else?
swift,39st3t,Redrogae,2,Sun Jun 14 23:01:50 2015 UTC,"You already didn't have to use Xcode in general; you could (and people do) use vim + swiftc, or whatever. Swift being open source doesn't change anything related to that, aside from maybe encouraging the creation of third party tooling around swiftc and friends."
swift,39ukm0,abxyz123,1 point,Sun Jun 14 22:23:52 2015 UTC,"You'll need to give the segue an identifier, and then in your view controller,   override func shouldPerformSegue(segue: UIStoryboardSegue) -> Bool {    if segue.identifier == ""YourIdentifier"" && yourConditionHere {       return false    }    return true }"
swift,39tvlp,MusclesBrah24,2,Sun Jun 14 18:53:27 2015 UTC,"Search for ""contains"" in this SpriteKit tutorial I wrote to see how it's done. Alternatively, loop through your array and check the names of the elements that are in there."
swift,39tvlp,twostraws,1 point,Sun Jun 14 19:33:24 2015 UTC,"Ha ok, I'll give it a shot"
swift,39t2rv,Soer9606,6,Sun Jun 14 14:32:05 2015 UTC,"Looks like you're on Swift 1.2, rather than Swift 2. You can get the beta here. Swift 1.2 changed Strings to Ints with .toInt(), I think, like this:  ""1"".toInt() // 1?   Swift 2 changed some of those conversion methods to functions, but they work the same other than that. This works fine for me (I'm on Swift 2) at any rate:  var possibleNumber = ""1"" var convertedNumber = Int(possibleNumber)"
swift,39t2rv,foBrowsing,1 point,Sun Jun 14 15:08:09 2015 UTC,I am on Swift 1.2! Thank you very much
swift,39t2rv,ihatetoregister,1 point,Sun Jun 14 15:43:03 2015 UTC,Is possibleNumber supposed to be a string? because it seems that Int() don't accept String as an argument.  Try possibleNumber.toInt() instead.
swift,39tnve,Dextes,3,Sun Jun 14 17:48:24 2015 UTC,"First things first, I would look into the difference between a UIView and a UIViewController. In this case I'd suggest using a UIView. I use these extension functions for UIView that might help you out:  func animate_to_point(origin: CGPoint, completion: ((Bool) -> Void)?)     {             UIView.animateWithDuration(animation_duration, delay: 0, usingSpringWithDamping: 0.8, initialSpringVelocity: 0.8, options: UIViewAnimationOptions.CurveEaseInOut, animations:             {                     self.frame.origin = origin             }, completion: completion)     }      func animate_ease_in(animation: () -> Void)     {             UIView.animateWithDuration(animation_duration, delay: 0, options: UIViewAnimationOptions.CurveEaseIn, animations: animation, completion: nil)     }   func animate_scale_spring(scale: CGFloat, completion: ((Bool) -> Void)?)     {             self.layer.anchorPoint = CGPoint(x: 0.5, y: 0.5)             UIView.animateWithDuration(animation_duration, delay: 0, usingSpringWithDamping: 0.8, initialSpringVelocity: 0.8, options: UIViewAnimationOptions.CurveEaseInOut, animations:                     {                             self.scale(scale)                     }, completion: completion)     }"
swift,39tnve,WoolyEnt,1 point,Sun Jun 14 20:42:01 2015 UTC,Thanks a lot! That is really helpful!
swift,39s9hg,MusclesBrah24,1 point,Sun Jun 14 06:57:39 2015 UTC,"Perfect, got everything positioned. Thanks a bunch"
swift,39rdw1,freeys,9,Sun Jun 14 00:37:32 2015 UTC,"It will probably just crash altogether, don't even get as far as a dissolving layout."
swift,39rdw1,Scott90,6,Sun Jun 14 00:52:23 2015 UTC,"Xcode will prevent you from adding a UIStackView in IB, and likely in Swift, it won't compile. You might be able to add one programmatically in ObjC, but it either won't link or will crash as soon as you try and instantiate the class."
swift,39rdw1,20InMyHead,1 point,Sun Jun 14 03:44:31 2015 UTC,This.
swift,39rdw1,AssBoon92,3,Sun Jun 14 13:43:30 2015 UTC,"It will not find the class, a similar example would be UICollectionView which did not work on iOS 5."
swift,39rdw1,ivanbruel,1 point,Sun Jun 14 01:00:30 2015 UTC,"You won't be able to download it on the AppStore, and it likely will heavily warn you while setting the deployment target lower than 9.0"
swift,39s78q,senatorkang,3,Sun Jun 14 06:21:01 2015 UTC,https://github.com/jdg/MBProgressHUD
swift,39s78q,74TA8U,1 point,Sun Jun 14 08:55:37 2015 UTC,"Yes, thank you! I knew it would be there somewhere, just didn't know what it would be called.   Thanks!"
swift,39ra8n,Adamw88,3,Sun Jun 14 00:00:15 2015 UTC,"From what I understand (also new to iOS development), you will essentially be re-building the UI in a Storyboard.  This involves dragging in a UIImage for the icon, UITextField for the inputs, and a UIButton for the log in button. Then set all of your constraints and adjust the styling."
swift,39ra8n,Powerdrift,1 point,Sun Jun 14 00:18:08 2015 UTC,"Ah okay, so Sketch is just an easy and handy way to make nice images to bring into XCode to recreate your GUI mock up.   Thanks! I wasn't really sure what was so great about Sketch if you had to rebuild everything from the ground up when you went to XCode anyway."
swift,39ra8n,Powerdrift,1 point,Sun Jun 14 00:26:30 2015 UTC,"Yup, Sketch is basically good (great!) for two things:   Create a mock-up/spec of how you want your UI to look like. Create images used in your UI.   It's kind of like designing a website with Sketch: you create what it will look like but you will only actually use a few image elements from the Sketch file."
swift,39ra8n,Pango56,3,Sun Jun 14 01:07:24 2015 UTC,"A program like Sketch is great for what it's made for: Prototyping. What you have to do now is essentially rebuild that screenshot piece by piece until it looks like your prototype. I would suggest pulling out assets for each component of your login screen as images and going from there. So from the looks of it you probably want images for the mail and the key. The rest can be drawn on directly with UIViews, UIButtons, UILabel, and UITextfields. Once you have all the UI laid out to look identical to your prototype, start implementing the functionality (preferably in a separate class as the class you use to lay out the UI if you do decide to lay out your UI in code) such as changing the colour of the button, highlighting the icons, etc."
swift,39ra8n,WoolyEnt,1 point,Sun Jun 14 03:26:08 2015 UTC,"Great, thanks for the reply!! It's helpful in figuring this all out."
swift,39ra8n,fluchtpunkt,1 point,Sun Jun 14 05:04:17 2015 UTC,Thanks for the tips! I'm following several tutorials now and reading the Swift book from Apple; can't wait to dive into this stuff
swift,39ra8n,WoolyEnt,-4,Sun Jun 14 16:06:52 2015 UTC,"Powerdrift is correct, but you really should avoid using Storyboard. It will hinder your understanding of view layouts, and once you reach a point of implementation on an actual project it will limit what you can (in practice) do. Form good habits early, and good luck!"
swift,39o16p,SingleMonad,18,Sat Jun 13 03:27:34 2015 UTC,"For me, organising types by protocol, rather than class inheritance, etc., makes more sense. (It's also got some big benefits for performance) When you organise things by protocol, you organise them by what they're able to do, not what they are. And protocol extensions lets you do this in a way you couldn't before.  Lemme give you an example. Class inheritance allows for only very strict inheritance. But sometimes that doesn't make sense. Take the protocol Printable, for example. A whole load of types should have a printable representation, from Ints to Arrays. But, making them all inherit from one overarching class Printable is crazy: the overarching Printable class would have a default print() function, and all of the subclasses/types would override it. So now you have some ugly default function in some superclass that's not really a superclass. Say you want some other kinds of subclasses: like a CollectionType class, or whatever. Is CollectionType going to inherit form Printable? There's two problems there: CollectionType seems above Printable on the heirarchy, rather than below, and now I have to go writing functions in each of my subclasses. But what if some types can't print? Are they not a member of CollectionType anymore? That makes even less sense! No, ok, you make each individual type Printable. Some repetition, fine, but it works. Ugly default print() function, fine, but it works. So now Array is printable. Well, unless it doesn't contain Printable Elements. Right. Effectively, what you want is a way to write a single print() function, that takes anything that's Printable. And you don't want everything to inherit from some great Printable class.  The solution to this was first proposed in Haskell (I think), and it was called ""Type Classes"". (nothing to do with classes in OOP, more like Protocols in Swift). Type classes were a new way of organising types by what they can do. OOP, a little later, brought about a slightly different solution, in the form of generics.  (if you're interested this lecture by Simon Peyton-Jones, who wrote the GHC compiler for Haskell is fantastic, and talks about all of this stuff)  Once type classes, generics, etc., began to get popular, classes became less so. I've seen several different talks in the past few years calling for people to reduce their use of classes in OOP (like this one).  In particular, in C++, Templates became very important. Templates are, again, similar to Protocols. They allowed you to write structs that could have huge capabilities, but none of the overhead of classes. Any extra methods or properties that weren't used often could be sloughed off at compile time. This is right in step with that C++ core philosophy of ""it's there if you need it, if you don't need it, it won't slow you down."" One of the main writers of the template system in C++ was a guy called Dave Abrahams. Dave Abrahams started working for Apple in 2013, on Swift.  Here's his (fantastically nerdy) talk at WWDC.  So great, but what about Protocol extensions? Why should you care? Well, I think it's a huge deal. There are two separate important things about it, actually. Let's go back to Printable. Old protocols allow you to selectively allow different types to be printable. So my Printable Protocol might look something like this:  protocol Printable {   var printValue: String { get } }   So now, wherever I want to make a Printable struct, I just have to make sure it's got some variable called printValue in there, and I'm good.  Maybe later, though, I want to do something with the printValue. Maybe I want to be able to read it aloud, with Siri, or whatever. Swift 1 protocols, that would look like this:  protocol Sayable {   var sayValue: AudioFile { get } }   And then, I go through every single instance of a printable struct, and add this little variable. Protocol extensions, though, I have to do this:  protocol Printable {   var printValue: String { get } } protocol Sayable {   var sayValue: AudioFile { get } } extension Printable: Sayable {   var sayValue: AudioFile { return audioFrom(self.printValue) } }   once. Now, every single printable thing can do this. With no overhead. I'm getting inheritance, without classes, and without code repetition. And it makes logical sense: everything that is printable is sayable. Practical example? Of course:  extension CollectionType {   func indexOf (predicate: Generator.Element -> Bool) -> Index? {     for i in self.indices {       if predicate(self[i]) {         return i       }     }     return nil   } }   That's the standard library indexOf.  But there's one more thing: conformance. Not only can you write a function that acts on all instances of a protocol, you can write a function that acts on certain instances of a protocol.  extension CollectionType where Generator.Element: Equatable {   func indexOf (element: Generator.Element) -> Index? {     for i in self.indices {       if self[i] == element {         return i       }     }     return nil   } }  [1, 2, 3, 4].indexOf(3) // 2   There. That one function now acts on every single collection type that has equatable elements. You only have to implement it once. And there's no overhead. I think it's pretty awesome."
swift,39o16p,foBrowsing,4,Sat Jun 13 12:25:19 2015 UTC,"I'm not sure I understand what you mean.  What I meant to say - and maybe there's a mistake - is that everything that is printable is also sayable, because you have some way to get from a printValue to a sayValue.  I didn't define sayValue in Printable, though. I defined the protocol Printable in the first three lines:  protocol Printable {   var printValue: String { get } }   So, everything that wants to conform to Printable needs to have a printValue that's a String. Then, I defined Sayable, which is unrelated to Printable, at first:  protocol Sayable {   var sayValue: AudioFile { get } }   It just means that if anything wants to be sayable, it's got to have a property called sayValue that is of type AudioFile. The third part wasn't a new definition. I was just saying ""hey, I know how to turn a String into an AudioFile, so therefore I can make everything that's printable sayable"". And, instead of going through every instance of a printable type, I can just extend the protocol.  extension Printable: Sayable {   var sayValue: AudioFile { return audioFrom(self.printValue) } }"
swift,39o16p,foBrowsing,1 point,Sat Jun 13 18:28:31 2015 UTC,"Thanks, very helpful!"
swift,39o16p,iluuu,2,Sat Jun 13 18:39:19 2015 UTC,"You can think of them as traits in other languages.  When extending a protocol you're providing a common implementation for every type that conforms to that protocol.   For example, every CollectionType can be sorted, mapped, reversed, and every implementation for every type would look exactly the same. Previously, you were stuck to creating a function like sort that takes a variable type T that conforms to CollectionType (if you don't know what that means, you should look into generics) or you'd have to implement the sort method in every single type. Granted, you could do both and then just call the function from the method which would remove a lot of redundancy but that's still a lot of boilerplate code.   So, a generic sort function:  func sort<T: CollectionType>(collection: T) { ... }   or create a method on every type  struct Array<T> {     func sort(collection: T) { ... } } struct Set<T> {     func sort(collection: T) { ... } } ...   Why is this bad? Well the second one is obvious, redundancy. With the first one you just lose a whole lot of syntactic sugar:  sort(map(collection) { $0.property }) { $0.property2 < $1.property2 }   instead of  collection.map { $0.property }.sort { $0.property2 < $1.property2 }   Now, you can just extend the CollectionType with the sort method and you'll get it on all types for free.  I hope that helps."
swift,39o16p,twostraws,1 point,Sun Jun 14 23:07:31 2015 UTC,"Thank you, much appreciated!"
swift,39o16p,FutureIsMine,2,Sat Jun 13 09:34:44 2015 UTC,"The immediate difference it makes to all of us is that global functions like count() and find() are replaced with methods like indexOf() – so much more discoverable, and more natural reading too."
swift,39nciw,twostraws,5,Fri Jun 12 23:46:31 2015 UTC,Swift is shaping up to a really nice language. They have taken care of most of the major issues I have experienced using Swift now.  I suspect Swift 3.0 will introduce some method of dealing with concurrency which mix and match well with grand central dispatch.
swift,39nciw,lusion,1 point,Sat Jun 13 20:24:03 2015 UTC,Hopefully we can see that in a point release of 2. I'd like to see something like C#'s await
swift,39nciw,audiblefart,2,Sun Jun 14 00:23:51 2015 UTC,"Very well written and informative, thanks!"
swift,39nciw,_cortex,2,Sat Jun 13 09:31:20 2015 UTC,"Thank you – I'm glad it's useful! In case you're interested, I already wrote two tutorials about new iOS 9 technologies: UIStackView and iPad multitasking tutorial and Core Spotlight and SFSafariViewController tutorial. Have fun!"
swift,39nciw,Jeff_Johnson,2,Sat Jun 13 10:06:51 2015 UTC,"Idea for defer is nice, but I (my opinion) don't like the syntax. Maybe something like this will be better:  func abc() {  } defer {   // finally code }  With current syntax, I am still not sure can I have several defer blocks in function, and if I can - which one will be executed first. Also with my alternative syntax it will be easier to locate defer portion of func. This are only my ideas and opinions."
swift,39nciw,Hawk_Irontusk,5,Sat Jun 13 11:56:17 2015 UTC,"This is made clear in the documentation. You can have multiple defer blocks and they will execute in reverse order. The first defer block is executed last.  To make the power of multiple defer blocks more clear, only those defer statements that have been seen will run when execution exits your block.  So something like:  func testDefer(x: Bool) {     guard x else { return }     defer { print(""True"") } }   Will only print 'True' when the argument was true. That would be harder to do with your proposed syntax. Imagine only opening file handles under certain conditions and using defer to make sure the file is closed when you exit. That's easy with the current syntax, but harder if there's only one defer block."
swift,39nciw,Hawk_Irontusk,4,Sat Jun 13 13:38:46 2015 UTC,"As Hawk_Irontusk said, this is made clear in the documentation – and in the article I wrote. So, I think it's fairly agreed upon :)  With the Apple syntax, you can also place defers wherever you want and they will trigger when exiting the scope – loops, etc, are viable places."
swift,39nciw,Jeff_Johnson,2,Sat Jun 13 14:29:13 2015 UTC,"I wish you could force defer to trigger when exiting a higher scope. For example, if you place a defer inside a for loop, it will trigger at the end of the current iteration, which might not be the expected result.  Also, the following was surprising to me. I had assumed that the defer block was a closure, but it looks like it's not.  var x = [Int]() func testDefer() {     var i = 0     defer { let a = i; x.append(a) }     defer { let a = i++; x.append(a) }     i++     defer { let a = i++; x.append(a) } } testDefer() // a = [1,2,3]"
swift,39nciw,Hawk_Irontusk,2,Sat Jun 13 15:03:41 2015 UTC,"If you're looking for different behaviour, why not file a radar with Apple? At WWDC they said repeatedly they are looking for input. Worth a shot!"
swift,39n3am,Newbbi86,6,Fri Jun 12 22:33:00 2015 UTC,"The new OS will likely require 2GB as Yosemite currently does. Source: https://www.apple.com/osx/how-to-upgrade/   While an early 09' Mini will likely meet the system requirements for El Capitan, you'd have to upgrade it to 2GB+. If the purpose of this machine is solely for development, then I'd recommend 4GB. However, I would not recommend an 09' mini either way. Core 2 Duo computers are still quite usable with developing in Swift, but only with the right upgrades and system tweaking. That machine is 6 years old now.  If you take your time with shopping on eBay, you could acquire a 2013 MacBook Air 13"" for ~$600 in good condition and that'll have a fast SSD, 4GB of RAM, good graphics and a much better processor as opposed to an 09 Mac mini. This also has the added benefit of a backlit keyboard, display, mobility etc. Hooking it up to one of your monitors is also easy.  If your goal is to spend the least amount of money as possible, you could get an 09 Mini on eBay for $250 with 4GB of RAM. I would then recommend purchasing a 120GB SATA 2 SSD which shouldn't be very expensive ($60-80?). This would make for a decent dev machine.  For full disclosure, I have bought and sold Apple computers on Craigslist and eBay for 5-6 years and have used them for a bit longer. I currently use the base 13"" MacBook Pro retina from late 2012, but I am expecting a 15"" MacBook Pro retina 2012 that I got on eBay for $900 in excellent condition to come in soon. I have been using Xcode for a few years and have made a few games.  I hope this helps. Best of luck getting into Swift!"
swift,39n3am,programming-newbie,6,Fri Jun 12 23:07:35 2015 UTC,Another thing to keep your eye on is Apple's Refurbished Store. Sometimes you can find a good deal on slightly older Macs that still come with a full warranty.
swift,39n3am,ACanadIanGamer,3,Fri Jun 12 23:19:58 2015 UTC,"You're absolutely right there.   I usually recommend the refurbished store to most people; my family has bought a few computers from there over the years with no problems as the warranty is the same and the condition is like new.  If the poster responds with a budget in mind, then it'd be easier to assist in finding the most value for their dollars."
swift,39n3am,programming-newbie,1 point,Fri Jun 12 23:28:21 2015 UTC,"Wow, thanks so much. That answered everything, plus some. I would give you reddit gold if the situation with the CEO wasn't occurring. I was pretty hesitant about 1Gb working - thanks for verifying. I'll keep you in mind when I save up $600 - you'd be surprised how quickly an ER visit and 30 min surgery for a strangled hernia can add up, haha. Your eBay name same as reddit?  Maybe I'll develop an app that controls an iPad hooked to robot arm blades, so your friends can operate on you while an instructional YouTube video shows them how to do it. Better hit up kickstarter."
swift,39n3am,spinwizard69,2,Fri Jun 12 23:33:25 2015 UTC,"Wow, thanks so much. That answered everything, plus some. I would give you reddit gold if the situation with the CEO wasn't occurring. I was pretty hesitant about 1Gb working - thanks for verifying.    This is a slightly different perspective but considering a long running experience with a 2008 MBP I wouldn't suggest anything less than a 4 GB machine and that would be a minimal machine.  With some of the new features in Swift a quad core machine is highly recommended.   This especially if you expect to run other apps at the same time.  Other apps could be Dash, Safari or whatever but it is easy to have to many active processes on an old machine especially if it has less than 4GB of RAM.    Also don't dismiss an iMac because you have hardware already or for that matter laptops.    You should look for what meets your needs.      I'll keep you in mind when I save up $600 - you'd be surprised how quickly an ER visit and 30 min surgery for a strangled hernia can add up, haha. Your eBay name same as reddit?"
swift,39n3am,spinwizard69,1 point,Sat Jun 13 01:28:14 2015 UTC,"Thanks. I am open to any of their product lines. I just assumed I would get the most bang for my buck with the mini, since it doesn't include external output and input devices - just a sweet little box.   I'm glad I checked with you guys. I was really hesitant about just 1Gb in memory. I didn't have any reference, besides my windows comps having 4Gb+ , but I assumed windows needs more memory, like android phones, due to lower efficiency in memory management ... or so I've heard."
swift,39n3am,programming-newbie,1 point,Sat Jun 13 03:19:59 2015 UTC,"Thanks. I am open to any of their product lines. I just assumed I would get the most bang for my buck with the mini, since it doesn't include external output and input devices - just a sweet little box.    The Mini can be a bargain but if you get an iMac with a high resolution screen (retina) you will never look back for coding.  Same thing for retina on a laptop, the screens make an amazing difference if you spend a lot of time coding at the machine.    From my perspective the Mini isn't bad if you get at least a quad core and one with lots of RAM.   Quad core however means a used Mini as Apple dropped quad cores in this years Mini.     I'm glad I checked with you guys. I was really hesitant about just 1Gb in memory. I didn't have any reference, besides my windows comps having 4Gb+ , but I assumed windows needs more memory, like android phones, due to lower efficiency in memory management ... or so I've heard.    Well all I can say is don't believe the BS about the need for RAM in Apples devices.  It is simply people making up excuses for Apple stingy configurations.    RAM is used in the same way on both platforms, the more apps you try to run the more RAM you will need.   I can say without reservation that 2GB isn't enough and frankly I'd go for more that 4 GB.  If you buy used make sure the RAM is upgradable.  You can get by with 4 GB but you might have a computer that will need to replaced in a year or two.     As far as memory management goes don't be fooled into thinking that Apple does an excellent job here.   Some of their releases have had notable bugs and performance issues around memory management.    Recent releases of iOS and Mac OS are better though."
swift,39n3am,tau-lepton,1 point,Sat Jun 13 19:38:29 2015 UTC,"No worries! I love to converse about computers.   I actually only buy from eBay and sell on Craigslist. Otherwise, the margins can be quite thin and I've had the most luck with this flow. I should also clarify from my original post that while I have a business, buying and selling computers is not my main focus. Mostly a summer pastime.  That sounds like an excellent app idea ;) at the very least, you'll acquire some great experience!"
swift,39n3am,Powerdrift,2,Fri Jun 12 23:43:40 2015 UTC,"Sounds like a fun side business. I really enjoy talking comps too. In fact, I was really gunning for HP's ""the machine,"" telling everyone about its potential, but it appears they were just blowing air, without a tested working model, since the release keeps getting pushed back. Ah well. Thanks again for the info."
swift,39n3am,tau-lepton,3,Fri Jun 12 23:52:27 2015 UTC,"Get at least 8GB for development, check out campus surplus stores for good deals."
swift,39n3am,iDinduMuffin,1 point,Sat Jun 13 01:00:07 2015 UTC,"I'm using a 2010 Mac Pro w/ 6GB memory. It runs Xcode pretty nicely. Every now and then it will hang for about 5 seconds, but I think that might be a result of the HDDs spinning up for swap disk access.  I've read multiple places that using Xcode required lots of RAM. I believe it's true."
swift,39n3am,klngarthur,1 point,Sat Jun 13 01:15:17 2015 UTC,"I'm on a late 2010 MacBook (last white one) with 8GB, it's definitely usable, but I wouldn't want much less memory.  My work MacBook is last year's 15 inch with 16GB, it's so quick that it almost never gets in my way."
swift,39n3am,20InMyHead,3,Sat Jun 13 04:28:09 2015 UTC,/r/hackintosh ?
swift,39n3am,klngarthur,0,Sat Jun 13 13:39:36 2015 UTC,"This is definitely the best option if your limiting factor is money, not time.  You will get way more bang for your buck."
swift,39n3am,20InMyHead,2,Sat Jun 13 18:32:35 2015 UTC,"I just got home from WWDC, and you're right, Swift 2.0 is a big improvement and looks great. Yosemite will be fine for running Xcode, but development is a lot more resource intensive than most computer usage. Also keep in mind, Xcode 7 is still in beta, and won't be tuned for final performance for a while yet. Minimum specs will leave you pretty unhappy. Try to get a Mac with as much RAM and as advanced CPU as you can afford. 1GB RAM is not really enough. I would expect 4GB is the minimum, 8 would be better. If you can't afford a Mac right now, work hard and save your money. Waiting a couple of months to save for a better Mac will go by quickly, and will pay off in the end. Good luck."
swift,39n3am,chicagobob,1 point,Sat Jun 13 05:50:56 2015 UTC,"I'm not sure Yosemite will be fine.  Xcode 6.3 already dropped support for Mavericks, for example."
swift,39n3am,niutech,1 point,Sat Jun 13 18:35:28 2015 UTC,"I'm running it on Yosemite now, and Xcode 7 will be released before El Capitan, so it will certainly run on Yosemite at first. Sure, they might drop support in a future point release but that will be a while out."
swift,39n3am,dcoupl,1 point,Sat Jun 13 18:53:51 2015 UTC,"Also don't forget to look at Apple's refurbished hardware.    My 2 cents: I recommend you look at a 13"" MacBook Air, it might not be the absolute cheapest option available, but it will probably give you the best bang for your buck.  One last point ... no matter what machine you buy, you absolutely should look for one with an SSD.  Good Luck."
swift,39n3am,Sebaall,1 point,Sat Jun 13 18:36:19 2015 UTC,"You don't need to buy a Mac. Just run OS X 10.10 in a VM, Xcode 7 beta works fine."
swift,39mufh,Airglow26,6,Fri Jun 12 21:26:45 2015 UTC,"Parsing a remote website's HTML is risky due to most modern websites contents being dynamically generated. That means that the DOM might change from day to day and if you're not careful you're deserializer might fail or even cause your app to crash.  A better approach in my opinion would be to keep the HTML data mining on a separate server instance that the Swift client could make simple HTTP requests to. By doing that you can quickly make changes, add (edit and delete ) more sites to crawl data from without having to make an update in the iTunes App Store.  Edit: This merged pull request #57 makes it possible to use said library with cocoapods in swift projects. I still stand by my previous answer though."
swift,39mufh,andyscorner,3,Fri Jun 12 22:41:33 2015 UTC,May I recommend my library? It's mostly inspired by TFHpple but I've started to re-write the entire lib from scratch to use Swift 2.0 features (much love for guard and throws!).
swift,39mufh,ehochx,2,Sat Jun 13 00:39:31 2015 UTC,"I used HTMLReader.  It's an Obj-C framework, but it works well.  This page describes how to integrate Obj-C with Swift projects.  The advantage of using Obj-C is you won't have breaking issue with new Swift versions, as in this thread"
swift,39nt39,JailbreakThatShet,2,Sat Jun 13 02:10:30 2015 UTC,"My guess is the custom font wasn't properly registered with the system. I tested the code and it works for me with a built in font.  That aside, I would recommend a few changes to your code:  — You need to call super.viewWillAppear(animated)  — Are you ""undoing"" your nav bar changes on viewWillDisappear? Or do you want these changes to apply to the whole app? If you want it to apply to the whole app, your approach is definitely not what you want to do.  — Instead of modifying the nav?.topItem?.title, you should be modifying the navigationItem.title instead  Let me know if you have other questions!"
swift,39nt39,cbkeur,1 point,Sat Jun 13 04:31:50 2015 UTC,Thanks!!! I do want the Nav bar to have the have that font through the entire app.
swift,39nt39,cbkeur,2,Sat Jun 13 04:36:04 2015 UTC,"First, let's tackle the ""throughout the app"" part. The best way to do this is to use the appearance proxy. This would be best placed within the AppDelegate.swift file. Here is a gist with code. Note that I tested this with a built in font, and if you run that code, you'll see the large text properly.  Then, I'd update your ViewController2.swift to set the navigationItem. Here is a gist that shows you the best way to do this when using a storyboard  Try it out!"
swift,39msxm,Powerdrift,2,Fri Jun 12 21:15:49 2015 UTC,What kind of user control you looking for? User permissions should be a backend thing as your client should be pretty much dumb I'm this regards
swift,39msxm,asniper,1 point,Sat Jun 13 00:02:10 2015 UTC,"I will be able to block actions on the server based on the user's role, but I would like to hide parts of the UI if the user is unable to complete the action.  For example, I wouldn't want to show an edit button for an object if the user doesn't have permission to edit it.  In Ruby, I would be able to do something along the lines of:  if user.can?(:edit, Post)   I could of course complete a check for the user's role. E.g. if the user does not have the role ""moderator"", don't show the edit button. But this leads to imperative checking littered throughout the codebase:  if user.role.name == :moderator   In the former example, access definitions have been extracted from the UI code.  Does that make sense?"
swift,39msxm,asniper,1 point,Sat Jun 13 00:46:33 2015 UTC,"Make sense,   I don't thinks there's really a way to avoid all the role checks client side that I know of. It's ugly but not so bad if done cleanly."
swift,39nf01,EnjoysTurtles,1 point,Sat Jun 13 00:06:48 2015 UTC,"When are you running the code? If it is in application didFinishLaunchWithOptions, then the frontViewController may not be loaded yet (from a storyboard, for example). You may want to delay the execution of this code with a dispatch_after, or you may hook the code into a rootviewcontroller / UIViewController subclass's viewDidLoad or viewWillAppear, really depending on your use case."
swift,39mlz5,drgreenair,4,Fri Jun 12 20:25:59 2015 UTC,"You may be confusing something, you don't pass Classes around. Classes are just blueprints for creating Objects. Objects are the things you pass around.  You have to create a variable in your destination ViewController for the thing you want to pass on to it. Like so:  var personInNewVC: Person   then in your prepareForSegue Method:  segue.destinationViewController.personInNewVC = yourperson"
swift,39mlz5,Dierdr4,1 point,Fri Jun 12 20:58:47 2015 UTC,"Remember a view controller is just a class and classes can have properties.  So make a property on the view controller that you are segueing to and let the property's data type be of type Person.  //view controller that will be receiving the Person instance class CustomerDetailViewController : ViewController {     var Customer : Person }  //view controller that will be passing the person instance class CustomerListViewController : ViewController {     private var _customer : Person      func prepareForSegue(segue: UIStoryboardSegue!, sender: AnyObject!) {          if (segue.identifier == ""CustomerListToCustomerDetailSegue"") {              let detailVC = segue.destinationViewController as CustomerDetailViewController              detailVC.Customer = _customer          }     } }"
swift,39mlz5,shooky1,0,Fri Jun 12 21:07:58 2015 UTC,"Typically, you have a string you want to pass to the next view controller.   If that variable is dataPassed, then the second view controller must have it defined as a string. If it's an entire class then define it as your custom class   Class secondViewController {     var dataPassed: String!'     var classPassed: CustomClassName!; }"
swift,39m07e,ketoghost,1 point,Fri Jun 12 17:56:11 2015 UTC,"Uhm, which text do you mean? you dont set any text or am I missing something?"
swift,39m07e,YouHawk,1 point,Fri Jun 12 18:22:20 2015 UTC,"I have a tableview landing screen with a plus button. The user clicks it and is presented with a textfield to populate with a name. the user then clicks ""save"" this dismisses the view and goes back to the tableview. The new name should be here but it isn't."
swift,39m07e,Themako1,1 point,Fri Jun 12 18:27:44 2015 UTC,You are going to have to post what's in your second vc. Do you have a property setup right adding it to the array?
swift,39m07e,Themako1,1 point,Fri Jun 12 18:28:51 2015 UTC,Try adding reloadtavleview method to the viewdidappear function. Your probably not reloading the table when your switching back to the mainVC
swift,39m07e,YouHawk,1 point,Fri Jun 12 18:30:00 2015 UTC,"If you want to pass a text to the second vc, you need to set that text in your prepareForSegue like this  nextViewController.textfield = mytextfield   Your nextViewController must have textfield as a class variable"
swift,39m07e,YouHawk,1 point,Fri Jun 12 19:54:10 2015 UTC,"This is what the NewSoundViewController looks like:  import UIKit  class NewSoundViewController : UIViewController {  @IBOutlet weak var soundTextField: UITextField!  var previousViewController = SoundListViewController()    override func viewDidLoad() {     super.viewDidLoad()     // ikuzo! }  @IBAction func cancelTapped(sender: AnyObject) {     self.dismissViewControllerAnimated(true, completion: nil) }  @IBAction func saveTapped(sender: AnyObject) {     // Create a sound Object     var sound = Sound()     sound.name = self.soundTextField.text      // Add sound to sounds array     self.previousViewController.sounds.append(sound)      // Dismiss this ViewController     self.dismissViewControllerAnimated(true, completion: nil)  }   }"
swift,39m07e,fluchtpunkt,2,Fri Jun 12 21:10:32 2015 UTC,so - do you have a problem passing data to the second vc or back to the first vc? why is this   class SoundListViewController: UIViewController    not a UITableViewController?
swift,39kyf0,Gavin04,3,Fri Jun 12 13:28:35 2015 UTC,Use a timer with a 1 second interval. You don't need a loop. http://stackoverflow.com/questions/29374553/how-to-make-a-countdown-with-nstimer-on-swift
swift,39kyf0,driftme,1 point,Fri Jun 12 14:52:49 2015 UTC,Thanks I'll take a look at it
swift,39kyf0,kielrene,2,Fri Jun 12 15:04:55 2015 UTC,Pausing a loop is a rather strange idea. You may want to elaborate what you're exactly trying to achieve. There's probably a better way than pausing.
swift,39kyf0,Catfish_Man,1 point,Fri Jun 12 14:07:08 2015 UTC,"I am trying to make a Rock, Paper, Scissors game. When a move is selected I want to display the text ""Rock"", ""Paper"", ""Scissors"" at about a second interval. before displaying the player and computers moves.  I was trying to display the loop counter to test this for now e.g. it would display ""0"",""1"",""2"""
swift,39k3rw,aut0nomized,1 point,Fri Jun 12 07:45:52 2015 UTC,ceilf(theFloat)
swift,39k3rw,voidref,1 point,Fri Jun 12 07:49:36 2015 UTC,I remember spending a long time trying to figure out how to round DOWN one day. Then I realized Ints just did this naturally. I felt pretty dumb.
swift,39k3rw,AxeEffect3890,2,Fri Jun 12 10:53:03 2015 UTC,"Ints will round negative numbers away from zero, so it's always worth considering every case.  I've been bit by that one before!"
swift,39k3rw,sockalicious,2,Fri Jun 12 17:11:36 2015 UTC,Truncate would be a more accurate word.
swift,39k3rw,Stephen110,-3,Fri Jun 12 18:46:55 2015 UTC,Dumb? Like.. An Intdiot?
swift,39k3rw,lucasyong,0,Fri Jun 12 14:47:29 2015 UTC,How do I stop it from rounding up if the numbers after the decimal place are under .5
swift,39k3rw,zqwzzle,2,Fri Jun 12 08:27:28 2015 UTC,round() or roundf()
swift,39k3rw,MaddTheSane,1 point,Fri Jun 12 09:43:27 2015 UTC,"As Swift automatically wraps round()s that are called for Floats to roundf(), the only reason to use roundf() would be to force the use of Floats."
swift,39k3rw,criosist,1 point,Sat Jun 13 05:51:21 2015 UTC,float + (roundValue - (float % roundValue))  1.2 + (.5 - (1.2 % .%)) = 1.5
swift,39hxmb,BruceRoark,13,Thu Jun 11 20:55:19 2015 UTC,I doubt there will ever be an official print version of the book just based on how often Swift gets updated and changed. It would be out of date in 6 months or so.
swift,39hxmb,swemoney,5,Fri Jun 12 01:17:43 2015 UTC,"Oh it could be so beautiful. Imagine if Apple rewarded developers and made a limited run of Swift documentation books available. That beautiful typography and code snippets would look so sharp.  Give me a couple of weeks OP, I'll see if I can get some printed from somewhere I know, although don't count on it!"
swift,39hxmb,Yasuuuya,6,Thu Jun 11 22:57:26 2015 UTC,I would easily pay somewhere between $1 and $25 for this... Maybe $26
swift,39hxmb,AxeEffect3890,1 point,Thu Jun 11 23:11:50 2015 UTC,pretty sure it would be illegal for him to sell the books without Apple's permission...
swift,39hxmb,I_Need_Cowbell,1 point,Tue Jun 16 16:15:17 2015 UTC,"I feel this would be a bigger issue if her was selling for profit. If he is selling at cost and we are all benefiting from one person performing a mass print order, it's a little less fishy, especially when the book is free.  The best bet though would be to look into the licensing agreement apple has written up for the book which I can't do at the moment."
swift,39hxmb,AxeEffect3890,1 point,Tue Jun 16 16:19:28 2015 UTC,"Just looked, you may only print for personal use"
swift,39hxmb,I_Need_Cowbell,1 point,Tue Jun 16 17:05:47 2015 UTC,"Damn.  Well....I want to print it for myself but I'm too dumb to understand printers. The only way I know how to print things is to get in touch with my dear friend /u/Yasuuuya and ask him to do it for me. Of course, because we are such good friends, I will cover his printing and shipping costs because he's already donated his time to help me out."
swift,39hxmb,AxeEffect3890,1 point,Tue Jun 16 17:10:08 2015 UTC,Would be really nice
swift,39hxmb,vale93kotor,2,Sat Jun 13 18:10:45 2015 UTC,"here's a version I compiled from the original Swift book when the language was first released. I printed it out with excess printing allowance when I was in college.  not sure if this helps or not, but good luck!"
swift,39hxmb,kerent,1 point,Fri Jun 12 01:03:17 2015 UTC,That's really cool! How long did it take you to make that?
swift,39hxmb,kerent,1 point,Fri Jun 12 09:19:18 2015 UTC,"my memory is hazy, but I don't think it took too long."
swift,39hxmb,ChristianGeek,1 point,Fri Jun 12 20:45:42 2015 UTC,"BTW, there are two versions of the book in the iBookstore at the moment...the current one and a 2.0 version (same for the Cocoa and Swift one). You have to search the store to find it."
swift,39jncq,questdark,7,Fri Jun 12 04:50:06 2015 UTC,You should probably post some code.
swift,39jncq,silver_belt,4,Fri Jun 12 05:25:52 2015 UTC,"Read up on scope. If you're defining them in viewDidLoad, they don't exist outside of viewDidLoad. Declare them at the class level (underneath your ""class ClassName {"" ) and not inside any function, like this:  var variableToPass = 100  If it's a value you can't calculate until viewDidLoad, do something like this:  class ClassName: SuperClass {  var passingVariable: CGFloat!  override func viewDidLoad(animated: Bool) {      super.viewDidLoad(animated)      passingVariable = whatever.count * 10.0  }  override func prepareForSegue() {      // you can use passing variable   }   }"
swift,39jncq,mistermagicman,1 point,Fri Jun 12 06:57:29 2015 UTC,Mmm put a breakpoint on prepareForSegue and check the value from the debugger. Are you using the JSON data on the viewController that's calling the segue?
swift,39k6ev,nokkout,7,Fri Jun 12 08:18:16 2015 UTC,"Swift is definitely production ready. I have been using Swift for 10 months now at work, and I have no worries in continuing to do so.."
swift,39k6ev,pcoltau,1 point,Fri Jun 12 09:49:48 2015 UTC,"That sounds reassuring, thanks! :)"
swift,39k6ev,lyinsteve,3,Fri Jun 12 10:51:18 2015 UTC,I've got an app that must be stable (it's for firefighters) and we've been using Swift since last September with zero issues. Swift is an awesome language that's definitely production ready.
swift,39k6ev,Ceribis,6,Fri Jun 12 12:08:57 2015 UTC,Swift 1.2 is fine for production (just launched an app in it). It's an evolving language. Keep in mind that if you're ready to launch before Swift 2.0 is released you'll be using a pre-release version of Xcode and you won't be allowed to upload the binary to the store.
swift,39k6ev,Ceribis,1 point,Fri Jun 12 11:55:56 2015 UTC,"Oh thanks for the heads up, I didn't know that. I guess I'm forced into Swift 1.2 then. Historically how long has it been before Apple takes a version out of pre-release? If I want to release my app this year, is it too soon to use Swift 2.0?"
swift,39k6ev,Kametrixom,3,Sat Jun 13 08:35:44 2015 UTC,"Since Swift 2.0 is tied to Xcode 7, historically Xcode versions have been released when iOS versions have been released. Xcode typically goes GM slightly before iOS versions get released so developers have some time (a week or two) to compile and submit to the store for the iOS release. I'd expect this to happen in the fall.  I don't think it's too soon to use Swift 2.0, just realize you won't be able to submit your app until the fall at the earliest. We'll probably get a release date for iOS 9 at the iPhone event around September and that'll give you a better idea of when you'll be able to submit with Xcode 7."
swift,39k6ev,AJGolf1976,4,Sat Jun 13 14:46:08 2015 UTC,"Swift 2.0 might be ready, but XCode 7.0 definitely isn't, while working the last few days with it, I encountered XCode crashed, SourceKit crashes (manages the syntax), CPU used up by XCode and lots of other simple things. It is a beta after all"
swift,39k6ev,yuizesan,2,Fri Jun 12 22:33:36 2015 UTC,"Solid answer right here... I am loving Swift 2.0... But it baffles my mind that they can't get Xcode right... It's like a yearly letdown, and I find myself using a familiar catch phrase used in sports ""maybe next year""."
swift,39k6ev,Catfish_Man,10,Sat Jun 13 16:07:19 2015 UTC,"Please watch the WWDC 2015 Videos. Apple is stressing Developers in almost every talk to use Swift 2. If Apple says something like this over and over again, like last years Auto-Layout hint, just do ist."
swift,39k6ev,koalefant,1 point,Fri Jun 12 08:45:03 2015 UTC,"I haven't watched it, I didn't know they exist, I'll watch them right away. Thank you very much for the answer."
swift,39k6ev,Adamw88,2,Fri Jun 12 08:51:56 2015 UTC,Swift 2.0 isn't out yet (only a developer preview is). You can't submit apps to the store with it until a non-preview version is out.
swift,39k6ev,seven_seven,1 point,Fri Jun 12 19:24:22 2015 UTC,"Go ahead, been using it with lot of success in my current application. Stability had never been an issue throughout the whole thing. It's great."
swift,39jmfd,JailbreakThatShet,11,Fri Jun 12 04:40:51 2015 UTC,OT: it would be better to start animations (maybe only first time) on viewDidAppear.
swift,39jmfd,sabiland,2,Fri Jun 12 05:52:34 2015 UTC,Thanks! That fixed the problem!
swift,39jmfd,maksa,2,Fri Jun 12 20:04:59 2015 UTC,You should move that to viewDidAppear as /u/sabiland said.   As a side note (most probably) not related to your issue animations also stop working when you call UI code from a non-main thread by mistake.
swift,39jmfd,driftme,1 point,Fri Jun 12 08:49:02 2015 UTC,Thanks!
swift,39hcz4,questdark,7,Thu Jun 11 18:49:00 2015 UTC,"Apple's framework is NSJsonSerialization. It isn't too terrible to use, and is a decent way to learning the concepts of parsing JSON, which is one of the top things you need to learn how to do as a developer. Once you have an idea of how it is used, there are other frameworks out there that abstract it a bit more as well"
swift,39hcz4,sirmoosh,5,Thu Jun 11 19:03:42 2015 UTC,I agree.  It kills me to see people run to install something from GitHub without first looking to see what the stock frameworks can do.
swift,39hcz4,CQH,4,Fri Jun 12 00:38:23 2015 UTC,"Actually as of Swift 1.2 you can do something similar to SwiftyJSON without importing any additional frameworks. As others have pointed out, try to get your head around Optionals and (forced) unwrapping. Imho this is fundamental in Swift and try to stay up to date (if your employer doesn’t say otherwise). Keep in mind that Swift is still in rapid development and be prepared that updates will break your code. For a good read what actually changed in Swift 1.2 see the article below. It even has a NSJSONSerialization example in Swift 1.2:  NSHipster about Swift 1.2  Concerning your actual problem… If I don’t miss something out here your JSON looks something like this:  {         ""result"":         {             ""Color"": ""F9"",             ""Market"": ""Central"",             ""City"": ""LA"",             ""Highest"": ""Baldy"",             ""restaurant"": ""Immigro"",             ""Miles"": 188.0         }     }      From your string encoding I assume that you have syntax error. So if I’m not mistaken then please check your JSON file for a proper syntax. NSJSONSerialization is actually pretty straight forward. You create a dictionary from your NSData object with optional binding. I like to see the actual error but you can skip the error handling of course. After that you unwrap your dictionary with Multiple Optional Binding. If at any stage a key isn’t valid and the value can’t be unwrapped from the dictionary, this returns nil and switches to the else clause – hence this will not crash. This works beautifully when you're absolutely sure about the server response and the structure of your JSON.      var error: NSError? if let response = NSJSONSerialization.JSONObjectWithData(data, options: nil, error: &error) as? [String: AnyObject] {     // This is new in Swift 1.2: Multiple Optional Binding     if let result = response[""result""] as? [String: AnyObject],     color = result[""Color""] as? String,     market = result[""Market""] as? String,     city = result[""City""] as? String,     highest = result[""Highest""] as? String,     restaurant = result[""restaurant""] as? String,     miles = result[""Miles""] as? Float     {         // do whatever you want with your data here         println(""Color:(color), market:(market), city: (city), highest: (highest), restaurant: (restaurant), miles: (miles)"")     }     else     {         println(""Couldn't unwrap the dictionary."")     } } else {     println(""Couldn't read response. Error: (error?.description), (error?.userInfo)"") }      Hope this helps.     Edit: Fixed formatting"
swift,39hcz4,typesprite,1 point,Fri Jun 12 07:54:31 2015 UTC,"I like this approach a lot - this is the one I use most of the time. The one additional thing I like to do is to create a typealias for [String: AnyObject] called JSONDictionary that makes it just a bit more readable and easier to understand. Then instead of [String: AnyObject] I just use JSONDictionary. More in depth on that here: http://roadfiresoftware.com/2015/07/how-to-use-typealias-to-make-json-parsing-more-readable-in-swift/  But yeah, I'm of the opinion that third-party libs like SwiftJSON just add an unnecessary dependency like /u/sirmoosh said."
swift,39hcz4,jtbrown,4,Thu Jul 16 16:30:01 2015 UTC,SwiftyJSON is nice.
swift,39hcz4,dcoupl,2,Thu Jun 11 19:31:41 2015 UTC,"Yup, SwiftyJSON + Alamofire is great. Here's an Alamofire tutorial from the site you linked to, but the GitHub page manual should be enough to get you started :)"
swift,39hcz4,AmirMoosavi,2,Fri Jun 12 01:21:31 2015 UTC,"Put the response into a Dictionary Pull the items out of the dictionary using their keys    i.e.  var url: NSURL = NSURL(string: ""http://url_that_produces_JSON"")! var data: NSData = NSData(contentsOfURL: url)! let myDictionary: NSDictionary = NSJSONSerialization.JSONObjectWithData(data, options: nil, error: nil) as NSDictionary let restaurant: String = myDictionary[""restaurant""] as! String   or  if let restaurant: String = myDictionary[""restaurant""] as? String {   //do something } else {   //do something else }"
swift,39hcz4,CQH,1 point,Fri Jun 12 00:29:44 2015 UTC,"I got to the step where I can abstract content, but only if it's AnyObject. If I try and set it as string or something, it crashes and tells me __NSCFNumber can't be converted to String.   let result = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &error) as? NSDictionary  let parseJSON: AnyObject? = result!.valueForKey(""result"") let stuff: String = parseJSON!.valueForKey(""Yhighest"") as! String //crashes... but if I just do:  let otherstuff: AnyObject? = parseJSON!.valueForKey(""YlowestURL"") println(otherstuff)   ...     Optional(4290)  What's going on here?   Also, I have two layers of dictionary... My jsonstring format looks like:  Optional({ ""result"": { ... : ... ... : ... ... : ... } })"
swift,39hcz4,CQH,2,Fri Jun 12 04:10:23 2015 UTC,"That's not the code I wrote above.  Are you familiar with the concept of ""unwrapping""?"
swift,39hcz4,CQH,1 point,Fri Jun 12 05:22:52 2015 UTC,"Not really. I'm pretty new to swift, and the different classes of objects are killing me... So, I'm able to parse the JSON now, they're just all Optional AnyObject types... What's going on here?"
swift,39hcz4,holyb00t,2,Fri Jun 12 05:53:21 2015 UTC,"What's going on here?   You are trying to run before you walk.  Hey, man. I'm not gonna hold your hand through this.  Stop. Take some time and read the Apple Swift book.  It's free: https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11  Hacking your way through code is useful at times and is sometimes commendable.  But, if you spend like 2 hrs reading it can save you 200 hrs of frustration.  Edit: And please don't go installing repos from GitHub into your app before you know what benefit (if any) they provide.  This simply adds undocumented and unsupported code written in different styles to your app that you may not even need.  It's like installing a Calculator app on to your iPhone...when there is a pretty good one there already :D  Edit, Edit: All of us were new two Swift just last year.  We don't have a big head start on you.  You'll get it."
swift,39j9vd,MusclesBrah24,2,Fri Jun 12 02:51:13 2015 UTC,"They meant interface builder editor. The thing where you edit your storyboards and xibs in.   In xib's it's straight forward, you'll find the File's Owner in the side bar. Storyboards don't have a File's Owner, you have to check each ViewController.   Since Apple's redesigned Xcode / OS X the warning triangle is much less obvious.   Here's a screenshot:  http://i.imgur.com/a94bIxF.png  imageView has the warning symbol, because I renamed it in ViewController.swift  EDIT: I reread your question, right clicking on View Controller shows the list, and there is indeed a yellow warning triangle visible  http://i.imgur.com/MK0zQbD.png"
swift,39j9vd,fluchtpunkt,1 point,Fri Jun 12 17:09:59 2015 UTC,"Perfect, exactly what I needed."
swift,39j6pk,BoboFraggins,2,Fri Jun 12 02:26:01 2015 UTC,In case anyone from the future reads this:  I believe this is due somehow to me having chosen 'Command Line Tool' as a project type. I have given up and will just manually add all the source files to the test target instead of importing the primary target. Good luck.
swift,39j6pk,Kametrixom,1 point,Fri Jun 12 04:09:29 2015 UTC,"I think thats pretty easy:   In your project setting, add a target of type ""Cocoa Testing Bundle"". A new section in the file manager on the left should pop up, your test file is in there Click on the file you want to test and edit the ""Target Membership"" panel on the right side to be included in your testing target (Optional) - Edit your scheme and go to the Testing section, add your Test target with the +. This allows you to use CMD-U to test and maybe some other things   Does this work for you?"
swift,39i91l,smilinger,2,Thu Jun 11 22:11:14 2015 UTC,Have you tried clean your project and rebuild?
swift,39i91l,Seus2k11,1 point,Fri Jun 12 01:29:14 2015 UTC,Yes. Didn't help unfortunately :/
swift,39i91l,FutureIsMine,1 point,Fri Jun 12 04:51:16 2015 UTC,"This is mentioning a specific architectures, what are your architectures build settings with the project?"
swift,39i91l,FutureIsMine,1 point,Sat Jun 13 17:46:31 2015 UTC,"It says arm64 armv7 armv7s, SDK is iOS 9 and deployment target iOS 9"
swift,39hsu9,jaafar92,1 point,Thu Jun 11 20:24:53 2015 UTC,You should make a custom class for your tab bar controller and then you can add functionality to do what you want when you switch tabs.
swift,39hsu9,LetsCodeSomethingFun,2,Thu Jun 11 21:57:51 2015 UTC,"Yup, you could add the value you want to share as a property of the tab controller. At some point before you switch screens, save that value in the property. (like the top answer here http://stackoverflow.com/questions/27307903/swift-tab-bar-view-prepareforsegue)  Ideally you'd save this value after the user enters data."
swift,39hsu9,driftme,1 point,Thu Jun 11 22:07:13 2015 UTC,"Hi, and thanks for your answer.  I would actually like if the user didnt see the ""second"" VC. Its a tax app for Denmark, and the data in the ""second"" VC are pretty standard for 95% of the people. So if the user could open the app, write down his salary, and get the answer ALL in the ""first"" VC.  The ""second"" VC is only for the 5% who have some special conditions, and need to change the tax percentage and so on.  The Floats are written in UITextLabels, and all the math is in order. But I just need the salary written in, and the button pressed, and all the work is done ""behind the scenes"" and bam - the answer is in front of the user, at the same VC."
swift,39hsu9,driftme,1 point,Thu Jun 11 22:41:51 2015 UTC,"You should look at the documentation for a Tabbed View Controller. Like a navigation controller, it is a parent of multiple view controllers - in your example you have one?"
swift,39fz7p,cathkay,1 point,Thu Jun 11 13:44:19 2015 UTC,"just wondering, what is the purpose of making extension functions such as below versus just making them public or private functions on the class itself?  extension EditEventViewController {     func didTapSaveBarButton() { }     func didTapDismissBarButton() { }     func setupTableView() { }     func setupBarButtons() { } }   Also it seems that CalendarPickerViewController.loadData() commits a bit of a MVVM no-no.  Best practice approach is that it should be moved to a Services layer that would allow it to be re-used across multiple view models but at the very least the logic should live within a view model.  There is other logic that is out of place also such as EventDetailsViewController.didTapRevokeEventButton().  Most of the logic in this function should be moved to a view model.  The completion block being used on revokeEvent could be refactored to be called via a protocol from the view model.  Could also use delegate interfaces instead of concrete classes in a lot of places to  allow for better testing and parallel coding between team members i.e. something like  //using a concrete type here restricts testing and parallel development //private var viewModel : EventDetailsViewModel  //better private var viewModel : EventDetailsViewModelDelegate   Overall nice job though, you guys are on the right track."
swift,39fz7p,shooky1,1 point,Fri Jun 12 21:41:01 2015 UTC,"Hi shooky1!  First of all thanks for your suggestions. Here are some explanations:  Q: What is the purpose of making extension?   A: We wanted to group methods in particular responsibility groups. That's why all target-action functions, class life cycle methods or methods publicly available are in separate extensions. We started with such thinking but at the end of the implementation we decided to go with 2 groups: one for private, one for public and internals functions. Also we didn't change that to keep project consistent. Making private extension instead of private functions makes file easier to test (in case of visibility what should be tested) and being able to see at a glance what functions are inside a class (Swift 2.0 with it's synthesized headers will make it much simpler). Based on experience gained during Roomguru development, we wrote Swift style guide.  Q: Also it seems that CalendarPickerViewController.loadData() commits a bit of a MVVM no-no.  A: You are right. This part of code should be moved to separate class. Please notice that CalendarPickerViewController was created in early stage of our learning curve. Later we separate such part of code in kinda ""helper"" classes and we decided to name them with NetworkCooperator suffix. One of the example is EventsProviderNetworkCooperator.  Q: Could also use delegate interfaces instead of concrete classes (...) to allow for better testing and parallel coding.  A: In Netguru we devide tasks per functionalities. Please notice that almost in every case, one developer was responsible for view controller implementation as well as for associated view model. It's true that Swift is protocol oriented programming language but all of us are coming with Objective - C background and sometimes obvious things are becoming vague when you don't step back for a while. We're still fighting with this and trying to elimate such situations."
swift,39c8lf,fqn,6,Wed Jun 10 20:04:27 2015 UTC,I haven't really done anything with analytics but I think the easiest and most native solution would be App Analytics from Apple themselves
swift,39c8lf,Kametrixom,2,Wed Jun 10 20:20:04 2015 UTC,App Analytics presentation at WWDC is actually live right now: https://developer.apple.com/videos/wwdc/2015/ You will be able to watch the video here afterwards if you missed the live stream
swift,39c8lf,Kametrixom,2,Wed Jun 10 20:54:05 2015 UTC,"Seconded, App Analytics. I don't want to be concerned about lawsuits and PII and all that."
swift,39c8lf,JustAnotherLurker5,1 point,Thu Jun 11 15:41:50 2015 UTC,"There's a few important things Apple's Analytics doesn't do, like custom events."
swift,39c8lf,yoeriboven,3,Thu Jun 11 08:18:21 2015 UTC,I use Yahoo's Flurry. Its free and pretty easy to implement in your app. Although I haven't used Google analytics. Flurry you can create your own events and time events and watch where users go in your app.  Apple's analytics is ok but its not that much data and it relies on users agreeing to share their data which not a lot do.
swift,39c8lf,TheCracchen,2,Wed Jun 10 20:52:00 2015 UTC,"If you want to get the most out of it you should pic one with crash reporting and events, ATM we use a few as were trying to find the best for us but Mobile app tracking, Amazon, Counyly, Fabric.  Fabric is pretty good for crashes and Countly is ok for events from my point of view.  Although use countly 2.0 or less as the newest gave a lot of leaks and garunteed memory warnings and crash after app idling for 2+ mins."
swift,39c8lf,criosist,1 point,Thu Jun 11 04:46:49 2015 UTC,Don't forget Localytics and more recently Paddle.
swift,39c8lf,h____,1 point,Thu Jun 11 04:08:16 2015 UTC,I use Localytics. We use it for both iOS and Android and its free up until 10k active users. We chose it as it has good terms and conditions about the use of our data and it tracks everything we need with very little code.
swift,39c8lf,TigerWolf,1 point,Thu Jun 11 04:45:33 2015 UTC,"You can go with Countly. Has custom events, real-time, good UI, and installable on your own server (Ubuntu). Open source crash analytics will be added soon so that pretty much makes Countly Community Edition a viable solution. iOS SDK has lately added Apple Watch support if that interests you."
swift,39c8lf,gorkemcetin,1 point,Thu Jun 11 17:05:43 2015 UTC,Hockey and Flurry
swift,39c8lf,driftme,1 point,Thu Jun 11 21:36:02 2015 UTC,Fabric.io is quite amazing.
swift,39c8lf,sabiland,1 point,Fri Jun 12 05:53:45 2015 UTC,"Agree, I really like Fabric. Although their Mac app is a bit unstable and keeps freezing from time to time."
swift,39c8lf,MissileStorm,1 point,Fri Jun 12 06:56:21 2015 UTC,I use AppAnalytics.io for IOS. It can provide gesture analytics to me and it's quite amazing.
swift,39eaxs,___westkorea,6,Thu Jun 11 04:06:50 2015 UTC,"If it's a custom cell, use some auto layout. If it's not, I think you can just set the textLabel property on the UiTableViewCell class, which should vertically align it to the center for you.   No need to do custom views or any of that witchcraft. Just lay down some sweet sweet NSLayoutConstraints or utilize that fancy property"
swift,39eaxs,orbitstarr,1 point,Thu Jun 11 06:04:06 2015 UTC,"Custom cell? default cell?   Text should automatically be vertically centered within its label, if its not, then your label isn't."
swift,39eaxs,asniper,1 point,Thu Jun 11 10:58:58 2015 UTC,"I fully expect this sort of question with WebDev, but with iOS dev?"
swift,39eaxs,Stephen110,1 point,Thu Jun 11 19:47:51 2015 UTC,"I would put in a transparent view which touches the top and bottom of the cell, and then align the label or text to the center Y of that view. At least that's what I've done."
swift,39eaxs,Pecorino,1 point,Thu Jun 11 05:02:42 2015 UTC,"You could just align to the cell, rather than adding an unnecessary view inside an already existing view."
swift,39dwah,banukatanaya,3,Thu Jun 11 02:31:07 2015 UTC,"Hey! Parse is awesome once you get started. I struggled getting started with it too, and so I made this little code to help get started populating a table view with different columns in swift. Make sure to change some of the lines I wrote to fit your Parse database. Here, I have a database on Parse of restaurants and ratings. I wanted to get a list of ratings and populate a tableview with those ratings. I'm going to assume you have background in basic swift, xcode, etc. Basically, you create the Parse class on the website, download their source code or follow their directions on how to get setup with parse, make a tableview, and link the tableview to the view controller as delegate and datasource (e.g. standard setup for a tableview). You also need a custom prototype cell that has a text label. Then, you can use my code as your viewcontroller. It might not work exactly (you might have to change some of it to make it work with your program), but the idea is the same. Take a look especially at how I iterate through the parse array:  You query parse by first making a query object:  let query:PFQuery = PFQuery(className: ""[INSERT NAME OF CLASS FROM PARSE]"")   Then, this will get all objects asynchronously and create an array of values just from a specific column (similar to how you would parse JSON):      query.findObjectsInBackgroundWithBlock { (obj, error) -> Void in          var object:NSArray = obj! as NSArray         for x in object {              self.rating.append(x.objectForKey(""[What column do you want to get data from?]"")! as! Float) //make sure the type here matches what you previously declared. I.e. if you have float here, make sure your variable is cast as [float]           }          self.tableView.reloadData() //because it's off the main thread, the tableview won't populate without this line     }   I hope this is a little clearer on how to get started with parse. Please let me know if you have any questions and I'd be happy to help/try to explain anything I could!"
swift,39dwah,dickinthevajayjay,1 point,Thu Jun 11 05:58:16 2015 UTC,"thank you so much! it's been a big struggle for me for the past few days. i'm not at home to try your code out but i was just wondering why ""findObjectsinBackgroundWithBlock"" is used rather than ""getObjectsinBackground"". I've seen findObjects being used in most of the tutorials while the parse iOS guide only shows getObject as the method of retrieving data. Is there a fundamental difference between finding and getting a PFobject?"
swift,39dwah,dickinthevajayjay,1 point,Thu Jun 11 15:09:40 2015 UTC,"Yeah no problem. If you're talking about getObjectsInBackgroundWithId, that takes a parameter and returns one specific PFObject. The find method returns an array of all PFObjects"
swift,39a9bk,Ceribis,1 point,Wed Jun 10 11:13:21 2015 UTC,"It's a simple app that gives you a filterable, searchable list of all WWDC videos. It was also updated to keep track of when live sessions are happening an automatically open the streams for those videos when they start.  I've been sharing this with people this week looking to watch WWDC 2015 videos and not having the patience to deal with the developer site. It was down for a while yesterday and before today you could only see the live video (the website now has videos from yesterday). I didn't have any issues with the app during that downtime or watching the streams."
swift,39a9bk,d70,1 point,Wed Jun 10 11:16:51 2015 UTC,"Thanks for sharing. Do I need a Developer Program subscription to watch this? (Sorry, not on a machine with XCode to try)"
swift,39a9bk,d70,2,Wed Jun 10 17:57:13 2015 UTC,Nope.   Edit: There's a prepackaged zip of app though on the Releases tab. No compiling needed.
swift,39b44e,minsanity6,3,Wed Jun 10 15:39:55 2015 UTC,"Yes, pretty much.  The Swift blog discusses this here:  https://developer.apple.com/swift/blog/?id=7"
swift,39b44e,joshstaiger,1 point,Wed Jun 10 16:38:43 2015 UTC,Thanks!
swift,39c7wd,alexbevi,1 point,Wed Jun 10 20:00:09 2015 UTC,"You somehow would have to compile it with some option for entitlements. In XCode when you select something from the capabilities, it generates a [ProjectName].entitlements file and provides this somehow when compiling. Maybe this helps"
swift,39c7wd,Kametrixom,1 point,Wed Jun 10 20:14:38 2015 UTC,"Oh and when using maps, XCode links your account with this capability, it doesn't just add it to the file"
swift,39c7wd,Kametrixom,1 point,Wed Jun 10 20:17:05 2015 UTC,"I'm new to OSX development, so I appreciate the help. If you happen to come across any more info, please let me know.  If the only way to do this is through XCode (and not the swfit REPL/compiler), so be it"
swift,39al0h,chomskee,3,Wed Jun 10 13:11:26 2015 UTC,"You should use a UICollectionView instead of a UIScrollView. This makes this much much much easier. It's basically made for exactly your use case.   Just put an UIImageView and a UICollectionView in your ViewController. Do it in Interface Builder and you can set up most things there, horizontal scrolling, distance between items and so on. Connect the datasource and delegate outlets of the UICollectionView to your ViewController and implement the necessary methods (find a UICollectionView tutorial). UICollectionViewDelegate has a handy method that you can use to change the filter. func collectionView(collectionView: UICollectionView, didSelectItemAtIndexPath indexPath: NSIndexPath)."
swift,39al0h,fluchtpunkt,1 point,Wed Jun 10 15:40:53 2015 UTC,"Thank you! This is incredible helpful, I've been trying to build it with a UIScrollView and it was a total pain. I falsely assumed that UICollectionViews were only for static grids."
swift,3994bm,galvanizd,3,Wed Jun 10 03:41:20 2015 UTC,What a redundant title in the name.
swift,3994bm,amlynch,1 point,Wed Jun 10 11:51:30 2015 UTC,Should have clarified that these announcements were for new Apple developers.
swift,3994bm,keath,0,Wed Jun 10 12:55:58 2015 UTC,Ugh. Yeah. My bad. I was tired and was messing around with the title.. and Reddit doesn't seem to allow editing of a title at this moment =/
swift,3980x1,0xmort3m,5,Tue Jun 9 22:38:14 2015 UTC,"That app has a gorgeous UI, nice work!   Would you mind elaborating on any tools you used? I am incredibly curious to hear about the process."
swift,3980x1,pzawad94,6,Wed Jun 10 01:23:30 2015 UTC,"Actually I started with sketch for the prototyping and stuff, but I at some point I just wanna to code and moste of the UI was built on the fly, I didn't had a perfect desing concept.. I just knew I want a dark App with blur :)"
swift,3980x1,pzawad94,2,Wed Jun 10 02:37:09 2015 UTC,It turned out really well. You definitely have a knack for this.
swift,3980x1,vinags,1 point,Thu Jun 11 02:00:55 2015 UTC,"I would love to know the process as well. I am blogging my experience in learning Swift, and would like to know yours as well."
swift,3980x1,Egodude,3,Wed Jun 10 01:32:34 2015 UTC,The UI looks amazing!  Espn should hire you to do their app.
swift,3980x1,ac1dlem0n,2,Wed Jun 10 01:46:21 2015 UTC,Thanks :) I love designing UIs as well as code them!
swift,3980x1,Yasuuuya,2,Wed Jun 10 02:34:41 2015 UTC,"I already downloaded, very nice app, i loved the icon."
swift,3980x1,Chalxsion,1 point,Wed Jun 10 02:40:00 2015 UTC,I'm gonna use the shit outta this app - thanks OP!
swift,3980x1,galvanizd,1 point,Tue Jun 9 23:35:52 2015 UTC,You're welcome :D
swift,3980x1,Baschtian,1 point,Wed Jun 10 11:36:10 2015 UTC,This app is absolutely beautiful. Its great that I'm into eSports now that I have this kickass app.
swift,3980x1,Baschtian,1 point,Wed Jun 10 03:15:48 2015 UTC,Thanks for the roses :) Glad you like it!
swift,3980x1,YouHawk,1 point,Wed Jun 10 11:36:30 2015 UTC,Awesome stuff Florian! Do you have a blog? Would love to follow your development as a Swift dev :)
swift,3980x1,LeftyApps,1 point,Wed Jun 10 03:40:32 2015 UTC,"Maybe I should set one up, actually I would love to write about Design & Swift but I never wrote a Blog before."
swift,3980x1,accreddit,1 point,Wed Jun 10 11:37:26 2015 UTC,"The app looks awesome.  Sadly tho, I can't use it because I only have an iPad. Will you make a version for the iPad?"
swift,3980x1,A3mercury,2,Wed Jun 10 07:33:10 2015 UTC,Currently working on a Swift 2 Version and iPad / Apple Watch UI.
swift,3980x1,Adamw88,1 point,Wed Jun 10 11:37:54 2015 UTC,How big of a difference is it changing form Swift 1.2 to 2?
swift,3980x1,Adamw88,1 point,Wed Jun 10 11:40:30 2015 UTC,"A few things are different, but apple provides a converter tool within xcode which works pretty well, I just take that opportunity and rewrite some parts of my app. Most of it was written while learning, so a refactor or rework of some parts is necessary. But if you just want to convert an app without many libs, it should be done in a few clicks :)"
swift,3980x1,rev93,1 point,Wed Jun 10 11:50:28 2015 UTC,"Nice work! Are you using the articles from lolesports? Or do you write them yourself? If first, do you parse the website or do you get the ""raw data"" somehow?"
swift,3980x1,rev93,2,Wed Jun 10 08:57:05 2015 UTC,"Thanks! I use their unofficial esports API. Just ""raw"" json data!"
swift,3980x1,banukatanaya,1 point,Wed Jun 10 10:04:38 2015 UTC,"Cool! Did you have to deal with any copy right issues?  Also, how long was the app review process?  I also recently submitted mine, and I'm just anxious!  Amazingly beautiful interface BTW!"
swift,39alsw,bluelinux,3,Wed Jun 10 13:18:36 2015 UTC,This would be awesome. We need one.
swift,39alsw,thegayngler,3,Wed Jun 10 21:39:19 2015 UTC,It's one of the main reasons the Linux programmers wanted Swift open sourced.
swift,39alsw,RDSWES,1 point,Thu Jun 11 13:14:03 2015 UTC,"Yes, maybe Apple can call it ""Green Apple"".."
swift,39alsw,thegayngler,2,Wed Jun 10 22:34:25 2015 UTC,I would love to work on a project like that. That would be awesome. Has anyone started one yet?
swift,39alsw,yawaramin,2,Fri Jun 12 15:49:04 2015 UTC,"The closest I've seen is Swifter, but that's a Swift-native web server. Still pretty cool though."
swift,39alsw,agiletoolkit,2,Sat Jun 13 06:35:50 2015 UTC,"Hey Reddit. I am author of Agile Toolkit - a PHP UI Framework and I have been following progress of Swift and waiting for it to be open-source.   Im quite intrigued at the possibility of porting my web framework into swift or at least helping someone do it. It has some unique qualities and is self-sufficient, heavily relying on object-oriented approach for web app development.   You can look at the intro here: http://www.agiletoolkit.org/intro/1 and the framework syntax. The PHP version is stable and has been around for a long time.  Here is a more technical doc: Here is more technical doc: http://book.agiletoolkit.org/agiletoolkit-overview/design-goals.html"
swift,399v8x,YouHawk,2,Wed Jun 10 08:17:35 2015 UTC,You could crypt the login data and add a security key beforehand so that you can determine if it was done by your app.
swift,399v8x,debausch,2,Wed Jun 10 08:33:16 2015 UTC,"is there any crypt method implemented in php and swift (I mean the same method, ofc there are crypt methods in php)? so I dont have to implement a method myself?"
swift,399v8x,debausch,1 point,Wed Jun 10 08:49:47 2015 UTC,Maybe something like mCrypt but im not sure about the security.
swift,399v8x,joycamp,2,Wed Jun 10 14:06:45 2015 UTC,I would do this by creating a REST api in a server technology and use nsurlsession  to manage the data calls.    Much more straightforward.
swift,399v8x,koalefant,1 point,Thu Jun 11 07:14:57 2015 UTC,"I would go with this answer. Don't try and implement your own encryption, most of the time it will go wrong."
swift,397ue3,tidwall,2,Tue Jun 9 21:52:24 2015 UTC,"Pretty cool, anyone know how it handles different assets for different screen sizes?"
swift,397ue3,alt51,1 point,Wed Jun 10 05:52:48 2015 UTC,It's a font; why would scaling not be automatic?
swift,397ue3,UltraSheen,2,Wed Jun 10 20:01:08 2015 UTC,"They use an ""image"" property so I didn't see that it was a font at first."
swift,395vej,alexcasalboni,1 point,Tue Jun 9 13:58:48 2015 UTC,"Just bought the book before I saw this post! I'm a Rails developer and found Treehouse's Swift track too slow, so I am really looking forward to this read!"
swift,395vej,nshoes,2,Tue Jun 9 17:15:58 2015 UTC,Ditto! This guy seems to know what he's doing and BNR haven't jumped on Swift yet soooo...
swift,395vej,Noweightsatthegym,1 point,Tue Jun 9 22:40:49 2015 UTC,"Actually they have.  I received the latest BNR Mac Cocoa book a few weeks ago, and it's all Swift."
swift,395vej,keath,1 point,Thu Jun 11 11:11:10 2015 UTC,"Let us know if it's good! I've been wanting to learn Swift for a while, but never could find the best resource for learning it."
swift,395vej,canadaboy23,1 point,Tue Jun 9 17:43:34 2015 UTC,"I am flying through this book, just finished chapter 10. It is a fantastic read. EXACTLY what I wanted - something that is simple concise, teaches/talks about best/worst practices, explains things at a manageable pace. Get a copy and learn Swift!"
swift,395vej,nshoes,1 point,Sun Jun 14 04:35:54 2015 UTC,"Oh wow, that's great! Thank you for writing back about it, I'll definitely have to get a copy."
swift,396l9n,mavdev,10,Tue Jun 9 16:59:01 2015 UTC,"Xcode 7 has a built-in feature that will change Swift 1.2 code to Swift 2 code with the press of a button. I tried it in one of my larger projects, and so far, everything seems to be working fine."
swift,396l9n,spork-in-the-moon,5,Tue Jun 9 17:03:09 2015 UTC,"Lucky you. I got a huge number of errors in the migration where the migrator couldn't migrate my code (mostly related to error handling), leaving me with lots of manual work to do."
swift,396l9n,gilgoomesh,2,Wed Jun 10 02:44:48 2015 UTC,I want to believe you
swift,396l9n,Bit_and_byte,1 point,Tue Jun 9 23:26:42 2015 UTC,"Lucky. Some of my code had API changes that broke the migration tool. The result was that only a couple of the files in my project got migrated automatically, and the rest required manual intervention.  I also ran into some... let's just say questionable errors along the way."
swift,396l9n,lgroeni,7,Wed Jun 10 06:11:02 2015 UTC,"Having spent quite a few hours documenting the major changes in Swift 2 and producing examples (read my report of the new features in Swift 2 here), I can tell you that this is definitely  a ""your mileage may vary"" issue – it depends entirely on the code you've used.  For example, if you're using NS things that have an NSError pointer being passed (e.g. NSString's contentsOfFile), that will not compile in Swift 2 because that construct has been replaced with try/catch.  But once again, Apple has provided an Xcode tool to convert code from 1.2 to 2.0, and it does a good enough job that your code will probably compile. Does it produce code you want to maintain or ship? No, definitely not, but at least it gets you started. Here's a basic example in Swift 1.2:  let str = NSString(contentsOfFile: ""meh"", usedEncoding: nil, error: nil) println(str)   Here's what Xcode 7 turns that into when you choose Convert > To Latest Swift Syntax:  let str: NSString? do {     str = try NSString(contentsOfFile: ""meh"", usedEncoding: nil) } catch _ {     str = nil } print(str)   It's worth adding that Apple is likely to make further changes to Swift 2 during the iOS 9 beta cycle, so don't be too keen to upgrade your code just yet. Good luck!"
swift,396l9n,twostraws,2,Tue Jun 9 17:26:50 2015 UTC,"I think I saw in the list of new features to Swift in Keynote presentation:""Swift 1.2 to 2 migration tool"". Did I just dream?"
swift,396l9n,fobin78,2,Tue Jun 9 17:03:21 2015 UTC,Yes that’s a real thing
swift,396l9n,Pecorino,2,Tue Jun 9 18:02:34 2015 UTC,"It's a thing with all version upgrades though.  1.0 to 1.2, when ARC was introduced with obj-c.  It's nice, but far from maintenance free.  Even with the conversion, expect some manual fixes."
swift,396l9n,Stephen110,2,Tue Jun 9 20:47:15 2015 UTC,I had some issues with the new error handling not being converted smoothly using the migration tool. Took about 30 min to figure out what went wrong and fix it.  Overall easy transition.
swift,396l9n,Alsaleem,1 point,Tue Jun 9 17:15:46 2015 UTC,yes it took me about 30mins to an hour too. Going to try the migration tool that /u/spork-in-the-moon mentioned and fingers crossed.  When will the first update to Xcode with Swift 2 be available - anyone know?
swift,396l9n,ReasonReader,1 point,Tue Jun 9 17:25:16 2015 UTC,When will the first update to Xcode with Swift 2 be available - anyone know?   Yesterday.  Go get the Xcode 7 beta from developer.apple.com.
swift,396l9n,yeskia,1 point,Tue Jun 9 22:39:50 2015 UTC,And then developer releases are usually on a two week schedule after that.
swift,396l9n,voidref,2,Wed Jun 10 09:59:22 2015 UTC,Absolutely. Of considerable concern is if you are using any 3rd party swift libraries. Things aren't going to go well until they are updated to the latest version of Swift.
swift,396l9n,Pecorino,1 point,Tue Jun 9 19:01:38 2015 UTC,Yes. This. I selected some frameworks I have (Realm and SnapKit) to be converted without thinking about what I was doing.
swift,396l9n,ReasonReader,1 point,Tue Jun 9 19:51:12 2015 UTC,Use the migration tool.  Xcode 7 will offer to update your Swift projects as soon as you open them.
swift,396l9n,Nemesis-prime,1 point,Tue Jun 9 22:33:57 2015 UTC,"Are you able to submit projects migrated to Swift 2.0 into the store? I've can't seem to find a solid ""yes"" or ""no"", though reasonable doubt tells me we'll have to wait."
swift,3982gt,AxeEffect3890,1 point,Tue Jun 9 22:49:08 2015 UTC,Code. You think we're mind readers?
swift,3982gt,downvotefodder,1 point,Wed Jun 10 02:36:18 2015 UTC,I’m on mobile right now but its within an ibaction for the slider its essentially just  player.currentPlaybackTime = NSTimeInterval(slider.value)
swift,3982gt,regretdeletingthat,1 point,Wed Jun 10 02:42:35 2015 UTC,"Have you made sure the slider supplies continuous updates? I think the checkbox is just labelled 'Continuous', but I'm not at my computer so I can't verify. Also I might recommend stopping playback when the user first touches the slider and only resuming it when they lift their thumb, otherwise you'll get the horrible skipping. To my thoughts, this is how the music app works too."
swift,397mud,iOSKoray,1 point,Tue Jun 9 21:02:28 2015 UTC,"You need to provide actual X and Y co-ordinates, i.e. numbers. If your ""enemy"" object is an SKSpriteNode, you should use something like this:  fire.position = BodyType.enemy.position   I covered exactly this in my first SpriteKit tutorial, which was project 11 in Hacking with Swift – you might find it a useful read."
swift,397mud,twostraws,1 point,Tue Jun 9 21:11:05 2015 UTC,BodyType.enemy.position   Thanks but now i get this error:  'BodyType' does not have a member named 'position'
swift,397mud,djkimothy,1 point,Wed Jun 10 18:50:59 2015 UTC,"i would do something like   fire.position = enemy.position  //where enemy is a sprite node.   in your original code you could also use CGPointMake (enemy.position.x , enemy.position.y) if you were to go that way. again where enemy is the node you're looking for?"
swift,397455,XeuphoriaDub,4,Tue Jun 9 19:01:40 2015 UTC,1..5 does not exists in Swift (it does in Ruby though) 1...5 would be 1 through 5 (Closed Range Operator) 1..<5 would be 1 through 4 (Half-Open Range Operator)
swift,397455,rafmagana,2,Tue Jun 9 19:38:27 2015 UTC,the range operator is not .. it's ..< or ...
swift,397455,voidref,2,Tue Jun 9 19:05:07 2015 UTC,"What /u/voidref said. Also, here's a link to the section on for loops in the Swift manual."
swift,397455,Pecorino,1 point,Tue Jun 9 19:39:48 2015 UTC,"1..5 old half-open range operator (1,2,3,4); no longer used since XCode 6, Beta 3 1..<5 actual half-open range operator (1,2,3,4) 1...5 - closed range operator (1,2,3,4,5)    They changed it from 1..5 to 1..<5 so that it's more distuinguishable from the close range operator.  We considered this carefully. As you can see from this thread, small syntactic issues like this are polarizing, subject to personal preferences, and have no one right answer. See also http://en.wikipedia.org/wiki/Bikeshed  For what it's worth, this approach is precendented in the groovy language. It optimizes for readability and clarity: you're unlikely to mistake one operator for the other when skimming code, and new people coming to Swift are unlikely to assume that ..< is an inclusive range operator (like most assumed when they saw ""0..5"")  — Chris Lattner  I'd really like it if there was only a single range operator, but that isn't possible (AFAIK):  You need to have a half-open range operator to be able to represent an empty range. You need an inclusive range operator to represent finite enumerated sequences when you want to include the last element (e.g. enums, but also integers that you want to include the largest integer value in).. — Chris Lattner   I usually follow all the changes in Swift at SwiftInFlux"
swift,396v3f,Yalpski,3,Tue Jun 9 18:02:49 2015 UTC,"You can use any Cocoa frameworks/libraries/classes with swift.  I suspect there are 3rd party solutions to Excel reading, and Apple provides https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/NSXML_Concepts/NSXML.html"
swift,395kxe,air6199,3,Tue Jun 9 12:27:08 2015 UTC,"Don't see mention of a WWDC session covering it, so my guess is existing library APIs will exist, but we likely won't know until the new app is released."
swift,395kxe,TheHolyLampshade,2,Tue Jun 9 14:25:29 2015 UTC,"Do we have API to iTunes Radio? Not sure, but I think we don't.   Apple Music will probably be the same."
swift,397ctz,andorbot,1 point,Tue Jun 9 19:58:08 2015 UTC,Managed to solve this by starting from scratch. Written with the same code but no longer using @IBInspectable for colors. Guess I made a minor hiccup somewhere but I’ve still no idea what.
swift,3978cv,dasfun_games,2,Tue Jun 9 19:29:14 2015 UTC,"No, it only means that people can build swift compilers for any system, it has no influence on Xcode."
swift,3978cv,Kametrixom,1 point,Tue Jun 9 19:58:59 2015 UTC,"No but AppCode from JetBrains probably will, since their IDE is already basically cross platform."
swift,3978cv,lusion,-1,Tue Jun 9 22:07:29 2015 UTC,try here   http://www.elementscompiler.com/elements/silver/
swift,3923jp,dGasim,15,Mon Jun 8 18:17:32 2015 UTC,I'm thinking server apps - You don't need much - just something to run secure internet protocols.. I think this will be great.  Next up - compile swift to ecmascript in the browser.
swift,3923jp,dgdosen,1 point,Mon Jun 8 20:51:19 2015 UTC,"To make it viable we need a GWT bridge or something similar. Better yet something like Django, or asp.net"
swift,3923jp,dani0805,20,Tue Jun 9 15:39:08 2015 UTC,Except it didn't. It will become later this year.
swift,3923jp,fobin78,6,Mon Jun 8 20:00:15 2015 UTC,Just like FaceTime™ !   ;)
swift,3923jp,oliyoung,4,Tue Jun 9 02:09:26 2015 UTC,I think the issue was patent lawsuits over protocols Facetime infringed. That sucks because Facetime is hands down the fastest and most stable P2P realtime media app that I know of.
swift,3923jp,pythonista_barista,5,Tue Jun 9 05:06:04 2015 UTC,"FaceTime was never meant to be open source. They wanted it to be an open standard. Pretty different. They still failed to deliver though, so your point mostly stands"
swift,3923jp,ElvishJerricco,3,Tue Jun 9 05:42:08 2015 UTC,"Hey Guys,  I have one Question: What does it actually mean, that ""Swift"" is open source? I mean.. Wasn't the source code before also open? Could someone explain it to me please :)"
swift,3923jp,iOSKoray,4,Tue Jun 9 12:33:35 2015 UTC,"It wasn't open. The source code for the swift compiler and standard library was closed source, meaning only apple employees could look at it. But I believe the specification was open."
swift,3923jp,lusion,2,Tue Jun 9 15:21:16 2015 UTC,does this mean there are going to be Open Source IDEs for Swift? Like Eclipse?
swift,3923jp,mavdev,3,Mon Jun 8 22:15:15 2015 UTC,"AppCode already supports Swift, through the official compiler binary."
swift,3923jp,tomtom2go,1 point,Tue Jun 9 08:26:32 2015 UTC,I didn't know AppCode was open source.
swift,3923jp,shiggie,1 point,Tue Jun 9 21:52:34 2015 UTC,"It isn't, although it is based on the open source IntelliJ SDK. The point I was trying to make is that 3rd party Swift IDEs, whether open source or not, are already possible without Swift itself being open source."
swift,3923jp,tomtom2go,1 point,Tue Jun 9 23:01:56 2015 UTC,There is a free Swift IDE: RemObjects Silver.
swift,3923jp,niutech,-1,Tue Jul 7 23:45:29 2015 UTC,"Now that you mention it, I would hate to develop a Swift program in a plain text editor. Completion and live warnings are really nice. Actually, why do I like Sublime Text so much for Rails development??"
swift,3923jp,fqn,1 point,Tue Jun 9 00:40:06 2015 UTC,"Because Rails hasn't got fucking ridiculously long method names. Though check out RubyMine, it's a pretty neat Ruby IDE."
swift,3923jp,yeskia,1 point,Tue Jun 9 13:43:32 2015 UTC,"I've tried RubyMine a few times, but I need to give it another shot. My team seems to be split pretty evenly between Sublime and RubyMine."
swift,3923jp,fqn,1 point,Tue Jun 9 16:34:06 2015 UTC,"Yeah, I tend to use RubyMine for one month a year, really enjoy some of the cool features but then end back up on Sublime because its faster and looks better. Would be nice there was some other IDE options."
swift,3923jp,yeskia,1 point,Tue Jun 9 23:36:05 2015 UTC,I wish sublime text becomes open source. It is the fastest editor that I have used.
swift,3923jp,Jinno,0,Tue Jun 9 05:34:36 2015 UTC,"Atom.io has a very similar feel, is extensible through Javascript, and is open source. Might be a good alternative. Especially if we can get some tie ins to the Swift compiler to make it a true Swift IDE."
swift,3923jp,thecrazydemoman,2,Tue Jun 9 15:33:51 2015 UTC,atom.io isn't nearly as fast as Sublime is though.
swift,3923jp,JustAnotherLurker5,2,Tue Jun 9 15:56:35 2015 UTC,"Oddly enough, I was using Brackets for angular work because I really like the jumping between code/css inline.  I used Atom.io for Haskell for a bit (before moving to emacs) cause it had some pretty good modes.     Finally, I use SublimeText for Ruby.  Quite odd, now that I think about it."
swift,3923jp,MrHyperbowl,2,Wed Jun 10 00:27:06 2015 UTC,Vim for the win.
swift,3923jp,thecrazydemoman,1 point,Tue Jun 16 00:11:34 2015 UTC,"yes, but i like my mouse and the cool sublime text menu for changing contexts and such. :P Make vim as easy to use and bam i'm in. (seriously though VIM is cool)"
swift,3923jp,Jinno,0,Tue Jun 16 10:30:17 2015 UTC,"Depends on what he meant by ""fast"". If we go strictly on performance, I would definitely not argue. There's definitely slowness in portions of Atom.IO. But if he's going for the aspect of ""fastest for my workflow"", then it could still suit his needs and be open source."
swift,3923jp,letsgetrandy,5,Tue Jun 9 16:39:26 2015 UTC,"It won't be terribly meaningful unless someone writes a AppKit or UIKit libraries to interoperate with Linux, etc..."
swift,3923jp,fluchtpunkt,18,Mon Jun 8 20:05:13 2015 UTC,Foundation is enough. My server doesn't need UI.
swift,3923jp,shiggie,2,Mon Jun 8 20:13:25 2015 UTC,But Foundation is Objective-C.
swift,3923jp,fluchtpunkt,1 point,Mon Jun 8 20:37:41 2015 UTC,"But compared to AppKit or UIKit, Foundation is almost tiny.   Not sure what Apples mid- and long-term plans are. A pure Swift on Linux won't be very useful for developers in the Apple ecosystem.   In my opinion they have to find a way to bundle Foundation (I'm okay with closed source) to make Linux Swift useful."
swift,3923jp,Formulka,5,Tue Jun 9 09:48:56 2015 UTC,"I agree but I have a very good feeling that, swift will be used for server side development.  Also, maybe not now but eventually swift will need a native API. So people can build libraries for things like GLKit. But IOKit will for sure be there, to talk to OS Core like filesystems and stuff"
swift,3923jp,pianogamer05,5,Mon Jun 8 20:33:39 2015 UTC,"We will be rolling out the compiler and standard libraries for iOS, OS X, and Linux."
swift,3923jp,lusion,3,Mon Jun 8 21:58:54 2015 UTC,I really hope this means an IDE for Swift apps coming to Linux. I would love developing for iOS using a Linux-based OS...
swift,3923jp,JustAnotherLurker5,1 point,Tue Jun 9 00:48:55 2015 UTC,JetBrains will likely make their IDE AppCode available for Linux. However Apple will likely never make AppKit and UIKit open source. That has too much strategic importance to them.
swift,3923jp,pianogamer05,1 point,Tue Jun 9 15:29:03 2015 UTC,AppCode relies on Xcode though... how would that work on linux?
swift,3923jp,niutech,0,Wed Jun 10 00:28:35 2015 UTC,One can dream...
swift,3923jp,_patientzero,1 point,Tue Jun 9 20:06:04 2015 UTC,Have you heard of GNUstep? It will probably be ported to Swift.
swift,3923jp,shiggie,1 point,Tue Jul 7 23:43:54 2015 UTC,I REALLY want apple to also support their libraries cross platform. I'd love to do all cross platform dev in swift as opposed to Qt... But we're definitely going to need the UI bits all ported too.   Does anyone know the feasibility of a 3rd party making this happen?
swift,3923jp,Ceribis,1 point,Tue Jun 9 14:40:42 2015 UTC,"There has always been GNUstep.  With closed source Swift, it was just added a big unimplemented piece in rebuilding the Apple toolchain.  So, maybe open source Swift gets GNUstep back from being ""Oh geez, not something else to rewrite"", to ""Oh, maybe this will bring us some attention to being the missing piece""."
swift,3923jp,asniper,1 point,Tue Jun 9 16:36:21 2015 UTC,"Now if Objective Cloud will start to support Swift, that would be great."
swift,3923jp,CyberianCitizen,1 point,Tue Jun 9 15:40:58 2015 UTC,Hasn't been open sourced yet. They said at a later date.
swift,3923jp,asmx85,0,Mon Jun 8 20:23:50 2015 UTC,"Whether or not Apple would open source it was in discussion for a year LOL   Why Apple should open-source Swift: Open source fuels innovation Why Apple won't open-source Swift: Innovation isn't what Apple really wants Why Apple should open-source Swift: The future labor pool is coming of age on open source Why Apple won't open-source Swift: Markets define what programmers code Why Apple should open-source Swift: With open source, ""every bug is shallow"" Why Apple won't open-source Swift: Walled gardens have advantages Why Apple should open-source Swift: Openness means proliferation and new markets Why Apple won't open-source Swift: Sharing leads to fragmentation Why Apple should open-source Swift: Open source ensures a robust tools ecosystem Why Apple won't open-source Swift: Openness is a win for Android Why Apple should open-source Swift: Apple owes it to open source Why Apple won't open-source Swift: Apple doesn't owe open source anything Why Apple should open-source Swift: Swift can be cloned Why Apple won't open-source Swift: Who wants a clone?"
swift,3923jp,Kasoki,0,Mon Jun 8 21:15:02 2015 UTC,except windows i guess ...
swift,3923jp,siphillis,9,Mon Jun 8 18:35:09 2015 UTC,Won't be long till someone ports it I guess :P
swift,3923jp,SOD03,3,Mon Jun 8 18:49:20 2015 UTC,Isn't Microsoft adding Swift support to VSCode?
swift,3923jp,siphillis,3,Mon Jun 8 20:38:55 2015 UTC,"I thought it was just Objective-C, right? Don't quote me on this, though."
swift,3923jp,Kasoki,2,Mon Jun 8 20:57:10 2015 UTC,Both.
swift,3923jp,isurujn,1 point,Mon Jun 8 21:46:11 2015 UTC,Well the editor also runs on OS X so it's not that surprising :).
swift,3923jp,renanyoy,1 point,Mon Jun 8 21:03:34 2015 UTC,Not sure about that but there's this.
swift,3923jp,RDSWES,2,Tue Jun 9 06:12:48 2015 UTC,I think it use gcc to build so it will works on windows if some coders take the time to port it.
swift,3923jp,tcdb28,3,Mon Jun 8 19:53:07 2015 UTC,LLVM actually
swift,3923jp,JustAnotherLurker5,1 point,Tue Jun 9 01:12:57 2015 UTC,Specifically LLVM/Clang which isn't available on Windows (hence only OS X & Linux support).
swift,3923jp,klngarthur,1 point,Tue Jun 9 16:05:04 2015 UTC,They are working on it - https://github.com/Microsoft/llvm  http://llvm.org/docs/GettingStartedVS.html
swift,3923jp,niutech,2,Wed Jun 10 00:29:40 2015 UTC,Microsoft is already working on a swift support for windows to go along with the Obj-C tools they're introducing for Windows 10.
swift,3923jp,downvotefodder,1 point,Mon Jun 8 20:34:39 2015 UTC,There is Swift on Windows already: RemObjects Silver.
swift,3923jp,sfrancis928,-16,Tue Jul 7 23:44:36 2015 UTC,"Shitty grammar. This sounds like an exhortation.  Swift has become open source. Or even better, Swift is now open source"
swift,395ogp,dGasim,3,Tue Jun 9 13:00:30 2015 UTC,Use something like aString.characters.count now.
swift,395ogp,vinags,1 point,Tue Jun 9 13:12:06 2015 UTC,Thanks!
swift,395ogp,TheMiamiWhale,4,Tue Jun 9 14:27:24 2015 UTC,"Not sure this is the best solution but it works:  let str: String = ""Hello, World"" print(str.characters.count) // 12   Edit: You can also use endIndex. I'm guessing this is the new ""count"" or ""length"" property of the String struct.  let str: String = ""Hello, World"" print(str.endIndex) // 12"
swift,395ogp,vitaminrad,1 point,Tue Jun 9 13:12:50 2015 UTC,Thanks!
swift,395ogp,Catfish_Man,2,Tue Jun 9 14:27:18 2015 UTC,"This is nasty, but NSString has a length:  let str = ""fudge"" NSString(string: str).length"
swift,395ogp,popescubla,2,Tue Jun 9 16:07:56 2015 UTC,This will not necessarily return the value that you'd expect (for example emoji may count as two or more characters for NSString's purposes).
swift,393d7o,twostraws,2,Mon Jun 8 23:33:31 2015 UTC,Thanks for the effort.
swift,393d7o,vinags,2,Tue Jun 9 03:00:40 2015 UTC,Guys how can I get the length of string in Swift 2.0? My old code was (Swift 1.2):  extension String {    var length : Int { return count(self); } }   But this doesn't work. I keep getting error:  'count' has been explicitly marked unavailable here (Swift.count)  Expected an argument list of type '(T)'
swift,393d7o,dGasim,3,Tue Jun 9 12:58:53 2015 UTC,characters.count
swift,393d7o,daronjay,1 point,Tue Jun 9 13:30:02 2015 UTC,"Can someone summarize what is new in AVFoundation? I found this in the article:  Just look at AVFoundation. Go on, look at it and cry tears of joy."
swift,393d7o,smilinger,4,Tue Jun 9 07:18:58 2015 UTC,"I started to summarise it, then realised it was a bigger effort that would require a specialised article. Also, some of the docs still haven't been updated, so it's hard to give a full overview.  The things that caught my eye from AVFoundation are AVAudioSequencer, AVMusicTrack, AVAudioConverter, AVSpeechSynthesisVoice and AVAsynchronousCIImageFilteringRequest. Then from AVKit you also get the new AVPictureInPictureController, which really couldn't get much easier.  I particularly like the look of this from AVAssetDownloadDelegate: URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad: – they've worked hard to make remote asset loading really clear, which is going to be particularly valuable for large assets like movies. Apple did a great job with this release, I think.  So, I realise this is nothing like the summary you want, but hopefully it's given you some pointers to investigate further. Enjoy!"
swift,393d7o,smilinger,1 point,Tue Jun 9 07:34:54 2015 UTC,Thanks! :)
swift,393d7o,voidref,1 point,Tue Jun 9 07:45:32 2015 UTC,"You seem to have completely missed the point of guard, go and watch Lattner's section in the State of the Platform address."
swift,393d7o,klngarthur,7,Tue Jun 9 02:17:45 2015 UTC,"To expand on what /u/voidref did not, the principle difference between an if else and a guard is that any optionals you unwrap and assign in the guard statement are available for the rest of the code block.  Here is an example from the Swift iBook:  guard let name = person[""name""] else {     return }  print(""Hello \(name)!"")"
swift,393d7o,voidref,5,Tue Jun 9 04:45:44 2015 UTC,"haha, you caught me being completely unhelpful. sorry about that."
swift,393d7o,voidref,3,Tue Jun 9 04:59:11 2015 UTC,"I think ""completely missed the point"" is a bit harsh!  Here's how the Swift book summarises guard: ""Using a guard statement for requirements improves the readability of your code, compared to doing the same check with an if statement. It lets you write the code that’s typically executed without wrapping it in an else block, and it lets you keep the code that handles a violated requirement next to the requirement."" …and that's exactly how I covered it.  I am well aware of its optional unwrapping behaviour, but just chose not to put it in. I did say I wasn't trying to be comprehensive, and there had to be a point where I said, ""actually, I should go to bed now"" :)  Now that it's the morning again, I'll happily go and update the text to make clear this behaviour. Thanks for the feedback!"
swift,393d7o,voidref,2,Tue Jun 9 06:06:40 2015 UTC,"I feel like you are still missing the main intent of the new keyword.  The whole point is to avoid ""if let ..else"" for more readable terse code.  You seem to equate it with ""Well, it's not much different than if"""
swift,393d7o,LuizZak,2,Tue Jun 9 06:35:13 2015 UTC,Fine; I think we'll have to disagree at this point.
swift,394wx0,FutureIsMine,2,Tue Jun 9 07:43:28 2015 UTC,"I haven't tried Xcode 7 yet. But honestly, this sounds like a bug in Xcode respectively the compiler infrastructure.   => https://bugreport.apple.com"
swift,394wx0,fluchtpunkt,1 point,Tue Jun 9 10:11:05 2015 UTC,That code works fine for me in XCode 7 if I paste it into a playground.
swift,394wx0,joshstaiger,1 point,Tue Jun 9 14:30:49 2015 UTC,"Playground yes, Xcode 7 itself, it won't work."
swift,394wx0,joshstaiger,1 point,Tue Jun 9 15:59:44 2015 UTC,"It also seems to work fine if I compile it as a regular source file. This seems to be something specific to your setup, not XCode 7 in general."
swift,394c7o,seamew,5,Tue Jun 9 04:10:30 2015 UTC,"I wrote a long, project-based and free tutorial for Swift, called Hacking with Swift. I also just released a little article on what's new in Swift 2 (see here), and the short version is this: yes, you need to learn Swift 1.2 first, then upgrade to Swift 2. It's a super-set – it builds on Swift 1.2 and adds some great new features, but you still need to understand the core stuff first."
swift,394c7o,twostraws,2,Tue Jun 9 06:24:57 2015 UTC,"I think that you will be fine. The move to Swift 2.0, from what I have read, adds some nice new syntax and features, and also changes around some of the Standard Library. But the core of the language is still very much the same. On top of that, I think that you should be able to pick up on a lot of the new stuff rather quickly. So I would say go for it. (As well, Apple updated their docs about swift to include 2.0. https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/index.html)"
swift,394c7o,Nilhomini,1 point,Tue Jun 9 04:25:48 2015 UTC,"I spent a lot of time with the 1.2 version of ""The Swift Programming Language"". I had a lot of notes and annotations on that iBook and it looks like the V2 book is completely separate.  Should I finish the version I was reading or start from the same section in the V2 book? I just finished classes and structures and started on properties."
swift,394c7o,fsik,1 point,Tue Jun 9 17:19:18 2015 UTC,"Swift 2.0 adds to the current Swift. If you want to jump in, you can start learning right now with the current version. If you want to learn iOS development, I wrote a path to teach yourself iOS dev with Swift and if you want to develop for OS X, I wrote another path to teach yourself OS X dev with Swift."
swift,394c7o,nicoschuele,1 point,Tue Jun 9 07:01:37 2015 UTC,"Swift 2 sounds like a huge change, but it’s 99% similar to Swift 1.  It’s an incremental improvement, rather than a whole new language.  The language has been in constant flux since they introduced it last year, and these recent changes aren’t much more drastic than, say, the 1.1->1.2 changes a few months ago.  And I expect there will be similar changes a few months from now, etc.  It comes with the territory with a language that is as new as Swift.  So, don’t let the ""2"" in the name dissuade you.    However…  Frankly, if you’ve never done any programming outside HTML and CSS, I don’t think Swift is a good place to start right now.  I think you’ll find yourself needlessly frustrated.    There are still numerous bugs in the compiler and IDE.  These are things that are maddening to deal with, even as a veteran programmer.  As a complete beginner, I’d think it would be difficult to know what is expected behavior vs a silly point-in-time bug.  If you’ve already done HTML and CSS, I think JavaScript would be a great place to learn the basics of variables, branching, loops, functions, etc.  If you’re still hungry after that then give Swift a shot!  To a beginner, learning different programming languages sounds daunting just because of the term ""language"" and all the baggage that goes with it.  But in reality it’s nowhere near as difficult as learning a foreign spoken language.  Most programming languages are 90% the same.    It’s more like learning to drive a car or ride a bike.  Once you learn to drive the first one, the basic concepts apply to every one you’ll ever meet.  But, still probably easier to learn to drive a reliable sedan (JavaScript, Python, Ruby, etc), than an experimental hot rod where where the engine will die randomly and they’re constantly changing the pedals (Swift) :)"
swift,394c7o,joshstaiger,2,Tue Jun 9 13:58:48 2015 UTC,"agree with josh here.  It really depends on your knowledge level.  Do you have a good understanding of basic programming constructs such as variables, arrays, if statements, loops and functions, etc.  What's your level of understanding on object-oriented programming basics such as classes, interfaces, encapsulation, inheritance, abstractions, events, etc.?  If you don't have a good grasp on those already then you're a true newbie and I would suggest as Josh did that you find a more stable language to learn the basics.    Don't get me wrong there are plenty of Swift beginner courses out there but just be prepared to deal with a lot of frustration due to the immaturity of the language that you wouldn't have to deal with if you were learning something like Android programming using Java (which might not be a bad place to start considering its more stable and there are lots of tutorials and resources out there).  In short it really boils down to what are you willing to put up with.  If you really want to learn iOS right now and have the time to devote to it then go for it.  Find a beginner course that emphasizes learning the basics of programming while using Swift and have at it.  Just be prepared to deal with the growing pains that come along with a language so new."
swift,394c7o,shooky1,1 point,Tue Jun 9 15:53:30 2015 UTC,"No argument.  Passion overcomes a lot, and I really dig Swift.  Just know that if you’re learning Swift and find it frustrating, it’s likely not just you.    There are a lot of things about it that are deeply frustrating at the moment.  Like XCode crashing upwards of seven times a minute when the Swift compiler encounters a certain edge-case syntax.  Or local variables randomly not showing up in the Debugger.  Or having code that previously compiled break in new point releases.  And these aren’t problems you’ll have in more established languages."
swift,393kqu,snagra,2,Tue Jun 9 00:32:12 2015 UTC,"Congrats! I see duolingo on there, grats to that developer (I don't know her handle here!). Surprised to not see the reddit iama app in there."
swift,3929dw,freeys,6,Mon Jun 8 18:56:43 2015 UTC,"Potentially. Once it's open sourced, people can build compilers for it for other platforms, modify the language and create forks of it, and even possibly build custom IDEs. I'd really like to see an IDE for iOS apps come to Linux as a result, although I'm not sure that'll happen..."
swift,3929dw,pianogamer05,2,Mon Jun 8 21:27:59 2015 UTC,"The issue with IDEs on other platform has always been the code signing.  There are a multitude of options for developing iOS projects on other platforms (eg, Unity, Xamarin, Kivy, etc), you just can't build the final application using them.  Open sourcing the language itself is pretty unlikely to remove that restriction."
swift,3929dw,klngarthur,1 point,Tue Jun 9 04:50:44 2015 UTC,"I hope this signals Apple becoming more friendly with Linux, though. That'd be swell."
swift,3929dw,pianogamer05,3,Tue Jun 9 20:07:19 2015 UTC,"To put it bluntly, a non-opensource Swift had absolutely 0 chance of becoming popular outside the niche of OS X applications.  Now it might have a chance."
swift,3929dw,vpkaihla,0,Tue Jun 9 07:39:47 2015 UTC,Eh how would it even have been technically possible for it to be  popular outside of OS X applications?
swift,3929dw,lusion,2,Tue Jun 9 15:17:24 2015 UTC,"I love Swift and going open source is great, but I don't really see it leading to very much change in the current environment. I'm sure eventually someone will get it running on the web and do a few neat things here and there, but without support from Apple I doubt it would get much further than that. Swift is a great option, but there are already too many great options available."
swift,3929dw,alt51,1 point,Tue Jun 9 04:45:48 2015 UTC,"Imagine a world where a developer can build the entire user experience with the same language. Everything from the client app, to the server backend, to the firmware on external accessories, to scripting during development. The mental load needed to master those skill sets (or at least be highly proficient in them) drops noticeably.  I think this has been a dream for a long time but has been unattainable until Swift. Or at least, that's the idea behind Swift.  Making it OpenSource is the only way to achieve this goal. Apple needs community buy in and support. Not just a kickass language.  Edit: Java has a lot of issues, the foremost of which is performance due to running in a virtual machine. Swift does not have this issue. In fact, Swift will surpass Objective-C & C++ in performance for many things (maybe everything eventually). Yet Swift is as expressive & easy to write/read/understand/maintain as a very high level scripting language such as JavaScript or Python."
swift,3929dw,tcdb28,-1,Tue Jun 9 17:27:54 2015 UTC,It means that there's one more thing that Apple is giving away that the Linux kiddies will ignore when they're bitching that Apple doesn't give away their work.
swift,392e74,aledclar,6,Mon Jun 8 19:28:32 2015 UTC,"You can try my book, which is free and project-based: Hacking with Swift."
swift,392e74,twostraws,1 point,Mon Jun 8 23:48:49 2015 UTC,Thanks I definitely will!
swift,392e74,joshstaiger,1 point,Tue Jun 9 01:26:18 2015 UTC,I'm still on project 1 but so far I really love your book/series! I will definitely be sending a donation your way once I get over some of the humps I'm having. I posted in the /r/hackingwithswift subreddit under the project 1 thread about some problems I'm having!   Thanks!
swift,392e74,i_Hate_us,2,Tue Jun 9 10:59:50 2015 UTC,"Honestly, Apple’s own book, “The Swift Programming Language” is a great intro, straight from the horses mouth:  https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0"
swift,392e74,sbrown75,1 point,Tue Jun 9 14:33:00 2015 UTC,I have this in my library but haven't really delved into it. Thanks for the recommendation!
swift,392e74,sbrown75,1 point,Tue Jun 9 14:43:13 2015 UTC,"its great if you already have some experience in obj-c and xcode, but if you want to learn ios development then there is not much info about it there, but great intro like you said."
swift,392e74,crawler23,1 point,Wed Jun 10 02:18:01 2015 UTC,"The resources that have gotten me the furthest are the iTunesU Stanford videos, which are available for free.  Check out Developing iOS 8 Apps with Swift, with Paul Hegarty as the instructor.  Be warned: These aren't quick tutorials.  It's a deep dive into the basics of iOS development.  The iTunesU course has all of the course reading, videos of the lectures, and PDFs of the slides and assignments.  It can take you pretty far.  The version I did used Swift 1.2."
swift,3933wx,cheifshiggum,2,Mon Jun 8 22:23:43 2015 UTC,You can view it..... it's on Apple's developer website.
swift,3933wx,RDSWES,1 point,Tue Jun 9 01:08:51 2015 UTC,"Since it's a free book, I would say you might be able to find a torrent of the file."
swift,3933wx,alt51,1 point,Tue Jun 9 05:06:54 2015 UTC,You can view the whole thing online here:  https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0  It’s the exact same content.
swift,3933wx,joshstaiger,1 point,Tue Jun 9 14:06:41 2015 UTC,"I can't view this in the UK at the moment.   That was most likely a CDN propagation issue. It probably was in the UK iBooks store an hour after you've asked.   After the keynote I couldn't get it in the german store either. But that changed one or two hours later.    It's free so I don't see any problem.   Be careful, free content is copyrighted as well."
swift,392zpx,hawkfalcon,1 point,Mon Jun 8 21:53:29 2015 UTC,Damnit I just payed the full price for iOS and OS X a few weeks ago
swift,392zpx,Kametrixom,2,Mon Jun 8 22:02:16 2015 UTC,Looks like that means you just paid for two years of the new program. Not bad.
swift,392zpx,_buch,1 point,Tue Jun 9 00:09:40 2015 UTC,That'd be awesome! But I doubt it..
swift,392zpx,Kametrixom,2,Tue Jun 9 01:06:39 2015 UTC,"Enrolled as an Individual. Your account has been automatically updated. To access development resources and view your account, sign in to Member Center and accept the new program license agreement.  Your expiration date has been extended to include the sum of the days that remained in each program."
swift,392zpx,_buch,1 point,Tue Jun 9 02:39:13 2015 UTC,"Oh wow! I just thought you were joking, but that's actually really awesome!"
swift,393njo,thick_sauce,3,Tue Jun 9 00:54:23 2015 UTC,half way through cs degree  intermediate developer   Wooooooooooooooooo
swift,393njo,Real_Life_Human,1 point,Tue Jun 9 03:43:09 2015 UTC,woooooooooooooooooooooooo
swift,393njo,burritofridays,1 point,Tue Jun 9 04:33:37 2015 UTC,I'd say hit up raywenderlich.com and just go to town.
swift,393njo,twostraws,1 point,Tue Jun 9 07:06:03 2015 UTC,"You're welcome to try my own Swift book – it's free, so I guess you don't lose much if you don't like it! It's here: Hacking with Swift. Have fun!"
swift,393gkg,jayjiffy,2,Mon Jun 8 23:59:38 2015 UTC,"You might be overthinking this. You don't adjust winning quotas, this is not a biased lottery. You basically want to remove people from the pool, that is used to draw the winner.   A naive implementation could be locking something like this:   //: Playground - noun: a place where people can play  import UIKit  class User: Printable {     let name: String     var driveCount = 0      init(name: String) {         self.name = name     }      var description: String {         get {             return self.name         }     } }  var users = [User(name: ""Paul""), User(name: ""Jane""), User(name: ""Tim""), User(name: ""Kathrin"")]  func pickDriver() -> User {     let sortedDrivers = sorted(users) { $0.driveCount < $1.driveCount }     let minScore = sortedDrivers.first!.driveCount     let filteredDrivers = sortedDrivers.filter({ $0.driveCount == minScore })     let numberOfDrivers = count(filteredDrivers)     let index = Int(arc4random_uniform(UInt32(numberOfDrivers)))     let pickedDriver = filteredDrivers[index]     println(""Picked driver \(pickedDriver) from \(filteredDrivers)"")     pickedDriver.driveCount = pickedDriver.driveCount + 1     return pickedDriver }  for _ in 0..<10 {     pickDriver() }   Which yields:  Picked driver Kathrin from [Paul, Jane, Tim, Kathrin] Picked driver Paul from [Paul, Jane, Tim] Picked driver Tim from [Jane, Tim] Picked driver Jane from [Jane] Picked driver Tim from [Paul, Jane, Tim, Kathrin] Picked driver Jane from [Paul, Jane, Kathrin] Picked driver Kathrin from [Paul, Kathrin] Picked driver Paul from [Paul] Picked driver Jane from [Paul, Jane, Tim, Kathrin] Picked driver Tim from [Paul, Tim, Kathrin]"
swift,393gkg,fluchtpunkt,1 point,Tue Jun 9 13:17:56 2015 UTC,"Wow, that was exactly what I needed!"
swift,392kvv,D4RKVIPER33,7,Mon Jun 8 20:13:03 2015 UTC,"I just posted some examples of various Swift 2 features: What's new in Swift 2. It's not exhaustive, but it does go over the major improvements and gives code examples to get you started.  Swift 2 is an incremental improvement on Swift 1.2, so you should go ahead and follow your Swift 1.2 tutorials of choice before even looking at Swift 2 seriously."
swift,392kvv,twostraws,2,Mon Jun 8 23:43:24 2015 UTC,"Wow, you work fast!"
swift,392kvv,backtowriting,3,Tue Jun 9 00:07:13 2015 UTC,"Give us at least until after the WWDC week :)  Swift 1.2 tutorials are still very relevant. While Swift 2 has many major changes, most of it are add-ons rather than a restructure of how Swift works.   There are some syntactical changes, but very little compared to the scope of the current Swift language.  For example:   do-while loops have been changed to repeat-while new error handling mechanism - try/catch blocks labeled loop structures  go to www.raywenderlich.com, they have the best and most diverse tutorials in the interwebz on Swift."
swift,392kvv,flCer,1 point,Mon Jun 8 21:30:50 2015 UTC,"Thanks, I'll give it a crack :P"
swift,392kvv,pianogamer05,2,Mon Jun 8 21:33:57 2015 UTC,There isn't too much different with the new language as far as syntax goes; you should be able to use the existing Swift tutorials.
swift,392kvv,dwltz,2,Mon Jun 8 21:31:40 2015 UTC,You can definitely use swift 1.2 tutorials for bows swift 2.0 is more an extension of swift 1.2 than a replacement. Once you want start using swift 2.0 you can use the migration tools in Xcode 7 to help you with that.
swift,392kvv,ChristianGeek,1 point,Tue Jun 9 06:39:18 2015 UTC,Apple has already updated their free Swift books on iBooks (and online in the developer beta area).  There are currently two copies of each book on the iBookstore...one for 1.2 and one for 2.0 (presumably the latter will replace the former when 2.0 is officially released). Here are the 2.0 links:  https://itunes.apple.com/us/book/swift-programming-language/id1002622538  https://itunes.apple.com/us/book/using-swift-cocoa-objective/id1002624212
swift,392kvv,nicoschuele,1 point,Fri Jun 19 23:03:36 2015 UTC,"As Swift 2.0 is an update and not an in-depth change, you can happily start learning now. If you want to learn how to develop apps for iOS with Swift (and first learn Swift), I wrote a path containing the learning material you'll need: nicoschuele.com/posts/how-to-teach-yourself-ios-app-development-with-swift-properly."
swift,39278c,nicoschuele,1 point,Mon Jun 8 18:42:22 2015 UTC,"I think Swift could be a great general purpose programming language for many purposes, and the web could be a great application.  I’d hesitate to say ""soon"" though :)  I think it will take a lot of time to explore the nooks and crannies of what a good Swift web framework might look like.  It won’t be toppling Rails, Django, PHP or NodeJS in the next year.  5-10 years?  Who knows?  :)"
swift,39278c,joshstaiger,0,Tue Jun 9 14:14:55 2015 UTC,its not about the performances. there is a lot of web sites made with ruby (far worse than php imo) that works perfectly fine with millions of users. Its about caching
swift,39278c,EZPZ420,3,Mon Jun 8 20:36:31 2015 UTC,Why is Ruby (far) worse than PHP? Curious.
swift,39278c,nshoes,2,Mon Jun 8 23:32:04 2015 UTC,"PHP has some advantages over Ruby, it gets a lot of hate for many reasons, I wouldn't dare say one is better than the other they're pretty similar.   http://www.comentum.com/ruby-on-rails-vs-php-comparison.html"
swift,39278c,dvidsilva,1 point,Wed Jun 10 00:13:23 2015 UTC,They are definitely similar in some ways. The only thing I disagree with that article is that PHP is easy to learn. I had to take a PHP class after a few years of knowing and working in Ruby and I didn't like it/thought it was harder and more convoluted.  http://www.leonardteo.com/2012/07/ruby-on-rails-vs-php-the-good-the-bad/
swift,39278c,nshoes,-4,Wed Jun 10 00:51:27 2015 UTC,"If it needs compilation then I'd say...no. What makes scripting languages great is that you can bootstrap easily to a server. If it requires compilation, I don't think it will work. C++ and C# are also open source and you don't see them being used as web frameworks as much as php,python or ruby."
swift,39278c,mipadi,4,Mon Jun 8 19:02:09 2015 UTC,C# is used quite a bit for server-side development. So is Java. And Go is becoming increasingly popular.
swift,39278c,albeva,2,Mon Jun 8 19:36:41 2015 UTC,"developers are used to running all sorts of tools this day and age - grunt, package managers, etc. If compilation is fast enough it is not really a problem. Bigger question is what would be the advantage be?"
swift,39278c,klngarthur,1 point,Mon Jun 8 19:30:00 2015 UTC,"I was mostly thinking about speed, concurrency and increased developer productivity of using an expressive, statically typed language."
swift,39278c,klngarthur,0,Mon Jun 8 20:01:20 2015 UTC,"If speed mattered, no one would use these languages in the first place.   Most websites simply do not need a fast compiled language because their bottlenecks are elsewhere (eg, the database).  Since performance isn't terribly important for most sites, it then limits the utility of concurrency as well.    Also, when comparing to the expressiveness of Ruby or Python, being statically typed is a limitation, not an advantage.  Ruby and Python frameworks/libraries frequently make heavy use of meta programming features that simply aren't possible in Swift due to its static nature.  Having static guarantees is a lot less important to for a lot websites trying to get off the ground than simply having an ORM that automagically works by giving it a database url and credentials, for example.   To answer your original question, I'm sure there will be Swift servers and web frameworks.  I also wouldn't be surprised to see legitimate adoption of the better written ones. I really doubt, though, that they will completely displace the dynamic languages anymore than languages like C#, Scala, Rust, or Go (just to name a few) have."
swift,39278c,JustAnotherLurker5,3,Tue Jun 9 03:58:15 2015 UTC,"Your answer makes sense but I strongly disagree with this:   being statically typed is a limitation   I work on a very large Ruby codebase at my day job and tbh, maintenance is the stuff nightmares are made of. Most of the time we lose would not be if the code was written in a statically typed language such as C# (or Swift!). I agree that you can build things very quickly using a dynamic language but the you can also make a total mess much, much faster."
swift,39278c,klngarthur,1 point,Tue Jun 9 07:25:14 2015 UTC,"You're changing your argument by taking mine out of context. Yes, you can make a mess in Ruby. I never argued that Ruby is safer or even better, just that it is more expressive."
swift,39278c,JustAnotherLurker5,1 point,Tue Jun 9 07:42:42 2015 UTC,There are several Haskell web frameworks and it's pretty statically typed =0
swift,39278c,nutyourself,1 point,Sat Jun 13 16:42:52 2015 UTC,"Yes, there are.  Not sure what that has to do with my point, though."
swift,39278c,Kametrixom,2,Sat Jun 13 18:11:10 2015 UTC,I replied to the wrong gp thread =) it has nothing to do with your point!
swift,39278c,alt51,1 point,Sun Jun 14 18:44:24 2015 UTC,"Exactly... look at Node.js, TONS of people write in CoffeeScript, or TypeScript or other ES6 which then requires running a job to com/trans-pile the code. Doing that with Swift shouldn't be a problem.  But I will say it would be nice if it wasn't required. I thought you can write Swift scripts anyway. I know I can do it on the command line... And I also thought I saw a REPL somewhere too"
swift,392uot,pitupitu,1 point,Mon Jun 8 21:18:33 2015 UTC,Yay. Another style guide.
swift,392mco,TheNebulizer,2,Mon Jun 8 20:22:40 2015 UTC,"I downloaded it, but I only tested it on a working app (converting it to Swift 2.0). I'd wait until you've finished and released it before testing it on 7. You have months before iOS 9/OS 10.11 will roll out to users, and plenty of time to test your app with the new version of Swift."
swift,392mco,pianogamer05,1 point,Mon Jun 8 21:29:32 2015 UTC,Did you run into any problems converting to 2.0 or running it on Xcode 7?
swift,392mco,CatsAkimbo,2,Mon Jun 8 22:28:23 2015 UTC,"Not really. I had a few syntax errors after the conversion, but they were easily resolved."
swift,392mco,pianogamer05,1 point,Tue Jun 9 00:33:44 2015 UTC,I’m thinking about it so I no longer have to deal with constant workarounds to load to my device without a dev account.
swift,392mco,AxeEffect3890,1 point,Tue Jun 9 01:35:47 2015 UTC,Generally Apple does not let you release apps built with preview or beta builds of XCode. Unless you are planning to release after September you will need it to work with the current version of the tools.
swift,392mco,klngarthur,1 point,Tue Jun 9 03:12:50 2015 UTC,"I would finish the app on Xcode 6, at least until the final Xcode 7 is released. Not only does apple not allow submissions signed by beta software, a beta might not be stable / fast enough for you to use as a production environment"
swift,392mco,dwltz,1 point,Tue Jun 9 06:35:31 2015 UTC,"No. If you develop in Swift your biggest problem is that you have to convert your Source Code to Swift 2.0. Which means you can't go back to Xcode 6, which means you can't release your app until Xcode 7 is final, which will probably only be in September.   Unfortunately Swift made Xcode betas pretty useless for ongoing projects. With Objective-C you could develop in the Beta and go back to the old version for releases. With Swift that doesn't work because the Swift syntax of the two versions are incompatible.     And Yes. You can have Xcode stable and Xcode beta on your computer at the same time. If you want to play with a new project or playground go ahead and download it. Just don't convert code that you want to release before fall.   If you want to test for compatibility with iOS9 you should use Ad-Hoc deployment or Testflight to get your app that was compiled in Xcode 6 onto an iOS9 device. Xcode 7 won't help because you have to convert your Swift code, and Xcode 6 can't deploy to iOS9 devices."
swift,392mco,fluchtpunkt,1 point,Tue Jun 9 09:56:40 2015 UTC,Xcode 6 can deploy to iOS 9 devices as long as you plug your iPhone into Xcode 7 to process the symbols first.
swift,392mco,lyinsteve,1 point,Thu Jun 11 05:05:54 2015 UTC,"It installs separately and cleanly from old xcode, so I can't come up with compelling reasons why not to at least check out the beta, unless you think it will be too much of a time sink.  If you don't have a paid development subscription, the ability to run programs on my phone without the $99/year fee I think is well worth running the beta.  I used to subscribe, then one year I had financial problems and letting the subscription lapse was an easy choice.  It's nice to be able to put programs on my phone again."
swift,392l9z,xlogic87,3,Mon Jun 8 20:15:36 2015 UTC,I wrote up some examples here: What's new in Swift 2 – you might find it useful.
swift,392ejy,Man_in_the_Suit_1211,1 point,Mon Jun 8 19:31:09 2015 UTC,Stanford's latest iOS programming class is on swift i think. There's an app Swifty that lets you learn programming just using Swift on your phone. Apple's documentation is also a really good place to start.
swift,392ejy,Choppa790,3,Mon Jun 8 19:48:34 2015 UTC,Stanford's course is NOT for beginners. You need to be very familiar with OOP etc.
swift,392ejy,Sebaall,1 point,Mon Jun 8 20:23:08 2015 UTC,This is exactly what we did - Swift Programming from Scratch We are also going to launch the exercise platform app soon :)
swift,391284,banukatanaya,2,Mon Jun 8 13:54:23 2015 UTC,"If you need to store more than just a bit of data, use CoreData or Realm, it's more effort to set up, but works nicely and has many features.  Also by user I think you're refering to the user's icloud account? If so, you can set up a CoreData store in the private icloud, which will be specific to that user, see here for more information.  If you're having trouble getting started with CoreData I could give you a simple sample project. (I don't have any experience with Realm and I don't know whether it's possible to use iCloud with it, but I heard lots of good things about Realm, it's easier and swiftier)  Oh and: NSUserDefaults is good for settings, use CoreData or Realm for user data."
swift,391284,Kametrixom,1 point,Mon Jun 8 14:21:16 2015 UTC,thanks! :) i'll check out core data and realm. At the moment i'm thinking of learning the parse framework for this since i used parse as the backend to store the username and passwords. Any thoughts on using parse to store data?
swift,391284,Kametrixom,2,Mon Jun 8 14:57:04 2015 UTC,"Haven't even looked into Parse, so I can't help you there ;)"
swift,391284,criosist,1 point,Mon Jun 8 15:02:03 2015 UTC,"if your worried about it going cross user i just prefix the setting with the username or id of the user, so if my user is called 'bob"" i would use kbobUsersettingaudiothing"
swift,390aas,YouHawk,2,Mon Jun 8 08:47:50 2015 UTC,"Not sure, but my best bet would be to the Core Data Model, and for each of your entities look in the attibutes column on the right. There should be a class name ID that you'll want to change from SeriesReminder.Series to Series_Log.Series"
swift,390aas,nosais,1 point,Mon Jun 8 10:04:36 2015 UTC,"worked, ty :)"
swift,390aas,auntyblackchild,0,Mon Jun 8 11:04:13 2015 UTC,Can you tell me how to fix this?   Entitled much?
swift,3903y1,sabiland,1 point,Mon Jun 8 07:24:29 2015 UTC,"What do you mean unplayable?  Yeah, instructions are too vague...  Up / Down / Left / Right are the only available gestures + you can make a move ONLY if the edge color around you is Green.   The moment you make a move, the edge around you gets Red. And the first time you touch left/right/top/bottom border you can make a move again, etc."
swift,38xcl0,Esqarrouth,2,Sun Jun 7 17:22:42 2015 UTC,Best licence ever :D
swift,38xcl0,Kametrixom,2,Sun Jun 7 18:43:12 2015 UTC,"Looks really good. Well done :)  Quick question, why do you set the width of the view based on the screen width? I can see the obvious reason being in theory this is for displaying an activity that the user needs to wait for before they can interact, but with multiple size classes etc, I may have an iPad App with Master-Detail, I use your view for my detail loading, but I don't want to block the user selecting a different option in my master in case they change their mind.  I would have stuck with the width being based on the sender VC as you have done with the layout.  Also a nice little future feature would be able to set the colour's, font etc using Interface Builder. But that's not a biggie.  Still amazing work :)"
swift,38xcl0,naughty_ottsel,1 point,Mon Jun 8 15:27:07 2015 UTC,"Size of the screen width to make it simple and show the view in the middle of every device. I have never thought of master-detail application, good call, I'll try that.  I do not use Interface Builder so no idea about that sorry :("
swift,38xcl0,naughty_ottsel,1 point,Thu Jun 11 10:25:53 2015 UTC,"No worries, I will try and find some time to fork it and add in some ideas, subscribe to traits collection changing etc. Will come in handy with the new multitasking features for iPad on iOS 9 :)"
swift,38zgvr,Bleuground,3,Mon Jun 8 03:30:45 2015 UTC,"You need to enable the local session.  AVAudioSession.sharedInstance().setCategory(AVAudioSessionCategoryPlayback, error: nil) AVAudioSession.sharedInstance().setActive(true, error: nil)"
swift,38z6co,nosais,4,Mon Jun 8 02:03:08 2015 UTC,"You might look at moving the boilerplate CoreData code out of your AppDelegate into another class dedicated to persistence. You could then make the class a singleton so that whenever you request the managed object context you get the same one, without having to cast the AppDelegate all the time.  let managedObjectContext = Persistence.sharedInstance.managedObjectContext"
swift,38z6co,yeskia,2,Mon Jun 8 03:05:52 2015 UTC,Have you taken a look at Dependency Injection?  http://typhoonframework.org
swift,38yczu,Valveware,2,Sun Jun 7 22:01:54 2015 UTC,"By writing [[Tile]]() you initialized your array to an empty array of type [Tile], which does not have anything in it. I think you need to do something more like this:  var tiles = [[Tile]](count: 10, repeatedValue: [Tile](count: 10, repeatedValue: initialTile))   which gives you a 10x10 array with every element initialized to initialTile. If you wanted it to be initialized with nothing (nil), you can do this:  var tiles = [[Tile?]](count: 10, repeatedValue: [Tile?](count: 10, repeatedValue: nil))"
swift,38yczu,Kametrixom,1 point,Sun Jun 7 23:14:51 2015 UTC,"Thanks a lot Kametrixom!  This solved it for me, thanks for the in-depth information, I was't able myself to find the documentation myself.  Have a good one!"
swift,38yczu,vinags,2,Mon Jun 8 01:03:23 2015 UTC,"I don't think this applies in your case, but to add to an array which has no elements (as in your tiles variable on creation), use the append method. e.g. tiles.append([[tile]]) which will add a new row of one column, containing 'tile'; or tiles[1].append([tile]) which will add a new element to the 2nd row, containing 'tile'."
swift,38xna5,ENTROPYINTENSIFIES,2,Sun Jun 7 18:45:10 2015 UTC,"Coming from a Pascal background (don't laugh, it is a powerful language), I don't want to get into bad habits with my coding in Swift. Ray Wenderlich has a guide to the style that he uses, and it seems OK.  Can you point me in the direction of the style that is the consensus for writing code in Swift, if you don't think Ray's is quite right.  I know that this is a personal taste, but there seems to be quite a bit of consensus around the traps for Swift."
swift,38xna5,vinags,2,Thu Jun 11 23:00:28 2015 UTC,"I think that guide is representative of the consensus, there is an update here as well.  They draw from the community and apple's documentation, APIs, and example code, it seems well thought out and represents swift style."
swift,38ylpz,TheRealBitBass,2,Sun Jun 7 23:11:31 2015 UTC,What about Firebase?
swift,38ylpz,eviltofu,1 point,Mon Jun 8 03:18:52 2015 UTC,That might be what I'm looking for.  The tutorials seem a little more straightforward and they include clear Swift instructions.  Thanks!
swift,38xqo6,TortugaChris,2,Sun Jun 7 19:10:36 2015 UTC,Sounds like you only made a single pointer to hold one coin.  Try putting all of the coins into a collection and iterate through it while applying the same logic.
swift,38xqo6,Rexflame,1 point,Sun Jun 7 20:16:18 2015 UTC,Thank you. Do you know any where I could find instructions on how to do that?
swift,38xqo6,Rexflame,1 point,Sun Jun 7 20:55:34 2015 UTC,https://developer.apple.com/library/mac/documentation/Swift/Conceptual/Swift_Programming_Language/CollectionTypes.html  look up iterating and how to add stuff.
swift,38xq3g,dotmax,1 point,Sun Jun 7 19:06:02 2015 UTC,And yes a class with static properties is totally acceptable: https://thatthinginswift.com/singletons/
swift,38xq3g,Kametrixom,-1,Sun Jun 7 20:00:20 2015 UTC,"You could also just use a globar variable, has the same behaviour as a singleton"
swift,38xn0d,YouHawk,1 point,Sun Jun 7 18:43:12 2015 UTC,"A ViewController can only perform segues that are directly attached to it. In this case you should read about ""unwind"" segues. The basic idea is that regular segues move you forward, usually adding or replacing ViewControllers in the hierarchy, and unwind segues do the opposite - move backwards, or undo previous segues."
swift,38xn0d,inscrutablemike,1 point,Sun Jun 7 19:49:06 2015 UTC,thanks for enlighting me. I'll take a look at it.
swift,38xo8k,Hgunz47,2,Sun Jun 7 18:52:21 2015 UTC,"iOS. The default coordinate system has its origin at the upper left of the drawing area, and positive values extend down and to the right from it.   Probably the case here."
swift,38xo8k,Steaps,1 point,Sun Jun 7 20:57:11 2015 UTC,"My button is exactly where I want it. Now even if I give the label the same exact points, why don't I see the label right on top of the button?"
swift,38xo8k,MrMaverick82,2,Sun Jun 7 21:23:27 2015 UTC,"Maybe you are using the unbuttons properties before the coordinates are set.   But besides that, you might want to look into autolayout. Which is the way you ""should"" solve this."
swift,38xo8k,asniper,0,Sun Jun 7 21:48:34 2015 UTC,"Auto layout isn't the only correct way of doing this, via frames is still a favoured way with a lot of people.  Yes I noticed your ""should"""
swift,38xo8k,lyinsteve,2,Sun Jun 7 22:40:27 2015 UTC,"'Favored by a lot of people' and 'preferred' are two very different statements.  Apple wholeheartedly, emphatically recommends using AutoLayout because it handles different devices, language styles, text sizes, and much more. Most frame code people write is just half-assedly implementing part of what AutoLayout gives you for free."
swift,38xo8k,asniper,1 point,Thu Jun 11 05:14:01 2015 UTC,"I can still centre a view via frames or auto layout with the same amount of work and both look exactly the same on a 4s or 6plus. ""Free"" implies set once without any additional work which isn't true. Going from wAny-hAny to wCompact-hAny or any extreme difference."
swift,38xo8k,asniper,1 point,Thu Jun 11 10:54:26 2015 UTC,If you don't see the label on top at the same coordinates its because you added the button to the subview after the label
swift,38xo8k,driftme,1 point,Sun Jun 7 22:38:03 2015 UTC,"You should be setting the frame, not position. Position isn't even a property of a UILabel. Also CGPointMake() isn't a swift function..   This shouldn't even compile.  Try what you're doing except set the frame instead of position. As well, adding 10 to the yPos will make it 10 points lower. If you added it to your view under the button it would be hidden"
swift,38w48z,AFakeman,1 point,Sun Jun 7 09:20:38 2015 UTC,"Animations should be moved to another thread using the grand central dispatch to prevent them from stopping due to interaction on the main thread.  This is true for all animations, and can easily be seen by tossing an animation in a table view and scrolling.  I'm not near my computer, if you're still having issues I'll post some sample code later."
swift,38w48z,Stephen110,1 point,Sun Jun 7 10:55:02 2015 UTC,"Will appreciate some examples, thank you for your time."
swift,38uj18,_stfu_donnie,13,Sat Jun 6 23:06:13 2015 UTC,"I’m optimistic it will be open sourced long term, but I’d be very surprised if they open-source it this early on.  Then again, I was surprised at Swift period last year, so who knows."
swift,38uj18,joshstaiger,8,Sun Jun 7 01:40:57 2015 UTC,This would be a pretty big step for Apple if they did this. Guess we will have to wait till Monday to find out.
swift,38uj18,Beowolve,9,Sat Jun 6 23:39:25 2015 UTC,"IIRC, Swift was always planned to be open-source, but there was no timetable set."
swift,38uj18,siphillis,5,Sun Jun 7 02:00:08 2015 UTC,"No, that's not the case.  From the horse's mouth:   Guys, feel free to make up your own dragons if you want, but your speculation is just that: speculation.  We literally have not even discussed this yet, because we have a ton of work to do to respond to the huge volume of feedback we're getting, and have to get a huge number of things (e.g. access control!) done before the 1.0 release this fall.  You can imagine that many of us want it to be open source and part of llvm, but the discussion hasn't happened yet, and won't for some time.  Sorry to leave you all hanging, but there is just far too much to deal with right now."
swift,38uj18,JimDabell,1 point,Sun Jun 7 10:55:26 2015 UTC,"Well, this is awkward..."
swift,38uj18,siphillis,1 point,Mon Jun 8 20:33:21 2015 UTC,"Not really.  The fact that they have subsequently decided to open-source it doesn't change the fact that it wasn't always planned to be that way.  As Chris Lattner said, the decision wasn't made until a lot later."
swift,38uj18,JimDabell,3,Mon Jun 8 20:55:37 2015 UTC,"It'd be pretty awesome, but given their history of openness with Objective-C (clang + runtime), I wouldn't exactly call it a big step."
swift,38uj18,FUCKYOURENGLISH,0,Sun Jun 7 02:10:58 2015 UTC,"Microsoft is doing it with .Net, they probably figure to do the same."
swift,38uj18,fleshintogear,4,Sun Jun 7 00:05:40 2015 UTC,"Making the language open source would be something normal for Apple to do - Objective-C's runtime has been open source for well over a decade and clang, the compiler front end to LLVM has been under a permissive license for its entire existence."
swift,38uj18,FUCKYOURENGLISH,6,Sun Jun 7 02:11:08 2015 UTC,"@siracusa:   2015-06-06 17:41:05 UTC  On the latest @atpfm, I forgot to talk about Swift going open source at WWDC. Now all you get is this tweet.     [Mistake?] [Suggestion] [FAQ] [Code] [Issues]"
swift,38uj18,TweetPoster,2,Sat Jun 6 23:07:11 2015 UTC,"I'd love for it to be open sourced. I want to build some intensive programs, but apple doesn't offer server level os support. If I knew I could scale it to high end servers running Linux I'd  use swift."
swift,38uj18,jeblis,2,Sun Jun 7 02:36:58 2015 UTC,"Open source isn't good enough, If Apple seriously wants to see wide adoption they need to consider submitting the language to an international standards body.   In the end a well written standard give potential users assurances about the language and its future.  Without the drag of a standard Apple would be free to change the language often."
swift,38uj18,spinwizard69,3,Sun Jun 7 11:03:47 2015 UTC,"Which sounds like a plus for Apple, being flexible and free as they please."
swift,38uj18,ralf_,1 point,Sun Jun 7 13:22:25 2015 UTC,"I can see Apple open sourcing Swift, but frankly doubt they will submit it to be a standard.  ""Without the drag of a standard Apple would be free to change the language often.""  You provide the reason they would not want it to be a standard.... IF they need to change it they can."
swift,38uj18,RDSWES,1 point,Sun Jun 7 16:25:27 2015 UTC,"I can see Apple open sourcing Swift, but frankly doubt they will submit it to be a standard.   Maybe but the lack of a standard would undermine the desirability of Swift outside of Apple.     You provide the reason they would not want it to be a standard.... IF they need to change it they can.   Well that is one perspective but we must remember that Apple has in fact presented other languages to standards bodies, OpenCL for example.  Of course this isn't ANSI  or some other widely accepted organization."
swift,38uj18,spinwizard69,1 point,Sun Jun 7 17:24:46 2015 UTC,"It still doesn't have to be a standard to work cross platform, have GO , Rust or any of the other newer languages been submitted to be standard?, not AFAIK.  Silver already lets you use Swift on.NET, Java and Android.  http://elementscompiler.com/elements/silver/"
swift,38vtau,vinags,2,Sun Jun 7 06:39:12 2015 UTC,"For reference, which language are you coming from that makes the swift implementation of arrays seem weird?"
swift,38vtau,Stephen110,1 point,Sun Jun 7 11:16:16 2015 UTC,"I guess I'm going to show my age here. Mainly Pascal -- from Turbo Pascal to Delphi, and then Lazarus when I retired with a Mac. Did quite a bit with C and  C++, but, being a lazy type (pun intended), I stuck to creating symmetrical arrays and accessing them using subscripts.  Things like (count: 3, repeatValue: [Int](count:2, repeatValue:5)) and board.append([Int](count:3, repeatedValue:10)) are foreign to me, and required a deeper understanding of how arrays work."
swift,38tabe,cheifshiggum,1 point,Sat Jun 6 17:03:00 2015 UTC,"Good on you for putting it out there. I wasn't aware of NSUndoManager, so even if I don't use the library, thank you for bringing that to my attention. I recently hacked together my own implementation of an undo system. I'll have to poke around with this to see if it would be more reliable."
swift,38v0xz,dannybrown9,4,Sun Jun 7 01:46:44 2015 UTC,"You could just remove all the occurrences of ""\n"" then do a character count.  Something like  count(reader.text.stringByReplacingOccurrencesOfString(""\n"", withString: """", options: 0, range: nil))   Also, your variables should be camel case rather than capitalised, so reader instead of Reader and writer instead of Writer. On an unrelated note, those extensions look scary. You probably wouldn't want to do that in anything other than a quick and dirty app."
swift,38v0xz,koalefant,1 point,Sun Jun 7 03:22:43 2015 UTC,"Ah I see, thanks for the tip. I got it working!"
swift,38tr97,Coyotito,3,Sat Jun 6 19:16:36 2015 UTC,"The compiler can't prove that the variable will be initialised by the time you get to the print statement. Because your initialisation in in a conditional, to the compiler, it looks like there might be a situation when largestkind is never given a value.  The compiler would actually be able to deduce that your variable would be initialised if your conditional had an else clause. This compiles, for instance:  var largestkind: String  let a = 2  let b = 4  if a > b {   largestkind = ""a"" } else {   largestkind = ""b"" }  print(largestkind)"
swift,38tr97,foBrowsing,1 point,Sat Jun 6 19:23:30 2015 UTC,"Thanks for replying!  I understand the argument, but it irks me that the programmer can't have control and responsibility there. Would the code still compile outside of a playground?  Also, if the compiler is that thorough, why doesn't it give a proper error message?  edit:   Why doesn't  var largestkind: String   initialise the variable, and is there syntax to initialise it without giving it an unwanted random value like """"?  It seems wrong to me to assign values that have no connection to the actual functionality."
swift,38tr97,foBrowsing,3,Sat Jun 6 20:05:20 2015 UTC,"You kind of can get control in this case - the other comment had a good way to do that. It's more an issue of giving the compiler enough information to do what you want it to.  For instance, you can declare variables as either constant (let) or ""variable (var). (By the way, you can get reddit comments to format inline code with backticks: `) The difference between let and var seem strange at first - I mean, if the only difference is that you're allowed to modify var, then why would you ever use let? There are a couple of reasons: the compiler can better optimise if it knows a value is immutable. Also, though, sometimes the hinderance is a help: maybe I really didn't want to ever change some value. Maybe I knew so surely that I didn't ever want to change it that I'd want the compiler to stop me and raise an error if I ever tried. This can be helpful, in some cases. (static typing has similar benefits)  Obviously, the benefits of things like immutable state and static typing vary from programmer to programmer, and application to application. Some programmers like it, some don't. Some situations are suited to it, some aren't. Some languages are entirely immutable (Haskell, for instance) and some let you do whatever you want with variables (C comes to mind). Swift lets you do both.  The error messages are usually meant to help you out, though. Here, the message ""variable used before being initialised"" is actually correct - although maybe a ""probably"" in there somewhere would make more sense. (but it's nothing in comparison to some truly cryptic, nonsensical error messages that Swift occasionally throws out)  In your case, the code wouldn't compile outside of the playground. If you try /u/Kametrixom's method, your last line might have to be println(largestkind!). The extra exclamation mark is a force-unwrap: again, it's just extra information you're giving the compiler. Here, you're saying ""I'm absolutely certain that this variable will contain a value. So sure, in fact, that you can go ahead and crash at runtime if it doesn't."" And for the programmer, the little exclamation mark is a warning sign."
swift,38tr97,foBrowsing,1 point,Sat Jun 6 20:30:00 2015 UTC,"That was awesomely informative, you know your coding languages well.  Though slightly off-topic, but did you mean entirely immutable languages use only constants?   I can't quite wrap my head around that.  Also I learned some Eiffel years ago, I loved the language, but it set me up with unusual expectations I guess, since most people view C and C++ as standard.  Lastly I put an <edit> into my reply, I'm not sure if you saw it:  I wanted to ask why var largestkind: String can't initialise the variable, and if there's a way to initialise without assigning an unwanted value like var largestkind = """"?"
swift,38tr97,foBrowsing,3,Sat Jun 6 20:49:14 2015 UTC,"Yeah, Haskell has no mutable state. Everything is defined by functions - if you want to update part of a variable, you have to pass a function the entire variable, and then let your new variable equal to whatever it returns. This becomes difficult when you're dealing with very large variables (databases, etc).  The problem with the initialisation isn't at the var largestkind: String statement, really - it's at the print. When the compiler arrives at that function it performs a few checks: it checks if the thing being printed is actually printable, for instance. And it also checks that it's definitely been given a value. Since the compiler can't decide that it's definitely been given a value, it stops. It doesn't let you go on at all. Now, a language like C would let you continue: if you tried to print something where there wasn't anything, C wouldn't care. It would just vomit out whatever was at that place in memory. Swift, on the other hand, is a little bit more restrictive. Now, you are allowed to insist that it prints whatever's there, but you've got to make clear that that's what you're doing. Or, at least, that's the idea. That's what optionals are generally for: the first ? tells the compiler (and anyone else reading your code, for that matter) that the value might not be there in some cases. Then, when you force-unwrap with the ! it's again, a kind of annotation: you're telling the compiler, and any other programmers reading your code, that you're really really sure there's something there.  But, in answer to your question, no, I don't think that there's a way to initialise a variable without giving it a value, or making it an optional. It's a limitation of the language, but almost certainly an intentional one."
swift,38tr97,foBrowsing,1 point,Sat Jun 6 21:12:19 2015 UTC,"To be honest, I think now my issue with this design also has to do with this pretty abstract example code and the guide asking me to introduce the variable like that. It might not come up in practically designed code.  I understand the case of the !forced unwrap, but I don't know where I would introduce a ?, remembering the guide it's for speculative type assignment like var somevar: String? that could later receive eg. an Integer value. I apologize if I'm wrong, I'm really only 24 hours into Swift coding, and after years of writing nothing at all.  With immutable languages, I was about to guess that value changes might be performed through functions, and your argument makes sense that this becomes increasingly complicated with larger data collections.   If you don't mind, I'd also like to talk briefly about my planned application design. I want to parse and process raw audio data, and a format that's unfortunately not supported within the OS X audio APIs, or by the Mac audio playback hardware.   Looking at tutorials the subject of opening raw file data, and file data with a application-foreign structure is never really discussed. Examples always supply the required data right within the code.   In my case I found a whitepaper with the format specifications, but I don't know how to load the data into my app. Can you give me an example for doing that?  As a first step I'd like to print out a graph of the audio stream, later I need to process it with a low pass filter which seems to add another big mathematical bag of hurt.   I really want to get on top of this, because existing software doesn't begin to offer what I want to do, but it's incredibly taunting."
swift,38tr97,foBrowsing,1 point,Sat Jun 6 22:05:37 2015 UTC,"Yeah, I'm probably the wrong guy to ask about things like that, I'm afraid. I do know, however, that if you want access to low-level audio you'll probably need to be writing a lot of C. The APIs that you have access to with Swift don't give you the control you'd need.  There's an app called Overcast that might be worth looking into. It's a podcast app, pretty standard in comparison to the others, but it's got a feature called ""smart speed"", which is a way of speeding up audio by cutting out dead air.  The guy who wrote the app - Marco Arment - has a blog, and does a few podcasts, and he regularly talks about what goes in to writing his app. Might be worth looking into."
swift,38tr97,Kametrixom,1 point,Sun Jun 7 08:27:51 2015 UTC,"I see thanks.   I didn't anticipate Swift to be limited like that.   Is it sensible to combine Swift and C parts within an app, is it possible?  I intent my code to be as modern, future prove and light as possible."
swift,38tr97,koalefant,2,Sun Jun 7 08:57:03 2015 UTC,"Yeah, Swift actually works pretty well with C. Unfortunately, if you want to do anything low-level in iOS or on a mac, a lot of the time it'll have to be in C, so it's a pretty common thing for apps to do.  C is about as lightweight as it gets - also there's the benefit that it pretty much runs everywhere. The only thing is it's a little unpleasant to do large amounts of code in it."
swift,38tr97,Kametrixom,1 point,Sun Jun 7 09:03:15 2015 UTC,"I'm listening to Marco Arment's ""Accidental Tech Podcast"" right now, though it seems to address a wide range of topics I'm finishing at least one episode. Tthe minute long advertising segment is annoying though.   Swift has the convenience of quality free documentation materials - and a handsome looking subreddit - I don't mind changing to C, but I assume the community and tutorials will be much rougher. But at least now I know, thanks again.  edit:   Stopped the podcast, the way they discussed the 12"" Macbook, my primary machine, is just filled with misinformation, I have no tolerance for aggressive ignorance."
swift,38ured,Lambaline,1 point,Sun Jun 7 00:19:58 2015 UTC,Okay I got that using   let notification: NSNotification   because otherwise it'd say Use of unresolved identifier 'notification'  Is this correct?
swift,38ured,AxeEffect3890,1 point,Sun Jun 7 00:32:56 2015 UTC,"First thing you need to do is turn all your bottom constraints into IBOutlets. You can do this by clicking on the item and dragging the constraint line into the controller.  Then you have to take a note of how big each of those constraints are, it will come up later (I just open notepad as a quick reference).  Then create a notification for the keyboard appearing or disappearing.      NSNotificationCenter.defaultCenter().addObserver(self, selector: Selector(""keyboardWillShow:""), name:UIKeyboardWillShowNotification, object: nil);     NSNotificationCenter.defaultCenter().addObserver(self, selector: Selector(""keyboardWillHide:""), name:UIKeyboardWillHideNotification, object: nil);   Then call the functions keyboard appear function:  func keyboardWillShow(sender: NSNotification) {         var info = sender.userInfo!         var keyboardFrame: CGRect = (info[UIKeyboardFrameEndUserInfoKey]as! NSValue).CGRectValue()          UIView.animateWithDuration(0.1, animations: { () -> Void in             self.NAMEOFCONSTRAINT.constant = keyboardFrame.size.height +- X         })          //repeat for each constraint.          //By ""+- X"" I mean mess around with numbers like + 10 or - 5          //until it looks right. Once you figure one of them out you can          //figure out the rest (i.e. if constraint 1 is originally 10          //and constraint 2 is originally 17 and you find that constraint 1          //looks best with + 12 then you should know constraint 2 should         //be + 19 by adding the difference     }   Then call the hide function:  func keyboardWillHide(sender: NSNotification) {      var info = sender.userInfo!     var keyboardFrame: CGRect = (info[UIKeyboardFrameEndUserInfoKey]as! NSValue).CGRectValue()      UIView.animateWithDuration(0.1, animations: { () -> Void in         self.NAMEOFCONSTRAINT.constant = ORIGINALVALUE     })          //Again, repeat for each constraint }   I only learned this about a week ago as I needed it for my app and I consider myself still pretty new to swift (and it's my first language) but feel free to ask me any more questions about the process.  EDIT: I re-read the question. Are you trying to move the location of the keyboard or are you trying to move the view up when the keyboard appears?"
swift,38ured,AxeEffect3890,1 point,Sun Jun 7 01:41:59 2015 UTC,Thanks for the info! I was trying to get a height to move a UIScrollView up so you could see the TextField based on the height of the keyboard.
swift,38ured,ObjectiveCopley,1 point,Sun Jun 7 03:05:45 2015 UTC,"Sweet, then this is exactly what worked for me."
swift,38ured,ObjectiveCopley,0,Sun Jun 7 13:37:51 2015 UTC,Looks like Objective-C to me. Is this a swift file?
swift,38syks,maxgotsull,1 point,Sat Jun 6 15:32:44 2015 UTC,"I believe you need to do a specific type of query for users specifically. I'll send you some code that I have when I get home, but it's slightly different because it searches for username in another linked class.   EDIT: Here's a query I've done to find a user in a different class, used to delete the other object from the current user's database.  OBJECTS are the specific object and can be changed for whatever you have.           var query = PFQuery(className:""DIFFERENT CLASS"")         var userID = PFUser.currentUser()         query.whereKey(""username"", equalTo:userID!)         query.whereKey(""OBJECT"", equalTo:self.OBJECT!.title)          query.findObjectsInBackgroundWithBlock {             (objects: [AnyObject]?, error: NSError?) -> Void in              if error == nil {                 if let objects = objects as? [PFObject] {                     for object in objects {                         object.deleteInBackground()                     }                       println(""Successfully deleted \(objects.count) OBJECTS."")                  }             }"
swift,38t8h1,DandalfDaWhite,2,Sat Jun 6 16:49:25 2015 UTC,"Usually you wouldn't.  One case I can think of is if you want a certain array property to be always valid and never be nil, so you just make an empty array for it."
swift,38t8h1,koalefant,1 point,Sat Jun 6 19:01:55 2015 UTC,"Ah okay, cheers."
swift,38t8h1,Kametrixom,1 point,Sat Jun 6 19:13:03 2015 UTC,"Or if you know that the array/dict will be constant for sure, but you don't know exactly what goes in it, so you would change it later"
swift,38t8h1,Stephen110,2,Sat Jun 6 19:27:51 2015 UTC,"You wouldn't be able to change it later.  Let is completely immutable, you can't append to it, and you can't change the pointer.  (Unless you are referring to swift 1.2s new implementation of let, which allows you declare and define it separately)  I don't see any reason to ever use an immutable empty array or dictionary, unless wanting to use it as a comparison (I.e. myArray == emptyArray ?)  Apples example is likely just following their best practice, knowing in their example that they won't be changing the value."
swift,38t8h1,WitchesBravo,1 point,Sat Jun 6 19:41:03 2015 UTC,You can check to see if an array is empty with     myArray.isEmpty or      myArray.count == 0 so even then there's not much use for an immutable empty array
swift,38t8h1,Stephen110,1 point,Sat Jun 6 20:15:21 2015 UTC,Agree 100%.  That's the only situation i could think of.
swift,38t8h1,Kametrixom,1 point,Sat Jun 6 21:12:51 2015 UTC,"I meant to change it later in time, so when you come back to the code the next day and you now know what goes into the constant array/dict. This way declaring it as let would  protect you from changing it, even if you haven't filled it. Of course probably they just made a mistake and I'm just searching for an odd way of where this case might be useful ;)"
swift,38t8h1,foBrowsing,1 point,Sat Jun 6 20:30:23 2015 UTC,"I've found a place where it's needed! I've actually had to do it a few times is when the type inference doesn't work. For instance, this function:   func freq   <S: SequenceType where S.Generator.Element: Hashable>   (seq: S) -> [S.Generator.Element:Int] {    let empty: [S.Generator.Element:Int] = [:]    return reduce(seq, empty) {     (var dict, item) in     dict[item] = dict[item]?.successor() ?? 1     return dict   } }   which takes a sequence of items and returns their frequencies, like this:  freq([1, 1, 1, 2, 2, 3]) // [2: 2, 3: 1, 1: 3]   Won't compile if you try and give the reduce function an empty in place, like this:  func freq   <S: SequenceType where S.Generator.Element: Hashable>   (seq: S) -> [S.Generator.Element:Int] {    return reduce(seq, [S.Generator.Element:Int]()) {     (var dict, item) in     dict[item] = dict[item]?.successor() ?? 1     return dict   } }   In fact, even this:  let empty = [S.Generator.Element:Int]()   won't work.  But it's probably not a great example, since it's a workaround for a  bug, rather than a legitimate, intended use of the language. (and the freq function is much better suited to a for loop, also)"
swift,38t8h1,retsotrembla,1 point,Sat Jun 6 20:52:38 2015 UTC,"When you are designing an API, you may decide it's convenient in a certain method for a parameter to be NONNULLABLE. If it's guaranteed to be non-null, then you don't need to test for that.  A user of your API may need to pass am empty array or an empty dict to use your method."
swift,38r7id,Hipst3rKiwi,4,Sat Jun 6 03:05:49 2015 UTC,"You can look to the other comments for good examples of how to implement that, but I'm just gonna leave this here:  Apple on Hamburger Menus"
swift,38r7id,lyinsteve,1 point,Sat Jun 6 05:59:34 2015 UTC,I know about this but a hamburger menu just seems more practical for a new reader app when compared to making 8 different tabs at the bottom
swift,38r7id,lyinsteve,2,Sat Jun 6 19:59:09 2015 UTC,"So the hamburger is how you switch news sources? Sounds like you should make a main screen with the news sources listed and then push the selection on top, like how the Mail app handles mailboxes."
swift,38r7id,croutongeneral,1 point,Sat Jun 6 20:23:45 2015 UTC,The  menu is actually for sorting through one  news source. That's why I want to keep my main screen the page with all the posts and then if the user wants only forum posts then they can switch to that.
swift,38rb2t,muzzytimes,1 point,Sat Jun 6 03:39:30 2015 UTC,"It seems that you are stopping the animation for the activity indicator right after resuming the data task, therefore hiding the indicator.  You should stop the animation in the completion block for the data task instead and that should do it."
swift,38rb2t,nameghino,1 point,Sat Jun 6 06:22:41 2015 UTC,You should put actInd.stopAnimating() after self.tableView.reloadData() in your completionHandler. Your current codes hides UIActivityIndicatorView right after it's shown.  I can also suggest using SwiftOverlays and Alamofire
swift,38od4i,cathkay,3,Fri Jun 5 14:59:13 2015 UTC,"I love idea of style guides because it enforce consistency which has its own added benefits which I won't go into.  A few things that I disagreed about the style guide though:  1) Implicit Types  Types should be inferred, don’t duplicate type identifier if it can be resolved in compile time   I tend to specify type explicitly because from what I gather, it may help sourcekit parse things faster and cuts down on compile time because it doesn't have to infer. I can't provide metrics on time saved but for me these things can be quite slow so every little bit helps  2) Self  Refer to self only when it’s required and necessary   I am interested in the reason behind this? I often use self to denote that i'm assigning a value to something, makes it easier to find parts of the projects where a property value is being modified just by scanning through it  3) Forced Optionals  Force-unwrapping should be avoid, because it leads to less safer code and can cause unwanted crashes.   The use of optionals is to force you to think about whether a value is present or not at a certain part of your code. If a value should definitely have been initialised at a certain point, then I think you should go ahead and use !. By using ?, you may unnecessarily propagate an error and make it harder to debug later on. Using ! may lead to unwanted crashes, but then again if the value should have been present then and there then is it really an unwanted crash? I think you should only use ? is a value can truly be both nil or something valid and ! when the value can not be nil.  For instance, in initialising a storyboard, you can do it either way below:  NSStoryboard(named: ""Foo"", bundle: nil)?.instantiateInitialController NSStoryboard(named: ""Foo"", bundle: nil)!.instantiateInitialController   The first way is the way suggested in the style guide; however, it does nothing to address the error that the file Foo.storyboard should have been in your bundle. Sure it doesn't crash but now you've only delegated your error to something down the line.  As for the rest of the style guide, seems pretty good, no complaints :)"
swift,38od4i,koalefant,1 point,Fri Jun 5 18:09:18 2015 UTC,"Thanks for replying! I've got some answers to clear out the doubts.  Ad. 1.  This makes the code more compact and reduces Java-like verbosity. The compiler is actually fast at inferring types.  Also, the compiler always infers the type, regardless of whether you specify it explicitly or not. It has to make sure the explicit type you give matches and the type of the actual value (e.g. let str: String = 5).  Ad. 2.   This makes the capturing semantics of self stand out more in closures, and avoids verbosity elsewhere.   Taken from github/swift-style-guide.  Ad. 3.  The style guide says they should be avoided as much as possible, but does not forbid from using them. The example you provided is actually a valid exception from this rule. ;)"
swift,38od4i,akashivskyy,1 point,Mon Jun 8 09:14:15 2015 UTC,"I agree mostly, except the tabs (makes commits very hard to read when codebase is with spaces) and this paragraph:   It is strongly misadvised to name suffix your types with words like Manager, Helper or Utility because they're meaningless and their role can be easily misinterpreted.   I strongly disagree. Helper classes obviously shorten code with class methods, like doing fetch requests in CoreData. This keeps the global scope clean and will help other developers in reading my code (CoreDataHelper.fetchAll(""Conversation"") is pretty clear I think)."
swift,38od4i,vrwim,1 point,Fri Jun 5 23:24:24 2015 UTC,At my old workplace Manager meant it's a singleton. Had no issues there either :)
swift,38od4i,koalefant,1 point,Sat Jun 6 09:38:29 2015 UTC,"Thanks for your comment! I can understand why you have no problem naming this class CoreDataHelper, you know what it was made for. As a new member of your team, I may assume that it helps with fetching managed objects. There are few unknowns to me though:   what managed object context will it use? Is it the main one? How to use it with my local context? if I can fetch some data maybe there's a possibility to save data too? Will it perform saving in current queue, main queue or background queue? can it setup the entire stack for me?   Three points to show you how different purposes this class may have. If you would divided it to three separate classes and name them accordingly to their purpose, I could easily know which one to use, and what to expect from them.    However, naming is the least problem here. Some people consider helpers, managers etc as antipattern and proof of laziness. There are other possibilities like extensions.  I hope I was clear enough explaining you why this naming is not the best and why you may want try a bit different approach."
swift,38qpyf,jwarsenal9,1 point,Sat Jun 6 00:33:22 2015 UTC,"Go to Activity Monitor and figure out what is taking up the most of your CPU and Memory, and if it is not pertinent to your computers operations, quit it. Hope that helps!"
swift,38qpyf,iD986,1 point,Sat Jun 6 01:03:15 2015 UTC,"I did do that, quit one process, and it still lags a little. I guess since it's my first time using Xcode, I don't know if there is usually a small delay in the Playground"
swift,38qpyf,iD986,1 point,Sat Jun 6 01:09:03 2015 UTC,"Oh, you're using playgrounds! Yeah those attempt to keep up with real time outputs so those are a bit laggy. Do you have the actual book open in a playground?"
swift,38qpyf,iD986,1 point,Sat Jun 6 01:38:26 2015 UTC,"Nope, I just went through like the first 15 pages of the book, and typed out all the code to see how it works. So right now, I'm about 220 lines in.  This is a screenshot of what i've got going.  Is there any other way, besides using Playground, to like type in a piece of code, then run it and see what the output is?"
swift,38qpyf,ReasonReader,1 point,Sat Jun 6 01:47:14 2015 UTC,"There is a website you could use, actually located on this subreddit however I have the link right here. It uses less power because it's web based, which will keep the delay to a minimum."
swift,38qpyf,-rFlex-,1 point,Sat Jun 6 02:03:17 2015 UTC,I don't know if there is usually a small delay in the Playground   Depends on what you're doing.  Swift code executing in a playground will often cause quite a lot of memory allocation to store value histories.
swift,38qpyf,rrubmo,1 point,Sat Jun 6 08:20:20 2015 UTC,I have the same problem. It seems that we just have to wait that Apple fixes their IDE...
swift,38qpyf,devsquid,-1,Sat Jun 6 14:51:04 2015 UTC,"You should try cleaning your computer, I recommend using Onyx for that. I hope it will help you."
swift,38p7z4,Azpirix,3,Fri Jun 5 18:15:07 2015 UTC,"You're creating a new AVAudioPlayer every time the button is pressed, so .playing() will always return false (it was just created, so of course it isn't playing).  You should store audioPlayer in a property in the view controller, and just call play / pause on the existing instance instead of creating a new one each time."
swift,38prf1,iD986,2,Fri Jun 5 20:20:23 2015 UTC,"1) Class names should be capitalized, it should be obvious from class name that it's UIViewController descendant - like SettingsViewController, StoreViewController or SettingsVC  2) You really need to push 2 view controllers with animation in a row?  3) I may suggest using storyboards and .perfromSegueWithIdentifier method  4) Use autolayout to avoid messing UI on different screen sizes."
swift,38prf1,atatator,1 point,Sat Jun 6 06:54:27 2015 UTC,"My goal was to have a non-storyboard related custom sidebar, so how would I go about fixing what I currently have?"
swift,38prf1,atatator,1 point,Sat Jun 6 13:04:09 2015 UTC,"If you avoid using storyboards for some reason, you can use .xib file for it or create everything in code (including autolayout constraints)"
swift,38pqdr,seanmichael3,1 point,Fri Jun 5 20:13:11 2015 UTC,I don't think you will get an exact equivalent of the Python process. Pandas is a custom library for  Python used for working with data and doing statistical analysis. It is not part of the Python language. Try to look up swift or obj-c frameworks for working with data. I would help but I am on mobile now.
swift,38qdvz,andorbot,2,Fri Jun 5 23:01:42 2015 UTC,Try an 'if let' statement:  if let targetText = self.subviews.first.text as? UILabel {     // this code block only executes if the optional can be unwrapped - just remember targetText is only available in this block     println(targetText) }
swift,38qdvz,Theteo,2,Sat Jun 6 00:15:18 2015 UTC,"You'll need to be a bit more explicit.  You'll need to be sure the subview cast succeeds, and then you'll be able to get the text out.  if let      targetLabel = self.subviews.first as? UILabel,     targetText = targetLabel.text {     // this code block only executes if the optional can be unwrapped - just remember targetText is only available in this block     println(targetText) }"
swift,38qdvz,lyinsteve,2,Sat Jun 6 04:25:56 2015 UTC,"Excellent! This works, thank you. And thanks everyone else for your suggestions."
swift,38qdvz,blazekid9305,1 point,Sat Jun 6 09:52:58 2015 UTC,Does changing the ? to ! work?  var targetText = self.subviews.first as! UILabel
swift,38qdvz,blazekid9305,1 point,Fri Jun 5 23:17:55 2015 UTC,Edit: This crashes the program. Terminated due to signal 9
swift,38qdvz,FutureIsMine,1 point,Fri Jun 5 23:39:52 2015 UTC,what about when you change the ? after targetText:  println(targetText!.text)
swift,38nj9s,banukatanaya,5,Fri Jun 5 10:52:07 2015 UTC,"If you used presentViewController, you could trigger that from anywhere in the app very easily, while preserving location.  For example, if you were to deep link to your app from a website, or if you wanted to provide a tour of your app prior to sign up.  You could really do all that with your current setup, but process wise, wouldn't it make more sense to always present your main view, and present a login view if needed?  Also, if a users session expired, and they bring the app back up, would they be happy with being brought all the way back to the login screen just to login again?  It's really an opinion, but I prefer to isolate my user/session management into a view controller that can be presented whenever, and from wherever I want (while using delegate methods to handle success/failure)."
swift,38m6t9,Matt_Carlson,3,Fri Jun 5 02:59:57 2015 UTC,"Hey, no, this really has nothing to do with Parse. Parse is the name of a backend service where you can store your users and data. It sounds like you want to ""parse"" a webpage, but that has nothing to do with the Parse service.  You can do it all in Swift, you don't need to learn a new language. Here's a few resources, I hope this gets you on the right track:   http://stackoverflow.com/questions/24016142/how-to-make-an-http-request-in-swift http://www.raywenderlich.com/14172/how-to-parse-html-on-ios   Also you really should check out this thread if you haven't already: https://www.reddit.com/r/swift/comments/37sbyk/scrape_a_website_with_swift/"
swift,38m6t9,fqn,2,Fri Jun 5 04:56:59 2015 UTC,You can do this on parse using their cloud code feature. You would need to write some JavaScript though.
swift,38ndvx,KNNMMDV,1 point,Fri Jun 5 09:51:25 2015 UTC,Do have a path to the Parse SDK in your project's target? Are you including Parse in any header file (eg bridging header)?
swift,38ndvx,CouldHaveBeenKing,-2,Fri Jun 5 11:40:16 2015 UTC,I am not using any header files. New version of Parse does not need header files.
swift,38ndvx,vale93kotor,2,Fri Jun 5 12:18:26 2015 UTC,"Mmm? Is it in swift? If not it needs one for a fact. And I'm only talking about the bridging header, not 'any header' lol"
swift,38ndvx,vale93kotor,2,Fri Jun 5 14:58:36 2015 UTC,That is what I meant. I thought people will understand from the context.
swift,38ndvx,elwesties,1 point,Fri Jun 5 19:45:35 2015 UTC,People are gonna be people.. Still haven't learned? :P
swift,38ndvx,banukatanaya,2,Thu Jun 11 14:49:04 2015 UTC,Trying to learn :)
swift,38ndvx,waterskier2007,1 point,Thu Jun 11 15:08:46 2015 UTC,That statement doesn't make sense sorry
swift,38ndvx,waterskier2007,1 point,Fri Jun 5 13:06:12 2015 UTC,I'm pretty new at this but i thought we would only need a bridging header if we were to use the parse SDK designed for objective-C? Parse recently dispatched an SDK specifically for swift and it doesn't need a header file.
swift,38me5y,MrJoo,1 point,Fri Jun 5 03:50:12 2015 UTC,"An array is a struct so it is always passed by value.  This could have to do with the fact that Player is a class and is added to the array by reference. So the array is appended properly but the player objects continue to be modified. I would need to see more of your code to be sure..  Also, can you make Player into a struct?"
swift,38me5y,mechdelly,1 point,Fri Jun 5 05:32:42 2015 UTC,"This doesn't have anything specific to do with arrays itself, but because you are storing the same copy of an instance of Player multiple times. This is basically:  var p = Player() p.score = 1 var p1 = p p.score = 2 var p2 = p  p1 and p2 will have the same score (2) because it's the same player. You'll want to change Player to either be a value object (a struct, I suppose this is less likely if a Player is really what I think it is), or for Player to have a method that returns a value object (maybe a struct, tuple or Dictionary of some sort) that you can store into your history."
swift,38n1xr,YouHawk,2,Fri Jun 5 07:30:30 2015 UTC,Works fine for me. Reading this in Alien Blue on iPhone.
swift,38n1xr,kielrene,0,Fri Jun 5 07:43:20 2015 UTC,"hmm, maybe I have to deal with it :( Thanks for your answer anyway."
swift,38n1xr,Hipst3rKiwi,1 point,Fri Jun 5 07:59:17 2015 UTC,Have you tried deleting the app and reinstalling it
swift,38n1xr,GreevilDead,1 point,Fri Jun 5 10:25:48 2015 UTC,"sure, but the problem still exists."
swift,38n1xr,vale93kotor,1 point,Fri Jun 5 11:12:58 2015 UTC,Try a new account?
swift,38n1xr,ak1ngs,1 point,Fri Jun 5 13:13:40 2015 UTC,doesn't work as well :(
swift,38n1xr,Pecorino,1 point,Fri Jun 5 13:43:46 2015 UTC,Works here as well
swift,38mc3m,defs1234,1 point,Fri Jun 5 03:35:11 2015 UTC,How do I switch on the product id within the purchased case? I have been trying to get this to work for the past 4 days and can't seem to get it to work. I called the canMakePayments twice because I have two in app purchases. Is that not how you do it for multiple in app purchases?
swift,38kfj4,AFakeman,3,Thu Jun 4 20:15:10 2015 UTC,"When you're saying that body_list changes, do you mean you're changing the bodies inside the array (i.e. satellite, central_body, sat2)? Since body_list is declared with a let, the array itself cannot change, so you can add or remove items from the array, nor can you reassign the items inside the array.   If I understand correctly, I think you're saying that you'll make a change to satellite inside MyGravitySimulation.bodies, and that will change the satellite inside body_list.  If so, that is the expected behavior since classes are passed by reference, and structs are passed by value, meaning that satellite in both those arrays point to the same thing. By contrast, if you had an array of Int, rather than Body, then changing the value in one array won't affect the other.  To solve this, you can either change Body so that it's a struct (if Body doesn't need to be a reference type), or you need to implement a way to copy a Body so that you create a new copy when you add it to the gravity simulation."
swift,38kfj4,LetsCodeSomethingFun,1 point,Thu Jun 4 21:38:14 2015 UTC,Thanks!
swift,38kfj4,SirGlaurung,1 point,Fri Jun 5 05:17:06 2015 UTC,"Arrays in Swift are structs (value types), not classes (reference types). Internally, they're a sort of copy-on-write; they will point to the same piece of memory until you try to change one, at which point it will make a copy of the memory and modify it."
swift,38kfj4,Kametrixom,1 point,Thu Jun 4 20:27:26 2015 UTC,"Apparently, when I tried making changes to one, it did not make a copy, but rather still pointed there."
swift,38kfj4,Kametrixom,1 point,Thu Jun 4 20:31:50 2015 UTC,"It depends on what the bodies property of your MyGravitySimulation class is declared as, var or let, because on every assignment of a struct, a copy is made and it is therefore dependent on your new declaration of let or var whether it is possible to mutate the values (Because you can always just make a copy and change that, but you cannot change the original values). Just change your var bodies : [Body] in your MyGravitySimulation to a let"
swift,38kfj4,Kametrixom,1 point,Thu Jun 4 20:28:50 2015 UTC,"If I change it to a let, it will become read-only, won't it? I need to actively make changes."
swift,38kfj4,autowikibot,3,Thu Jun 4 20:31:14 2015 UTC,Try to create a minimal example in which you show what you're expecting and what's happening instead. I don't fully understand what you're trying to accomplish
swift,38kfj4,Kametrixom,1 point,Thu Jun 4 20:36:30 2015 UTC,"Minimal example of my class:  class MyGravitySimulation {  private(set) var dt:Float private(set) var bodies:[Body]  init(bodies:[Body],dt:Float) {     self.bodies = bodies     self.dt = dt } func reset(bods:[Body]) {     self.bodies.removeAll(keepCapacity: false)     self.bodies = bods } func step_over() {     for index in 0...bodies.count-1 {         if !bodies[index].isStatic {             bodies[index].position_history.append(bodies[index].position)             bodies[index].position = bodies[index].position+MyVector2D(x:1.0,y:1.0)             }         }     }   } }   Minimal example of MyViewController:     let satellite = Body(position: MyVector2D(x:0,y:1.0), speed: MyVector2D(x:1.0,y:0.0), position_history:[MyVector2D](),  mass:1/G, isStatic:false)     let sat2 = Body(position: MyVector2D(x:0,y:-1.2), speed: MyVector2D(x:1.0,y:0.0), position_history:[MyVector2D](),  mass:1/G, isStatic:false)     let central_body = Body(position: MyVector2D(x:0,y:0), speed: MyVector2D(x:0.0,y:0.0), position_history:[MyVector2D](),  mass:1/G, isStatic:true)     let body_list:[Body] = [satellite, central_body, sat2]     class MyViewController: NSViewController {  var Simulation:MyGravitySimulation? = MyGravitySimulation(bodies: body_list, dt: Float(0.01))  @IBOutlet var Canvas: MyCanvas! @IBOutlet var Button: NSButton!  @IBAction func reset_sim(sender: AnyObject) {     Simulation!.reset(body_list)     Button.title = ""Start""     updateDraw() }  override func viewDidLoad() {     super.viewDidLoad()     updateDraw() }  func upd() {     Simulation!.step_over()     updateDraw() } }   I try pressing ""Reset"" button, expecting MyGravitySimulation.bodies variable to be reset to initial value, but it remains the same."
swift,38imb7,AlphaOmegaDeltaPhi,2,Thu Jun 4 13:41:12 2015 UTC,Maybe UISegmentedControl will work for you.
swift,38imb7,CQH,3,Thu Jun 4 15:36:12 2015 UTC,ahh I see! They probably pimped the look of the segmented control
swift,38imb7,Stephen110,1 point,Thu Jun 4 15:37:25 2015 UTC,"More likely 3 UIViews, maybe nested in a single UIViewController that handles state.  Or a UICollectionView."
swift,38imb7,CQH,1 point,Thu Jun 4 16:06:58 2015 UTC,Bingo!
swift,38imb7,rafaelc0sta,2,Thu Jun 4 16:46:11 2015 UTC,To achieve that same look you're going to have to create a custom control. See cocoacontrols.com for some source code on other custom controls and then try making your own! ;)
swift,38imb7,tractorrobot,2,Thu Jun 4 15:37:52 2015 UTC,"I just built something like this- Make three buttons that are styled to your liking. If you want to animate the highlight bar, you can make that a separate UIView on top of the buttons that slides into place on the button when pressed.   In order to get the tab content to update, you can make 3 separate views that contain the contents of each tab. When a tab button is pressed, simply set the view containing the tab you want to show hidden = false, and for the other tabs container views set hidden = true.   I personally wouldn't try to cram that all into one view controller. You certainly could, if you'd prefer. But I would make 4 view controllers- one for this page you want, and then 1 for each tab contents. Then I would add them as childViewControllers. There are 3 steps you should follow when adding a child view controller. This is a good example of that process (example not in swift, but the same process applies): https://www.safaribooksonline.com/library/view/the-core-ios/9780133510119/ch07lev2sec18.html  Once the childViewControllers are added, you would still just set hidden = true/false on the views (or the view that you added the childViewController's view as a subview) when the tab content switches.  Hope that helps. If you have more specific questions, fire away and I can try to help."
swift,38fif1,jmprobert,3,Wed Jun 3 21:39:57 2015 UTC,"I have never seen such an awesome survey design, just brilliant"
swift,38fif1,Kametrixom,2,Thu Jun 4 13:24:08 2015 UTC,Can confirm. Very nice design. First  survey that I didn't get bored while doing. I am interested in the findings of the study. IMO working 8h a day in front of the computer is not very good for the body. A study like this can show the negative effects and have impact on our working environment.
swift,38fif1,xlogic87,1 point,Thu Jun 4 20:15:43 2015 UTC,"Yeah, it's awesome this is the second study I've done using their interface. Always easier to get responses when people enjoy the interface :)   Totally agree. There are many many upsides to being a career programmer. It's just important to see and discuss the impacts."
swift,38gvbh,muzzytimes,3,Thu Jun 4 03:06:02 2015 UTC,"You can either make objects or structs.  If you want to persistantly store them, use core data managed objects.  I prefer objects but both objects and structs can be used in the same way, you make your object/struct and on that have a function in which takes in some JSON and returns an object, then you for Dictionary in JSON through the JSON objects   for DICTIONARY in JSON {     OBJECT/Struct  = object.parseJson(DICTIONARY)     array.addObject(object/struct) }   Resulting in an array of the objects/structs, which you can bind as a datasource to tableview  EDIT: Storing it as JSON is gonna make some real ugly code when you bind it to as datasource."
swift,38gvbh,criosist,1 point,Thu Jun 4 07:25:38 2015 UTC,Thanks for your reply. I solved this by making a Contact class with an init method for ~10 strings to set all the properties. I figured out how to used SwiftyJSON to manage a JSON input and then for each dictionary(person) I extracted each value individually and sent them all to the custom Contact init.
swift,38gvbh,Dilligaf_Bazinga,2,Fri Jun 5 02:33:29 2015 UTC,Create a user or contact class and pass in the dictionary into a custom init method. Parse the Json in the init method and then store the contacts either as an array to be passed around or in core data for perpetual storage.
swift,38gvbh,voidref,1 point,Thu Jun 4 10:43:46 2015 UTC,Thanks for your reply! I pretty much did what you explained here! Except I parsed the JSON in the dataModel class rather than in the Contact init
swift,38gvbh,voidref,1 point,Fri Jun 5 02:35:10 2015 UTC,Why not store it as json?
swift,38gvbh,voidref,2,Thu Jun 4 03:24:15 2015 UTC,"That would be one possible solution but I want to incorporate a contact class it's own variables, using the JSON only as a input data source. I think this which would be more scalable if the app was ever expanded?"
swift,38f6da,YouHawk,2,Wed Jun 3 20:27:49 2015 UTC,"When you create the items array in your MenuItem class, it is just an empty array. So when you call menuitems.items[0] it stops because there is no item at index 0.  If you know that you are only going to have two sections this would be the easiest solution.  var items:[[Series]] = [[], []]"
swift,38f6da,CleverError,2,Wed Jun 3 21:40:10 2015 UTC,"At that point items is a single dimensional array, you also cannot append items using the '=' operator.  Change    var items:[[Series]] = []     to    var items:[[Series]] = [[],[]]  for(var i = 0; i < data.count; i++){         if(data[i].finished == false){             menuitems.items[0].append(data[i])         } else {             menuitems.items[1].append(data[i])         } }   edit: code formatting"
swift,38f6da,zqwzzle,1 point,Wed Jun 3 21:42:40 2015 UTC,"Where do I have to put the for-loop? I dont have the variables data and so on in that class. I tried to put it into the viewdidload of the TableViewController, but then it stops here:  override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {     var counter = 0;     for (var i = 0; i < menuitems.items.count; i++){         if(menuitems.items[0][i].finished == true){ // HERE IT STOPS             counter++         }     }   Is it because the function runs before the viwdidload function?"
swift,38f6da,zqwzzle,2,Wed Jun 3 22:10:28 2015 UTC,"Sorry that was unclear, that for loop should go back into the viewDidload.  Where exactly are you getting .finished from?  I'm also unclear as to why you're using a counter in numberOfRowsInSection. All you need in numberOfRowsInSection is  return menuitems.items[section].count"
swift,38f6da,zqwzzle,1 point,Wed Jun 3 22:21:27 2015 UTC,"The class Series has an attribute called finished  import Foundation import CoreData  class Series: NSManagedObject {  @NSManaged var episode: NSNumber @NSManaged var note: String @NSManaged var season: NSNumber @NSManaged var title: String @NSManaged var nextEpisode: NSDate @NSManaged var remindMe: Bool @NSManaged var finished: Bool }   Well I had   return menuitems.items[section].count   in my code, but it doesnt work so I commented it out. The app still doesnt load now, but I have to sleep now. I'll try to fix it in a few hours. I'll reply here. Thanks for your help, I appreciate it."
swift,38fybl,bootchk,1 point,Wed Jun 3 23:24:18 2015 UTC,Looks like it's a libc function
swift,38fybl,weirdasianfaces,1 point,Thu Jun 4 04:29:51 2015 UTC,"OK.  I forgot you could just embed C code (a call to libc in this case.)  So I should say instead: it is easy to overlook in the Swift docs.  In other words, calls will bind to: your Swift object methods, the Swift standard library, NS functions/methods, libc functions, in that order.  It would be nice if Xcode highlighted the differences.  It seems to me that both Swift methods and calls to libc are colored purple.  But I still would have missed it.  Xcode should know that I don't intend to call libc."
swift,38fjwi,Xioo,2,Wed Jun 3 21:49:05 2015 UTC,"Hi, You could store it in core data and have another method to verify if the information of the products changed every time the app is launch, if it changed you download everything again, if not you just use the core data information. This a better solution if you are not certain if the user have internet connection all the time"
swift,38fjwi,mash188,1 point,Wed Jun 3 22:11:01 2015 UTC,"That's exactly what I'd like to do.  The products are currently laid out in an array of dictionaries. So I would need to go through each array item and pull that information into a Core Data file. Any chance you know of a good tutorial to loop through the dictionaries within the array and then help me put that info into Core Data?  I followed a bunch of JSON parsing tutorials and am able to get the JSON data easily, but I don't know how to get each dictionaries information separated in core data.  Any help would be great! Thanks!"
swift,38fjwi,mash188,1 point,Wed Jun 3 22:15:09 2015 UTC,Once I get home I can get some code I wrote so you can use it as an example if anyone hasn't post a possible solution
swift,38fjwi,mash188,1 point,Wed Jun 3 22:17:40 2015 UTC,Thanks!
swift,38fjwi,voidref,3,Wed Jun 3 22:18:57 2015 UTC,"Hi  I don't actually use Core Data, I use persistence data since I just want to save a Dictionary. If you want to save your data in persistance memory, once you get your json result you should do something like this:  For example my dictionary is something like ""ID"" : ""1"", ""ProjectID"" : ""1"", where the first element is the key and the second is what I want.  First declare an array like this: var userProjects:[[String:String]] = [[String:String]]()  the create a method that returns a dictionary [[String:String]] like this:     func getUserProjects(idUser: String) -> [[String:String]] {      let urlString = ""Webservice URL""     var EntryID:Int = 0     var ProjectID:Int = 0     var TaskDescriptionID:Int = 0     var TaskTimeHour:Int = 0     var TaskTimeMinutes:Int = 0     var items = [[String:String]()]       if let Data = NSData(contentsOfURL: NSURL(string: urlString)!)     {         let jsonResult = NSJSONSerialization.JSONObjectWithData(Data, options: NSJSONReadingOptions.MutableContainers, error: nil) as! NSDictionary           var item:AnyObject          var authorDictionary:AnyObject          for var i = 0; i < jsonResult[""Projects""]!.count; i++         {             items.append([String:String]())             item = jsonResult[""Projects""]![i] as! NSDictionary              ProjectID = item[""ID""] as! Int             items[i][""ID""] = String(ProjectID)              items[i][""ProjectDescription""] = item[""ProjectDescription""] as! NSString as String             items[i][""ProjectCode""] = item[""ProjectCode""] as! NSString as String          }          return items     }     return items }   Then you call the function:  userProjects = handler.getUserProjects(idUser)   after that you have your dictionary in userProjects then save it to persistence data:  NSUserDefaults.standardUserDefaults().setObject(userProjects, forKey: ""UserProjects"")         NSUserDefaults.standardUserDefaults().synchronize()   After that the dictionary will be stored in the device until the application is desintalled. To access the Dictionary you use:  userProjects = NSUserDefaults.standardUserDefaults().objectForKey(""UserProjects"")! as! [[String:String]]   To iterate through the dictionary you just do the same as the jason result.  I hope this helps, This may not be the best solution but is the one I managed."
swift,38fjwi,alt51,1 point,Thu Jun 4 01:38:54 2015 UTC,Thank you very much for the help!
swift,38fjwi,iOSboris,0,Thu Jun 4 04:10:35 2015 UTC,"I would recommend against CoreData unless you have a specific business need for all of it's features.  For object persistence, check out http://Realm.io"
swift,38fjwi,voidref,1 point,Thu Jun 4 02:59:19 2015 UTC,Thanks for the tip!
swift,38fcyy,__LearningSwift,1 point,Wed Jun 3 21:06:30 2015 UTC,"Try using AVPlayer instead, it supports streaming, so as long as the video format on disk is streamable, it should start right away."
swift,38fcyy,voidref,1 point,Thu Jun 4 03:00:25 2015 UTC,Do you have any idea how to synchronize text with video using AVPlayer
swift,38fcyy,voidref,1 point,Fri Jun 5 22:29:39 2015 UTC,Wouldn't you just watch the currentTime property and do what you need to based on that?
swift,38dum4,anastasiak2512,3,Wed Jun 3 15:56:42 2015 UTC,What's stops me from using it is the subpar UI designer. I know the current solution is to do the UI in Xcode but if I have to open Xcode then I might as well use it for the code too
swift,38dum4,Rudy69,2,Wed Jun 3 16:16:55 2015 UTC,"It depends on the fact if AppCode can suggest you some unique coding features you'd like to come back for, like for example refactorings (Rename is there for Swift now) or smart completion or some other intelligent feature."
swift,38dum4,nemesit,1 point,Wed Jun 3 17:29:52 2015 UTC,AppCode's rename is pretty dangerous as it has no problem renaming system libraries in the process
swift,38dum4,mmellinger66,1 point,Thu Jun 4 06:54:20 2015 UTC,Share the details/example with us here: https://youtrack.jetbrains.com/issues/OC. We'll investigate the issue.
swift,38dum4,Rudy69,1 point,Thu Jun 4 08:16:38 2015 UTC,"That's a pretty lazy excuse. Personally, I use whatever tools I can to produce the best product."
swift,38dum4,me_asplode,3,Wed Jun 3 17:44:44 2015 UTC,Honestly it's not like Xcode is THAT bad. I don't feel like running 2 full IDEs just for my iOS development (I also usually have Android Studio running and many other apps)
swift,38dum4,glide1,1 point,Wed Jun 3 17:47:06 2015 UTC,"I spend far more time writing code than using the UI designer.  Whenever I find myself writing more than a few lines of code, or needing to so any sort of analysis, I switch to AppCode.  For me, Xcode is for project and resource management, AppCode is for code work."
swift,38el42,TransMiley,1 point,Wed Jun 3 18:23:48 2015 UTC,It sounds like you need to be able to read and parse the file piecemeal. To do that you probably need to dip down to the C APIs.
swift,38el42,SirGlaurung,1 point,Wed Jun 3 18:27:29 2015 UTC,It should be possible in Swift to right? Or does the ARC completely remove that option?
swift,38el42,fresham,1 point,Wed Jun 3 18:34:02 2015 UTC,"Does this info help at all? It has some comparison of other parsers. http://www.raywenderlich.com/553/xml-tutorial-for-ios-how-to-choose-the-best-xml-parser-for-your-iphone-project  I'm not familiar with the iOS libraries, but shouldn't any SAX parser be reading it piecemeal anyway (to take advantage of the paradigm)?  Looks like maybe libxml2 directly gives better time and memory performance, so that may be worth checking out. http://bill.dudney.net/roller/objc/entry/libxml2_push_parsing"
swift,38el42,cruyff8,1 point,Wed Jun 3 19:33:03 2015 UTC,"I've used such libraries before in Objective-C projects, I'm currently looking more to see if it's also possible with Swift before I start falling back on such libraries (it's the memory efficiency which is causing trouble)  The NSXMLParser from Apple is also an SAX parser but still generates a ton of RAM which is what I want to avoid."
swift,38el42,cruyff8,1 point,Thu Jun 4 07:13:13 2015 UTC,"SAX is the way to go if you want to minimise memory usage, as it's event-driven and doesn't preserve state out-of-the-box. It also seems there is an ObjC version of it included with ios. If you'd edit your question and say exactly what it is you're interested in, I would be more than happy to provide you with the code."
swift,38el42,cruyff8,1 point,Wed Jun 3 23:09:52 2015 UTC,"I've used an SAX library before and that is what I need yes, the thing is that I want to know if such functionally is possible in swift instead of resorting to an external library. If it can't be done I'll fallback on an external library but I'd rather keep it purely swift."
swift,38ckbj,dikdronker,4,Wed Jun 3 10:00:05 2015 UTC,You an either learn swift and Xcode like normal people or you could be like me and just take a nose dive off a 100 ft building and just google stuff as you go along making your app and hope for the best (aka trial and error) (I'm not normal and I learn from practical uses. I really don't find the structured class room type deal appealing)
swift,38ckbj,Hipst3rKiwi,3,Wed Jun 3 11:36:22 2015 UTC,"That's exactly how I did it and I'm getting ready for launch, it's a good way to get experience."
swift,38ckbj,iD986,1 point,Wed Jun 3 20:40:27 2015 UTC,"Did you stumble along in xcode, or use phonegap?"
swift,38ckbj,Hipst3rKiwi,2,Thu Jun 4 08:58:49 2015 UTC,"I used Xcode beacuse Cordova bricked me lap top (partly my fault for not knowing what I was doing) so I was like ""I'll get a Mac"" and I did"
swift,38ckbj,devsquid,2,Thu Jun 4 10:06:56 2015 UTC,"Not to push you in another direction but I recommend checking out parse, it's an amazing starting place for noobs looking to cloud enable their app"
swift,38ckbj,Kametrixom,1 point,Wed Jun 3 11:52:23 2015 UTC,Well I would start by learning how to Swift.
swift,38ckbj,iRaphael,2,Wed Jun 3 11:00:16 2015 UTC,"I followed lynda.com's videos on swift and intro to iOS, but I'm having trouble moving on from there. I can make simple multi view apps, but that's it. Haven't even fully understood how to make a view controller exchange information between two of its child view controllers.   Anyways, do you have any suggestions?"
swift,38c39x,AFakeman,6,Wed Jun 3 06:50:06 2015 UTC,"This sounds like a use-case for associated objects in enums. Assuming you have two structs (or classes) that look like this, to hold your geometry data:  struct CurveDrawable {     // Properties }  struct DotDrawable {     // Properties }   You can make an enum which holds either of them:  enum Drawable {     case Curve(CurveDrawable)     case Dot(DotDrawable) }   Which means you can make an array that holds either a curve or a dot:  var drawableArray = [Drawable]()   When it comes to drawing them, you can do it like so:  for drawable in drawableArray {     switch drawable {     case .Curve(let curve):         // Draw `curve`         break      case .Dot(let dot):         // Draw `dot`         break     } }   Note that a better solution might be to have an abstract base class which contains a draw function, and two concrete subclasses (for a dot and a curve) that contains what geometry they need and implement the draw function. That way, you only need an array of your base class, and when it comes to drawing you can just call the draw function for each one without caring about how it implements the actual drawing."
swift,38c39x,Komputer9,1 point,Wed Jun 3 07:37:29 2015 UTC,"Thank you for advice with enums. About draw part, I cannot imagine how can it be implemented, all the drawing is done in drawRect, so every draw function shall call it?"
swift,38c39x,Komputer9,2,Wed Jun 3 07:40:41 2015 UTC,"The for..in loop would presumably be inside the drawRect: method, so you're looping over all your drawables and then calling the correct CG APIs to draw your shapes based on whether you're handling a dot or a curve."
swift,38c39x,Komputer9,1 point,Wed Jun 3 07:45:13 2015 UTC,"Oh, so this object that has .draw creates NSBezierCurve and fills/strokes it itself?"
swift,38c39x,Komputer9,2,Wed Jun 3 07:54:39 2015 UTC,"If you added a draw function to the structs, or implemented it using the alternate method I mentioned, you could do it like that, and that may be the best way in many cases. Otherwise, you could just replace the // Draw dot and // Draw curve parts with actual drawing code."
swift,388b8y,crawler23,2,Tue Jun 2 15:50:02 2015 UTC,Happy Birthday.
swift,38a0vh,vermooten,2,Tue Jun 2 21:23:23 2015 UTC,It's because you haven't set a limit on what destX and destY can be so the ball eventually gets positioned on the other side of the line. An easy way for you to solve this would be to adjust the position to be at the limit if it goes below or over a certain value:  // after setting self.destX if (self.destX < 0) {     self.destX = 0 } else if (self.destX > maxXPosition) {     self.destX = maxXPosition }   This is only for the X axis but hopefully you can figure out how to do the same with the Y axis. You'll have to calculate maxXPosition and set it to a value that you want to keep the ball below.
swift,38a0vh,LetsCodeSomethingFun,1 point,Tue Jun 2 22:08:29 2015 UTC,I don't think I asked the right question! I wanted to fix the problem using the SKPhysics stuff rather than by using the position of the ball. Some very kind person provided an alternative at http://gamedev.stackexchange.com/questions/101829/swift-why-does-my-skshapenode-pass-through-an-object-pausing-briefly-beforeha where he or she said that I need to apply a force to the ball and let the physics engine work out what can and can't be teleported through.  Cheers though! :)
swift,389bpn,AFakeman,2,Tue Jun 2 19:09:09 2015 UTC,"This is the very definition of MVC.  Your MySimulation object is the model, the NSView is the View, and an NSViewController could be used as the Contoller.  This way, the simulation can be divorced from all responsibility of displaying the data, and the view doesn't have any specific knowledge about the data or where it came from."
swift,389bpn,wswatson,1 point,Tue Jun 2 20:29:27 2015 UTC,"If I do not have NSViewController right now, how do I introduce it to my app? My project structure:  1) AppDelegate containing NSWindow and not doing anything else unusual (guess doing all the work under the hood) 2) NSWindow descendant containing minor control elements, without any init (using NSWindow's one, I guess), MySimulation and MyCanvas (NSView descendant). It's in charge of starting the simulation, adjusting its parameters from those control elements, and pushing MyCanvas' update when required. 3) MySimulation that keeps track of certain bodies' positions, both current and past, and storing them in vector format. In order to get them to MyCanvas, I have a function for NSWindow descendant to convert them and store inside MyCanvas' variable.  To me it seems like I have turned NSWindow descendant into NSViewController in your scheme. Is there any way to fix it?"
swift,389bpn,wswatson,1 point,Tue Jun 2 20:46:36 2015 UTC,"No, not at all...your NSWindow object owns a collection of subviews, one of those NSViews would have an NSViewController as its delegate.    Are you using a storyboard to layout your UI, or are you doing it programatically?"
swift,387pdv,iOSKoray,1 point,Tue Jun 2 13:16:01 2015 UTC,Push :)
swift,388f4e,LetsCodeSomethingFun,1 point,Tue Jun 2 16:13:54 2015 UTC,"GameScene().levelTwoButton.hidden = false   Here, you are creating a new GameScene and setting the levelTwoButton of that new scene to be not hidden. Try just doing:  levelTwoButton.hidden = false"
swift,386whp,lifehacker25,5,Tue Jun 2 07:42:55 2015 UTC,"I don't agree with you being down voted.  This isn't complex iOS development, and it's pretty scary that OP is developing something for a company while having issues with something this basic."
swift,386whp,Stephen110,4,Tue Jun 2 09:16:04 2015 UTC,Unfortunately it happens more and more these days. Companies turning to their IT dept to make something & don't bother to give training & let them figure it out as they go along.
swift,384h3q,timanglade,1 point,Mon Jun 1 20:05:41 2015 UTC,Skimmed over it as I'm on mobile. Activity Tracing is great especially if you've got  xpc services running but from what I understand it's not currently not accessible through swift without some kind of wrapper code and string enums (can't pass string arguments).  Wish they make it swift accessible in the near future.
swift,382vze,fundurian,4,Mon Jun 1 13:39:43 2015 UTC,"Great job!  One suggestion, the line here:  if let placemark = placemarks?[0] as? CLPlaceMark   Might be better as  if let placemark = placemarks?.first as? CLPlaceMark   Because if placemarks is [], the first line will crash, while .first is optional and won't cause a crash if there's nothing in the array.  Otherwise, great tutorial!"
swift,382vze,lyinsteve,1 point,Tue Jun 2 04:08:38 2015 UTC,"Thanks, great advice"
swift,382vze,Fanytastic,1 point,Wed Jun 3 04:22:26 2015 UTC,Great! Straight forward tutorial which I would be keeping for reference in the future for sure.
swift,382vze,Plooc,1 point,Mon Jun 1 17:59:29 2015 UTC,"Great tutorial. I don't know if you are writing this blog for newbies, but if you are I would suggest to explain a little more when you introduce the code!  Added to my bookmark for future reference as well!"
swift,3853x9,drgreenair,1 point,Mon Jun 1 22:37:21 2015 UTC,"Your approach would work.  It's probably the simplest option to actually implement.  There are plenty of python server options out there and generating HTTP requests from swift is not at all difficult.  Another option is to embed python directly into the app.  The main python implementation is written in C and isn't very large. Swift can talk to C code, so with proper bindings you could run both languages in a single app.   This could get pretty complicated with all your dependencies (some of which may not be pure Python) so I wouldn't recommend it unless you have time to burn to figure it out."
swift,3853x9,klngarthur,1 point,Mon Jun 1 23:51:53 2015 UTC,"Upon further research I'm probably stuck with HTTP request option. It seems I have too many python library dependencies for me to individually break down into C and implement. Probably way overkill...   Thanks for your input, though! Since we're at, can I ask if you have any python servers you recommend?"
swift,3853x9,klngarthur,2,Tue Jun 2 02:29:29 2015 UTC,"Unfortunately I don't have a lot of experience with any specific python servers, you'd be better off just trusting google over trusting me in that regard.  For the Swift side, though, i'd recommend Alamofire.  If it's literally just one or two requests that you'd need to make then the built in NSURLConnection should be sufficient.  Good luck!"
swift,3853x9,Stephen110,1 point,Tue Jun 2 02:33:40 2015 UTC,Alamofire is the tits
swift,380slw,sxeteej,2,Mon Jun 1 00:36:58 2015 UTC,"It's pretty much a case of get the value for key in the cell for item at index path?  Fwiw id always suggest using a helper method to convert the dictionary items to an array that will display your content more naturally for a table or collection view. If you've a single section stick it into a single array, for multiple sections stick it into an array or arrays, where each sub array contains the items for each section. That way you can map the indexpath.section to the first array and the indexpath.row to the deeper array.  Eg:  var item = self.data[indexPath.section][indexpath.row]  Your number of sections will be:  self.data.count  Number of items per section:  self.data[section].count  Dictionaries don't guarantee order."
swift,380slw,k337,1 point,Mon Jun 1 01:12:59 2015 UTC,thank you!
swift,380slw,shargath,2,Mon Jun 1 19:47:42 2015 UTC,"Although I've used array to sort dictionary items, this could help: http://blog.adambardon.com/tableview-with-many-sections-and-items-from-array/"
swift,380slw,shargath,1 point,Mon Jun 1 11:38:28 2015 UTC,this was perfect! Thank you!
swift,37y8ui,sedatciftci,2,Sun May 31 12:13:26 2015 UTC,"I'm a bit lost here, where can I see all the icons available in those fonts?"
swift,37y8ui,Hipst3rKiwi,1 point,Sun May 31 19:43:06 2015 UTC,"At the project sites of the individual fonts  Font Awesome, Open Iconic, Ionicon, Octicon"
swift,37y7dj,KNNMMDV,1 point,Sun May 31 11:55:34 2015 UTC,Look for tutorials that will show you how to programmatically add/remove tiles. Also a tutorial of getting a game loop working on iOS (most game tutorials will have this). Once you have this in place the rest of the code is game logic that is common for any turn based games.
swift,37y7dj,JiNCMG,1 point,Sun May 31 13:19:15 2015 UTC,Have you checked this one? http://www.raywenderlich.com/5480/beginning-turn-based-gaming-with-ios-5-part-1
swift,37y7dj,maxptr,1 point,Sun May 31 22:16:45 2015 UTC,iOS 5?
swift,37y7dj,maxptr,1 point,Mon Jun 1 07:44:52 2015 UTC,Most of the concepts should still apply...
swift,37wpki,morqon,7,Sun May 31 01:02:07 2015 UTC,Swift is getting swifter swiftly!
swift,37wpki,spinwizard69,1 point,Sun May 31 04:13:51 2015 UTC,"Yes ok, but is it swifter than Obj-C?"
swift,37wpki,Azr79,4,Sun May 31 09:33:47 2015 UTC,Read the attached article at the threads head.   For the most part Swift is already faster than Objective C ( not something hard to do).   In many cases Swift is nearly as fast as C.    All in all impressive results for a brand new language.
swift,37x0ts,blackensexican,3,Sun May 31 02:44:38 2015 UTC,"For starters you shouldn't store the password at all, even in the keychain. You should store a unique revocable login token instead and require the password to be entered again for any major account changes."
swift,37x0ts,klngarthur,1 point,Sun May 31 15:45:37 2015 UTC,"This is good advice, though its possible that the server does not support this type of authentication mechanism. If they need to store the raw password due to this, doing so in the keychain is possibly the best they can do."
swift,37x0ts,kevlario,1 point,Wed Jun 3 03:44:12 2015 UTC,"For small bits of data like user credentials, using the keychain as you're doing is great. /u/kingarthur's suggestion of using a revocable login token is great advice though, which you should follow if you're able.  For larger sets of data that are too large to fit in the keychain and need to live on the filesystem, make sure that you're using data protection. You can turn on data protection in your app target's capabilities section, which (if i'm not mistaken) makes all file access in your app go through apples device encryption services by default, without you needing to worry about it on a per-file basis. That (and the keychain) will make sure your users' data is encrypted when the device is locked.  Another thing you should do if you're able is to use SSL/TLS pinning. In some cases an attacker can spoof an https cert, or install a new custom CA on a device making all certs signed by their custom CA trusted by the device, which means they can still read the traffic to your servers from the compromised device and iOS won't complain one bit. If you pin to the exact certificate you will be using, attackers won't be able to intercept that https traffic that way. AFNetworking and AlamoFire support pinning, if you're using one of those libraries. The only downside to that is that you need to push an app update out when your cert is about to expire or if you want to change it on the server for any other reason."
swift,37vbkf,Matt_Carlson,7,Sat May 30 18:25:58 2015 UTC,"On the front page of this sub right now, which may interest you: https://www.reddit.com/r/swift/comments/37sbyk/scrape_a_website_with_swift/"
swift,37u3u3,trusk89,1 point,Sat May 30 12:04:42 2015 UTC,"Thats because didSelectViewController is part of UITabBarControllerDelegate, not a method of UITabBarController itself.  Set delegate to self in viewDidLoad and it will get called."
swift,37u3u3,Lurky036,1 point,Sat May 30 16:08:37 2015 UTC,"Have tried that, it does not work   class MainViewController: RAMAnimatedTabBarController, UITabBarControllerDelegate {  override func viewDidLoad() {     super.viewDidLoad()     // Do any additional setup after loading the view, typically from a nib.      tabBarController?.delegate = self"
swift,37u3u3,Lurky036,1 point,Sat May 30 16:29:34 2015 UTC,"tabBarController is likely None in this case.  Only child view controllers of a tab bar controller will have that property Non-None.   RAMAnimatedTabBarController is a subclass of UITabBarController, meaning you set it like:   self.delegate = self   or emit the self. part since you can do so in swift."
swift,37sbyk,HanzSimmer,4,Sat May 30 00:10:10 2015 UTC,maybe this will help you https://www.kimonolabs.com/ - it can transform a website intro a JSON api with a few clicks - not lines of code
swift,37sbyk,crawler23,2,Sat May 30 09:31:23 2015 UTC,Slight my unrelated but what is scraping (never heard of this term before)
swift,37sbyk,Hipst3rKiwi,3,Sat May 30 04:45:17 2015 UTC,"It's basically pulling information from a website to analyse. For example, you might take information of when someone was last online on Facebook to find the average amount of sleep each person in your friend list gets."
swift,37sbyk,Adam_Cross,1 point,Sat May 30 11:39:59 2015 UTC,A quick search came up with this: https://github.com/tid-kijyun/Swift-HTML-Parser/blob/master/README.md
swift,37sbyk,aplJackson,1 point,Sat May 30 01:03:03 2015 UTC,"As mentioned you can use the Swift HTML Parser - https://github.com/tid-kijyun/Swift-HTML-Parser I did a scraper for a website a few weeks ago with it. It's fairly easy to use, the short example at the github page should get you going. You can get the HTML of the website NSURLSession data task and in the completion handler you get a string from the data and pass it to the HTMLParser  let session = NSURLSession.sharedSession() let loadDataTask = session.dataTaskWithURL(url) { (data: NSData!, response: NSURLResponse!, error: NSError!) in    //check for error in response first     var err : NSError?     let htmlString = NSString(data: data, encoding: NSUTF8StringEncoding)!     var parser     = HTMLParser(html: htmlString, error: &err) }"
swift,37sbyk,moridinbg,1 point,Sat May 30 18:10:16 2015 UTC,Are there any video tutorials demonstrating this online?
swift,37sbyk,Matt_Carlson,1 point,Wed Jun 3 05:41:28 2015 UTC,"There is also Hpple ( https://github.com/topfunky/hpple ). I used it just today and, coming from BeautifulSoup, it seems to work out quite nicely ( https://github.com/sebug/swift_decisions/blob/master/swift_decisions.swift ). Basically, you instantiate a parser, run an XPath query on it and that's that."
swift,37sbyk,sebug,-1,Sun Jun 7 19:57:04 2015 UTC,"There is. The most basic way I know of is to grab the HTML of a website, then pull out each component you want and store it in a library."
swift,37sqgo,banukatanaya,3,Sat May 30 02:15:30 2015 UTC,"SQLite databases are stored in SQLite database files on the device (or computer, in case of Mac applications). SQLite is a fairly common way to store application data on devices. It's completely free."
swift,37sqgo,drjokepu,2,Sat May 30 03:12:49 2015 UTC,"It's stored as a little file on the user's iPhone/iDevice. It does not require internet access at all.   I'm pretty sure only your app has access to the database file (I'm fairly new, so I might be wrong, and I'm sure there are exceptions to the rule)."
swift,37sqgo,CheeseyPoof,1 point,Sat May 30 03:13:17 2015 UTC,You can actually check the code for the directory it saves it to. It's usually in the users application support directory.
swift,37sqgo,koalefant,1 point,Sat May 30 06:14:27 2015 UTC,"You can use a SQLite database as a way of keeping apps running when a network connection is not available or as a way to reduce network calls. So, it can be used like a local cache for a remote database.   The database itself is just a .sqlite file."
swift,37qlns,timanglade,1 point,Fri May 29 16:44:22 2015 UTC,"This is interesting, but I feel like it could have been done without throwing away the standard TableViewController and just making generics of the delegates and datasources instead.  The operators >>> seem backward as well, the screens are going into the nav, not getting pulled out of it. But that's probably just my C++ background leaking out."
swift,37qlns,voidref,1 point,Fri May 29 23:40:55 2015 UTC,"personally I prefer an MVVM approach, its a bit cleaner for me.  But to each his own - if it works for you go for it!"
swift,37pgwy,AFakeman,2,Fri May 29 11:08:00 2015 UTC,"Put a breakpoint on your init-with-coder.  If that's being called rather than the init-frame, then your initialization of point1 / point2 isn't happening, so they'll have the default 0,0 values."
swift,37pgwy,frodokun,2,Fri May 29 12:55:49 2015 UTC,"Thanks, init-coder was called, not init-frame. How to know which one will be called?"
swift,37pgwy,ykcs,3,Fri May 29 14:49:11 2015 UTC,"If your view is loaded from a nib, initWithCoder is called. If you are creating / adding views from code, you should use initWithFrame."
swift,37oqs4,37casper37,5,Fri May 29 05:18:15 2015 UTC,"This just sounds like a bad idea. Let your users choose their own usernames. If not, don't ask them to enter one if you're just going to force it to be something else. Automatically generate it based on their first and last name."
swift,37oqs4,fqn,2,Fri May 29 10:40:15 2015 UTC,"Yeah, you're probably right.  I'll just let them choose whatever they like. Easier for me and most likely better user experience."
swift,37oqs4,speedyapocalypse,2,Sat May 30 05:03:54 2015 UTC,"Sounds fairly easy but there are certainly edge cases involved. Try split your problem into little steps:  I would do something like: split the string by whitespace, determine the surname and the given name (what if user enters a middle name or initial? Probably should assume first string is given and the last string is the surname), create the username by appending the spliced surname with an underscore, and then append the spliced given name."
swift,37oqs4,pskipw,1 point,Fri May 29 06:08:12 2015 UTC,"Sorry, wasn't quite clear here. The user is supposed to enter the username. I just want to check if it's in the format I want it to be in. If it isn't the user will just have to type it in again."
swift,37oqs4,Ch00c0late,6,Fri May 29 06:41:45 2015 UTC,"Why not just auto-generate it, in that case - whilst deciding what to do in the cases where the username has already been taken?"
swift,37nvgu,weirdbuzzing,1 point,Fri May 29 00:42:48 2015 UTC,- is a normal function + is a class function (no instance of the class needed to call it)  So you can call a + method like  YourClass.classMethod()   and a - method like  let instance = YourClass() instance.method()
swift,37nvgu,Kametrixom,2,Fri May 29 00:49:49 2015 UTC,"Would it be fair to say,   static methods in java = + prefix in swift  non static methods in java = - prefix in swift?  also, would not putting a + or - prefix just default to -?"
swift,37nvgu,Kametrixom,5,Fri May 29 01:00:53 2015 UTC,"Oh no, the + and - isn't Swift! It's Objective-C! You can use any function of Obj-C within Swift which I had shown there. In Swift a class looks like this:  class Test {     class func doSomething() {         // bla bla bla     }      func doSomethingElse() {         // bla bla bla     } }   where the doSomething function is a class function (static) and the doSomethingElse a normal one (non-static)  If you want to learn Swift, I recommend the free iBook from Apple, which convers the whole language"
swift,37nvgu,Catfish_Man,1 point,Fri May 29 01:07:33 2015 UTC,"wow, Thanks for pointing that out! I was looking over some spritekit tutorials and got really confused, now it makes sense!   That's really interesting how Obj-C functions can be used within Swift. How does it work? does Swift code get compiled into Obj-C?"
swift,37nvgu,amlynch,5,Fri May 29 01:21:06 2015 UTC,I think the idea isn't so much that Swift gets compiled to Obj-C but that Swift was invented to talk to the same compiler that was developed for Obj-C.
swift,37nvgu,Ch00c0late,1 point,Fri May 29 02:32:28 2015 UTC,"The Swift compiler imports Objective-C types, and marks them as such, so it knows to generate ObjC method calls instead of Swift ones. Swift doesn't get compiled to ObjC, it's just that the compiler knows how to generate ObjC compatible calls when it needs to.  For the reverse case (making Swift things possible to pass to ObjC methods/call from ObjC code), you can mark things in your Swift code with the @objc attribute. Note that that can have a performance cost."
swift,37lll6,optional_field,4,Thu May 28 14:49:47 2015 UTC,"And not just lazy, but lazy in a thread-safe way!"
swift,37lll6,Catfish_Man,1 point,Thu May 28 20:24:45 2015 UTC,My only concern with this implicit behavior is — what if that changes in a future Swift update? Declaring things explicitly as what you want them to be ensures consistent behavior down the road.
swift,37lll6,mistermagicman,2,Thu May 28 21:07:40 2015 UTC,"This is a language guarantee, not an implementation detail. It's as safe to rely on not changing as anything else in Swift (which may not be all that safe, but it's not unusually unsafe at least)."
swift,37lll6,Catfish_Man,1 point,Thu May 28 22:37:21 2015 UTC,"No, this is really the only right way of dealing with global variables. In e.g. C, global variables are initialized before any code is run, and thus you can never screw up accessing global variables. With C++ allowing code to be run when global variables were setup due to the introduction of constructors and destructors this concept got messed up and it just causes so many unforeseen problems, as the code would run in no predefined order.  Ever since burning my self on this in C++ a number of times I have wished for a language that kept the semantics of C. I think the Swift language designers were right on spot designing it like this. It is going to save people on larger projects a LOT of trouble."
swift,37npx2,yrast,2,Thu May 28 23:58:45 2015 UTC,"I'm pretty sure that's not possible, as the documentation states:   ""Your app must be the “Now Playing” app. An app does not receive remote control events until it begins playing audio.""   This function is apparently only available for audio playing apps, of course you could play some fake audio and it would work, but the music from another app would stop for sure"
swift,37npx2,Kametrixom,1 point,Fri May 29 01:51:20 2015 UTC,"That'd be a bummer, I had the impression I needed an audio session but didn't try playing anything, I'll see if I can get it working that way, thanks!"
swift,37kj7u,foBrowsing,2,Thu May 28 08:19:52 2015 UTC,Hey this is really cool. I've been learning Swift myself and really enjoy it. One thing I've always been curious about is whether or not libraries/frameworks like this exist. Good post.
swift,37kj7u,35165131,2,Thu May 28 13:36:07 2015 UTC,"Cheers! Yeah, there are actually a good few libraries like this, like ExSwift, Dollar and Swiftz. It's interesting to look through them, and see how they all manage to do (some) similar things in really different ways. I basically did this as a learning exercise, trying to see if I could do some of the things those other libraries did."
swift,37mar1,-rFlex-,2,Thu May 28 17:44:25 2015 UTC,You have something else causing this - your specs are fine.  Delete derived data?
swift,37mar1,joycamp,2,Sat May 30 06:48:58 2015 UTC,"Most likely you're something in your code makes the type checker take exponential time. Upgrading your hardware might compensate a little, but the real solution is for the Swift compiler to stop being exponential. Short-term you can probably work around it by adding explicit type annotations to expressions that it has problems on… but identifying which those are after the fact can be tricky."
swift,37mar1,Catfish_Man,1 point,Thu May 28 20:27:07 2015 UTC,Are you initializing any variables with particularly long strings or many array entries?
swift,37mar1,Krussia,1 point,Sat May 30 01:23:36 2015 UTC,Without knowing the type of projects that you're working on it could be your code. Are you doing anything with a large big O? Like three nested for loops etc?
swift,37mar1,eikast,0,Sat May 30 10:55:20 2015 UTC,Are you using any plugins that would make the autocompletion slower? (Alcatraz with the fuzzy autocomplete?)
swift,37mar1,Rudy69,1 point,Thu May 28 17:56:45 2015 UTC,"No, nothing. I used to have it a while ago, at the time when the auto completion was fast but SourceKit would crash all the time."
swift,37mar1,themcdreamer,1 point,Thu May 28 18:12:20 2015 UTC,Is it a particularly large project? I don't think there's a good reason why you current machine should be as slow. Are you running the latest Xcode? There have been numerous SourceKit fixes over the last year relating to Swift. Is this a relatively old project? Perhaps the index is messed up. Try clearing you DerivedData folder for this project.
swift,37mar1,themcdreamer,1 point,Thu May 28 20:13:33 2015 UTC,For context my 2012 Macbook Air was perfectly fast with regards to auto completion for Swift.
swift,37mar1,Stephen110,1 point,Thu May 28 20:15:03 2015 UTC,"That's actually surprising.  Maxed out specs?  I tried the 2013 top end air available in stores (not customized), and couldn't even scroll through simple classes in objective c.  Literally the only program running, brand new out of box.  I would scroll, then about 5 seconds later it would catch up.  Specs were 4gb ram, 1.3 ghz dual core.  I took it back and got a pro."
swift,37mar1,themcdreamer,1 point,Thu May 28 22:37:09 2015 UTC,"Nope, the lowest spec 2012 13"" in fact. I was certainly expecting it not to be a stellar machine in terms of performance (it was very much intended to be my second machine) but I was very surprised at how fast it was. I was even doing some moderately heavy music production on it with no problems."
swift,37mar1,asniper,1 point,Fri May 29 14:57:09 2015 UTC,My late 2011 mbp has no issues with autocomplete as well
swift,37kaxv,applefanboy1234,1 point,Thu May 28 06:35:52 2015 UTC,Here's the first step. https://developer.apple.com/library/ios/recipes/xcode_help-IB_storyboard/chapters/StoryboardSegue.html  Put another viewcontroller in the storyboard and create a link (segue) to it.
swift,37kaxv,bearfootrunning,1 point,Thu May 28 08:20:42 2015 UTC,"Ah okay.  So I added the segue and connected it.  So I have a tableView in my main storyboard for the settings page and made 4 different sections each with 3 cells showing different information  Now the thing is, it won't let me add buttons on those tableView cells. Am I doing something wrong?"
swift,37kaxv,naughty_ottsel,1 point,Fri May 29 07:13:17 2015 UTC,"On your settings table view, set the cells in the sections to be static. You can then add in buttons etc. But if you want to add buttons dynamically, you would need to create custom cells or insert the buttons etc. through code."
swift,37jbz6,Lambaline,1 point,Thu May 28 01:19:44 2015 UTC,"@IBOutlet var answer : UITextField! = nil   This is a bit odd.  The ! is a forced unwrap, saying that answer will never be nil (which unless you removed it after loading the view controller, it wouldn't be since it's an outlet to what's in your xib).  I'm not sure if this is actually causing an issue, but it's not necessary."
swift,37jbz6,Stephen110,0,Thu May 28 12:17:08 2015 UTC,"In the case of a variable declaration, '!' is used to signify an Implicitly Unwrapped Optional. So technically it is an optional, but can be used as if it were a nonoptional. So in the case of something like an IBOutlet var, it seems appropriate"
swift,37jbz6,BigArge,1 point,Thu May 28 14:05:17 2015 UTC,"You should be using ? to indicate it's optional.  If this doesn't throw an error setting an implicitly unwrapped variable to nil, it's still misleading and shouldn't be used in the way that it is.  Directly from your linked article:  Sometimes it is clear from a program’s structure that an optional will always have a value, after that value is first set. In these cases, it is useful to remove the need to check and unwrap the optional’s value every time it is accessed, because it can be safely assumed to have a value all of the time."
swift,37jbz6,Stephen110,1 point,Thu May 28 15:21:36 2015 UTC,"'!' indicates that it's an optional just like '?' does, just one that is implicitly unwrapped. The assignment to nil is unnecessary, since optionals are always initialized to nil, but harmless since it will be properly assigned to the UILabel by the time viewDidLoad is called"
swift,37jbz6,BigArge,1 point,Thu May 28 16:24:24 2015 UTC,"*indicates that it was an optional that should never be set to nil again.   I'll agree with you that it's unnecessarily being set to nil since just declaring creates a nil reference.  Again, misleading and unnecessary.  If the original intent was that the variable may be set to nil again at some point, it should use ?."
swift,37jbz6,Stephen110,1 point,Thu May 28 17:39:04 2015 UTC,"Neat app! Couple things I would enhance if you wanted to improve it:   Currently on some devices (I tried iPhone 6 8.1 simulator) the keyboard will cover the text input area, as well as the next question button. If using the simulator, make sure the software keyboard is visible to see this effect. See this StackOverflow question for suggestions. For an additional challenge, I would suggest trying to put your questions/answers/etc into a separate resource file (either JSON or plist). Typically in an app configurable data like that is not embedded directly into the source code. Reading data from the JSON or plist would require using NSArrays/NSStrings in addition to Swift Array and String times, which is a fairly common challenge in Swift programming.   Happy coding!"
swift,37ir2b,sxeteej,1 point,Wed May 27 22:49:21 2015 UTC,collectionView.indexPathsForSelectedItems()
swift,37ir2b,derpasoreass,1 point,Wed May 27 23:01:42 2015 UTC,but that returns an object of type AnyObject. I need it to be the index of my array.
swift,37ir2b,asniper,1 point,Thu May 28 06:33:43 2015 UTC,Well if you know what is in a table why not look at the collection view documentation?  https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionView_class/
swift,37h9sg,xStory_Timex,1 point,Wed May 27 16:59:12 2015 UTC,"Correct, editActionsForRowAtIndexPath is the right method. This super-basic tutorial helped me to get actions going on the table rows in my app.  http://www.ioscreator.com/tutorials/swipe-table-view-cell-custom-actions-tutorial-ios8-swift"
swift,37etvn,1011110001011100,1 point,Wed May 27 02:43:47 2015 UTC,PM me. I can help you this upcoming Sunday if you still haven't figured it out.
swift,37etvn,Handsomeme,1 point,Fri May 29 14:50:17 2015 UTC,Okay that sounds great. I would love some help
swift,37e429,PM_ME_YOUR_NIP_SLIPS,1 point,Tue May 26 23:27:32 2015 UTC,what do your controllers do? show a snippet
swift,37e429,downvotefodder,1 point,Wed May 27 14:08:53 2015 UTC,"This is just a test app I've made for the music controls so this is the entire code:  import UIKit import MediaPlayer  class ViewController: UIViewController {  @IBOutlet weak var labelTitle: UILabel!  //Create a variable to control MPMusicPlayerController, the internal ""ipod"" library let mp = MPMusicPlayerController.applicationMusicPlayer()     // Add a notification observer for MPMusicPlayerControllerNowPlayingItemDidChangeNotification that fires a method when the track changes (to update track info label)  override func viewWillAppear(animated: Bool) {     super.viewWillAppear(true)      mp.beginGeneratingPlaybackNotifications()      NSNotificationCenter.defaultCenter().addObserver(self, selector:""updateNowPlayingInfo"", name: MPMusicPlayerControllerNowPlayingItemDidChangeNotification, object: nil)  }     // Function to change labelTitle.text to current track info based on previous notification observer  func updateNowPlayingInfo(){      var currentTrack = MPMusicPlayerController.systemMusicPlayer().nowPlayingItem      var trackName = currentTrack.valueForProperty(MPMediaItemPropertyTitle) as! String      var trackArtist = currentTrack.valueForProperty(MPMediaItemPropertyArtist) as! String           labelTitle.text = ""\(trackArtist) - \(trackName)""      println(""\(trackArtist) - \(trackName)"")    }   @IBAction func buttonPrevious(sender: AnyObject) {      mp.skipToPreviousItem()      println(""Previous"")  }  @IBAction func buttonBeginning(sender: AnyObject) {      mp.skipToBeginning()      println(""Beginning"")  }  @IBAction func buttonPlay(sender: AnyObject) {      mp.play()      println(""Play"")  }  @IBAction func buttonPause(sender: AnyObject) {      mp.pause()      println(""Pause"")  }  @IBAction func buttonNext(sender: AnyObject) {      mp.skipToNextItem()      println(""Next"")  }     override func viewDidLoad() {     super.viewDidLoad()     // Do any additional setup after loading the view, typically from a nib. }  override func didReceiveMemoryWarning() {     super.didReceiveMemoryWarning()     // Dispose of any resources that can be recreated. }   }"
swift,37e429,downvotefodder,1 point,Wed May 27 15:25:18 2015 UTC,no. sorry
swift,37e429,downvotefodder,1 point,Fri May 29 18:00:21 2015 UTC,ask the google about AVAudioPlayer
swift,37dofh,ubiqn,1 point,Tue May 26 21:37:42 2015 UTC,"Swift initializers are called by using the class name (FBSDKGraphRequest) and parentheses with the arguments (FBSDKGraphRequest(foo: bar)).  In this case, the Objective-C version reads  FBSDKGraphRequest *request = [[FBSDKGraphRequest alloc]                            initWithGraphPath:@""/{user-id}/taggable_friends""                                   parameters:params                                   HTTPMethod:@""GET""];   The Swift equivalent would be:  FBSDKGraphRequest(graphPath: ""/{user-id}/taggable_friends"", parameters: params, HTTPMethod: ""GET"")   Note that the Objective-C method is called initWithGraphPath:parameters:HTTPMethod:, and in Swift the initWith part is removed (automatically when Swift imports an Objective-C method), leaving just an initializer that, I think, would be referred to as init(graphPath:parameters:HTTPMethod:)."
swift,37eppy,voidref,0,Wed May 27 02:12:38 2015 UTC,/r/cocoa
swift,37e3fn,helloevrebuddy,1 point,Tue May 26 23:22:54 2015 UTC,You should be able to create a UITextFieldDelegate class that implements optional func textFieldDidEndEditing(_ textField: UITextField).
swift,37e3fn,SirGlaurung,2,Tue May 26 23:44:11 2015 UTC,Thanks!
swift,37e3fn,aandrewc,1 point,Wed May 27 02:08:42 2015 UTC,"If you don't want to use delegation you can also use target action  textField.addTarget(self, action: ""textFieldEditingChanged:"", forControlEvents: .EditingChanged)   Or just hook it up in Interface Builder."
swift,37eqee,lungu9,6,Wed May 27 02:17:33 2015 UTC,"Three ideas:    1) you could write programs with paper and pencil and ""execute"" them in your head by gaming (following the language rules in your head).  2) Google ""run swift in your browser""  3) Google ""Yosemite hackintosh Xcode"""
swift,37eqee,longstinger,6,Wed May 27 02:31:18 2015 UTC,"What's your aversion to buying a Mac? Is it the money, or the OS? It's a relevant question, because if you're not too afraid to use Mac OS X, there's a solution. If you're just afraid to learn new things (which seems unlikely, as you're interested in Swift), then there's no help for you.  Solution if you're not one of the anti-Mac people then: run Yosemite in VMWare Player. This is against Apple's license, and not supported, but it's probably not illegal in the criminal sense, but you would most definitely be breaking a license agreement that you willingly agreed to by installing the OS."
swift,37eqee,balthisar,-4,Wed May 27 02:46:49 2015 UTC,"I'm a college student, I'm broke and I just don't like Macs."
swift,37eqee,thenewperson1,2,Wed May 27 03:16:54 2015 UTC,"I think you're better off learning other languages honestly.   But if your aversion is to the hardware, not OS X, then explore a Hackintosh."
swift,37eqee,ConceptualCreation,2,Wed May 27 10:09:02 2015 UTC,Here's a fiddle for swift: http://swiftstub.com
swift,37eqee,PPPAdvertisingBot,2,Wed May 27 02:35:01 2015 UTC,Maybe try buying a mac.
swift,37eqee,valbaca,1 point,Wed May 27 05:24:46 2015 UTC,"In another comment you mention you're a college student. Surely your college has a computer lab that has a Mac. I would check out the Computer Science or Graphic Design buildings. Talk to whoever ""takes care"" of the lab and see if you can get XCode+DevTools installed. I'm sure they would be happy to help you."
swift,37eqee,dwltz,1 point,Wed May 27 06:06:11 2015 UTC,"Swift uses Xcode and its dev tools to be compiled into a program. Xcode and the compiler are OS X only so you'll need to either make a hackintosh computer or figure out how to virtually run os x. There's ways to play with swift in the browser as well, but if you want to compile stuff into, for instance, an iPhone or os x app you'll need to get a machine that runs os x..  I heard macs are pretty good at that"
swift,37eqee,lusion,1 point,Wed May 27 07:09:00 2015 UTC,"There is Silver, which is Swift implemented on top of .NET: http://elementscompiler.com/elements/silver/  Or I would learn Kotlin from JetBrains until Swift was open sourced or I could afford a Mac Mini. It is perhaps one of the languages which are most similar to Swift. I blogged about the similarities here: http://blog.translusion.com/posts/swift-is-kotlin/  My main interest in Kotlin was that as a Mobile developer I need to switch between Android and iOS. Java is a bit too different to make that switch easily mentally. But with Kotlin one could switch between iOS and Android development with less mental overhead. Or at least that is my hypothesis as I haven't actually tried this yet.  The APIs is of course the main difference and what probably requires most investment in time. I would probably spend some time learning Cocoa design patterns: https://developer.apple.com/library/mac/documentation/General/Conceptual/CocoaEncyclopedia/Model-View-Controller/Model-View-Controller.html#//apple_ref/doc/uid/TP40010810-CH14  You can easily read that without coding as this is really conceptually."
swift,37cizz,sxeteej,1 point,Tue May 26 16:59:36 2015 UTC,if userHasAddedFriends {     let viewOne = ViewOneController()     self.navigationController.pushViewController(viewOne) } else {     let viewTwo = ViewTwoController()     self.navigationController.pushViewController(viewTwo) }   You're probably looking for something like that?
swift,37cizz,dwltz,1 point,Tue May 26 17:33:35 2015 UTC,"Yes, it does not really work though. view two is a table view controller and instead it just pulls up a black screen. The viewDidLoad runs but the tableview does not show"
swift,37cizz,thedscx,1 point,Tue May 26 20:20:22 2015 UTC,Can you post a sample of the code? Sounds like the tableView functions might not be returning everything it needs.
swift,37b7qd,37casper37,3,Tue May 26 10:07:10 2015 UTC,"Fun fact, if you don't have NSLocationAlwaysUsageDescription or NSLocationWhenInUseUsageDescription in your Info.plist file then the messages will never show (and won't give a warning)."
swift,37b7qd,yeskia,1 point,Tue May 26 13:39:42 2015 UTC,"Glad you got it working! Just an FYI if you change things in the plist, I believe you have to reinstall the app."
swift,37caxy,koalefant,1 point,Tue May 26 16:04:03 2015 UTC,"NSWindowController retains itself when it is presented via a storyboard segue.  Or more specifically, the segue increments the window controller's retain count and sets a flag that tells the window controller to release itself when the window is closed.  The code for a show segue is essentially (in Obj-C):  [windowController retain]; [windowController _setRetainedSelf:YES]; [windowController showWindow:nil];   The window controller then releases itself when it receives NSWindowDidCloseNotification.  (Other interesting things: -[NSWindow _close] includes some hacks for older versions of Google Sketchup.  NSStoryboard, NSWindow, and NSWindowController do not use ARC.)"
swift,37ax7l,cassim009,9,Tue May 26 07:35:34 2015 UTC,"I apologize if this sounds rude and I don't mean to be rude but the user interface is ugly. At least one of you should learn a bit or two on user interface/user experience design. It will do the both of you good in the long run with well-designed apps that attract users.    Instead of just criticizing, let me instead point you guys to a couple of design resources: - Calendars & Time | Pttrns - iOS Human Interface Guidelines    All the best!"
swift,37ax7l,dare21,1 point,Tue May 26 08:16:25 2015 UTC,"Thanks for the feedback. We highly appreciate it. We are working on the user interface and after your feedback we are looking into it deeply. Also, thanks for sharing the links. They are helpful and we are scolding ourselves as why did not we think about Pttrns earlier. Once again, thanks for the sincere advice."
swift,37ax7l,banukatanaya,3,Wed May 27 11:02:56 2015 UTC,"hi. i'd like to give my few cents.  I'm also pretty new to iOS development and I'm sure you guys would know a ton more than I do. But I'd like to help out with the business aspect of the app.  I apologize in advance if I come across as being too critical.  Personally I find the idea to be extremely niche (almost gimmicky) because I am still quite unclear of who the target market is. Clearly it would not be the people that already wakes up to their alarms. Also the lazy people that tends to snooze their alarms would eventually delete the app if it starts to become a nuisance. I maybe wrong but currently I can only see a very niche market of people who wants to break their lazy habits and are willing to pay $2 to do so.   In terms of competition, there are apps that currently exist that are similar to yours. (http://www.brit.co/walk-to-wake/). So make sure you differentiate yourselves from what they do because I feel like it is not too difficult for well-versed iOS coders to create an alarm clock with a a pedometer/accelerometer attached to it (I maybe completely wrong about this).   Now to marketing. First thing I saw when I clicked on your link was  ""Walk Me Alarm Clock - Super app that gets you out of bed on time and walks you up with a smart steps counter""  This in itself turned me off because your title should be slick and to the point. It shouldn't be a sentence that explains what it does.  ""Walk Me- never snooze yourself into trouble"" (came up with that on the spot so it probably sucks)   Also as a paying customer, that 50% discount eats aways your revenue and does not provide an incentive for me to download your app. Your app costs $1.99. That discount would save me $0.99. This will neither entice me to get your app because it's $0.99 cheaper while it eats up half of your potential revenue. I'm unsure of what your revenue model is but if it is purely from the app downloads, this is a bad idea because you will be losing too much in revenue without gaining much user base.   Sorry for the long post. Hopefully it helps."
swift,37ax7l,Stephen110,1 point,Tue May 26 13:20:15 2015 UTC,"About $2 pricing, you are spot on and thus we have reduced the price to $0.99. Thanks for the recommendation. Appreciated.  Agreed. The competition is high when it comes to alarm clocks on the basis of the one that we have created. So far we have just launched the MVP version and we are in a process to add more features to it such as theming, multiple sounds, a couple of other features and also we are releasing it for apple watch in a week's time or so. So yes, we will have to kill the competition by enabling other state of the art features in the app.  About the name of the app, we simply stuffed the keywords for ASO and that is why the name is such long. But nice suggestion and we have started working on making a more suitable name for the app. Once again thanks for the suggestion here too.  No rather thanks for the long post. It did help and we are grateful to you for sharing these thoughts with us. Appreciated."
swift,37ax7l,xlogic87,3,Wed May 27 11:17:55 2015 UTC,"I've got an alarm clock app out on the App Store that was meant to accomplish the same thing... Make the user do something to help them wake up or be where they are supposed to be when an alarm goes off.  From personal experience, selling alarm clock apps is incredibly difficult to do successfully.  It's a simple concept, and where many people start, so the market is flooded.  I used my app as a portfolio piece to get a job (it's free), but I can't imagine ever making reasonable income from it."
swift,37bqa5,banukatanaya,6,Tue May 26 13:28:00 2015 UTC,"It's the best way to learn IMO. Try and build something! You'll learn the skills required to solve this particular problem, this will provide a foundation from which you can learn more.  It is much harder to learn programming as an abstract concept without any problem in mind - hence most books will provide examples to work through. Just consume as much as you can and maybe once you have finished, read a book on software engineering design patterns and see how you could improve on your existing project or your next one.  For me, every project I work on I always learn something new that I can take forward to the next project."
swift,37bqa5,omfgtim_,2,Tue May 26 13:32:39 2015 UTC,"Are we talking about the language or the frameworks?   If we're talking about the language I would recommend to at least skim over each chapter in Apples book. Otherwise you might reinvent concepts that already exist in the language. Or you end up doing things in a way that could be easier done in a different way. If you don't know what Generics are or don't know that they exist you will probably don't need them. But if you don't know them you might solve problems the extra hard way.     In case of the frameworks you should absolutely have an overview about all the technologies the platform has to offer. But you don't have to learn each of these technologies. If you don't use them there is no point in learning them. The platform moves so fast that all your knowledge will be outdated within a year or two anyway.  I am working as iOS developer since 2009. Yet my knowledge about game technology like GameKit, SpriteKit or OpenGL is basically zero. I don't know anything about AVFoundation, OpenAL, CoreAudio and CoreVideo either.   I know that these things exist, that's enough for me. If I need to use them I can learn the basics within a couple of hours. That's enough to get me started. I have a lot of experience outside these frameworks so I'm confident that I can reach a level that allows me to do my job within a few days."
swift,37bqa5,fluchtpunkt,1 point,Wed May 27 09:08:07 2015 UTC,"I'd say you're doing it right.    Programming is a vast topic.  The only way to learn is by doing it.  You'll learn best by solving one problem at a time.  Each problem you solve with increase your knowledge by a tiny bit, eventually it all adds up."
swift,37bqa5,zaphod42,1 point,Tue May 26 14:48:11 2015 UTC,"Doesn't sound any worse than reading a textbook cover to cover. You should probably go back to chapters and concepts you missed so there aren't large gaps in your knowledge, but that's basically what I do with every skill I learn. Google and experiment to get something working and move onto the next part.  That said, with Python for example, I found the more I strayed from the path the more difficult googling and using stack overflow didn't help me. I was missing key logic and programming ideas and thus the solution to my problems looked like a foreign language. For example, I wanted to return a result without breaking a loop, and ""yield"" looked so useful. But I had no idea how the fuck to use it because the concept of generators was waaaay over my head. And I monkeyed code together that could have been a lot cleaner if I had gotten to the bitwise chapters. Adding a new bit of code would break the whole thing and I didn't have the knowledge to figure out why until I stumbled across some new related knowledge by coincidence.  I'd say if you can piece together what you need, it's a really engaging and practical way to learn. But take the time to fill gaps you don't think you need, because you will later and you might not even know it."
swift,37bl4r,yolaba,1 point,Tue May 26 12:40:25 2015 UTC,"Did you link MapKit.framework by enabling the Maps entitlement in Xcode? If not, you might find my short tutorial on MapKit useful."
swift,37bl4r,twostraws,1 point,Tue May 26 13:03:13 2015 UTC,thank you! i will do that!   by the way i have just started going through the tutorials on your website this week and i would like to say thank you so much!
swift,37cdmu,pgarr13,1 point,Tue May 26 16:23:08 2015 UTC,There was a beta program that did just that when swift first came out. I think I found it: http://www.developer-tech.com/news/2015/feb/10/silver-lets-you-compile-swift-android-and-windows/
swift,37cdmu,aggressivecoffee,1 point,Tue May 26 16:38:58 2015 UTC,"That will only work for the most generic of Swift Apps.  The issue when going between platforms isn't really the language, it's the APIs. Silver does nothing to bring CocoaTouch to Android.   This would just allow OP to access Android's APIs from swift. He'd still have to modify/rewrite tons of code to actually make use of them."
swift,37cdmu,klngarthur,1 point,Tue May 26 19:39:56 2015 UTC,You will need to learn how to make Android apps. Nothing is going to port the app for you. Sorry.
swift,37a219,jamesthursday,1 point,Tue May 26 02:22:34 2015 UTC,"the issue was in a part of code I didn't include.  in the function that has the video player stop, for some really dumb reason, I put the view dismissal task AFTER the task to restart the video.  problem fixed. thanks for the help"
swift,379dgo,iOSKoray,2,Mon May 25 23:02:30 2015 UTC,Look into zPosition.  In your calling view controller set   skView.ignoresSiblingOrder = true  Then you can use zPosition to place objects where you like.  You may to link about creating specific layers - something like..  backgroundLayer.zPosition = 0 playerLayer.zPosition = 10 monsterLayer .zPosition = 20  The add these layers to the scene  addChild(backgroundLayer) addChild(playerLayer) addChild(monsterLayer)  Add your player to the player layer  Add your monsters to the monster layer.
swift,379dgo,guru_matt,1 point,Tue May 26 00:28:48 2015 UTC,Is there also a easier way to do these with CGPoint or CGFloat?
swift,379dgo,fwoty,1 point,Tue May 26 09:56:27 2015 UTC,"Okay lets start all over again.  I just want to create a object, that goes from the right side to the left side of the screen. I want that these object spawns above my player.  Thats it actually...   I tried this and it still doesn't work::  func addMonster() {       let monster = SKSpriteNode(imageNamed: ""monster"")        let actualY = random(min:5, max:10)       monster.position = CGPoint(x: size.width * 1.5 , y: player.size.height * 4.5)      addChild(monster)       let actualDuration = random(min: CGFloat(2.0), max: CGFloat(4.0))       let actionMove = SKAction.moveTo(CGPoint(x: -monster.size.width/2, y: actualY), duration: NSTimeInterval(actualDuration))     let actionMoveDone = SKAction.removeFromParent()     monster.runAction(SKAction.sequence([actionMove, actionMoveDone]))  }"
swift,379dgo,guru_matt,1 point,Tue May 26 10:13:05 2015 UTC,This code uses player.size.height *4.5 to position enemies on the y-axis. Perhaps you meant to use the player's position instead of the player node's size?
swift,379dgo,fwoty,1 point,Fri May 29 01:25:00 2015 UTC,"I think I may have misunderstood your question. :-(  Sometimes under can mean being layered underneath.  If you want them above, just make sure that the Y axis is a higher value than the player.  These two lines..  let actualY = random(min:5, max:10)   monster.position = CGPoint(x: size.width + monster.size.width/2, y: actualY)  seem to give your monster a Y position of between 5 & 10, which is not very high.  Good luck!"
swift,379dgo,fwoty,1 point,Tue May 26 12:50:50 2015 UTC,"Thank you it worked!! I printed out my players position which is (333.5, 75.0) and then i changed the minimum from actualY to 75.0 and my maximum to 333.5 :)"
swift,37729c,xlogic87,10,Mon May 25 12:16:33 2015 UTC,"Paid full version (2.99 pr 3.99 seems the sweet spot to make the most money from general utility apps) and a free version with iAds and IAP to remove ads and unlock the features from the full version. Only about 3% of users buy the IAP though.  Unfortunately I don't think there is a huge market for paid apps any more. You would need a real smash hit app to make a decent amount of money. Not saying you can,t, it's just very hard…  Edit: Some more thoughts on the app market for indy devs: I personally wouldn't bother with creating an app just for the app's sake anymore. When I think about new apps I think of them as a way to sell people a service or to build a brand. Just an example: I wouldn't build an outdoor navigation app and try selling it, but rather build a free app and try building a huge user base or upsell the users with additional services. Basically the Runtastic/Strave business model…"
swift,37729c,DeutschlandFickJa,2,Mon May 25 13:17:28 2015 UTC,"This is interesting. If there is not a huge market for paid apps and most of the apps are free, then who is paying for the (I assume) hundreds of hours of development time for an average app? Do most iOS developers work for free?  According to indeed.com an average iOS developer earns $100k a year. Who pays for their time?  I am genuinely interested in the answer. I always wondered what is the business model for the very popular free apps. I assume they have whole teams of devs working on the app and the costs are probably running into millions of $ per year just for the salaries. How do they make money?"
swift,37729c,audiblefart,5,Mon May 25 16:09:16 2015 UTC,"I'd wager that the majority of apps on the App Store are developed by indies or start ups who actually end up making very little from them.   The rest of us who work for a big company and get paid six figures just do what we are told to build and the money comes from the successful business. I write free apps for a company that has a SaaS model for their web app that runs over $50/user. So the apps I build are a feature of that, they don't make money directly although it's probably a selling and sticking point for some customers."
swift,37729c,audiblefart,3,Mon May 25 17:07:44 2015 UTC,"That makes sense. So in terms of revenue it is probably better to build free apps for the app store and then use them as a portfolio to get a high paying job at one of the big companies.  Sucks, but one can still make own apps as a hobby."
swift,37729c,MarsSpaceship,3,Mon May 25 21:03:47 2015 UTC,Really what it comes down to is building a business. Don't build an app expecting to be successful. Build a sustainable business. People have forgotten the importance of that with the App Store gold rush and the few people whose apps have gone viral.   But yeah of course you can build a portfolio to attract employers if that's what you're after.
swift,37729c,shiggie,2,Tue May 26 00:12:01 2015 UTC,This value may be true if you divide the general profits by the number of developers but in practice you can not do that. A typical iOS developer is making very less than that. This number is not even close.
swift,37729c,Mad102190,9,Tue May 26 01:30:46 2015 UTC,"They're not paying you for your work, they're paying for the product, so whether you put one hour or one year is irrelevant to the customer."
swift,37729c,audiblefart,-4,Mon May 25 13:33:22 2015 UTC,This does not answer my question. How do you rate the product then? Do you compare it to other similar apps in the segment and price it accordingly?
swift,37729c,Handsomeme,2,Mon May 25 16:13:22 2015 UTC,"I would do free with some usage constraints and minimal nagging, or just plain free if you don't have anything in your portfolio."
swift,37729c,eikast,1 point,Mon May 25 15:58:20 2015 UTC,Do users base their purchases on the developer portfolio? Is it easier to sell paid apps once you published some free apps?
swift,377ymo,AxeEffect3890,3,Mon May 25 16:54:15 2015 UTC,"Uh, this isn't really a programming question so much as a math question.  Strictly speaking, a formula as unbounded as the one you provided has infinite solutions. More to the point, all the answers you provided are valid solutions to the equality.  Either you're going to need to provide more information on your algorithm, or you're going to need to provide far more information on what constraints you're trying to solve for in order for anyone to be able to help you."
swift,377ymo,lgroeni,1 point,Mon May 25 18:43:25 2015 UTC,"There are undoubtedly more sophisticated ways of writing solvers, but a straightforward binary search will do the job.  Rewrite equation as 50x + 40y + 10z - 80 = 0  Randomly pick sets of x,y,z satisfying the core criteria until you have one set that evaluates > 0 and one set that evaluates < 0.  Then you loop, creating a new (x,y,z) that is between the two outliers, replacing either the > 0 or < 0 endpoints depending on what it evaluates to. Otherwise the only thing you need to watch out for is where the midpoint is further away from 0, which means it's not continuous at that point so you go back to the start and pick another pair of points.  Otherwise you keep iterating to the level of desired precision.  But as has already been pointed out, there are also an infinite number of solutions to the particular equation you posted.  e.g. x = y = z = 0.8 is a trivial solution"
swift,377ymo,andrew24601,0,Mon May 25 22:27:53 2015 UTC,"Ah, forgot to mention the constraint they all need to be integers"
swift,377ymo,andrew24601,1 point,Tue May 26 14:14:33 2015 UTC,"Ummm. If they are lower bounded by 0 then there are only 27 combinations to test, even fewer if you apply progressive constraints. For that scale of problem I'd just brute force it.  e.g. x can never be 2, if x is 1 then y must be 0.  There are still multiple solutions - ie (1, 0, 3), (0, 1, 4), (0,2,0), (0, 0, 8)"
swift,377ymo,billrobertson42,1 point,Wed May 27 04:59:06 2015 UTC,"This might work for you, http://www.codeproject.com/Articles/675908/Linear-Equation-Solver-in-Cplusplus"
swift,377ymo,jnothnagel,1 point,Tue May 26 00:55:24 2015 UTC,Nice try google employee working on Sheets. ;-)
swift,378tck,Matt_Carlson,3,Mon May 25 20:31:43 2015 UTC,"var url:NSURL = myMediaItem.valueForProperty(MPMediaItemPropertyAsset.URL) var asset:AVURLAsset = AVURLAsset.URLAssetWithURL(url, options: nil) var assetReader:AVAssetReader = AVAssetReader.assetReaderWithAsset(asset, error:nil) var assetOutput:AVAssetReaderTrackOutput = AVAssetReaderTrackOutput.assetReaderTrackOutputWithTrack(asset.tracks[0], outputSettings:nil)  self.assetReader.addOutput(self.assetOutput) self.assetReader.startReading()"
swift,378tck,entrelp,3,Mon May 25 20:54:38 2015 UTC,four spaces before each line of code displayed lets you monospace
swift,378tck,voidref,-1,Tue May 26 06:34:03 2015 UTC,"thanks so much, I'll give you gold one day when I'm not poor haha, would you mind explaining some of this to me as I'm quite new to swift"
swift,378tck,entrelp,1 point,Mon May 25 20:59:46 2015 UTC,"var creates a new variable that can be modified later on (if you don't want to modify it later on, then use let)  The : specifies the type of variable  The space between the class and function in objective c, is replaced by a dot  Fuctions are called with brackets. The input parameters for a function go into these brackets."
swift,377ed5,galvanizd,2,Mon May 25 14:16:38 2015 UTC,"Started a new job a month ago, they told me they wanted 100% swift from now on. I've been working professionally with Objective-C for 2 years and in college for a year before that.   I'm shocked to say I'm delighted with the transition - didn't expect to be.   I find: 1) I'm maybe not doing things 'the swift way', since the best ways of doing things in swift aren't fully known yet. Much of my code is the exact same as I would write it in obj-c, but in Swift.  2) I've never found anything in swift thus far which has prevented me from accomplishing what I wanted to achieve. There are some nice things which I liked in Obj-C which don't seem to exist in swift, or I haven't found them yet, but that hasn't been a stumbling block.  So I'd recommend Swift."
swift,377ed5,k337,2,Mon May 25 23:17:08 2015 UTC,"Started a new job a month ago, they told me they wanted 100% swift from now o   That's quite a luxury.  It's going to be years before most companies with existing code bases are able to make that transition."
swift,377ed5,ReasonReader,1 point,Tue May 26 05:49:55 2015 UTC,"I think it really depends on the project/assignment.   If it's writing classes (or even entire apps) from scratch, I can see Swift being the way to go.  If it's patching existing classes with small updates, then I can see Objective-C being the way to go.   Also, lightweight apps (whose work is done mostly server-side via APIs) can more-easily be rewritten in Swift and coding would be fast.  This may not be the case with apps like games that do a lot of work on the device.  Meaning, if the game is already Objective-C, then maybe stay there.  But, if the game is from scratch, Swift may be the way to go.  Veteran Objective-C programmers are being converted to Swift daily.  The most common comment I hear is that, ""Coding is faster with Swift."""
swift,377ed5,CQH,1 point,Tue May 26 18:53:24 2015 UTC,"Wow, cool! Thanks for sharing k337.  What are some of those ""nice things"" in Obj-C but not in Swift? Do you mind sharing?"
swift,377ed5,k337,1 point,Tue May 26 03:09:44 2015 UTC,"One thing I've found is that the classes in swift don't seem to be fully aware of themselves in the same way as objective-c.   Example:  (I'm sure there is a different way but I don't know if it yet)  ParentClass ChildClass ChildChildClass  If we had a class function in our ParentClass in objC, which returned the string name of the class, like so:   (void)identifer { Return [NSStringFromClass:[self class]] }   We used to be able to call this from any of the Children and it would print out the relevant string for the relevant class, but we don't have a 'class' function in Swift, so it can't be done. Not sure if we can pass the classes around."
swift,377ed5,OpeningLeopard,0,Tue May 26 10:51:44 2015 UTC,"It depends - on a fresh code base I'd start with Swift BUT swift is changing all the time so you may need to refactor as the language is updated.  That being said, it's much cleaner and modern and doesn't bring the baggage from C."
swift,377ed5,spinwizard69,0,Mon May 25 18:08:34 2015 UTC,Swift!  Mainly because I've never like Objective C at all.    Combined with the syntax heavy Next Step I've always found Objective C to be tedious.
swift,3776zh,TheNebulizer,3,Mon May 25 13:08:33 2015 UTC,"What debugging have you done so far? Apple maintains two completely separate push environments - one for debug/sandbox builds and one for release/production builds, and the two are completely incompatible. What this means is that neither tokens from either will work in the other, nor will certificates from either work in the other. App Store builds use different APNS entitlements, which is probably the source of your problem, but without knowing more about your setup, it's hard to help."
swift,3776zh,lunchboxg4,1 point,Mon May 25 17:09:44 2015 UTC,"I'm not sure what information I can tell you because I'm extremely new to this. I have this code in my app:    if(rankCout > (RANK!))                                 {                                     var notification:UILocalNotification = UILocalNotification()                                     notification.alertBody = ""Someone beat your highscore!""                                      UIApplication.sharedApplication().scheduleLocalNotification(notification)                                     println(""PUSH"")                                      RANK = rankCout                                     didUpdate = false                                 }   and it works fine on my app that I put on in with a developer certificate, but the one in the app store has no notifications show up. Is there any instructions online on how to do that since I couldn't find any."
swift,3776zh,lunchboxg4,1 point,Tue May 26 11:48:35 2015 UTC,"This is Apple's doc on the environments. It touches on entitlements as well, but that's managed mostly for you automatically.   From there, just keep in mind that the tokens you collect don't go between environments, so you'll need to push to the correct token through the correct endpoint with the correct SSL certificate. It just feels complex because there's a lot of moving parts, but it's easier the more you do it."
swift,373ovs,NorthFlow,19,Sun May 24 16:11:34 2015 UTC,"Take the Stanford ios8 class. The man speaks gospel truth, and it's free."
swift,373ovs,fobin78,3,Sun May 24 16:24:44 2015 UTC,Agreed. I first thought it wasn't good and now I regret I didn't watch it earlier.
swift,373ovs,n0phear,2,Sun May 24 17:01:48 2015 UTC,Do you still build calculator like the previous obj c course?  I haven't had a chance to look at the newer swift content.
swift,373ovs,nill0c,2,Tue May 26 04:44:45 2015 UTC,Yup
swift,373ovs,flCer,1 point,Tue May 26 04:55:23 2015 UTC,Thank you very much! I'll check it out on Wednesday! the day after my laste exam! :D
swift,373ovs,mwarvik,5,Sun May 24 19:33:18 2015 UTC,I'm a big fan of http://hackingwithswift.com too.  Haven't watched the Stanford class yet though.
swift,373ovs,littlepinkrose12,2,Sun May 24 18:01:57 2015 UTC,www.raywenderlich.com
swift,374ht8,Matt_Carlson,2,Sun May 24 20:15:14 2015 UTC,"Do you have an import statement?  It should be something like so, I would think: var myMediaPickController = MPMediaPickerController(mediaTypes: <#MPMediaType#>)"
swift,374ht8,andorbot,2,Sun May 24 21:44:53 2015 UTC,"Ok so right now I have this, is this all that I need, I am trying to make it so that a Media Picker Viewcontroller shows up when I click a button  @IBAction func pickSong(sender: AnyObject) {            var Music.MPMediaType            var myMediaPickController = MPMediaPickerController(mediaTypes: Music) }"
swift,374ht8,gotnull,1 point,Sun May 24 21:55:42 2015 UTC,"Try this:  @IBAction func pickSong(sender: AnyObject) {  let mediaPicker = MPMediaPickerController(mediaTypes: .Music)     mediaPicker.delegate = self     mediaPicker.prompt = ""Select any song!""     mediaPicker.allowsPickingMultipleItems = false     presentViewController(mediaPicker, animated: true, completion: {})   }"
swift,374ht8,gotnull,2,Sun May 24 22:45:48 2015 UTC,"thanks your the best!, also do you know of any way to navigate to another screen after this view controller disappears?"
swift,3744l6,KNNMMDV,2,Sun May 24 18:25:55 2015 UTC,http://stackoverflow.com/questions/24003191/pick-a-random-element-from-an-array
swift,3744l6,nroose,0,Sun May 24 19:14:49 2015 UTC,I tried that and it just prints all elements of the array.
swift,3744l6,xlogic87,2,Sun May 24 19:25:08 2015 UTC,The stackoverflow answer seems legit. There is probably something wrong with your code. Could you paste the whole thing?
swift,3744l6,jedrekk,3,Sun May 24 19:43:57 2015 UTC,You're not using the code in the stack overflow link.
swift,3744l6,foBrowsing,2,Sun May 24 19:48:19 2015 UTC,"Post some of your code to give us a better idea, but from what you've got there, it looks like you might be accidentally nesting your array.  This is what the stackoverflow answer would look like for your case:  let title = ""one""  var imageLinksArray: [String] = [title]  imageLinksArray.append(""two"") imageLinksArray.append(""three"") imageLinksArray.append(""four"")  print(imageLinksArray[Int(arc4random_uniform(UInt32(imageLinksArray.count)))])   Oops, just saw your link there. Here's how I'd fix it:  let url = NSURL(string: ""some link bla bla"") var request = NSURLRequest(URL: url!) var data = NSURLConnection.sendSynchronousRequest(request, returningResponse: nil, error: nil) if data != nil {   var hoge = JSON(data: data!)   var imageLinksArray = [String]()   for result in hoge[""hits""].arrayValue {     let title = result[""webformatURL""].stringValue      imageLinksArray.append(title)    }   println(imageLinksArray[Int(arc4random_uniform(UInt32(imageLinksArray.count)))])  }   This line:  var imageLinksArray:[String] = [title]   doesn't append to an array, it declares and initialises it. So, within your for loop, you were declaring a new array for each title. In that same for loop you were printing that array. You need to declare the array before the loop, append inside the loop, and pick a random element after it."
swift,3744l6,foBrowsing,1 point,Sun May 24 22:16:46 2015 UTC,updated it
swift,3744l6,anauel,1 point,Sun May 24 19:53:02 2015 UTC,"for result in hoge[""hits""].arrayValue {     let title = result[""webformatURL""].stringValue  imageLinksArray.append(title)   }   println(imageLinksArray[Int(arc4random_uniform(UInt32(imageLinksArray.count)))])   That worked. Thanks for the extra information by the way."
swift,372tx2,supperpumped,2,Sun May 24 09:55:06 2015 UTC,"Google ""adaptive layout"" and universal storyboard. The comment above about using size classes is referencing Apple's approach to an expanded variety of screen sizes. Basically you'll start your Xcode project with the ""universal"" option, and build one layout. You'll use auto layout constraints to arrange views in relation to each other , rather than on fixed x y coordinates. You can preview how each screen size looks in Xcode without running the simulator too.  Auto layout can be frustrating at first , but it truly does make things easier in the long run. Learning it as it's implemented in ios8 is doing yourself a huge favor."
swift,372tx2,kensi,1 point,Sun May 24 13:10:33 2015 UTC,"Size classes. Look at the very bottom of the screen in your storyboard file, right in the center. It probably says wAny hAny or something like that. Click there and a grid will come up that will let you select different device sizes. Find the size class that doesn't look right and adjust its layout accordingly."
swift,3748kf,rfn17,5,Sun May 24 18:59:32 2015 UTC,http://www.reddit.com/r/swift/comments/373ovs/what_is_the_best_way_to_learn_swift_if_i_know/
swift,3748kf,Lars34,1 point,Sun May 24 19:54:33 2015 UTC,"Hey,   I am using http://tutorios.com"
swift,3748kf,psimkus9,1 point,Mon May 25 09:52:07 2015 UTC,Apple wrote a book about it. Start there
swift,3748kf,dwltz,1 point,Mon May 25 20:10:44 2015 UTC,"I wouldn't actually bother for now, it's well written and all but it's a bit up in the clouds. I'd nearly call it a reference guide. Come back to it after you've worked with Swift a bit more - after a few weeks."
swift,3748kf,k337,-2,Mon May 25 23:18:40 2015 UTC,"If you know that it has been asked hundreds of times, don't ask it again and search. We're not serving you Google results on a cold plate. Sorry to be rude, but these posts are just tiresome."
swift,3718cl,iOSKoray,3,Sat May 23 22:34:28 2015 UTC,"I wrote a free 30-part Swift tutorial that focuses on building projects. It teaches Swift at the same time as teaching UIKit and SpriteKit, and if you follow all 30 projects you'll end up with 20 finished projects that you can customise and improve.  Projects 11, 14, 17, 20, 23, 26 and 29 all teach SpriteKit, but I would strongly recommend against skipping ahead unless you're already familiar with Swift. Seriously, if you're new please start at project 1 and work your way forwards.  If you'd like to try it, it's Hacking with Swift. You can also find the source code on GitHub. Have fun!"
swift,3718cl,twostraws,2,Sun May 24 18:47:06 2015 UTC,Thanks for making your tutorial and thanks for making it free.  I'm going to start on yours today.
swift,3718cl,tridactyl,2,Sun May 24 21:06:00 2015 UTC,Apple's developer documentation resources are pretty good.  Here is a simple sprite kit tutorial  Here's a full adventure game tutorial  /u/twostraws ...bookmarked and thanks.  Your tutorial is the next thing on my reading list now.
swift,3718cl,tridactyl,2,Sun May 24 21:02:32 2015 UTC,"Have you checked http://www.sprite-kit.com? Tons of tutorials, articles and open source projects.."
swift,3718cl,iuridium,1 point,Tue May 26 10:41:28 2015 UTC,"Learn by just trying things out.  I'm starting to learn SpriteKit with Swift myself.  I started creating a small demo of a ball bouncing around the device's screen.  I used the Apple docs and Ray Wenderlich tutorials as a starting point.  You won't learn anything if you don't try to make something you're interested in.  Think of a small idea, and begin to figure out how scenes and sprites work.  Good luck!"
swift,3718cl,JALsnipe,1 point,Sat May 23 23:32:07 2015 UTC,I've catalogued lots of articles.   http://www.h4labs.com/dev/ios/swift.html?q=Sprite
swift,3718cl,mmellinger66,1 point,Wed May 27 13:38:34 2015 UTC,I started with a lecture on udemy  It's free and seemed to be a decent start on sprite kit and swift.
swift,370tp4,TheCracchen,3,Sat May 23 20:26:09 2015 UTC,"You can build your own hierarchy in Core Data just like you would with your object model.  So, if you were going to have an exercise base class, with strength and cardio subclasses, and classes under that, that works just fine in Core Data.  However, changing your model after you already have data saved can get tricky, so I wouldn't get too specific, and use data to determine specific exercises."
swift,370tp4,shiggie,1 point,Sat May 23 21:03:44 2015 UTC,Awesome thank you
swift,370tp4,ejpusa,1 point,Sat May 23 21:06:18 2015 UTC,"What happens when you update the App? To all that data?  Recommend CloudKit. Just works great. Core Data can be the backup, but to get out the door quick, CK is it. So simple to setup too. (IMHO)."
swift,370ear,xKeno,3,Sat May 23 18:20:15 2015 UTC,"Ray Wenderlich tutorials are awesome.  Every programmer has had a similar feeling when first starting to learn, so don't be discouraged.  A word of advice, as you are working through tutorials, extend the examples.  Don't just type in what they are saying, replicate what they are doing with your own logic.  That could be as simple as using different variable names and different values to see how that affects the outcome.  http://www.raywenderlich.com/74438/swift-tutorial-a-quick-start"
swift,370ear,Stephen110,2,Sat May 23 18:37:29 2015 UTC,Ray's site is the reason I'm an iOS Developer.
swift,370ear,k337,3,Mon May 25 23:19:29 2015 UTC,You have to be familiar with object oriented programming (and with programming at all) to understand iOS Stanford Course. It's not for complete beginners.   Learning programming is not only about learning language syntax. You must learn a specific way of thinking - how to solve problems you are facing.
swift,370ear,Sebaall,1 point,Sat May 23 18:49:08 2015 UTC,I feel so stupid now.. I wasted so much time just watching those videos.
swift,370ear,Sebaall,2,Sat May 23 18:50:09 2015 UTC,"If you want to start programming, you can start some beginners course on Coursera, e.g that one. It will teach you basics of programming with Python. It may be a good starting point :)."
swift,370ear,Jon_Hanson,1 point,Sat May 23 18:55:14 2015 UTC,Are Python & Swift somewhat the same or are they completely different? Sorry if this is a stupid question :o
swift,370ear,Sebaall,4,Sat May 23 19:04:22 2015 UTC,Python and Swift are completely different but Python is a really good language to learn for someone new to programming. The syntax won't be the same but the method of thinking through and solving problems will work for any programming language.
swift,370ear,galvanizd,2,Sat May 23 19:15:55 2015 UTC,"It's not the same, but Python is good for beginners :). Also that course does not cover object oriented programming, but that's something you should not begin with :)"
swift,370ear,FR_STARMER,1 point,Sat May 23 19:23:28 2015 UTC,"Don't - a lot of the time poured into learning programming is a lot of effort, but don't think of it as time wasted.. that's a defeatist attitude.. it's time invested learning what not to do lol ;) It's a game of persistence.. keep on learning dude!"
swift,370ear,Sebaall,2,Mon May 25 13:53:34 2015 UTC,Stanford courses assume you have a great deal of computer science knowledge so that makes sense. Try a udemy course.
swift,370ear,ASK_ME_IF_IM_A_TRUCK,2,Sat May 23 18:46:18 2015 UTC,Well that explains a lot i've been recommend that course multiple times on forums they all said it was very good for noobs. I guess not thank you :)
swift,370ear,Crafty-Deano,4,Sat May 23 18:49:01 2015 UTC,"It's good for swift noobs, not for programming noobs unfortunately."
swift,370ear,Crafty-Deano,1 point,Sat May 23 18:57:18 2015 UTC,"I would highly recommend the udemy courses, they usually have courses for 12 dollars when on sale. Which is like every week. But don't buy the courses for actual prices as they're outrageously expensive."
swift,370ear,Crafty-Deano,1 point,Sat May 23 19:23:07 2015 UTC,Can't thank all you guys enough never excepted to get this many people to help me out ;) Thank you all! ~Keno
swift,370ear,Crafty-Deano,1 point,Sat May 23 19:51:20 2015 UTC,"For a complete beginner looking to learn swift & Xcode, this is probably the best resource out there for the price: https://www.udemy.com/complete-ios-developer-course/?ccManual=&dtcode=MYuTo7L2Y6TW&couponCode=INSPIRE1010#/  Normally £160, but discounted to £8 with code INSPIRE1010"
swift,370ear,ScaryStacy,1 point,Sat May 23 20:36:36 2015 UTC,I've heard about that course.. Probably going to buy it tonight! Thanks :)
swift,370ear,ScaryStacy,1 point,Sat May 23 20:54:22 2015 UTC,"Best of luck, and let me know if you get stuck on anything, I'd be happy to help 😊"
swift,370ear,ScaryStacy,1 point,Sat May 23 21:02:32 2015 UTC,Okay thanks dude i will definitely let you know if i get stuck :)
swift,370ear,twostraws,1 point,Sat May 23 22:39:32 2015 UTC,Sorry for bugging you ;P Do you think i should get https://www.udemy.com/ios-8-and-swift-how-to-make-a-freaking-iphone-app/?dtcode=fw6LcsE2Y8SL or https://www.udemy.com/complete-ios-developer-course/?ccManual=&dtcode=ejkm9QS2Y8R5&couponCode=INSPIRE1010 since the code works on both or should i buy both of them since there cheap ass hell?
swift,3713wl,thistimeillkeepit,3,Sat May 23 21:54:23 2015 UTC,"If you really need to hold that many strings, you may want to rethink which data type to use.  Would a custom object, maybe a tree structure with child and parent nodes, better suit your needs?  Arrays are great for general use, but lookup can be costly with that large of an array.  As for persistent storage, I would recommend you look into Core Data and read Apple's Introduction to Core Data Programming Guide  for iOS.  You could store these strings (or your custom object) in a sqlite db or Property List file, and create your app with a pre-built database for easy retrieval."
swift,3713wl,JALsnipe,1 point,Sat May 23 22:14:04 2015 UTC,I'll look into it!  Thank you!
swift,3713wl,iOSGuy,2,Sat May 23 22:20:29 2015 UTC,"A plist may still be slow for this, as they slow down quite a bit after a certain size. You could use NSCoding protocols to serialize the array to an NSData object and write it to a text file though! I do love me some core data, when it isn't trying to kill me, but NSCoding may be far simpler for you."
swift,3713wl,JALsnipe,1 point,Sun May 24 01:07:47 2015 UTC,"You're right that a plist may not be the most backing database type for this project.  I only recommended it to the OP since it seemed like they didn't have any data persistent experience at all.  NSCoding and serialization seems like a lot to throw at them at first, it can be scary."
swift,3713wl,iOSGuy,1 point,Sun May 24 03:41:17 2015 UTC,True true!
swift,3713wl,r0wland,-1,Tue May 26 14:10:46 2015 UTC,"Since you have a single array, using NSKeyedArchiver/NSKeyedUnarchiver should be the simplest fastest way to go. The following test works in a Playground in Xcode Version 6.3.2 (6D2105):  let documentsUrl = NSFileManager.defaultManager().URLsForDirectory( .DocumentDirectory, inDomains: .UserDomainMask )[ 0 ] as! NSURL  let fileUrl = documentsUrl.URLByAppendingPathComponent( ""strings.data"" )  var strings = Array<String>( count:120000, repeatedValue:""lorem ipsum blah blah blah"" )  NSKeyedArchiver.archiveRootObject( strings, toFile:fileUrl.path! )  strings.removeAll( keepCapacity:true )  strings = NSKeyedUnarchiver.unarchiveObjectWithFile( fileUrl.path! ) as! [ String ]"
swift,3711k6,Matt_Carlson,4,Sat May 23 21:34:35 2015 UTC,your function doesn't have a return type so it assumes that it is void  if you want this to work do  @IBAction func playMusic(sender: AnyObject) -> MPMusicPlayerController {     return MPMusicPlayerController(); }
swift,3711k6,littlepinkrose12,0,Sat May 23 21:51:18 2015 UTC,"Now I have an error saying that all IBActions must return the type of void,"
swift,3711k6,JALsnipe,1 point,Sat May 23 22:35:39 2015 UTC,"Something's not right.  What are you trying to do with your button?  Why are you initializing a MPMusicPlayerController in your IBAction?  If you're trying to play an audio file, that's not the right way to do it.  Check out the docs."
swift,370xdw,Matt_Carlson,2,Sat May 23 20:58:33 2015 UTC,Hey guys so I found a solution to this problem but I'll leave it up incase anybody else needs help  http://stackoverflow.com/questions/23427792/xcode-control-drag-only-works-in-first-storyboard-view-controller
swift,370xdw,klngarthur,6,Sat May 23 21:10:51 2015 UTC,"Glad you aren't DenverCoder9, OP"
swift,370xdw,xkcd_transcriber,2,Sun May 24 03:46:33 2015 UTC,"Image  Title: Wisdom of the Ancients  Title-text: All long help threads should have a sticky globally-editable post at the top saying 'DEAR PEOPLE FROM THE FUTURE: Here's what we've figured out so far ...'  Comic Explanation  Stats: This comic has been referenced 668 times, representing 1.0330% of referenced xkcds.    xkcd.com | xkcd sub | Problems/Bugs? | Statistics | Stop Replying | Delete"
swift,36zit9,eviltofu,2,Sat May 23 13:29:34 2015 UTC,"There are far more cocoapods, and it works exceedingly well. Honestly there's no reason not to use both though. Look at the frameworks and see what they support. If you need to use both, go for it."
swift,36zit9,mistermagicman,1 point,Sat May 23 14:06:41 2015 UTC,Are you about to distribute your package? Do both if you can.
swift,36zit9,shiggie,1 point,Sat May 23 18:23:11 2015 UTC,"What are your feelings about centralisation? There's a very helpful talk by the main author of Carthage, explaining his philosophy, and how it works: http://realm.io/news/swift-dependency-management-with-carthage/"
swift,36zit9,morqon,0,Sat May 23 19:06:31 2015 UTC,Use CocoaPods until you really encounter problems. It's easier.
swift,36zit9,xhackerliu,0,Sun May 24 02:46:53 2015 UTC,Personally I can't use Cocoapods with Swift since it can't do iOS7. Once iOS9 is released I'll probably not care about 7 but until then I do
swift,36zpxk,JALsnipe,1 point,Sat May 23 14:44:36 2015 UTC,Title says it all.  I wanted to recreate the onboarding experience found in the Disney Tomorrowland app released recently.  Please let me know if you have any questions or ways I could improve this fun little demo.  Thank you!
swift,36zpxk,r00tacc3ss,2,Sat May 23 22:04:20 2015 UTC,"Thank you kind sir! It's people like you, doing projects like this, that make our digital world a better place."
swift,36zpxk,asniper,2,Sun May 24 01:28:11 2015 UTC,"Just a question, why add an extension to the data source? When delegation would suffice"
swift,36w0cf,TrendingBot,1 point,Fri May 22 16:15:26 2015 UTC,"Wow, the day has finally come! In b4 1 year too :D"
swift,36w0cf,stuarthannig,1 point,Fri May 22 22:11:16 2015 UTC,It looks like the Swift Reddit was created in 2013. Was someone name-squatting on it before Swift was released?
swift,36w0cf,MaddTheSane,1 point,Sat May 23 17:03:10 2015 UTC,"Yup, luckily he was active and made way for the programming language (not being a programmer himself). And is an active moderator for the community."
swift,36ym0l,Matt_Carlson,3,Sat May 23 05:31:43 2015 UTC,"Welcome to Xcode. Here is how you solve it.    make a copy of your entire project folder right click on your .xcodeproj file and select Show Package Contents delete everything inside the folder except project.pbxproj   You can now open the project. It will work.  BTW, I am writing a book about all shitty situations like that. Xcode is a blessed source of inspiration for writing a whole encyclopedia telling how to solve problems and limitations  😃"
swift,36ym0l,MarsSpaceship,1 point,Sat May 23 17:00:53 2015 UTC,"Get the latest XCode beta, see if it still crashes.  If it does, go to bugreport.apple.com, and submit a crash report with the project as an attachment. The project will be kept confidential."
swift,36y7rx,AxeEffect3890,1 point,Sat May 23 02:55:41 2015 UTC,"Not really, what is the use case instead of just using the values in the arrays?"
swift,36y7rx,voidref,1 point,Sat May 23 04:46:01 2015 UTC,"While you can't create variables directly, what you can do it create a dictionary and use the string as a key to store your values.   var dict = [String: Int]() dict[""x0""] = array1[0] // ... and so on"
swift,36wpse,iOSKoray,1 point,Fri May 22 19:16:46 2015 UTC,"if numPoints.value == 5  You've got two errors there: First, you should use == to compare, because a single equals sign means assignment. Second, don't put the 5 in quotes, otherwise it's treated as a string instead of an integer."
swift,36wpse,tonygoold,1 point,Fri May 22 19:32:12 2015 UTC,It still doesn't work: My Code now looks like this:   if numPoints.value == 5 {          SKColor.whiteColor()      }   And i get the Error: Binary operator '==' cannot be applied to operands of type 'Int64' and 'Int'
swift,36wpse,mick1203,1 point,Fri May 22 20:36:07 2015 UTC,"just put a Int64() around the 5, line that Int64(5). That should solve the error."
swift,36wpse,tonygoold,1 point,Fri May 22 21:41:09 2015 UTC,"Try if numPoints.value == Int64(5). You might also consider updating your version of Xcode, because I don't get that error using Xcode 6.3."
swift,36wpse,foBrowsing,1 point,Fri May 22 21:42:44 2015 UTC,if Int(numPoints.value) == 5 {     myScene.background.color = SKColor.whiteColor() }   I did it like this and it didn't worked. I also got the new Xcode Version. But still thanks ! :) Btw: It works now. Regnisied  helped me :) Here is the code:  Thanks to if Int(numPoints.value) == 5 {     myScene.background.color = SKColor.whiteColor() }
swift,36wpse,foBrowsing,1 point,Fri May 22 22:14:41 2015 UTC,"That should be a ""=="", not a ""="". ""="" is the assignment operator: You take whatever's on the right, and you assign it to whatever is on the left. So  x = 5   Makes x equal to five. But if you want to check if x is equal to five, you need ==. This'll give you back true or false, based on whether or not the left is equal to the right.   Then, you need to change your ""5"" to 5. ""5"" is a string - the character 5. But you're interested in the number 5, which is, in this case, an Int. Based on that, the snippet above should be:  if numPoints.value == 5 {      SKColor.whiteColor()  }   Then, the SKColor.whiteColor() function just returns the colour white - but to use it, you have to assign it to something, like this:  if numPoints.value == 5 {      myScene.background.color = SKColor.whiteColor()  }"
swift,36wpse,Regnisied,1 point,Fri May 22 19:39:15 2015 UTC,Thanks but it still didn't worked:  It still doesn't work. I get the Error:  Binary operator '==' cannot be applied to operands of type 'Int64' and 'Int'
swift,36wpse,tonygoold,1 point,Fri May 22 20:37:22 2015 UTC,"Ooh I should have spotted that in your post. I'm not sure why you've got Int64s, but this should work:  if numPoints.value == Int64(5) {      myScene.background.color = SKColor.whiteColor()  }"
swift,36wpse,Fixtor,1 point,Fri May 22 20:52:29 2015 UTC,"Thanks, but now i get this Error:  Binary operator '==' cannot be applied to two Int64 operands"
swift,36w64j,ejaycoleman,1 point,Fri May 22 16:55:13 2015 UTC,"The answer is all over google.  Top hit for ""ios mapkit coordinates of tap"" is: http://stackoverflow.com/questions/14580269/get-tapped-coordinates-with-iphone-mapkit which gives the answer in ObjC.  Is the problem that you don't know how to translate that to Swift?"
swift,36w64j,skoll,1 point,Fri May 22 17:04:55 2015 UTC,"Yeah that is my problem, thanks anyway though"
swift,36w64j,skoll,2,Fri May 22 17:16:13 2015 UTC,"ObjC isn't so scary.  Just search for the methods in XCode help (or google them with ""swift"" added).  In this case if you have a gesture recognizer callback your code will look like:  func handleGesture(gestureRecognizer:UIGestureRecognizer) {     let touchPoint = gestureRecognizer.locationInView(self.mapView)     let location = self.mapView.convertPoint(touchPoint, toCoordinateFromView: self.mapView)     NSLog(""\(location.latitude), \(location.longitude)"") }   Edit:  Note I just ported the Stack Overflow post code to swift.  I have no idea if it works."
swift,36tu93,helloevrebuddy,2,Fri May 22 01:55:55 2015 UTC,Al the data should be in the table view'a data source so I suppose you could pull the data from there. If you have a reference to a cell you can get the cells index path (tableview.indexPathForCell(cell)) to determine where in the data source you should look.
swift,36tu93,dwltz,2,Fri May 22 06:53:29 2015 UTC,the same way you're pulling from your datasource
swift,36tu93,asniper,1 point,Fri May 22 13:53:25 2015 UTC,all data is manually entered by the user
swift,36tu93,asniper,1 point,Fri May 22 15:00:13 2015 UTC,Then what does your cellForRowAtIndex look like?
swift,36sz0p,sattmaunders,1 point,Thu May 21 21:39:19 2015 UTC,"Honestly I would recommend a UIPageViewController instead. Table view cells are meant to hold lightweight, quick-loading content. Create a view controller sub class for your video player, and have the page controller return a new instance with the video you want in controllerBefore and controllerAfter (look up the docs if that's confusing)  Edit: here's a tip, if you want the page controller to not go anymore to the left or right, return nil."
swift,36sz0p,mistermagicman,1 point,Thu May 21 23:09:31 2015 UTC,Try JKPageViewController written in Swift to paginate between the video-playing viewControllers
swift,36sz0p,grewgrewgrewgrew,1 point,Fri May 22 14:29:37 2015 UTC,"Why is this better than UIPageViewController? I'm all for frameworks when they provide a much better solution to a hard problem, but try to avoid them unnecessarily. UIPageViewController works well and fairly easily."
swift,36sz0p,mistermagicman,1 point,Fri May 22 15:03:49 2015 UTC,"It has a simpler interface for the routine task of nesting an array of UIViewControllers. I found it to be a PITA to keep track of current index, last index, and upcoming index for continuously interactive animations and networking calls. Thanks for making it clear that I need to update the description/rationale for the subclass :)"
swift,36sz0p,grewgrewgrewgrew,1 point,Fri May 22 15:14:59 2015 UTC,"Ah. I don't keep track of index and such - I just use an array of view controllers, and in the finishedAnimating method set the page based on the current one. It's really quite simple. I agree that I see a lot of people taking an overly complicated approach, but it's not really necessary."
swift,36sz0p,mistermagicman,1 point,Fri May 22 22:48:37 2015 UTC,"For playing a video you might be able to use scrollViewDidScroll and loop over [tableView visibleCells] and check the frame of each visible cell to see if any are fully visible or whatever your criteria is for beginning playback.  You could stop the playing video in didEndDisplayingCell.  If you want to enforce only a single playing video, then maybe you want to keep a reference to that video player in the controller.  Whenever you start a new video you stop the old one first (regardless of on screen or off), then assign the pointer to the new video player.  But I'm just answering the how, not the why.  You might want to listen to /u/mistermagicman..."
swift,36tpu5,craymond123,1 point,Fri May 22 01:16:47 2015 UTC,Are you getting error messages?
swift,36tpu5,dwltz,1 point,Fri May 22 06:54:09 2015 UTC,"I get a green one saying Bad Insruction, this is only on the .loadrequest of the second video."
swift,36tcrc,jctennis123,1 point,Thu May 21 23:25:36 2015 UTC,"I'm not sure of what you are asking for. Some kind of network connection? Almost too any ways to mention. Cloudkit, sockets, http, etc. Perhaps you could try to describe in further detail what you are trying to accomplish."
swift,36tcrc,hartt,1 point,Thu May 21 23:46:08 2015 UTC,"Thank you.   The app I am working on will show the location of other users on a map. Users can to view other users by age and gender.   When a user downloads the app, they will be asked their own age and gender on a one time sign up page which will look like this: http://i.imgur.com/XzuB0q6.png?1.   I am not even sure how to phrase this question for a google search. If you tell me what I should be looking for, I can find some tutorials."
swift,36tcrc,dwltz,1 point,Fri May 22 00:16:11 2015 UTC,"Should the age and gender data be stored on a server? If so, do a POST httpRequest to a url where you can store the info. Then do a GET request that will have all location an gender data as a response body. The data format you're probably looking for is JSON. If you understand how all this works, you should be able to build your app. Some suggested google searches:   POST form data with swift Store data with php and MySQL  GET request with swift Use JSON with swift   Replace swift with objective-c if you're into that kind of thing."
swift,36tcrc,Kametrixom,1 point,Fri May 22 06:59:12 2015 UTC,Thank you!!!
swift,36rhem,Allezxandre,5,Thu May 21 15:22:21 2015 UTC,does the program I'm trying to create already exist?   iTunes?  Edit: Unless you just mean a light weight program just for album art.. but in case you weren't aware iTunes does have this feature (currently at work but in Windows iTunes it's under File > Library > Get Album Artwork)
swift,36rhem,elitemrp,1 point,Thu May 21 17:33:35 2015 UTC,"I use iTunes a lot, that's why Album Arts are so important to me, unfortunately the built-in feature does not seem to ""integrate"" album arts to the mp3 files.   Until now I used Tag from the Mac App Store to do this, but it does not search album arts automatically."
swift,36rhem,MaddTheSane,1 point,Thu May 21 22:19:07 2015 UTC,Have you tried telling iTunes to write ID3 tags back to the files? I know older versions of iTunes allowed you to do so.
swift,36rhem,yesmar,1 point,Thu May 28 06:22:50 2015 UTC,You might want to check out AtomicParsley
swift,36rhem,vinags,1 point,Thu May 21 20:09:29 2015 UTC,"Thanks, I will look into it for m4a tagging. Any suggestion for other audio file formats?"
swift,36t7f2,b42thomas,1 point,Thu May 21 22:43:31 2015 UTC,Did a quick search and it looks like you can't do this in the simulator because there's no Calendar app. It looks like EventKit does is through calendar events or reminders.
swift,36t7f2,Ceribis,1 point,Thu May 21 23:18:44 2015 UTC,So would that work? If I was running it on a device?
swift,36t7f2,Ceribis,1 point,Fri May 22 00:16:09 2015 UTC,It's worth a try. You'll probably need to request calendar permission as well which I have idea how to do.
swift,36t7f2,voidref,1 point,Fri May 22 02:05:49 2015 UTC,How do I do that?
swift,36sdas,Sjetware,2,Thu May 21 19:05:31 2015 UTC,"Yep, you'll need a device to test beacons"
swift,36sdas,Racepace,1 point,Thu May 21 20:31:03 2015 UTC,"Developing Bluetooth enabled apps requires being able to run the app on a real iOS device. As for the beacon itself, you might be able to find a beacon simulator that runs on the Mac."
swift,36s26u,greatwhitebullshark,1 point,Thu May 21 17:47:26 2015 UTC,"I use this open source parser https://github.com/tadija/AEXML it was used in my app and it works flawlessly, also very well documented."
swift,36s26u,dark7wizard,1 point,Thu May 21 20:24:04 2015 UTC,"There are two native ways of handling XML files:   Event-driven: Use NSXMLParser to go through the document and get updates on every element/attribute/etc.  Guide Tree-based: Initialize NSXMLDocument with a file, from there you can access all the nodes. Guide   In your case where the file isn't very big it's much easier to use the tree-based method, like this you'd also automatically have the needed parent-child structure"
swift,36s26u,Kametrixom,1 point,Fri May 22 12:21:26 2015 UTC,"Assuming you already got the NSXMLParser set up and running, i'll shortly explain the 3 NSXMLParserDelegate methods that you will need to parse your XML.     func parser(parser: NSXMLParser!, didStartElement elementName:String!,namespaceURI: String!, qualifiedName qName: String!, attributes attributeDict: [NSObject : AnyObject]!)    Called when opening-tag appears (e.g. <building>) Used to initialize objects      func parser(parser: NSXMLParser!, didEndElement elementName: String!, namespaceURI: String!, qualifiedName qName: String!)    Called when ending-tag appears (</building>) Do something with your created      func parser(parser: NSXMLParser!, foundCharacters string: String!)    Called whenever a content string appears (e.g. ""Commonwealth School"" as the name of the first building) Keep the value until you know what attribute it belongs to (indicated by the next end-tag you find)      These 3 should be enough to get all the information out of your simple XML, but you should probably also implement  func parser(parser: NSXMLParser!, parseErrorOccurred parseError: NSError!)   and try to handle the error incase one has happened.     Let's look at a sample which would create building objects and get the name for each building.  struct Building {     var name: String? }  class BuildingParser: NSXMLParserDelegate {     var building: Building?     var elementValue: String? //This is used to store the content of a tag until the end tag is called      func parser(parser: NSXMLParser!, didStartElement elementName: String!, namespaceURI: String!, qualifiedName qName: String!, attributes attributeDict: [NSObject :           AnyObject]!) {         //Reset the elementValue property to an empty string to store the content of the newly started tag         self.elementValue = """";          if elementName == ""building"" {             //Create an empty building             self.building = Building()         }     }      func parser(parser: NSXMLParser!, didEndElement elementName: String!, namespaceURI: String!, qualifiedName qName: String!) {                 if elementName == ""name"" {             //The content of the name tag of our current building is stored in the elementValue property             self.building?.name = self.elementValue         }         else if elementName == ""building"" {             //Do something with your completed building here         }     }      func parser(parser: NSXMLParser!, foundCharacters string: String!) {         //append characters to self.elementValue         self.elementValue? += string     } }      Fetching the remaining building information should be straightforward, but if you got any questions i'd be happy to help!     Edit: Formatting"
swift,36s26u,deadline_,1 point,Sun May 24 16:45:29 2015 UTC,"I already got my parser parsing the data i need, thank you for long and thorough answer, just what i needed!"
swift,36rtam,tacojohn44,2,Thu May 21 16:46:37 2015 UTC,You want to change the color of the text or the view behind it?  If you want to change the color of the text the only two options you have are black and white.
swift,36rtam,justinsharkey,1 point,Thu May 21 16:52:10 2015 UTC,Second option. Shoot. I was afraid it was only black/white.   Thank you.
swift,36rtam,ttbrahbro,1 point,Thu May 21 18:08:40 2015 UTC,"The System Status bar is transparent. So, like /u/justinsharkey said your only options are changing the content style to either light or dark. Check out this page for the Apple Interface guidelines pertaining to the System Status Bar."
swift,36rtam,grewgrewgrewgrew,0,Thu May 21 20:29:37 2015 UTC,"Try changing the background color of appdelegate.window to your color and changing the frames of all your viewcontrollers to (0, 20, screenwidth, screenheight - 20)"
swift,36my4o,ajn123,11,Wed May 20 15:47:19 2015 UTC,"I've been doing iOS development full time for 7 years   Lots of people use storyboards.  Some older apps do not (as they started with NIBs)  Storyboards are pretty good at a few things, quite bad at a few other things. Doesn't mean they shouldn't be used.  If you choose to avoid them, that's totally an option for you, but if you want a job doing iOS work, eventually, you will probably need to come to terms with IB.  That said, the people who use them most successfully do not do absolutely everything in the storyboard, they definitely mix some code in there to make it all go easily.  If a storyboard way to do something isn't working, whip out the code and programmatically make that feature.  If you need to globally reconfigure something, consider procedurally generating part or all of that part of the UI.  And for your own sake, use SEVERAL storyboards for the different parts of the app, Not one jumbo board with 100 view controllers specced out in it."
swift,36my4o,ASnugglyBear,1 point,Wed May 20 21:09:12 2015 UTC,"I had no idea you could use more than one storyboard. Can you segue from one storyboard to the other? How do you connect them, just doing a presentViewController ... From code or?"
swift,36my4o,vale93kotor,3,Sun May 24 06:39:28 2015 UTC,"You connect them in code.  So in the IBAction for the handler for say a button push or a tableview did select row at index path call (sorry formatting, on my phone), you instantiate the storyboard and present it or push it onto the navigation controller as appropriate  Login is a clearly separate storyboard for almost all apps, especially if you have onboarding, sometimes it's two if you have fancy on boarding and a lot of things like password resets and stuff"
swift,36my4o,ASnugglyBear,2,Sun May 24 07:47:01 2015 UTC,"Nice, no idea why I never thought it was even possible. Guess I'll split some giant storyboard tomorrow morning ;)  Thanks."
swift,36my4o,vale93kotor,18,Sun May 24 19:06:43 2015 UTC,"Former Apple engineer here..  At Apple, we used nibs, xibs, and storyboards whenever possible to cut down on the amount of code we had to maintain.  Since the time of the Apple/NeXT merger, we had an endless stream of newbs asking ""how do I do this without using IB?"", and my reply was always along the lines of ""why would you want to?""  The tools are there for a reason.  Use them."
swift,36my4o,ReasonReader,3,Wed May 20 21:28:42 2015 UTC,"At Apple, we used nibs, xibs, and storyboards whenever possible to cut down on the amount of code we had to maintain.   And other teams had the completely opposite position..."
swift,36my4o,overcyn2,2,Thu May 21 00:34:15 2015 UTC,"I was in ProApps, and I worked closely with the Dev Tools team.  Our UI was about as elaborate as anything ever gets on the Mac."
swift,36my4o,ReasonReader,1 point,Thu May 21 03:43:39 2015 UTC,I can definitely see the advantages in that situation. I feel like it takes a lot more code to customize AppKit than to do the equivalent in UIKit. Also the interfaces are certainly a lot simpler on iOS as well.
swift,36my4o,overcyn2,2,Thu May 21 04:19:08 2015 UTC,Out of curiosity which teams specifically are you talking about?
swift,36my4o,Hawk_Irontusk,-4,Thu May 21 13:14:48 2015 UTC,"Im a really beginner in swift dev and to me putting the view outside of the code by using storyboards is really misleading.  and dont get me started on drag and dropping UI element into the code, wtf -_-"
swift,36my4o,EZPZ420,9,Wed May 20 22:59:35 2015 UTC,"I use to be one of the people who would stick to old methods and do things programmatically or at most using find because of the feeling of having more control. However, I've given storyboards a fair shake and they actually come with a lot of great functionality that simplifies and allows you to have a better grasp of the flow of the program. They've really made great strides in making it useful. Take a look at some of the WWDC videos. Also the auto layout features you can implement in IB saves a lot of verbose unnecessary code in your files."
swift,36my4o,koalefant,9,Wed May 20 16:37:16 2015 UTC,"I happen to be in the opposite boat - I've found them to fragment my code and hinder efficient development.  Personally, I find some of the benefits of code-only to be:   I can write factory methods to create control types with application-specific styling already applied. This greatly reduces the amount of code for programmatically creating an interface, gives auto-complete to make it even faster, plays well with source control always, and generally keeps the method for creating most views to a dozen ( or two ) lines of code. Having the interface created in a single method in the view code keeps responsibility for that file isolated only in that file. This ( IMO ) greatly reduces complexity and amount of time spent learning and navigating a code-base for maintenance and extending. Occasionally I will have issues where XCode seems to lose connection points between IB and code - I can see the outlet a control has, and see the method, but the method doesn't get called. I have to remove the binding and re-create it which is frustrating and time-consuming. I have no feeling of ""black-box syndrome"" with those connections when done strictly via code. Auto-layout is awesome, but again, I can create methods to handle this succinctly and clearly and have them confined to just layoutSubviews. For instance [mylabel alignWidthWithRightPadding:5]; will auto-align mylabel to the width of it's parent, subtracting 5 points for the right side, and keeping the left edge where it was. Similarly [mylabel alignRightWithPadding:10] will align mylabel to the right edge of it's parent container with a padding of 10 points. Now I generally only use auto-layout if I'm doing an iOS 8+ only interface and want to use the auto-height on table cells - not a very common thing yet.   I think that IB has some awesome potential, but honestly Apple really isn't very good at tending to their developer's needs as end-users nearly as well as they are to their general product end-users. XCode in general, and especially IB leave a ton to be desired in functionality and ease-of-use compared to tools like Visual Studio.  It works great for some, and that's wonderful - but for me it generally ends up creating more problems and increasing the complexity of a project by fragmenting things up more than they need to be. Add in that I still need to do UI code if I want to have themes and such, and I also lose auto-complete on creation, there is absolutely no comparison which one is more extensible and easier to use for me."
swift,36my4o,exorcyze,2,Wed May 20 17:08:55 2015 UTC,Have you ever taken a look at Masonry?  I'm on a kick of doing my views programmatically and use it a lot.  It may be just what you need to bring auto layout into your work flow.
swift,36my4o,derpasoreass,2,Wed May 20 23:49:59 2015 UTC,"""Masonry is being deprecated into a bugfix only state as more developers will be moving to Swift. Going forward we recommend using SnapKit as it supports Swift and provides better type safety with a simpler API."""
swift,36my4o,RDSWES,1 point,Thu May 21 00:11:39 2015 UTC,"Nice catch, I was not aware of that.  After a quick glance it looks like SnapKit has almost identical syntax and functionality but better Swift support."
swift,36my4o,derpasoreass,1 point,Thu May 21 00:49:13 2015 UTC,"Yeah, and I think it's a great project from what I've seen!  Sadly there is still only one circumstance where that becomes a better option than using the UIView sizing / layout categories I have; when needing to use AL for auto-height table cells. Outside of that, it still isn't less code or any more readable ( IMO ) than manual layout with intelligent helpers.  I do however really like that it allows for keeping responsibilities grouped together logically - in this case the layout code. That means I could have a single method for handling the layout in my view and it's very clear and easy to find / change - which is similar to how I approach with manual layout, except the method is a built-in one for layoutSubviews. =)"
swift,36my4o,exorcyze,3,Thu May 21 15:59:41 2015 UTC,Sounds to me like you're working WAY too hard.  Try learning to really use IB and Autolayout.
swift,36my4o,ReasonReader,2,Wed May 20 21:30:35 2015 UTC,"I'm not sure how I'm working harder, or how IB could make it better - but I'm definitely open to try and learn more about them. Sadly, I have yet to see any cases where IB/AL is more efficient from a standpoint of development, maintenance, extensibility, cross-project-portability, customization and team-environment than the approach I described above. I would love to see an execution of the level that is typically described when people talk about the visual tools.  The thing is, most of my interface code can be done with a couple of lines of auto-completed code per control, meaning I type very little. The same is true for my layout code, and in both instances there is transparency and cohesion inside the view file.  The layout of IB is pretty inefficiently designed IMO, and thus wastes effort. Typically, each control requires hitting both the identity and attributes tabs at minimum just to set the properties - then also the connections tab to hook it up to code. Now add to this that we frequently want many properties defined via code in maintainable apps and a typical app in that fashion already has as much code in the view than I do with appropriate helpers, except spread across multiple places.  I fully admit that I tend to ""think"" better in code, but I know that I didn't have these same issues when using Visual Studio for visual layout - in fact I preferred using that to layout interfaces. The same just simply is not true for me with the current state of the IB/AL toolset."
swift,36my4o,exorcyze,1 point,Wed May 20 22:06:35 2015 UTC,"I couldn't agree more. IB is a mess, especially for editing auto-layout stuff. say I want to change a general 5pt margin to a 6pt margin:  In IB, I have to edit every constraint manually, and hope that I get them all correctly. Before committing, checking the diff might give me a hint of what I've actually done, but since the XML is barely humanly readable I cannot be sure.  In code, I can just use a variable or constant whose value I change, and the diff will be as readable as any other code I write (so naturally YMMV).  And don't even get me started on the pain IB causes when you need to refactor your view hierarchies. Say bye bye to your existing constraints, 'coz they will be gone as soon as you move your views around."
swift,36my4o,deliciousleopard,2,Thu May 21 04:23:44 2015 UTC,"Completely - I just wish the tools were a bit more developed and polished.  The other thing that shocks me is how many teams I've seen that are completely OK with needing to have a single person maintain the main storyboards because of fragility and inability to play well with source-control. I've seen many places where they have developers working on a new portion create the new interface in a nib/xib, and then a ""gatekeeper"" person has to go through and integrate that into the storyboards. Yet they praise how much time storyboards save them.  I will always go for clarity and transparency first and foremost, because at the end of the day I ( and the team ) have to be the ones to deal with the fallout if they aren't. The bulk of a good project lifecycle is in maintenance, upgrades, and fixes. Saving myself a little time during initial development at the cost of long-term transparency for updates is never the pragmatic choice to me."
swift,36my4o,exorcyze,-1,Thu May 21 16:07:19 2015 UTC,"I start creating everything programmatically back then in 2008, when I started creating apps for iOS. Interface Builder was a total piece of crap back then. Time passed and was becoming very hard to create apps for all screen formats, orientations, etc. I decided to give Interface Builder a shot. iOS 5 came with storyboards. After some reluctance, due to my bad experience with Interface Builder, I decided to give it a chance. For my surprise, I was amazed on how crappy  Interface Builder still was after all those years. The same piece of shit as before, like Xcode itself. But storyboards turned things easy in some sense, even with the crappy designed Auto Layout and constraints.  The real problem came when I decided to use storyboards on OSX apps. If you are reading this, don't fucking do that!!!. Storyboards will break your app on OSX. Even created for Yosemite, apps with storyboard that start with splitViewControllers or tabViewControllers will not work and will require a lot of hacking to work. Also, your application will not be able to load or save files using the open/save panel. How Apple approves something like that, is a mystery.   Today, I sill use storyboards for iOS but not for OSX and will never use, until 10.10 fades away in relevance. Again to those who did not read my lips: storyboard apps crash when you try to open/save files using the panel on 10.10.0, 10.10.1 and 10.10.2. Apple's official answer to my technical incident was: ""use Xibs"", which is a fantastic answer."
swift,36my4o,MarsSpaceship,2,Wed May 20 21:12:13 2015 UTC,"I'm actually using multiple storyboards in my current OS X application with no problem. It even has a splitview. I do however agree with the splitviewcontroller thing, it was a pain to implement; however, if you are planning to use auto layout I would recommend using an actual splitview rather than a splitviewcontroller in interface builder. It's actually quite simple to implement with constraints/holding priorities to do what you want it to do.  I'm surprised there's so much negative experiences associated with IB in contrast to my own. I wonder what the devs at Apple use IB themselves or whether they prefer xibs?"
swift,36my4o,koalefant,2,Wed May 20 21:30:22 2015 UTC,"I wonder if the devs at Apple use Xcode at all! They certainly have other kinds of tools. Nobody creates beautifully and complex apps like Pages, with thousands of subtle animations, fades, etc., using Xcode. Cannot be done by an human being.  Regarding OSX storyboard apps: try to use savepanel/openpanel on your storyboard app. Have some popcorn and enjoy your app crashing or not working at all on OSX < 10.10.3. What company approves an OSX version with storyboards for the first time, where devs cannot create apps that open/save files and then tell devs to use XIBs because their implementation of storyboard is shit?  Splitviewcontrollers and tabViewControllers don't work as initial view controllers on storyboard apps (OSX) without a lot of hacking to wire things properly. It is all broken."
swift,36my4o,MarsSpaceship,1 point,Thu May 21 06:43:05 2015 UTC,". Nobody creates beautifully and complex apps like Pages, with thousands of subtle animations, fades, etc., using Xcode.    Yes, they do.  I know this first-hand."
swift,36my4o,ReasonReader,1 point,Fri May 22 20:06:18 2015 UTC,but not the same version they give us and I am not talking about beta.
swift,36my4o,MarsSpaceship,1 point,Fri May 22 20:38:10 2015 UTC,"not the same version they give us   Nearly all development  groups at Apple stick to the Xcode version that's currently shipping for their daily work, and the build & integration group requires all submissions to build with the current GM version of the toolchain.  So, if an individual engineer wants to live on the bleeding edge and do his work with the latest unreleased builds of Xcode, he's free to do so, but at submission time he's using the same Xcode that anyone else can get."
swift,36my4o,ReasonReader,1 point,Fri May 22 22:57:35 2015 UTC,"Sorry by I don't buy that. Xcode is a crashing machine. I simply don't see apple engineers using something so crappy, crashing all the time and doing nothing to fix it. I have submitted almost 70 bug reports over the last 7 years, 60% of that on Xcode alone. Bugs I submitted in 2008 are still there. I can remember four of five of these bugs being solved, none related to Xcode. All bugs with sample code for reproduction. For that reason, I stopped filling their bug reports. It is a waste of time.   I think Apple has some kind of Interface Builder on steroids that really work and create a lot of stuff visually, like animations, fades and other effects and deliver them as code. Not to mention their private APIs that let them do a lot of magic we can't."
swift,36my4o,MarsSpaceship,1 point,Sat May 23 00:44:09 2015 UTC,"Sorry by I don't buy that.   Believe what you want, but I was there.   Xcode is a crashing machine.    If Xcode is crashing on you frequently, then something has gone wrong with your system.  When was the last time you checked your filesystems with Disk Utility?    I stopped filling their bug reports. It is a waste of time.   It's not a waste of time.  Bugs are prioritized by severity and part of that is the number of users affected (number of users, not number of developers, BTW.)   I think Apple has some kind of Interface Builder on steroids that really work and create a lot of stuff visually, like animations, fades and other effects and deliver them as code.    Some guys used Quartz Composer or Motion to prototype their visual effects (and FB still does this now, last I heard), but those apps are available to you, too.  There isn't any special internal version of IB, but some groups had their own IB plugins for their custom views.  These days, it's far simpler to get IB to use your views with the @IBDesignable directive, so those plugins are obsolete.   Not to mention their private APIs that let them do a lot of magic we can't.   Apple's software has to pass the App Store submission rules now, and that's been the case for a couple of years.    Final Cut and Keynote don't get to use any API that isn't available to everyone else."
swift,36my4o,ReasonReader,2,Sat May 23 01:40:25 2015 UTC,"I use the story board, but I have found auto layout to be pretty bad in most cases. So I use the story board to generally lay out/setup the screen and then programmatically fix it depending on the device.  It's a great tool. This is an unpopular opinion> It's very easy to use but it's no where near the layout mechanism android has. Sure the ios one is quicker to grasp, but android ib handles different screens sizes much much better and is much more modular and useful once you learn it's subtlies."
swift,36my4o,devsquid,1 point,Wed May 20 22:21:02 2015 UTC,I'm also curious to know the answer to this
swift,36my4o,iD986,-4,Wed May 20 15:52:58 2015 UTC,"I'm not an expert and I hate creating UI programmatically but even more I hate storyboards. In my opinion, storyboards are quite useless because   they are designed for unrealistic cases where UI is static and not complicated. Like Apple's apps. Just imagine doing complicated animations and cases where UI changes dramatically when device changes its orientation. What are you going to do? Create IBOutlet for every constraint? Doubt that. basically, it's a very big XML. On old laptops, when you're first opening storyboard with more than 20 screens, it's going to take some time. And when you bring a small change to storyboard (like, changing the initial view controller), during the compilation it's going to parse everything from the beginning dramatically increasing compilation time. At least, on my old machine, that's the way it is. I'm sure that on brand new macbook pros with SSD it's not a problem. Version control. If over 3 people work on the same storyboard, they're becoming quite a pain during a merge. Segues are just dumb. I mean, a very common case is when I want to pass some variable to destination view controller, and I have to save that variable in instance variable and then pass it in prepareForSegue. By the way, this method is taking so much space when you have a lot of segues in one view controller. Consider a case when you have a UITableView with static cells, tapping on each one will cause a different view controller appear. And then you have to create segue identifiers, make sure they are the same in storyboard and in header files, and then curse everything when app crashes with incorrent segue identifier error. What if you want to reuse the same cell UI? You can create the cell in storyboard, and make some magic to call it from different view controllers, but that's just dumb. You still going to create .xib for cell UI. They gave us some way to add constraints in IB for certain size classes, but I have a feeling that it's some kind ""Visual User Interface Hardcoding"".   Why do I hate creating UI programmatically? Because Auto Layout. That's such a big pain, even Visual Format Language is not a cure. But nevertheless, it's highly effective when you have a complicated UI.  So my approach is something like this:   Simple UI. You have a fully stretched UIImageView, couple of textfields and a button? I'm going to create a .xib file for your storyboard and create most of the UI in the .xib file. Average difficulty UI. Some more magic with animations and interface orientations? Okay, I'm going to create .xib file for a view controller, and perform auto layout and some of the stuff in the .xib file. But mostly everything will be coded. Super difficult UI. Screw .xib file, it's useless. Animations, interface orientations, universal support, everything goes there and back, even with auto layout you still have to hardcode some stuff. That's what I call hardcoded auto layout.   The average difficulty UI is the rarest case, so mostly I either do most of the UI in IB or I do everything in code."
swift,36my4o,xinatanil,2,Wed May 20 20:51:46 2015 UTC,"Don't put all the screens in one storyboard. Break it up into logical sub-components. Like I have a storyboard for login which is reused by other storyboards if and when they are required. I have a storyboard for the registration process, etc. This will help with version control.  Don't pass values in Segues. Use dependency Injection.  If you have the same UI component, you might want to break it out into a xib file.  Also try Masonry or some other layout library, the amount of code you type is reduced."
swift,36oo4h,jmcd1209,1 point,Wed May 20 22:34:08 2015 UTC,You should be able to just call the stop() method. Have a look here
swift,36oo4h,Kametrixom,1 point,Wed May 20 23:08:38 2015 UTC,"I was having the exact same problem. heres how I fixed it:  @IBAction func back(sender: AnyObject) { moviePlayer!.pause() //any other actions you need here }   the ""moviePlayer!.pause()"" code tricks the player into just pausing the video but make sure you dismiss the view controller.  i used this to do so, and I'm not having any memory leaks     self.dismissViewControllerAnimated(false, completion: nil)"
swift,36o5bv,Freshrr,5,Wed May 20 20:25:42 2015 UTC,"I'm totally biased, but my own free tutorial series is worth reading: Hacking with Swift. It's all project-based so you make apps while you learn, plus all the code is available on GitHub. Did I mention it's free? :)"
swift,36o5bv,twostraws,3,Wed May 20 21:23:19 2015 UTC,"This question gets asked a lot here. Probably a good start would be to read the sidebar.  Also, mandatory link to Stanford course:  https://itunes.apple.com/pl/course/developing-ios-8-apps-swift/id961180099?l=pl"
swift,36o5bv,xlogic87,2,Wed May 20 20:48:02 2015 UTC,this is a start
swift,36o5bv,blackensexican,2,Wed May 20 20:32:46 2015 UTC,"Hey, I just created the twitter @askMeiOSDev to help devs with simple questions like yours. I'll do my best to help! - This github is a curated page dedicated to iOS Devs. and there will be many links related to swift 🔶 - Rey Wenderlich is also an awesome place to learn."
swift,36o5bv,askMeiOSDev,1 point,Wed May 20 22:51:12 2015 UTC,"Check out http://tutorios.com, it aggregates all swift tutorials,  libraries and news."
swift,36o5bv,psimkus9,1 point,Thu May 21 09:43:20 2015 UTC,"I won't be bragging for my dev folks at work and say it's the best resource available, but definitely worth looking into: https://netguru.co/blog/swift-style-guide-open-source Also, you can contribute to this style guide and make any improvements you find necessary. Enjoy :)"
swift,36nwlm,k8la,2,Wed May 20 19:27:05 2015 UTC,"Try Google next time: http://stackoverflow.com/questions/10428629/programatically-set-the-initial-view-controller-using-storyboards  And to recognize the initial launch, use NSUserDefaults, I recommend this Swift file for easier NSUserDefaults handling: http://radex.io/swift/nsuserdefaults/ With this you can do something like  if !Defaults.hasKey(""initialLaunch"") {     Defaults[""initialLaunch""] = true     // Do initial launch stuff here }"
swift,36nwlm,Kametrixom,2,Wed May 20 20:29:29 2015 UTC,"Thanks for the radex.io link, just what I was looking for."
swift,36nwlm,segmenter,1 point,Wed May 20 21:00:00 2015 UTC,One approach:      UIApplication.sharedApplication().keyWindow?.rootViewController = UsersTableViewController()
swift,36ndgo,blackensexican,2,Wed May 20 17:26:33 2015 UTC,"Do you reallly want remote notifications? Because if you don't it's as simple as  UIApplication.sharedApplication().registerUserNotificationSettings(UIUserNotificationSettings(forTypes: .Alert | .Sound, categories: nil))"
swift,36ndgo,Kametrixom,1 point,Wed May 20 21:09:51 2015 UTC,"it wasn't on my end, we figured out it was the server, thanks tho!"
swift,36ndgo,Kametrixom,1 point,Wed May 20 21:15:40 2015 UTC,"Oh okay, did you read the documentation?"
swift,36ludy,1011110001011100,6,Wed May 20 09:54:46 2015 UTC,"If you're looking to avoid duplicates, and keep it the same length, the best option is a set:  var rands = Set<UInt32>()  while rands.count < 5 { rands.insert(arc4random_uniform(59) + 1) }  "" "".join(map(rands) {""\($0)""}) // ""17 29 21 11 31"""
swift,36ludy,foBrowsing,3,Wed May 20 11:20:30 2015 UTC,"Because sets are unordered you lose the entropy from the sort order if you do it this way.   If you add the same numbers in a different order to a set you will end up with the same string. (since it's a implementation detail results may vary)  var rands = Set<UInt32>() rands.insert(17) rands.insert(29) rands.insert(21) rands.insert(11) rands.insert(31) let str1 = "" "".join(map(rands) {""\($0)""})  var rands2 = Set<UInt32>() rands2.insert(21) rands2.insert(11) rands2.insert(17) rands2.insert(31) rands2.insert(29) let str2 = "" "".join(map(rands2) {""\($0)""})  str1 == str2 // true"
swift,36ludy,fluchtpunkt,1 point,Wed May 20 15:41:13 2015 UTC,"You're right. If you want entropy in the order you'd have to do it another way, or shuffle the set after you made it. There's already another way to do it posted below, but you could also do:  var nums = [Int](1...60)  let rands = map(0..<5) {   _ -> Int in   nums.removeAtIndex(Int(arc4random_uniform(UInt32(nums.count)))) }  "" "".join(rands.map {""\($0)""})   Which keeps a list of the numbers between 1 and 60 that you haven't used yet, and removes based on a random index, generated by the arc4random. But all of the casts are pretty ugly, so you could also do:  var nums: Set<UInt32> = Set(1...60)  var rands = [UInt32]()  while rands.count < 5 {   rands += nums.remove(arc4random_uniform(59) + 1).map{[$0]} ?? [] }  "" "".join(rands.map {""\($0)""})   Which has a set of the numbers between 1 and 60. Then, you try and remove  a random number from the set - if it's not there, it returns nil, and you just append onto rands []. If it is there, you append on the number."
swift,36ludy,foBrowsing,2,Wed May 20 18:03:19 2015 UTC,"You could write it like this:  var numbers: [String] = [] while numbers.count < 5 {     var number = ""\(arc4random_uniform(59) + 1)""     if contains(numbers, number) == false {         numbers.append(number)     } }  let text = "" "".join(numbers)"
swift,36ludy,xlogic87,3,Wed May 20 11:55:45 2015 UTC,"if contains(numbers, number) == false   can be:  if !contains(numbers, number)   Or, if you wanted to use closures:  var rands = [UInt32]()  while rands.count < 5 {    rands += {contains(rands, $0) ? [] : [$0]} (arc4random_uniform(59) + 1)  }  "" "".join(rands.map{""\($0)""})"
swift,36ludy,foBrowsing,1 point,Wed May 20 12:23:41 2015 UTC,"I tried adding this after the while statement to sort the array, but it seems it cant sort an array of strings. How can I easily convert it to an array of ints so they can be sorted  let sortedNumbers = numbers.sorted(<) let text = "" "".join(sortedNumbers)   I tried just changing String to Int in the array declaration but the == operator doesnt like it."
swift,36ludy,foBrowsing,4,Wed May 20 18:01:33 2015 UTC,"arc4random_uniform doesn't make Ints, it makes UInt32s. So if you want the original array declaration to work, it's got to be [UInt32]().  var numbers = [UInt32]()  while numbers.count < 5 {    let number = arc4random_uniform(59) + 1    if !contains(numbers, number) {     numbers.append(number)   }  }  sort(&numbers)  let text = "" "".join(numbers.map{""\($0)""})"
swift,36ludy,xlogic87,2,Wed May 20 18:28:47 2015 UTC,"Yup, this should work"
swift,36md1w,iD986,1 point,Wed May 20 13:11:35 2015 UTC,TL; DR
swift,36md1w,chitza,1 point,Wed May 20 14:05:40 2015 UTC,Uh? Translation
swift,36md1w,chitza,1 point,Wed May 20 14:59:19 2015 UTC,"Too Long; Didn't Read  Try to post shorter code samples, this way people will actually read them and maybe try to solve your problem."
swift,36krxi,xKeno,4,Wed May 20 02:45:29 2015 UTC,With Simon Allerdice? He's really good at explaining it and since he knows objective c as well he can explain the difference. Totally worth it in my opinion.
swift,36krxi,Jubilus,4,Wed May 20 04:48:25 2015 UTC,"I’ve completed a good few of them including Swift Essential Training, an iOS course for Swift, and Code Clinic for Swift. They are all excellent in my opinion. I’d go as far as to say Simon Allardice is the best Computer Science teacher I’ve ever encountered. He really thinks about the best way to present this kind of information. In general the service is hassle free."
swift,36krxi,andorbot,1 point,Wed May 20 10:23:01 2015 UTC,"I have done all of the Swift video courses on Lynda.  My advice would be that if you're thinking about signing up JUST for the Swift course, I wouldn't do it.  The course is a great intro to Swift for beginners, but it doesn't go a whole lot further than that.  In my opinion there are other resources out there that have more to offer when it comes to learning Swift, and have more options for expanding your knowledge once you get the hang of the basics.  However, if you're also looking to learn some other topics, like general programming, web programming and even things like video production, then Lynda is a great resource.  It's well worth the money as there are tons of videos that teach you pretty much anything you want."
swift,36krxi,alt51,1 point,Wed May 20 05:32:56 2015 UTC,"Not that you were soliciting courses, but the best one I have come across is the Developing iOS 8 Apps in Swift course by Stanford. Available on iTunes U and YouTube. Excellent coding standards. I have been casually coding iOS for a few years and I learnt awesome stuff there."
swift,36krxi,band_of_misfits,1 point,Wed May 20 13:32:54 2015 UTC,"One should note that the lecturer has worked at NextStep, so he knows what he is talking about."
swift,36i86c,mmellinger66,1 point,Tue May 19 16:06:49 2015 UTC,Also: http://radex.io/archive/
swift,36i86c,Kametrixom,1 point,Wed May 20 01:45:59 2015 UTC,"Thank you kind sir, I really needed this :)"
swift,36kt33,kaswiftoooo,2,Wed May 20 02:56:10 2015 UTC,This is Exactly what you are looking for.   Edit: if you look in the description he has a link to the finished code.
swift,36kt33,aaronr_90,2,Wed May 20 03:24:28 2015 UTC,"Well, game over.  That's perfect!  Thank you -- I knew someone here would be able to help!"
swift,36kt33,aaronr_90,2,Wed May 20 03:49:45 2015 UTC,If you finish it let us know how it goes yea?
swift,36ksih,xStory_Timex,3,Wed May 20 02:50:25 2015 UTC,you need to just rerun the query with the correct pagination query information  and then append the results to the dictionary or array you are using to store the results from json() the first time.
swift,36ksih,joycamp,1 point,Wed May 20 02:56:00 2015 UTC,"im guessing you are saving the JSON and using that to populate a TableView or something similar ?  If so you should really turn the JSON into objects by for looping through the individual JSON objects contained inside via for looping the NSDictionary's inside the JSON, converting them to objects and saving the objects in an Array.  Then when you paginate you just add the new objects to the array and call reloadData on the tableView (Basic implementation for better results use insertRow:)"
swift,36ksih,criosist,1 point,Wed May 20 14:17:23 2015 UTC,what are the advantages of turning the json into objects? like a custom object like in that grokswift example someone else posted?
swift,36ksih,criosist,1 point,Thu May 21 22:00:35 2015 UTC,"well you wont be appending any JSON data as you paginate, you will be making cells from objects rather than keys from JSON, its much tidier, you can abstract the parsing allowing multiple classes to easily utilise your objects with copy pasting parsing code."
swift,36ksih,darkshade_py,1 point,Thu May 21 22:28:57 2015 UTC,"See This, http://grokswift.com/rest-tableview-in-swift/  A way to populate tableview with paginated JSON API"
swift,36kmpx,moez05,1 point,Wed May 20 02:03:57 2015 UTC,"Look at the subclassing chapter in the docs, once you implement the protocol, the just create using the new class. MyClass()"
swift,36hpyt,vrwim,1 point,Tue May 19 13:54:17 2015 UTC,"You don't need a custom UIView subclass. You can use any of the UIViewAnimationTransition enums.  You can also do something completely custom using the UIView animateWithDuration: methods, for example you can add a subview to a parent view with alpha set to 0, animate it going to 1, then in the completion, remove the old view that is now completely hidden."
swift,36hpyt,retsotrembla,1 point,Tue May 19 14:13:34 2015 UTC,"But can I make a new value in the enum, such as .TransitionSlideFromLeft? And then override or implement some kind of method so that it just works? I'd like to use it everywhere in my app."
swift,36hpyt,retsotrembla,1 point,Tue May 19 14:25:05 2015 UTC,"Be proud: if you are going to add new behavior, design your own, more appropriate, API for it. Don't try to shoehorn new behavior into Apple's classes."
swift,36hpyt,lifely,1 point,Tue May 19 14:31:35 2015 UTC,take a look at this:  http://www.objc.io/issue-12/custom-container-view-controller-transitions.html  Theire plenty on informations and blog post on the matter of UIViewControllerAnimatedTransitioning online.  It's a really interesting component/api and allow custom behavior
swift,36f0s3,vrwim,8,Mon May 18 21:46:15 2015 UTC,"Perhaps this could be what you're looking for: Swifter, a tiny http server engine written in Swift from Damian Kołakowski  From the README:  How to start ?  let server = HttpServer() server[""/hello""] = { .OK(.HTML(""You asked for "" + $0.url)) } server.start()   How to share files ?  let server = HttpServer() server[""/home/(.+)""] = HttpHandlers.directory(""~/"") server.start()   How to redirect ?  let server = HttpServer() server[""/redirect""] = { request in   return .MovedPermanently(""http://www.google.com"") }  server.start()"
swift,36f0s3,jakemarsh,1 point,Mon May 18 22:17:53 2015 UTC,"Took a quick look at it, yes this is what I wanted 😃"
swift,36f0s3,gaymenonaboat,1 point,Mon May 18 22:29:52 2015 UTC,"Is there an inherit benefit to writing a server in Swift/Obj-C, as opposed to the many languages with better web support?"
swift,36fowy,xStory_Timex,2,Tue May 19 00:53:15 2015 UTC,your table view returns numberOfRows and heightForRow   Screen Height - (numberOfRows * heightForRow) = remaining space.   if your table cells are not all the same size you can dynamically calculate the size by either for looping your datasource or already made rows.
swift,36fowy,criosist,1 point,Tue May 19 12:33:30 2015 UTC,"Is the ""write the comment"" a separate view? Is there any way to attach it as the second section of your tableview? You could even make it the header of in the second section.  Another option is in your storyboard to create a NSLayoutConstraint.  Add a constraint from your table to the outer view container that is ""Bottom Space to Container"". Then select the constraint and create a reference outlet to it as a NSLayoutConstraint and you should have the height:  @IBOutlet weak var totalHeight: NSLayoutConstraint!  then use totalHeight.constant to find the height."
swift,36bsvh,AxeEffect3890,5,Mon May 18 02:49:25 2015 UTC,"I'd be in, this sounds fun."
swift,36bsvh,catonkeyboardjsjsjsj,2,Mon May 18 04:51:38 2015 UTC,Depends on how you feel about neophyte swift programmers. I'd be interested so long as someone would be okay with working with my limited skill sets.
swift,36bsvh,thefueley,1 point,Mon May 18 03:49:56 2015 UTC,"Well I imagine trying to make sure people are forward about what they exactly need help with.   I’m new myself and am thinking about trying to add some people to the project I am working on. I don’t need an expert, but two people learning and putting their knowledge towards the same goal is better than one."
swift,36bsvh,newbill123,2,Mon May 18 04:41:53 2015 UTC,"I would be very interested in a team up situation, personally.  As its own subreddit, it might make an interesting community. It would be specific enough that you could ask people for more information than you might find on the TeamItUp subreddit alone.   Primary Goal - App in the store? Learning experience? Open source code? Porting an app from another platform?  Non-Coding Skill Desired - Coding with iOS/Swift would be the most common item (otherwise why list on a swift specific subreddit) but additional skills might be worth noting (designer chops, foreign language fluency, technical writing / editing, etc). These could also be found on the main TeamItUp subreddit, but a coder fluent in French, or a designer who knows iOS, might be more valuable. Non-iOS Tech Skill Needs - Fluency in web backends? writing unit tests? porting from Android? skills with functional programming? basic / advanced Objective-C knowledge? Interests in HomeKit, Core Audio, or whatever. The partner might be asked to list what knowledge they have with one of these skills, or just list if it's an area of interest they'd love to dig into while working on a project. Launch Timeframe - Some (educational for example) might be indefinite, but for most there's usually a timeframe where either the project needs to launch (the next Comicon? Christmas? etc) or the goals might go stale and need to be re-evaluated (the next WWDC?, the renewal deadline for the owner's Apple developer subscription?, etc). An idea of the timeframe gives an idea of how intense this might be. Anticipated Legal Status - In the US, any code you write is your copyright unless you sign it away. The project's owner should divulge what is expected of contributors to a project. Turn it over exclusively to the project organizer? Make it open source under what license? It's just better to answer this question earlier rather than later discover two people were on irreconcilable understandings. Rewards Possible - In many cases, the work itself might be it's own reward. If there is a possibility of something else, it'd be worth listing.   I actually think that other than a brief overview of the project, some developers may not be interested in openly sharing their idea on the forum. True, you can't keep it secret if you're looking to add someone to your team, but if it is a unique idea some will want to speak of it in only general terms (it's a joke app, it's a turn based game, it's an app to train an interested user, it's a wrapper that combines data obtained from two popular web services). If folks are willing to share more, that'd be great and probably encourage additional team members to consider joining (or not joining if they see the idea is not a good fit).  Would it be worthwhile to ask about Swift skill so far? Swift has already changed greatly since it's release, and I bet it will change again with WWDC 2015. In the future, it'd be good to quantify skills with Swift (or iOS) but for now, how would one do that? Are you volunteering to be the moderator? Do you need help moderating?"
swift,36bsvh,newbill123,0,Mon May 18 04:30:25 2015 UTC,"Yea pretty much my thoughts exactly. I was going to go ahead and create the sub (defaulting me as a mod) but I was having a brain fart as to what to call it, I was thinking swiftteams but I don’t like the double t and I don’t like the sound of swiftcollab. Maybe swiftprojects?  But yea I would want at least one other person on the mod team. I currently only envision a few rules that would need enforcing but I don’t have problems with sharing “power”.   Edit: I’m also not sure if I should make it for swift or for ios programmers in general."
swift,36bsvh,xlogic87,1 point,Mon May 18 04:39:27 2015 UTC,"SwiftProjects sounds good. SwiftTeamItUp? TeamItUpSwift? SwiftTogether?   IMHO, iOS doesn't make a great abbreviation to use in subreddit names because of the odd capitalization.   But I certainly would leave it open to programmers in the Apple ecosystem. Did you learn iOS with Objective-C but are only now getting your sea-legs with Swift? Maybe you learned Swift with an idea of programming for the Mac, but now want to know the iOS ecosystem. Both should be welcome, but if you know neither the language, nor the frameworks, you wouldn't really have a common lingua franca to be talking with. Still, it's probably just simpler to say Swift rather than try to encompass all of that in one term."
swift,36bsvh,Knaledge,1 point,Mon May 18 04:58:25 2015 UTC,Please post the name of the sub if you create it. I would be interested to see how it develops and maybe collaborate on some projects.
swift,36bsvh,Stephen110,1 point,Mon May 18 07:58:54 2015 UTC,"Maybe CodeTeam or CodeTeamUp.   iOS (Swift, Obj-C, etc.) is a great initial focus - though the sub could serve as a magnet for other disciplines / languages.   I have no coding background but am very experienced in QA, experienced in technical writing, moderately experienced in BA/BI, and light experience in PM/PO.   This sub would interest me."
swift,36bsvh,xlogic87,1 point,Mon May 18 12:09:37 2015 UTC,"I think this would be sweet, but I don't know how much traffic the subreddit would generate (thinking of how little goes on at the swift jobs subreddit)"
swift,36bsvh,niebieski3,0,Mon May 18 03:54:38 2015 UTC,yea this is my main concern. There would be a surge of traffic at first but it would probably die down pretty quickly
swift,36bsvh,coney_dawg,1 point,Mon May 18 04:04:27 2015 UTC,"Sounds like a good idea. I am currently working on a simple app and I noticed that I could create the app much faster if I had someone to team up with. It is also more fun and creative to work with other people as you have someone to bounce ideas off.  I think this would work best for building simple apps for experience, that you could publish on the appstore for free."
swift,36bsvh,criosist,1 point,Mon May 18 08:05:12 2015 UTC,I think this is a great idea. I'm interested in participating in it.
swift,36bsvh,triivium,1 point,Mon May 18 11:24:31 2015 UTC,/r/programmingbuddies
swift,36bsvh,throwawaycompiler,1 point,Mon May 18 19:03:36 2015 UTC,I dont understand why you would make it swift exclusive as you would be essentially increasing your subreddit community but over double (guessing) by including obj-c ?
swift,36bsvh,masters3d,1 point,Mon May 18 19:27:58 2015 UTC,I'm interested! I'd love to get more experience working on a team and learning and growing along the way.
swift,36bsvh,xStory_Timex,1 point,Mon May 18 19:31:09 2015 UTC,"I would totally be interested, if anyone would be willing to make any use of a novice swift programmer."
swift,36bsvh,bashir26,1 point,Mon May 18 20:04:40 2015 UTC,What apps? how about something like http://exercism.io/ for swift
swift,36bsvh,muzzytimes,1 point,Tue May 19 00:07:24 2015 UTC,I'd be interested if it was with someone in the chicagoland area. Not interested in remote development unless i was convinced otherwise haha.   Anyone in Chicago?
swift,36c6w0,dcpc10,3,Mon May 18 05:17:05 2015 UTC,You could use extensions and MARK. Extensions for grouping functionalities and MARK for easy navigation in Xcode.
swift,36c6w0,xlogic87,3,Mon May 18 07:26:06 2015 UTC,"I'd also recommend using extensions; just put the code into a separate file - no reason to put separate functionality into the same file, right? Then you also don't really need MARKs."
swift,36c6w0,jasamer,2,Mon May 18 08:30:54 2015 UTC,Xcode recognizes /// MARK: <comment> as a pragma mark and creates a divider and entry for it in the navigation bar up above the editor.
swift,36c6w0,CodaFi,0,Mon May 18 05:44:58 2015 UTC,"Thanks, unfortunately it doesn't appear to change color. If anyone knows of a way to do that, I would appreciate it.   As a side note, I am sure this will be changed in the future as swift evolves."
swift,36c4i2,vlastimilfiser,2,Mon May 18 04:49:46 2015 UTC,"You will need to use an Objective-C bridging header because MagicalRecord is written in Objective-C.  In your screenshot you're just doing import MagicalRecord but that isn't importing the namespace like you think.  Add a new file to your project, say a new UITableViewController, but select Objective-C to be the language for the file. Xcode will then ask if you'd like to create an Objective-C bridging header - select yes. You can now delete your new UITableViewController.h and UITableViewController.m files and take a look at the bridging header.  Inside that bridging header you can import MagicalRecord and make it available to your Swift project:  #import <MagicalRecord/MagicalRecord.h>"
swift,36c4i2,yeskia,1 point,Mon May 18 04:56:19 2015 UTC,"OK, thanks!  I will try it via the Obj-C Bridge. I find some implementation without Bridge, and it works. It's magic. :)  But for me, I will try the way with bridge. :)"
swift,36av0i,ams61822,3,Sun May 17 21:37:38 2015 UTC,"Don't start an action within the update method, because every time it is called, it cancels the old action with the same key and restarts it from the beginning. Credit: http://stackoverflow.com/questions/21696835/runaction-withkey-not-working-in-sprite-kit  (Google first before asking a question ;))"
swift,36ar9l,_onAndOffAgain,3,Sun May 17 21:04:41 2015 UTC,"Built-in animations in iOS (the ones that you can do with UIView.animate...) don't redraw for every frame of the animation. These animations do things that can be done by the GPU; that makes high frame rates possible. DrawRect, however, is run by the CPU, it's not a great idea to run that 60 times a second.   If you really need to, you could do it manually - look into CADisplayLink, to redraw your view at a given frame rate. But that's quite CPU intensive.  However, depending on what you're drawing, you may be able to get away with built-in animations. If your drawing code draws mostly lines, arcs, etc, one class that could be very interesting to you is CAShapeLayer - it can draw and animate UIBezierPaths. It's possible to do quite sophisticated animations of shapes with that.  If you tell me a little bit more about what kind of animation you're trying to achieve, I might have some more tips for you - but it's kind of likely that you can't use your Paintcode code directly."
swift,36ar9l,jasamer,1 point,Sun May 17 22:47:27 2015 UTC,"Thanks for the Answer! Where do you get information such as what part is run on GPU or CPU? very interesting and good to know ...  I will definitely look into CAShapeLayer.  But I just got an idea of a workaround, but my implementation of it does not work. Basically, I noticed that when hooking up the rotation value of my vector-image to a UISliders valueChanged event, I can mimic a smooth animation (just by sliding from left to right).  So I thought maybe I can animate the UISliders value and let it change the rotation of the vector-image. Problem is that the animation of UISlider does not trigger the valueChanged event Any thoughts on that?"
swift,36ar9l,jasamer,2,Mon May 18 18:03:09 2015 UTC,"Setting the value of any control in code does not trigger change events. This is mostly because that would cause infinite loops very frequently: you could have code that changes the value of a control in the code called by the control's event.  Aside of that, your solution is a very round-about way of doing this - even if it did work, I'd recommend against it.  Just use a CADisplayLink, and redraw your view whenever it fires."
swift,36ar9l,silver_belt,1 point,Mon May 18 22:55:04 2015 UTC,Take a look at this: http://www.objc.io/issue-12/animating-custom-layer-properties.html
swift,368o2v,alt51,2,Sun May 17 06:13:40 2015 UTC,I think this is a great idea.
swift,368o2v,mick1203,1 point,Sun May 17 15:56:33 2015 UTC,"I second this. I'm starting with Swift so I have nothing to show for myself, but it will be nice to see what other people are building and feel inspired > motivated and finally jealous because I didn't think of the idea first ;)"
swift,368o2v,dliquid2,1 point,Sun May 17 14:47:08 2015 UTC,Ryan Poolos reviews user apps every month at Ray's site: http://www.raywenderlich.com/u/RyanMan
swift,369r7t,iD986,6,Sun May 17 15:50:43 2015 UTC,"Stop using ! everywhere.  Swift has optionals so that the type system protects you from things unexpectedly being nil.  When you use !, you're switching off that protection, essentially saying ""I'm sure this isn't nil, and it's okay to crash here if it is nil"".   var cell = tableView.dequeueReusableCellWithIdentifier(""Cell"") as? UITableViewCell    In this case, cell will be nil if dequeueReusableCellWithIdentifier() returns nil.  It will also be nil if the type of the object returned is not UITableViewCell or a subclass.   if cell != nil {     // … }    Here you are explicitly aware of the fact that cell might be nil…   return cell!    …but immediately afterwards, you force the compiler to crash if it is nil.  The likelihood is that your reuse identifier is wrong and so cell is nil.  However the real issue is that you're making your code extremely crash-prone and difficult to debug by disabling all the protection that the type system gives you with optionals.  Stop using ! so much and your code will improve drastically.  You should only be using ! when you are certain that the optional in question has a value.  That's clearly not the case here."
swift,369r7t,JimDabell,2,Sun May 17 16:41:41 2015 UTC,"cell?.textLabel!.text = tableData[indexPath.row]   I'd bet this is whats throwing the exception - unless you registered a nib with the reuse identifier ""Cell"" somewhere else in your code that you didn't post, cell is going to be nil.   UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: ""Cell""  )   This isn't doing anything, you are initializing a table view cell, and not assigning it or doing anything with it  Try this...  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {      // Use something more descriptive for your cell identifiers     var cell = tableView.dequeueReusableCellWithIdentifier(""DefaultTableViewCell"") as? UITableViewCell      if cell == nil {         cell = UITableViewCell(style: .Default, reuseIdentifier: ""DefaultTableViewCell"")     }      // Configure cell - we can use cell! because we used a UITableViewCell initializer above if the cell was nil     cell!.backgroundColor      = UIColor.clearColor()     cell!.textLabel?.textColor = UIColor.darkTextColor()     cell!.textLabel?.text      = tableData[indexPath.row]      let selectedView = UIView(frame: cell!.bounds)     selectedView.backgroundColor = UIColor(white: 0.0, alpha: 0.3)     cell!.selectedBackgroundView  = selectedView      return cell! }"
swift,369r7t,Stephen110,1 point,Mon May 18 00:41:25 2015 UTC,YOU ARE A FUCKING LIFESAVER THANK YOU SO FUCKING MUCH :KLFASDFJ:LKSHRG:LKSDFJHGL:KDFHSD:LKFHJ:ALKEdgHAEHKL:DGEFJKS
swift,369r7t,antgly,1 point,Mon May 18 14:28:07 2015 UTC,Are you breaking on all exceptions?
swift,369r7t,antgly,0,Sun May 17 15:59:17 2015 UTC,Could you go a little more in depth on that? Sorry just don't fully understand what you mean
swift,369r7t,antgly,1 point,Sun May 17 16:03:52 2015 UTC,"If you set a breakpoint in the code for All Exceptions in the debug view in the left pane, bottom left plus sign, Add Exception Breakpoint, checking All Exceptions, you can get it to break on the bad line number."
swift,369r7t,antgly,2,Sun May 17 16:05:40 2015 UTC,OH that! I am now! Let me run it and see if that fixed it
swift,369r7t,antgly,1 point,Sun May 17 16:06:42 2015 UTC,Ok
swift,369r7t,antgly,1 point,Sun May 17 16:07:16 2015 UTC,It fixed that problem and replaced it with a breakpoint 5.1
swift,369r7t,antgly,1 point,Sun May 17 16:08:06 2015 UTC,It should break on the line number where the unwrapped access is nil.
swift,36aftb,sasha_fishter,1 point,Sun May 17 19:27:13 2015 UTC,I was trying yesterday and was having the same issue. I've connected them multiple times in the past too.
swift,36aftb,micoro,0,Tue May 19 16:28:20 2015 UTC,"I recommend following the Parse quickstart guide & using the newest version of the sdk. Remember to also add the Parse frameworks manually, otherwise you will get a MACH-O linker error."
swift,36aftb,dcpc10,0,Mon May 18 05:19:39 2015 UTC,"I did all of that, I followed instructions but it wont work :/"
swift,36aftb,dcpc10,0,Mon May 18 17:21:08 2015 UTC,I did this literally 2 nights ago so I know it works with the latest xcode. Why are you making a bridging header if its not required?  What error do you receive?
swift,36aftb,dcpc10,0,Mon May 18 18:06:16 2015 UTC,"Can you send me your code project? I need to connect PFFacebookUtils, and only way is to do it through brigde header (if i remeber correctly)"
swift,366vvc,alt51,5,Sat May 16 19:07:41 2015 UTC,Look on RayWenderlich.com :)
swift,366vvc,iOSKoray,2,Sat May 16 19:16:08 2015 UTC,"Ok I'll check it out, thanks!"
swift,366vvc,samofool,2,Sat May 16 19:35:41 2015 UTC,"The Oakland Post is a nice, simple all-swift app."
swift,366vvc,segmenter,1 point,Sat May 16 20:10:35 2015 UTC,"Awesome, thanks for the link!    Does this app use a proprietary API to read the data?  I'm really interested in learning more about working with JSON APIs with Swift apps."
swift,366vvc,kainjow,2,Sun May 17 06:07:44 2015 UTC,"Here is a project for a Swift programming tutorial that we wrote for our blog. The project is comprised of two sub projects. For project one, a web service api is built using PHP. In project two, a Swift app is created to query/consume our PHP api. The contents, images and text, are then displayed in a table view. https://github.com/aGupieWare/Swift-Networking"
swift,366vvc,neoneye,1 point,Mon May 18 14:32:18 2015 UTC,This is great!  Thanks for sharing.
swift,366vvc,MrMaverick82,2,Tue May 19 06:29:15 2015 UTC,"I'm building a Mac resource fork viewer in Swift. It originally was ObjC but has been ported to Swift.  If you're not familiar, resource forks are parts of a file that were used to hold resources for classic Mac OS apps.  The project can play uncompressed sounds via CoreAudio, show PICT images via XPC, show icons, and display a few other types of data.  You can download old applications on macintoshgarden.org and use this app to view their resources.  Still much to do, but it's the only truly modern way to view some of these decade old files!  http://github.com/kainjow/ForkView"
swift,366vvc,_hirad,2,Sat May 16 23:45:49 2015 UTC,My ipad app is open source  video  source code
swift,366vvc,psimkus9,1 point,Sun May 17 01:04:22 2015 UTC,Thanks for sharing!
swift,366vvc,TotesMessenger,2,Sun May 17 06:08:14 2015 UTC,"Check out my text clock: https://github.com/MichMich/SwiftTextClock  If you want to see the result, check out the AppStore: https://itunes.apple.com/nl/app/textclock-human-readable-clock/id936453602?mt=8"
swift,366vvc,AxeEffect3890,1 point,Sun May 17 12:32:36 2015 UTC,"Awesome, thanks for posting!"
swift,367rr6,Darth__Nader,2,Sun May 17 00:04:51 2015 UTC,How are you using NSTimer to update the field? You can check to see if the textfield.text is equal to zero before firing?
swift,367rr6,eviltofu,1 point,Sun May 17 04:54:46 2015 UTC,"@IBOutlet weak var timerLabel: UILabel!  timerLabel.text = ""\(timerCount)""  How do I get the alert to fire when timerCount gets to zero?"
swift,367rr6,eviltofu,2,Sun May 17 13:35:14 2015 UTC,Post some code?
swift,366nzo,Dking2204,3,Sat May 16 17:56:57 2015 UTC,Bitfountain is awesome especially is you are just starting out. I took the udemy course and it's good but the bitfountain one goes in to much detail about why you are doing what ur doing. I highly recommend it.
swift,366nzo,Themako1,3,Mon May 18 05:28:25 2015 UTC,"I am new to programming too. I tried bitfountain, Lynda, Udamy, Stanford swift course and of course official apple swift iBook.   A good starting point would be threehouse swift and Objective C courses. These courses will walk you through all the basics of programming and later on you will build 4 different apps from scratch on swift.  Courses are super easy to follow and implement and you will have access to QA and forum which is filled with all sorts of questions from previous student and you can find answers to most of your questions in there.   They also offer free trial so you can take a look at the courses at no charge.   Good luck and Happy coding"
swift,366nzo,m_0,1 point,Mon May 18 10:16:38 2015 UTC,I'll have to check this out as well!
swift,366nzo,masters3d,1 point,Mon May 18 17:34:06 2015 UTC,Try Udacity.com
swift,366nzo,spinwizard69,1 point,Tue May 19 00:09:06 2015 UTC,"Any suggestions for a decent starting point? Ones looking at a course on Udemy. Simply because it's a lower cost entry to get idea of what I'm dealing with. Mind you, I've never done any coding so I'm a complete beginner in the field. Any suggestions are appreciated.    The best suggestion I can make, if you are a complete beginner, is to find a viable computer science program to enroll in.    That is if there is such a thing online at a reasonable cost.  The reason I say this is that a well done computer science program ought to give you more insight into the technology of computer science versus a language specific programming class.     Now understand this, this doesn't mean you avoid a Swift specific class!    The point is most of the Swift specific class gloss over detail assuming you have some programming and computer science background.  As mentioned the iTunes Stanford class is well regarded and free.     There are practical considerations too, if you go the full computer science degree route you will open doors for you that aren't likely to open without a full degree.   Of course what your goals are here are unknown as is your current educational background.  I just think there are real advantageous for almost anyone interested in programming to go the computer science route as opposed to language specific course work."
swift,366nzo,segmenter,1 point,Sun May 17 02:33:48 2015 UTC,"I have some college under my belt; core classes mostly. I did the four year 2 year degree at the local community college...I was working two jobs and going to class full time so it took way longer than it should. I'd love to take some in classroom courses but my work schedule wouldn't support that particular venture. I grabbed some of the classes off Udemy (they were $10 a pop) and I'm looking at a few others to get started. I'd like to make apps; mind you I feel most of the promoted stuff is fluff and media related. I'm not expecting to make the latest and greatest and I'm not much in it for the money, but I'd like to make a few full featured apps along the lines of what I'd use. I think it's an easy way to learn and start."
swift,366nzo,spyWspy,0,Mon May 18 17:33:45 2015 UTC,Free Stanford University course: https://itunes.apple.com/us/course/developing-ios-8-apps-swift/id961180099
swift,366nzo,micro435,1 point,Sat May 16 18:29:28 2015 UTC,"Cool, deal...thank you! Is there any merit to Odemy course as well or no?"
swift,366nzo,micro435,2,Sat May 16 19:03:40 2015 UTC,https://www.udemy.com/complete-ios-developer-course/?ccManual=&dtcode=ESJ8cqV2Vzbp&couponCode=INSPIRE1010#/
swift,3669kz,iOSKoray,1 point,Sat May 16 15:43:21 2015 UTC,I just started learning swift too so don't take my advice too seriously.  I think you need to create a Rocket class and in it you can add the fire to the rocket. Make sure your fire.position is relative to the rocket and fire.zPosition is -1.0.   Then in your GameScene.swift you can add the rocket and the fire should follow the rocket wherever.
swift,3669kz,zomgz0mbie,1 point,Sat May 16 18:19:28 2015 UTC,Isn't there a easier way?
swift,3669kz,zomgz0mbie,1 point,Sat May 16 18:38:35 2015 UTC,Hopefully someone else can answer that. Your main problem as I see it is that your fire doesn't have a position. It's probably spawning at the left because that's the default position.
swift,3669kz,zomgz0mbie,1 point,Sat May 16 18:48:15 2015 UTC,"Yes, thats the problem! :/"
swift,3669kz,zomgz0mbie,1 point,Sat May 16 18:54:26 2015 UTC,Try moving the code inside your fire function inside your spawn rocket function and give your fire a position relative to the rocket. I don't know if that will fix it but worth a try.
swift,3669kz,flCer,1 point,Sat May 16 18:58:01 2015 UTC,"Im not sure if i understood you right, but it didn't worked :D"
swift,36567j,Matt_Carlson,2,Sat May 16 06:21:39 2015 UTC,"Continuously?  The main issue here if you're thinking anything web service related (even socket based) would be latency.    Not saying it couldn't be done that route, but you would have to use a combination of retrieving the time, accounting for the time it took to complete the web service call, then adjusting based on local (phone) time since that reference point, and syncing periodically with the web service."
swift,36567j,Stephen110,2,Sat May 16 07:37:46 2015 UTC,"Do you have access to the GPS? http://gpsinformation.net/main/gpstime.htm  But down to the ms, you can just use ntp - http://www.pool.ntp.org/en/"
swift,36567j,jorgelo,1 point,Sat May 16 14:07:56 2015 UTC,Most likely you would need your own server with it's own internal clock. External time will be subject to security issues and a host of other problems.
swift,36567j,flashpoint9,1 point,Sat May 16 11:30:18 2015 UTC,"A GPS receiver can provide extremely accurate time data, although iirc if you want to be sure it exactly matches UTC you need to also read and apply an offset time (GPS time just keeps on trucking--no adjustment for things like leap seconds)"
swift,3631hr,Catfish_Man,14,Fri May 15 17:57:29 2015 UTC,Reduce the number of bugs (especially crashes and security issues due to non-memory-safe code).
swift,3631hr,Han-ChewieSexyFanfic,3,Fri May 15 19:44:38 2015 UTC,"I hope they pull a Microsoft and release their tooling for other platforms, though that isn't likely. Also, it's crazy that Microsoft is now a very cross-platform company."
swift,3631hr,imoxja,1 point,Fri May 15 20:28:23 2015 UTC,"Microsoft is just realizing that they have to be cross-platform to stay relevant; they've had such a horrible time with everything since Windows XP. Vista was a bust, 7 only wowed the gamers, 8 disappointed everyone... Also, Windows Phone has less people using it than Blackberrys and flip phones. Windows 10 is their best hope. The only bad thing about that is that there are no apps on the Windows store worth having and there are so many apps/games on there that infringe upon rules that should exist if they don't already. Also, Candy Crush Saga is going to be installed by default. :P"
swift,3631hr,HappyOutHere,0,Sat May 16 02:36:39 2015 UTC,"Is it? Microsoft published their OS for various hardware platforms, just like they now publish their tools for various software platforms."
swift,3631hr,JiNCMG,2,Fri May 15 21:32:47 2015 UTC,Over 10 years ago they published NT for other cpus. Same with NeXT. VS Code is just an Editor not really Visual Studio.
swift,3631hr,bluemaxmb,9,Sat May 16 04:11:08 2015 UTC,To reduce the barrier of entry to iOS development and lock more people into native iOS only development.
swift,3631hr,Rudy69,7,Fri May 15 17:58:32 2015 UTC,It's not really any more locked that Objective-C was honestly
swift,3631hr,duddha,2,Fri May 15 20:20:31 2015 UTC,"That's right, but it's just as locked in. Not that that is a bad thing necessarily.  But more people would be developing native apps for iOS if the aesthetics and barrier to entry of Swift are considered more welcoming than Obj-C."
swift,3631hr,spinwizard69,6,Sat May 16 01:14:43 2015 UTC,"I'm not sure the barrier is lowered all that much.  Swift does fix a lot of issues with bugs and un secure code but it also implements a bunch of modern programming concepts many of which can hardly be called entry level.  In the end it offers up a good compromise.     As to lock in, I really don't think that is the languages intent.  It is no more of a lock in than Objective C and like Objective C it is a new kid on the block consolidating a bunch of recent developments.   Also like Objective C, Swift is one of a number of new languages that are in play at the same time."
swift,3631hr,phughes,3,Fri May 15 21:21:24 2015 UTC,I'm not sure the barrier is lowered all that much   Agreed. Swift is not a small language. It has a lot of rules and it doesn't do anything to simplify Objective-C's most difficult aspect: memory management.  I personally think that Objective-C is more accessible because it is focused on a single core concept: message passing. Whereas Swift is a mix of object-oriented & functional paradigms. Plus I like Objective-C's syntax. []4evar!
swift,3631hr,ArvoHeikki,-5,Sat May 16 13:36:49 2015 UTC,"Swift is harder to learn than Objective-C (assuming one is starting from scratch, of course), so I don't think your point holds up."
swift,3631hr,RDSWES,12,Fri May 15 23:36:59 2015 UTC,I find Swift easier to understand actually.
swift,3631hr,ArvoHeikki,5,Sat May 16 00:25:49 2015 UTC,"Swift is easier to understand, if you've already worked with Objective-C or other OOP languages. But people who say that it's somehow easier for complete newbies to pick up? I think that's totally wrong. First off, it's a much larger language than Objective-C in terms of built-in features. Objective-C is very spartan and light-weight. And secondly, a number of those extra features of Swift are not exactly super-intuitive to understand, such as optionals, computed properties, and so on. The syntax is far clearer because the language is not bogged down by having to be C-compliant, but that's really the only way in which it's ""easier"" than Objective-C."
swift,3631hr,lunchboxg4,4,Sat May 16 01:25:47 2015 UTC,"I agreed with you originally, but you'll get farther with people if instead of calling Swift hard, you point out that Cocoa Touch really Isn't well ported for Swift, and the syntax was clearly designed for ObjC. The nested method signature drives me bananas, but I may just be set in my old ways."
swift,3631hr,ArvoHeikki,0,Sat May 16 01:44:01 2015 UTC,"I'm not calling Swift hard, in relative terms. I'm saying it's harder than Objective-C, which just illustrates that the mania over Apple ""trying to lower the barrier to entry"" is absurd."
swift,3631hr,flekkzo,2,Sat May 16 02:18:17 2015 UTC,"To me swift is C++ with a different syntax. It reminds me of C++ all the time in its features. It's far from languages such as JavaScript, objc, ruby, etc. It's a very tricky language with tons of little quirks and oddities.  C++ was touted as an easier to use language once. It's not.  ObjC on the other hand is a close relative to Smalltalk, one very small and easy language."
swift,3631hr,cryo,2,Sat May 16 04:55:38 2015 UTC,"ObjC is C with a thin layer on top. It's much closer to C, which is really a horrible language to learn, than Swift."
swift,3631hr,phughes,2,Sun May 17 11:35:56 2015 UTC,"I think that Swift is a language written by someone who hates Objective-C with compatibility added out of spite. Unfortunately there are a lot of people out there who agree with him, so they're all on the Swift is easy bandwagon even though it's considerably more complicated of a language."
swift,3631hr,rhysmorgan,1 point,Sat May 16 13:39:12 2015 UTC,"I've never developed in an OOP language before, and I found Swift far, far easier to pick up than Obj-C. I gave both a try, and Obj-C's syntax is just so unclear to me, whereas Swift's is incredibly readable.  Also, the larger number of language features in Swift doesn't make it more difficult to pick up. It might mean it's harder to master, but then some of the newer features might be easier to use than older ways of doing things.  But this, of course, is just my opinion."
swift,3631hr,bluemaxmb,2,Tue May 19 13:27:29 2015 UTC,I dunno a lot of programmers I know find Swift's syntax a lot more inviting that Obj-C. Maybe the language isn't any easier to learn but the syntax makes it more inviting it seems.
swift,3631hr,rhysmorgan,1 point,Sat May 16 17:31:24 2015 UTC,I definitely find this to be the case.
swift,3631hr,cryo,1 point,Tue May 19 13:28:13 2015 UTC,"How do you know that? I am close to 100% sure you are wrong. C, and thus ObjC, are poor, ancient languages hard both to learn and to use correctly. C doesn't even have something as basic as a string type."
swift,3631hr,ArvoHeikki,2,Sun May 17 11:38:11 2015 UTC,"That is a pretty dumb thing to say, and makes me think that you've got no actual experience with Objective-C."
swift,3631hr,trtryt,0,Sun May 17 13:59:21 2015 UTC,Objective-C code syntax causes epileptic fits
swift,3631hr,segmenter,0,Sat May 16 06:08:42 2015 UTC,World Domination!
swift,3631hr,CQH,3,Fri May 15 20:20:13 2015 UTC,Google has that on lock already :-|
swift,3631hr,mmellinger66,1 point,Fri May 15 22:56:57 2015 UTC,"Yes, with 15% market share world domination is so close."
swift,3653dr,Matt_Carlson,1 point,Sat May 16 05:41:33 2015 UTC,You have to return a MPMusicPlayerController.
swift,3653dr,mick1203,1 point,Sat May 16 05:52:24 2015 UTC,"could you provide me what that would look like, because I keep getting errors when i type      return MPMusicPlayerController?"
swift,3653dr,mick1203,1 point,Sat May 16 05:56:01 2015 UTC,"in the function you create a variable  ""var musicPlayer: MPMusicPlayerController = MPMusicPlayerController()""  then you can use that instance of MPMusicPlayerController and change some of its properties.  in the end you simply return the variable, like this  ""return musicPlayer"""
swift,3653dr,mick1203,1 point,Sat May 16 06:08:57 2015 UTC,So does MPMusicPlayerController not include a default view controller like multipeer connectivity?
swift,360tdr,frantic_apparatus,5,Fri May 15 03:24:59 2015 UTC,"I've been interested in creating a better reddit since using the awful alien blue, so I'm going to have a look at this as I didn't really know where to start. Thanks!"
swift,360tdr,calumwebb,2,Fri May 15 08:03:54 2015 UTC,"Try Narwhal, a way better client than Alien imo. Still not perfect though."
swift,360tdr,Muchoz,2,Fri May 15 08:59:39 2015 UTC,"Narwhal mangles UTF-8, so things like this are unreadable: ¯\_(ツ)_/¯   Update: they've just released an update that renders unicode properly, and adds comment editing support!"
swift,360tdr,Drarok,1 point,Fri May 15 12:05:44 2015 UTC,"That's true, haven't heard back from my 'bug report' about euro signs not being displayed correctly. If only there was a way to reach the developer easily, but nope."
swift,360tdr,Muchoz,1 point,Fri May 15 16:32:44 2015 UTC,Update above!
swift,360tdr,Drarok,1 point,Tue Jun 2 10:57:49 2015 UTC,/r/apolloapp looks promising
swift,360tdr,Fingebimus,1 point,Fri May 15 09:05:08 2015 UTC,Really? I'm using it right now and actually like it :/
swift,360tdr,koalefant,1 point,Fri May 15 10:20:20 2015 UTC,Try amrc. Way better UI and comments load much faster
swift,360tdr,flusteredbygirls,1 point,Fri May 15 11:34:22 2015 UTC,I second that. Used most of the clients out there and AMRC is best in performance UI and ease of use
swift,360tdr,m_0,1 point,Mon May 18 11:06:49 2015 UTC,"This is cool of you to do.   I started on a similar reddit reader as well a while back. I will be interesting to see how our approaches to the same tasks compare. I think that's a great way for me to learn (we're always learning, right?)."
swift,361dpn,radexp,3,Fri May 15 07:30:26 2015 UTC,"I've been playing a bit with ""swiftifying"" Apple's APIs that were designed for Objective-C, trying to strip out some of the verbosity and cruft, and use Swift's features and syntax better…  I've done the same treatment to NSUserDefaults here: http://radex.io/swift/nsuserdefaults/  Do you know of other similar projects/libraries that are essentially alternative swifty APIs for existing classes? What do you think?"
swift,361dpn,cheifshiggum,3,Fri May 15 07:32:48 2015 UTC,"Funnily enough I did the exact same thing with NSTimer today as I was getting a bit annoyed at having to write a separate function every time. The seconds extension is really cool though, hadn't thought of that. I wonder if and when Apple will modernize any of their frameworks themselves in this kind of manner."
swift,362k03,tomnnnn,2,Fri May 15 15:42:58 2015 UTC,"Heh, wouldn't it work if you just made a check on the two objects zPosition and if they aren't equal, don't do anything?  Anyhow, if that doesn't work, you can fall back to the collision bit mask, that's what it's there to do anyway."
swift,362k03,flCer,1 point,Sat May 16 05:18:28 2015 UTC,"I've been playing with different ways of running a check for that, proving not as simple as I first thought. Hadn't even thought of using collision bit mask dynamically but that should work!"
swift,362k03,SUNBUR57,1 point,Sat May 16 13:06:27 2015 UTC,"Are you using an engine like SpriteKit or is it all just standard UIKit stuff?  I know with SpriteKit you can play around with the z axis, while UIKit only allows your to either move things to the back or bring them to the front (as far as I know)"
swift,361af8,fqn,2,Fri May 15 06:43:15 2015 UTC,"""Unable to simultaneously satisfy constraints.""  You have too many constraints. Have a minimum required constraints.  And another thing. iOS7 has issues with aspect-ratio constraints."
swift,361af8,sabiland,2,Fri May 15 07:19:09 2015 UTC,"Have a minimum required constraints.   This is really really critical. You have to learn how to specify all the things that need specifying, and no more."
swift,361af8,ratbastid,1 point,Fri May 15 12:27:01 2015 UTC,Yes indeed.  & autolayout learning curve is steep :).
swift,361af8,sabiland,3,Fri May 15 12:29:52 2015 UTC,"But worth climbing, IMO."
swift,361af8,ratbastid,1 point,Fri May 15 13:42:20 2015 UTC,"Interesting, I am definitely setting up aspect-ratio constraints, depending on whether the post is a 4:3 photo or a 16:9 video. Would you be able to provide any more information about iOS 7 issues with aspect-ratio constraints?  EDIT: Oh wow, this looks like it might be it! http://stackoverflow.com/questions/28111635/ios-aspect-ratio-constraint-breaks-on-ios7-works-on-ios8  A lot of beaten down developers in here. Some quotes:   I've spent 3 whole days to confirm this iOS 7 bug. Crazy shit...  I've spent few days debugging autolayout collapsing totally (note: NO NSLayout exceptions). I've almost collapsed too.  The crash seems to be the result of a floating point calculation that fails at some point. In my case, I had defined an aspect ratio of 16:9 or rather 9:16, which amounts to 0.5625. Changing the multiplier from 0.5625 to 0.5624 fixed the problem, no more crashes have appeared since then."
swift,361af8,sabiland,1 point,Fri May 15 07:23:54 2015 UTC,"Haha yes, some of those comments are from me :-).  In the end I had to remove almost all aspect-ratio constraints for the app to run properly on iOS7."
swift,360d0i,bulldogs93,6,Fri May 15 00:54:24 2015 UTC,"Sounds like a job for Sets:  let haystack = [1, 2, 3] let needles = [2, 3] let areAllPresent = Set(haystack).isSupersetOf(needles) let missingNeedles = Set(needles).subtract(haystack)"
swift,360d0i,goatbag,2,Fri May 15 06:10:14 2015 UTC,"sets make a lot of sense if you're checking for inclusion of element a lot, but if you just want to check for one element, or you need other characteristics of an array, it's probably best to just use contains."
swift,360d0i,radexp,2,Fri May 15 07:17:23 2015 UTC,"Converting to a Set each time is pretty expensive. To keep it as an Array, you can check like this:  let allArePresent = !contains(needles) {!contains(haystack, $0)}   That checks that there isn't an element in the needles that isn't in the haystack - just a double negative way of saying ""is every element of needles in the haystack"".  You can also get your ""missing needles"" (needles that aren't in the haystack) like this:  let missingNeedles = needles.filter{!contains(haystack, $0)}   And you can check if there are any needles in the haystack like this:  let anyArePresent = contains(needles) {contains(haystack, $0)}   But if you're doing this kind of operation a lot, I'd say go for Sets.  let haystack = [1, 2, 3]  let needles = [1, 3, 4]  let allArePresent = !contains(needles) {!contains(haystack, $0)} //false let anyArePresent = contains(needles) {contains(haystack, $0)} //true let missingNeedles = needles.filter{!contains(haystack, $0)} //[4]"
swift,360d0i,foBrowsing,0,Fri May 15 13:16:31 2015 UTC,"let numbers = [1,2,3]  let exists = contains(numbers, [2,3])"
swift,360d0i,digitalburro,1 point,Fri May 15 01:02:53 2015 UTC,"I get an error saying ""Cannot find an overload for contains that accepts an argument list of type '([(Int)], [Int])'"
swift,360d0i,digitalburro,1 point,Fri May 15 01:10:17 2015 UTC,"you're right -- looks like my playground picked a bad time to crash and I didn't see that error.  you can use contains with a single int, just not an array, so:  let numbers = [1,2,3,4,5,6] contains(numbers, 2) // true contains(numbers, 3) // true contains(numbers, 9) // false   To do more than one compare at once you can go nutty with reduce like so:  let numbers = [1,2,3,4,5,6] let aggregate1 = [2,3,6].reduce(true) { (result, item) in return result && contains(numbers, item) }   // returns true let aggregate2 = [2,3,9].reduce(true) { (result, item) in return result && contains(numbers, item) }   // returns false   That's a neat idea, but I would hate to see code littered with it, so if this is a common operation, I would look at wrapping this in a method like this:  func arrayContainsSubset<T : Equatable>(array: [T], subset: [T]) -> Bool {     return subset.reduce(true) { (result, item) in return result && contains(array, item) } }   then your check looks like:  let numbers = [1,2,3,4,5,6] arrayContainsSubset(numbers, [2,3]) // true arrayContainsSubset(numbers, [2,3,99]) // false"
swift,360btf,happytimmy123,2,Fri May 15 00:43:39 2015 UTC,"My guess is you need to just create it. Or you could install the package manager for XCode, Alcatraz. It makes getting themes very easy!"
swift,360btf,Flakers,1 point,Fri May 15 02:43:13 2015 UTC,Agreed -- I've seen much greater stability with themes from Alcatraz than my previous attempts without it
swift,360btf,digitalburro,1 point,Fri May 15 03:36:20 2015 UTC,"from the command line, run mkdir -p ~/Library/Developer/Xcode/UserData/FontAndColorThemes"
swift,36059m,bulldogs93,2,Thu May 14 23:45:17 2015 UTC,Read up on asynchronous image loading and caching - it should be done anytime you are working with images from a network - not just with cloud kit.
swift,36059m,joycamp,1 point,Fri May 15 01:33:54 2015 UTC,"There's not too much you can do unless you're sure about where the latency is. CloudKit is already entirely asynchronous, so we can move on from that.   Make sure that you update UI only from the main thread. Modifying UI from a background thread can lead to weird behaviour and latency.   Check the size of what you're downloading from CloudKit. Try downloading just text and see if that's as fast as you'd expect.   The sandbox environment is likely slower than production. I can attest to pretty poor sandbox performance for assets I'm trying to download.   Changes to your CloudKit data design night yield improvements. Read up on Apple's tips in the CloudKit documentation."
swift,35zysz,jineshshah36,1 point,Thu May 14 22:48:53 2015 UTC,Two reasons I can think of that it's not using your custom cell:   You're dequeuing form the wrong tableview You're dequeuing with the wrong cell identifier   Can you post your cellForRowAtIndexPath code?
swift,35zysz,ChristinaMltn,1 point,Fri May 15 00:01:27 2015 UTC,"override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {      if self.resultSearchController.active == true {         let cell = tableView.dequeueReusableCellWithIdentifier(""CellTwo"", forIndexPath: indexPath) as! VenueSearchTableViewCell         cell.textLabel?.text = filteredTableData[indexPath.row].name         if let rating = filteredTableData[indexPath.row].rating {             cell.ratingLabel?.text = String(stringInterpolationSegment: rating)         }         if let items = filteredTableData[indexPath.row].items {             var itemString = items[0]             for (var i = 1; i < items.count; ++i) {                 itemString += "", \(items[i])""             }             cell.optionsLabel?.text = itemString         }         return cell     } else {         let cell = tableView.dequeueReusableCellWithIdentifier(""Cell"", forIndexPath: indexPath) as! VenueTableViewCell         cell.titleLabel?.text = tableData[indexPath.row].name         if let rating = tableData[indexPath.row].rating {             cell.ratingLabel?.text = String(stringInterpolationSegment: rating)         }         if let items = tableData[indexPath.row].items {             var itemString = items[0]             for (var i = 1; i < items.count; ++i) {                 itemString += "", \(items[i])""             }             cell.optionsLabel?.text = itemString         }         return cell     } }"
swift,35y9ls,thistimeillkeepit,2,Thu May 14 14:55:35 2015 UTC,"I'm not sure why you're setting both text and attributedText on the completeText variable; you should set only one.  One of the neat things about Xcode is Debug Quick Look – it lets you hover over things like UIImages, UIColors, etc, to get a preview of what they look like. This works for NSAttributedStrings too: hovering over them should show you a small eye symbol, and clicking that should show you what the string looks like. Could you check that and see what's happening?  If you see the correct highlighted string even when your code seems to fail, is it possible you're trying to change the text field / label on a background thread?"
swift,35y9ls,twostraws,1 point,Thu May 14 19:44:04 2015 UTC,"It doesnt look like your ysing the regex correctly ?  Are you trying to set it on one instance in one string of every instance in one string ?  for objC i would use:  static inline NSRegularExpression * CommentNameRegularExpression() {     static NSRegularExpression *CommentNameRegularExpression = nil;     static dispatch_once_t onceToken;     dispatch_once(&onceToken, ^{         CommentNameRegularExpression = [[NSRegularExpression alloc] initWithPattern:@""commen(\\w+)"" options:NSRegularExpressionCaseInsensitive error:nil];     });      return CommentNameRegularExpression; }   and then   [regexp enumerateMatchesInString:[mutableAttributedString string] options:0 range:stringRange usingBlock:^(NSTextCheckingResult *result, NSMatchingFlags flags, BOOL *stop) {   }];"
swift,35xqek,ajn123,1 point,Thu May 14 11:53:43 2015 UTC,"Have a look at the UIAlertController with the ActionSheet style, should do exactly what you're looking for."
swift,35vxc9,flCer,1 point,Wed May 13 23:22:40 2015 UTC,"As always, Ray Wenderlich has tutorials"
swift,35vxc9,Racepace,1 point,Wed May 13 23:51:34 2015 UTC,Here is a whole site dedicated to it :  http://metalbyexample.com
swift,35vxc9,RDSWES,1 point,Thu May 14 00:43:56 2015 UTC,http://www.h4labs.com/dev/ios/swift.html?q=metal
swift,35wjtg,eatsblood,1 point,Thu May 14 02:40:04 2015 UTC,"You have code somewhere that is causing a deadlock on the main thread. If you can reproduce it in debug mode, try pausing execution to figure out what is blocking."
swift,35wjtg,higgs_bosom,1 point,Thu May 14 02:56:13 2015 UTC,"If I could reproduce it on my dev machine, I wouldn't be bugging you guys. Sadly, it's only happening on some test machines we've deployed it to.   If I assume that viewDidLoad is being executed (I'm putting indicators tonight to be certain if it is), the first two things I do are load data from a file using String(contentsOfFile) which isn't returning an error, and then download a text file from a url using NSURLConnection.sendSynchronousRequest() which also isn't returning an error. Are either of those known to hang a thread in a way I can prevent? The Sync Request seems suspicious in my mind, but I'd think that'd eventually time out and return an error if it was causing an issue. (also, that it'd be intermittent)"
swift,35wjtg,higgs_bosom,4,Thu May 14 03:14:02 2015 UTC,Never do synchronous network requests from the main thread! Also you should probably use a NSURLSessionDataTask instead.
swift,35wjtg,Ceribis,1 point,Thu May 14 03:25:20 2015 UTC,"ok, I put in code to signal how far it gets before the freeze, and it's not getting called. The very first line in viewDidLoad after super.viewDidLoad is to change a label value, and that's not happening. So the things I mentioned above aren't even being called."
swift,35tcdh,cheifshiggum,1 point,Wed May 13 10:01:28 2015 UTC,"Uau, nice."
swift,35tcdh,sabiland,1 point,Wed May 13 11:46:35 2015 UTC,"Looks great how it is integrated within the actual project itself. It would be great if they can roll this out at WWDC! But may just be wishful thinking.  Important to note that this is being charged for and is made by an independent company. Apple is working on all of Xcode, which is free."
swift,35tcdh,omfgtim_,1 point,Wed May 13 12:41:37 2015 UTC,"Wow, that looks hella rad."
swift,35tcdh,Naxum,1 point,Wed May 13 18:59:21 2015 UTC,"Looks pretty gimmicky. I would bet most people will disable that plugin after the novelty has worn off. Looks like way to much information on the screen. But maybe I could use that tool to force myself to write unit tests? Because I don't implement sort algorithms, I use data from APIs, databases and user input.   Anyway, meh. I would prefer if Apple would implement useful refactoring tools. If they want to copy something they should look at AppCode instead of Alive."
swift,35tcdh,fluchtpunkt,1 point,Wed May 13 23:39:14 2015 UTC,"I think I'll reserve judgement until I see how much it slows things down. The FAQs say it won't, but VS is already a massive drain on the system, so it's already slow enough.  Having said that, it looks like it's more of a unit test system than an actual run code on the fly system."
swift,35tcdh,notquitedrdeath,1 point,Thu May 14 04:02:22 2015 UTC,The product hasn't even shipped so we don't know how good it is in practice. It's a PC product so why aren't you surprised that Microsoft hasn't built this for Visual Studio?  Microsoft has had better tools than Apple for years.
swift,35tcdh,mmellinger66,0,Wed May 13 12:56:33 2015 UTC,"sorry, I'm pretty new to programming - is the main feature on the front page that it indicates what is happening in the code, instead of having to put print functions everywhere to find out?"
swift,35tcdh,paperskulk,1 point,Fri May 15 17:49:10 2015 UTC,"Pretty much! Exactly what Swift playgrounds do, but much less limited, working in the entire project scope as opposed to being confined to a separate environment. Essentially it means you know what's going to happen before you run anything. Much less guesswork, and less cognitive overhead."
swift,35utdp,TheOswaldo,3,Wed May 13 18:15:46 2015 UTC,"This might help: http://www.ioscreator.com/tutorials/swipe-table-view-cell-custom-actions-tutorial-ios8-swift  You could also try to create a segue from the uitableviewcontroller to your other view controller and give it an identifier and do self.performSegueWithIdentifier(""id"", sender: tableView) instead of the presentViewController"
swift,35utdp,littlepinkrose12,1 point,Wed May 13 20:22:29 2015 UTC,This was what I was going to suggest as well.
swift,35utdp,Socraz6,3,Thu May 14 02:29:17 2015 UTC,"You can create the segue between view controllers, give it a name, and call performSegue when the user taps the edit button."
swift,35utdp,Stephen110,1 point,Wed May 13 22:09:06 2015 UTC,"Thanks for the help everyone, I managed to get it to work with:  self.performSegueWithIdentifier(""id"", sender: tableView)  But also had to toy around with it to make sure it worked properly. Thanks again for the help guys!"
swift,35ts2o,ejs06003,1 point,Wed May 13 13:17:55 2015 UTC,"This seems like the job of NSRegularExpression  This will accomplish what you're looking for.  func removeSpacesAfterPunctuation(string: String) -> String {     var copy = string.mutableCopy() as! NSMutableString     // Create a regular expression that matches puctuation followed by any number of spaces     // and stores the punctuation in a capture group.     let regexString = ""([.,?!])\\s+""     if let regex = NSRegularExpression(pattern: regexString, options: NSRegularExpressionOptions.allZeros, error: nil) {         // Replace all of the matches with only the matched punctuation,         // disregarding the spaces.         regex.replaceMatchesInString(copy,             options: NSMatchingOptions.allZeros,             range: NSRange(location: 0, length: copy.length),             withTemplate: ""$1""         )     }     return String(copy) }  let removed = removeSpacesAfterPunctuation(""Hello. I am lyinsteve. Test? I hope this works, maybe."") // ""Hello.I am lyinsteve.Test?I hope this works,maybe."""
swift,35ts2o,lyinsteve,1 point,Wed May 13 13:45:54 2015 UTC,"import UIKit  var str = ""hello, how are you doing? I am okay. Thanks."" let punctuation = NSCharacterSet(charactersInString: ""?.,"") var tokens = str.componentsSeparatedByCharactersInSet(punctuation) println("""".join(tokens)) // ""hello how are you doing I am okay Thanks""   Also, NSCharacterSet.punctuationCharacterSet() exists."
swift,35ts2o,goatbag,1 point,Wed May 13 13:55:53 2015 UTC,"Not exactly what I was asking for. I don't want it to just remove the punctuation. I want it to replace each punctuation with a certain other punctuation to return the string as it was but with small changes.  Remove all spaces following punctuation but not spaces between words.  Hello, world! This is cool. Hello,world!This is cool."
swift,35ts2o,goatbag,1 point,Wed May 13 14:06:24 2015 UTC,"Sorry, misread your question. I'd go with a regular expression like /u/lyinsteve's answer then. Most flexible."
swift,35ts2o,Kametrixom,1 point,Wed May 13 15:10:38 2015 UTC,No worries. Still useful stuff
swift,35ts2o,foBrowsing,1 point,Wed May 13 15:35:08 2015 UTC,"I think the Swift way without further complications would be:  let punctuation = Set("".,!?"") let space = Character("" "")  func removeSpacesAfterPunctuation(var string : String) -> String {     var wasPunctuation = false     var needsReplacement = false     var index = string.startIndex      while index < string.endIndex {         needsReplacement = wasPunctuation && string[index] == space         wasPunctuation = punctuation.contains(string[index])          if needsReplacement {             string.removeAtIndex(index)         } else {             index++         }     }     return string }  removeSpacesAfterPunctuation(""hello, how are you doing!? I am okay. Thanks."")   This way is moderately fast, safe, works with Emojis, and not unnecessary complicated."
swift,35ttpa,xStory_Timex,1 point,Wed May 13 13:32:36 2015 UTC,Have you tried setting the user interaction on the header disabled ?  view.userInteractionEnabled = false
swift,35ttpa,criosist,1 point,Wed May 13 15:30:46 2015 UTC,yep
swift,35ujwj,vfsd,1 point,Wed May 13 17:04:53 2015 UTC,Which part of the guide is giving you problems?
swift,35ujwj,tcdb28,1 point,Wed May 13 18:06:24 2015 UTC,This I want to convert this to swift.    (void)viewDidLoad { [super viewDidLoad];  FBAdView *adView = [[FBAdView alloc] initWithPlacementID:PLACEMENT_ID                                                 adSize:kFBAdSizeHeight50Banner                                     rootViewController:self]; [adView loadAd]; [self.view addSubview:adView]; }
swift,35ujwj,Strawberry_pie,1 point,Wed May 13 18:44:14 2015 UTC,"I guess it would be something like this:  override func viewDidLoad() { super.viewDidLoad() let adView = FBAdView(placement: PLACEMENT_ID, adSize: kFBAdSizeHeight50Banner, rootViewController: self) adView.loadAd() self.view.addSubview(adView) }  I have not tested this, but this is how I would guess it would be like in Swift :)"
swift,35q4nh,timanglade,2,Tue May 12 16:21:35 2015 UTC,Thanks for this! I've been digging into Core Data lately and the Core Data By Tutorials is a great beginner book that uses Swift as well.
swift,35q4nh,akwilliamson,1 point,Tue May 12 19:02:09 2015 UTC,He's got a really good setup for being able create unit tests for your core data entires. I just ran into this problem right before this was posted so I'm very happy for a nice solution!
swift,35oqcu,KNNMMDV,1 point,Tue May 12 07:19:07 2015 UTC,You can deselect use subreddit style on the right.  I do this for a lot of subs actually.
swift,35oqcu,theblang,1 point,Wed May 13 13:14:54 2015 UTC,Thank you very much. I hated subreddit styles.
swift,35pjmk,pzawad94,1 point,Tue May 12 13:35:55 2015 UTC,basically make your launch screen a launch image that will be the exact same as the first part of the animation.  Now make your root view a launchviewcontroller type thing.  On viewDidAppear: do the animation and then on the completion go to the required view.
swift,35pjmk,criosist,1 point,Tue May 12 15:53:37 2015 UTC,"Awesome, this gives me a good starting point. Thanks"
swift,35pjmk,driftme,1 point,Tue May 12 16:10:42 2015 UTC,"Glad my UI8 article was able to help. Maybe I can help with this question too. You can load your animated view when your app loads, and when the animation is done, display your home view controller. It could even be as simple as displaying your animated image view and just fading it out when its done animating.  You can use a completion block on your animation code to do basically anything you want after the animation =]   UIView.animateWithDuration(0.2, animations: {     <some animation stuff here> }, completion: {     (value: Bool) in     <fade out your view or make it hidden or whatever you wish> })   hope that helps!"
swift,35nzxc,bb388328,3,Tue May 12 01:44:37 2015 UTC,I think this one is also worth a look: https://www.bignerdranch.com/we-write/cocoa-programming/. You can get a sample from the iBook store to see if it fits for your needs/level.
swift,35nzxc,petermolnar_hu,1 point,Tue May 12 06:42:26 2015 UTC,"Excellent, thank you."
swift,35nzxc,Sliw,2,Tue May 12 14:42:28 2015 UTC,"Not a book, but the Lynda.com 10-day free trial (so far) has been utterly fantastic.  As for actual books, I don' know if it meets your requirement for problems at the end of each chapter, but Ray Wenderlich's stuff seems to come very highly recommended.  He also gives a lot of it away on his website so you can get a feel for his teaching style.  http://www.raywenderlich.com/store"
swift,35nzxc,paperskulk,1 point,Tue May 12 02:15:50 2015 UTC,I have seen others mention Ray's work but have not ventured down that road yet. Thanks for the tip on the Lynda.com site as well.
swift,35nzxc,Hawk_Irontusk,0,Tue May 12 14:42:12 2015 UTC,"shit man... I have a Lynda subscription as part of my school tuition but I always thought it was just graphics, never browsed around outside of my degree (fine arts).  thank you!"
swift,35nzxc,Sliw,2,Fri May 15 17:07:17 2015 UTC,"Teach Yourself Swift in 24 Hours has exercises at the end of each chapter. The book's examples mostly platform independent, but there are a few chapters dedicated to iOS development.  If you need help with solutions, you can PM me or post questions here."
swift,35nsuu,Space_Butts,3,Tue May 12 00:45:14 2015 UTC,"What you're running across here is an edge case of Cocoa bridging. In theory, neither Int nor Int64 should be convertible to AnyObject, since they are structs, not objects.  In practice though, Int bridges to NSNumber, which IS an object, so the conversion works there.  Maybe you wanted Any instead of AnyObject?"
swift,35nsuu,Catfish_Man,2,Tue May 12 05:20:57 2015 UTC,"I see. The issue is I am trying to accumulate a dictionary through reflection and then serialize it using NSJSONSerialization. I was using NSDictionary (which only accepts AnyObject), I tried switching to use Dictionary<String, Any> after reading this and that works better for the accumulation, but I need to convert it to an NSDictionary somehow when I call the NSJSONSerialization API. It seems like at some point I need to make my Anys into AnyObjects if I want to use that API, and if that is the case I'll have to convert Int64 into NSNumber explicitly. Is that correct?"
swift,35nsuu,Catfish_Man,2,Tue May 12 14:35:49 2015 UTC,That sounds right to me
swift,35lzvo,flCer,7,Mon May 11 16:33:27 2015 UTC,"It seems that your real problem is not with Core Data but with modelling your problem domain. Here are a few pointers re. what you came up with:   The name of an entity should not be plural. You have a relationship on ""Player"", called ""People"", which is fair. A player may know many people. But people is composed of many persons, which means the entity on the other side of the relationship should not be called ""People"". Each instance of that entity represents a single ""Person"". The same applies to ""Items"" and ""EquippedItems"". Think about these two terms: ""Items"", ""Equipped Items"". Do those two things sound like they're fundamentally different from each other? Not really. An Item is an Item. A single Item doesn't care if the player has been equipped with it or not. Only the player cares about that. So to model your problem in a way that won't make you want to jump off a high rise later, you want to have a single entity called ""Item"" (singular), with an optional to-many relationship with ""Player"". What does that mean? It means that you can have a large number of items. Zero or more players may be equipped with that item. From the player's perspective, it has only a single relationship (to-many) called ""equippedItems"".    Keeping in mind that I may have not fully understood your problem domain from the description above, this would be my alternative design.  Edit: Notice that on the ""Item"" entity, I have 3 to-many relationships back to Player. That is not necessary, but in my experience, it's always better to have an inverse relationship anyway. It keeps your model more flexible for any future changes."
swift,35lzvo,_hirad,2,Mon May 11 18:26:42 2015 UTC,Thanks for the feedback. Will take notes.
swift,35lzvo,_hirad,1 point,Mon May 11 18:50:59 2015 UTC,"In my design, there is only 1 player. And that is the user of the app.   What I feel uncomfortable with is that there can be multiple Entities, while I'm trying to model the Player as a singleton, because there can only ever be one player (the owner of the device that's playing my app).  I don't suppose there's any way to enforce singletons in the Core data model, is there?  Anyway, thanks for your design idea. I am taking notes and it makes far more sense than my current model."
swift,35lzvo,djkimothy,3,Mon May 11 19:00:20 2015 UTC,"You could come up with an alternative design that takes out the player. I think having the current user's information in your data model is a clean solution.   You can enforce the singularity of the Player another way through code. However, those kinds of considerations are only important if you expect others to be using your code. In that case you can add a validation that fails if someone tries to insert a new Player in the context but one already exists."
swift,35lzvo,fubarx,1 point,Mon May 11 20:03:27 2015 UTC,"I see, thanks!"
swift,35lzvo,clawesome,3,Mon May 11 20:08:26 2015 UTC,I haven't really read up on core data. what is it that dishes out so much pain?
swift,35lzvo,jerhinesmith,2,Mon May 11 16:55:10 2015 UTC,It's complicated.
swift,35lzvo,CQH,2,Mon May 11 17:09:26 2015 UTC,"[Edit for premature posting. Dammit Alien Blue!]  CoreData is handy when you have a bunch of inter-related objects and don't want to mess with all the book-keeping and relationship management.   The other place it comes handy is how it's deeply linked into collections and tableviews.   But to get it up and running is not for the faint-of-heart. And you have to be careful with multiple threads and blocks.  Unless you're using this as an excuse to learn more about CoreData, suggest you consider alternatives. Your model looks pretty simple. Might want to take a look at https://realm.io or one of those libraries that wraps SQLite inside an object-relation mapper."
swift,35lzvo,pat2man,2,Mon May 11 17:32:33 2015 UTC,"I want to learn Core Data and use it as much as possible, because from what I've read on the internet, Core Data seems to be the absolute best in all respects for data persistence.   It's just such a pain so far... I'm hoping I can get through it. Thanks for your post. I will try to brave through."
swift,35lzvo,LuizZak,4,Mon May 11 18:50:09 2015 UTC,"MagicalRecord can help ease the pain.  Won't really help with setting up your models, but makes querying so much easier."
swift,35lzvo,jasamer,1 point,Mon May 11 17:18:37 2015 UTC,"Pardon my ignorance, but my goal right now is do everything without third party API's. Thanks for the suggestion though."
swift,35lzvo,rib-bit,5,Mon May 11 18:47:34 2015 UTC,"Can I ask why?  If you're just trying to learn and want to understand what's going on at the most basic level, this makes sense.  If your goal is to get something done, not leveraging shared, well-documented, well-tested libraries can be a costly mistake.  I'm not trying to be a dick, but rejecting all shared libraries was a mistake I made very early on in my programming career (call it pride, I suppose)."
swift,35lzvo,voidref,2,Mon May 11 19:39:33 2015 UTC,"I believe that doing it the ""vanilla"" way first does several things, not the least of which is learning to use the frameworks the way they were intended to be used. Also, if a 3rd party framework comes along, I will understand how it works and appreciate any benefits it may have. Most importantly, I'll know if I even need it at all!  Anecdotal story: I inherited a project once that used a handful of 3rd party libraries to render like 4 view controllers of JSON data and save some basic preferences. Literally thousands of lines. I rewrote it from scratch in around 50 lines. Anybody could have done it. But the dev before me used some common 3rd party libraries because he was told that's what he should do. So he followed blindly."
swift,35mwkg,xStory_Timex,1 point,Mon May 11 20:34:06 2015 UTC,You're almost there. You have to implement a custom presentation transition. This is the project I based my implementation on   https://github.com/hightech/iOS-7-Custom-ModalViewController-Transitions
swift,35mwkg,tcdb28,1 point,Mon May 11 22:50:41 2015 UTC,Do you think it is important I make my application ready for iOS 7 as well as 8?
swift,35mwkg,tcdb28,1 point,Mon May 11 22:54:36 2015 UTC,The tutorial is written for iOS 7 but works for iOS 8 as well. The apps I've used this technique in are iOS 8 only.
swift,35inuy,xlogic87,6,Sun May 10 19:21:15 2015 UTC,I found two tutorials that may suit your needs. http://www.raywenderlich.com/13269/how-to-draw-graphs-with-core-plot-part-1  http://shrikar.com/ios-swift-tutorial-fitness-tracking-and-ios-charts/
swift,35inuy,tvnerd0,1 point,Mon May 11 02:38:20 2015 UTC,"Thanks, the second link is exactly what I need!"
swift,35inuy,iChamrajnagar,1 point,Mon May 11 10:49:01 2015 UTC,"This guy is my hero. Although, when my google searches resort to bringing me back to reddit I get a little worried ; )"
swift,35inuy,zemirco,2,Thu May 21 13:30:19 2015 UTC,I have some simple charting libraries you might want to check out. The first one is for linecharts and the second one for piecharts. They are both written in Swift.
swift,35hzqs,foBrowsing,2,Sun May 10 15:48:14 2015 UTC,"You could write a custom protocol that conforms to equatable.  Relevent NSHipster article  From the article:  protocol Equatable {     func ==(lhs: Self, rhs: Self) -> Bool }  struct Article {     let title: String     let body: String }  extension Article: Equatable {}  func ==(lhs: Article, rhs: Article) -> Bool {     return lhs.title == rhs.title && lhs.body == rhs.body }"
swift,35hzqs,Socraz6,2,Sun May 10 17:32:44 2015 UTC,"I ended up doing pretty much exactly that, matching on what the functions returned. Thanks!"
swift,35hzqs,Socraz6,1 point,Sun May 10 18:55:43 2015 UTC,Glad to be of help 😃
swift,35hzqs,xnyhps,2,Sun May 10 18:57:05 2015 UTC,"How do you imagine it would do that? Check all the values of the input? That could take a really long time, even for bounded values. Consider if it started checking:  0 + 0 == 0 - 0 => True 1 + 0 == 1 - 0 => True 2 + 0 == 2 - 0 => True ...   If you just want to check whether two functions or closure are references to the same thing, then that seems impossible in Swift too.  Why do you want to do this?"
swift,35hzqs,xnyhps,1 point,Sun May 10 17:38:03 2015 UTC,"Thanks! That stack overflow answer answered my question exactly. Yeah, I was looking to check if two functions were referring to the same thing.  edit: (I was having a go at problem 5 from that post on /r/programming a couple days ago. Basically, I needed a way to do precedence with binary operators. Since I only had two levels of possible precedence, I was going to evaluate the higher precedence operations first, and the lower precedence second. Since the operands and operators were stored in arrays, I wanted a way to search the operator array for the high-precedence operators)"
swift,35hp0x,lifehacker25,3,Sun May 10 14:01:32 2015 UTC,"Look into Realm, CoreData or NSUserDefaults."
swift,35hp0x,Dierdr4,3,Sun May 10 14:18:00 2015 UTC,"I had never heard of Realm, that looks pretty sweet.  I would stray away from NSUserDefaults for this;  although there's not an explicit limit on entries, it could grow out of control and would be a mess to query against ( i.e. get all the locations a user was at yesterday, ordered by time)."
swift,35hp0x,Stephen110,1 point,Sun May 10 14:28:49 2015 UTC,"Yes, I agree. NSUserDefaults is the least appropriate option but I guess it doesn't hurt for OP to know that it exists."
swift,35hp0x,Dierdr4,1 point,Sun May 10 14:59:24 2015 UTC,"Can't you save the location object as a whole? That would include the time when it was determined, in addition to the lat and long, which makes NSUserDefaults a little more usable."
swift,35hp0x,vinnydakid,1 point,Sun May 10 16:03:39 2015 UTC,"No, CLLocation doesn't conform to the NSCoding protocol, you would have to store your lat and long separately and recreate the CLLocation at runtime.  Even if you could, storing the location in a single structure doesn't make it any easier to query against, just makes it easier to store and fetch."
swift,35hp0x,Stephen110,1 point,Mon May 18 01:01:12 2015 UTC,+++ for Realm.  Easy to use and can be used on Android as well.
swift,35hp0x,colemab,2,Mon May 11 01:22:39 2015 UTC,"Core Data would absolutely be the way to go, if the data has to persist between sessions.    Here is a good tutorial to get you started:  http://www.raywenderlich.com/85578/first-core-data-app-using-swift"
swift,35hp0x,Stephen110,2,Sun May 10 14:17:32 2015 UTC,"Another vote for Realm, it's amazing compared to everything else I've seen.  https://realm.io/docs/swift/0.92.1/  Here's a quick and dirty view as to what it might look like:  class Location: Object {     dynamic var lat = 0.0     dynamic var lon = 0.0     dynamic var alt = 0.0 }   class LocationSaver {     let realm = Realm()      func saveLatestLocation(lat:Double, lon:Double, alt:Double) {         var location = Location()         location.lat = lat         location.lon = lon         location.alt = alt         realm.write {             realm.add(location)         } }"
swift,35fjiv,Bleuground,6,Sat May 9 21:30:34 2015 UTC,you could have a look at ray wendrichs homepage and his tutorials. I found them pretty helpful
swift,35fjiv,coredumb,2,Sat May 9 22:00:42 2015 UTC,"Do this.   Buy and read all of RayWenderlich's books. Mastering those books will give you a solid foundation to explore on your own.  Use iTunes U and study Paul Hegarty's swift course. It'll fill in the holes that RayWenderlich doesn't cover.  Develop a habit to read Apple's documentation whenever you aren't sure of something. If you're new to cocoa and swift, it'll be confusing and verbose. But through repetition you'll start to get used to it and it'll become extremely helpful. Explore other resources. For instance, I chose to study HealthKit because I had an app idea. The idea eventually flopped after 3 weeks of research, but through studying HealthKit, I gained extensive knowledge of NSPredicate and the ideas of concurrency using the GCD because you need them to make things work. That in turn made understanding other code a lot easier, because predicates and concepts of GCD are used commonly in many applications.   This list is by no means makes you a master. But it worked for me to give me a solid foundation that has given me confidence to call myself ""experienced"". I'm 2 months past this stage, and I'm currently re-reading one of RayWenderlich's books, learning a lot more compared to the first read through."
swift,35fjiv,flCer,3,Sun May 10 14:35:46 2015 UTC,Your name is Chris Lattner
swift,35fjiv,fluchtpunkt,2,Sun May 10 09:31:59 2015 UTC,"My own set of (completely free!) Swift tutorials won't make you a master, but they will teach you a massive amount about Swift, UIKit, Cocoa Touch and other core technologies for iOS development. You can read them at HackingWithSwift.com.  If you really want to master the language, you'd need to follow up that tutorial series with a complete read of the official Swift reference from Apple, then – bluntly – knuckle down and write a good few projects from scratch. I don't want to dodge your question, but I don't think you can master a language just by following tutorials: you need to make stuff, you need to solve problems your own way, and you need to apply real world context to figure out why things work the way they do.  One other point, and again this is drifting a little away from your original question: do you really want to master Swift, or are you happy with 90%? I understand mastery to be fluent and capable in all aspects of a technology, but I doubt you need to understand all parts of a language in order to be a proficient and effective iOS developer.  Like a lot of things in life, you get diminishing returns from what you do. In the case of Swift, @autoclosure (for example) is really neat, but you'd get more value from figuring out the darker corners of UITableView than you would from learning @autoclosure. I guess what I'm trying to say is ""don't use learning (increasingly esoteric) things as an excuse for not making things."""
swift,35fjiv,twostraws,1 point,Mon May 11 14:32:39 2015 UTC,"The only project that I can think of would be writing a compiler for the language. You'll have to handle every possible language construct, so that should cover all the bases.  I say that kind of a joke, but if you think you can master a language by stepping through a few projects, you're mistaken."
swift,35fjiv,shiggie,0,Sun May 10 04:05:54 2015 UTC,"I don't understand how completing a project would equate to knowing a Specific portion of a language.  What are examples of this?  EDIT: Do you mean more like exercises? Like: ""Write a Sequence type with a random access backing store"""
swift,35fjiv,voidref,1 point,Sat May 9 22:00:51 2015 UTC,"Because a lot of people find/believe that they can grasp a language by applying it to a project as opposed to just reading about it. It could be different for you, but I personally found it a lot easier to ""get"" a language and its syntax by applying it to small projects. For example, a few months ago I decided I wanted to learn Java and so I started reading about encryption and parsing/scraping websites. I read all I could about it (although there's tons of info I have yet to find, this is programming after all) and although I did memorize most of the logic behind the techniques, I decided to make a stock-based program: It scraped Yahoo Finance for real-time stock data and allowed you to make a (fake) portfolio, but the only way to trade any stocks was to authenticate who it was making the trade--this is where the encryption part came in. In the end, I came off understanding the two concepts a lot more than I would have without applying them to a project. In that way, I now ""know a portion of a language"". Everyone's different, but maybe this helps you understand how some people may find projects helpful in allowing them to understand a language better."
swift,35fjiv,Macuse,1 point,Sun May 10 02:04:16 2015 UTC,I don't disagree at all with this.  I am just saying you can't become a 'master' at a language by doing a few projects. There are always ways to do things that don't flex all the parts of a language.  EDIT: I should have said a 'Specific Portion of a language'
swift,35fjiv,voidref,2,Sun May 10 03:11:33 2015 UTC,"I don't think there's any shortcut for putting time in. Still mastery requires broad application and repetition.  Think about it, not only do you need to know all of the language features, but also how they fit together and affect each other.  Swift, a language that's not even done yet, probably can't be mastered, as it's a moving target.  I'm not saying you can't be competent by doing some projects from start to finish, by all means, you should do this, but language mastery is something that I think you need to put in your 10k hours and really focus on covering all parts of a language.  Anyway, OP has yet to answer any questions about his question, so we have no idea exactly what he means."
swift,35gu7s,1011110001011100,5,Sun May 10 05:34:33 2015 UTC,"How about something like this:  let numbers = (1..<5).map { _ in arc4random_uniform(59) + 1 } let sortedNumbers = numbers.sorted(<) let sortedStrings = sortedNumbers.map { ""\($0)"" } let text = "" "".join(sortedStrings)"
swift,35gu7s,Catfish_Man,1 point,Sun May 10 06:24:59 2015 UTC,Thank you. Thats much more efficient. Now I'm trying to figure out how to make the numbers not repeat.
swift,35gu7s,the_holger,6,Sun May 10 06:52:30 2015 UTC,"The, imho, best and only way to do that is not generate 5 random numbers between 1 and 60, but to shuffle an array containing the numbers 1 to 60 and then pick (the first) 5. Fisher-Yates Shuffle is what you want :-)"
swift,35gu7s,Catfish_Man,3,Sun May 10 09:56:25 2015 UTC,"This is a slightly silly approach, but…  let uniqued = Array(Set(numbers))"
swift,35gu7s,lgroeni,7,Sun May 10 07:08:55 2015 UTC,"a slightly different approach that ensures you always have 5 numbers when you're done...  var numbers = Set<UInt32>() while (numbers.count < 5) {     numbers.insert(arc4random_uniform(59) + 1) } let sortedNumbers = Array(numbers).sorted(<) let text = "" "".join(sortedNumbers.map { ""\($0)"" })"
swift,35ftdw,bigirishbreakfast,3,Sat May 9 23:01:53 2015 UTC,"1) It's usually a better experience for the user to have one app where they can use IAP to remove the ads instead of having to go find the paid version. However, Apple won't prevent you from doing two versions.  2) Normal. Test ads have a failure rate so load failures can be tested. To prevent the game view from resizing you can add a second static view that's always visible to the bottom of the screen and do constraints off of that instead of the ad view."
swift,35dbeg,vitaminrad,3,Sat May 9 05:23:14 2015 UTC,"I started my career in web development and transitioned to iOS development. Now I've been doing pretty much exclusively native iOS work (and some server-side/API stuff) for a few years, and I don't ever want to go back to web work. I grew to really hate dealing with browser compatibility and web server issues. For me, the iOS platform is a dream."
swift,35dbeg,tractorrobot,2,Sat May 9 16:04:13 2015 UTC,cool.  i'm just starting out as a developer and learning swift as a first language.  lots of fun
swift,35dbeg,neonmansion,2,Sat May 9 07:30:20 2015 UTC,"Nice to hear!  I don't have quite as much experience in web dev as you, but I'm just starting to make the same transition.  Still nervous about making a big change, but haven't found anything frustrating yet, and sounds like people really like swift."
swift,35byr9,mileswd,-2,Fri May 8 21:09:00 2015 UTC,"This post is about the complier, not Xcode (even though they are annoying tied together).  Please whine about the IDE elsewhere."
swift,35byr9,voidref,-7,Sat May 9 06:22:23 2015 UTC,"Xcode has to be put in a fire, in a full moon, in a sacrifice for the God of Crappy Apps and from its ashes a new software must be born."
swift,35byr9,MarsSpaceship,16,Sat May 9 02:01:03 2015 UTC,It's really not all that bad
swift,35byr9,pxpxy,-8,Sat May 9 02:42:49 2015 UTC,"really? it is just the worse IDE ever created by any company. Crashes constantly, interface builder is a joke, is a nightmare with provisional profiles, uses files from one target on another, xcassets cannot be localized, rebuilds the index constantly skyrocketing CPU and making typing characters a struggle. Simply a piece of shit."
swift,35byr9,MarsSpaceship,7,Sat May 9 03:10:30 2015 UTC,"It's not the best IDE, but it's far from the worst."
swift,35byr9,sudormrf-,-7,Sat May 9 03:41:28 2015 UTC,"keep using it, one day you will reach its limits and it will start to fall apart behind your eyes."
swift,35byr9,MarsSpaceship,4,Sat May 9 03:52:41 2015 UTC,90% of Xcode issues are user caused sry to break it too you
swift,35byr9,nemesit,2,Sat May 9 13:09:54 2015 UTC,"Sorry for the downvote train, but as an experienced developer who has actually used other IDE's, I'm fully aware that you're correct."
swift,35byr9,feelix,1 point,Sat May 9 05:43:49 2015 UTC,"Just a fan boy that is blind and accepts everything Apple does without questioning would down vote me. I love Apple in many senses but I have a critical vision and I am not blind to the fact that their developer tools are shit.  Apple deals with developers with disdain. Just see the difference in treatment they give to book authors (hardware discounts, same day answer to questions, etc). Note: this is not jealousy because I am also a book author on iBooks and have this privilege, but shocks me the privilege given to one side and not the other.  If you have enough years of development, including other platforms, you see how bad Xcode is, how crappy their documentation is, and how awful iTunesConnect is.  If you are a newbie with one app on the app store and have not used their tools enough, you may think they are ok. But if you have developed complex applications and have several years of experience with cutting edge applications, where you push Xcode to the edge, you see Xcode tearing apart, failing constantly.   I have several heavy load apps, some with 20K lines of code and have launched almost 100 apps since 2008, for iOS and OSX. This makes me see a bigger picture."
swift,35byr9,MarsSpaceship,0,Sat May 9 16:16:39 2015 UTC,"Yeah, for anyone with significant coding experience I can't imagine them defending XCode like that, speaking as a guy who's written these things solo and a lot more. What have you written? It was very interesting to hear that book authors get the preferential treatment you referred to. I guess it stems from Apple wanting to influence the media about them."
swift,35byr9,feelix,2,Sat May 9 23:00:07 2015 UTC,"No, I meant all book authors have privileges that developers don't. When you login on iTunesConnect using your book publishing account, you see a slightly different iTunesConnect. One of the things you see is phone support, that is something that just now is offered to developers. You also see this link that you can click and buy hardware with discount, up to 2 computers + 2 other things per year. Not to mention same day answers and resolution of problems. Very short review times (from 1 to 3 days top).  Regarding to books, my experience as a book author is bigger outside the digital domain. I have 15 books published in Europe, all in paper, cause my publisher hates digital stuff, because it is easy to pirate, as they say.  For that reason, I am on both sides. I have a book account and a developer account at Apple but the tendency to favor one side over the other makes me sad, cause developers probably give Apple a lot more money and they are basically the reason why people buy Apple hardware. Even so, developers are completely ignored by Apple."
swift,35byr9,MarsSpaceship,0,Sat May 9 23:37:45 2015 UTC,You do delete your derived data when you upgrade or it starts acting weird?
swift,35byr9,RDSWES,3,Sat May 9 03:16:49 2015 UTC,"The fact that this is necessary at all seems kind of telling, at least to me.  Xcode has come a long way in the last few years, but it's still got some pretty serious issues."
swift,35byr9,klngarthur,1 point,Sat May 9 03:37:53 2015 UTC,"I delete derived data constantly during the process. Xcode damages its own files, expires its own valid provisioning profiles and other stuff like that."
swift,35byr9,MarsSpaceship,1 point,Sat May 9 03:50:08 2015 UTC,"what I wouldn't give for them to release sane command line tools so that I could just create my own project and build infrastructure, xcodebuild is a monolith from hell, and gyp is a bandaid on a wound too big to cover :("
swift,35byr9,deliciousleopard,2,Sat May 9 05:53:39 2015 UTC,"have you tried fastlane? You will be blown away by these command line tools developed by this english guy Felix Krause, that is now going to work for Apple."
swift,35byr9,MarsSpaceship,1 point,Sat May 9 16:21:49 2015 UTC,"I've had a look, and it does seem absolutely great for automating deployment. the step that really grinds my gears at the moment is the actual building of projects though.  all I want for christmas is the ability to modify the info.plist at build time to change stuff like the bundle ID and Facebook app ID based on the current branch. it used to work in 2013, which together with the non-crappy Testflight made it wonderfully simple to handle installing parallell feature branches on your own and testers' devices.  non-crap asset handling would also be nice, say generating them from PSDs. doing it in Grunt och Gulp is trivial, but in Xcode it requires either doing it manually outside of the standard build, or using weird scrip build phases with either manual input file handling or full rebuilds every time."
swift,35byr9,deliciousleopard,-1,Sat May 9 18:48:39 2015 UTC,"and one thing that is stupid on Xcode and for that matter iTunesConnect is why you have to provide a lot of images to these tools. Why do we have to provide @1x, @2x and @3x. If iPhone 6+ is the biggest one, we only needed to provide the biggest image and xcode/ios should do the rest.  To confirm that this would work I tried to use  imageWithContentsOfFile to load an image file that was designed for @3x image, but without the @3x suffix, on an imageView on an iPhone 5 and the result was the same as using an @2x image using imageNamed.   The whole process of iTunesConnect/Xcode is not optimized to production. It is just hard to do simple things."
swift,35byr9,MarsSpaceship,-6,Sat May 9 18:57:30 2015 UTC,Took them way too long...
swift,35byr9,vale93kotor,2,Sat May 9 05:58:03 2015 UTC,Stop whining.
swift,35byr9,CQH,-6,Sat May 9 08:35:54 2015 UTC,And you stop being an asshole. Having a legit concern over things that should be patched asap does not constitute whining.
swift,35byr9,Yamirou,1 point,Sat May 9 09:18:57 2015 UTC,"How is ""Took them way too long..."" having a legit concern?  That's just whining.  People love to come on here and complain about xcode.  If you don't like it, move on."
swift,35byr9,CQH,0,Sat May 9 09:55:03 2015 UTC,"It's not whining simply because it's just true. Taking ages with something that should have been hotfixed is going to make people ""whine"" as you elegantly put it, so move on if you don't like it."
swift,35dfgm,TelyX,3,Sat May 9 06:21:01 2015 UTC,"I'm new to swift so there's likely much better ways....BUT:  If you have a small handful of properties that you find yourself changing a lot, i.e. you don't need every property accessible to you, you can use extensions to make a fluent interface for those properties you do need, like so.  import UIKit  extension UILabel {     func setTextEx(text: String) -> UILabel {         self.text = text         return self     }      func setBackgroundColorEx(color: UIColor) -> UILabel {         self.backgroundColor = color         return self     }      func setEnabledEx(enabled: Bool) -> UILabel {         self.enabled = enabled         return self     } }   Then your usage is something like what you're after:  var myLabel = UILabel()  myLabel.setTextEx(""This is a cool label"")        .setBackgroundColorEx(UIColor.blueColor())        .setEnabledEx(true)"
swift,35dfgm,digitalburro,1 point,Sat May 9 14:32:30 2015 UTC,"I was surprised I couldn't find something like this - it seems like it would be common, and swift has already got similar dot syntax pattern matching in switch statements.  The only way I could think of to clean that kind of a thing up was to use tuple:  (a, b) = (1, 2) (Abcd.text, Abcd.backgroundColor, Abcd.enabled) = (""This cool label"", UIColor.blueColor(), true)   But you're still writing the name of the object every time. To avoid that, you could use a closure:  _ = { (inout obj: YourType) in   (obj.text, obj.backgroundColor, obj.enabled) = (""This cool label"", UIColor.blueColor(), true) } (&Abcd)   And to cut down on that line length:  _ = { (inout obj: YourType) in (   obj.text, obj.backgroundColor, obj.enable ) = (   ""This cool label"",  UIColor.blueColor(), true ) } (&Abcd)   But something tells me that ugly, unreadable horribleness wasn't exactly what you were looking for. I dunno. Maybe it makes sense if you're editing 8-9 properties at once or something. Sorry I couldn't really help!"
swift,35dfgm,foBrowsing,2,Sat May 9 11:14:35 2015 UTC,"Yeah that's what I thought too. Surprising to not find it. This is useful information though, and as you said, it'll be handy for times when I have to change a relatively high amount of properties at once. Thanks :)"
swift,35dfgm,cheifshiggum,1 point,Sat May 9 13:17:21 2015 UTC,"You could also do it like this. Define a function like so:  func modify<T>(obj: T, closure: (T) -> ()) { closure(obj) }   Then you can call:  modify(myObject) {     $0.color = NSColor.blackColor()     $0.text = ""Hello""     $0.enabled = true }"
swift,35dfgm,foBrowsing,1 point,Sat May 9 19:03:38 2015 UTC,"That's very nice, actually. You need to stick in a few inouts to make it work, though.  func modify<T>(inout obj: T, closure: (inout T) -> ()) { closure(&obj) }  modify(&myObject) {   $0.color = NSColor.blackColor()   $0.text = ""Hello""   $0.enabled = true }"
swift,35dfgm,cheifshiggum,1 point,Sun May 10 12:01:10 2015 UTC,"Ah yeah, so that it works with structs as well. That makes sense."
swift,35bt5n,br0000d,1 point,Fri May 8 20:22:01 2015 UTC,"I removed my performOperation2 function, and now my app does not break (However, the square root button now does not work.)  case ""⌥"": performOperation2 { sqrt($0) }  case ""x"": performOperation1 { $0 * $1 } case ""⚡︎"": performOperation1 { $1 / $0 } case ""+"": performOperation1 { $0 + $1 } case ""-"": performOperation1 { $1 - $0 } case ""⌥"": performOperation2 { sqrt($0) }"
swift,35bt5n,Regnisied,1 point,Fri May 8 21:29:59 2015 UTC,"So, when /u/Hansaplast said to rename performOperation2, that means you still keep everything in that function the same besides the name, so it should read:   func performOperation1(operation: Double) -> Double {     if operandStack.count >= 1 {         displayValue = operation(operandStack.removeLast())         enter()     } }   This should compile and run because you are overloading this function.  Basically the function knows that it can accept either a double as an argument (and that would map to the ""second instance"" of this function) or a tuple of doubles (the ""first instance"" of this function).  So your switch statement will then read:  case ""x"": performOperation1 { $0 * $1 }   case ""⚡︎"": performOperation1 { $1 / $0 }  case ""+"": performOperation1 { $0 + $1 } case ""-"": performOperation1 { $1 - $0 }  case ""⌥"": performOperation1 { sqrt($0) }   It may also be more intuitive to just remove the ""1"" from the function name and keep it simply as ""performOperation"""
swift,35bt5n,ATXgaymer02,1 point,Fri May 8 21:37:03 2015 UTC,"Hi!  so i too ran into this issue while working through it.  If you haven't figured it out yet, the most elegant solution i've encounter is to make the second form of the performOperation function private.  IF i understand correctly, this keeps the objective-c inference from occurring since function overloading is a swift feature only. my code looks exactly like the professors except for the addition of ""private"".  func performOperation(operation: (Double, Double) -> Double) {     if operandStack.count >= 2 {         displayValue = operation(operandStack.removeLast(), operandStack.removeLast())         enter()     } } private func performOperation(operation: Double -> Double) {     if operandStack.count >= 1 {         displayValue = operation(operandStack.removeLast())         enter()     } }   Hope this helped! And anyone who wants to correct my understanding of why private works, please do so.  I'm coming at this from a very light background and private is something (I am not afraid to admit) that I don't really understand."
swift,35bt5n,Hansaplast,0,Mon Jun 15 00:26:50 2015 UTC,"I'm on mobile so I can't copy paste from your post, but your func declarations seem wrong. The ""-> Double)"" should be "") -> Double"". And you can just name the performOperation1 and performOperation2 the same, swift will recognise which one to use based on the input parameters.   When I'm home I'll see if I can find my code for the calculator, I did the course as well."
swift,35bt5n,Catfish_Man,1 point,Fri May 8 20:42:33 2015 UTC,Thanks!
swift,35bt5n,Regnisied,3,Fri May 8 21:08:04 2015 UTC,Invoking a closure-taking function with curly braces like that is totally fine actually.
swift,35b80h,Regnisied,1 point,Fri May 8 17:32:51 2015 UTC,"I'm not an expert with SpriteKit and have only used SKActions intermittently, but from what I can tell when you are setting  city.speed = 0   This is only setting your original city object/node's speed to 0, instead of all the city objects that have been instantiated into your scene.   A solution instead might be to iterate through your scene's children and if their class matches your city class, then set that child's speed (which should be a city object) to 0.   Pseudocode:  for childNode in self.children {     if childNode.class = city.class {         childNode.speed = 0     } }   Again, I may be completely wrong in this or there may be a more efficient way of doing this, but it seems right now you are just not setting all the created cities speeds to 0.  Anyone please feel free to correct me or add to this.  But I hope this helps!  Edit: It may help to subclass your city into an actual City object with its superclass being SKSpriteNode.  That way when checking your scene's children (like I mentioned in the above for-loop) it will be easy to determine what objects need their speeds set to 0.  Edit 2: You may also want to add to the action to make sure to remove the city from your scene when it has reached a certain point.  Even though they are off-screen they are still contained within the scene and over time it could dramatically affect performance. I think there's a pretty simple way to do this but you'd have to look in the SKAction documentation."
swift,35b80h,Regnisied,1 point,Fri May 8 19:37:52 2015 UTC,"I tried setting the city in the GameScene only but I get an error saying ""Attemped to add a SKNode which already has a parent"""
swift,35aw7p,sabber889,1 point,Fri May 8 15:59:18 2015 UTC,"Shoot me a PM and we can discuss! To clarify, do you already have the layouts/mockups completed?"
swift,35aw7p,swb1192,1 point,Fri May 8 16:14:04 2015 UTC,"Is there networking an such, or mostly just building views? PM me with more details"
swift,35aw7p,mistermagicman,1 point,Sat May 9 00:58:09 2015 UTC,Would be interested in helping. Lead interaction designer and iOS dev at Creativedash. I do a fair amount of UI/UX work as well.
swift,3597jr,beardedman888,8,Fri May 8 03:56:57 2015 UTC,"The ""let ="" pattern is nice because you don't need to unwrap the optional within the if statement. I find it quite readable as well. It's not necessary though, just a convenience pattern."
swift,3597jr,Bewder,6,Fri May 8 04:06:56 2015 UTC,"if-let bindings, being an implicit != nil anyways, are for the most part used when the author needs access to the bound variable.  It doesn't make much sense to take the time to define a variable (and waste an identifier in a new scope) and not use it.  And vice versa the extra bang-unwrapping when you do need access can be tedious in the large."
swift,3597jr,CodaFi,2,Fri May 8 04:08:12 2015 UTC,"If you don't need to use foo once you know it exists, then use if foo != nil. Otherwise, use if let bar = foo."
swift,3597jr,DaemonXI,1 point,Fri May 8 19:49:13 2015 UTC,"This is not always true.  If you need to modify the result then you may have issues since the variable in an if let is, by definition, immutable .  For example, you can''t write code like this:  var a = [""a"":[5,6,7]]  if let b = a[""a""] {   b.append(8) }   You'd have to write it like this:  var a = [""a"":[5,6,7]]  if a[""a""] != nil {   a[""a""]!.append(8) }"
swift,3597jr,klngarthur,3,Sat May 9 03:49:38 2015 UTC,"But you could always change the assignment to be a mutable type using if-var rather than if-let. Then, to preserve your changes beyond the scope of the if block, you would reassign b back into the dictionary.   var a = [""a"": [5,6,7]] if var b = a[""a""] {     b.append(9000)     a[""a""] = b }  I would prefer this syntax to the forced unwrapping you have in your second example. That being said, supposing you didn't care about when a[""a""] returns nil, you could use ""optional chaining"" for ultra-tenseness!  a[""a""]?.append(9000)"
swift,3597jr,mklbtz,1 point,Sat May 9 08:17:12 2015 UTC,Valid point.
swift,3597jr,DaemonXI,1 point,Sat May 9 04:13:51 2015 UTC,"I think the if let pattern is nicer because then you can use the variable without force-unwrapping it. In addition, you can use a shadow variable so you don't change naming ( IE: if let foo = foo { } ).  The only downside of if let ( IMO ) is that it encourages code nesting for positive outcomes, which I despise. I much prefer to always get my error conditions out of the way as quickly as possible, then continue on with the real meat of the function not having to be needlessly indented.  if foo == nil { return; } // now we can focus on the body without indenting"
swift,3597jr,exorcyze,1 point,Fri May 8 18:33:10 2015 UTC,"Depending on what you want to do with foo, you can also use map to check an optional (assuming foo is an optional).  foo.map { println($0) } // Prints the value of foo if it's not nil"
swift,3564wy,Bete5,8,Thu May 7 12:51:44 2015 UTC,Stanford iTunes U courses are free and offer just as much knowledge.
swift,3564wy,FutureIsMine,6,Thu May 7 16:58:00 2015 UTC,"I seriously recommend checking these out, the professor is a fantastic teacher and learning from his code style will make you a better programmer."
swift,3564wy,lAmTheOneWhoKnocks,6,Thu May 7 17:38:57 2015 UTC,"Don't forget that the professor worked at NeXT, which is where the cocoa API comes from. Not only does he know current iOS, he actually was building it too and who better to learn from."
swift,3564wy,FutureIsMine,2,Thu May 7 18:13:19 2015 UTC,is there any place to see it on the web / windows / android? I habe a m ac at home but cannot watch it on the go.
swift,3564wy,mavdev,2,Thu May 7 19:10:35 2015 UTC,"Go to iTunes and check out their U tab, its also on YouTube as well. You don't need a mac to download iTunes, it works on windows as well."
swift,3564wy,FutureIsMine,3,Thu May 7 21:27:15 2015 UTC,"His calculator demo app just about fried my brain.  In both how the calculator functioned, and how he coded it.  I feel stupid when i re-watch that series."
swift,3564wy,smakusdod,4,Thu May 7 22:14:53 2015 UTC,I learned the basics through the Complete iOS 7 Development Course on Udemy. It's all videos. The best resource I've come across.
swift,3564wy,FR_STARMER,1 point,Thu May 7 16:10:36 2015 UTC,me too. The $200 per month (even if its a couple of months) sounds a bit expensive. It's unclear why the nanodegree is better than other courses online.
swift,3564wy,mavdev,1 point,Thu May 7 16:15:10 2015 UTC,"+1 for Rob Percival's course.  It's excellent.  You won't understand exactly why some things are the way they are, but you'll at least know how to build stuff and learn your way around.  Follow this up with Stanford's course and anybody should be cooking with gas at that point."
swift,3564wy,smakusdod,1 point,Thu May 7 22:16:14 2015 UTC,"I'm not talking about Rob Percival's iOS course. I'm talking about this one. Rob is great, but he doesn't explain how or why concepts work. The one I'm talking about is much superior.  EDIT: I realize this is an Objective-C course. Thought I was in plain /r/iOSProgramming."
swift,3564wy,FR_STARMER,1 point,Fri May 8 04:13:42 2015 UTC,"Just FYI, they have their own website now.  http://bitfountain.io"
swift,3564wy,Tandoori_Pizza,2,Fri May 8 04:44:32 2015 UTC,"One of the most baffling traits of the human brain (and I absolutely include myself in this!) is our belief that expensive things must be better. I'm not saying it's always wrong – you might find that paying for courses is a great way for you to learn – but at the same time, there are lots of free courses out there that you can try first, and only pay if you find the free courses disappointing.  My own free course is Hacking with Swift. I did do some videos originally, but with the Swift 1.2 update breaking a lot of things (and Swift > 1.2 perhaps announced in June?) they proved too difficult to maintain. But all 30 projects are there to read as text, updated for Swift 1.2, for no cost. Give it a try, and if you hate it (and others) then by all means pay."
swift,3564wy,twostraws,1 point,Thu May 7 20:28:42 2015 UTC,"I'll just say that I've been going through your courses and they're extremely helpful. No cruft, just straight to the point, and each project illustrates a very specific set of tools in a clear, easy to understand way.   Your best choice was to not include too much in each project, you kept them simple and concise. I would only add that maybe you should suggest titling the projects with something descriptive rather than just by number, because then at the end the user would have a huge set of templates to refer back to.   Maybe also take another swing through the projects and correct for spelling and grammar. ;-)"
swift,3564wy,dancemonkey,2,Thu May 7 20:55:55 2015 UTC,"I spent eight years doing journalism, and have a degree in English, but ultimately writing 150,000 words in a short space of time has a weird effect on you – any feedback on the spelling and grammar is most welcome over on /r/hackingwithswift :)"
swift,3564wy,twostraws,1 point,Thu May 7 21:18:05 2015 UTC,"Nothing major, no offense intended, just the usual stuff you'd come across when writing 150,000 words, I imagine. Nothing that ever impeded my understanding, and certainly nothing that I could even remember off the top of my head.   But yes, your 8 years in journalism shine through in how clear and concise the writing is. Nicely done."
swift,3564wy,dancemonkey,2,Thu May 7 21:38:59 2015 UTC,"Thank you! No offence ever, ever taken; all feedback is very welcome!"
swift,3564wy,twostraws,1 point,Thu May 7 21:43:05 2015 UTC,"Very well done. I feel like I'm being sold fluff or the ""become a developer"" dream sometimes. When it comes down to it one really just needs to do the work."
swift,3564wy,DakotaK_,2,Fri May 8 02:56:01 2015 UTC,"If you want some basics then tree house, I also picked up one or two from udemy. The on on udemy can get pricy though."
swift,3564wy,ridiculousGnome,1 point,Fri May 8 19:09:48 2015 UTC,"Hi. I was signed up to the course for a couple of months. I signed up because I have enjoyed other MOOCs I have done but I find I hard to keep making the time for them around work commitments etc. I wanted to see if shelling out a couple of hundred $ a month would make a difference to my commitment (it did) and because I thought I might enjoy iOS development (I didn't). The course is listed as intermediate but the two sections I covered seemed pretty basic to me, mind you I've been coding since 1984 so... There is a lot of handholding and I think it really is aimed at beginner programmers without the confidence to just pick up a book or find some tutorials and go from there."
swift,3563v2,tronador7,4,Thu May 7 12:40:40 2015 UTC,"It's neat! However, the background could be improved."
swift,3563v2,vatsal_manot,1 point,Thu May 7 15:56:33 2015 UTC,It's nice to hear feedback! How would you improve the background? What should I put instead of the squared pattern I have right now?
swift,3563v2,vatsal_manot,2,Fri May 8 02:50:20 2015 UTC,"Well, any plain background would do. It's the pattern that bothers me."
swift,3563v2,supburger,1 point,Fri May 8 06:50:38 2015 UTC,I might drop the opacity but changing the background to a plain background will work great.
swift,356b43,justking14,2,Thu May 7 13:48:31 2015 UTC,"There are algorithms for this, namely hqx, I couldn't find any swift implementations though. Maybe you can find objective-c or c implementations and bridge them. You could even try to implement it yourself.  Another option is to generate bigger images using photoshop or something similar, no idea if it would solve your problem though."
swift,356b43,gulypy,1 point,Thu May 7 21:53:27 2015 UTC,"Non-mobile: hqx  That's why I'm here, I don't judge you. PM /u/xl0 if I'm causing any trouble. WUT?"
swift,356b43,LittleHelperRobot,1 point,Thu May 7 21:53:50 2015 UTC,I was hoping to find a method without manual scaling in an image editor because I have two dozen images that are all half the size I want them to be
swift,356b43,gulypy,1 point,Fri May 8 01:37:29 2015 UTC,Maybe this could help you out depending on what exactly you're trying to do
swift,357dgt,iD986,1 point,Thu May 7 18:46:05 2015 UTC,You did not include your code in this post.
swift,357dgt,LJQTKY,1 point,Thu May 7 19:38:05 2015 UTC,"First of all, it seems you forgot to post your code. And second, post them as plain text, images are annoying to copy and reproduce if we needed to.  Your problem is when you're unwrapping an optional using the exclamation mark (myOptional!). You see, optionals are like boxes, they can or cannot contain a value, and when you unwrap them using the exclamation point what you're essentially saying is ""I am absolutely sure you have a value, so let me get it out of the box"". Except in that case there was no value and your app threw that exception.  Without looking at your code it's hard to figure out exactly what you were trying to do, but you can try using the if let construct to safely unwrap the optional. Or even using optional chaining."
swift,357dgt,gulypy,1 point,Thu May 7 21:07:31 2015 UTC,"Ok when I get to my laptop I will post my code, thank you!"
swift,357dgt,SUNBUR57,1 point,Fri May 8 00:37:17 2015 UTC,"I hate Optionals in Swift but basically you're using a ! when you either shouldn't, or a ? instead. You may also/instead be setting a variable wrong and it's returning nil. Please post code! :)"
swift,3563wt,erstylin,2,Thu May 7 12:41:10 2015 UTC,"Programming is a means to an end, a way to solve problems.  If you don't have a problem to solve, you'll get demotivated quickly.  Find the end: decide to make something cool and learn to program on the way.  The problems you'll find making that cool thing aren't anything that haven't been solved before, so you'll be motivated by doing the cool thing and you'll learn how to solve the problems on the way."
swift,3563wt,GlassPilings,1 point,Thu May 7 12:53:09 2015 UTC,This is how I got started programming.  I built lots of small tools to fill specific needs at my previous job.  Having a vision/goal to work towards helps immensely.
swift,3563wt,threeolives,1 point,Fri May 8 14:34:43 2015 UTC,"Hi! I started to code last September. The way I started was to go on to CodeCademy and start off with some HTML and CSS, both valuable if you later want to create promotional websites for your apps. After that I took the full web developer course by Rob Percival on Udemy. Rob's a very good teacher and coding along while he explains the basic concepts gives you a great first insight. I then went on to another course by Rob, although I am currently not completely through with it. The complete iOS and Swift developer course.   As of now I am coding my first app in Swift.   So I would recommend that you start of with Web Development on CodeCademy and then go on to add other skills. And the most important part is to practice. Think of an/a app/website that solves a problem you or one of your friends currently has. Or try to recreate your favorite apps or websites."
swift,3563wt,mick1203,1 point,Thu May 7 13:33:55 2015 UTC,When I first started coding it was on MS C++ v1.0  I swear to God I spent a full year just writing code 16 hours a day....and I really did love every minute of it.  Write code.  Read other people's code and learn from it. Write code. Then take what you have written and re-write it with less code.
swift,3563wt,Stink-Finger,1 point,Fri May 8 01:43:33 2015 UTC,"Make a simple game (clone): Snake, Tetris, etc.  A lot can be learned by coding a simple game (graphics, logics, AI, data structures, etc)."
swift,3563wt,sabiland,2,Fri May 8 11:08:30 2015 UTC,"I was incredibly happy when I made my fist game, even though it was basic and not totally fun. But make clones of apps more to what you like to program (If you make games, then clone games, social media, then social media)"
swift,3563wt,DakotaK_,1 point,Fri May 8 19:12:16 2015 UTC,"I learned a lot about learning from O'Reilly's Head First book series. That is, all their books start by explaining that you learn best when you have a reason to learn – when your brain is saying, ""this stuff is important.""  I wrote a whole tutorial series about Swift with this concept in mind: write all the code you want, but do it with a purpose. Work towards something. Build something useful, even if it's not big or complicated. So my tutorials teach you to build 20 full projects, games and apps, by incrementally introducing you to Swift and Cocoa Touch.  So, if you find yourself reading a tutorial series that has chapter titles like ""Variables"", ""Strings"", ""Arrays"", and so forth, it's not something I would consider a tutorial – it's just a reference guide, and Swift already has one of those. Instead, I would suggest looking for something that teaches you concepts in context: ""collection views let you make grids of data; let's give them a try and see what we can build.""  If you'd like to read my tutorials – they are free! – you can: Hacking with Swift. There are lots of others available too. You're spoilt for choice! :)"
swift,3563wt,twostraws,1 point,Sat May 9 12:06:38 2015 UTC,"thank you so much! i'll be sure to check out your website, looking forward to be able to start building small useful apps"
swift,3563wt,mohitathwani,1 point,Sat May 9 13:24:41 2015 UTC,Hey I've developed a free course on iOS development with Swift. I start from the absolute basics. Check out my site on http://indianios.guru
swift,3556au,senatorkang,1 point,Thu May 7 04:59:15 2015 UTC,"You are correct. Beta review is submitted under the prerelease section in iTunes Connect.   'Submit for review', under the app title is for review to be release to the App Store."
swift,3556au,swiftMaster,1 point,Thu May 7 05:51:34 2015 UTC,"Ah, cool. Thanks!"
swift,353wrq,osum4est,2,Wed May 6 22:04:37 2015 UTC,"Did you... try googling? parse html in swift returns a lot of results, including libraries, SO questions and tutorials."
swift,353wrq,7re,2,Thu May 7 01:35:18 2015 UTC,I couldn't find a decent Swift HTML parsing library so I used this Obj-C library: https://github.com/nolanw/HTMLReader  I used carthage to install the framework then created a bridging header (https://bohemianpolymorph.wordpress.com/2014/07/11/manually-adding-a-swift-bridging-header/) with no import statements and it works.
swift,352c1n,Choppa790,3,Wed May 6 14:54:25 2015 UTC,"I have both those titles, and it depends on how far you've progressed already. Both are good starting places if Swift is your first effort with an object oriented language. I think I prefer Neuburg's book, because it introduces OOP more gently, but if you're pretty comfortable reading and understanding Apple's The Swift Programming Language, then it might be too simple for the first few hundred pages (definitely read Apple's book, it's free on iBooks Store).   Neuburg also wrote Programming iOS 8, and is meant to directly follow iOS 8 Programming Fundamentals.  Swift Development spends a lot of time on specific technology like spritekit, scenekit, av, iCloud, but it can be valuable to read those even if you don't plan on using them in an app.  Read the table of contents and book excerpts. The terms of oreilly's ebook license allows lending. PM me and I might be able to lend you excerpts of specific chapters if you really want to preview something in particular with either book."
swift,352c1n,LJQTKY,2,Wed May 6 15:55:37 2015 UTC,I've used the heck out of Swift Pocket Reference and iOS 8 Swift Programming Cookbook.
swift,352c1n,dar512,1 point,Wed May 6 18:51:09 2015 UTC,Google Books is great for getting a good look at most of the book: iOS 8 Swift Programming Cookbook: Solutions & Examples for iOS Apps
swift,3542n9,1011110001011100,2,Wed May 6 22:52:21 2015 UTC,"I think the other posts are better but if you want a different perspective  for loop to create a random number within the range and append that to an array  Use a sorting algorithm  Set label text as content of array   I know it's not exactly thorough but if I posted code then that would defy the point. Nothing crazy complex, anyone should be able to read it and interpret it. Hopefully it helps :)"
swift,3542n9,SUNBUR57,1 point,Fri May 15 19:22:53 2015 UTC,"set the maxnumberoflines to 0. use componentsJoinedBystring to turn the array of numbers into a string, using either a space separator or a newline."
swift,3542n9,retsotrembla,1 point,Wed May 6 23:56:46 2015 UTC,"How about  let highestNumber: UInt32 = 59 let numberOfDraws: UInt32 = 5 let numbers = sorted((0..<numberOfDraws).map({ _ in arc4random_uniform(highestNumber) + 1})) let string = "", "".join(numbers.map({""\($0)""})) label.text = string;   Edit: Whoops, forgot about sorting."
swift,353hg3,Hendrikson_Swift,1 point,Wed May 6 20:09:26 2015 UTC,Are you seeing the leak when profiling on the simulator or on the device? Sometimes profiling on the simulator can have false positives and otherwise strange results.
swift,352zt3,Redrogae,1 point,Wed May 6 17:55:17 2015 UTC,AVFoundation for getting the audio samples  Accelerate for getting the frequencies out of the samples with an FFT  then some processing to detect the tone  Check this great article out: http://www.objc.io/issue-24/audio-dog-house.html
swift,352zt3,Kametrixom,1 point,Sat May 16 00:44:36 2015 UTC,ssing to detect    hey man thanks for that reference... I've just subscribed to their RSS feed. I'll go through the text and come back to you with a few more questions in case needed if you don't mind?
swift,352zt3,Kametrixom,1 point,Sat May 16 13:34:31 2015 UTC,"Yeah, I don't mind"
swift,352zt3,Kametrixom,1 point,Sat May 16 17:24:43 2015 UTC,"In your opinion one question?  1. Do you think it might be possible for iOS through Swift, pick up distorted guitar signals accurately? Or at the moment its only suitable for clean signals?"
swift,352zt3,Kametrixom,1 point,Mon May 18 14:33:55 2015 UTC,"What do you mean by distorted? If you mean a lot of noise in the background: it is still possible to extract a single frequency, as long as the noise isn't louder than the guitar sound."
swift,352zt3,Kametrixom,1 point,Mon May 18 15:45:55 2015 UTC,"I mean, if the guitar signal itself is processed using some sort of distortion pedal effect, like fuzz, or overdrive or guitar distortion. Those notes can be in perfect tune, but can the be recognized by the algorithm as such? And of course background ambient noise, but as you mention as long as that noise isn't louder than the sound generated by the guitar it should be detectable."
swift,352zt3,Kametrixom,1 point,Tue May 19 13:01:04 2015 UTC,"I don't have time right now, but in a few hours, I'll build a small app that lets you see the frequencies of audio ;)"
swift,34ywpk,tindercylinder,1 point,Tue May 5 18:35:21 2015 UTC,"A bit of an outside chance, but it's possible this tweet might help you."
swift,34ywpk,twostraws,1 point,Tue May 5 21:16:55 2015 UTC,@andy_matuschak   2015-03-12 23:37 UTC  Swift 1.2 compilation not so incremental for you? Overloaded free functions are all dirtied when one's file is modified. Chief culprit: ==.     This message was created by a bot  [Contact creator][Source code]
swift,34ywpk,TweetsInCommentsBot,1 point,Tue May 5 21:17:01 2015 UTC,Turning on whole module optimization in my build settings sped up my build times by a great deal. I guess it's an okay way to work around this bug for now.
swift,34zgnw,xStory_Timex,1 point,Tue May 5 21:03:19 2015 UTC,"Is profileCell a class, or is that a variable?  You might be meaning to check cell == profileCell."
swift,34zgnw,Stephen110,1 point,Tue May 5 22:21:14 2015 UTC,"yes it is, everything is spelled correctly"
swift,34zgnw,dwltz,1 point,Wed May 6 22:23:09 2015 UTC,Is profileCell spelled correctly? Since you try to cast cell to a class (profileCell) I would expect it to be ProfileCell because class names are supposed to start with an uppercase letter.
swift,34yusl,Baschtian,2,Tue May 5 18:21:19 2015 UTC,"My guess is that, and someone please correct me if I'm wrong, while Swift supports overloading like in the example you've given, Objective-C does not, and if you're using the class in a way that makes it compatible with Objective-C objects (such as by using the @objc tag or extending your class from an existing Cocoa class like NSObject or UIView), you basically are forbidden to use overloading.  The reason why this is the case is because you need to be able to uniquely identify methods in Objective-C based on their method signature. Both of your methods create the method signature, performOperation: and thus this isn't allowed. The only way to fix it is probably to either not let your class inherit from an Objective-C class (or use the @objc tag), or rename one of your methods. Possibly marking your methods as private would also work."
swift,34yusl,Komputer9,1 point,Tue May 5 19:46:51 2015 UTC,thx man. It works now!
swift,34yusl,exorcyze,0,Tue May 5 22:07:38 2015 UTC,"This is one of those things that I absolutely love about swift - being able to use the same method name for different parameter types, and having the compiler be smart enough to figure it out based on context. It makes code so much simpler to read."
swift,34yusl,Sebaall,1 point,Tue May 5 20:18:24 2015 UTC,I stumpled upon the same error while doing this course. You can't override methods in ObjC (you can in Swift but not when you inherit from ObjC class). The Stanford course was made when older version of Swift and Xcode was present and Xcode didn't react on this mistake. It was a bug in XCode that it allowed to override this method. You just should write method with different name to achieve what you want.
swift,34tsp3,canhelp,1 point,Mon May 4 14:33:47 2015 UTC,Awesome! I am looking forward to the next part! Please keep this up.
swift,34tsp3,k4f123,1 point,Tue May 5 09:48:09 2015 UTC,"This is a great tutorial, thank you."
swift,34tsp3,Jubilus,1 point,Tue May 5 14:15:41 2015 UTC,This is awesome! Thank you~~~~
swift,34tsp3,throwawaycompiler,0,Tue May 5 14:18:28 2015 UTC,Thanks guys! there are a bunch of other tutorials on the page as well . If you are interested in exploring take a look at them here http://shrikar.com/how-to-make-an-app/
swift,34vm50,thebadgerforce,1 point,Mon May 4 22:48:25 2015 UTC,"1.Why can't I get any videos shorter than 13 seconds to play?     This i'm not sure about. I tested out your code with two different mp4's (one is 4 seconds, the other is around 1 minute). Both loaded and played correctly (also both of those notifications above were fired). I'm sure it's not your MPMoviePlayerController but how you are storing the mp4's locally. I'm not sure how you're getting the outputFilePath, but you might want to make sure that the file path exists and is correct. Here are two functions you can use to check if the file path contains something in it and what files are contained in any given directory path:    func fileExistsAtPath(path : String) -> Bool {     let fileManager : NSFileManager = NSFileManager.defaultManager()     return fileManager.fileExistsAtPath(path) }  func printAllFilenamesInPath(path : String) {     let fileManager : NSFileManager = NSFileManager.defaultManager()     var allFilenames : [AnyObject]? = fileManager.contentsOfDirectoryAtPath(path, error: nil)     if let _filenames = allFilenames {         for filename in _filenames {             println(""file: \(filename)"")         }     } }           2.What in my code below is causing the video to play when it's at least 13 seconds long?     I think this is caused by MPMoviePlayerController's shouldAutoplay. Default value is true. Once the video has loaded it autoplays. If you set it to false it shouldn't autoplay once it's done loading."
swift,34vm50,bluebx,1 point,Tue May 5 06:12:04 2015 UTC,"Thanks very much for you response! Your answer to #2 makes perfect sense. As for #1, I've been printing out the url that gets passed in and it's looked fine, but I'll add in your methods to validate it. Thanks again."
swift,34vm50,cawls,0,Tue May 5 14:37:37 2015 UTC,Have you looked at this answer on stack overflow?  http://stackoverflow.com/questions/30057809/avfoundation-video-playback-truncating-in-swift
swift,34v9nz,Awsthr,2,Mon May 4 21:13:04 2015 UTC,Is there is a specific thing that is confusing you? I skimmed thought it and it all seems pretty standard.
swift,34v9nz,CleverError,1 point,Mon May 4 22:29:24 2015 UTC,So that's basically the right way to do it? I was just confused because I haven't used parse like that before. Thanks!
swift,34v9nz,mistermagicman,1 point,Mon May 4 22:36:10 2015 UTC,Either way is correct. I like to use CocoaPods because that's how I get most of my other libraries/frameworks. It makes it easier to keep track of and remove.
swift,34v9nz,nfeld9807,1 point,Wed May 6 01:25:17 2015 UTC,"Add the dependency in the podfile then import the framework in your bridging header. After that, follow the swift guide on parse.   Edit sorry thought you were asking about swift. But obj c just follow the guide"
swift,34t3kn,sonson_twit,1 point,Mon May 4 09:48:06 2015 UTC,I like it. Your code is really Swifty. Really well written and encapsulated.
swift,34t3kn,zoetebeer,2,Mon May 4 12:35:54 2015 UTC,"Your code is really Swifty   Yeah cause underscore in variable name is very ""Swifty"":  public var  has_mail = false"
swift,34t3kn,souhoh,2,Tue May 5 07:17:59 2015 UTC,"Oh...., I have just generated the codes from JSON.  Later, I fix it."
swift,34t3kn,zoetebeer,0,Tue May 5 08:11:43 2015 UTC,"wow, ye you got him ! in 3k lines of code you found underscore, congratz"
swift,34t3kn,souhoh,1 point,Tue May 5 12:14:05 2015 UTC,"actually if you look closer there are many things that pop out as not ""Swifty"" such as all the unnecessary get keywords that can be omitted. I am not putting the code down. Let's be clear about that. I think whoever writes any code and puts it online for others to use is doing a very nobel thing. I am criticising you :-)"
swift,34t3kn,zoetebeer,0,Tue May 5 13:11:52 2015 UTC,Yes but you missed my point with Swifty. I really liked encapsulation with generic Results in boxing etc. Such things comparing to ObjC where you can not do this but still in Swift you could write simplest things and just ignore all the nice features that this language has. That was my point. For me he can choose different notation style.. but that was not the point. End of discussion:)
swift,34ua8s,codydale,4,Mon May 4 16:49:51 2015 UTC,Check out swiftyJSON:  https://github.com/SwiftyJSON/SwiftyJSON
swift,34ua8s,Stephen110,1 point,Mon May 4 17:51:02 2015 UTC,Argo is another good one. A different approach.  https://github.com/thoughtbot/Argo
swift,34ua8s,jondus,1 point,Mon May 4 18:09:36 2015 UTC,+1 for SwiftyJSON. It works and was easy for this Swift/Cocoa newbie to use.
swift,34ua8s,dcoupl,3,Mon May 4 19:30:34 2015 UTC,iOS has support for JSON parsing built-in.  See the reference for NSJSONSerialization.
swift,34u5t4,AlphaOmegaDeltaPhi,1 point,Mon May 4 16:16:32 2015 UTC,You can definitely use a dictionary to store the values but I'd suggest going down the route of creating a class just for readability.   The you can just call the sort() method on the array of the elements of they type of your custom class based on the parameter supplied.   http://stackoverflow.com/questions/24130026/swift-how-to-sort-array-of-custom-objects-by-property-value
swift,34u5t4,Manlatics,1 point,Mon May 4 18:05:30 2015 UTC,ahh I was looking in the right direction. Thanks!
swift,34rumh,alexsparty243,8,Mon May 4 00:49:20 2015 UTC,Apple released an entire free Book about swift. You can read it on the web in the Mac developer docs or iOS developer docs and they even made it available in iBooks.
swift,34rumh,eridius,1 point,Mon May 4 00:52:48 2015 UTC,Thats how I learned is by doing all the examples in the free ebook apple released. Just open playground in xcode and do all the examples. I learned swift in 8 months without any other programming experience and have an app out now. Good luck!
swift,34rumh,appsssss,1 point,Tue May 5 17:24:36 2015 UTC,Did you supplement this with any other books or anything?
swift,34rumh,TheForrestFire,1 point,Thu May 21 15:25:53 2015 UTC,nope just youtube videos and the ebook.
swift,34rumh,appsssss,0,Wed May 27 02:28:34 2015 UTC,"Yeah I saw that. Is it a book on how to use the language, or how to make apps?"
swift,34rumh,eridius,3,Mon May 4 01:05:47 2015 UTC,On how to use the language. You still make apps using the same Cocoa APIs that people use with Objective-C and there's a staggering amount of information out there on how to do that.
swift,34rumh,InternetsTad,2,Mon May 4 02:35:06 2015 UTC,"I'm taking the course at bitfountain.io - it's not perfect, but it's pretty in depth.   He takes you through enough different sorts of projects that you should be able to start coding almost whatever you want other than games pretty soon after, or even during the course."
swift,34rumh,koalefant,0,Mon May 4 01:10:19 2015 UTC,"OK,  I'll take a look at it when I get a chance."
swift,34rumh,mistermagicman,5,Mon May 4 01:21:45 2015 UTC,"I learnt swift by reading that programming guide. The most I got out of it was how to use let and var.  Then I Actually learnt swift by making an application. The first week was horrible and on some days I would spend a whole afternoon on just one source file, trying to get a method to work.  Now it's like second nature.  Think about what you want to make and just make it. You'll gain a working knowledge of the language rather than just theoretical knowledge."
swift,34rumh,7re,0,Mon May 4 01:22:06 2015 UTC,Ok that sounds good. So I should just read the book and then dive in head first?
swift,34rumh,koalefant,4,Mon May 4 01:33:20 2015 UTC,"A super helpful thing for me was Treehouse - their Swift tutorial is excellent. Fairly concise, plus they walk you through building a couple apps. After that I was ready to build my own apps. I recommend just buying one month, watching all the Swift videos, then canceling."
swift,34rumh,koalefant,1 point,Mon May 4 03:15:44 2015 UTC,"They have a free trial for a week I think - this was what I used to learn initial iOS stuff, then just started building."
swift,34rumh,mavdev,2,Tue May 5 10:17:34 2015 UTC,"Yep, dive in. The worst that will happen is you slog through it slowly, which is inevitable. But that's how you learn!"
swift,34rumh,mopelkotze,0,Mon May 4 01:34:08 2015 UTC,"Just out of curiosity, what was your first project?"
swift,34rumh,dwltz,5,Mon May 4 01:37:09 2015 UTC,"Still working on it, it's kind of a large project. Management software for private practice. Server/client stuff with sockets, some encryption, core data etc. The language isn't the hard part actually, the difficult part is learning the Cocoa or UIKit api's and knowing what tools are available to use."
swift,34rumh,dwltz,1 point,Mon May 4 01:45:22 2015 UTC,Seems complicated. Good Luck!
swift,34rumh,Jubilus,3,Mon May 4 01:59:11 2015 UTC,Rob Perceval's course that I bought for $20 on Udemy
swift,34rumh,alan91330,3,Mon May 4 03:17:00 2015 UTC,"I started to learn Swift and iOS development myself. I use the Developing iOS 8 Apps with Swift by Stanford course.  It teach you the basics, the theory and give you task for practical experience without overwhelming projects. And it's FREE."
swift,34rumh,mick1203,1 point,Mon May 4 05:09:21 2015 UTC,Looks interesting. I'll make sure to check it out.
swift,34rumh,SUNBUR57,2,Mon May 4 10:09:45 2015 UTC,"The Swift book from Apple, together with raywenderlich.com helped me a lot. The fact that I had a project with a deadline also helped me a lot, I really had to get stuff done instead of floating around in the learning space all the time."
swift,34rq77,BrutalNoob,2,Mon May 4 00:08:27 2015 UTC,Check out size classes:  https://developer.apple.com/library/ios/recipes/xcode_help-IB_adaptive_sizes/chapters/AboutAdaptiveSizeDesign.html
swift,34rq77,Stephen110,1 point,Mon May 4 01:22:00 2015 UTC,Thanks! I was already looking at that. I answered my own question though.
swift,34rq77,criosist,1 point,Mon May 4 20:56:19 2015 UTC,I think you may have the wrong constraints ? why would it look wrong and what constraints are you using ?
swift,34rq77,criosist,1 point,Mon May 4 07:37:40 2015 UTC,It was a spacing issue.. This solution worked for me: http://stackoverflow.com/questions/13075415/evenly-space-multiple-views-within-a-container-view
swift,34q8a8,Bleuground,1 point,Sun May 3 16:22:43 2015 UTC,"Be warned, Apple's multipeer connectivity framework is super buggy and frustrating to work with. There are plenty of blog posts that talk about all of it's shortcomings and unexpected behavior.  Are you sending that string both directions, or only from one device to another? Airdrop works much better than the P2P framework, but it only works one way.  All of that said, here's the basic flow (assuming you aren't building a game that can provide a UI for creating a new session vs joining an existing one). I don't remember all of the method names off the top of my head, but this is the idea:   To connect two devices, one needs to be the host (advertiser), the other joins its session (browser). There is no way of knowing if there is a host nearby without being a browser, so each phone will need to have a browser AND advertiser running. Once one of them finds the other, they have to decide which will be the host and which will be the peer, the easiest way to do this is compare device names and whoever comes alphabetically first is the host (yes, this is actually what we have to do). Once that is sorted out, have the Advertiser invite the other phone, which will await it's invitation. Once it receives an invitation, have the peer connect to the phone it received the invitation from. Then, you pray that everything worked, and that the connection will actually happen (spoilers, it might not). Once connected, you can send messages back and forth with whatever data you want, provided they stay connected.  If there is anything specific you're stuck on, I can help with more detail, but without knowing the details that's the basic overview."
swift,34q8a8,blaizedm,1 point,Sun May 3 17:38:27 2015 UTC,"OK thanks, the string was for a link to a song on sound cloud, do you know how the streaming capabilities of multipeer connectivity work by any chance? Once again your explanation helped a lot."
swift,34q8a8,hexavibrongal,1 point,Mon May 4 04:46:36 2015 UTC,"Read all the top posts about MPC on Stackoverflow.  For all but the most simple use cases, it requires a lot of code to work around the bugs.  We're pretty close to dumping MPC and implementing our own solution in CoreBluetooth."
swift,34qh6k,mosn,7,Sun May 3 17:39:57 2015 UTC,Github
swift,34qh6k,mavdev,0,Sun May 3 17:41:31 2015 UTC,"Hey Thanks for the reply, I know Github has it all but I am looking for a  specific suggestion coming from a fellow developer."
swift,34qh6k,shiggie,4,Sun May 3 18:25:44 2015 UTC,"You've asked an extremely broad question.  So, if you want a specific suggestion, you need to ask a specific question."
swift,34qh6k,mikejstein,2,Sun May 3 23:11:35 2015 UTC,"Parse has posted source code for their example apps, try them."
swift,34qh6k,davros_,2,Sun May 3 18:50:51 2015 UTC,Here's an open source Hacker News client: https://github.com/NikantVohra/HackerNewsClient-iOS  The author posted a thread on Hacker News asking for some reviews of his code: https://news.ycombinator.com/item?id=9479657
swift,34qh6k,tcdb28,1 point,Sun May 3 23:32:29 2015 UTC,I second Github for sure. Apple has a lot of great source code on the dev portal. StackOverflow is also an invaluable resource when it comes to specific issues.  Those are my top 3 sources. Everything else after that is just Google or try to figure it out on my own by ready through the docs.
swift,34qh6k,TGCraft321,1 point,Sun May 3 20:26:12 2015 UTC,The reddit app is open source just google alien blue git hub
swift,34qed7,DakotaK_,4,Sun May 3 17:16:15 2015 UTC,http://www.raywenderlich.com/store/ios-games-by-tutorials
swift,34qed7,audiblefart,2,Sun May 3 21:53:00 2015 UTC,:)
swift,34qed7,twostraws,3,Mon May 4 00:13:34 2015 UTC,"My Hacking with Swift tutorial series contains ten full game projects, of which seven are made using SpriteKit. It's also free and updated for Swift 1.2, so there's no reason not to give it a try!  NB: the series is written as 30 projects in total, alternating between an app project, a game project and a technique project. You can skip through only the SpriteKit projects if you want, but because the series teaches concepts incrementally it's possible you may miss out on some knowledge. For example, the last game project remakes a classic DOS game called ""Gorillas"", but it pulls in some Core Graphics techniques to do drawing – if you're not familiar with Core Graphics and you skipped project 27, you might struggle!"
swift,34n28o,wannadev,3,Sat May 2 17:34:21 2015 UTC,"Depending on how you coded your model data.  If you have a separate file handling all the data, using a shared instance/ singleton would be useful.  Else, I think you might need share a bit on how you're going back to the original view controller. Are you dismissing the second view controller when it is done with what it is supposed to do? Or did you segue back to the original view controller."
swift,34n28o,Fanytastic,2,Sat May 2 18:26:42 2015 UTC,I'm using a segue to go back to the original view controller.  I just tried it using dismissViewController and that didn't work either :(
swift,34n28o,Fanytastic,3,Sat May 2 18:43:27 2015 UTC,"If you segue back to the original view controller you'll be initialising another instance of that viewcontroller in your 'stack' of viewcontrollers, that might be causing an issue.   Generally what I understand (I'm just a college undergrad, so I only have some experience! >.<) is that you would want to dismiss the viewcontroller instead, else you might have memory issues/leaks later on.  With regards to your problem, you can try passing the parent (original) view controller to the second one, by doing something like  var svc = segue.destinationViewController as! SubmissionViewController svc.positions = items svc.parentViewController = self   Update the parent view controller data inside your submission view controller, and dismiss it when it's done."
swift,34n28o,Mad102190,2,Sat May 2 18:49:11 2015 UTC,I would recommend using a delegate protocol instead of a direct strong reference to the parent view controller.
swift,34n28o,Fanytastic,1 point,Sun May 3 08:48:55 2015 UTC,I appreciate this so much.  Ive been having issues with that for a while.  Its working beautifully now.  :)
swift,34n28o,Pecorino,1 point,Sat May 2 19:19:30 2015 UTC,"Just to add on, I think a better practice would to be actually to do this in your submission view controller instead of passing the original view controller during segue  var parentViewController = (self.presentingViewController as originalViewController) // Do whatever you want with parentViewController's data afterwards"
swift,34n28o,Fanytastic,1 point,Sat May 2 19:32:31 2015 UTC,That's sounds like a way better way of doing it.  I'll definitely try that out.
swift,34n28o,Dilligaf_Bazinga,1 point,Sat May 2 20:35:47 2015 UTC,"Just to be clear, unwind segues (with the exit icon in the storyboard scene) do NOT push another view controller onto the stack when going back to the parent vc, right? I’m working on an app and it all uses a storyboard, so I’m wondering if I should be concerned."
swift,34n28o,Throwingitalla,1 point,Sun May 3 03:07:05 2015 UTC,"Yes, unwinding does not push a new view controller! It literally unwinds to a preloaded viewcontroller previously"
swift,34n28o,orbitstarr,3,Sun May 3 06:07:48 2015 UTC,Have you tried using an unwind segue to go back to the view controller that presented the child?
swift,34n28o,eviltofu,1 point,Sat May 2 20:25:48 2015 UTC,Came here to say this. Unwind segues were made for this.
swift,34p0lv,slabasword,6,Sun May 3 05:51:08 2015 UTC,"You're looking at documentation in objective-c, the reference pages have links at the top for examples in obj-c, swift or both."
swift,34p0lv,noworking,1 point,Sun May 3 05:59:00 2015 UTC,"I get it now, the code on the documentation is in Obj-C and the code I provided was in Swift! Thanks~"
swift,34nwo8,Darth__Nader,6,Sat May 2 22:07:30 2015 UTC,"Pixelmator is pretty powerful and significantly cheaper than Photoshop, though Photoshop and Illustrator are the tops for a reason. You could also look in to PaintCode, but it's a different kind of tool, in that it outputs CoreGraphics code instead of actual images."
swift,34nwo8,lunchboxg4,4,Sat May 2 22:34:30 2015 UTC,"I've used iDraw for both of my games so far. It's cheap and has a great set of features. The big feature that I adore is the automatic @2x & @3x export, I can draw an asset and have it ready to roll for all three screen resolutions in no time."
swift,34nwo8,burritofridays,4,Sat May 2 23:27:49 2015 UTC,"For vector graphics I have switched from Adobe Illustrator to Affinity Designer. Though I missed a couple of features initially, I have no regrets. It's a great tool. $50 one time payment instead of a subscription.   Affinity Photo is currently in (free) Beta, so you might want to check that out too."
swift,34nwo8,fluchtpunkt,3,Sun May 3 07:48:12 2015 UTC,"As well as the already-mentioned Pixelmator, there's Sketch by Bohemian Coding which is more focused on UI design (creating buttons/UI graphics, not good for editing images), but is more expensive than Pixelmator, though significantly cheaper than Photoshop.  Gotta add, Sketch is vector-based and can auto-export @2x and @3x (or any scale) assets for you."
swift,34nwo8,iamsebj,2,Sat May 2 22:53:03 2015 UTC,"GIMP is a decent free way to learn how graphics software works and is very powerful if you know what you're doing.  It's not Mac native or user friendly though, so be prepared for frustration."
swift,34nwo8,JavaNut13,2,Sun May 3 10:54:00 2015 UTC,AffinityDesigner and Pixelmator
swift,34kgl6,Theminonking,1 point,Fri May 1 22:54:27 2015 UTC,That's pretty cool!
swift,34kgl6,Awsthr,1 point,Sat May 2 00:45:31 2015 UTC,hey thanks so much man :)
swift,34kgl6,Dark_Angelas,1 point,Sat May 2 01:32:40 2015 UTC,Congrats on releasing your first product!
swift,34kgl6,destiriser,1 point,Sat May 2 01:16:55 2015 UTC,thanks!
swift,34kgl6,swiftMaster,1 point,Sat May 2 01:32:56 2015 UTC,"Swift was my first language, besides a little bit of C# at a school game development program (which is unfortunately very basic). I found it super easy to learn (as far as programming goes) just using free resources such as raywenderlich."
swift,34kgl6,colinx05,1 point,Sat May 2 01:35:05 2015 UTC,How many hours a day/week did you spend learning for 9 months?
swift,34kgl6,Azr79,2,Sat May 2 02:10:19 2015 UTC,It was on and off really.. sometimes i would spend all day programming and some days i didn't have time at all
swift,34kgl6,beturs,1 point,Sat May 2 02:30:03 2015 UTC,did you have to use objective c?
swift,34kgl6,beturs,1 point,Sat May 2 02:56:01 2015 UTC,"No I did not, but I had to read quite a lot of Objective-C from StackOverflow while looking for answers to my problems! I think if I tried learning it, it wouldn't take too long.."
swift,34kgl6,DakotaK_,1 point,Sat May 2 08:25:10 2015 UTC,Nice work man!
swift,34kgl6,DakotaK_,1 point,Sat May 2 12:38:19 2015 UTC,"Thanks! I saw your app too on this subreddit, It's pretty sweet!"
swift,34kgl6,DakotaK_,1 point,Sat May 2 10:11:53 2015 UTC,"Could you describe in more detail what was your process of learning?  What are in your opinion the best resources to learn programming, and especially iOS programming as a beginner?"
swift,34o8j9,Rockytriton,3,Sun May 3 00:04:20 2015 UTC,Have you tried deleting the derived data ?
swift,34o8j9,RDSWES,0,Sun May 3 01:29:07 2015 UTC,Always delete your derived data between Swift releases.
swift,34o8j9,voidref,3,Sun May 3 03:42:31 2015 UTC,"Apple provides release notes for their ... releases.  If there are things that change that aren't in those notes, then you have a legitimate beef.  If not, then you only have yourself to blame for not reading them.  I'll skim the release notes, but for a real test, I'll install the release on a separate machine and see what problems arise. I don't actually have separate hardware, but I'll do it on a VM.  If you can't afford a license, and can't risk breakage at any cost (yet), then don't upgrade."
swift,34o8j9,shiggie,2,Sun May 3 04:20:50 2015 UTC,You guys should really be visiting the swift Apple developer forum.
swift,34o8j9,voidref,4,Sun May 3 03:43:14 2015 UTC,Grow the fuck up already
swift,34o8j9,downvotefodder,1 point,Sun May 3 03:40:58 2015 UTC,I upgraded to 6.3 and it broke everything because if has the swift 1.2 update. Now I see there is a 6.3.1 update lurking in the app store and prompting me often.....is the 6.3.1 update going to break coelde that works on xcode 6.3.1 and swift 1.2?
swift,34o8j9,mavdev,1 point,Sun May 3 02:35:22 2015 UTC,"In my experience 6.3.1 is great except for a major performance regression when it builds big projects, especially ones that import other Swift frameworks."
swift,34o8j9,HappyOutHere,0,Sun May 3 04:48:51 2015 UTC,"This is the horror of a platform under rapid development.  It is one reason why I don't put a lot of effort into Apple specific development any more.  i want to learn Swift and all, thus viewing this reddit, but I will do it at a pace that will hopefully coincide with a stable release."
swift,34o8j9,spinwizard69,-7,Sun May 3 00:27:55 2015 UTC,"Well, when they call something an official release and not a beta, better quality is expected...  Now that I fixed my compile errors XCode just freezes completely when I start a build.  So i have no idea what is wrong.  I think steve jobs died and all of their quality control did with him as well.. :("
swift,34o8j9,Stephen110,3,Sun May 3 01:25:18 2015 UTC,"Yeahhhh, it's a new programming language.  You should be aware of the risks as an early adopter.  If you don't want to have to deal with breaking changes, objective c is about as stable as it's going to get.  And as others have said, Apple puts all this in their release notes."
swift,34la62,Saul51292,1 point,Sat May 2 03:51:44 2015 UTC,"Hi, when I try to compile it says FXBlurView.h is not found. How can I resolve this?"
swift,34la62,zomgz0mbie,1 point,Mon Jun 15 20:52:02 2015 UTC,"Hey,  Sorry for the late reply. Just been a bit busy recently.  There's a pretty easy fix for this  just open terminal and then cd into the project root directory like this   cd /root/directory/OfProject/ProductSwipe-master\   and then once you're in run   pod install   Once it finishes running, try running the project again"
swift,34la62,zomgz0mbie,1 point,Thu Jun 18 00:09:25 2015 UTC,"Thanks, but I ran into an issue once it ran.  MAVE [INFO] MAVEIDUtils.m:24: Generating new UUID for this app on this device fatal error: unexpectedly found nil while unwrapping an Optional value  Pointed at this line:     var upcomingDeal = UpcomingDealCard(time:addMore(NSDate()), companyLogo: UIImage(named: value)!, image: UIImage(named: key)!)"
swift,34la62,zomgz0mbie,2,Fri Jun 19 16:31:42 2015 UTC,"Sorry about all the troubles. I finished this project a while ago, and we have since decided to nix it from the main app. Haven't really kept up with it. Thanks for finding these issues though! Always good to get these kind of small things out of the way.  I removed the MAVE pod from the project. It shouldnt've been there in the first place, so that should fix that issue with generating a new UUID .  Side note: You should check out MAVE. They're basically an all in one, drop in solution to invites for you app. Very similar to how Uber gives a user $15 for referring a friend.   Anyways, back to the errors. I also found the error with upcomingDeal. Totally my fault, it was a spelling error with one of the test brand names (it needed to be jcrew instead of JCrew)   To get it all working, try pulling the project again and running it. You may need to run pod install like before to make sure FXBlurView and MZTimerLabel are installed, but it should be good to go.  If you run into any other issues, or have any feedback, please comment again!  Thanks again, and hope it works!"
swift,34jae7,BJJDog,1 point,Fri May 1 17:03:55 2015 UTC,"You could have a variable that is incremented each time the button is clicked. You can do this in the function the button is connected to, typically through interface builder specified by @IBAction.  It's not really a large amount of data. It takes up as much memory space as an Integer, or more depending on how many variables you want to use."
swift,34jae7,koalefant,1 point,Fri May 1 17:11:51 2015 UTC,"Well I mean I need to store the time it was clicked and what the button was (say there are 5 different buttons for instance), not just how many times it was clicked. Thats what Im confused about"
swift,34jae7,mistermagicman,1 point,Fri May 1 17:19:30 2015 UTC,"In that case, either use a tuple or create a class that holds an int and a string. Hook each button up to an IBAction. When a button is pressed, the function creates a new instance of the class with the number for the function, and use NSDate to get the current time as a string (lots of tutorials!). Save this data in an array. At the end, you can use all the objects in the array to display each tap. This is still a very small amount of data."
swift,34jae7,mistermagicman,1 point,Fri May 1 17:32:49 2015 UTC,Oh wait this is what mistermagicman thought I wanted to do but what I actually wanted to do was to store the time and the button that was pressed.
swift,34jae7,koalefant,1 point,Fri May 1 17:48:51 2015 UTC,Thanks a lot for the response! I think I can do this.
swift,34jae7,poorlymac,2,Fri May 1 17:54:19 2015 UTC,"If you need more specific help, let me know! I'm pretty well versed in Swift, not so much Obj-C though."
swift,34jae7,koalefant,1 point,Fri May 1 17:49:12 2015 UTC,Thanks! I will probably have some more questions so thanks for offering to help!
swift,34k25f,Lobstersawce,1 point,Fri May 1 20:48:21 2015 UTC,"Not sure if this is what you want, but I did this     override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {         if segue.identifier == ""PopularDetails"" {             let detailsViewController = segue.destinationViewController as! DetailsViewController             let selectedIndexPath = popularTableView.indexPathForSelectedRow()             let shot = shots[selectedIndexPath!.row]             detailsViewController.shot = shot         }     }       then in DetailsViewController i added a variable       var shot: DribbbleData!   and right after viewDidLoad() i put          let url = NSURL(string: shot.thumb)         let data = NSData(contentsOfURL: url!)         let image = UIImage(data: data!)         self.detailsImage.image = image   It loads a different image depending on which was selected.  Just be caseful you have to actually select a row before clikcing ""View More' otherwise the indexpath will be nil when and your shots[indexpath.row] will throw a crash"
swift,34k25f,koalefant,1 point,Fri May 1 22:04:48 2015 UTC,"I'm on mobile so can't look at the source code. A few ideas though:  If the specified segue identifier is not being found in -prepareForSegue:, make sure that you have the correct identifier assigned to the segue in the Storyboard.  If the segue occurs and the data appears to be passed but doesn't appear on destination screen, use a property observer ( i.e. didSet { ... } ) for shots in the destination view controller to ensure a view refresh occurs after the property is set with the passed data.  If you respond with more info, I can probably help narrow it down."
swift,34lchz,Aboud_Masoud,1 point,Sat May 2 04:18:19 2015 UTC,I've got an alarm clock app out on the App Store.  What in particular are you needing help with?
swift,34lchz,Stephen110,1 point,Sat May 2 04:19:24 2015 UTC,I wrote a Swift project tutorial post that can be adapted to work as an alarm: http://blog.agupieware.com/2014/08/tutorial-simple-ios-stopwatch-app-in.html. The tutorial includes a link to the project on GitHub
swift,34jt21,craig5005,1 point,Fri May 1 19:31:40 2015 UTC,"The easiest way of fixing this would be embedding your container view controller in a navigation controller context. That way, there is automatically a navigation bar added, and  automaticallyAdjustsScrollViewInsets = true   starts working its magic. On top of that, it would probably be easiest to just go ahead and use a full-fledge UITableViewController, still embedded in a UINavigationController context. Generally, automaticallyAdjustsScrollViewInsets works for any sort of UIScrollView, therefore for UITableViews, too, because they subclass UIScrollView. The only prerequisite for that is that your view controller's main view be said scrollview.  As to views that are not scrollviews, but simply views, I'm afraid there is no general go-to-fix, except maybe embedding them as subviews of UIScrollViews."
swift,34jt21,conspirator_schlotti,1 point,Fri May 1 22:12:43 2015 UTC,"Hmmm, that didn't seem to work, however I'm not sure I did it correctly.  Basically I created a new project, deleted the view controller and replaced it with a navigation controller.  Created a UITableView file and set it up with some dummy data and the automaticallyAdjustScrollViewInsets = true.  Assigned the class to the table view of the navigation controller.  Ran it and the status bar was still overlapped.  What am I missing.  Straight out of the xcode box and the status bar is messed up."
swift,34jt21,shiggie,1 point,Sat May 2 02:34:12 2015 UTC,"I'll assume you're talking about the navigation bar, since you're saying navigation controller.  Have you set the navigation bar to not be translucent?"
swift,34i2y9,dennis605,2,Fri May 1 10:02:03 2015 UTC,Are you new to programming in general?
swift,34i2y9,segmenter,1 point,Fri May 1 12:39:58 2015 UTC,"No , I've got some experience with php an jquery."
swift,34i2y9,spinwizard69,-1,Sat May 2 17:47:08 2015 UTC,"That is the same thing as saying you have no programming experience at all.  I'd take the suggestion seriously related to reading the Swift Manual.   Maybe also download the Free online course from Stanford on iTunes.    The problem as I see it, is that you need to refine your knowledge about programming in general."
swift,34i2y9,superlopuh,1 point,Sun May 3 00:34:47 2015 UTC,"Your question isn't very clear, so my only advice is to read ""The Swift Programming Language""."
swift,34i2y9,densmo,1 point,Fri May 1 10:09:27 2015 UTC,"I'm pretty new to swift as well, and what I usually do when I am working with a new class is right click on it and ""jump to definition"". This will show you all of its methods, variables and superclasses with descriptions what each of them does.  When I first started doing that I was not only new to swift but also to OOP and MVP in general and working with classes got a whole lot more fun once i started to really understand concepts like subclassing, objects, initializers, delegates, protocols and private vars/functions. If you don't know what those are you should start there because they are all over the place."
swift,34i2y9,koalefant,1 point,Fri May 1 14:19:06 2015 UTC,"Looks like you want to familiarize yourself with some of the cocoa/UIKit libraries.  First thing to ask yourself is what exactly you are looking to achieve. Eg you want a navigation bar that lets your navigate back and forth through different views, so then you can look up 'navigation' in the Xcode documentation (shift + command + 0) which should bring up something like UINavigationController. In there is listed different method calls you can use and a description of what they do.  Another more holistic way is to simply browse through various apple programming guides. They are actually quite good."
swift,34hjqm,linkazoid,2,Fri May 1 05:11:26 2015 UTC,"You're actually pretty close, the main thing you need to do is in the addTarget call you need to let the compiler know that pressed will take an argument.  If you look at the first answer here you'll notice that you can link the sender to the pressed function called."
swift,34hjqm,notquitedrdeath,3,Fri May 1 05:42:43 2015 UTC,"Indeed very close. Change ""pressed"" to ""pressed:"" on the addTarget. The semicolon indicates that pressed takes an argument."
swift,34hjqm,Hansaplast,1 point,Fri May 1 07:23:49 2015 UTC,"Yup, this was the fix. Thanks a lot guys!"
swift,34hjqm,Manlatics,1 point,Fri May 1 22:07:25 2015 UTC,"You can either set a different method to be called for each addTarget or set a tag on the button which just takes an Int value:  var button = UIButton() button.tag = 101   Then in the action switch over the Tag value to find the correct functionality to be called:  switch(sender.tag){     case 101 :         println(""Hello1"")     default :         println(""Hello2"") }"
swift,34fnah,swiftNewbie,1 point,Thu Apr 30 19:16:45 2015 UTC,"You should check out the UIResponder touchesBegan: method. Basically, you implement this method in your UIViewController class and will be called automatically everytime the user presses down on that ViewController.  EDIT: there are also the touchesMoved and touchesEnded methods"
swift,34fnah,yliu1021,1 point,Fri May 1 02:27:57 2015 UTC,Check out this  It will pretty much do exactly what you want. I use it when I generate my app preview videos.
swift,34ge23,xStory_Timex,1 point,Thu Apr 30 22:44:34 2015 UTC,Check out this guide: http://iosdesign.ivomynttinen.com
swift,34ge23,andorbot,1 point,Sat May 2 11:15:22 2015 UTC,"If it helps, Xcode 6 allows the use of vector PDFs in the Images.xcassets file. This means it'll scale to any size at full resolution, using the one file, but this method isn't for everyone, I rarely do it myself"
swift,34eba5,Darth__Nader,5,Thu Apr 30 13:21:24 2015 UTC,"You're going to want to figure out data persistence - the two main ways of doing this are using NSUserDefaults or a database system like core data or Realm.io.  NSUserDefaults: this is used if you want to save user settings, it's very quick and easy but not secure at all - don't use this for important things  Databases: these allow you to save full objects, but the built-in way (Core Data) requires a lot of boilerplate code just to get a basic saving system running.  I highly recommend realm.io instead, as it lets you use your own object models and requires little to no boilerplate code to run.  Use cocoa pods for this."
swift,34eba5,Theteo,1 point,Thu Apr 30 13:35:09 2015 UTC,"Thank you for the reply. I am new to this and still have a lot to learn. Here is what I have done so far. I think I am doing something wrong.  First I added the code below. Then I added writeStreak() to my start new game method. I added a label to my storyboard and used IBOutlet to connect it to the label. However, when I run my app it just says ""Streak"" instead of 0.  let winStreak = ""Streak""  func writeStreak() {     let defaults = NSUserDefaults.standardUserDefaults()     defaults.setInteger(0, forKey: winStreak)  }  func readStreak() {     let defaults = NSUserDefaults.standardUserDefaults()     if let name = defaults.stringForKey(winStreak)     {         println(name)     } }"
swift,34eba5,Tsupaero,3,Thu Apr 30 22:27:02 2015 UTC,Probably the easiest way: NSUserDefaults
swift,34eba5,criosist,3,Thu Apr 30 13:35:34 2015 UTC,"User settings : NSUserDefaults;  Small objects ,User objects, long lasting objects based (groups, categories): NSKeyedArchiver  Large data sets: Core data"
swift,34eba5,benjaminhviid,2,Thu Apr 30 16:24:56 2015 UTC,You can also use Locksmith. With it you can save and load data to/from the iOS keychain. This is probably the best option if you dont want the user to be able to change the stored data.
swift,34eba5,swiftMaster,2,Thu Apr 30 16:25:34 2015 UTC,I agree with you. I used Locksmith in my app and find it to be the better option compared to NSUserDefaults and Core Data in terms of features and complexity.
swift,34eba5,vale93kotor,2,Fri May 1 06:52:41 2015 UTC,Check the documentation for NSUserDefaults
swift,34eba5,twostraws,1 point,Thu Apr 30 18:07:14 2015 UTC,I wrote a tutorial about NSUserDefaults that might help you.
swift,34do37,S2ica,3,Thu Apr 30 08:40:16 2015 UTC,"Have you tried updating to the latest Xcode (6.3.1)? I was getting crashes constantly on 6.3, but upgrading seemed to fix it for me."
swift,34do37,Komputer9,2,Thu Apr 30 08:44:31 2015 UTC,"updating worked! <3  Thx, is the update new, as in today? I reinstalled a couple of times yesterday and it didn't help me"
swift,34do37,Komputer9,1 point,Thu Apr 30 09:17:24 2015 UTC,"About a week, actually! I was getting desperate towards to the end as well before 6.3.1 came out; half of my projects required about ten launches before I could open them and some refused to open at all without crashing. But all seems good now!"
swift,34do37,MarsSpaceship,0,Thu Apr 30 09:28:18 2015 UTC,now the crashes are more updated...
swift,34do37,big_red__man,1 point,Thu Apr 30 08:46:48 2015 UTC,Xcode crashes a lot...
swift,34cy0h,dancemonkey,2,Thu Apr 30 03:37:21 2015 UTC,"You're only filling the first %@.  If you want to use the searchbar text for both params, repeat it in your arguments."
swift,34cy0h,Stephen110,0,Thu Apr 30 03:52:36 2015 UTC,Ahhhhhhhhhhhhhhhh... thank you!
swift,34cve7,koalefant,1 point,Thu Apr 30 03:14:23 2015 UTC,"Are you using a custom split view, or apples UISplitViewController? If it's a custom split view, then you can set a width constraint on a view from the Storyboard/XIB editor."
swift,34cve7,segmenter,1 point,Fri May 1 12:48:51 2015 UTC,"It's a custom split view. I have two width constraint, one specifies maximum width and the other a minimum width.  The view seems to take on the maximum width despite whatever priority settings i give it."
swift,34cve7,segmenter,1 point,Fri May 1 13:42:41 2015 UTC,"Is that the minimum constraint set to greater than or equal to the minimum constant value and the maximum constraint is set to less than or equal to the maximum constant value? If so, and it's still not working then I would need to see your code or a prototype that mimics what you are trying to accomplish along with the issue."
swift,34cve7,segmenter,1 point,Fri May 1 22:07:28 2015 UTC,"I uploaded it.  SplitViewFun Project  Try adjusting the holding priorities, hugging/compression priorities. The view on the left still starts off at its maximum allowed width."
swift,34a9zz,lifehacker25,4,Wed Apr 29 15:28:52 2015 UTC,"I hosted a workshop a little while back where we did exactly this - pulled JSON from an API and showed it in a table view. The recording is here, and I wrote a follow-up article about how to parse JSON in Swift that gives an example of how to parse JSON. Hope this helps!"
swift,34a9zz,jtbrown,3,Wed Apr 29 20:02:40 2015 UTC,"You'll probably need to use a table view controller to build your table and handle your data.  EDIT: I've done this for OSX in swift, not as familiar with iOS"
swift,34a9zz,TheVeganBeast,3,Wed Apr 29 17:31:48 2015 UTC,http://jamesonquave.com/blog/developing-ios-apps-using-swift-tutorial-part-2/ Try following this
swift,34a9zz,vinnydakid,1 point,Wed Apr 29 17:57:35 2015 UTC,"What have you tried so far?  Where are you stuck?  Do you want to use Interface Builder, or all by code?"
swift,34a9zz,Socraz6,1 point,Wed Apr 29 17:47:02 2015 UTC,"This is a really basic aspect of writing code for iOS, and likely an entire app in itself.  You should read up on UITableViewController, the delegate and data source and come back with more specific questions after you've tried a few things."
swift,34a9zz,GlassPilings,1 point,Wed Apr 29 17:52:54 2015 UTC,"There are many great JSON libraries out there for swift right now. I assume what you're pasting is your output from the xcode console. You need a way to save these parameters, and only then can you focus on moving around data to tableviews and cells. I've had a good time using SwiftHTTP for http requests and JSONJoy-Swift for responses."
swift,34a9zz,Humdeee,1 point,Wed Apr 29 19:05:28 2015 UTC,"I wrote a blog post on this question using Alamofire & SwiftyJSON: http://grokswift.com/rest-tableview-in-swift/ Some of the earlier posts discuss how the network calls to get the JSON work ( http://grokswift.com/simple-rest-with-swift/ , http://grokswift.com/strongly-typed-api-calls/ and http://grokswift.com/rest-with-alamofire-swiftyjson/). Jameson Quave's tutorial is pretty good too.  The short version is:   Get the JSON Transform the JSON into an array of Swift objects Give that array of Swift objects to the tableview Set up the tableview to show those Swift objects (any tableview tutorial should show you how to get the cells to show the data from an array of objects)"
swift,34a9zz,ChristinaMltn,1 point,Wed Apr 29 20:38:43 2015 UTC,"If you haven't already, use an NSURLSession to download the data. From there you can use a NSJSONSerialization method to convert the returned NSData to a NSDictionary.   Once you have your data, you should use a UITableViewController just as others here have suggested. Use that data you downloaded to populate the UITableView from the DataSource protocol methods."
swift,34a9zz,DebQB,1 point,Wed Apr 29 23:38:40 2015 UTC,Use NSJSONSerialization on the data. Turns it into a dictionary that you can access based on the keys. Extremely straightforward.
swift,34a9zz,FR_STARMER,1 point,Thu Apr 30 00:26:41 2015 UTC,This is a tutorial that we at aGupieWare wrote that does just that: http://blog.agupieware.com/2014/11/swift-networking-tutorial-index.html
swift,34a6kt,nikola_dev,4,Wed Apr 29 15:02:24 2015 UTC,I'm not sure what the question is. I think the paragraph does a good job explaining what's going on.
swift,34a6kt,Dierdr4,1 point,Wed Apr 29 15:07:00 2015 UTC,"I understand that by initializing an object and assigning a value to one of its properties doesn't actually change the original objects property/variable; what I'm having trouble with is this part:    That code didn’t change Rover’s name; it changed which dog was inside the dog2 shoe‐ box, replacing Rover with Fido   I don't understand what he means by that.   If he made dog2 = dog1 and now dog2.name is Fido, did he not change the name property of dog2 to equal ""Fido""?   What does he mean by ""That code didn't change Rover's name""? Yes it did, if you type in println(dog2.name) it changes from Rover to Fido..."
swift,34a6kt,LJQTKY,3,Wed Apr 29 15:34:20 2015 UTC,"dog1 and dog2 are both pointing to the same dog. Now if you do   dog1.name = ""Pluto""  println(dog2.name) // ""Pluto""  you can see that there is only one Dog behind both variables. If that were not the case, and your code had simply changed each property of dog2 to match the corresponding property in dog1, then dog2.name would still be ""Fido."""
swift,34a6kt,skoll,2,Wed Apr 29 15:56:16 2015 UTC,There are still 2 instances of Dog in the system.  One has the name Fido and the other has the name Rover.  It just so happens that the dog1 reference and the dog2 reference are both now pointing at the instance we originally referred to as dog1 which has the name Fido.  So nothing about the Rover instance ever changed.  We just don't have any references to it any more.  If you change dog1.name or dog2.name you will be replacing Fido with whatever you assign.
swift,34a6kt,Dierdr4,2,Wed Apr 29 15:57:36 2015 UTC,"Ah, I see what you mean.   Yes, the named changed and in this example it looks like that this is all that is happening. But it didn't, the instance of the Dog named ""Rover"" got thrown out of the shoebox ""dog2"" and the instance of the Dog named ""Fido"" was put in the shoebox ""dog2"". dog1 and dog2 now refer to one and the same object/instance."
swift,34a6kt,LJQTKY,1 point,Wed Apr 29 16:01:43 2015 UTC,"Okay that makes a bit more sense. So when you say dog1 = dog2 you're not assigning the properties of dog1 to those of dog2, you're just assigning the instance of dog1 to dog2 so instead of referencing dog1 it references dog2, but the instance of dog1 still exists and retains it's property values, right? Sort of like referencing dog2.dog1.name though obviously that's not actual code.  I think get his concept of shoebox now, it's just hard to put into words."
swift,34a6kt,frogpelt,2,Wed Apr 29 16:13:49 2015 UTC,"That's almost right. Except dog1 points to a Dog, and dog2 points to a Dog, and you happened to point them at the same Dog. Not dog2 points to dog1, which then points to some specific Dog. When you do  dog2 = dog1  dog2 is now set to whichever Dog dog1 was pointing at.  If I were to now point dog1 to a totally brand new Dog, with  dog1 = Dog()  and let's name that brand new dog:  dog1.name = ""Spike""  then dog2.name is still going to be ""Fido.""   edit: I like the name Pluto too much."
swift,34a6kt,jshah111,3,Wed Apr 29 16:24:18 2015 UTC,Let's not bring Pluto into this.
swift,34a6kt,Dierdr4,1 point,Wed Apr 29 16:28:01 2015 UTC,"Got it, thanks so much for the help guys!"
swift,34a6kt,Dierdr4,1 point,Wed Apr 29 16:35:09 2015 UTC,"Once you make dog2 = dog1, is there a way to find ""dog2"" again? Because you lost reference to it, so you couldn't ever free it from memory right?"
swift,34apns,Jrb1x,1 point,Wed Apr 29 17:24:16 2015 UTC,"You could make the firstAndLastNamePredicate a compound predicate composed of the firstNamePredicate and lastNamePredicate:    let firstAndLastNamePredicate = NSCompoundPredicate(type: NSCompoundPredicateType.OrPredicateType, subpredicates: [firstNamePredicate, lastNamePredicate])   But, isn't the firstAndLastNamePredicate redundant anyway since you're already ORing them in the compound predicate?  It's been a while since discreet math for me but wouldn't these be equivalent?  A || B || (A || B) || C    ~   A || B || C"
swift,34apns,clawesome,1 point,Wed Apr 29 22:04:55 2015 UTC,"let firstAndLastNamePredicate = NSCompoundPredicate(type: NSCompoundPredicateType.OrPredicateType, subpredicates: [firstNamePredicate, lastNamePredicate])   Thanks for replying, tried your suggestion, but still no results. Also tried just one predicate for first and last name, still no luck."
swift,34apns,clawesome,1 point,Wed Apr 29 22:25:48 2015 UTC,What does the rest of your code look like and do you get results on any predicate individually?
swift,349rjh,LeftyApps,2,Wed Apr 29 12:51:51 2015 UTC,common guys it's tax time! Someone has to know
swift,349rjh,swiftnoob22,0,Thu Apr 30 02:54:05 2015 UTC,Canada's not real
swift,348xwt,Dreadfrost90,3,Wed Apr 29 06:10:29 2015 UTC,"Lots of options here. As /u/yeskia says, you can do string interpolation, but I thought I'd include some other ways, too.   // String interpolation yourTextField.text = ""\(VAT)"";  // String constructor yourTextField.text = String(VAT);  // toString global function yourTextField.text = toString(VAT);   To do the inverse, String to Int (say you want to take the value a user has typed in), you can do the following:  if let myInt = yourTextField.text.toInt() {     VAT = myInt; } else {     // Show some error to the user. }"
swift,348xwt,Drarok,2,Wed Apr 29 12:04:36 2015 UTC,"If you've got an IBOutlet for the text field, you just need to convert your Int back to a string and set it as the text property on the text field.  Sum.text = ""\(VAT)"""
swift,349x0q,ocortess,0,Wed Apr 29 13:43:49 2015 UTC,Custom UIButton in  with a glowing effect
swift,348lcq,swiftnoob22,2,Wed Apr 29 03:51:49 2015 UTC,"Are you by any chance overwriting your original socket variable with the new instance?  After the second connection is established, can you check that a reference still exists to the first?  This is a bit of a shot in the dark, I've never used this particular framework."
swift,348lcq,Stephen110,1 point,Wed Apr 29 04:29:06 2015 UTC,"to /u/jasamer and /u/Stephen110 i don't think i am over writing it, i have it stored in var Liststucture = [serverlist]() which is a structure with basically the server ip and a socket, it looks like this    struct serverlist {  var Serveraddress = String(); var socket = GCDAsyncSocket?(); }  and when i run println(Liststucture[x].socket?.isDisconnected) println(Liststucture[x].socket?.connectedHost) with x = 0 and x = 1 it shows both as isdisconnected = false and connectedHost with two different ip's"
swift,348lcq,segmenter,1 point,Wed Apr 29 14:02:19 2015 UTC,Is this purely academic or are you actually building something useful? It's been a long time since I've done any socket programming; I remember that it was quite difficult to get this working correctly. I would recommend using a high level framework if you are trying to build something that is stable.
swift,348lcq,jasamer,2,Wed Apr 29 04:10:57 2015 UTC,"GCDAsyncSocket is quite high level as far as socket libraries go. I can recommend it, it's pretty good."
swift,348lcq,jasamer,1 point,Wed Apr 29 07:33:09 2015 UTC,"mainly academic, are there any high level frameworks you can recommend? i have been running in circles over this for a fair bit of time now"
swift,3470fw,hackint0sh96,3,Tue Apr 28 20:21:39 2015 UTC,Never mind... found it. https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585
swift,345nb1,LaythT,3,Tue Apr 28 14:26:02 2015 UTC,fixed it! the constraints for the table view weren't right with regards to auto layout!!
swift,345nb1,vitaminrad,1 point,Tue Apr 28 15:36:58 2015 UTC,Have you set the delegate for the tableview?
swift,345nb1,vitaminrad,1 point,Tue Apr 28 15:17:31 2015 UTC,"Yup. Fairly certain.   I'm only working with the simulator at the moment, havent got a dev licence yet to try on my phone."
swift,344aya,lrobinson2011,2,Tue Apr 28 04:41:10 2015 UTC,It works pretty much the same way. You might need to change a push notification certificate when you sign the app in Xcode but other than that it should be fine
swift,344aya,vuzgoo,1 point,Tue Apr 28 05:05:35 2015 UTC,"I am doing this exact thing quite literally as we speak. The only thing that changes when you go live in the App Store is that Parse will use your production APNS certificate instead of the development sandbox one. As long as those are both uploaded in Parse, everything should be fine."
swift,344aya,blaizedm,1 point,Tue Apr 28 09:16:46 2015 UTC,"Awesome, thanks!"
swift,343qz7,Xioo,5,Tue Apr 28 01:46:42 2015 UTC,"I'm hugely biased, but my own free Swift training course is worth trying: Hacking with Swift. It's project-based, meaning that you build 20  iOS apps and games as you follow along, and it's got a smooth learning curve so that you're always learning something new."
swift,343qz7,twostraws,3,Tue Apr 28 08:09:47 2015 UTC,"I've got one game on the store and another currently awaiting review for its 1.0 release and I'm STILL going through Hacking With Swift because it's a great way to stay sharp. That, and since my games are SpriteKit based, I haven't done a whole lot with UIKit in a while. This stuff is golden."
swift,343qz7,burritofridays,2,Tue Apr 28 12:23:21 2015 UTC,"This looks like another goldmine, can't believe thses are free. Will go through a few soon, thanks"
swift,343qz7,mavdev,2,Tue Apr 28 10:13:41 2015 UTC,"Currently working through this, and it's absolutely fantastic!"
swift,343qz7,vdvdvd,2,Tue Apr 28 16:52:02 2015 UTC,I can't believe that you'd made all of that free. I just started learning Swift-- I'm a total beginner-- and this is like coming across a goldmine. Thank you!
swift,343qz7,twostraws,1 point,Thu Apr 30 21:11:22 2015 UTC,"I'm glad you like it, and I hope it proves useful to you! Please do pass on the word to others – I'm good at coding and good (I hope!) at writing tutorials, but I'm terrible at marketing what I've done :)"
swift,343qz7,codeycoderson,5,Fri May 1 00:26:27 2015 UTC,You should build your own app. Have a persistent problem or something you deal with that an app could solve? You finished a (what I'm sure was a great) full course on iOS. You could do another course but chances are they'll cover a lot of stuff you already know.   It's time to build your own projects and learn a ton from the specific problems you encounter.
swift,343qz7,segmenter,3,Tue Apr 28 04:09:48 2015 UTC,Have you looked at Stanford's University course on iOS development? This is the course I took when I first started getting into iOS development years ago. There projects are a really good source of inspiration.
swift,343qz7,fluchtpunkt,2,Tue Apr 28 03:10:23 2015 UTC,"The universal answer for all these ""what now?"" questions is: Build an app and put it into the store.   You will only learn the basics by following tutorials, courses and books. These things usually stop just before the real world problems start. But once you have the basics you are capable of learning on the go.   Find a problem that relates to yourself and create an app for it. It doesn't have to be unique (more unique than a fart app though), it doesn't have to be complicated. Just find something real that you put out into the world."
swift,343qz7,flCer,2,Tue Apr 28 09:12:11 2015 UTC,"I've been doing Swift since late December. I own and read all of Ray Wenderlich's Swift books, and it took me 3 months to digest it all at 8-10 hours a day with a 2yr university comp science background. I recommend you looking at those if you ever need study materials. They cover a very broad scope of techniques that will really help you understand all the mainstream frameworks.    After reading (and understanding) all their books, I have been exploring frameworks on my own (such as health kit) with relatively little problems."
swift,343qz7,amuka,1 point,Tue Apr 28 21:48:05 2015 UTC,"Thanks for all the great replies. I agree the next step is to start building an app of my own. It gets me excited and terrified, but I will try and see how it goes! haha"
swift,343qz7,dbirider,1 point,Tue Apr 28 12:21:16 2015 UTC,"build your own app, if you want more courses, then Udacity has some good IOS courses to reinforce what yuo already know"
swift,343o6l,iD986,1 point,Tue Apr 28 01:24:21 2015 UTC,"This typically occurs if you have a variable that is an optional and its coming in nil. You cannot compare a variable to nil as a BOOL by checking is Object == (value_that_is_nil) unless you do it directly, albeit I remember in Swift Beta that was not possible. This is really as much help as I could give you from what you have posted."
swift,343o6l,FutureIsMine,1 point,Tue Apr 28 01:45:02 2015 UTC,Is there anyone's information I could give you?
swift,343o6l,FutureIsMine,1 point,Tue Apr 28 02:21:55 2015 UTC,"Post your code on Gist or stackoverflow showing how those objects are declared, and instantiated."
swift,343o6l,HappyOutHere,1 point,Tue Apr 28 02:23:00 2015 UTC,"What does it say in your debug console? It may say something like ""Fatal: encountered nil while unwrapping an optional"""
swift,343o6l,HappyOutHere,1 point,Tue Apr 28 06:49:05 2015 UTC,That is exactly what it says
swift,343o6l,FutureIsMine,4,Tue Apr 28 10:35:03 2015 UTC,"Usually this happens because you used an implicitly unwrapped optional (variable like Int!, String!, etc) which was nil. Implicitly unwrapped optionals need to be non-nil whenever you use them. One of the two views on that line is nil. If you update to the latest Xcode this issue may just go away — newer Swifts are smarter about not unwrapping when you use ==."
swift,343o3a,ajn123,1 point,Tue Apr 28 01:23:35 2015 UTC,"I'm far from a designer but here's some feedback which I hope will be helpful:   The arrows pointing down made sense seeing as you start from the top of the tableview and scroll down. The arrows pointing up on the other hand was somewhat confusing. For example: say you're starting at the Wheatley Church stop and heading to the Brookes University B5 stop. In this case, the arrows are pointing down (because it's in the direction of Wheatley Campus -> Harcourt Hill Campus). You find the Wheatley Church stop somewhere at the top of the tableview and scroll down to find the Brookes University B5 stop, your final destination. Now say your going in the opposite direction (Harcourt Hill Campus -> Wheatley Campus) from the Brookes University B5 stop to the Wheatley Church stop. Since you're just switching the direction of the arrows (from down to up) instead of the stops, the user has to scroll down to the Brookes University B5 stop and then scroll up to the Wheatley Church stop. One solution to this problem is to always keep the arrows pointing down. When the user is going in the direction of Wheatley Campus -> Harcourt Hill Campus, show Wheatley Campus as the first cell all the way down to Harcourt Hill Campus as the last. When going the opposite direction, just switch the order with Harcourt Hill Campus as the first cell. This direction switching stuff kinda leads into my second point.  The page indicators at the bottom do not give enough context. I didn't know the next page contained the opposite directions until you swiped over and explained what was happening. This is important information but it feels like it's hidden. Something you might want to consider is taking the Apple/Google Maps approach. You can switch directions (Wheatley Campus -> Harcourt Hill Campus or Harcourt Hill Campus -> Wheatley Campus) pretty easily with the tap of the button. When you switch directions, just reload the tableview and display the stops as mentioned in the first point. The U1/U1X thing: it seems like the X version of the U1 bus doesn't have any unique stops when compared to the regular version (the stops are always between Wheatley Campus <-> Harcourt Hill Campus). What you can do here is, on your bus stop cell, show both the U1/U1X times if applicable. Example: take the Headington Shops stop at 0705. Both U1 and U1X stop here so you can display the three most relevant times for each (U1 is 0705,0725,0747 and U1X is 0712,0812,0912 which kinda sucks but they are the closest). Another example: the Oxford, Speedwell Street S1 stop. Only the U1 stops there while the U1X skips it so only the U1 times are applicable here. If there are other ""bus flows"" (besides Wheatley Campus <-> Harcourt Hill Campus), you can have a tableview menu where you select your bus flow and pushes on all of the info from above.  The Weekdays/Saturday/Sunday thing: that's also something you might want to explicitly state somewhere on the bus stops view so that the user knows they are viewing weekday times and not weekend times."
swift,343i1a,Synergy807,2,Tue Apr 28 00:35:13 2015 UTC,"This becomes an incredibly hairy situation.  After you use a model, the next time you load entities with that model, if it's different it throws an exception.  Are you wanting to manipulate model structure once?  What's your migration strategy between models, if you are wanting to manipulate the model more than the first time the app is opened?  You could always just use a form of string storage (read and write JSON to a string attribute).  This would allow the contents to be dynamic, it would just require you writing get/set accessors.  What's your use case for dynamic models?  EDIT:  The store coordinator doesn't care if you are manipulating existing entities or adding new ones.  If the momd file version doesn't match what the existing entities were created with, it throws an exception."
swift,343i1a,Stephen110,1 point,Tue Apr 28 03:20:58 2015 UTC,"I didn't want to use string storage because I want the ability to query based on the attributes of the entity.  I actually got it to work though, see this comment"
swift,343i1a,fluchtpunkt,1 point,Tue Apr 28 18:01:47 2015 UTC,"What's the use case for that? I've build a dozen enterprise apps that use Core Data, but I never had to change the model dynamically.   Are you sure a generic entity and a type attribute won't do what you need?"
swift,342oxm,xlogic87,6,Mon Apr 27 20:58:30 2015 UTC,"NSUserDefaults are local to the phone/simulator.  Versions of XCode come with new sims, so this should be expected.   It's equivalent to you going out and getting a new phone.  As far as trying to preserve that, you could dig around the derived data folder (XCode preferences>locations).  Not sure if it actually exists there, but it'd be worth a look."
swift,342oxm,Stephen110,3,Mon Apr 27 23:38:21 2015 UTC,"It's generally accepted that you should not store ""crucial"" information in the user defaults as it can be altered by the user. You may want to consider using the keychain."
swift,342oxm,garfbargle,2,Mon Apr 27 22:47:07 2015 UTC,"As of Xcode 6, finding out your app directory on the simulator has gotten a lot harder.  It's somewhere in ~/Library/Developer/CoreSimulator/Devices/<some unique id>/data/Containers/Data/Application/<unique id>/(the old directory hierarchy)  I think the first unique id is the simulator (iPhone 6, ios 8.3, for example) and the second is your app, but that changes.  So, if you really want to save that information, just grab the file from there, and copy it back next time."
swift,342oxm,shiggie,2,Tue Apr 28 16:41:58 2015 UTC,"I recommend using an XCTestCase to populate test data in your test environments. When you build the app to the sim/your phone, trigger the test to populate the data. This way, the test data creation will be automated and easily repeatable, but won't leak into the production build."
swift,33yljf,dgdosen,6,Sun Apr 26 21:38:06 2015 UTC,Its more likely that languages like Go and Rust will adopt some swift ideas.
swift,33yljf,pat2man,1 point,Sun Apr 26 21:40:29 2015 UTC,I love Go's standard library and it's been great for my small projects -- especially for web stuff. I think it's unlikely though that the Go authors decide to adopt swift-like features any time soon (mainly given their thoughts on generics).
swift,33yljf,weirdasianfaces,14,Mon Apr 27 16:35:42 2015 UTC,I think they'll open source it at WWDC.
swift,33yljf,dazonic,10,Sun Apr 26 22:20:04 2015 UTC,I think I will literally cry if that happens. I love this language!
swift,33yljf,audiblefart,1 point,Mon Apr 27 00:50:22 2015 UTC,same here. Even I will cry if that happens :')
swift,33yljf,avinassh,6,Wed Apr 29 06:21:05 2015 UTC,"The fact that it is not yet open source is, IMO, Swift's single greatest downside. I would love to be able to use it as a generic programming language, but due to its limited availability, this is not possible."
swift,33yljf,SirGlaurung,5,Mon Apr 27 01:22:06 2015 UTC,"Yea I agree, but i don't seem them open saucing it."
swift,33yljf,devsquid,3,Mon Apr 27 01:30:00 2015 UTC,"I'm gonna be one of those guys who copypastes their own comment, I'm too busy to write it all again haha sorry..   Apple knows devs loves Swift and want to write it everywhere. Even the first line of the book says it's designed to be able to write operating systems. The more I think about it, the more I'm willing to bet on it eventually being open sourced.   Picture this. Federeghi on stage talking about how the initial release went down, how popular Swift is, he'll source this article saying it's the most loved programming language. Then he'll say how they've got a lot of feedback from devs wishing they could write everything in Swift! Then announce that it's open source today. Crowd goes nuts, Twitter goes nuts, hacker news goes nuts, even /r/programming's consensus is that they hate Apple but ""have to commend them for doing this"".   Still unrealistic?"
swift,33yljf,dazonic,1 point,Mon Apr 27 06:58:55 2015 UTC,Yes I would still be surprised. All of those sites will go nuts no matter what happens at wwdc... Open saucing swifts compiler doesn't mean people can suddenly use it for everything other than what the original sauces compiler was purposed for.
swift,33yljf,devsquid,1 point,Mon Apr 27 11:16:22 2015 UTC,"The first chapter of the ebook tho.....   It’s designed to scale from “hello, world” to an entire operating system."
swift,33yljf,dazonic,0,Mon Apr 27 11:21:19 2015 UTC,"lol if the language gets picked up for other things than Apple's specific software or or not, that line's existence has nothing to do with it. I hate to say it as well, Swift is a nice language, but the need really isn't there. Its not like Java, C++ or Python are truly bad languages. They are great languages, I use them all the time. I like each of them, even after using Swift :)"
swift,33yljf,devsquid,1 point,Mon Apr 27 11:36:02 2015 UTC,"Its not like Java ... [is a] truly bad language...   Yes, it is. Well, not the language necessarily, but the JVM is truly bad.  (Edit just fixed formatting)"
swift,33yljf,rhysmorgan,3,Mon Apr 27 18:48:37 2015 UTC,"Rofl jvm is one amazing piece of technology, what are you even talking about?"
swift,33yljf,devsquid,2,Mon Apr 27 23:19:13 2015 UTC,Java is a hack nuff said.
swift,33yljf,FutureIsMine,1 point,Thu Apr 30 06:00:21 2015 UTC,"Oh god, that would be beautiful."
swift,33yljf,rhysmorgan,1 point,Mon Apr 27 18:46:29 2015 UTC,Hope that happens :')
swift,33yljf,avinassh,4,Wed Apr 29 06:21:54 2015 UTC,"According to Chris Lattner, the Swift developers would love to open source it, but they simply haven't had time to talk about it yet. That post was almost a year ago – now that Swift 1.2 has been released, things may have settled down enough for them to be able to discuss open sourcing."
swift,33yljf,SirGlaurung,-2,Mon Apr 27 01:49:52 2015 UTC,"hmmm maybe, but discussing open saucing it doesn't mean they will. Man that would be awesome. I hope they don't do what ms is doing and just open sauce one small aspect of one small part with a very ambitious licensing deal. I would really love to start writing more code in Swift"
swift,33yljf,devsquid,1 point,Mon Apr 27 03:25:14 2015 UTC,"I hope they don't do what ms is doing and just open sauce one small aspect of one small part with a very ambitious licensing deal   They open sourced the C# & VB compiler platform, the runtime, their building engine, and a subset of the standard library, all under MIT licenses, with promises to not sue for patent infringement for the covered code. I'd say this is pretty significant, dude."
swift,33yljf,LuizZak,1 point,Tue Apr 28 00:06:00 2015 UTC,It is too early for to worry about Swift going open source.   Let Apple stabilize the language and libraries first.
swift,33yljf,spinwizard69,1 point,Tue Apr 28 06:42:24 2015 UTC,As much as I hate Microsoft and love Apple... They HAVE to do this to keep up. MS has been making some big changes lately for the first time in many many years.
swift,33yljf,crewshin,2,Mon Apr 27 00:41:58 2015 UTC,Keep up with...what?
swift,33yljf,mipadi,1 point,Mon Apr 27 17:13:51 2015 UTC,Microsoft has been making some very bold and smart moves lately with open sourcing (and cross platforming) things. I really feel Apple needs to step up their game and do the same with Swift.   Its 2015 and this is the future.
swift,33yljf,crewshin,2,Mon Apr 27 18:23:07 2015 UTC,Why does it matter if the development language is open-source and cross-platform or not?
swift,33yljf,mipadi,1 point,Mon Apr 27 21:04:25 2015 UTC,"If the language is cross-platform you can unify one code base for multiple devices, that reduces the amount of work to accomplish things like mobile & desktop apps by a lot. That's not accounting for the fact that you'd probably need to deal with a library for each platform, though.  Making it open source helps maturing it because multiple programmers working on different stuff can contribute to improve certain use cases that they face, and more devs means more surface area to cover (also more noise, though), plus, if the company that owns the tech decides to give up on it at least the community can continue applying patches to fix bugs and stuff."
swift,33yljf,LuizZak,4,Tue Apr 28 00:22:06 2015 UTC,Can someone explain what exactly the difference would be if Swift was open sourced?
swift,33yljf,Lonestar93,1 point,Mon Apr 27 06:24:34 2015 UTC,"Third parties would be able to modify the compiler to run on different platforms, which would allow Swift to be used as a general purpose language instead of being restricted to Apple products."
swift,33yljf,lAmTheOneWhoKnocks,-7,Mon Apr 27 06:41:57 2015 UTC,"But it would require a set of people to champion a cause for something people don't really need. Its not like other languages are truly horrible or do their jobs poorly, its just Swift is such an improvement over ObjC(sorry if ur an ObjC Fanboy) which is why its soooooooooooo great."
swift,33yljf,devsquid,3,Mon Apr 27 11:39:13 2015 UTC,"Is that not how progress happens? Rarely is anything truly horrible, yet programming languages are still evolving. As far as I know, Swift is the only fast strongly typed language that maintains the ease of use that Python has. I think that on its own is enough to get people trying to broaden its use."
swift,33yljf,lAmTheOneWhoKnocks,1 point,Mon Apr 27 16:00:45 2015 UTC,"You're missing the point.  Btw, give me 1 point why swift qualifies for not 11 but 12 full o's in sooooo much better than ObjC."
swift,33yljf,crewshin,3,Thu May 28 15:59:29 2015 UTC,My guess? Swift will stay closed source. And Apple will complement CloudKit with the ability to run code on their server.
swift,33yljf,fluchtpunkt,2,Tue Apr 28 09:20:30 2015 UTC,I fully expect CloudKit to someday allow for writing custom APIs in Swift. Just like Parse.com does with Cloud Code and JavaScript. This would be a good start.
swift,33yljf,audiblefart,3,Wed Apr 29 07:36:33 2015 UTC,I would love to see them open source it. I just don't think it will happen but I'm keeping my fingers crossed.
swift,33yljf,NoticeDev,1 point,Sun Apr 26 22:40:50 2015 UTC,"They open sourced ResearchKit. I know this is a relatively small library and there are other factors at play, but I think this could be the beginning of bigger things being open sourced."
swift,33yljf,OnlyForF1,2,Mon Apr 27 07:59:14 2015 UTC,"There is definitely precedent for apple open-sourcing things. The osx kernel is open source (although they probably bad to do this since the two kernels it's derived form are both open source). GCD is also open, and Linux and windows ports exist. LLVM and clang are, iirc, mostly open source because their creator wouldn't agree to work for apple otherwise. Their creator is Chris Lattner who is also the guy who came up with Swift.V"
swift,33yljf,Ahti333,1 point,Mon Apr 27 18:22:18 2015 UTC,"Apple has released the source code for a lot of things, but it doesn't necessarily mean Swift will be released openly."
swift,33yljf,mipadi,1 point,Mon Apr 27 17:14:45 2015 UTC,I really hope so.
swift,33yljf,NoticeDev,1 point,Mon Apr 27 22:16:13 2015 UTC,bodda bing! Call me Karnack.
swift,33yljf,slow_churn,0,Mon Jun 8 20:48:06 2015 UTC,My guess is the native watch SDK will be exclusively Swift and that Watch OS is also pure Swift.
swift,340484,xStory_Timex,1 point,Mon Apr 27 06:12:19 2015 UTC,You can check the labels position in scrollViewDidScroll
swift,340484,aegarn,1 point,Mon Apr 27 13:29:03 2015 UTC,How?
swift,340484,aegarn,2,Mon Apr 27 15:47:04 2015 UTC,"Have a reference to the label. In scrollViewDidScroll, check the y position of the label to see if it's below the navigation bar."
swift,340484,somebunnny,1 point,Mon Apr 27 17:11:12 2015 UTC,"Is it a specific label in the cell view or the cell itself? Do you want it when the view first touches or after it is completely obscured?  This is a quick thought. May be better ways.   Implement the scroll view delegate scroll view did scroll.   On each message, You can get the visible cells.   The first visible cell is the cell touching the top. Get the label within it  If you want it to change only when it is fully obscured, then get the index of the top cell and get the cell before it, if there is one.   This is not a swift question."
swift,340484,Ceribis,0,Mon Apr 27 16:45:42 2015 UTC,If it's setup correctly you can just set self.title on the view controller and it should happen automatically.
swift,33zgf8,dancemonkey,1 point,Mon Apr 27 02:06:24 2015 UTC,"Good stuff, just the kind of arcane wizardly knowledge I was looking for to help me start figuring this out.   I suspect you're in the ballpark with this since it doesn't work every time, but I can pretty reliably make it work if I poke around a bit with Instruments.   Thank you!"
swift,33zgf8,AxeEffect3890,3,Mon Apr 27 08:20:39 2015 UTC,"Did you have any IBObjects in the storyboard that you had referenced in the code (IBOutlet or IBAction) and you later deleted the code and/or object? If you click on ""view controller"" while holding the option key, look for anything with a caution symbol and delete it. This solved it for me a while back."
swift,33zgf8,zmian,1 point,Mon Apr 27 14:12:13 2015 UTC,"Thanks, I'll check that out as well. Haven't looked at the code yet since posting this question (stuck at my ""real job""), but I'll add this suggestion to the list."
swift,33zgf8,SUNBUR57,1 point,Mon Apr 27 20:54:18 2015 UTC,"I had a similar problem the other day. After much trial and error found that I've added a new folder to the project with ""Add as reference"" instead of ""add as a group"". That folder was showing as blue color. Did you add a new file with reference? If so, remove it and add it again and make sure ""add as a reference"" is unchecked."
swift,33zcwr,ranci,1 point,Mon Apr 27 01:33:47 2015 UTC,This is a good question i'd like to see an answer to this as well. My guess is that the implementation of generics in swift is more along the lines of how Java generics work other then C++ templates.
swift,33zcwr,lucidLurker89,1 point,Mon Apr 27 02:02:19 2015 UTC,Sometimes.  https://developer.apple.com/swift/blog/?id=27
swift,33xlu1,AxeEffect3890,1 point,Sun Apr 26 16:46:47 2015 UTC,/r/iOSProgramming for the lazy.
swift,33z8q4,iD986,0,Mon Apr 27 00:57:42 2015 UTC,"""cell"" is an optional here.  You need to familiar yourself with the pattern:  if let cell = tableView...{   ...   return cell } return nil"
swift,33z8q4,datafatmunger,1 point,Mon Apr 27 06:49:22 2015 UTC,Thank you!
swift,33xmtu,tjatjenahej,2,Sun Apr 26 16:55:36 2015 UTC,"I would try logging in the user, regardless of their email verification status. Then you can do:  if (ParseUser.getCurrentUser().emailVerified == false) { // Handle what you want to do when a non-verified user trys to log in } else { // Log them in }"
swift,33xmtu,_karmawhore,1 point,Sun Apr 26 18:25:44 2015 UTC,"Ok, thanks I will try that. I still need to figure out a way to restrict emails to only on provider.  Edit. I still don't know how to check the state of the email verification field. you can't just do PFUser.currentUser().emailVerified."
swift,33xmtu,_karmawhore,1 point,Sun Apr 26 18:59:51 2015 UTC,"PFUser.currentUser().getBoolean(""emailVerified"") == false"
swift,33xmtu,_karmawhore,1 point,Mon Apr 27 20:22:27 2015 UTC,"""Cannot invoke getBoolean with argument type (string)"" I don't think getBoolean is a function in swift. This is really strange, once you type ""currentUser()"" then hit the dot, i can access every attribute of the user table (The object ID, their username, password, email address, date they created the account etc), but not the emailVerified field."
swift,33xj2j,swiftingfirsttime,2,Sun Apr 26 16:22:45 2015 UTC,"Create a new swift project, add an Obj-C class to it. Then go into project settings and copy the bridging header path into your old project's setting. The path should be the relative one -- like $(PROJECTSRC)/... instead of the absolute one."
swift,33xj2j,fubarx,1 point,Sun Apr 26 16:32:37 2015 UTC,I deleted the Objective-c Bridging Header from the build settings and the code runs now but I get two warnings nowl  d: warning: directory not found for option '-F/Users/welch/Downloads/IOS-InApp'  ld: warning: directory not found for option '-FSDK-InApp-2.4.0'
swift,33xj2j,Stephen110,1 point,Sun Apr 26 16:29:15 2015 UTC,"Search for the path in your project build settings, and remove/adjust where needed."
swift,33xj2j,somebunnny,1 point,Sun Apr 26 22:06:16 2015 UTC,Do you use source control?
swift,33wzly,kaswiftoooo,2,Sun Apr 26 13:00:40 2015 UTC,"It'll be easier if you could post a screenshot of your core data object graph.  One other thing. This isn't a must but do rename your attributes in pascal case. (ex: totalItemsBorrowing, personRequesting) Because NSMnagaedObject subclasses are created from these entities and these attributes will be the properties. And the naming convention you're using is a no-no in iOS. One thing you gotta understand is that Core Data isn't exactly a database. It's more of a objects map."
swift,33wzly,isurujn,1 point,Sun Apr 26 14:15:06 2015 UTC,"Thanks!  Here is the ""object graph"" (I think):  http://tinypic.com/r/5b2u8/8  And once I understand Core Data better, I will be re-writing it with everything I learn, so I will use a better naming scheme next time."
swift,33wzly,dgdosen,1 point,Sun Apr 26 23:28:30 2015 UTC,"One thing - I'd  say your ""total_times_borrowing"" field shouldn't be stored in core data.  It should be easily calculated. - In fact, every relationship will have a ""count"" property extracted for you personInstance.requests.count"
swift,33w2ya,donaldduckdraper,19,Sun Apr 26 04:34:25 2015 UTC,"I've already shipped two Swift apps. It's ready for commercial use. But the difference isn't Swift vs. Obj-C.   It's how long does it take to master CocoaTouch.  If you don't know any Cocoa and need to learn the ins and outs of iOS development there are a lot more resources out there for Obj-C. If starting from scratch I suggest going with Obj-C and Cocoa.   Then when familiar, switch over to Swift and you'll feel like you were turbo-charged."
swift,33w2ya,fubarx,6,Sun Apr 26 04:47:48 2015 UTC,"This is absolutely correct. Not only have I shipped an app in Swift as well, but the company I'm interning at this summer is starting all new projects in Swift. Several large companies have also started using Swift in production (Square, Airbnb, etc.)"
swift,33w2ya,mistermagicman,3,Sun Apr 26 04:56:15 2015 UTC,"I work for a startup called Bryx. We've been shipping Swift since Xcode 6 was released out of beta. It's definitely production-ready, and I would highly recommend it over Objective-C."
swift,33w2ya,lyinsteve,3,Sun Apr 26 05:47:43 2015 UTC,Do you think going through Stanford's iOS 8 development lecture series will give me a  good understanding of Cocoa Touch?
swift,33w2ya,fubarx,3,Sun Apr 26 07:08:54 2015 UTC,"Yes. Objective-C courses teach you how to structure your code, call methods, etc. But you'll need to learn things like how to layout the interface, handle user input, networking, storage, media, etc. That's all CocoaTouch.  Once you're familiar enough then it's a short jog to Swift and how it calls the very same Cocoa methods."
swift,33w2ya,xxxabc123,2,Sun Apr 26 11:13:31 2015 UTC,"Stanford's iOS is the best online course for this subject. I took it when it was still in Objective-C, not new Swift version, and it was pretty good. The teacher develops iOS apps during the lectures including a Flickr app so I would say it's pretty useful"
swift,33w2ya,dgdosen,2,Sun Apr 26 18:27:02 2015 UTC,"Yes - but most importantly, this course is great on    Swift basics XCode development (storyboard content is great) A bit of Cocoa.  Lot's left for you to find out about elsewhere."
swift,33w2ya,twostraws,2,Sun Apr 26 21:34:18 2015 UTC,"At the risk of sounding like a (massively biased!) broken record, you could try my own Swift tutorials: Hacking with Swift. They are free, but more importantly they are project-based so you learn all about Cocoa Touch and Swift while you're making real apps."
swift,33w2ya,FutureIsMine,2,Tue Apr 28 08:13:56 2015 UTC,Start using Swift NOW! Swift is a very powerful language and once you take the taps off of it you will have a more modern language with which to work with.
swift,33w2ya,ASnugglyBear,1 point,Sun Apr 26 08:12:26 2015 UTC,"Swift isn't on par with other hybrid languages like lisp or scala yet, but it works as a replacement for objective c for a lot of use cases  It's a bit painful around C apis, but other than that, you're probably fine"
swift,33w2ya,LeftyApps,1 point,Sun Apr 26 13:04:33 2015 UTC,"My background is ActionScript and front end stuff (JS, html5, CSS, jquery, and all the basics) and never worked on a ""software"" so to speak, until I picked up Swift!  I didn't touch iOS development because of Obj-C.  I don't doubt it's a very mature and capable language, but it wasn't for me.  I tried to learn it several times, and I always ended up being rather discouraged by not really getting it.  I already built an app in swift though, I will be submitting it to AppStore once my developer's account is ready. I had to send a tax form to apple and am waiting to be approved at the moment.  Anyhow, I recommend using Swift NOW."
swift,33w2ya,c8220,1 point,Sun Apr 26 14:00:10 2015 UTC,"This. I've taken classes in which C++ was the main focus. I once made an app for Windows Phone in C#. I've used HTML and Python. I've tried to learn Java, C, and Objective-C, and I even gave Go a day or two. Granted, I'm not a professional. I had a basic working knowledge of C++ and I can't remember most of it, but I really like Swift. There's a lot less code to remember. It just seems easier to me."
swift,33w2ya,Hawk_Irontusk,1 point,Sun Apr 26 15:37:58 2015 UTC,"A lot of people find Swift easier to transition to because it has a 'modern' syntax and shares a lot of features with other popular languages. As others have said, you could start right now in Swift and be fine, but there are still a few disadvantages I can think of.   Stability. Fortunately Swift is past the point of crashing Xcode every time you make a typo, but there are still plenty of bugs. If you're doing pretty standard stuff it's not likely you'll run into them. The tools were built for Objective-C. Debugging, refactoring and autocompletion work better with Obj-C. I don't know when Swift will stop making breaking changes.  You're going to have to have to know Objective-C to really know Swift. Swift may not carry the ""baggage of C"" like Objective-C, instead it carries the baggage of Objective-C. There are all sorts of quirks in the language to make it compatitble with the objc runtime. Not to mention all of Apple's and many third party frameworks you'll use are written in Objective-C.   All of those will improve over time and there are some disadvantages to Objective-C too. It depends what you want out of Swift. If you want to make a few apps as a hobby, then just pick your favorite. If you're looking for a OSX/iOS developing career, you should probably become familiar with both. Even if Apple plans to deprecate Objective-C, it will probably take a decade before it is really uncommon.  Also, do you have any other programing experience or was Objective-C your first attempt? If not, I'd recommend learning basic programming first (try Java), then jumping in to iOS development."
swift,33ug8v,elkranio,2,Sat Apr 25 19:06:02 2015 UTC,"What resources did you use to learn from? I'm still learning and I'd like to learn how to build games even if it's not my primary goal, just so I can have a more complete understanding.  Any advice on where to learn and where to get started?"
swift,33ug8v,nextwiggin4,4,Sat Apr 25 19:36:34 2015 UTC,"I just googled stuff like ""swift tutorial"", ""how to make game in swift"". And after I've got used to basics I just annoyed people on stackoverflow :)"
swift,33ug8v,bigirishbreakfast,2,Sat Apr 25 19:46:57 2015 UTC,"Hey that's great, as a beginner it's very interesting, I will take a look at your game/code. A few questions   How did you find the submission process, is the criteria tough and did you have to submit a few iterations before it was approved? Did you consider using copyright free art instead of having it commissioned Do you know will apple only accept the latest version of Xcode or an older version? worried about updating mine and finding errors   Thanks for the post"
swift,33ug8v,bigirishbreakfast,3,Sat Apr 25 19:39:20 2015 UTC,"Submission process was kinda easy I think. I had no problems at all but I was nervous because I didn't know what to expect.  Yes I was going to use copyright free art, but I got lucky in the end. I used an older version of xcode and there were no problems. If you can compile your code to a working build then you shouldn't have any problems either."
swift,33ug8v,swiftMaster,2,Sat Apr 25 19:45:47 2015 UTC,"Thanks thats great, i'll download your game and rate it once I get somewhere with decent wifi !"
swift,33ug8v,LinkHelperBot,2,Sat Apr 25 19:51:32 2015 UTC,Very nice! It looked like a pretty huge project overall. Congratulations on finishing it up!
swift,33wdoh,lifehacker25,3,Sun Apr 26 06:59:55 2015 UTC,Are the HTTP GET/POST  methods same as its in php.   Yep.   The methodology can be applied to iOS which is used in PHP ?   Yep.
swift,33v84h,FerCrerker,6,Sat Apr 25 23:13:50 2015 UTC,"You could convert the strings to lowercase before evaluating it.  userResponse = ""HeLLo"" userResponse = userResponse.lowercaseString  // userResponse is now ""hello""    if userResponse == ""hello"" || userResponse = ""sup""     // would evaluate to true   Would something like this be applicable?"
swift,33v84h,Lars34,3,Sat Apr 25 23:27:55 2015 UTC,That works. Thanks. (This isn't for anything important... I'm just trying stuff out)
swift,33v84h,koalefant,3,Sat Apr 25 23:38:21 2015 UTC,Learning things is fun!
swift,33v84h,koalefant,2,Sun Apr 26 09:23:46 2015 UTC,"The more comprehensive function to do this would be:  ""hello"".compare(""Hello"", options: .CaseInsensitiveSearch, range: nil, locale: nil) == NSComparisonResult.OrderedSame {     *your code* }   You can also add more comparison options like ignoring diacritic marks i.e. 'é' is same as 'e' etc"
swift,33ttrx,avinassh,5,Sat Apr 25 15:56:21 2015 UTC,"Unless you are doing low level network diagnostics or hacking, you should use Bonjour instead of brute forcing and spamming the network. Bonjour was designed to discover advertised services available on your network. But Bonjour (correctly) wants you to think as services and not IP addresses because IP addresses can change at any moment and a computer hosting a service can have multiple IP addresses which obfuscates things.  Look at the NSNetService family of APIs.  Otherwise, if you are doing low level hacking things, then you aren't going to find a solution that is reliable and easy. And you'll probably want to combine multiple techniques including arp and maybe even Bonjour (look for all advertised services and resolve their IP addresses...look up the utility Bonjour Browser)."
swift,33ttrx,ewmailing,1 point,Sat Apr 25 19:05:56 2015 UTC,Thank you very much! That should give me some head start
swift,33t16n,thistimeillkeepit,2,Sat Apr 25 09:44:22 2015 UTC,"Easiest way would be to put all the data in a JSON string then parse it into an array of dictionaries. Some of its elements would then contain arrays of more dictionaries. For example:  [  { ""title"": ""Book title"",   ""chapters"" : [        ""title"" : ""Chapter 1"",        ""pages"": [              ""number"": ""A-1"",              ....        ],        ...     ],     ...   }, { ""title"": ""Second book"",    ... }, .... ]  (I'm on an iPad. Formatting is likely to be screwed up but you get the idea).  Now in your class define three integer properties: currentbookindex, currentchapterindex, and currentpageindex. Preset them with 0, 0, and 0 so the control starts with values from first title, first chapter of that book, and the first page of that chapter.  In the pickerview delegate method you return 3 components. In the callback that asks for the number of items you index into your json structure and look up the count of objects at each level. For component 0 it would be the top level of the json array. Then you select the currentbookindex, the value is a dictionary. You extract the 'title' value and return it for the label and the count of chapters array for number of components for wheel 1 (second wheel).  If it's the second component (chapters) you get the Nth element of the top array, return how many ""chapters"" elements it has and for each one return the value of the ""title"" key. For the third one you take index and get the currently selected chapter, then the count of pages array elements and for each one return the value of the page name (or number).  The trick is to not hardcode the returned values in the delegate method but to always go off the currentselected property for that component. That way when the user selects a different value, all you have to do is register the currentselection for that wheel and do a refresh   Protip: if currentbookindex changes, force currentchapterindex and currentpageindex to 0. And if currentchapterindex changes force currentpageindex to 0. This way if user picks a different book, the chapter and page always snap back to the top. If the only change the chapter the book stays the same but the page snaps to the top. And if they pick a different page it all stays as it should.  The only thing remaining is in the didSelect handler if you get component 0 you store it in the selectedbookindex (and 0 out the chapter and page index), if it's 1 save the index as currentchapterindex (and 0 out the currentpageindex), and if 2 save it as the currentpageindex. Then force a reload and the delegate callbacks will automatically refresh the wheels for you.  If you can't put the data in a JSON, you will have to manually construct this sort of nested arrays and key-values. That data structure is key to making efficient multi-level pickers.   This will also work with images in the picker. Just return a UIImageview instead of a text label. Your JSON can have the name of an image file in your bundle and you just have to load it up and stuff it into an imageview's image before returning it. Suggest you cache the imageviews and images for better performance.  Best of luck,"
swift,33t16n,fubarx,1 point,Sat Apr 25 16:02:41 2015 UTC,"Wow, thank you for such an awesome answer.  I'll give it a shot!"
swift,33t3s7,ninokierulf,2,Sat Apr 25 10:32:50 2015 UTC,"I use technologies sparingly. I'd start swift, make a library of stateless functions (not classes) for the back end, test them, a library for persistence, test it, UIs, possibly using reactive cocoa, then I'd start working!  If I had to make any objective c calls to the swift functions, I'd make a forwarding class in swift that could do it  I'd probably use segment.com for analytics forwarding, and crittercism or fabric for crashes"
swift,33t3s7,ASnugglyBear,1 point,Sat Apr 25 13:52:58 2015 UTC,"A friend of mine developed a Futures library for Swift which you can find on Github.  https://github.com/JARinteractive/ESCFutures If you don't know, Futures allow you to make asynchronous method calls and return an object (a promise) immediately and be notified when the promise is fulfilled. If you've ever worked in objective c you'll know that sometimes you can get into nested block hell. This helps alleviate that and also makes it easier to test."
swift,33pb16,superlopuh,2,Fri Apr 24 12:00:14 2015 UTC,I love everything about this. It's so nice seeing people take Swift's functional features to their fullest!  Have you ever tried Haskell?
swift,33pb16,lyinsteve,2,Fri Apr 24 12:57:50 2015 UTC,"Thank you!  I really like the functional bits in Swift, and I feel like I appreciate them more with the support of the procedural backing of the language.  My experience with functional programming is only in ML, which I enjoyed less than Swift.  I'm planning to try Haskell at some point, although I suspect it will be more of an academic exercise as opposed to something very practical :)"
swift,33pb16,lyinsteve,3,Fri Apr 24 13:17:42 2015 UTC,"Haskell is definitely more on the mathematical side of computing, at least from a structure perspective. But Haskell allows you to do some very cool, very practical things like parsing text incredibly simply using parser combinators or defining structured RESTful APIs with little more than a few type declarations.  I'm a fan so far!"
swift,33rokb,Larryn1030,1 point,Fri Apr 24 23:45:35 2015 UTC,Are you trying to add your logo to the navigation bar? You can add a UIImage to the NavigationItem's titleView to accomplish that. (Docs here)[https://developer.apple.com/library/ios/documentation/UIKit/Reference/UINavigationItem_Class/index.html#//apple_ref/occ/instp/UINavigationItem/titleView]
swift,33r92y,StudioSevenDesigns,7,Fri Apr 24 21:27:05 2015 UTC,let random = Double(arc4random())/Double(UInt32.max) + 1
swift,33r92y,SirGlaurung,1 point,Fri Apr 24 21:35:20 2015 UTC,Thank you so much. I think I actually understand why your solution works. The only thing I'm not clear on is why UInt32.max gives numbers only lower than 1.
swift,33r92y,Dilligaf_Bazinga,4,Fri Apr 24 21:56:04 2015 UTC,This gives a number lower than 1 because you are dividing a number by the most it could possibly be as a 32 bit number.   This would be like dividing 78 cents by $1.00. You can never get above $1 so your result will always be lower than 1  78/100 = .78 99/100 = .99   You get the picture
swift,33r92y,aldonius,1 point,Fri Apr 24 22:09:09 2015 UTC,"Also, on many systems the 'default' random number generator only gives results between 0 and 1 - from there, whatever transform is necessary can be applied."
swift,33q56a,AxeEffect3890,1 point,Fri Apr 24 16:19:48 2015 UTC,Im an indie developer and I use twitter and email blogs that review apps for free. I found this list of the top review sites if you want to look at  it. Follow me on twitter https://twitter.com/JARAPPS5  https://docs.google.com/spreadsheet/ccc?key=0AvcBksh1GeWHdHQ1ek1Uc3JUNk5oLWVCdUxoNV9oRFE&usp=sharing#gid=0
swift,33r4rk,Ah_Real_Monsterz,3,Fri Apr 24 20:51:08 2015 UTC,The iTunesU Stanford course with Paul Hegarty is excellent.
swift,33r4rk,Mr_Knott,2,Sat Apr 25 08:30:54 2015 UTC,The Swift Programming Language by Apple is the best place to start (or reference). I use it everyday.
swift,33r4rk,tcdb28,1 point,Sun May 3 21:21:27 2015 UTC,One of the best sites that I can recommend to anyone would be Ray Wenderlich's website. Most of the written tutorials are free and very useful. And Ray and the team really know their stuff. Go check it out and see if you like it.
swift,33r4rk,Antoledo,1 point,Sat Apr 25 21:25:17 2015 UTC,"I'm just learning Swift as well and recently wrote an article on how I got started.  It does mention Udacity and Treehouse courses, as I've done those too.  However, it also lists podcasts, blogs, newsletters, etc... I think you'll find it helpful.  http://seanallen.co/7-steps-to-begin-learning-swift"
swift,33of86,StudioSevenDesigns,1 point,Fri Apr 24 04:31:48 2015 UTC,"Can I suggest you take a look at this tutorial? I just worked through it and the funny thing is that it covers adding sprites with touches and uses random number generation that you can probably adapt to your needs.   http://www.hackingwithswift.com/read/11/overview  Working through and trying to understand this would probably serve you better than someone handing you the answer to your immediate problem, at least it always has for me. This is project 11 in the series but you can probably get through it, you seem like you've already tinkered around a bit and know your way around already.  There are files you need to download and import into your project that contain the sprites, as well as the file that has the random number generator. Read the Overview and be sure to download those files."
swift,33of86,dancemonkey,1 point,Fri Apr 24 04:51:17 2015 UTC,"What do you mean with ""outside of the view"" ?  EDIT: Oh, I get it. This is no problem. If your youtRootNode is taking the WHOLE screen, then  spawner.position coordinates must be randomly calculated so they are NOT inside the youtRootNode frame.  This would be the most easy/clumsy/simple way:  1) Add one root SKNode (SKShapeNode or SKSpriteNode) with view:SKView dimensions (it's much better to make whole game-flow in some logical-tree sequence)  self.addChild(youtRootNode)   Then call in a loop  spawnNode(youtRootNode)   2) Make a function to spawn SKSpriteNodes (in my case SKShapeNodes)  // Code below is just a pseudo-code ok... private func spawnNode(youtRootNode:SKNode) {     // Just a quick example for a SKShapeNode     let spawnedRadius:CGFloat = 5.0     let spawner = SKShapeNode(circleOfRadius: spawnedRadius)     spawner.fillColor = UIColor.greenColor()     // strokeColor, etc.     // spawner.position is 0,0 by default. That means in the centre of the parent node    // NOTE: When calculating random position for SKSpriteNode which is ALSO PHYSICS body, you should be aware of spawner's size and make some random position corrections, etc.     // Now, some random positioning      // THIS code calculates random position INSIDE youtRootNode     // Just make little modifications for position to be calculated OUTSIDE of youtRootNode     spawner.position = CGPointMake(x: [-youtRootNode.width/2.0, youtRootNode.width/2.0], y: [-youtRootNode.height/2.0, youtRootNode.height/2.0])      // Setup spawner physicsBody, etc.      youtRootNode.addChild(spawner) }"
swift,33ptae,newtoswift,1 point,Fri Apr 24 14:50:15 2015 UTC,You can have Xcode make a bridging header for you by creating a new Objective C class file.  It should ask if you want to automatically create a new bridging header.
swift,33ox4x,TheOswaldo,1 point,Fri Apr 24 08:30:48 2015 UTC,"I've never seen that popup ""Failed to automatically update constraints"".  Have you tried to delete (inside DerivedData/..) ModuleCahe & YourApplication folder ?   Or Product -> Clean ?"
swift,33ox4x,sabiland,1 point,Fri Apr 24 09:48:53 2015 UTC,"That's really strange. I've never seen this happen. I would save your project in its current state and create a bug report for apple in radar. After that duplicate your project and work from there (in case they want you to try to fix something down the line you'll still have the original problem project saved somewhere).  Try creating a new storyboard from scratch and getting rid of the old one. There may be some corruption in the underlying XML preventing Xcode from modifying it.   But for reals, submit a bug report and include that file that's in the error message."
swift,33ox4x,Ceribis,1 point,Fri Apr 24 10:17:19 2015 UTC,"Thanks guys, I made an edit on the original post on how I got things to work!"
swift,33nh5q,craig5005,1 point,Thu Apr 23 23:21:57 2015 UTC,"I haven't implemented that one, but I have written a sigcap from scratch before, so I think the answer is the same. From their doc, all you're really doing is setting a UIView to be an instance of YPDrawSignatureView. They're not marked as IBOutlets, but I'd imagine you'd just throw some UIButtons on there and set them to those two methods. Or you could a gesture recognizer - double tap to finish, triple to clear. Lots of options."
swift,33nh5q,lunchboxg4,2,Fri Apr 24 02:09:35 2015 UTC,"First off, thanks for your response.  How would I associate a particular UIButton with each function?  (That might be a simple task, I'm not great with Swift.  I did take a Udemy course, but it didn't cover this, or I forgot this lesson)."
swift,33nh5q,lunchboxg4,2,Fri Apr 24 02:43:24 2015 UTC,"All good, dude. We were all new once.   You've got a couple of options depending on how you design your UI. I'm going to assume you're not doing it programmatically since you're new to this, and instead using Interface Builder. In your View Controller, declare two IBAction methods that will call the view's relevant methods. Essentially, you're writing wrapper methods so you don't have to muck with the library code. Abstraction is your friend anyway.   @IBAction func doneButtonPressed(sender: UIButton) {        let capturedSignature = signatureView.getSignature   } }   You'll do one for reset/clear as well. Then control-click the button and drag to your view controller, and those two methods should show up for you.   To be honest, I haven't made the jump to Swift completely from ObjC yet. Personally I'd like to give Swift some time to stabilize a little more before I dive in to it more deeply, and I'm still comfortable enough with ObjC that I can knock some code out quickly with it.   Good luck."
swift,33nh5q,lyinsteve,1 point,Fri Apr 24 02:52:54 2015 UTC,"I think I did what you said, but it doesn't seem to work.    @IBAction func doneButtonPressed(sender: UIButton) {        let capturedSignature = YPDrawSignatureView.getSignature       }       So I put that in my view controller class.  Control clicked and dragged the into onto this IBAction.  When I build and press the button, nothing happens.  When I throw in a simple println() to the above, it prints to the console, but doesn't print when I put the println() in the method.  It's just not calling the method for some reason."
swift,33nh5q,lunchboxg4,2,Fri Apr 24 03:13:26 2015 UTC,"There's a couple of things you need to know here.  First, in Swift, you can treat functions like arbitrary values, passing them to and from other functions, and saving them with 'let'.  Second, when you call   let capturedSignature = YPSignatureView.getSignature   You're actually saving a reference to a function on YPSignatureView. Notice that that function isn't called using ().  What you're trying to do is  let capturedSignature = self.signatureView.getSignature()   Where self.signatureView is an IBOutlet from Interface Builder.  What you'll want to do is ctrl-click+drag your signature view from Interface Builder directly into your view controller. That'll allow you to create an outlet and wire up self.signatureView."
swift,33nf3i,xStory_Timex,1 point,Thu Apr 23 23:05:14 2015 UTC,Check this out on Stack Overflow. It should get you where you need to be.
swift,33nf3i,Ceribis,1 point,Thu Apr 23 23:17:09 2015 UTC,I just dont understand how I am supposed to use a textfield delegate with a UI Text view... I need to use the textView because I need multiple lines of content.
swift,33nf3i,Ceribis,1 point,Thu Apr 23 23:32:04 2015 UTC,They both have similar delegate calls. Just check the docs for the delegate calls you need to implement.
swift,33nf3i,Socraz6,1 point,Fri Apr 24 01:25:33 2015 UTC,"Basically, you need to create a place where the user can do something that will call resignFirstResponder.  In TextFields, this is commonly accomplished inside the delegate method textFieldShouldReturn, however in a TextView you'll usually want the return keyboard button to create a new line, so likely you'll need to roll your own way.  I usually create an accessory bar for the keyboard with a ""Done"" UIBarButton on it."
swift,33nf3i,Socraz6,1 point,Fri Apr 24 00:03:27 2015 UTC,How do you do that? Create a view and place it ontop of the keyboard? How do you place it so it fits flush on top of the keyboard?
swift,33mgm3,bulldogs93,2,Thu Apr 23 18:42:17 2015 UTC,So this is when they already logged in? You can add more properties to PFUser since its just a PFObject wrapper with a few extra goodies. Just treat your user objects like PFobjects! Or you could create a new Object and have a pointer to the user it belongs too.
swift,33kdh9,AxeEffect3890,4,Thu Apr 23 05:43:38 2015 UTC,"It is a thing. Auto layout can do what you want. Check this short intro: https://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOS/FirstTutorial.html#//apple_ref/doc/uid/TP40011343-CH3-SW11  Oops, missed the last sentence. I don't know if percentage based margins are possible, but I don't think it's something you should do. By choosing proper pixel based margins, you app will probably look good on any iDevice."
swift,33kdh9,cmd-t,2,Thu Apr 23 06:52:21 2015 UTC,"I've done percentage based by creating a Equal Height constraint between two view and then changing it to Proportional Constraint in the right panel (I can never remember what that panel is called) and giving it a value.  In the case of 10% from the top you'd have a view nested in another view, set them to be equal heights, and then set constraint to have a multiplier of 0.9. Then you set left, right, and bottom constraints on the inner view."
swift,33kdh9,Ceribis,2,Thu Apr 23 14:55:01 2015 UTC,"Size classes and auto layout is what your looking for.   To do the 10% from the top etc, you may need to do it in code."
swift,33kdh9,booranger,2,Thu Apr 23 09:19:23 2015 UTC,"Percentages are possible. The Stanford course on iOS and Swift has a decent basic intro to autolayout, that will get you going. I subscribed to Ray Wenderlich video tutorials mainly for their AutoLayout tutorials, but were very unimpressed by them. The free text tutorial (http://www.raywenderlich.com/83129/beginning-auto-layout-tutorial-swift-part-1) is much better...  Onto your question - constraints have a multiplier, so you may constrain something to be 0.5 the width of something else (for example the root view) or it's centre X is 0.9 of something else."
swift,33kdh9,moridinbg,1 point,Thu Apr 23 09:22:22 2015 UTC,for percent based you can use equal widths/heights and stuff or you can make an IBOutlet to the  topLayouConstraint of an object and then manually calculate it and set the constant.
swift,33kd07,StudioSevenDesigns,1 point,Thu Apr 23 05:37:31 2015 UTC,"I don't have access to the API reference at the moment but just as a guess, in touchesBegan:withEvent: you'll want to cancel your repeatActionForever SKAction, and then create a new one with a new rotateByAngle with the parameter set to -M_PI.  You might then consider moving this into a function taking a parameter (maybe boolean for clockwise/true and counterclockwise/false?) which clears all actions on ""center"" and adds a rotation of the correct angle within a repeating action, as you (kinda) already have."
swift,33kd07,javawag,1 point,Thu Apr 23 12:46:05 2015 UTC,You could try with: ZRotation *= -1
swift,33kd07,sabiland,1 point,Fri Apr 24 10:08:24 2015 UTC,It was as simple as using sprite.removeAllActions before any new action was started.
swift,33h3jl,Chakintosh,8,Wed Apr 22 13:57:24 2015 UTC,"I'm hugely biased, but you might like my Swift tutorials: Hacking with Swift. It's all project based (i.e., you make stuff as you go, not just theory!), it's aimed at beginners, and it has a smooth, incremental learning curve. Also, did I mention that the entire thing is free? :)"
swift,33h3jl,twostraws,7,Wed Apr 22 18:16:35 2015 UTC,"I will highly recomend these tutorials. I like the pace at which things move along.  I know people say learn this before and so on, but you want to learn Swift, not Ruby, Python or Objective-C. So start off by learning Swift and learn the stuff there. It's not motivating having to learn something else if you really want to learn one thing."
swift,33h3jl,cristeait,1 point,Wed Apr 22 19:59:14 2015 UTC,thanks. that looks good.
swift,33h3jl,netskink,12,Thu Apr 23 01:40:05 2015 UTC,"A bit more, love this topic!  Download Xcode to start. There are a zillion great tutorials online.   Programming in any language is not hard, just have to enjoy what you are doing, you will have to love it because you can EASILY do an 80 hour week, and at the end have NOTHING to show for it. That's how it goes. On the other hand, what the heck, you are working with electrons and the speed of light, which is pretty awesome.  Source: +35 years coding. Which can usually mean I know nothing!  LOL. Everyday learn something new. Every single day."
swift,33h3jl,ejpusa,6,Wed Apr 22 15:06:40 2015 UTC,"I'm sure you can start with Swift as your first language, but in general I don't recommend it to people.  Swift was my second language (after Python, a great place to start — though Ruby is more useful and probably equally easy) and while following tutorials I was regularly grateful for my previous experience.  The problem, right now, is there are tons of tutorials for Swift already — and the majority of them are out-of-date. The language changed a ton over the course of last summer, in small but code-breaking ways, and then it changed again with the release of 1.2.  What sucks about that is you'll find a tutorial you like — one written clearly, with great illustrations — and halfway through you'll start hitting errors that the tutorial doesn't cover. You aren't necessarily doing anything wrong, but the tutorial is just out of date.  It's frustrating. And it's during those times I was most thankful for at least a smudge of programming background.  That said, if you're willing to scrounge around on Stack Overflow, sift through forums, and basically brute-force your way through all the little problems in tutorials right now, you can definitely start with Swift.  (A bit of advice: optionals won't make sense to you at first, and likely not for a long time. Try to just be OK with that, it'll click eventually.)"
swift,33h3jl,Scatterfelt,3,Wed Apr 22 17:54:17 2015 UTC,"You raise a very good point not mentioned by others here.  A lot of the tutorials out there are already out of date and for a newbie trying to work their way through them that can be excruciatingly painful.  I would highly recommend AppCoda's books and tutorials though as the guys over there have been extremely diligent about keeping their tutorials and books up to date with all of the changes to Swift.  Believe me, it will save you a lot of headache - Good luck!"
swift,33h3jl,shooky1,4,Wed Apr 22 20:34:37 2015 UTC,"Ray Wenderlich's tutorials are also fantastic. They're typically up to date, and they make sure to let you know if not.  For veteran programmers I think it's easy to overlook how frustratingly inscrutable error messages are to newbies — especially when it comes to Xcode and Swift."
swift,33h3jl,Scatterfelt,4,Wed Apr 22 20:38:48 2015 UTC,"I'm learning Swift right now, and it's my first language. Have no prior programming knowledge.  You can certainly do it!  I wrote an article on how I got started and what learning resources I used.  http://seanallen.co/7-steps-to-begin-learning-swift"
swift,33h3jl,SAllen0400,-3,Wed Apr 22 17:36:18 2015 UTC,"WOW! As someone struggling to learn SWIFT as their first modern language (I have some experience in BASIC from a LONG time ago), your 7 steps make a whole lot of sense. I never realized that I may have to immerse myself completely in SWIFT for me to be able to learn it well. I've just been doing tutorials and guides and things like that, but to listen to podcasts and read blogs makes a lot of sense.  Thanks for the read!"
swift,33h3jl,L33tMasta,4,Thu Apr 23 02:00:35 2015 UTC,"Ruby -> Objective C -> Swift is the the learning path that I always recommend to friends with no prior experience who ask me about learning Swift, for multiple reasons:   It's what I did (I'm biased!) I think it's the least painless when it comes to environment/tool configuration, which has the potential to completely suck the fun and motivation out of a first-time learner (being on OSX is a big part of making this easy) Lots of high-quality learning resources that are diligently maintained/curated, and a fervent userbase that is pretty good when it comes to enforcing coding standards, which makes it much easier for you to absorb and retain knowledge and best practices If you learn Swift without knowing Objective-C, you will most likely run into issues where you're googling for help with a Cocoa issue, and all of the stack overflow answers/documentation are in Objective-C. Knowing Ruby and Objective-C will help make you employable. Knowing Swift only will not (this may change in the future).   Buy 'Ruby Wizardry' and start with that book, it's freaking amazing. It was written by the guy who did the Ruby codecademy tracks. I think that marketing it towards children was a huge mistake, it's great for anyone who is learning Ruby IMO, even someone with prior programming experience. I really wish that it had been out when I first started learning.   After that, Rypress' Objective-C tutorial:  http://rypress.com/tutorials/objective-c/  This is actually the best programming tutorial I've ever seen. It's so good, and it's free.  Then, both Big Nerd Ranch books (Objective-C followed by iOS).  I don't have a recommendation for Swift, but I'm sure you will find some here."
swift,33h3jl,xormancer,1 point,Wed Apr 22 18:30:52 2015 UTC,"Thank you so much for the tips. I was looking into the web for tutorials, and many of them recommend the path you described. I think I'll hit it with Ruby and go from there."
swift,33h3jl,spinwizard69,1 point,Wed Apr 22 20:55:06 2015 UTC,"Ruby is a terrible place to put people wanting to learn to program.   Python if you insist on high level languages and C++ if you want to really teach the nuts and bolts of computer science.  Interesting here is that Swift could easily replace both of those languages if it was a bit farther along in the development and stabilization cycle.   In 2-3 years we may want to suggest Swift for beginners, right now it is the playground of advanced programmers and people with a hackers bent."
swift,33h3jl,xormancer,1 point,Thu Apr 23 03:38:25 2015 UTC,Ruby is a terrible place to put people wanting to learn to program.    Why?   Interesting here is that Swift could easily replace both of those languages if it was a bit farther along in the development and stabilization cycle.   And if it wasn't exclusively available on OSX...
swift,33h3jl,LordJere,1 point,Thu Apr 23 18:53:36 2015 UTC,"Doesn't have to be - http://elementscompiler.com/elements/silver/ - ""With Silver, you can use Swift to write code directly against the .NET, Java, Android and Cocoa APIs. And you can also share a lot of non-UI code between platforms.""  I grant you though, it would have been nicer if it initially wasn't OSX exclusive."
swift,33h3jl,optional_field,2,Tue Apr 28 14:11:28 2015 UTC,"You basically have two choices. Either you start by reading theory about programming and more importantly object oriented programming, or, you take something like this document and follow along and learn through trial error. I did the second when i started programming first. I had working demos pretty fast, but it took me a long time to become a real developer, even though i had apps in app store's top10 list (back in 2009). It's really up to you"
swift,33h3jl,optional_field,2,Wed Apr 22 14:13:42 2015 UTC,"That's a great resource. Do you have more resources on the first choice "" start by reading theory about programming"" ?   Thanks a lot !"
swift,33h3jl,ejpusa,5,Wed Apr 22 14:24:56 2015 UTC,"If you have never programmed, I suggest learning quick basic. you've limited possibilities, but you learn he logic of programming nevertheless"
swift,33h3jl,ejpusa,5,Wed Apr 22 14:36:45 2015 UTC,"YOUTUBE YOUTUBE YOUTUBE  Then check out the Stanford classes: http://9to5mac.com/2015/01/26/stanford-swift-programming-course-available-on-itunes-u/  And Lynda.com is GREAT. Really have some awesome classes there. I'm blown away how good they are sometimes.  NOTHING should stop you from coding, anyone can do it. Just have to want to do it. It can be super fun too.  PS, was thinking of going to Morocco for a spell, if know anyone that wants to put up an Xcoder for a month, can teach away. Just hit me up on twitter.  @ejpusa  :-)"
swift,33h3jl,dalton05,2,Wed Apr 22 15:10:41 2015 UTC,"Awesome resources.  Tell me when you'll be here, because I have a hiking trip in the first 3 weeks of May across the country. But from then towards the end of the year i'll be home. I'll be more than glad to host you man, you can stay with my family, Tajines, Couscous all day err'day !   I just mentioned you on twitter @tsoulichakib"
swift,33h3jl,segmenter,2,Wed Apr 22 15:28:41 2015 UTC,"Cool, will be a few weeks away, some SF time coming up. I'll reach out.  Also maybe we can coordinate some other coders too and maybe hookup with a school. I'll prep some materials.  For sure DL Xcode, get a few ideas cooking, and we can work on that.  thanks, :-)"
swift,33h3jl,autowikibot,2,Wed Apr 22 16:18:36 2015 UTC,This is why I love this community
swift,33h3jl,smakusdod,2,Wed Apr 22 17:45:21 2015 UTC,I already have XCode installed.
swift,33h3jl,mavdev,2,Wed Apr 22 18:19:38 2015 UTC,"As a developer I've discovered that the majority of code that is written is easy to produce: if you need to iterate over an array, then use a for loop, for a conditional check I recommend wrapping it in an if statement, etc. On a micro level, coding is pretty damn easy. Though, there are exceptions like writing an efficient and bug free function that sorts a list of items. Luckily there are existing libraries for that! Complex programs are build from small units of code that are generally easy to write. On a micro level, I don't think you need a background in programming to start coding, just a passion to learn and a search engine like Google or DuckDuckGo! (And the ability to use CTRL C, CTRL V). Unless you are writing the next farting app, things become complex and hard pretty quickly on a macro level. I spend most of my time thinking and trying various types of software structures and code refactoring to adhere to those structures. Architecting an app I feel does require some type of formal training, either from an Institute or a set of good books. Before you even begin to write a single line of code you need to be able to answer often difficult software architectural questions about your app. At the very least, you will need to figure out the structure of you app’s file system—choose poorly and you may spend most of your time looking for stuff. As long as you have a passion for learning to code, acquiring the additional knowledge beyond a programming language’s syntax will naturally follow; at the very least via trial and error. Anyway, welcome to the rewarding field of software engineering and good luck!"
swift,33h3jl,ASnugglyBear,1 point,Mon Apr 27 22:19:39 2015 UTC,"Software architecture:       Software architecture is the high level structure of a software system, the discipline of creating such structures, and the documentation of these structures. It is the set of structures needed to reason about the software system, and comprises the software elements, the relations between them, and the properties of both elements and relations.  The architecture of a software system is a metaphor, analogous to the architecture of a building.   Software architecture choices include specific structural options from possibilities in the design of software. For example, the systems that controlled the space shuttle launch vehicle have the requirement of being very fast, and very reliable, in principle. Therefore an appropriate real-time computing language would be chosen. Similarly, multiple redundant independently produced copies of a program running on independent hardware and cross-checking results would be a software system architecture choice to satisfy the need for reliability. Software architecture is about making fundamental structural choices which are costly to change once implemented, i.e., which are used to 'house' the more changeable elements of the program, e.g., an operating system.  Documenting software architecture facilitates communication between stakeholders, captures early decisions about the high-level design, and allows reuse of design components between projects.      Interesting: Architectural pattern | Apache Gora | Software architecture analysis method | UIMA   Parent commenter can toggle NSFW or delete. Will also delete on comment score of -1 or less. | FAQs | Mods | Magic Words"
swift,33h3jl,StudioSevenDesigns,1 point,Mon Apr 27 22:20:22 2015 UTC,Udemy has a great swift coding tutorial by Rob Percival.  I'd start there.  You can buy that course on sale for like $20.  It is more than enough to jump-start you with swift.
swift,33h3jl,sabiland,1 point,Wed Apr 22 17:43:10 2015 UTC,"You don't need background in programming to learn any programming. If you did, no one would be able to learn any programming.  To answer your question specifically, no you do not. You will just need to be persistent, very persistent. Other folks on this thread have mentioned some very nice resources, use them."
swift,33h3jl,StephenBecker,1 point,Thu Apr 23 02:30:26 2015 UTC,"Yes, you can start there. It's a bit easier than Obj-C but not 10x easier  Asking here, reading Ray winderlich's site and watching screencasts will get you going alright"
swift,33i6uz,kueller,1 point,Wed Apr 22 18:48:58 2015 UTC,Last time I did this I used AdWhirl and was able to setup iAd and AdMob together and sort them how I liked. I'm not sure if AdWhirl is still around though.
swift,33i6uz,Ceribis,1 point,Thu Apr 23 02:03:36 2015 UTC,Thanks. I tried to visit their website but it looks like it is no longer around. Shame!  Hopefully if anyone is reading this it inspires them to make an article or something about it if nobody has already!
swift,33isl5,AxeEffect3890,1 point,Wed Apr 22 21:26:00 2015 UTC,Typically you will get a test ad that will look like this
swift,33isl5,iGoalie,0,Wed Apr 22 21:32:12 2015 UTC,Yea I'm getting a test banner on the simulator but it isn't showing up on my iPhone.
swift,33isl5,Stephen110,1 point,Wed Apr 22 22:06:17 2015 UTC,Might check under phone settings>developer.  I've never done anything with iAd though.  http://imgur.com/ZkCxavq
swift,33isl5,Ceribis,0,Wed Apr 22 23:16:05 2015 UTC,I don't have a dev account. I'm building to a jailbroken phone and a mac app called jailcoder. I'm assuming this means I can't get these developer settings?
swift,33isl5,Stephen110,2,Thu Apr 23 00:21:38 2015 UTC,"If you don't have a developer account Apple's not going to send you ads from their server. The simulator does some fun stuff but on a device it's a bit different, that's probably why you're seeing them there and not on the device.  Side note: how did you expect to get paid for those ads?"
swift,33isl5,Ceribis,0,Thu Apr 23 01:47:00 2015 UTC,"I wasn't expecting to get paid, it's just a banner that says ""you are now connected to iAds"" during a test run.  I just wanted to make sure the banner didn't mess with the user interaction."
swift,33isl5,avinassh,2,Thu Apr 23 01:55:41 2015 UTC,"I'm pretty sure he meant when you launch the app, since it won't be launched on the Apple App Store."
swift,33h6o3,coolio777,2,Wed Apr 22 14:22:27 2015 UTC,"I don't see how you can be more comfortable with your own server over Parse, and yet still be using a tutorial.  If you consider yourself a back end wizard and new at iOS, just use Parse to see what you need to do on the client.  Then, swap Parse out for your own back end."
swift,33h6o3,shiggie,2,Wed Apr 22 23:51:35 2015 UTC,"I believe Parse will only charge you if you start getting a ton of traffic (more than 30 requests a second.) Parse is absolutely viable if you are only just starting to build an app. If your app really takes off, and I think you'd know when that would be, then at that point you could probably build your own backend and replace Parse at that point."
swift,33h6o3,triivium,1 point,Thu Apr 23 03:49:08 2015 UTC,Why not use parse? Do you have tons of experience building back ends? What language are you going to write in? What db are you going to use? There's a lot more work involved in building out a good backend and it will take you months to get to a similar level of functionality that parse offers for free.
swift,33h6o3,NerdWith_A_Tan,1 point,Wed Apr 22 23:37:11 2015 UTC,"Well, parse is not free itself. It wants me to pay for the service. I have worked extensively with web backend services. Databases include MySQL and PL/SQL. I have worked mostly with PHP, but know Ruby too."
swift,33h6o3,8Bytes,1 point,Thu Apr 23 00:45:53 2015 UTC,Then write the api in a language you know. Use push notifications to sync conversations. Not much else involved. Front end swift won't change very much.
swift,33h6o3,8Bytes,1 point,Thu Apr 23 01:55:05 2015 UTC,"Never done a messaging app before, that's why I'm here looking for a tutorial that gets me off with the basics. I can then take it from there."
swift,33h6o3,NerdWith_A_Tan,1 point,Thu Apr 23 02:17:17 2015 UTC,"Use the tutorials that use parse. Instead of calling a parse api, write that api yourself. So front end will stay the same. There are lots of tutorials on writing the back end for this kind of app (depending on the language you want to use).  You should have Linux experience, db experience, sys admin experience, and of course know a back end language. Otherwise you cannot complete this task and should just use parse."
swift,33h6o3,duddha,0,Thu Apr 23 02:27:22 2015 UTC,"Are you going to have a million plus users on launch? Then you aren't paying or built your app to be extremely inefficient in the way makes calls, as you get up to 30 req/second free. If you have media files store those with s3 or azure but other then that parse will be able to handle around a million users before you have to pay."
swift,33h6o3,DaemonXI,1 point,Thu Apr 23 15:58:41 2015 UTC,You don't need to be an expert in backend programming to set up a rest api. I recommend googling REST tutorials. Use a language you're familiar with and get a VPS.  From there it's just a matter of making network requests to your REST endpoints (with NSURL or something similar) and parsing the response.
swift,33gtdh,ajn123,1 point,Wed Apr 22 12:21:29 2015 UTC,https://github.com/icons8/flat-color-icons
swift,33gtdh,Starchand,2,Wed Apr 22 12:36:32 2015 UTC,thenounproject.com
swift,33gtdh,daaanson,2,Fri Apr 24 14:16:39 2015 UTC,Iconfinder.com
swift,33gtdh,travelton,1 point,Wed Apr 22 12:40:28 2015 UTC,I use Fontawesome
swift,33gtdh,downvotefodder,1 point,Wed Apr 22 15:02:56 2015 UTC,Elegant Icons dual licensed under MIT and GPL 2.0
swift,33hb43,Arkitan,1 point,Wed Apr 22 14:57:13 2015 UTC,"Parameters = variables when you are defining the function.  Arguments = variables passed to an already defined function.  So in your case, name and day are parameters in the function definition:  func greet(name: String, day: String) -> String { return ""Hello (name), today is (day)."" }   And when you call the function, ""Bob"" and ""Tuesday"" are arguments:  greet(""Bob"", ""Tuesday"")"
swift,33hb43,LintonSamuelDawson25,1 point,Wed Apr 22 15:13:07 2015 UTC,Thanks for the reply.   Name and day are parameters. Of type string. That's why it says string after each one.   But why does it say string AGAIN after the arrow?  haven't we already determined that name and day are strings?
swift,33hb43,LintonSamuelDawson25,1 point,Wed Apr 22 15:30:11 2015 UTC,"The thing after the arrow is the type of the function, what type it returns. Because it could do anything with those variables."
swift,33hb43,_lowell,3,Wed Apr 22 15:37:14 2015 UTC,"after the arrow is the type of the function, what type it returns.    A function's type is distinct from its return type: it's defined by its parameters and its return type. Using your example, greet()'s function type is (String, String) -> String."
swift,33hb43,mistermagicman,1 point,Wed Apr 22 16:43:36 2015 UTC,"When you call greet(), you get back the string that was created. This is called the return value. The return value is type string. I like to the of the arrow as pointing to what the function makes. It's takes two strings and makes ( -> ) one string.   Edit: you can store the string that is returned in a new var, like so:   var greeting = greet(""Bob"", ""Tuesday"") println(greeting) // print out the new greeting we created"
swift,33brr7,atatator,3,Tue Apr 21 06:00:19 2015 UTC,"Nice, great to see a Swift version of this thing popping up.  A few suggestions, add screenshots for the other overlay options available.  Also, I don't think this should only be accessible through methods on a view controller. Let me instantiate and manage the overlay views myself instead."
swift,33brr7,yeskia,2,Tue Apr 21 14:07:27 2015 UTC,"Just out of curiosity, why did you decide to use CocoaPods instead of Carthage (https://github.com/Carthage/Carthage)?"
swift,33brr7,rastreus,1 point,Tue Apr 21 15:25:46 2015 UTC,"I think there is much more developers who use CocoaPods, and as shiggie has pointed out - CocoaPods are a bit easier for unexperienced programmers.  It also doesn't mean that SwiftOverlays can't support Carthage in the future."
swift,33brr7,shiggie,1 point,Wed Apr 22 04:00:17 2015 UTC,"CocoaPods is dead simple, but for scalability, it looks like Carthage much better. But, given the kinds of questions on this sub, Carthage is probably beyond the capabilities of a large portion of the audience."
swift,33brr7,yeskia,2,Tue Apr 21 20:14:58 2015 UTC,"How does Carthage ""scale"" better?"
swift,33brr7,shiggie,1 point,Wed Apr 22 02:47:37 2015 UTC,"For one thing, out of the box, CocoaPods puts the source in each project that you use it in. If you have more than one project using the pod, you'll have to maintain multiple copies/versions of it."
swift,33brr7,rastreus,2,Wed Apr 22 14:31:35 2015 UTC,"Don't discredit ""the audience;"" they're your peers and fellow Swift developers. Give them an opportunity to use Carthage; I think you'll be surprised by everyone's capabilities."
swift,33dops,mikethehuman,6,Tue Apr 21 18:05:38 2015 UTC,"If you are using UIButtons, you can listen for the UIControlEvent TouchUpInside using the target action pattern.  If you are using custom UI, you can also deal with touchesEnded manually to determine whether or not the touch that ended was inside the button you wanted."
swift,33dops,LetsCodeSomethingFun,1 point,Tue Apr 21 18:24:46 2015 UTC,"As well as touchesCancelled - both from the subclass or while using button events.  In general, if you are listening for touchesEnded, you want logic in touches cancelled also."
swift,33dops,Stephen110,0,Tue Apr 21 23:02:47 2015 UTC,"I second this, but, I don't think dealing with touch end methods is the best way. In my opinion, it is much better to attach a gesture recognizer to the button in that case because you can skip subclassing UIButton."
swift,339as3,SAllen0400,1 point,Mon Apr 20 17:56:20 2015 UTC,"Hi there, I'm into my first month of learning Swift. How long has it taken to really get to grips with how to use it?  I'm working my way through a book that teaches Swift to beginners, and i've had no experience in Objective-C or any other languages for that matter.  Reason I'm curious, is i'm starting to get to grips with individual aspects, but just putting it all together and applying it is still proving difficult to get my head around.   Is this something that you struggled with at all to begin with? At what point did it begin to start making sense?   Thank you! :)"
swift,339as3,Heffertron,2,Mon Apr 20 20:05:55 2015 UTC,"Best way to learn programming is to actually program. You should always be involved in creating something.   Have you tried looking up interesting GitHub projects and studying the code? Find out how the implement certain features, and try to incorporate it into your own code.   There's no point where you say I'm good enough, if you're completely honest with yourself. But you'll be able to see progress by realizing what you can now do."
swift,339as3,iamktothed,1 point,Tue Apr 21 06:47:00 2015 UTC,"http://seanallen.co/7-steps-to-begin-learning-swift   All good advice from the others, so I'll just echo it. Learn by doing. As I mentioned in my post, I just immersed myself in everything Swift and iOS. After a while it starts making sense slowly but surely.  I especially like the advice iamktothed gave when he said ""There's no point where you say I'm good enough..."".  You can always improve and there is so much to learn.   Don't be discouraged in your first month.  Keep at it, and keep striving to improve and you'll get there."
swift,339as3,thegoogler823,1 point,Tue Apr 21 23:41:13 2015 UTC,"OP, the link is down"
swift,339as3,Darth__Nader,1 point,Mon Apr 20 22:33:13 2015 UTC,Hmm it is working for me now.
swift,339as3,thegoogler823,1 point,Mon Apr 20 23:24:15 2015 UTC,"http://seanallen.co/7-steps-to-begin-learning-swift   It's working for me now, too."
swift,339as3,ceelogreen5,1 point,Mon Apr 20 23:41:02 2015 UTC,I like the way you show your skills on your resume. Clever. Looking forward to the udacity recap
swift,339as3,cathkay,1 point,Mon May 11 08:47:07 2015 UTC,"Hey, you prepared a really good list of resources - congrats! And good luck learning Swift :) My dev folks at work (Netguru, we do web and mobile applications) have been working on their first Swift project recently, which resulted in writing their own Swift style guide. Of course, it's their subjective take on the subject, but maybe you'll find this helpful and wish to share it with others: https://netguru.co/blog/swift-style-guide-open-source Enjoy!"
swift,339as3,binskt,0,Mon Jun 8 18:24:31 2015 UTC,The best way is starting doing something. Take an idea and start coding.
swift,339jod,zoetebeer,2,Mon Apr 20 18:59:42 2015 UTC,Been doing this for some time.. Took it a step further  https://gist.github.com/anonymous/bfe7490e863b725d3ba2  edit: pasted it on mobile.. formatting is  weird
swift,339jod,Bewder,1 point,Tue Apr 21 01:06:14 2015 UTC,Slick. What do you do when you have custom class initializers?
swift,339jod,HappyOutHere,1 point,Tue Apr 21 05:28:24 2015 UTC,Yep
swift,339jod,DBKegs,1 point,Mon Apr 20 19:05:00 2015 UTC,"Great, thanks!"
swift,339jod,kanye_is_a_douche,1 point,Mon Apr 20 19:10:16 2015 UTC,Would this be a lazily or eagerly evaluated? I've never been sure what the point of closures was. Is it just so that view isn't created until it is needed? And what's the advantage of this over just creating a view with the default constructor and then setting the backgroundColor?  I think I'm probably just missing the whole point of the builder pattern now that I think about it...
swift,339jod,HappyOutHere,1 point,Tue Apr 21 05:31:00 2015 UTC,"The advantage mostly is another scope in which you declare frames, colors so you don't have to care about giving it different name in case you initialize 10 views in a row.  It also looks much more concise and elegant."
swift,339jod,kanye_is_a_douche,0,Tue Apr 21 06:56:56 2015 UTC,"Sorry, ios noob here - is the purpose of a builder pattern to create a new base version of a class with some default values? Why not just extend the class?"
swift,33behm,xzxztaco,1 point,Tue Apr 21 03:37:17 2015 UTC,Is floorf what you're looking for?
swift,33behm,titaniumdecoy,1 point,Tue Apr 21 04:28:23 2015 UTC,"floor() if you want a Float or Double still, Int() if you want an Int"
swift,33behm,SheepWheatOre,5,Tue Apr 21 13:55:01 2015 UTC,"Careful! These do not produce the same results with negative numbers. floor() will always round towards negative infinity, whereas Int() truncates towards zero. For example:  let foo = -1.5 let bar = floor(foo) // gives -2 let baz = Int(foo) // gives -1"
swift,339wfy,xzxztaco,1 point,Mon Apr 20 20:28:54 2015 UTC,I think you're looking for the AVAssetReader class. How you'd do it:   create an AVAsset from your video init an AVAssetReader with your asset Create an AVAssetReaderVideoCompositionOutput Add the video output to your asset reader Call the startReading method on your AVAssetReader repeatedly call copyNextSampleBuffer on your asset reader output (as many times as the amount of frames you'd like to copy) convert the sample buffer of class CMSampleBuffer to a UIImage and put it in your Array
swift,33aptk,filmoe,4,Tue Apr 21 00:11:15 2015 UTC,You should really download The Swift Programming Language iBook where it goes over all of this. It's a free book from Apple that goes over all the core principals of the language with examples.
swift,33aptk,Ceribis,1 point,Tue Apr 21 00:39:31 2015 UTC,"I just downloaded it, Ill give it a look.   I recently tried searching for a good book that goes in depth of the different types of Cocoa Touch classes. A book that gives actual coding examples. Do you know of anything like this? I scanned through the apple swift ebook and it seems like it does not use Cocoa Touch examples"
swift,33aptk,Ceribis,1 point,Tue Apr 21 01:09:17 2015 UTC,The swift book is for learning a Swift so it won't get into any Cocoa Touch. Off the top of my head I don't know of any books for it but there's a Stanford class on iTunesU that is about developing iOS apps in swift. That would be a good primer for you if you like code and videos.
swift,33aptk,dotsau,2,Tue Apr 21 02:44:12 2015 UTC,"There's a companion book to the one about Swift language, Using Swift with Cocoa and Objective-C. It's in the iBook Store, on the same shelf."
swift,33aptk,c8220,2,Tue Apr 21 05:42:17 2015 UTC,The documentation should have everything you need.
swift,33aptk,c8220,1 point,Tue Apr 21 00:28:06 2015 UTC,Ive read through that and it doesnt make sense to me. Can you please provide an actual example... I am really stuck on some swift code right now and I could really use an example
swift,33aptk,dotsau,2,Tue Apr 21 00:34:32 2015 UTC,You can't add objects to an NSArray after it's created. That may be what's causing you trouble. You can use an NSMutableArray which is a subclass of NSArray.  var arr = NSMutableArray() //create arr.addObject(NSObject()) //add object arr.objectAtIndex(0) //get object   Why do you want to use NSArray instead of a Swift array?
swift,33aptk,john_alan,1 point,Tue Apr 21 00:43:06 2015 UTC,Okay cool now we are getting somewhere!  I am importing data from a database and its putting the data into an NSArray. I am having trouble passing the data to my next viewcontroller. But I am still stuck...
swift,33aptk,tcdb28,0,Tue Apr 21 00:59:34 2015 UTC,"If you need to pass it away as it came in, you just do that. Swift arrays and NSArrays are automatically bridged. If you need to modify the data, you create a new array with var (or an instance of NSMutableArray), fill it with data however you need and pass it on to your other view controller."
swift,33a1rc,xStory_Timex,1 point,Mon Apr 20 21:07:20 2015 UTC,My first thought is:  let array = // whatever navigationController.navigationItem.rightBarButtonItems += array
swift,33a1rc,SirGlaurung,1 point,Mon Apr 20 23:25:19 2015 UTC,"let array : NSArray = [UIBarButtonItem, UIBarButtonItem]  navigationItem.rightBarButtonItems(array as [AnyObject], animated: Bool)  It works for me in swift 1.2"
swift,339mjo,sasha_fishter,1 point,Mon Apr 20 19:19:56 2015 UTC,Loving your code... /s
swift,339fjn,hiscapness,1 point,Mon Apr 20 18:30:40 2015 UTC,The best so far that I can find are the online docs that includes both obj-c and swift descriptions.  example:  https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSDictionary_Class/#//apple_ref/occ/clm/NSDictionary/dictionaryWithObject:forKey:
swift,339fjn,djkimothy,1 point,Mon Apr 20 20:05:00 2015 UTC,"Yeah, it appears the 6.2 update broke the docs. If you roll back to 6.1 they're there. Update, they disappear. Sucks."
swift,339fjn,spinwizard69,1 point,Mon Apr 20 20:20:44 2015 UTC,Most likely they are doing a complete rewrite due to the significant changes in 1.2.    However Dash finds docs for Swift 1.2.   There is a reference to;   github.com/SwiftDocOrg which is the first I've heard of them.  Maybe this is a sign of a long term desire on Apples part to open up Swift?
swift,339fjn,yeskia,1 point,Thu Apr 23 03:43:42 2015 UTC,"The docs seem pretty stuffed for me in 6.2. Really slow to load new pages, searching doesn't take me to the exact method documentation either. Thinking of downloading Dash or just Googling instead."
swift,337bl6,markwhardy,2,Mon Apr 20 05:10:39 2015 UTC,Thanks guys. I guess reddit's not so bad. I figured it would be kinda like 4chan.
swift,337bl6,Brodie10-1,1 point,Mon Apr 20 18:50:24 2015 UTC,This is honestly a great idea and I hope a lot of people find it. Great job!
swift,337bl6,swiftMaster,1 point,Mon Apr 20 05:38:37 2015 UTC,Nice work man!
swift,337bl6,Oli_Picard,1 point,Mon Apr 20 08:57:31 2015 UTC,I love it. Simple and effective.
swift,337bl6,PapaMikeWhiskey,1 point,Mon Apr 20 15:31:18 2015 UTC,"This is hilarious. The toy I had growing up was a toy that was yellow with white ""buttons"" on it. Each button had a number times a number on it, and when you pressed the button down you would reveal the total (i.e. a label written on the plastic below it). This app is basically identical to that toy!! Other than that this looks awesome!"
swift,33797f,swiftraid,2,Mon Apr 20 04:44:42 2015 UTC,"Apple have put the code to Adventure Game, using Sprite Kit/Swift for OS X online here and Ray Wenderlich has a tutorial for porting Sprite Kit games from IOS to OSX here. You may be better off learning the framework for IOS then applying the knowledge to OSX, I couldn't find any OS X specific Sprite Kit tutorials."
swift,33797f,hermitnerd,2,Mon Apr 20 08:35:31 2015 UTC,You can use the Sprite Kit and the Scene Kit on OS X just like you can on iOS.
swift,33797f,ReasonReader,1 point,Mon Apr 20 15:37:26 2015 UTC,"OT, for iOS:  Sprite Kit Tutorial for Beginners  SpriteKit is amazing. Finally you have all the necessary  native building-blocks to create a game."
swift,339uob,iD986,1 point,Mon Apr 20 20:16:36 2015 UTC,"It really depends on the type of application you are building. Currently, I don't work on any apps that have less than a thousand lines of code (and it gets quite high depending on the project).  If it works how you want it to then I wouldn't worry about too much.  Edit: Here is a search for all Github repos that use Swift. You can peruse to get a sense of what others put into their projects."
swift,339uob,tcdb28,1 point,Sun May 3 21:45:35 2015 UTC,Ok thank you very much!
swift,33743i,FlaqueEau,5,Mon Apr 20 03:50:32 2015 UTC,"Grand Central Dispatch exists as a powerful abstraction over common multithreaded concepts, and in almost all cases overwrites existing threading behavior with similar behavior structured around serially executed task queues.  This is a great document that helps bridge the concepts together and give you the jumpstart you need to start thinking with queues."
swift,33743i,lyinsteve,2,Mon Apr 20 05:03:16 2015 UTC,"private let queue = dispatch_queue_create(""com.companyIdentifier.UniqueName"", DISPATCH_QUEUE_SERIAL) /// other stuff func mySerialWork() {         // this will be executed serially. Only when finished other calls to this, will enter the closure body     dispatch_async(self.queue) {         dispatch_async(dispatch_get_main_queue) { // this part is optional             // do stuff on the main thread like updating the UI         }     } }"
swift,33743i,zahooo,1 point,Mon Apr 20 10:47:04 2015 UTC,I think you are looking to make it atomic.   Atomicity is the computer science description for a data structure that is thread safe.  http://en.wikipedia.org/wiki/Linearizability
swift,33743i,I_Write_Good,1 point,Mon Apr 20 04:33:01 2015 UTC,objc_sync_enter(self)  . . . objc_sync_exit(self)
swift,33743i,sabiland,1 point,Mon Apr 20 06:35:02 2015 UTC,This doesn't really get you anything that NSRecursiveLock doesn't get you without calling into coincidentally-swift-compatible objc runtime entry points. I guess it saves a single line of code declaring the lock; doesn't seem worth it.
swift,33743i,Catfish_Man,1 point,Tue Apr 21 16:05:46 2015 UTC,You could use synchronized or an nslock. Actually googling for synchronized in swift and it looks like you may have to use a Grand Central Dispatch method instead:  http://stackoverflow.com/questions/24045895/what-is-the-swift-equivalent-to-objective-cs-synchronized
swift,33743i,perishabledave,1 point,Mon Apr 20 04:45:37 2015 UTC,"I'm confused on how to use this. What would be the ""synchronized"" code? Do I use this lock every time I enqueue or dequeue into my data structure? Or do I do it on the definition of the object like in Java?"
swift,3371km,Ah_Real_Monsterz,0,Mon Apr 20 03:24:22 2015 UTC,I actually have a tic tac toe app that I wrote… but unfortunately it's a very poor example to work from because it's intentionally demonstrating a bizarre way to write programs. Sorry!
swift,3371km,Catfish_Man,1 point,Mon Apr 20 05:06:55 2015 UTC,"Hey no big deal at all! The thing that bothers me is the syntax I'm using works just fine for a single button but not for a collection. I'm using button.setTitle(""X"", forState.Normal) on a test button and it performs the function fine but when I self reference in my collection, it doesn't allow me or says UI Button doesn't have a setTitle parameter which makes no sense to me. After that, I think I can just have it set-up in an if-else based on the label I have displaying the player who is up. Idk completely though. I'm only a couple months into learning code, so these things are just frustrating lol"
swift,3371km,Zerotorescue,2,Mon Apr 20 05:13:49 2015 UTC,"when I self reference in my collection, it doesn't allow me or says UI Button doesn't have a setTitle parameter which makes no sense to me   let myButton = button as UIButton   Generally whenever you encounter ""AnyObject"" in code you need to cast it to another type in order to be able to use it. In this instance I think you're using the ""sender"" parameter of an object which by default is AnyObject. You either have to type cast or change this AnyObject to be the type UIButton."
swift,3371km,the_holger,2,Mon Apr 20 11:46:34 2015 UTC,"Not sure if this helps you, but what I'm doing is: playerButton.setTitle(player1Turn ? ""X"" : ""O"", forState: .Normal)  This determines whether var player1Turn is true or false and shows an X if it's his turn or an O if not."
swift,334ywa,paper_thin_hymn,2,Sun Apr 19 16:27:55 2015 UTC,"You'll want to try and connect that to the little bubble next to the code itself, not to the view controller."
swift,334ywa,MrPieGuy1234,1 point,Sun Apr 19 16:35:06 2015 UTC,"Thanks for the reply. Nothing happens when I try to drag it there either. It will allow me to create a new block of code by dragging into ViewController.swift, but connecting to an existing block of code seems to not work."
swift,334ywa,MrPieGuy1234,1 point,Sun Apr 19 16:37:20 2015 UTC,Try dragging from the bubble beside the code onto the view. You should be able to select touch down from there.
swift,334ywa,endresjd,2,Sun Apr 19 16:47:27 2015 UTC,"This happens for me too. The new Xcode suddenly can't connect actions to the controller anymore when it already has some defined. My solution was/is to rename the existing one, then drag/create to a new method and transfer the body of the method over. I have been urged to file a radar bug about it. Very annoying. I was convinced I'd lost my mind..."
swift,334ywa,Ceribis,1 point,Thu Apr 23 22:19:54 2015 UTC,So I'm not the only one! So weird. Thanks for the tip.
swift,334ywa,endresjd,1 point,Fri Apr 24 08:00:20 2015 UTC,"You can't connect a view directly to an event like that. Instead, drag a Tap Gesture Recognizer from the object library (bottom right corner) and put it in the top header part of that view. You'll connect the View to the gesture recognizer and the gesture recognizer to the IBAction in your class."
swift,333tn3,wilkinho,7,Sun Apr 19 06:45:04 2015 UTC,"What makes you think this is a Swift bug? I haven't looked at the project itself, and I haven't ever used SpriteKit, but from your description this sounds like a difference in SpriteKit behavior between iOS 7 and iOS 8 and is not related to Swift."
swift,333tn3,eridius,1 point,Sun Apr 19 08:48:17 2015 UTC,Sprite Kit iOS 7.1 crash on removeFromParent  One way to fix this is to set physicsBody to NIL before calling removeFromParent.
swift,3352tw,darkboss305,1 point,Sun Apr 19 17:03:30 2015 UTC,1) You can detect missile-wall start-contact with didBeginContact  2) And you can detect missile-wall end-contact with didEndContact
swift,332tn6,akwilliamson,8,Sat Apr 18 23:59:34 2015 UTC,"I think one of the main reasons is that Swift is still evolving.  It's already a large task to update Swift for all of their examples, etc, so they might just be waiting for Swift to be a bit more stable  Additionally, the documentation team is always working to push out the latest documents and reference guides for the newer frameworks.  It's probably a higher priority to push out a new reference guide than it is to update the (perfectly good) examples of the old ones."
swift,332tn6,Synergy807,12,Sun Apr 19 00:28:57 2015 UTC,"(Former Apple engineer here.)  Tech pubs, like all engineering departments at Apple, has limited resources.  They have to spend most of their time documenting new technology, rather than going back and updating existing documents that are still valid."
swift,332tn6,ReasonReader,-10,Sun Apr 19 05:48:12 2015 UTC,documenting new technology   So you are saying that swift isn't 'new technology'?  Sounds like a BS management excuse to me.
swift,332tn6,colemab,7,Sun Apr 19 17:48:13 2015 UTC,"So you are saying that swift isn't 'new technology'?   I said no such thing.  The question at hand is whether to go back to all of the existing iOS guides and rewrite all of their examples in Swift.  Those examples still work just fine.  Don't try to put words in my mouth, it only makes you look stupid."
swift,332tn6,ReasonReader,3,Sun Apr 19 19:15:23 2015 UTC,Yea I've only been programming for a few months and swift is my first language. I'm surprised at how hard it is to find any online solutions to problems I am having in swift.
swift,332tn6,helloevrebuddy,5,Sun Apr 19 00:59:11 2015 UTC,"You use stackoverflow.com, right? There's already a ton of examples there from what I've seen."
swift,332tn6,mklbtz,2,Sun Apr 19 01:03:06 2015 UTC,Yes and also google searches. There are a lot of examples but it is occasionally very difficult.
swift,332tn6,helloevrebuddy,1 point,Sun Apr 19 01:06:46 2015 UTC,Well you can always post your language questions here! ;)
swift,332tn6,mklbtz,15,Sun Apr 19 03:13:47 2015 UTC,"Funny, as someone who has been programming for 25 years, I'm absolutely amazed by how huge the body of available examples, tutorials, in-depth explanations, and everything else you could possibly wish for exists for a language that is literally less than one year old to the public.  And not only is it less than one year old, it has already evolved dramatically in some ways in that 10 months time.  So to me, it's amazing you can find anything at all. You should feel lucky that your somewhat poorly thought out decision to learn to program with a brand, spankin' new language has as much support behind it as it does honestly."
swift,332tn6,ztj,3,Sun Apr 19 04:34:01 2015 UTC,"I don't have any problems with resources online, there are plenty of resources around. Only the official iOS guides. I guess there are more important things to do, I don't blame Apple but sometimes I wish I could just submit examples for them myself for some of their guides with minimal examples!"
swift,332tn6,digiwano,1 point,Sun Apr 19 05:25:03 2015 UTC,"Honestly, I feel like they've been really good about Swift support in documentation, even if not everything is updated, the amount of things that were documented from day 1 with both swift+objc versions is amazing, and things have steadily gotten better since.  We'll probably see a whole bunch more coinciding with WWDC -- i'm sure a number of things are getting rewritten/redone as part of new features in the next ios/osx versions (as always), and if any tutorials are getting replaced/deprecated, why bother writing swift documentation for that rather than the features that replace them?"
swift,3340z2,xzxztaco,2,Sun Apr 19 08:57:21 2015 UTC,"Have you built any other iOS apps before?   As first projects go I think that sounds like a pretty good one. I mean it's not dead simple but you should be able to figure it out.  I'd suggest using a slider view for scrubbing through the video file, similar to in the Camera app lets you scrub through frames of a rapid-fire capture by swiping the bottom. I think the best way to do this would be to add a UICollectionView to your UI, with each cell being a frame, and then when the user swipes the collection view, overview scrollViewDidScroll delegate method and in there you would update the currently-visible frame image."
swift,3340z2,TheLastBlackRhino,1 point,Sun Apr 19 20:09:43 2015 UTC,"I have not built a single iOS app before. This is my first project.  The slider and UICollectionView sound like good ideas.   Say I have a 120 fps video in my 'Photos' library, how would I load access this file and store its frames in a UICollectionView? Also, is it possible that I could have a spectrum of ""high speed scrubbing"" to ""fine scrubbing"" that would allow the user to move the slider very fast, or (in the case of the fine scrubbing) frame by frame? This would allow all of the frame navigation to be accomplished with just the scrubber. Would I use an ImageView to display each frame?  Also, /u/TheLastBlackRhino you are the only person that has ever put out any effort to recognize my posts. I have posted this on other forums too and am completely ignored."
swift,333tg1,kinngh,3,Sun Apr 19 06:42:00 2015 UTC,"The exception message says that ViewController doesn't implement -tableVIew:numberOfRowsInSection:. Adopting <UITableViewDataSource> (which was done in the storyboard) is a promise to implement its required methods, which include -tableVIew:numberOfRowsInSection: and  -tableView:cellForRowAtIndexPath:.  The template won't have stub implementations for these methods because you selected the single view application template.  Also, don't forget about <UITableViewDelegate>."
swift,333tg1,_lowell,2,Sun Apr 19 07:34:50 2015 UTC,Thank you so much! I didn't realise I am doing this mistake :)
swift,333tg1,zqwzzle,2,Sun Apr 19 09:03:21 2015 UTC,"The UIViewController class does not implement the required methods for UITableViewDataSource protocol. Your exception is telling you it can't find the required methods for the following:  func tableView(_ tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int"
swift,332aft,WongWray,1 point,Sat Apr 18 20:55:50 2015 UTC,"If your scene is changing when you change the zPosition, it means you're drawing multiple sprites on top of each other. The zPosition is how ""far away"" the sprite is, so a higher zPosition sprite will be drawn on top of a lower zPosition sprite.   If you have debug information turned on in your scene, you can see how many nodes are on your scene. If you keep seeing the number go up when you're not adding anything to the scene, it means you might be adding more sprites underneath the ones already on screen."
swift,332aft,LetsCodeSomethingFun,2,Sat Apr 18 21:31:55 2015 UTC,"The number of nodes does not go up, it stays at numCols*numRows as expected.  The only time I ever set a Block's sprite variable is in addSpritesToBlocks which only gets called once.  From there, the GameBoard changes the Block's color variable when necessary which should cause redrawBoard() in the scene to change the texture"
swift,332aft,fernando_69,1 point,Sat Apr 18 22:25:17 2015 UTC,I saw guns being sold air apparently.
swift,331e6y,Toxinade,1 point,Sat Apr 18 16:02:36 2015 UTC,"I'm not doing swift but objective c. My reason, more documentation code sample can add swift code if needed. 3 months exp in dot net. Not much with objective c. If you want to swap to objective c I am down to be programming buddies"
swift,331e6y,coty24,1 point,Sat Apr 18 20:26:59 2015 UTC,I might consider objective-c Pm me your Gtalk or Skype :)
swift,331e6y,romeomikedelta,1 point,Sun Apr 19 00:07:46 2015 UTC,"Hey, I love this idea. I want to learn Swift. Starting slowly -- about 1 chapter into Meng To's Design+Code. Let's talk."
swift,331e6y,erstylin,1 point,Sun Apr 19 00:30:39 2015 UTC,Perfect :)  pm'ed you my details
swift,331e6y,romeomikedelta,1 point,Sun Apr 19 00:37:34 2015 UTC,"i am interested ,starting slowly with bitfountain, how about doing a google hangout meeting?"
swift,331e6y,kinngh,1 point,Sun Apr 19 04:43:23 2015 UTC,Got in touch with OP last night. I think a weekly hangout session is the way to go.  Perhaps we can organize a learning swift roadmap (Trello board?) and hold each other accountable somehow.  I think we're all using different resources at the moment as I see @kinngh is learning through Udemy.  I'm going to PM you both.
swift,331e6y,romeomikedelta,1 point,Sun Apr 19 10:32:51 2015 UTC,I'm learning Swift now from a Udemy course
swift,331e6y,yerpayerpa,1 point,Sun Apr 19 06:43:14 2015 UTC,Nanodegree?
swift,331e6y,Dallas1987,1 point,Sun Apr 19 10:33:05 2015 UTC,Can I get involved? Working through the Ray Wenderlich iOS apprenticeship series
swift,331e6y,my_awesome_reddit,1 point,Mon Apr 20 11:38:39 2015 UTC,I would love to join this google hangouts group if possible! I have no programming experience whatsoever but I am looking to start learning swift and the basics of programming.
swift,330u42,SeanMWalker,1 point,Sat Apr 18 12:12:31 2015 UTC,"Once your isFollowing variable is set to true, it will never be set to false. Your sharing the reference too widely. It should be declared (or at least reset, but I would recommend declared) in your inner-most block. (Basically, this variable tracks whether anyone is following the original queried user, not whether one of the other users is following them)."
swift,330u42,jonhohle,1 point,Sat Apr 18 15:10:35 2015 UTC,"Can you give me an example of how you would do that with the code I linked to?  I updated the code(https://dpaste.de/kDj6) and was under the impression that the first query grabbed all users and then started the loop, which would look at each user one by one. It's on the first person in the object which then goes into the second query which by now the isFollowing is false. Once inside the second queries loop, it sets the boolean to true and then exits that loop to go back to the first loop, which would then set it back to  false. I'm not sure how it would stay true?"
swift,330u42,clawesome,1 point,Sat Apr 18 18:29:45 2015 UTC,"You're using asynchronous queries, so there is no guarantee which query will finish first.  Append both the users array and status array at the same time within the user results query.  I would suggest only using one array that can store both the user email and their follow status, by either using an array of a custom class or tuples."
swift,330u42,clawesome,1 point,Sun Apr 19 01:42:30 2015 UTC,Would you care to write an example using the code I have above? I am new to swift and am not sure how to do so.
swift,330u42,clawesome,1 point,Mon Apr 20 01:05:09 2015 UTC,"Untested, but shows how to create an array of tuples.  Obviously I cant test it, so you might have to play around with it.  https://dpaste.de/pm2k"
swift,330u42,clawesome,1 point,Tue Apr 21 04:47:33 2015 UTC,I believe the code you supplied is only going to show a list of people I follow correct? I could be reading it wrong though. The original task was to show everyone in the database and conditionally show a checkmark to the right of their name if I follow them.
swift,330u42,clawesome,1 point,Tue Apr 21 11:21:59 2015 UTC,"I was able to finally get it to work, but not with async queries. Here is what I have:  https://dpaste.de/FTi0  Do you see any issues with this? I tried to show the spinning animation and lock the screen but it wouldn't even show this screen until it was done getting data, so the animation wouldn't show. It was stuck on my login screen until it was ready to move to the list."
swift,331az2,LetsCodeSomethingFun,3,Sat Apr 18 15:32:04 2015 UTC,let gameScene = GameScene()   This line creates a new GameScene. You need to pass in your existing GameScene to your LevelTwo class when you transition to it.
swift,331az2,jplus,1 point,Sat Apr 18 17:33:06 2015 UTC,http://stackoverflow.com/questions/28184461/how-to-call-method-from-viewcontroller-in-gamescene  I tried doing it like this but it doesnt work for me.
swift,32xe04,david_phillip_oster,6,Fri Apr 17 14:39:04 2015 UTC,"I'm on mobile, what's the alt text?"
swift,32xe04,Lars34,10,Fri Apr 17 16:40:55 2015 UTC,"""I honestly didn't think you could even USE emoji in variable names. Or that there were so many different crying ones."""
swift,32xe04,payco,3,Fri Apr 17 16:55:18 2015 UTC,Well thanks to Swift they're valid!
swift,32xe04,SlayterDev,2,Fri Apr 17 22:54:23 2015 UTC,Ah thank you.
swift,32xe04,Lars34,7,Fri Apr 17 17:44:15 2015 UTC,iOS Safari can see the alt text if you tap and hold a he image.
swift,32xe04,acatnamedbacon,5,Fri Apr 17 21:41:17 2015 UTC,"Holy fuck, I'm one of the lucky 10,000!  Shame I have to open the link out in Safari, but better than nothing!"
swift,32xe04,Drarok,1 point,Fri Apr 17 23:37:23 2015 UTC,Whoa!
swift,32xe04,audiblefart,1 point,Sat Apr 18 04:06:07 2015 UTC,"Uh, well look at that."
swift,32xe04,Lars34,3,Mon Apr 20 15:42:29 2015 UTC,m.xkcd.com for future reference. Lets you see alt text.
swift,32xe04,thedarkwolf,2,Fri Apr 17 18:55:42 2015 UTC,"Haha so true, thats me. should be in /r/programminghumour though"
swift,32xe04,whooyeah,1 point,Fri Apr 17 23:37:26 2015 UTC,Wait... you can use emojis as variable names in Swift?!
swift,32xe04,oddisay,2,Sat Apr 18 02:29:43 2015 UTC,"let 🐈 = ""cat""   Check out the Basics section of The Swift Programming Guide.   “Constant and variable names cannot contain whitespace characters, mathematical symbols, arrows, private-use (or invalid) Unicode code points, or line- and box-drawing characters. Nor can they begin with a number, although numbers may be included elsewhere within the name.”  Excerpt From: Apple Inc. “The Swift Programming Language.” Apple Inc., 2014-10-07T07:00:00Z. iBooks.  This material may be protected by copyright.  Check out this book on the iBooks Store: https://itun.es/us/jEUH0.l"
swift,32xe04,NothingWasDelivered,3,Sat Apr 18 04:24:21 2015 UTC,"You can, but DON'T"
swift,32xe04,cguess,1 point,Sat Apr 18 09:33:25 2015 UTC,Cool. Fun for novelty but not much else! http://www.globalnerdy.com/2014/06/03/swift-fun-fact-1-you-can-use-emoji-characters-in-variable-constant-function-and-class-names/
swift,32xe04,oddisay,1 point,Sat Apr 18 04:45:57 2015 UTC,I need to send this to my boss.
swift,330jnd,greatwhitebullshark,5,Sat Apr 18 09:08:00 2015 UTC,On UITextField there is   var clearsOnBeginEditing: Bool   set this and every time a user begins editing the field it will clear
swift,330jnd,criosist,1 point,Sat Apr 18 10:17:57 2015 UTC,"Yea, that's probably not a great way. Just set the text to an empty string.  Although I'm confused, are you also wondering how to know when you're clicking on the text box? If so, check out the delegates on UITextField."
swift,32yvit,danielgomez22,2,Fri Apr 17 21:27:24 2015 UTC,"I've been developing in C# for ages and have become spoiled to Visual Studio.  When I started getting into iOS development, I was stunned at how archaic Xcode felt.  I found using it maddening and then I found app code.  Swift support is still a work in progress but the overall tool is light years ahead of Xcode in terms of being a top tier IDE.    Xcode is a good ide if you've never used an ide before or don't have a pattern to how you write software.   Xcode takes a ""you don't need customizations, you just need to learn Xcode"" approach where as app code is tremendously configurable and a great tool for devs with habits (good or bad)."
swift,32yvit,digitalburro,1 point,Fri Apr 24 02:36:04 2015 UTC,I know at least one serious indie dev that uses AppCode exclusively for his mac and ios swift and objc projects. He's always trying to get me to switch to it. I tried it but it didn't click with me as much.
swift,32yvit,voidref,1 point,Fri Apr 17 22:30:23 2015 UTC,"Your life will get better with Xcode once more of the problems with the Swift support are worked out. It's great for Objective-C and I feel the same way as you do working in Swift. However, I wouldn't go to AppCode though. Tried it and didn't like it much."
swift,32yvit,Ceribis,1 point,Sat Apr 18 00:09:19 2015 UTC,I find AppCode to be an incredible productivity boon in ObjC and can highly recommend it for that. It isn't quite there yet in terms of Swift support.
swift,32yvit,chaotic_goody,2,Sat Apr 18 02:13:12 2015 UTC,Xcode is not there either though xD
swift,32yvit,vale93kotor,1 point,Sat Apr 18 21:54:30 2015 UTC,"Yeah it crash all the time, I had to make an script that force to close Xcode, clear usedata and then reopen it, because everytime I go out from some storyboards into .swift file BOOM! :( (in Xcode...)"
swift,32yvit,vale93kotor,1 point,Sun Apr 19 22:48:58 2015 UTC,"Lol same here, same here..."
swift,32yvit,vale93kotor,1 point,Mon Apr 20 09:59:08 2015 UTC,"https://gist.github.com/danielgomezrico/9023178c26bf4a7df546 There's the script if you want to use it. I run it with a keyboard shortcut using http://www.bettertouchtool.net/, so I just have to hit the keyboard every time it happens and wala!"
swift,32yvit,ninokierulf,1 point,Mon Apr 20 20:55:32 2015 UTC,Nice :) thanks
swift,32wx83,trusk89,2,Fri Apr 17 11:59:22 2015 UTC,http://nshipster.com/nscoding/
swift,32wx83,exidy,1 point,Fri Apr 17 12:56:46 2015 UTC,"Thanks, I'll give it a read, thank you!"
swift,32wx83,ReasonReader,1 point,Fri Apr 17 13:09:43 2015 UTC,"Read the docs on NSData, NSArchiver and NSUnarchiver."
swift,32wx83,ReasonReader,1 point,Fri Apr 17 15:45:49 2015 UTC,"That did it, thanks!"
swift,32sm8u,swiftMaster,7,Thu Apr 16 11:37:42 2015 UTC,Congrats! Did you have prior programming experience before you began with Swift?
swift,32sm8u,micoro,1 point,Thu Apr 16 13:44:18 2015 UTC,"My background is in Electrical Engineering. I never stuck with one programming language very long though. My last programming experience was with learning Ruby for a month. Ruby was a fun language to learn, but I felt Swift was even funner."
swift,32sm8u,nextwiggin4,2,Fri Apr 17 02:35:33 2015 UTC,"I feel like an idiot, I can't tell if it's not working because of my iPhone (a 5 running 8.3) or if I just can't figure it out. Congrats though!"
swift,32sm8u,Knaledge,-1,Thu Apr 16 22:38:44 2015 UTC,Don't feel like an idiot. You're actually an awesome person! :)
swift,32sm8u,FR_STARMER,2,Fri Apr 17 02:40:43 2015 UTC,"I've reached 322!   Here's a brief rundown of items to explore:    Screen goes dim after approx. 3 minutes (requires touch to regain screen activity) iPhone 6: Ad bar blocks initial placement of mouse (not as bad on iPhone 4~/5~) iPhone 6: Background texture (grass) and banner/header texture do not expand to full width of screen real estate Ad Removal: Purchase workflow initiates iTunes (store) and App Store   Suggestions:    Telegraph speed of elephants by appearance (i.e. red eyes = fast, sleep eyes = slow) Clarify scoring mechanism (each cheese = how many points? Each mouse in flood, post-cheese = how many points? if any) Brief tutorial on movement (could be achieved by placing mouse and cheese on playing field, no elephants, and showing a ""tilt"" icon somewhere on the screen. Once cheese is obtained, first elephant wave starts) Microtransaction for revival (to retain score, effectively) - maybe cute it up by having a spotlight shine down on the flattened mouse with an angelic ""ahhh!"" upon the player electing to use a purchased/earned revive. Scare mechanic: tagging an elephant from behind with mouse causes a scare (which moves all elephants away (radius) from mouse (perhaps scoring mechanic here too?) iPhone controller support for iPad + iPhone combination (when iPad version comes out, if ever)"
swift,32sm8u,35165131,3,Fri Apr 17 01:42:25 2015 UTC,Excellent advice man. I knew the iPhone 6 was going to have some problems. The Xcode simulator would always use the 2x texture... I need to get myself an iPhone 6.   Could you please expand on the Ad Removel item? I thought I had it set up with using alerts to conduct the purchase.   A lot of great suggestions man! I was aiming this game for young children so I kept the game mechanics very basic. Great ideas though! I'll see if I can get the iPad version out soon.   Thanks for the great review! I really appreciate it.
swift,32sm8u,Tomoso,1 point,Fri Apr 17 02:50:01 2015 UTC,"Hey, I know the author of that book! Great guy!"
swift,32sm8u,L33tMasta,1 point,Thu Apr 16 15:10:55 2015 UTC,Please give him my regards.
swift,32sm8u,L33tMasta,1 point,Fri Apr 17 02:50:44 2015 UTC,good job. i need to get my act together and get back on the tutorials.
swift,32sm8u,appsssss,2,Thu Apr 16 19:48:54 2015 UTC,Thanks man. Take it one day at a time.
swift,32vdju,FlaqueEau,3,Fri Apr 17 00:53:06 2015 UTC,Do you have a bridging header? That's really messed me up when I started a few months ago. You have to import the frameworks in an Objective C bridging header then it will be available in your project with no imports needed in swift.
swift,32vdju,jay12701,1 point,Fri Apr 17 03:52:40 2015 UTC,"I don't think I do, how do I make one of those?"
swift,32vdju,jay12701,1 point,Fri Apr 17 16:02:12 2015 UTC,"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html  There are instructions for using a bridging header here. You have to make the header file, import the library you want to include as a regular obj c import, and then setup a few build things to tell Xcode to use that file as a bridging header. Xcode may help you more now by auto filling that stuff, not sure, but that link should show you how."
swift,32vdju,yeskia,2,Sat Apr 18 06:13:00 2015 UTC,I think those files are normally red anyway?
swift,32vdju,luftschiff,1 point,Fri Apr 17 08:29:38 2015 UTC,"Well, I still can't import Skeets into my projects. :/"
swift,32vjsd,maxiedaniels,1 point,Fri Apr 17 01:46:44 2015 UTC,"As for getting the rect to only match the content, you could just add the height of the UIPickerView and the height of the button, and use that value to determine rect height.    As for the orientation, looks like an AutoLayout issue to me.  I would recommend setting your constraints, and then changing their constant value in an animation block in order to get the rect to pop up."
swift,32spq5,Wraithseeker,1 point,Thu Apr 16 12:18:21 2015 UTC,"Yep, it's frustratingly slow for me as well. I wonder if it's got anything to do with hardware? I'm running a 2013 MBP Retina i7 with 8GB RAM. You'd think it'd be enough, but who knows?  On the plus side I'm finally learning iOS function signatures off by heart. It definitely is quicker to type them out than to wait for autocomplete."
swift,32spq5,dr_bum,1 point,Thu Apr 16 12:29:50 2015 UTC,"Yep, I taught my computer was slow."
swift,32spq5,trusk89,1 point,Thu Apr 16 14:17:52 2015 UTC,Agree it feels retarded slow now. At least subsequent compilations are faster now... Give and take? Bah.
swift,32spq5,audiblefart,1 point,Thu Apr 16 15:29:14 2015 UTC,"Good to know it's not my computer. It's super slow for me, sometimes getting hangs on startup too."
swift,32spq5,koalefant,1 point,Thu Apr 16 16:05:44 2015 UTC,"Yup, it's horribly slow for me as well. Objective-C code completion is fine."
swift,32spq5,kielrene,1 point,Thu Apr 16 16:26:47 2015 UTC,This came up earlier this week (or maybe last week?). It's a bug in Xcode that will hopefully be fixed soon.
swift,32spq5,Ceribis,1 point,Thu Apr 16 19:41:33 2015 UTC,"Yeah, it's terrible..."
swift,32spq5,vale93kotor,1 point,Thu Apr 16 20:40:44 2015 UTC,Autocomplete is little bit faster in the new 6.3.1 update. Though still not fast enough.
swift,32spq5,sabiland,-8,Wed Apr 22 11:34:05 2015 UTC,It has always been slow. Stop using Xcode it's really unproductive.
swift,32tva5,sxeteej,3,Thu Apr 16 17:51:27 2015 UTC,"Not sure if it's related, but if you started your Swift app prior to Xcode 6.3, you were using Swift v1.1. Updating to Xcode 6.3 updates the Swift compiler to v1.2 of the language which isn't backwards compatible. There's an option under the Edit -> Convert menu that's called ""To Latest Swift Syntax"". That may or may not help you, but may be worth a shot."
swift,32tva5,Ceribis,1 point,Thu Apr 16 19:20:08 2015 UTC,"Mind that this won't update the methods that changed, nor the new data structures in swift 1.2 (Set for example instead of NSSet in touchesBeganWithOptions ) so you'll have to do it manually but it's a nice start"
swift,32tva5,vale93kotor,2,Sat Apr 18 21:58:00 2015 UTC,What errors do you get?
swift,32tva5,Thumbender,1 point,Thu Apr 16 19:33:58 2015 UTC,"Make sure your parse frameworks are up to date and then type it out again. I suspect that it may return an optional now (user: PFUser?, error: NSError?) for safety"
swift,32sww5,6brane,1 point,Thu Apr 16 13:28:47 2015 UTC,"Sorry again if this isn't the right place or the right questions, but I'd really appreciate some help. I started by trying to implement login with facebook, but facebook docs only seem to show to do that with objective c, and not swift. I found a couple of tutorials online and they are all a little different, and I'm not clear on what the differences are and why it matters.  Plus the latest facebook has known issues, so I'm not sure if the current work arounds are a log term solution. I kept getting errors and couldn't even get past the first step, so I'm feeling very disillusioned right now. :("
swift,32sww5,Ceribis,1 point,Thu Apr 16 13:46:44 2015 UTC,Not sure if this helps. Or this.
swift,32sww5,Ceribis,1 point,Thu Apr 16 19:39:25 2015 UTC,Thanks for the links. My question as it pertains to the facebook login piece is more about how are all these different ways to implement facebook login different? Are there any benefits or use cases for doing it one way over another?
swift,32sww5,Ceribis,1 point,Fri Apr 17 18:24:07 2015 UTC,Ohh. I've never worked with Facebook login so I'm not sure.
swift,32sww5,Ceribis,1 point,Fri Apr 17 23:49:26 2015 UTC,":) no worries. i appreciate the help. you'd think it would be straight forward enough. but its still complicated. i copy pasted everything from the second link you posted, since its like the first hit on google...  but I'm getting multiple errors, even after applying the work around for face books new sdk."
swift,32sww5,Tay-tertot,1 point,Sat Apr 18 01:10:14 2015 UTC,"Array is possible and probably good for a proof of concept. CoreData will hurt your brain if you try to jump into it immediately without really getting a handle on the language and SDK first. You can always change to CoreData later if you want to. Or Realm. Or something else that has better syntax. I haven't used Paper so I'm not sure about this one. I don't know why you'd need Parse. I'm biased towards native development. However, if you just took the iOS 8 and Swift courses why wouldn't you try this native?   You're best off just jumping in and trying things out. You can always change things later once you become more experienced."
swift,32ti8z,kevlario,1 point,Thu Apr 16 16:17:36 2015 UTC,I'm the author; if you guys have any feedback I'd love to hear it.
swift,32scap,pumpkin_lemma,1 point,Thu Apr 16 09:11:22 2015 UTC,"I've looked at your github and it seems you've moved on since this post and managed to render the multicolour rectangle to the screen.  The next step is more complex but try this:   you need to import the Cocos3D maths library (link on Ray's article) When you import these files, you need to generate a bridging header file to use this library in Swift. You need to modify the files to delete any manual memory management (delete autorelease, retain etc) follow the errors! Add some modified code from the tutorial.   I have uploaded my modifications to github to get you to the next step - https://github.com/ChristopherBell/OpenGLES-Reddit-Help"
swift,32t2ye,trusk89,1 point,Thu Apr 16 14:21:58 2015 UTC,"Edit: title should say ""as object for key"""
swift,32reis,WongWray,1 point,Thu Apr 16 02:37:40 2015 UTC,Well that fixed my low-FPS problem.  But the board still updates incorrectly
swift,32qrpf,xStory_Timex,1 point,Wed Apr 15 23:27:59 2015 UTC,You can add an image to a UIButton without involving an imageview. Use the setBackgroundImage(_:forState:) method of UIButton. Hope this helps!
swift,32q5wr,myworkreddit,2,Wed Apr 15 20:41:33 2015 UTC,So assuming that you want to share that txt file so that you can read it by plugging the device to your computer and reading it with iTunes... this is what yo uneed to do:   enable iTunes sharing in your app write your text file to your app's Documents folder (this is very important) plug device to iTunes and read the txt file from iTunes   You cannot share your app's info.plist in iTunes. That is stored in the Library folder of your app if I remember correctly. You need to write the txt file to the Documents folder.
swift,32q5wr,souhoh,1 point,Thu Apr 16 07:57:40 2015 UTC,Thank you for your response. I have done step 1 but step 2 is exactly what I need help with. I can't figure out working code to write a txt file to the documents directory after Googling three different solutions. I'm surprised that it isn't native to the swift language nor easy to implement.
swift,32q5wr,souhoh,2,Thu Apr 16 14:46:07 2015 UTC,"Here is what I wrote to demonstrate how easy it is:  let yourString = ""String contents go here"" let f = NSFileManager() if let u = f.URLForDirectory(.DocumentDirectory, inDomain: .UserDomainMask, appropriateForURL: nil, create: true, error: nil){     let fileUrl = u.URLByAppendingPathComponent(""FileName.txt"")     if yourString.writeToURL(fileUrl, atomically: true, encoding: NSUTF8StringEncoding, error: nil){         println(""Successfully wrote the file to \(fileUrl)"")     } else {         println(""Failed"")     } }"
swift,32q5wr,souhoh,1 point,Thu Apr 16 14:59:47 2015 UTC,"Thank you for providing that. I would insert that into each UIButton action (total of 4) so that each time it gets called and appends to the FileName.txt the contents of yourString?  Example: Question 1 is asked and the user selects UIButtonA as their response, UIButtonA action sets myString = ""A"" for the UIButtonA being selected and myString.writeToURL writes/appends the ""A"" to the existing FileName.txt each time UIButtonA is selected for subsequent questions?"
swift,32q5wr,souhoh,2,Thu Apr 16 16:52:14 2015 UTC,"it is probably best to create a function out of that and pass a few basic parameters such as the selected button ""A"", ""B"", ""C"", ""D"" as a parameter to the function and perhaps the index of the question so your output file will look like this:  1A 2B 3D 4A   or even better  A B D A   to indicate question 1 got A, question 2 got B, 3 got D and 4 got A and so on..."
swift,32oirj,bergsoft,4,Wed Apr 15 13:12:11 2015 UTC,"Here, I wrote this to demonstrate how you can do this:      class Vehicle{         required init(){         }     }     class Car: Vehicle{}     class Bicycle: Vehicle{}      let classType: Vehicle.Type     let index = 1      switch index{     case 0:         classType = Car.self     default:         classType = Bicycle.self     }      let bicycle = classType()      println(bicycle)   hope this helps btw: Delphi rocks, i absolutely love that language, the IDE is amazing as well..."
swift,32oirj,souhoh,1 point,Wed Apr 15 15:00:30 2015 UTC,"Thanks fellow Delphi programmer :)  I have slightly modified your example, but still have problem inside function parameters:  //: Playground - noun: a place where people can play import UIKit  class Vehicle{     required init(){     }      var text: String {         return ""Vehicle""     } }  class Car: Vehicle {     override var text: String {         return ""Car""     } }  class Bicycle: Vehicle {     override var text: String {         return ""Bicycle""     } }  let classType: Vehicle.Type let index = 1  switch index{ case 0:     classType = Car.self default:     classType = Bicycle.self }  let bicycle = classType()  println(bicycle.text)  // Use of undeclared type classType error bellow. I probable need to use some kind of typedef magic, // but not yet sure what. Maybe you know after quick look? func createMyCustomVehicle(vehicleType: classType) -> Vehicle {     return vehicleType() }   UPDATE: this work (maybe helps to someone):  I saw that I mixed variable and type at first. It was a long day...  func createMyCustomVehicle(vehicleType: Vehicle.Type) -> Vehicle {     return vehicleType() }"
swift,32oirj,souhoh,2,Wed Apr 15 15:26:57 2015 UTC,"great to see it working and THello to you too, Sir!"
swift,32oirj,souhoh,1 point,Wed Apr 15 16:35:11 2015 UTC,thank you too!
swift,32o4gc,bearfootrunning,1 point,Wed Apr 15 10:18:30 2015 UTC,"Correct. iOS 7 requires images for launch screens, iOS 8 you are able to use an launch screen nib"
swift,32mu3r,SeanMWalker,2,Wed Apr 15 01:28:32 2015 UTC,"To use .toInt(), you'd need to cast the pf object as a string first. You could also directly cast the pf object to a number."
swift,32mu3r,Rockyroadster,1 point,Wed Apr 15 02:22:02 2015 UTC,Stupid me just now realized that Parses objectId field is a string and I didn't need to convert it. I will keep that in mind for future issues that i'm sure I will run into.
swift,32l07m,xStory_Timex,2,Tue Apr 14 17:11:35 2015 UTC,"Check out PureLayout, really simplifies adding constraints programmatically.    https://github.com/smileyborg/PureLayout"
swift,32l07m,clawesome,1 point,Tue Apr 14 17:17:14 2015 UTC,what about adding a label programatically into a tableview cell's view?
swift,32l07m,mistermagicman,1 point,Tue Apr 14 17:29:06 2015 UTC,You should create a custom subclass for the table cell and add them in the init method.
swift,32l07m,dancemonkey,1 point,Tue Apr 14 22:15:03 2015 UTC,"This Hacking With Swift project takes your through programmatic constraints.  http://www.hackingwithswift.com/read/6/overview  The one immediately afterwards takes you through JSON, basically using the JSON data to plug in the data for table cells.   Maybe combining these two will get what you need?"
swift,32l07m,dancemonkey,1 point,Tue Apr 14 18:56:36 2015 UTC,"func loadData() {     var viewsDictionary: NSMutableDictionary = [:]     let count: Int?  = flavors![""tags""].array?.count     if let ct = count {         for index in 0...ct-1 {             if let fTag = self.flavors![""tags""][index][""name""].string {                 println(fTag)                 var label = UILabel()                 label.text = fTag                 label.setTranslatesAutoresizingMaskIntoConstraints(false)                 label.frame = CGRectMake(50, 50, 0, 0)                 label.sizeToFit()                 var x = ""label""                 var y = String(index)                 var labelName = x + y                 viewsDictionary.setValue(label, forKey: labelName)                 self.contentView.addSubview(label)              }         }      }     for label in viewsDictionary {         contentView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat(""H:|[\(label)]|"", options: .allZeros, metrics: nil, views: viewsDictionary))     }  }   this code gives me a sigbrt NSException"
swift,32l07m,dancemonkey,1 point,Tue Apr 14 20:56:26 2015 UTC,"SIGABRT should come with a (marginally useful) set of error messages in the console window. At the very least it tells you SOMETHING, even if it's arcane and hard to decipher. While I'm no expert in Swift I'm something of an amateur in Swift's error messages because of how many I've seen, if you want to paste it."
swift,32m3g2,xStory_Timex,1 point,Tue Apr 14 21:53:46 2015 UTC,"You use the variable named label to hold both a UILabel and a key to your dictionary. While the scope is different, this is confusing.  In your viewsDictionary you add keys which are strings and then refer to it as an NSNumber."
swift,32m3g2,zqwzzle,1 point,Tue Apr 14 22:31:09 2015 UTC,well in the for loop label represents an index in the array.  like i said it prints 0 so what should i do to test if it is 0?  I basically want the first label to adhere to one constraint while the others adhere to different constraints. IE placed ext to each other horizontally with a spacing inbeteween them
swift,32m3g2,tonygoold,1 point,Tue Apr 14 22:33:57 2015 UTC,"Consider these two lines:  var labelName = String(index) viewsDictionary.setValue(label, forKey: labelName)   Because you later try to compare using as NSNumber, it crashes, because the keys are Strings. The simplest thing to do without altering the rest of your code is to use implicit conversion to NSNumber instead, and you can combine them into a single line with simpler syntax:  viewsDictionary[index] = label"
swift,32m3g2,LetsCodeSomethingFun,1 point,Tue Apr 14 23:20:19 2015 UTC,"It's because the keys in your dictionary have a type of String and not NSNumber.  You can either compare the label using string comparison directly, if label == ""0"" { or you can get an Int value from String and check the number instead if label.toInt() == 0 {."
swift,32m3g2,lyinsteve,1 point,Tue Apr 14 22:42:34 2015 UTC,"my new issue is why does it say NSDictionary does not have a member named keys? also, i got it to work with this code      for (labelKey, label) in viewsDictionary {         println(label)         var spacing = 20         var labelSize = label.width         var currentLabelNumber = 0         var nextLabelNumber = 1         var currentLabel: AnyObject? = viewsDictionary[currentLabelNumber]         var nextLabel: AnyObject? = viewsDictionary[nextLabelNumber]         if labelKey as String == ""0"" {             contentView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat(""H:|-\(spacing)-[\(label)]"", options: .allZeros, metrics: nil, views: viewsDictionary))         }         else {             contentView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat(""H:[\(currentLabel)]-\(spacing)-[\(nextLabel)]"", options: .allZeros, metrics: nil, views: viewsDictionary))             currentLabelNumber++             nextLabelNumber++         }     }   but the formatting contraints are now the problem.   Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Unable to parse constraint format:  Expected a view. View names must start with a letter or an underscore, then contain letters, numbers, and underscores.  H:|-20-[<UILabel: 0x7fe7ab4f6b20; frame = (50 50; 23.5 20.5); text = 'est'; userInteractionEnabled = NO; layer = <_UILabelLayer: 0x7fe7adc0d3e0>>]"
swift,32kp32,benjaminhviid,5,Tue Apr 14 15:53:00 2015 UTC,Apple's documentation will tell you everything you need to use Obj-C in Swift.
swift,32kp32,CleverError,1 point,Tue Apr 14 17:33:14 2015 UTC,Thank you for the link. I have got it working now.
swift,32kp32,mistermagicman,2,Thu Apr 16 15:45:10 2015 UTC,"You don't need to deal with bridging from objective c. Use cocoapods to install, make sure you have use_frameworks! In your Podfile, then import ios-ntp wherever you need it and interact with it as a Swift API."
swift,32kp32,mistermagicman,1 point,Tue Apr 14 22:17:21 2015 UTC,"I did manage to do the bridging but I still need a couple other objective-c API's, so cocoapods sounds interesting. Does it work with all type of projects (I'm making a single view application) or only with cocoa applications?"
swift,32kp32,mistermagicman,1 point,Thu Apr 16 15:45:12 2015 UTC,"It works with anything. Cocoa is the name of the underlying library of iOS/OS X APIs, so it's not for specific projects, it's for anything."
swift,32i1y8,RichKatz,7,Mon Apr 13 23:32:33 2015 UTC,"I've really enjoyed working with it. But after 3 reasonably large projects (including an Apple Watch one) I've really come to dislike optionals and all the problems that flow from them. They really make the code unreadable, hard to follow, and explain, especially to newbies.  It's one of those fiddly features where you feel like you're constantly fighting the compiler and the rules shift with each new language release."
swift,32i1y8,fubarx,3,Tue Apr 14 02:25:51 2015 UTC,"It gets much easier once you start building with optionals and just forgetting that null exists. You have to do the same error checking either way, you just can't forget about optionals at compile time."
swift,32i1y8,DaemonXI,1 point,Tue Apr 14 14:49:49 2015 UTC,Is it strange that Java isn't there?
swift,32i1y8,ProlificPat,3,Tue Apr 14 06:19:03 2015 UTC,"This is ""most loved."" Java shows up third in ""most used."""
swift,32kwfr,masterguide,1 point,Tue Apr 14 16:44:53 2015 UTC,"You'd certainly be able to learn a lot (the labs are far more valuable than the sessions generally; you can see the sessions online, but nothing replaces getting to actually ask the Swift and Cocoa team engineers questions directly). Whether it's worth it… that mostly depends on what your budget is like. I don't think anyone can make that call for you."
swift,32kwfr,Catfish_Man,2,Tue Apr 14 17:33:50 2015 UTC,Thanks for the reply. My company is paying for the trip but I wanted to make sure I walk away with something before I blow all my Professional Development money for the year.
swift,32kwfr,shitidiotturtle,1 point,Tue Apr 14 18:05:20 2015 UTC,"If you have the budget I would say its definitely worthwhile. I've been to a few other iOS dev conferences (in the UK) and found them to not have much useful content, but WWDC is pretty much non stop useful  And leaving out the ability to talk to apple engineers, its a week of learning new stuff and going over best practices, in my experience that just doesn't happen in a full time dev job unless you get away from the office"
swift,32kwfr,sneeden,1 point,Tue Apr 14 18:56:53 2015 UTC,For sure. Especially the labs.
swift,32kwfr,spokenbits,1 point,Tue Apr 14 21:13:00 2015 UTC,"I have attended a couple of WWDC and they are definitely packed with new stuff, and tons of things to learn. I recommend it 100%. As mentioned the labs are special opportunities to grab expert guidance."
swift,32kvd6,SeanMWalker,4,Tue Apr 14 16:37:06 2015 UTC,The argument list has probably changed. Try re-typing and see what auto-complete has to say.
swift,32kvd6,SheepWheatOre,1 point,Tue Apr 14 18:17:23 2015 UTC,"Found a similar issue here.  For him, it was a problem with optionals.  If that's no help, try looking into XCode's built-in converter; it helps convert code into the newest Swift syntax.  Access it via Edit -> Convert  Hope this helps"
swift,32kvd6,WongWray,1 point,Tue Apr 14 18:16:38 2015 UTC,looks like your doing Rob's course on Udemy. Had the same problems. I solved it by deleting the types of the variables in the function. So instead of (error: NSError!) I wrote error instead and so on. I don't know for sure if that is the proper way to fix that problem but after that it worked.   Hope I could help you out.
swift,32kvd6,mick1203,1 point,Tue Apr 14 19:51:43 2015 UTC,"Yep, trying to. That seemed to work. I have another question for you.  override func viewDidLoad() {     super.viewDidLoad()      var query = PFUser.query()      query!.findObjectsInBackgroundWithBlock({     (objects, error) -> Void in           self.users.removeAll(keepCapacity: true)         for object in objects{             var user:PFUser = object as! PFUser             var  newVar = object.username             self.users.append(newVar)          }         self.tableView.reloadData()      })   Why all of a sudden does this give ""[AnyObject]? doesn not have a member named Generator"" around the ""for object in objects"" line?"
swift,32kvd6,mick1203,1 point,Wed Apr 15 00:20:32 2015 UTC,"I think I added a ""!"" at the end of objects to unwrap it. Try that."
swift,32kuj5,filmoe,1 point,Tue Apr 14 16:31:11 2015 UTC,"Just wanted to say technically it only println() if and only if I assign the let url = NSURL(string: ""http://www.aWebsite.com/myImage.jpg""). If I do it any other way nothing prints out and I get the 'fatal 'error' message"
swift,32kuj5,mistermagicman,2,Tue Apr 14 16:33:37 2015 UTC,"If you're dealing with images loaded from the web, you really should check out SDWebImage. It's incredible, highly tested, used by companies like Facebook, and super easy to use. You should install using CocoaPods, if you're not familiar with them yet I highly recommend you learn :)"
swift,32kuj5,Komputer9,1 point,Tue Apr 14 23:51:53 2015 UTC,"Just so you know exactly what's failing, try doing it with avoiding the implicit unwrapping:  if let urlString = self.urlPhoto {     if let url = NSURL(string: urlString) {         let data = NSData(contentsOfURL: url)          if let data = data {             if let image = UIImage(data: data) {                 mainImage.image = image             } else {                 println(""Something went wrong coverting NSData --> UIImage"")             }         } else {             println(""Something went wrong loading the data"")         }     } else {         println(""Something went wrong converting String --> NSURL"")     } } else {     println(""Something went wrong getting the URL string"") }   That shouldn't cause an exception, and should tell you exactly what's unexpectedly nil. (By the way, I wouldn't generally recommend you have large nested error checking like in the above, but it helps for debugging!)"
swift,32kuj5,LetsCodeSomethingFun,1 point,Tue Apr 14 16:47:53 2015 UTC,"So I implemented that into my code and it said ""Something went wrong getting the URL string"". I don't understand though whats going on because I assign it a value above. I appreciate the help but maybe you could look at my whole code?         import UIKit        class viewEventPage: UIViewController {            @IBOutlet weak var mainImage: UIImageView!             var currentEventVar : String?           // Assigned a value in prepareForSegue() in different swift file            var currentEventId : Int?           // Assigned a value in prepareForSegue() in different swift file            // Will be assigned value in accessDatabase function           var urlPhoto : String?                var id_ : Int?            func accessDatabase (var firstName : String) {                let myUrl = NSURL(string: ""http://localhost:8888/NatalieLaddPhotoApp/eventsPhotosJson.php"");               let request = NSMutableURLRequest(URL:myUrl!);               request.HTTPMethod = ""POST"";                let postString = ""id=\(self.currentEventId!)"";                request.HTTPBody = postString.dataUsingEncoding(NSUTF8StringEncoding);                let task = NSURLSession.sharedSession().dataTaskWithRequest(request) {                   data, response, error in                    if error != nil {                       println(""error=\(error)"")                       return                   }                   var err: NSError?                   var myJSON = NSJSONSerialization.JSONObjectWithData(data, options: .MutableLeaves, error:&err) as? NSArray                    if let parseJSON = myJSON {                       var eventName = parseJSON[0] as? String                       self.urlPhoto = eventName!                       println(self.urlPhoto)                    }               }                   task.resume()            }              override func viewDidLoad() {               super.viewDidLoad()               // Do any additional setup after loading the view.                 self.title = currentEventVar!                 accessDatabase (""Jermel"")                 if let urlString = self.urlPhoto {                   if let url = NSURL(string: urlString) {                       let data = NSData(contentsOfURL: url)                        if let data = data {                           if let image = UIImage(data: data) {                               mainImage.image = image                           } else {                               println(""Something went wrong coverting NSData --> UIImage"")                           }                       } else {                           println(""Something went wrong loading the data"")                       }                   } else {                       println(""Something went wrong converting String --> NSURL"")                   }               } else {                   println(""Something went wrong getting the URL string"")               }           }            override func didReceiveMemoryWarning() {               super.didReceiveMemoryWarning()               // Dispose of any resources that can be recreated.           }                   /*           // MARK: - Navigation            // In a storyboard-based application, you will often want to do a little preparation before navigation           override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {               // Get the new view controller using segue.destinationViewController.               // Pass the selected object to the new view controller.           }           */        }"
swift,32kuj5,Komputer9,2,Tue Apr 14 17:20:00 2015 UTC,"In your accessDatabase function, the dataTaskWithRequest is asynchronous meaning that the code inside the body doesn't run right away, and it'll only run when the request is finished.   Since the dataTaskWithRequest takes a short amount of time to finish, by the time your code hits the if let urlString = self.urlPhoto {... part, the request still isn't done so there still isn't any value in self.urlPhoto.  To get it to work properly, you can move that whole block inside dataTaskWithRequest, right under where you have println(self.urlPhoto)  If you look at your debug statements, you'll see that ""Something went wrong getting the URL string"" appears BEFORE the photo url, which shows you the order of execution in your code."
swift,32kuj5,sabiland,1 point,Tue Apr 14 17:44:52 2015 UTC,"Okay I understand paragraphs 1, 2, and 4 of your reply. However paragraph 3 I dont understand. So take which part of the code and place it below the     println(self.urlPhoto)     ?  When I do this it outprints the     println(self.urlPhoto)      properly but it doesnt fix my problem of  ""Something went wrong getting the URL string"". How do I get it to run so it properly assigns my UIIamge object the correct data?"
swift,32jh1r,xlogic87,2,Tue Apr 14 07:50:38 2015 UTC,There's a great new library called iOS Charts
swift,32jh1r,lyinsteve,1 point,Tue Apr 14 11:08:05 2015 UTC,This looks great! Do you know if there is any good tutorial covering this framework?
swift,32jh1r,lyinsteve,1 point,Tue Apr 14 13:14:10 2015 UTC,"It's fairly new, but it's made to work exactly like the Android version -- so you might be able to follow a tutorial for MPAndroidChart!"
swift,32jh1r,criosist,1 point,Tue Apr 14 15:15:06 2015 UTC,"The ""Best"" is probably Shinobi Charts."
swift,32ja43,ProlificPat,3,Tue Apr 14 06:14:41 2015 UTC,UIApplication has a property called idleTimerDisabled you can use for this.
swift,32ja43,JimDabell,1 point,Tue Apr 14 06:52:47 2015 UTC,Greatly appreciated mate!
swift,32jqzh,TheNebulizer,3,Tue Apr 14 10:22:07 2015 UTC,"You should, as much as possible, avoid using the NS* collection types within Swift. You should also make use of Swift's built-in mutability semantics.  In this case, this should work for you:  let defaults = NSUserDefaults.standardUserDefaults() if var words = defaults.objectForKey(""WORDS"") as? [String] {    // add to the words array and then    defaults.setObject(words, forKey: ""WORDS"") }"
swift,32jqzh,lyinsteve,1 point,Tue Apr 14 10:52:41 2015 UTC,"I'm not familiar with this code, do you think you could just explain what each line is doing. Right now it is working to set the array, but nothing is being saved (ie I quit the app the array is not saved)"
swift,32jqzh,lyinsteve,1 point,Tue Apr 14 18:54:03 2015 UTC,"Oh, I was assuming that, somewhere else, you're creating that array and setting the values, then saving to user defaults. What you might want to do, instead, is use the nil-coalescing operator, ?? to create the array if it didn't already exist in user defaults.  That'd be something like this:  let defaults = NSUserDefaults.standardUserDefaults() var words = defaults.objectForKey(""WORDS"") as? [String] ?? [String]() // this will set `words` to an empty array if `objectForKey` came back with `nil`. // ...here's where you add to the words array... // when you're done, save it to the defaults. defaults.setObject(words, forKey: ""WORDS"")"
swift,32jqzh,shitidiotturtle,1 point,Tue Apr 14 18:58:54 2015 UTC,"Now that's giving me the error ""NSArray is not a subtype of NSMutableArray"" maybe I should explain what I'm doing. I have a method that will add a lot of words to an array. Throughout the app the array deletes words from this big array, and I need the app the save this and remember which words are still in the array. What I initially did was this   if(NSUserDefaults.standardUserDefaults().objectForKey(""WORDS"") != nil)     {      words = ((NSUserDefaults.standardUserDefaults().objectForKey(""WORDS""))) as NSMutableArray      if(words.count == 0)     {         reset()     }   }        else {      reset()  }   and in the function that is called at the end of the game   NSUserDefaults.standardUserDefaults().setValue(words, forKey: ""WORDS"") NSUserDefaults.standardUserDefaults().synchronize()  This seemed to work, but when I try to call the array back from NSUserDefaults it isn't mutable so I removing objects from it crashes the app."
swift,32jqzh,lyinsteve,1 point,Tue Apr 14 19:13:27 2015 UTC,"you can't get mutable objects out of user defaults, when you passing in an NSMutable* class you will get back its immutable equivalent (I think user defaults copies the object which returns an immutable version)  Create a mutable copy after retrieving the object"
swift,32jqzh,omfgtim_,1 point,Tue Apr 14 20:21:15 2015 UTC,"For the time being, ignore the fact that NSMutableArray exists.  In Swift, mutability is determined solely by how a variable is declared.  If an array is declared  var array ...   Then it is mutable. End of story.  You seem to be casting to NSMutableArray for no reason -- you should be casting to [String], which is a type-safe Swift array, and declaring the variable using var, so it's mutable.  Also, it seems you're misunderstanding how NSUserDefaults works. NSUserDefaults isn't a place to store references to arrays to update later; NSUserDefaults is a cache to write data to the disk. As such, there's no guarantee that the container you get back will be mutable.  You must re-set the array in NSUserDefaults when you update it; NSUserDefaults makes copies when it returns data to you."
swift,32iwm9,AxeEffect3890,1 point,Tue Apr 14 03:46:29 2015 UTC,Which framework are you using? This code seems to work using AVFoundation in a Playground: Screenshot
swift,32iwm9,mklbtz,1 point,Tue Apr 14 05:32:04 2015 UTC,I was running it under 'import MediaPlayer' and everything else worked. I imported AVFoundation and the error went away until I tried to test it then it popped up again
swift,32iwm9,mklbtz,1 point,Tue Apr 14 12:29:44 2015 UTC,Have you checked out MPVolumeView? It's presents a slider for controlling system volume output.
swift,32h0u0,zoetebeer,5,Mon Apr 13 19:01:49 2015 UTC,Can you give an ELI5 on where a dev could use this? Thanks!
swift,32h0u0,blindsideboarder,1 point,Mon Apr 13 21:47:59 2015 UTC,"Hi, there is an example on github next to Forward.swift file.   So basically instead of doing dispatch_async(), dispatch_once() etc in your app you could use my replacement forward_async which gives same functionality but is connected to closures as it can be invoked using my forward operator >>> used on any closure with signature Void -> Void.  I wanted to make GCD calls more elegant. I dont like that they are called as global functions because this concept for me is not fitting here.  you can just easily dispatch any closure as before but making closure (block) more of a key actor in this call by writing closure first { } and >>> forwarding it.  It is a first version. If I will have more time I will make it chainable. I was just having fun with Swift, so if anyone wants to write it that way go ahead and do it :)"
swift,32ithg,masterm,3,Tue Apr 14 03:17:39 2015 UTC,"init? function of DeathStarBuilder takes a function (called buildClosure) and calls the function with itself. Because the buildClosure function is the last argument of the init function, you can use trailing closure syntax  Without trailing closure syntax, you can call DeathStarBuilder's constructor with standard function syntax:   let empire = DeathStarBuilder({ builder in      builder.x = 0.1      builder.y = 0.2      builder.z = 0.3 })   The thing that is passed to the init function is called an anonymous function or a closure. You could also implement this as a basic named function, and pass it to the init, they are essentially the same.  func initialize_builder(builder: DeathStarBuilder) {      builder.x = 0.1      builder.y = 0.2      builder.z = 0.3 } let empire = DeathStarBuilder(initialize_builder)   Hope this helps."
swift,32ithg,teequ,1 point,Tue Apr 14 05:38:46 2015 UTC,thank you so much! It all makes sense now
swift,32f06e,sabiland,4,Mon Apr 13 06:42:07 2015 UTC,"Thank goodness this a bug, I've given up on code completion since I can just type it faster then it can show me a result..."
swift,32f06e,sutabi,3,Mon Apr 13 12:31:49 2015 UTC,"On a side note, is there any way to enable autocompletion of Swift enums? For example, if the argument of a method is UITableViewCellStyle I could just type . and have it show me the list of options?"
swift,32f06e,yeskia,2,Mon Apr 13 14:37:41 2015 UTC,"This isn't possible right now, even though it's deeply annoying. On the flip side, it has at least helped force me to memorise the various important enums :)"
swift,32f06e,twostraws,2,Mon Apr 13 16:01:24 2015 UTC,My swift linter actually crashes like every 10 minutes. If anyone knows a fix I'd love to hear it too.
swift,32f06e,supplymydemand,2,Mon Apr 13 07:13:38 2015 UTC,"Deleting derived data -> ModuleCache, AppFolder helps ?"
swift,32f06e,ReadyplayerTwo,2,Mon Apr 13 07:55:00 2015 UTC,"jesus H christ.    you have no idea how much this makes me rage.  I feel better that its not just me, i was about to toss my mac out the door and get a new one."
swift,32f06e,twostraws,2,Mon Apr 13 14:24:19 2015 UTC,"No solutions that I've seen, but you're right – it's shockingly bad. Curiously, it wasn't anywhere near this bad in any previous release, even up to the 6.3 betas. At least this means it's probably something small, and a 6.3.1 fix can come out to address it."
swift,32f06e,Wraithseeker,1 point,Mon Apr 13 16:02:10 2015 UTC,"Having the same issues as well, it takes like 3-4 seconds for the autocomplete to work. Really frustrating!"
swift,32f06e,CQH,1 point,Wed Apr 15 05:29:36 2015 UTC,Objective C sure is awesome. Too bad it's going away.
swift,32fedf,legnus,2,Mon Apr 13 10:21:43 2015 UTC,"Seems you're experiencing first hand why optional methods in a protocol is a dumb design decision. At any rate, your instance type in writeMe should probably be X, not ParentClass."
swift,32fedf,ztj,2,Mon Apr 13 14:06:07 2015 UTC,"pe in writeMe should probably be X,    Exactly what I'm thinking, it doesn't make sense to have the parent here."
swift,32fedf,john_alan,0,Mon Apr 13 15:25:59 2015 UTC,Try with a ?:   var me = instance.doSomething?()
swift,32erdf,bulldogs93,1 point,Mon Apr 13 04:53:43 2015 UTC,I've also had problems following their documentation regarding Facebook implementation. It could be outdated so we might just have to wait until they update it
swift,32erdf,Epick_362,1 point,Mon Apr 13 07:16:18 2015 UTC,"When I have this alternative, it crashes the app at start saying ""Thread 1 EXC BAD INSTRUCTION""   PFFacebookUtils.initializeFacebookWithApplicationLaunchOptions(launchOptions!)   I am not sure what to do."
swift,32erdf,TokyoXtreme,1 point,Mon Apr 13 07:42:33 2015 UTC,"Literally every single step to do anything in Parse via Swift results in errors requiring a Google search or visit to Stack Overflow. Of course I have the exact same issue as you, and found this thread through a Google search. Next stop, Stack Overflow I guess. Sigh."
swift,32erdf,klmitchell2,1 point,Thu May 14 04:17:24 2015 UTC,"Did any one find a fix for this? Im using cocoa pods and I am getting this error when using: [PFFacebookUtils initializeFacebookWithApplicationLaunchOptions:launchOptions];  The error is: no known class method for selector initializeFacebookWithApplicationLaunchOptions  This is in objective-c, though. Not sure if the SDK is out of date or what."
swift,32camd,canhelp,2,Sun Apr 12 15:56:15 2015 UTC,"Awesome thanks man!  Could you explain the code more?  I'm learning swift and I think I'm getting the hang of the core concepts of the language like variables, and loops and stuff. though making something like this I wouldn't know where to start..."
swift,32camd,Spoooooooooooooky,1 point,Sun Apr 12 22:25:49 2015 UTC,"Hey, not OP but it sounds like you are just starting out programming. I would suggest starting with a language to grasp the concepts. Python would be a great starting point. I feel the learning curve into MVC and app development would be pretty tough without prior programming experience. Cheers!"
swift,32camd,earthwalkers,1 point,Thu Apr 16 13:26:32 2015 UTC,"Hey! thanks for the suggestion. The reason I started swift is that it has Xcode and a UI editor. Also Swift seems to have pretty simple in terms of syntax.   I think with every language there is the core part with variables and loops. And I want to step into something slightly more complex. Should I look into  doing tutorials for specific things I want to make (stopwatch, notes app, animation, ect.) or should I learn more concepts?  My programming experience is mostly html, css, jquery and thus recently a bunch of swift tutorials"
swift,32camd,Spoooooooooooooky,2,Thu Apr 16 13:55:18 2015 UTC,"On mobile, but commenting to save for later. Very excited for this!"
swift,32camd,tacojohn44,1 point,Sun Apr 12 23:37:25 2015 UTC,"How does this ""App of the Month"" work?"
swift,32camd,InternetsTad,1 point,Sun Apr 12 16:15:00 2015 UTC,I started learning iOS development sometime back.. And I am building an app everymonth to learn different iOS concepts. You can take a look at them here http://shrikar.com/how-to-make-an-app
swift,32camd,InternetsTad,1 point,Sun Apr 12 17:06:17 2015 UTC,Ah - awesome! I've just started learning swift (couple of weeks in).
swift,32camd,crozyguy,0,Sun Apr 12 17:16:47 2015 UTC,"If your contribution to reddit consists mostly of submitting links to a site(s) that you own or otherwise benefit from in some way, and additionally if you do not participate in discussion, or reply to peoples questions, regardless of how many upvotes your submissions get, you are a spammer. If over 10% of your submissions and conversation are your own site/content/affiliate links, you're almost certainly a spammer.   Please have some shame. Stop spamming reddit and stop selling those nonsense affiliate courses"
swift,32bv7c,bigirishbreakfast,2,Sun Apr 12 13:14:07 2015 UTC,"I've personally never seen a scrolling background implemented this way, I've always used two identical background sprites.  Some Swift/pseudo code  to demonstrate:  func moveBackground()  {     background1.position = CGPoint(background1.position.x, background1.position.y-5) // moves background downward by 5 pixels      background2.position = CGPoint(background2.position.x, background2.position.y-5)      if (background1 falls below/above the screen) {         //move background1 directly above background2 (if scrolling downward)     }      //same 'if' statement for background2 }   This can obviously be done via SKActions, like you're attempting, with the same logic.  Good luck"
swift,32bv7c,WongWray,1 point,Tue Apr 14 18:30:46 2015 UTC,"var bgTexture = SKTexture(imageNamed: ""spacebackground"") var movebg = SKAction.moveByX(0, y: -bgTexture.size().width, duration: 9) var replacebg = SKAction.moveByX(0, y: bgTexture.size().width, duration: 0) var moveForever = SKAction.repeatActionForever(SKAction.sequence([movebg, replacebg]))  for var i:CGFloat=0; i<3; i++ {      var scrollbg = SKSpriteNode(texture: bgTexture)     scrollbg.position = CGPoint(x: bgTexture.size().width/2 + bgTexture.size().width * i, y: CGRectGetMidY(self.frame))     scrollbg.size.height = self.frame.height      scrollbg.runAction(moveForever)      self.addChild(scrollbg) }   Try it now."
swift,32bovo,matteoman,5,Sun Apr 12 11:40:01 2015 UTC,"I'm not fully up on Swift, but immutable usually takes up less space in memory. Mutable means you have to either a.) allocate enough space from the beginning for all possible elements or b.) dynamically resize the element in memory when it's changed. This usually means a few extra bits here and there.  (just guessing here) There could also be some system-level caching going on. If you know the data won't change the compiler and runtime may be able to more aggressively cache it."
swift,32bovo,cguess,1 point,Sun Apr 12 11:50:57 2015 UTC,"I don't think mutability changes the memory allocation process of structs because they are fixed-size, mutable or not, from beginning to end of the program's execution. Even structs with mutable arrays and dictionaries inside have a fixed size (each field occupies a pointer in size).  Arrays, though, do in fact change size and the compiler may optimize the allocation process when they are defined as immutable fields or locals, though."
swift,32difl,bulldogs93,1 point,Sun Apr 12 22:00:39 2015 UTC,Remove the PFUser! and NSerror? declaration of user and error in the parameters section of the closure.  I had this issue when I upgraded and did this and it seems to have fixed it.  (No idea why the swift update broke this.)
swift,32difl,Egodude,1 point,Sun Apr 12 23:46:12 2015 UTC,"So I would have:  PFUser.logInWithUsernameInBackground(usernameField.text, password:passwordField.text) {                 () -> Void in   I tried that in it wants parameters."
swift,32crj9,josh_the_nerd,1 point,Sun Apr 12 18:21:35 2015 UTC,Are you asking for help regarding the formatting portion or the copying to pasteboard portion?
swift,32crj9,mklbtz,-2,Tue Apr 14 05:45:21 2015 UTC,Just program it to print the formatted data to the console at first with println(). After that you can easily add copy/paste support (assuming that's possible).
swift,32ckqq,MildlyFunnyMan,2,Sun Apr 12 17:24:50 2015 UTC,"Just a guess but check case of the image name, sim is case insensitive, device is sensitive   Also: a stack trace will tell you where the crash is, run from xcode with exception breakpoint set and you'll hit it at the line with the bug"
swift,32ckqq,shitidiotturtle,1 point,Sun Apr 12 20:56:17 2015 UTC,"Oh man, had a capital Png instead of png. think that should do it? think maybe like an if image != nil {} would gaurentee a not crash?"
swift,32ckqq,dancemonkey,2,Sun Apr 12 22:21:08 2015 UTC,"I think that's right, I had a suspicion it had to do with the image (because that's the only force unwrapped nil) but I didn't catch the capital Png (and wasn't aware that the sim was case-insensitive, good to know!).   In my experience I always look for a ""found nil while unwrapping"" when I get a crash like that but the fact that it was working in simulator had my flummoxed.   This is why I always come back and read to see if someone smarter than me solved the problem!"
swift,32ckqq,shitidiotturtle,2,Mon Apr 13 00:05:19 2015 UTC,For something like this which is a bundled image its probably ok to force unwrap once you have the naming right and have tested on device  Otherwise use the if let image = ... pattern to show the extra sharing option   BTW with image named convenience methods you don't need to use the extension (as long as it's a standard image type file extension)
swift,32bbbo,Dark_Angelas,1 point,Sun Apr 12 07:29:49 2015 UTC,"What do you mean by ""add an enum""? Are you trying to add a variable of enum type, or are you trying to declare a new enum? If the former: var foo:MyEnum, just like any other variable. If the latter, you have to do it outside the protocol."
swift,32bbbo,Catfish_Man,1 point,Sun Apr 12 07:39:51 2015 UTC,"Hi,  I was going to have classes declare their own enumeration with the enum name of 'cardType'. I just wanted to whatever class that uses the protocol have the same enumeration name.  For example:   class Test: Card {  enum cardType {       case A       case B  }  }   class Test2: Card {  enum cardType {       case Z       case Y  }  }"
swift,32bbbo,dotsau,1 point,Sun Apr 12 07:58:32 2015 UTC,enum CardTypeEnum {   case A   case B }  protocol Card {   var cardType: CardTypeEnum { get set } }
swift,32bbbo,Catfish_Man,1 point,Sun Apr 12 10:52:42 2015 UTC,Ah I see. I think the best you'll be able to do is an associated type; I don't think there's a way to specifically restrict it to being an enum. I think that should be fine though.
swift,32bbbo,criosist,1 point,Sun Apr 12 17:41:47 2015 UTC,You just place it outside the protocol and anything that includes the file will have access to it
swift,32bbbo,JustSumMe,1 point,Sun Apr 12 08:03:27 2015 UTC,Looking over this post it sounds to me you could use polymorphism? http://sketchytech.blogspot.com/2014/09/polymorphism-in-swift-xcode-601.html
swift,327m6g,maratan33,3,Sat Apr 11 07:33:04 2015 UTC,"It's a bit different in Swift. All the files within your project belong to the same namespace, so if you were to declare the same class in two different files in your project, you would get a redeclaration error.  How namespaces work in Swift is that it works on a per framework level. Let's say for some reason, you were building a Sprite Kit game and you made your own class named SKSpriteNode. In order for you to reference your own copy of it, you don't need any prefixes, but if you wanted to use Sprite Kit's version, you would go SpriteKit.  Example:  import SpriteKit  class SKSpriteNode {     var peanuts = ""Yes Please!"" }   SKSpriteNode() // your own SKSpriteNode SpriteKit.SKSpriteNode() // SpriteKit's SKSpriteNode   So with Swift, you don't need to build frameworks that start with a two or three letter prefix because clashes can be resolved by specifying a namespace.   If you wanted to organize your code, you can still move files into different groups and organize it that way."
swift,327m6g,LetsCodeSomethingFun,1 point,Sat Apr 11 14:16:56 2015 UTC,"That's only within compiled frameworks though right? So for instance, if you pulled in the source of a library from github without compiling it into a separate library, then you could get conflicts?"
swift,327m6g,exorcyze,2,Sat Apr 11 16:15:47 2015 UTC,"Yes, if you use source directly and not frameworks, then you can get namespace conflicts."
swift,327m6g,LetsCodeSomethingFun,1 point,Sat Apr 11 23:01:31 2015 UTC,"If you drag the files into your project in the file navigator, xcode will add them to be compiled.  Or you can choose the project in file navigator, choose your target, go to ""build phases"", and individually add the files to ""compile sources"""
swift,327m6g,mynameismatthew,1 point,Sat Apr 11 17:58:01 2015 UTC,"Right, so if they're compiled as part of my project ( just the source files added ), then they go under the project namespace. If I add a framework or an external project, then it counts as separately compiled and thus gets it's own namespace.  That was my understanding and the target of my previous question - is that correct?"
swift,327m6g,exorcyze,1 point,Sat Apr 11 21:27:05 2015 UTC,You got it. Sorry for the late reply.
swift,327m6g,mynameismatthew,1 point,Wed Apr 29 03:29:46 2015 UTC,"What do you mean by groups? How can I put all my models into the ""namespace"" (or analog) Models?"
swift,32735z,StudioSevenDesigns,2,Sat Apr 11 03:37:27 2015 UTC,You can't call a method like this for the initial value of a property. You'll need to move arr.count into a method or create a getter for the property.   arc4random does not take any arguments so passing it a number or a string will not work. You want to use arc4random_uniform(cardsLeft)
swift,32735z,CleverError,1 point,Sat Apr 11 04:49:27 2015 UTC,"Okay, so I think I fixed the number generator. I still don't understand how to set a variable to the number of items left in an array.   This is what I have now: http://imgur.com/izZvMkB"
swift,32735z,jasamer,2,Sat Apr 11 04:54:34 2015 UTC,"You can't refer to other properties of a class when assigning default values to a property. If you need to compute the initial values for properties, do it in a constructor.  Computed properties aren't really a good answer to your specific question, but they just might do what you want anyway (which is computing a property based on something else whenever you access the property, and not just setting the initial value of a property)."
swift,32735z,cplr,1 point,Sat Apr 11 10:44:39 2015 UTC,It looks like you want to make those computed properties. You can't define a var to be equal to another variable in the class definition. Search for computed properties in the docs.
swift,324k0v,appsssss,1 point,Fri Apr 10 15:01:48 2015 UTC,"Good idea, but there are times when quite early on it is impossible to get past due to the enemies taking up the entire width of the screen!  Good job though, keep it up."
swift,324k0v,Opelle,1 point,Fri Apr 10 16:18:15 2015 UTC,Thanks. Are you playing on the iphone or the ipad?
swift,324k0v,yerpayerpa,1 point,Fri Apr 10 16:28:03 2015 UTC,Does it take a while for the ads to show up  because all I see is blank white screen on the bottom where the ad should be and my interstitial ads dont show up either? Thanks!
swift,324k0v,adaofeliz,1 point,Fri Apr 10 18:07:35 2015 UTC,Everything looks smooth but I couldn't figure out the controls...
swift,326ss2,Dark_Angelas,2,Sat Apr 11 01:52:19 2015 UTC,"Try changing the extended edges property. In the storyboard, this is in the view controller's attribute inspector. Uncheck ""under top bars""  Or in code, before pushing the custom view controller you would do:  customViewController.edgesForExtendedLayout = .None pushViewController(customViewController, animated: true)   Or in the custom viewcontroller class, you can set the property in viewDidLoad  class CustomViewController: UIViewController {     override func viewDidLoad() {         super.viewDidLoad()         edgesForExtendedLayout = .None     } }"
swift,326ss2,CouldHaveBeenKing,1 point,Sat Apr 11 03:14:38 2015 UTC,Thank you so much. Your answer solved my problem!
swift,326rbx,Ceribis,5,Sat Apr 11 01:38:36 2015 UTC,"As a rule of thumb, if you're submitting an app to the store make sure you're running the latest version of Xcode from the App Store. That'll be the current version that Apple accepts builds from."
swift,326rbx,garfbargle,1 point,Sat Apr 11 03:26:55 2015 UTC,Xcode 6.3 with iOS 8.3 is not in beta. I submitted an app through it today. You will want to make sure you're using it and that you fix that issue. (Unless it's a bug with 6.3)  :)
swift,326rbx,wswatson,-4,Sat Apr 11 02:04:02 2015 UTC,I had ios 8.2 on my iphone and it was working perfectly and when I update the phone to ios 8.3 it started to freeze every time I exited the app and returned to it. Can you give me a donload link to it? Thanks!
swift,326rbx,garfbargle,4,Sat Apr 11 02:08:16 2015 UTC,"I find it kind of hard to believe that as an iOS developer you don't know where to find Xcode, but....  https://itunes.apple.com/us/app/xcode/id497799835?mt=12"
swift,326rbx,joycamp,-4,Sat Apr 11 02:26:59 2015 UTC,I know where it is but I want to make sure Im downloading the correct file because its not installing for me. I thought I could get a dmg file or something.
swift,326rbx,RDSWES,-2,Sat Apr 11 02:29:58 2015 UTC,I cant tell if its installing or not.......it switches from 4 minutes left then shows the  update button every few seconds in the app store..
swift,326fzx,xStory_Timex,1 point,Fri Apr 10 23:51:42 2015 UTC,"What's the context here? What behavior do you want? Just saying ""it works"" or ""it doesn't work"" doesn't give me a sense of what you're trying to do, which makes it hard to help out."
swift,3264nr,Dark_Angelas,1 point,Fri Apr 10 22:12:39 2015 UTC,"Ok I have figured out what my problem was.  I had to create another dictionary and send it as 'metrics' argument.  So my new code would be:   let viewsDictionary = [""top"":topView, ""bottom"":bottomView]  let numbers = [""spacing"":20]  let view_constraint_V:NSArray = NSLayoutConstraint.constraintsWithVisualFormat(""V:|-spacing-[top(bottom)]-[bottom]-10-|"", options: NSLayoutFormatOptions.AlignAllLeading, metrics: numbers, views: viewsDictionary)"
swift,325rhc,lucambd,8,Fri Apr 10 20:29:51 2015 UTC,The modulo operation: %   if playerTotalScore % 100 == 0 {     // code }
swift,322nre,blackensexican,3,Fri Apr 10 02:13:37 2015 UTC,"Are you trying to cache the cells, or the images in them?  If you're just trying to cache cells, you're trying to make what's in Computer Science called an allocation pool (not to be confused with an AutoReleasePool). Instead of alloc and release, you want to instead be managing their creation and reallocation with a data structure of your own. I don't know why you'd be doing that though, the Cocoa ones do it fine  If you're talking about images themselves, the basic structure is:  Get a key of the item, this could be the url you get it from.  Check to see if the key is already in the filesystem where you'd expect it.  If not, download the file, write it to the filesystem where you'd expect it.  Then go about your business :D  I suggest something like Documents/BSCacheDir/<URL with everything but numbers and letters turned into underscores>"
swift,322nre,ASnugglyBear,1 point,Fri Apr 10 03:19:35 2015 UTC,I suggest something like Documents/BSCacheDir/<URL with everything but numbers and letters turned into underscores>   Prepare for rejection by App Review if you save data that can be downloaded from the web in the documents directory. Images that can be downloaded again belong into the caches directory.
swift,322nre,fluchtpunkt,1 point,Fri Apr 10 08:29:17 2015 UTC,"They don't reject for that, they reject for backing up too much stuff  I have no idea what the data is, caches is a possible location as well, it really depends what the data is and what semantics are surrounding it which dir you use  More typically, documents plus this approach makes more sense for this sort of cache in my experience"
swift,322nre,ASnugglyBear,2,Fri Apr 10 16:09:10 2015 UTC,"A far more reliable and simple-to-use solution is SDWebImage. Install using cocoapods 0.36.x, add 'import SDWebImage' where you need it, and follow the simple instructions on the github page. This library is so awesome and reliable companies like Facebook use it. I got it setup in a Swift project today in less than 10 minutes. Let me know if you need more help."
swift,322nre,mistermagicman,2,Fri Apr 10 04:44:22 2015 UTC,"True, we changed haneke to SDWebImage about 2days ago at work. Haneke had some problem and its memory usage could reach 500mb, so we ended up replacing it, now the maximum ram we use is about 30-40 mb"
swift,322nre,sonyeelol,1 point,Fri Apr 10 06:49:15 2015 UTC,"thank you so much for responding, I wanted to implement this library, but did not have the time to. I'm going to try to do it later tonight / tomorrow. would you stilll be able to help me go through the process? :D"
swift,322nre,mistermagicman,1 point,Thu Apr 16 00:09:08 2015 UTC,I can help you set up cocoapods. It takes about 5 minutes max.
swift,322nre,Ashok28,1 point,Thu Apr 16 16:20:39 2015 UTC,"Well, if fixing errors in Haneke caused by Swift 1.2 is beyond scope of your knowledge, I honestly doubt that you'll be able to create something so complex from scratch.  Just wait for Haneke to update, or use something like SDWebImage."
swift,322nre,criosist,1 point,Fri Apr 10 06:48:24 2015 UTC,"true, but if i had a resource that taught me how to, I could learn while building."
swift,322j9o,appsssss,2,Fri Apr 10 01:35:08 2015 UTC,It finally showed up after a few hours. If anyone wants to take a look at it its called Parachute Mike and its my first app ever. Heres the  link:  https://itunes.apple.com/us/app/parachute-mike/id976941599?ls=1&mt=8
swift,322j9o,wyzewon,2,Fri Apr 10 13:15:23 2015 UTC,"I remember I freaked out about this as well, but I went to bed. Woke up the next morning and it was in the search results! Just hang tight and it will be there."
swift,322j9o,wyzewon,1 point,Fri Apr 10 01:50:19 2015 UTC,okay thanks!
swift,322j9o,fluchtpunkt,1 point,Fri Apr 10 03:08:29 2015 UTC,"I have one more question, does it take a while for the ads to show up because in itunes connect it says there live but in my app they dont show up? Thanks!"
swift,322j9o,Awsthr,1 point,Fri Apr 10 13:26:57 2015 UTC,Not sure on this one as my app was paid so I didn't include ads!
swift,322j9o,Awsthr,2,Fri Apr 10 22:34:30 2015 UTC,"http://shouldiblamecaching.com  The App Store works with many different servers and CDNs worldwide. Whatever you do in iTunes Connect, results won't be immediate."
swift,322j9o,LostLogin,1 point,Fri Apr 10 08:11:16 2015 UTC,Apparently it takes a few hours... Mine was accepted today however it hasn't shown in the app store yet.
swift,321roc,john_alan,3,Thu Apr 9 21:53:27 2015 UTC,To answer your question: no. You will have to declare the methods as public as well.
swift,321roc,MaddTheSane,3,Thu Apr 9 23:42:32 2015 UTC,You also need to mark methods as public if you want them publicly accessible. This is good because you will probably only want to mark some methods as public.
swift,321roc,drewag,2,Fri Apr 10 05:43:22 2015 UTC,"IIRC everything is marked internal by default. So unless you explicitly mark anything public, or private. It will be set to internal for you"
swift,321roc,superlopuh,0,Fri Apr 10 06:33:31 2015 UTC,To not get a segfault when you see it. I can imagine a few scenarios when you'd want to pass a reference to a class to some function without doing anything with it yourself.
swift,321roc,drewag,3,Thu Apr 9 22:01:29 2015 UTC,It is not a matter of segfaulting; it is a matter of compiling in Swift
swift,321roc,superlopuh,1 point,Fri Apr 10 05:45:57 2015 UTC,"Makes sense, probably due to buggy betas."
swift,321roc,superlopuh,1 point,Fri Apr 10 21:27:36 2015 UTC,So both methods and the class need to be marked as public? Not just the methods?
swift,322ve4,Cazallum,1 point,Fri Apr 10 03:19:03 2015 UTC,I think you need to look into protocols / Closures(Blocks) for passing information back to your View controller which contains the collectionview to pass the relevant information back and present the relevant information.  making a protocol on bottom level cell that passes the object or struct with information that is required to present enough information.
swift,31yu33,lyinsteve,6,Thu Apr 9 05:34:47 2015 UTC,I don't think managing dates in software will ever be fun =(
swift,31yu33,puzzey,3,Thu Apr 9 14:34:28 2015 UTC,Looks a lot like ActiveSupport.
swift,31yu33,AeroelasticFlutter,3,Thu Apr 9 11:54:29 2015 UTC,"I don't want to destroy all the fun, but you abstract away things that exist for a reason.   Funny things might happen if your app does not live isolated in the sandbox of one user. As soon as your app communicates with other apps or a server, you have to make the decision if currentCalendar is the correct calendar to choose. There are plenty of people who use different calendars. And you as a developer have to make the decision if ""one year from now (April 10)"" means March 30 (islamic), April 9 (persian, indian), April 10 or April 29 (hebrew) in the context of your app. You can't do that if you abstract the calendar away because it looks easier.   The API used for date calculations is not complicated to make your life hard, it's complicated because date calculations are hard and you have to consider many things to calculate correctly. The current calendar is not necessary the correct calendar for date calculations."
swift,31yu33,fluchtpunkt,2,Fri Apr 10 08:06:57 2015 UTC,"This makes the Rubyist inside of me giddy!  Though, why do things like 1.day.ago return optionals?  Also, have you considered writing tests for your library?"
swift,31yu33,yeskia,2,Thu Apr 9 12:27:26 2015 UTC,"There are some dates such that ""1 day ago"" is a time that doesn't exist, but ""24 hours ago"" does exist. For example, 2:30 AM the day after a DST transition."
swift,31yu33,Catfish_Man,2,Fri Apr 10 16:13:12 2015 UTC,"I'm striving for 100% coverage for tests -- that I haven't written yet :(  Also the functions return optionals because the NSCalendar APIs that act on date components return optionals. They can fail with malformed components, sadly."
swift,31yu33,squarefrog,1 point,Thu Apr 9 15:36:26 2015 UTC,Looks like a decent class for tests. Let me know if you want a hand writing some tests. I don't know if travis supports swift yet but that's always a good option too.
swift,31yu33,StolenKid,1 point,Thu Apr 9 18:43:17 2015 UTC,Check out Erica Sadun's NSDate extensions: https://github.com/erica/NSDate-Extensions  I've bee using it for years and it makes date comparisons almost painless. It would be nice to see a Swift implementation.
swift,31yu33,thatmarksguy,1 point,Thu Apr 9 23:56:31 2015 UTC,Having dealt with date comparisons as recently as a few weeks ago anything that lets me compare dates painlessly without having to use an NSOrderedAscending stuff would be great. Maybe do some operator overloading with '<' & '>' or something that returns a simple Boolean. I managed to pull through and while working with dates in other languages like Java and C# is not exactly a party I don't remember it being so difficult either.
swift,31yu33,fluchtpunkt,3,Fri Apr 10 04:03:07 2015 UTC,"Nothing easier than that...  public func ==(lhs: NSDate, rhs: NSDate) -> Bool {     return lhs === rhs || lhs.compare(rhs) == .OrderedSame }  public func <(lhs: NSDate, rhs: NSDate) -> Bool {     return lhs.compare(rhs) == .OrderedAscending }  extension NSDate: Comparable { }   The reason why it was so difficult in Objective-C is the lack of operator overloading. You can't compare objects with < and the like. That's why you had to use compare: which returned NSComparisonResults."
swift,31yu33,thatmarksguy,2,Fri Apr 10 07:38:19 2015 UTC,"Done, and implemented in 0.0.2!"
swift,31yu33,twostraws,1 point,Fri Apr 10 21:02:21 2015 UTC,Millions of thanks!
swift,31yu33,MarsSpaceship,1 point,Fri Apr 10 21:48:11 2015 UTC,"Beautiful! This will appeal to anyone who has written Ruby, or anyone who has tried to wrangle with NSDates. So… everyone, then :)"
swift,321dik,tmd9394,3,Thu Apr 9 20:09:56 2015 UTC,"What does the error say? Could be that the function now uses ""Set"" as opposed to ""NSSet"""
swift,321dik,icanhearyoujustfine,2,Thu Apr 9 20:29:33 2015 UTC,"Original code:  override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {         let touch = touches.anyObject() as UITouch ... }  New code:  override func touchesBegan(touches: Set<NSObject>, withEvent event: UIEvent) {         let touch = touches.anyObject() as! UITouch ... }  but now it says set<NSObject> does not have a member anyObject()  Sorry for all the confusion. I am still trying to learn swift."
swift,321dik,LetsCodeSomethingFun,2,Thu Apr 9 23:15:38 2015 UTC,"You can do something like:  let touch = touches.first as! UITouch   or if you want to get all the touches, you can iterate through the entire set as you would an array like so:  for touch in touches {  }"
swift,321dik,icanhearyoujustfine,2,Thu Apr 9 23:54:13 2015 UTC,"Check out this website and search for ""touchesbegan"". They have a solution there"
swift,321dik,LetsCodeSomethingFun,5,Fri Apr 10 00:14:27 2015 UTC,The new Set type was introduced in Swift 1.2.  Just replace NSSet with Set<NSObject>.
swift,321dik,dcoupl,2,Thu Apr 9 20:47:04 2015 UTC,Try using the Xcode tool to covert your Swift code to the latest version automatically. Its in the Edit menu: Edit > Convert > To Latest Swift...
swift,321dik,originalbeastmode,2,Thu Apr 9 21:52:56 2015 UTC,Edit > Convert > To Latest Swift...   I didnt know this was a thing. I really hope this works for me. All my third party libraries got demolished
swift,321dik,dcoupl,2,Fri Apr 10 00:51:53 2015 UTC,"Thanks to all the responses, I got it working. I really appreciate it!"
swift,32122g,xStory_Timex,2,Thu Apr 9 18:49:19 2015 UTC,Have you tried using the Swift 1.2 conversion tool in Xcode?
swift,32122g,oxym0r0n,1 point,Thu Apr 9 18:57:28 2015 UTC,One thing that caused my pre-1.2 Swift code to break in math places was downcasts: places where you are using as may need changed to as!  What are the specific error message you're seeing?
swift,32100c,MuttyFTW,1 point,Thu Apr 9 18:33:45 2015 UTC,"Cell customization is done in the cellForRowAtIndexPath method of your TableView data source. Based on the section and row number, you can customize each cell before returning it."
swift,320qu2,cheifshiggum,3,Thu Apr 9 17:29:30 2015 UTC,"There's no variance or contravariance support in generic types in swift, so you can't change a generic component of a generic type by casting it, but what you can do is provide non-generic protocols to your generic type, and cast any generic instance to those protocols, like so:  class SPInputDeviceBase<T> : SomeBaseClass, Printable /* Printy-print! */ {     var description : String { return ""Something something"" } }  var floatInput = ... var intInput = ...  var input = [floatInput, intInput] for i in input {     if let i = i as? Printable {         i.description; // Available!     } }   I noticed your generic type has a base concrete class because you where able to create an inferred array from two different generic signatures (that's usually not allowed if there's no common base class), so you may also be able to cast the values into that base class and store any non-generic features there, if that fits the architecture."
swift,320qu2,LuizZak,2,Thu Apr 9 19:48:18 2015 UTC,"I see, thanks for this! This does seem like the best option. From the looks of the wikipedia article it's something that is supported in other languages yes? So I feel better knowing at least I'm not trying to do the impossible."
swift,320qu2,dcoupl,1 point,Fri Apr 10 00:19:45 2015 UTC,"What you're trying to do is not what Generics are for and its not possible. Like user LuizZak says, you must make T be a common ground between the classes of T that you want to use. A class or a protocol would work, and each element in the collection must conform to or inherit from that class or protocol.  For example, since AnyObject will match all objects, you can use that as your T. Obviously this won't work all the way because the compiled won't know which type it is. Which is why the way I think you should solve this is to define your own protocol and then have your T objects extend that."
swift,320qu2,LetsCodeSomethingFun,1 point,Thu Apr 9 22:00:44 2015 UTC,"Like user LuizZak says, you must make T be a common ground between the classes of T that you want to use.   Any is a common ground between Float and Int. Both can be upcasted to Any. Or am I interpreting what you're saying wrong?   For example, since AnyObject will match all objects, you can use that as your T   I can't, AnyObject is more restrictive than Any. Neither work because it seems a type<extends/implements T> - thinking in Java terms - is not considered a subtype of type<T>. I can't cast up from type<extends/implements T> to type<T>."
swift,31wyia,mileswd,7,Wed Apr 8 20:23:44 2015 UTC,what kind of bugs should we expect on existing projects?
swift,31wyia,xStory_Timex,5,Wed Apr 8 23:05:41 2015 UTC,"No bugs for me, but tons of as -> as! changes needed."
swift,31wyia,smakusdod,1 point,Thu Apr 9 00:27:46 2015 UTC,What does force unwrapping the as statement do? Can you explain the change please?
swift,31wyia,xStory_Timex,2,Thu Apr 9 00:33:24 2015 UTC,Apple can explain it better:   as! for failable casts — Casts that can fail at runtime are now expressed with the new as! operator to make their potential for runtime failure clear to readers and maintainers of your code.
swift,31wyia,smakusdod,3,Thu Apr 9 00:43:52 2015 UTC,"We ran into a show-stopper and had to roll back to Xcode 6.2.  A closure within a generic function was crashing with EXC_BAD_ACCESS while accessing a parameter from the outer function. And only on a release build on the device, not on the simulator. The deal breaker was that any attempt to run the app in release mode under the debugger resulted in Xcode crashing completely.  So basically, no way to debug at all :\"
swift,31wyia,alecthomas,1 point,Thu Apr 9 06:59:37 2015 UTC,how do you roll back to xcode 6.2 and re convert the swift language back?
swift,31wyia,xStory_Timex,1 point,Thu Apr 9 18:44:51 2015 UTC,I had made a copy of the previous version of xcode and just ran xcode-select. Rolling back the code changes was just a matter of git reverting the appropriate commits.
swift,31wyia,alecthomas,2,Thu Apr 9 23:49:35 2015 UTC,I use a custom font in my project and this causes Xcode to hang every time I open a .xib that uses the font. So there's that.
swift,31wyia,sprocktologist,2,Thu Apr 9 05:29:13 2015 UTC,"I ran into a tiny one -- looks like unwrapping nested tuples got a little borked. http://stackoverflow.com/questions/28866426/swift-1-2-cannot-express-tuple-conversion-error  We were trying to unpack everything like (key, (value1, value2)) in a for loop and it doesn't like that, although the types it complained about looked right. Fixed by using (key, _) since we didn't need the rest inside the loop."
swift,31wyia,wolverineoflove,2,Thu Apr 9 06:10:54 2015 UTC,Edit -> Converter can fix most of the issues.
swift,31wyia,sabiland,2,Thu Apr 9 08:28:24 2015 UTC,converter only fixed 150 of my syntax errors. i have 50 syntax errors that cannot be fixed because xcode crashes
swift,31wyia,xStory_Timex,1 point,Thu Apr 9 18:43:15 2015 UTC,"Well that's pretty good, 150/200 ;)."
swift,31wyia,sabiland,1 point,Fri Apr 10 09:04:29 2015 UTC,Can't have parameters with default values after closure parameters if you want to use the trailing closure syntax.
swift,31wyia,yeskia,1 point,Thu Apr 9 11:17:59 2015 UTC,For the first few runs after the update XCode would freeze if I open it from it's icon. If I force quit it and open a project file it would run. A few restarts of the system later suddenly it started to run from the icon as well...
swift,31wyia,moridinbg,2,Thu Apr 9 12:29:15 2015 UTC,"Im in middle of the Stanford iOS course. Will swift 1.2 break my code? If so, I will skip the update for now."
swift,31wyia,alecthomas,4,Thu Apr 9 06:38:17 2015 UTC,Yes.
swift,31wyia,isurujn,3,Thu Apr 9 07:00:13 2015 UTC,"Yes it will break the existing code bases. You can't really ""skip"" it since from this point on, all the upcoming Xcode versions will have Swift 1.2. Might as well make the transition now before the codebase grows even more."
swift,31wyia,sha13dow,1 point,Thu Apr 9 14:07:28 2015 UTC,What updates will be released when this is available?
swift,31wyia,annota,1 point,Wed Apr 8 23:28:41 2015 UTC,Does Swift 1.2 require iOS 8.3?
swift,31wyia,mmellinger66,4,Thu Apr 9 02:28:20 2015 UTC,I doubt it since Swift works on iOS7.
swift,31wyia,sirhcreffot,2,Thu Apr 9 02:37:50 2015 UTC,"Yeah, it's binary compatible, so all swift code should run on iOS 7 and up, as far as I know."
swift,31wyia,iamsebj,1 point,Thu Apr 9 07:10:42 2015 UTC,Does anyone know the download size of the Xcode update?  Edit: 2.57GB apparently
swift,31wyia,xStory_Timex,1 point,Thu Apr 9 09:12:05 2015 UTC,I cant even open my swift files in the editor. swift hangs up and stops responding. what should i do?
swift,31wyia,Rudy69,1 point,Thu Apr 9 18:46:47 2015 UTC,I'm excited for Swift 1.2
swift,31wyia,optional_field,2,Wed Apr 8 21:33:50 2015 UTC,"if you don't have existing code base... our code base was almost entirely on swift, and we ended up with 140 errors, after automatic conversion"
swift,31wyia,Rudy69,1 point,Thu Apr 9 12:15:44 2015 UTC,Interesting :/    I didn't have time to check it out yet but that's a bit scary
swift,320a7r,jwilliams991,1 point,Thu Apr 9 15:30:46 2015 UTC,"Unless you're using an extended tableview or subclass that has it's own data source methods, you methods shouldn't be named collectionTableView(...)  should be tableView(...).  Look at the documentation."
swift,320a7r,clawesome,1 point,Thu Apr 9 19:02:42 2015 UTC,"Thank you so much, this worked!"
swift,3205zt,lucambd,1 point,Thu Apr 9 14:59:41 2015 UTC,"I'm extremely new to Swift too, but I can help you on this.  audioPlayer.stop()  //this stops the player   audioPlayer.currentTime = 0 //this will reset the song back to time 0:00  Now the hard part comes in with having one button to play and pause music. I'd suggest having a boolean value and at the end of the IBAction just set value = !value."
swift,3205zt,TheNebulizer,2,Thu Apr 9 16:04:12 2015 UTC,"You don't need to store a bool, just query audioPlayer.playing()  if audioPlayer.playing() {   // stop } else {    // play }"
swift,31yg1t,patniemeyer,1 point,Thu Apr 9 03:18:29 2015 UTC,"Wow this is awesome, thanks."
swift,31z4ej,nehayward,1 point,Thu Apr 9 07:46:50 2015 UTC,Maybe is too late to answer but today I came across of this page http://info.activeintime.com/news/2015/3/27/swift-the-pebble-ios-sdk
swift,31zd19,sabiland,3,Thu Apr 9 09:57:27 2015 UTC,Shell script that adds current Xcode UUID to plugins.  https://github.com/TwiterZX/Xcode-plugins-update  Its a shame every xcode update breaks all the previous versions plugins.
swift,31zd19,Sohailk,2,Fri Apr 10 07:54:51 2015 UTC,"Great, this solved the issues :)."
swift,31zd19,squarefrog,1 point,Fri Apr 10 09:03:40 2015 UTC,Plugins need to be updated with the new Xcode uuid. Give it time.
swift,31zd19,Vahlk,1 point,Thu Apr 9 12:23:11 2015 UTC,"Oh, thx for info."
swift,31yuyu,Bleuground,1 point,Thu Apr 9 05:44:42 2015 UTC,"I've been making a music controller just to practice before adding music controls to my actual app. Once it's finished, I was planning on uploading it to GitHub as a reference for anyone else wanting to add music controls. The whole app is just buttons (play, pause, skip to beginning, previous, next) and a label that displays the current track information. I want to add volume control and a timer but haven't had time in the past few days, but I can probably give you what I have if you think it would be helpful."
swift,31xzmw,adgsf,2,Thu Apr 9 01:04:01 2015 UTC,What kind of data? Parse might be a good solution depending what data it is.
swift,31xzmw,mistermagicman,1 point,Thu Apr 9 03:26:08 2015 UTC,"Essentially the app would have a collection view and each cell would contain a UIImage and some text.  I would like to be able to share the collection view with someone else.  If it's not possible to share the actual collection view, then I would try to share images and text found in the collection view as individual elements.  I hope that's clear - thanks :)"
swift,31xzmw,waterskier2007,2,Thu Apr 9 11:34:31 2015 UTC,"You don't share actual views. You would share the objects in your model that those views are 'representing'. You would likely want some sort of server backend like Parse or CloudKit. You should be able to google and get tons of information on Parse and a decent amount on CloudKit.  Just a heads up though, if you have any cross-platform desires (an android and iOS app), CloudKit is iOS only."
swift,31xzmw,puzzey,1 point,Fri Apr 10 15:52:22 2015 UTC,"i see, many thanks :)"
swift,31x8pt,Hehshs,2,Wed Apr 8 21:36:17 2015 UTC,Yeah it can take 2-3 weeks sometimes
swift,31x8pt,blaizedm,1 point,Wed Apr 8 21:44:44 2015 UTC,"It changed to ""in review""............how long does this process take?"
swift,31x8pt,boy-o-boy,1 point,Thu Apr 9 18:02:27 2015 UTC,"For me, it was ""Waiting for Review"" for a little more than a week, and after that, I got two emails in one day, the first saying the status had changed to ""In Review"" and a couple hours later, another that said ""Ready for Sale.""   Mine was a pretty simple app so it didn't have much to review, but I'm guessing it depends on how content heavy your app is (i.e. if its a game it would probably take longer than a to do list app)"
swift,31x8pt,Hawk_Irontusk,1 point,Thu Apr 9 21:59:05 2015 UTC,Yes.
swift,31x8pt,n0phear,1 point,Wed Apr 8 21:45:06 2015 UTC,I found the first time was the longest.  Recently the wait as been longer than usual.  My guess is a back log from watch based apps submissions.
swift,31x8pt,n0phear,1 point,Thu Apr 9 01:23:42 2015 UTC,that could be it.....I saw on other forums people were getting there apps accepted in four or five days.
swift,31x8pt,adgsf,1 point,Thu Apr 9 02:29:46 2015 UTC,With swift 1.2 I bet it will be even worse over the course of the next two weeks.
swift,31vwjj,morqon,1 point,Wed Apr 8 15:57:51 2015 UTC,This was an excellent talk. I hadn't been exposed to QuickCheck before. Interesting stuff.
swift,31sbhp,fclout,10,Tue Apr 7 19:54:41 2015 UTC,I'll love it even more when I can start writing it on Linux and phase out bash and perl.
swift,31sbhp,TomatoManTM,8,Wed Apr 8 00:37:41 2015 UTC,WWDC 2015 Apple open sources Swift. Anyone wanna bet against it?
swift,31sbhp,dazonic,4,Wed Apr 8 01:33:12 2015 UTC,I would actually bet against it. I don't see how that would benefit Apple.   They will most likely add custom code to CloudKit. Which pretty much removes the need of open sourcing Swift for most developers.
swift,31sbhp,fluchtpunkt,11,Wed Apr 8 15:06:26 2015 UTC,"Apple knows devs loves Swift and want to write it everywhere. Even the first line of the book says it's designed to be able to write operating systems. The more I think about it, the more I'm willing to bet on it eventually being open sourced.   Picture this. Federeghi on stage talking about how the initial release went down, how popular Swift is, he'll source this article saying it's the most loved programming language. Then he'll say how they've got a lot of feedback from devs wishing they could write everything in Swift! Then announce that it's open source today. Crowd goes nuts, Twitter goes nuts, hacker news goes nuts, even /r/programming's consensus is that they hate Apple but ""have to commend them for doing this"".   Still unrealistic?"
swift,31sbhp,dazonic,2,Wed Apr 8 23:57:40 2015 UTC,Looks like it's time to pay up
swift,31sbhp,BruceRoark,2,Tue Jun 9 00:55:45 2015 UTC,I'd give that about a 30% chance.  It's not clear that they'd gain the same benefits from releasing the Swift compiler that they get from open-sourcing LLVM and CLANG.
swift,31sbhp,ReasonReader,1 point,Wed Apr 8 13:37:59 2015 UTC,"LLLVM and CLANG are open source products that they use, aren't they? Confused as to why you're talking about Apple open sourcing them when they didnt make them."
swift,31sbhp,feelix,2,Fri Apr 10 20:51:25 2015 UTC,"LLVM was Chris Lattner's PhD project, and it already existed when Apple hired him.  CLANG was started after he joined Apple."
swift,31sbhp,ReasonReader,1 point,Fri Apr 10 21:15:57 2015 UTC,"ah, so they voluntarily open-sourced CLANG? that would seem more hopeful then I thought for swift then"
swift,31sbhp,feelix,5,Fri Apr 10 21:35:37 2015 UTC,"I'd say Swift was introduced mainly to lure Android devs over to iOS development.   Nope.  Swift exists to meet Apple's internal development needs.   Apple studied their code base in considerable detail, and found that a huge proportion of their bugs could be eliminated by a language that pre-empts most common memory management and type safety issues."
swift,31sbhp,ReasonReader,1 point,Wed Apr 8 06:48:33 2015 UTC,"Yes, I think this had some to do with it, and they aren't alone either. Microsoft went through this phase with their security extensions to C++ during the major code quality overhaul following Nimda and whatnot, which was then also made available to all Windows developers.  Sure, I have no direct ""proof"", but how Swift requires curly brackets on conditionals conveniently ties with the recent SSL bug that was caused by a seemingly messed up code commit and the earlier lack of such a requirement. That's an example besides the memory safety one, which I think is a theme for the entire industry right now (Rust comes to mind).  So I think it's a mix of trying to make it easier to develop apps and helping themselves and others in writing better code in the process."
swift,31sbhp,jugalator,6,Wed Apr 8 10:40:04 2015 UTC,"Apple has no need to ""lure"" android developers.  Everybody already knows that iOS is where the money is."
swift,31sbhp,ReasonReader,1 point,Thu Apr 9 08:20:22 2015 UTC,"Nah, just more than you, and that's not saying much."
swift,31sbhp,ReasonReader,1 point,Wed Apr 8 11:09:38 2015 UTC,Come back when you try to wring some money out of Android users
swift,31sbhp,DaemonXI,1 point,Wed Apr 8 13:31:45 2015 UTC,"I'd say Swift was introduced mainly to lure Android devs over to iOS development. And Apple really don't want iOS devs to wander over to other platforms.   Your two points contradict each other.   If Swift can lure Android developers to iOS, it can lure iOS developers to Android at the same time."
swift,31sbhp,fluchtpunkt,1 point,Wed Apr 8 13:57:55 2015 UTC,"This involves a lot of middleware, but IIRC, there's a company doing a .NET Swift compiler, and you can use Mono on Linux (and Microsoft's CLR in the relatively near future).  Obviously you don't get Objective-C interop if you go that route, though."
swift,31sbhp,Zerotorescue,3,Wed Apr 8 22:29:52 2015 UTC,"I definitely agree.  PHP is just too old to come anywhere close, (node)JS too clunky to be good, and languages like Ruby just aren't it for me, might be the VB vibe. Swift on the other hand is really refreshing and while there are several language design choices I won't really understand, there are many more that are just sublime. I'm not absolutely certain I prefer Swift over C# as things like events (from what I've seen) and its IDE leave much to be desired, but I definitely love programming in it despite being forced to code on Mac. If only it could be used to build other things then just apps (webserver running Swift pretty please)."
swift,31sbhp,Drarok,1 point,Wed Apr 8 15:17:19 2015 UTC,"I imagine you could write a CGI tool in Swift, but what you'd need is a robust set of tools to make that easy. Maybe a FastCGI implementation to keep performance up? Hmm…"
swift,31sbhp,dazonic,3,Wed Apr 8 14:53:26 2015 UTC,And CoffeeScript made the most dreaded list?
swift,31sbhp,mistidoi,4,Wed Apr 8 01:02:53 2015 UTC,So weird.  I absolutely love it.
swift,31sbhp,dazonic,3,Tue Apr 7 20:41:23 2015 UTC,"Same it's my favourite. Probably dreaded because JS is so popular and when a JS dev runs into it in a project, they rage? Or just hipster hate. It's just as fun as Swift for me."
swift,31sbhp,mistidoi,1 point,Tue Apr 7 21:43:57 2015 UTC,It's hard for me to imagine that anyone who writes JavaScript would hate coffeescript.  Do they love curly braces?
swift,31sbhp,contrarianism,1 point,Tue Apr 7 22:09:01 2015 UTC,yeah just started using coffeescript and find it very refreshing
swift,31sbhp,ReasonReader,2,Tue Apr 7 23:58:24 2015 UTC,"I can't say that I love Swift yet.  I can see that it offers several improvements over Objective-C, but it's got its share of irritations, too."
swift,31sbhp,swiftythebird,3,Wed Apr 8 01:30:44 2015 UTC,"The question was, of all the technologies you've used, which one would you like to use again? So that's not exactly love, but probably ""which one do you think shows promise"" or ""which one do you think would be fun to use again""."
swift,31sbhp,cheifshiggum,5,Wed Apr 8 01:38:59 2015 UTC,Let's hope it keeps growing in popularity and takes over the market like most of Apple's inventions.
swift,31sbhp,KurtLovesCode,3,Thu Apr 9 16:34:08 2015 UTC,"Surprising to me! I mean I love swift but with all of its teething problems I wouldn't think it would be this highly regarded.   It is a great language though and if Apple would just get Xcode sorted and fix all the bugs and compile times - they're getting there - I can only see it getting more love.  Also I think with some more work on the playgrounds, and integration with actual project code, it will blow all other languages and tooling out of the water."
swift,31sbhp,Alphasite,0,Wed Apr 8 10:37:59 2015 UTC,"Needs a drop-in repl. I can't tell you how awesome & useful javacript's debugger, ipython's embed, and pry-rails binding.pry are."
swift,31sbhp,Drarok,2,Wed Apr 8 12:48:33 2015 UTC,"You can use lldb's print/exec commands to that effect. It's less convenient than a straight-up prompt, but it does let you do pretty much anything you want."
swift,31sbhp,titaniumdecoy,1 point,Tue Apr 7 20:49:05 2015 UTC,"I'm not sure i understand, but doesn't swift already have a  repl?"
swift,31sbhp,KurtLovesCode,1 point,Tue Apr 7 22:07:58 2015 UTC,"Yep:  $ swift Welcome to Swift!  Type :help for assistance.   1> var x = ""World!""; x: String = ""World!""   2> println(""Hello, \(x)""); Hello, World!"
swift,31sbhp,kirakun,1 point,Tue Apr 7 23:35:38 2015 UTC,"Um, you can create sandbox projects... which evaluate an entire file in real time... what more do you want?"
swift,31sbhp,YouFeedTheFish,1 point,Wed Apr 8 01:04:57 2015 UTC,Not the same. I want a command where I can drop into a repl in a real project anywhere I want.
swift,31sbhp,Rudy69,1 point,Wed Apr 8 02:10:55 2015 UTC,I'm surprised C++11 is listed so high.
swift,31sbhp,ReasonReader,4,Wed Apr 8 12:24:37 2015 UTC,"Most people who did C++11 probably did C++98 before, and C++11 is a huge leap forward. I would personally hate doing C++98 again."
swift,31ub7b,asriel,1 point,Wed Apr 8 05:15:21 2015 UTC,Very nice! I will be studying your code. :)
swift,31ts7d,swangy,3,Wed Apr 8 02:26:24 2015 UTC,You can add Messages and Sounds to Local Notifications. I'm currently doing this for an app I'm using. I think this is your only option unless you go the Push Notification route.
swift,31u4b1,VeniBibiFutui,3,Wed Apr 8 04:08:55 2015 UTC,"You can join an array of Strings using "","".join(myArray), but since it's not built in for an array of Ints, we can add it with an extension:  extension String {     func join(array:[Int]) -> String {         var str:String = """"         for (index, item) in enumerate(array) {             str += ""\(item)""             if index < array.count-1 {                 str += self             }         }         return str     } }   --  var myArray = [1,2,3]   let str = "","".join(myArray)   println(str)   // 1,2,3"
swift,31u4b1,clawesome,2,Wed Apr 8 05:07:48 2015 UTC,"You can make it more terse by mapping the array into a string array using map, and then join the result:   let joined = "", "".join(array.map { ""\($0)"" });   edit: Here's a (very late) extension for String.join that works with any Printable object (ints, doubles, etc.):  extension String {     func join<T : Printable>(elements: [T]) -> String {         return self.join(elements.map { ""\($0)"" });     } }  var ints = [0, 1, 2, 3, 4, 5, 6]; var print = "", "".join(ints);"
swift,31u4b1,LuizZak,2,Wed Apr 8 06:33:10 2015 UTC,"Why wouldn't you extend the Array so you could do this instead:  [1, 2, 3].join("","")"
swift,31u4b1,yeskia,1 point,Wed Apr 8 09:18:42 2015 UTC,"Could do it that way instead, but since there was already a method on String that takes in an array of strings, figured might as well extend that to take in an array of Ints as well."
swift,31u4b1,clawesome,0,Sat Apr 11 05:48:45 2015 UTC,"Is there a way I could do this without the commas being added? If my array looked like this: var myArray = [1,2,3,4,5]  I would want the string to be:  12345  Is this possible?"
swift,31u4b1,clawesome,2,Wed Apr 8 16:27:12 2015 UTC,"Whatever you use in replace of the comma will be your delimiter.  let string = """".join(myArray) // 123     let string = ""-"".join(myArray) // 1-2-3"
swift,31u4b1,clawesome,0,Wed Apr 8 16:48:39 2015 UTC,I'm at work so I can't try it out but would no delimiter work?
swift,31u4b1,cheifshiggum,1 point,Wed Apr 8 17:01:24 2015 UTC,The first example has no delimiter.
swift,31u4b1,its2ez4me24get,2,Sat Apr 11 22:15:41 2015 UTC,"array.description does this, but if you want more control use one of the other answers."
swift,31v6n9,harryf,1 point,Wed Apr 8 12:25:56 2015 UTC,I submit this as an improvement over http://www.reddit.com/r/iOSProgramming/comments/276u3p/taylorswift/ to I'll Accept Anything
swift,31v6n9,Hawk_Irontusk,1 point,Wed Apr 8 12:39:04 2015 UTC,That's really dumb.
swift,31v6n9,Hawk_Irontusk,1 point,Wed Apr 8 21:46:16 2015 UTC,I know but I couldn't help myself.
swift,31ri5f,SamBoogieNYC,2,Tue Apr 7 16:29:40 2015 UTC,"I've had these bookmarked for so long, and since one of them is a file for the Sketch app, ymmv, but these are two template resources for the different screen sizes:  https://github.com/franceindia/design/blob/master/Apple%20Startup%20Image%20Template.sketch  https://github.com/tfausak/tfausak.github.io/tree/master/static/images"
swift,31ri5f,SamfromRI,1 point,Tue Apr 7 19:03:34 2015 UTC,thanks!
swift,31qglv,MiddlebrowMentality,2,Tue Apr 7 10:47:45 2015 UTC,"Make sure you've set up your sound player object at the beginning of the scene, not right when you need the sound to play. Also, if you're using AVAudioPlayer, make sure to call -prepareToPlay with set up. If you're setting up the sound right when it's needed, that will be what's causing your sound to lag."
swift,31qglv,sudo_rossy,1 point,Tue Apr 7 11:19:38 2015 UTC,I should have phrased my question better. The game lags not the sound. When they come in contact with each other the sound plays at the right time but there is a bit of hitch on the screen.
swift,31qglv,sudo_rossy,3,Tue Apr 7 14:10:04 2015 UTC,"That's what the response is telling you, if you're calling prepareToPlay just before you play the sound, then it'll hang the main thread as it loads the audio"
swift,31pcov,Retarded_Giraffe,3,Tue Apr 7 02:41:29 2015 UTC,"Design+Code is a great resource if you are a designer (I'm not) OR if you want to give yourself a designer's perspective. It will help you build a sexier UI/UX, and even learn some tricks to pull off things outside of code.   The guy behind it, Meng To, is available on the private Facebook group (open to you after you purchase) and is very active on Twitter.  FYI, there's no golden bullet. My learning curve with Obj-C and Swift over the past six months has been a bizarre blend of (in rough order): Code Academy, Treehouse (lots), Big Nerd Ranch Guides, Apple documentation, Design+Code, blogs, Stack Exchange, lots more Apple documentation.  For me, I find the Design+Code online ebook to be a valuable resource that is FAR different from anything else I studied. It will make you think a lot about Apple Design Guidelines, Auto Layout, constraints, application flow, user interaction, animation, etc. These aren't adequately addressed in other resources. Also, whether you buy the book or not, sign up to his email list. He sends out an email of weekly design resources that are very helpful, including royalty free icons/art and relevant blog posts.  Courage!"
swift,31pcov,blindsideboarder,1 point,Tue Apr 7 05:08:07 2015 UTC,So it sounds like to start elsewhere and then go to the book once you're ready for the icing on the cake?
swift,31pcov,blindsideboarder,0,Wed Apr 8 01:20:10 2015 UTC,"Since Design+Code is for non-coders, I'd say it's approachable but would do it in tandem with another program since it approaches app design from a designer's perspective and doesn't dive deep into the code. Teamtreehouse.com's Swift and Obj-C courses are solid and you build complete apps, messenger apps with backends and everything. For me Design+Code inspired me and helped me build out my storyboards and flow, and other sites like Teamtreehouse.com gave me the start on the programming end of things.  Bottom line: $50 for Design + Code is well worth it if you are keen on making an app beautiful and its users happy. $25/mo for Teamtreehouse is a drop in the bucket if you are serious about learning to make apps. Do both in my opinion."
swift,31q7br,rhysmorgan,4,Tue Apr 7 08:22:18 2015 UTC,"Specify the types explicitly.   let tuple: (foo: String, bar: String?) = (""Foo"", nil)   Or if you want to create an array of these tuples:  let moves: [(foo: String, bar: String?)] = [     (foo: ""Foo"", bar: ""Bar""),     (foo: ""Foo"", bar: nil), ]   Since you have so many objects in your tuple I would actually look at struct or a plain old class.   This is so much nicer:   struct Pokething {     let foo: String     let bar: String?      init(foo: String, bar: String?) {         self.foo = foo         self.bar = bar     } }  let moves = [     Pokething(foo: ""Foo"", bar: ""Bar""),     Pokething(foo: ""Foo"", bar: nil) ]   Tuples are becoming the new dictionaries. People tend to overuse them."
swift,31q7br,fluchtpunkt,2,Tue Apr 7 10:54:02 2015 UTC,"A struct may be a better solution, as classes are passed by reference, but structs are passed by value."
swift,31q7br,MaddTheSane,1 point,Tue Apr 7 17:01:14 2015 UTC,Thanks :) I'm only using them to feed some test data into my Core Data database. I already have  Pokemon NSManagedObject. Would it not cause conflict?
swift,31q7br,dcoupl,1 point,Tue Apr 7 16:04:45 2015 UTC,Struct. Definitely just use a Struct.
swift,31qleo,AxeEffect3890,1 point,Tue Apr 7 11:51:59 2015 UTC,"When you said you were playing with the notifications, were you able to get any notifications at all? Did you add an observer to the notification to get the updates?  You may have to call beginGeneratingPlaybackNotifications() on the MPMusicPlayer to get it to start generating notifications."
swift,31qleo,LetsCodeSomethingFun,1 point,Tue Apr 7 13:35:26 2015 UTC,"I currently have this that I got from another thread:   // Add a notification observer for MPMusicPlayerControllerNowPlayingItemDidChangeNotification that fires a method when the track changes  override func viewWillAppear(animated: Bool) {         super.viewWillAppear(true)     NSNotificationCenter.defaultCenter().addObserver(self, >selector:""updateNowPlayingInfo"", name: >MPMusicPlayerControllerNowPlayingItemDidChangeNotification, object: nil)   }  // Set labels, artwork, etc.  func updateNowPlayingInfo(){     var nowPlaying = MPMusicPlayerController.systemMusicPlayer().nowPlayingItem     var trackName = nowPlaying.valueForProperty(MPMediaItemPropertyTitle) as String     var trackArtist = nowPlaying.valueForProperty(MPMediaItemPropertyArtist) as String     println(""Currently Playing: \(trackName) by \(trackArtist)"")   }   This gives me no notifications at all, and the println is just a test that it's working, where would I put the beginGeneratingPlaybackNotifications()?"
swift,31qleo,LetsCodeSomethingFun,1 point,Tue Apr 7 13:48:22 2015 UTC,"Where did you create your instance of MPMusicPlayerController? I noticed you had a reference to mp, so you can use that to call beginGeneratingPlaybackNotifications() when you create it."
swift,31phq3,ProlificPat,3,Tue Apr 7 03:23:21 2015 UTC,"It's something else. You're focusing on the wrong thing, and it's making finding the right thing difficult. Happens all the time. Show someone else your code, explain what you're doing, and I bet they spot it right away. Or post it here.  Or it could be Swift, but that's unlikely."
swift,31phq3,siebharinn,2,Tue Apr 7 04:10:26 2015 UTC,"As far as I know there's no recommended limit - 10 values would have an incredibly small footprint, I wouldn't worry about it.  I've got an app in production right now with around 20 settings stored in user defaults, never had an issue with it.  If Apple wanted to limit it, they would."
swift,31phq3,Stephen110,1 point,Tue Apr 7 04:06:38 2015 UTC,Most likely the value you added was invalid somehow. Adding too many items cannot cause it to crash.  You should post the backtrace of the crash.
swift,31phq3,Catfish_Man,1 point,Tue Apr 7 05:49:03 2015 UTC,"As mentioned, it's not an issue with too many values. The way I understand it, user defaults is just a normal plist file with a friendlier interface."
swift,31phq3,fwoty,1 point,Tue Apr 7 06:38:31 2015 UTC,"Hehe, interesting.   I was wondering about it all week. The easiest way to share info between Watch Apps and the iPhone app is to use NSUserDefaults... I plan on using it to store a dozen values.   Are you sure this error code was due to too many NSUserDefaults? I never heard of a hard cap before. It was always simply discouraged to store big files."
swift,31phq3,flCer,1 point,Tue Apr 7 03:46:14 2015 UTC,"Just curious, what do they recommend for storing larger files locally?"
swift,31phq3,-jabberwock,3,Tue Apr 7 04:21:02 2015 UTC,A separate file. Just use NSData or NSFileHandle or the like.
swift,31phq3,Catfish_Man,1 point,Tue Apr 7 05:49:57 2015 UTC,"It's not due to too many user defaults. The only thing that happens if you put too much stuff in user defaults is that it uses more memory and takes more time, like you'd expect."
swift,31oy3i,ProlificPat,1 point,Tue Apr 7 00:30:52 2015 UTC,"This is the exact same question on stackoverflow, it's a bit easier to read there:  http://stackoverflow.com/questions/29470865/greenline-xcode-exc-bad-instruction-on-nsuserdefaults-optional"
swift,31oy3i,LetsCodeSomethingFun,1 point,Tue Apr 7 00:37:36 2015 UTC,What is the exact line of code that is causing the crash? I tried to reproduce the crash but didn't get it.  Do you have any places where you do something like savedTotalSeconds! when the value is nil?
swift,31oy3i,LetsCodeSomethingFun,1 point,Tue Apr 7 02:59:41 2015 UTC,"Those lines were working perfectly before, but now I have no idea what changed it  It's really distressing  I know it's an optional so I make an if statement, if it's == nil I assign it a value of 0 then I make sure to unwrap it later.  This is mega frustrating"
swift,31oy3i,mick1203,1 point,Tue Apr 7 03:13:32 2015 UTC,"What I mean is which line does Xcode highlight when the app crashes? When your app throws a EXC_BAD_INSTRUCTION, Xcode will highlight the line that caused the issue.  EXC_I386_INVOP happens if you try to unwrap an optional that's nil. For example:  var optionalInt: Int? println(optionalInt!)   In order to get an idea of why your app is crashing, we need to see the line that's causing the crash."
swift,31nq9k,PirateStef,3,Mon Apr 6 19:03:20 2015 UTC,"NSScanner  let string = ""set time to 5 seconds""  let scanner = NSScanner(string: string) var value: Int = 0  scanner.scanUpToCharactersFromSet(NSCharacterSet.decimalDigitCharacterSet(), intoString: nil) if scanner.scanInteger(&value) {     println(""did scan \(value)"") } else {     println(""can't scan integer"") }   Since it looks like you want to build a natural language parser you should look at NSLinguistic​Tagger. I've never used it, but NSHipster has an article which should get you started."
swift,31nq9k,fluchtpunkt,1 point,Mon Apr 6 19:15:56 2015 UTC,"thanks! NSScanner seems like the thing I was looking for. thanks!  Why do I first need to do use?: scanner.scanUpToCharactersFromSet(NSCharacterSet.decimalDigitCharacterSet(), intoString: nil)  before the if statement. I don't really understand what it does.  NSLinguisticTagger seems way too complicated to use for what I want."
swift,31nq9k,fluchtpunkt,3,Mon Apr 6 20:22:27 2015 UTC,"NSScanner will scan things starting at its current scan position. If you haven't scanned anything that position will be the beginning of the string.    Since there are no numbers at the beginning you have find the first character that is a number. So you basically scan everything until NSScanner encounters the first character that is part of the decimalDigitCharacterSet() (contains numbers and decimal separators, in various languages). Since we are not interested in the part up to the number we scan into nil.   You have to explicitly scan all parts of a particular string.[1]  If you would scan into an actual string, e.g.:  var scannedString: NSString? scanner.scanUpToCharactersFromSet(NSCharacterSet.decimalDigitCharacterSet(), intoString: &scannedString)   The variable scannedString will contain ""set time to""    [1] or you tell NSScanner to ignore everything that is not a decimalDigitCharacter.   let string = ""set time to 5 seconds""  let scanner = NSScanner(string: string) scanner.charactersToBeSkipped = NSCharacterSet.decimalDigitCharacterSet().invertedSet  var value: Int = 0 if scanner.scanInteger(&value) {     println(""did scan \(value)"") }   This should work as well. I prefer the explicit way though."
swift,31nq9k,dcoupl,1 point,Tue Apr 7 10:44:16 2015 UTC,I was going to suggest a RegEx but TIL about NSScanner!
swift,31nq9k,dcpc10,1 point,Tue Apr 7 02:18:28 2015 UTC,"I agree although not sure why regex is hated around here, I got downvoted for suggesting it."
swift,31nq9k,dcoupl,1 point,Tue Apr 7 15:54:52 2015 UTC,RegEx was a good solution until NSScanner arrived at the party :)
swift,31nq9k,dcpc10,-1,Tue Apr 7 20:17:27 2015 UTC,Regex?
swift,31m55c,sasha_fishter,1 point,Mon Apr 6 10:33:38 2015 UTC,You're casting topStories to NSArray which is immutable. You could instead cast it to an NSMutableArray and use the addObject: method or alternatively cast it to a native Swift array which I suppose for the Hacker News JSON would be [Int].
swift,31m55c,yeskia,0,Mon Apr 6 11:22:44 2015 UTC,"If i cast it down to Int, it won't return me anything. I'm really stuck at this, could you provide me some example?  here is whole project"
swift,31m55c,yeskia,1 point,Mon Apr 6 11:42:47 2015 UTC,"It actually is returning the result, if you were to place a breakpoint or even print out the count you'll see that's the case. The real issue you're having is getting the data to actually display in your table view.  First off - you might want your view controller to extend UITableViewController instead of just a UIViewController, as it is more suited to handling a table view. Second, after you've loaded in your data you'll need to call the reloadData() method on your table view to actually have the table reload with your new data. Does this make sense?"
swift,31m55c,yeskia,1 point,Mon Apr 6 11:59:27 2015 UTC,"Yes, but it only do that after JSONSerialization, if i put println with count anywhere else, it won't printout count of that instance property. As for table, I don't fully understand what you mean. Could you to this in project and send just to see what you changed?"
swift,31m55c,yeskia,0,Mon Apr 6 12:04:34 2015 UTC,"I've updated the project here. After a little loading time the table view will reload with the IDs of the top posts from Hacker News.  I've done a few things: - In the storyboard I replaced your table view controller with a fresh one from the object inventory, and set the placeholder table view cell's reuse identifier to ""Cell"". - Your view controller now extends UITableViewController instead of UIViewController. It means you can access the table view object from self.tableView. After the data is loaded in from the JSON, I call self.tableView.reloadData() to redraw the table. - Your data comes in as an array of Ints, I store it this way. Before I pass the Int to a table view cell I make it into a String which the table view cell needs.  Open up and run the project, after a second or two you should see the data pop in. See how you go from there!"
swift,31m55c,yeskia,1 point,Mon Apr 6 12:09:30 2015 UTC,"Awesome, so my problem was that I didn't reload tableview? Also, how can I restrict to show only 10 posts (ID)?"
swift,31lrba,ProlificPat,3,Mon Apr 6 06:47:39 2015 UTC,"I'd do something like.... on applicationDidFinishLaunching set an NSDate object.  Then set another date object on applicationWillTerminate.   You should then be able to compare the two dates and get the time passed between the two, and reset the score value based on that.  Sorry, I know it's crude response, but typing this kind of stuff on an iphone sucks. :-/"
swift,31lrba,avery51,1 point,Mon Apr 6 07:03:21 2015 UTC,"Thanks for the reply mate, but I'm looking for something that would mean it consistently resets at say 2am or whatever, every day without fail"
swift,31lrba,adamkemp,7,Mon Apr 6 07:08:06 2015 UTC,"Actually, that's the right answer. You aren't going to be able to reliably run code in the background. Not only is that just not allowed for this use case, but it's kind of pointless anyway. If you can calculate the same results without a background task you should absolutely do that. It's in fact more reliable to do it on demand based on elapsed time because you can't possibly control when your app is in memory or not. You can, however, store a date in a preference and check it on next launch. It doesn't matter if the data is out of date when it's not being looked at. It only matters that it's right when the user can see it.  The only correction I would make is that applicationWillTerminate: won't get called these days. Instead you should use applicationDidEnterBackground:."
swift,31lrba,avery51,1 point,Mon Apr 6 07:17:39 2015 UTC,Ah gotcha.   Are you resetting all users scores at the same time every day?
swift,31lrba,vrwim,-2,Mon Apr 6 07:14:19 2015 UTC,"I would like to, as soon as they've opened the app and it's past the reset time i.e. midnight last night I would like to reset the score  If possible  My idea atm was if I could create a date object at midnight and if the current time is greater than that date object by more than one day it would reset all stats - could I do this?"
swift,31jcpb,bulldogs93,3,Sun Apr 5 17:32:58 2015 UTC,"Can you post the error log / PM it if you prefer?  I work at Yahoo (not on the SDK team, but in the same group) and can definitely help out."
swift,31jcpb,clarle,1 point,Sun Apr 5 20:25:53 2015 UTC,"Thanks for willing to help! Here is a copy and paste from the error log. The problem occurs when I add -ObjC and -all_load to the Other Linker Flags under Build Settings (required for Yahoo Search SDK). I am not sure how to fix it since it is a problem with Parse. I have googled around and I have seen suggestions to replace -ObjC with -force_load but I am not sure.  Undefined symbols for architecture i386:   ""PFParseErrorDomain"", referenced from:       -[PFSignUpViewController _signUpAction] in ParseUI(PFSignUpViewController.o)       -[PFSignUpViewController _signUpDidFailWithError:] in ParseUI(PFSignUpViewController.o)       -[PFImageView loadInBackground:] in ParseUI(PFImageView.o)       _32-[PFImageView loadInBackground:]_block_invoke30 in ParseUI(PFImageView.o)       -[PFSignUpViewController _signUpAction] in ParseUI(PFSignUpViewController.o)       -[PFSignUpViewController _signUpDidFailWithError:] in ParseUI(PFSignUpViewController.o)       -[PFImageView loadInBackground:] in ParseUI(PFImageView.o)       __32-[PFImageView loadInBackground:]_block_invoke30 in ParseUI(PFImageView.o) ld: symbol(s) not found for architecture i386 clang: error: linker command failed with exit code 1 (use -v to see invocation)"
swift,31jcpb,iNoles,1 point,Mon Apr 6 00:19:35 2015 UTC,ld: symbol(s) not found for architecture i386    you have symbols that couldn't compiles on i386
swift,31jcpb,clarle,1 point,Mon Apr 6 06:04:49 2015 UTC,I am not sure what that means? I am relatively new to iOS development.
swift,31jcpb,clarle,1 point,Mon Apr 6 19:04:02 2015 UTC,"I can't seem to reproduce your issue - it seems to work alright for me with both Parse and the Yahoo Search SDK.  Can you check to see if you missed including any frameworks while compiling?  http://stackoverflow.com/a/7955906/596325  Cheers, and let me know what the output of that might be."
swift,31irbb,tacojohn44,3,Sun Apr 5 14:15:36 2015 UTC,"Hey there.  It seems as though you're trying to use a class that doesn't exist!  If you'd like to subclass the UIButton for your own use, you can do so like this:  class CheckBox:UIButton {      var isChecked:Bool = false      required init(coder aDecoder: NSCoder ) {         super.init(coder: aDecoder)     }      override init(frame: CGRect) {         super.init(frame: frame)     }      override init() {         super.init()     } }   But I don't think you'll need that, here's a copy / paste of what I was able to come up with for you:  import UIKit  let triple: Int -> Int = {     (number: Int) in      let result = 3 * number      return number }  triple (3)  let listOfNumbers = 1...5 var sum = 0 for atNum in listOfNumbers {     sum += atNum } sum  var j = 2 for var i = 0; i < 5; ++i {     j += j * j } j  let size = (20, 40) switch size { case let (width, height)     where width == height:     println(""square with sides\(width)"")     width     height case (1...10, 1...10):     println(""small rectangle"") case let (width, height):     println(""rectangle with width \(width) and height \(height)"")     width     height }  let frame = CGRect(x: 0, y: 0, width: 150, height: 150)  let customView = UIButton.buttonWithType(UIButtonType.Custom) as UIButton  customView.frame = frame  customView.backgroundColor = UIColor.blueColor() customView.tintColor = UIColor.orangeColor()  customView.selected = true"
swift,31irbb,vitaminrad,1 point,Sun Apr 5 18:44:09 2015 UTC,Thank you very much. I truly appreciate your help.
swift,31i0nk,comyarzaheri,2,Sun Apr 5 06:56:29 2015 UTC,"The utility is part of a larger library idea me and my friends are working on. The timer is pretty simple but might be a useful example if you're just getting your feet wet with Grand Central Dispatch. What I'm really looking for is suggestions for other GCD utilities that people might find useful, so feel free to respond if you've got any."
swift,31i0nk,burritofridays,2,Sun Apr 5 07:00:08 2015 UTC,"This looks great, is it possible to increase the timer incrementally, say like for the purposes of a time based game? For example, the user grabs an item that adds 5 seconds to the timers total countdown integer."
swift,31i0nk,burritofridays,1 point,Mon Apr 6 14:13:16 2015 UTC,"Not exactly, this is just a repeating timer not a countdown. But you could accomplish that using this timer by having the timer decrement ""time remaining"" every second and adding time to the ""time remaining"" anytime a user grabs an item.   We're currently working on adding another timer that could also fit your use case in a sort-of roundabout way. It's a ""VariableTimer""; each time it fires, it asks a delegate for its next firing interval so you can variate firing intervals based on some external function. For example, I'm using it to control how often a cache checks for expired items based on the frequency of ""puts"" that push the cache close to its capacity.   We could add a countdown timer with the functionality you mentioned if you're interested, I could definitely see a countdown that allows you to increment/decrement on the fly being useful."
swift,31i0nk,omfgtim_,1 point,Tue Apr 7 03:17:46 2015 UTC,I'd absolutely be interested in this functionality. I'm currently using SKActions to get the aforementioned functionality.
swift,31i0nk,omfgtim_,2,Tue Apr 7 14:45:30 2015 UTC,"We've started working on it, so look out for an update in the next few days."
swift,31i0nk,omfgtim_,1 point,Wed Apr 8 02:19:32 2015 UTC,What does this offer that NSTimer doesn't?
swift,31gs50,_lowell,1 point,Sat Apr 4 23:00:49 2015 UTC,Thanks for sharing this! I enjoyed watching it and learned a bit. :)
swift,31hoeg,temporary_art,2,Sun Apr 5 04:19:00 2015 UTC,"If your model code doesn't depend on UIKit, you could make a Mac target for it, and test that. Foundation and Swift are pretty much the same on both iOS and OSX."
swift,31gkzc,kobot,3,Sat Apr 4 21:56:12 2015 UTC,What you want is the Keychain API.
swift,31gkzc,ReasonReader,0,Sun Apr 5 01:39:24 2015 UTC,"You do know you shouldn't have any secret keys in your app, right? They can easily be extracted. Your app should authenticate with a server, and the server has secret keys to interact with whatever service needs them. Anything you put in your app, whether in compiled code or text, should be assumed public information."
swift,31gkzc,mistermagicman,3,Sat Apr 4 22:09:28 2015 UTC,"But how then do you verify the communications between your app and the server? You need to use some sort of token or client secret, or anyone can easily retrieve the API token/secret from the server. But now you again have a visible token/secret in the app that can be extracted. Where does the chain end?  This can only ever give security through obscurity – if someone truly wants that API token, they will get it. And once they do get it, the worst they can do is make a bunch of API calls using your token, potentially using up your requests."
swift,31gkzc,SirGlaurung,3,Sun Apr 5 00:09:35 2015 UTC,"It's turtles all the way down! I've seen this claim that you should never put secrets in your app, but I've yet to see a suggestion that does anything but add an extra link to the chain. A little obfuscation serves a practical purpose, but should be recognized as a deterrent, not a solution.  The most important thing in my mind is making sure you can revoke any API keys you include in your app."
swift,31gkzc,tonygoold,1 point,Sun Apr 5 00:45:37 2015 UTC,"I can see it being useful for a web app – don't send the API key and have the web app directly query the API source, instead have the app query the server backend which queries the API. But for a native app, it loses much of it's utility."
swift,31gkzc,SirGlaurung,1 point,Sun Apr 5 01:17:36 2015 UTC,"Yes I agree, although I guess mistermagicman was talking about the client secret token which should remain secret. This is some token that is associated with a user ID which can be obtained after a user has logged in. In my app, API requests are only valid when the client token is valid. That's different from an app token which can be public. I haven't implemented logging in yet so that's why I'm just hardcoding it for now.  In any case, I figured out the answer to my problem, which was plists!"
swift,31gkzc,koalefant,1 point,Sun Apr 5 00:22:50 2015 UTC,Generate a key and store it in keychain on both ends?
swift,31gkzc,mistermagicman,1 point,Sun Apr 5 03:52:57 2015 UTC,"Oops yea I just said that because I haven't implemented that part yet. In any case, my question still stands because there are properties that are not necessarily private (e.g. app id, the url of the api) that change between production and development environments. I want an easy way to switch between the 2, rather than commenting out variables."
swift,31h4iv,pepsidry,1 point,Sun Apr 5 00:56:34 2015 UTC,"By search do you mean get the address location's coordinates? If so it's pretty simply to do. You could use an address and get coordinates by using a method called Forward-Geocoding. Here's an example.  let geocoder = CLGeocoder() geocoder.geocodeAddressString(""123 Main Street, City Town State"", completionHandler: { (placemarks, error) -> Void in     if placemarks.count > 0 {         let placemark = placemarks.first as CLPlacemark         let location = placemark.location         let coordinate = location.coordinate     } })   More info."
swift,31h4iv,isurujn,1 point,Sun Apr 5 06:04:58 2015 UTC,"Cool! Now is there any way to distinguish between ""123 Main Street"" and ""Regal Cinemas"" in the same search field? Or would it be easier to to just to have a toggle to search between the two?"
swift,31h4iv,isurujn,1 point,Sun Apr 5 15:56:48 2015 UTC,I don't quite understand what you mean by 'in the same search field'. Do you mean entering both addresses in the same string?
swift,31h4iv,isurujn,1 point,Mon Apr 6 05:03:46 2015 UTC,"I have a search bar that the user can input a destination. Currently, the user can type ""Regal Cinemas"" and it will display the local results in a table view, but if they type ""123 Main Street"" into the same search bar, they get no results. Is there a way to tell which ""search"" the user is trying to accomplish (Address or Place Name)?"
swift,31h4iv,waterskier2007,2,Mon Apr 6 10:54:17 2015 UTC,I don't think there is such a way.
swift,31fa3k,Myshakiness,1 point,Sat Apr 4 15:05:13 2015 UTC,"I've found with some of my apps i've made with iAds that even the release version gets a bit laggy if the iAds are present.  From what i've found, it happens to all apps no matter if they are made with XCode, Adobe Air or others... The issue seems to lay in iAds giving top priority over all other code in the app.  Some people have noticed if they use Wifi instead of a mobile network that their apps stop being so laggy.  I noticed this is my latest app that runs perfect without iAds, but runs like a dog if iAds is loaded.  Most people find their apps go from about 59 frames per second without iAds to 35 frames per second with iAds.  Supposedly there is a fix for people who use XCode by implementing the iAd logic in your UINavigationController subclass that was set in the appDelegate.  No idea how to fix it when using other programming languages."
swift,31fa3k,mklbtz,0,Thu May 7 02:43:00 2015 UTC,My solution: charge for your app instead of using ads ;-)
swift,31e9x7,dapperslendy,1 point,Sat Apr 4 06:07:11 2015 UTC,What are the constraints you added ?  i expect they would be left/right height distance from bottom ?
swift,31e9x7,criosist,1 point,Sat Apr 4 07:51:12 2015 UTC,"Yes just the basic ""look good"" constraints"
swift,31e9x7,SheepWheatOre,1 point,Sat Apr 4 16:45:08 2015 UTC,Try removing the left/right constraints and adding a width and center-x constraints.
swift,31c9ee,disu93,3,Fri Apr 3 18:58:41 2015 UTC,"This is a much more difficult problem than you'd initially think.  Here's the basic idea of how you'd do this:   Get buffer of audio data (in PCM float format) Calculate RMS of the data Take a moving average (of various sizes) Look at the gradient.  You're looking for consistent positive gradient (increasing energy) over several samples.   If you want this to run in real-time then Swift isn't the language to use.  DSP work is almost always done in C/C++ (or assembly).  I'd therefore use an Objective-C++ class for this.  I'd highly recommend using The Amazing Audio Engine for getting audio in and out of your program.  If you're interested I might be able to knock up a basic example to get you started.  Any questions, feel free to ask"
swift,31c9ee,Opcao,3,Sat Apr 4 09:40:30 2015 UTC,"Thank you for your very detailed response!  I'd love to have a basic example but if it's going to take too long then I don't want to waste your time either. I'm very new so I won't understand a lot of the code.   Also, because this measures sharp increases in audio, how would this work vs. measuring frequency?   I found an app that uses frequency: https://itunes.apple.com/gb/app/clapmera-take-pictures-by/id519363613?mt=8.   The developer: http://stackoverflow.com/a/16227039/4747384.   I tested it out by playing music in the background and it still detected my claps really well, would looking for a consistent positive gradient work as effectively?   edit: I found an example that measures audio frequency and outputs it https://github.com/krafter/DetectingAudioFrequency. Is it easy to manipulate this to ""do something if frequency = x"" ?"
swift,31c9ee,Opcao,1 point,Sat Apr 4 11:58:25 2015 UTC,"Yea mate no worries, I was in a similar position to you a couple of years back (almost no programming knowledge, trying to figure out some basic audio questions).  Looking for a consistent positive gradient is going to perform worse than the app you've mentioned.  I can't say for sure without testing it but I'd guess the method I outlined would give more false positives.  One way to reduce these errors might be to band limit your audio before analysing it, and apple has some built in AudioUnits that make this relatively straightforward to do.  Working in the frequency domain gives you much easier access to information about your audio, but it's more difficult both conceptually and in terms of programming than just dealing with the time domain data.  I'd start by using a program like Audacity and plotting various graphs of the audio (spectrogram, power etc) and see if you can visually detect the features that suggest a clap.  Then at least you know what data you want to try and extract.  If you do decide to pursue this, then be prepared that it'll be a massive pain in the arse, although it'll teach you a huge amount.  I'll try and throw together a quick class that detects claps and notifies a delegate.  It won't be perfect (old reused code) but it'll be a good starting point for you to experiment with.  It might take a few days as I'm visiting family all weekend.  Do you know any C, C++ or Objective-C?  edit: I've had a brief look over the Krafter link.  It looks pretty solid though it's not the most readable code in the world.  It does provide all the frequency data you would need in your app though it'd take a fair amount of knowledge to access it.  FFT's are pretty complicated programming, so I'd recommend starting simple and building up"
swift,31986p,ProjektProgram,2,Fri Apr 3 00:27:37 2015 UTC,"Your code, frankly, makes no sense.  Firstly, you seem to be declaring firstActivityItem twice, for what reason i'm not sure. Next, you are directly creating an instance of UIActivity, which you are not suppose to do.  UIActivity is meant to be subclassed and not instantiated directly.  Next, you are for some reason comparing this instance to a constant string.  At this point, i'm not even sure how your code compiles, but according to you it does.  In any case, there is no way this comparison can ever evaluate to true, so the subsequent block of code will never fire.    Basically, you seem to be trying to check if the user selected twitter before you've even presented them with the UIActivityViewController.    You need to remove the if around the rest of your code and instead use the completionWithItemsHandler property of the UIActivityViewController to check if the share completed via twitter.  This handler receives an argument for the type of share action the user selected and also an argument to determine if the user actually completed the share operation or cancelled it."
swift,316nn3,robE89,20,Thu Apr 2 12:30:23 2015 UTC,You are good to go to learn swift but just know that you are going to need to learn objective c or at least know how to read and  understand it.  There are so many libraries written in it and so many answers on stackoverflow in it that you are bound to start learning it while learning swift.
swift,316nn3,Egodude,8,Thu Apr 2 13:08:36 2015 UTC,"As someone who learned Obj-C for one year before Swift came out, I can tell you that being able to read Obj-C and translate it to Swift has been unbelievably helpful to me, for reasons others have mentioned.    I think at a bare minimum, you should learn the syntax and get comfortable reading it. Even Apple's documentation for Swift is incomplete, and you'll run into times when a method will exist in Swift, but you'll have to read its definition in Obj-C. It will be a big help.   I like the Big Nerd Ranch books. Here's a PDF of their Obj-C one."
swift,316nn3,thevoiceofzeke,3,Thu Apr 2 16:16:18 2015 UTC,"Is it, though? Swift 1.2 is a huge advancement, but it's still in beta and it breaks backwards compatibility. Who knows when the next big break will be. I think we'll have a much better idea of where Swift is going after WWDC.  Swift is clearly the future, but it's not completely baked. And that's fine. These things take time. But it looks to me like it's far from a no brainier. Anyone jumping into Swift now without having a strong Objective-C background should at least know what they are getting into."
swift,316nn3,NothingWasDelivered,4,Thu Apr 2 17:17:42 2015 UTC,"I know it's been said here already, but Swift makes use of ObjC in a few areas still.  Like Selectors, while not necessarily the same in Swift, and much more convenient, it is still a bit of a patch.  The more I learn about ObjC the more I enjoy Swift."
swift,316nn3,vitaminrad,6,Fri Apr 3 03:45:54 2015 UTC,"Learn Swift and skip Objective-C. Sure, people will tell you that there's a ton of old Objective-C code out there but that's not really a big deal. When you need to look at Objective-C code (which isn't often) you only need to be able to understand just enough to see what's going on. You'll be able to do that after spending some time with Swift.  Swift is absolutely stable enough for you to learn."
swift,316nn3,Hawk_Irontusk,2,Thu Apr 2 14:47:50 2015 UTC,"The answer depends on your goals.  If you just want to write apps yourself, learn Swift.  Its more than capable and much of the early anarchy is gone.  If you plan on applying for a job  a lot of places are stuck in Objective C because its where all their skills lie and their legacy code lives."
swift,316nn3,joycamp,2,Thu Apr 2 13:17:28 2015 UTC,"Depending on how dedicated you are at learning, you may benefit from learning Obj-C. For instance, if you're only going to spend 1-2 hours a day learning, there's little point learning Obj-C; Chances are, Swift development will be faster than you can learn it in the first place.   If you're spending 10 hrs a day dedicated to learning Swift, there may be some merit to understanding Objective-C. I've gone through 8-10 hours a day for 4 months (Since December) and I've only recently left the ray-wenderlich/other tutorial training wheels to explore apple documentation and new frameworks on my own.   But really... even if you're dedicated, depending on your background, you need time to get used to Objective-C. By the time you get used to it and are proficient at the mainstream frameworks, Swift would probably be a full fledged beast. And then you'd have to go through a transitioning process from Objective-C to Swift."
swift,316nn3,flCer,2,Fri Apr 3 00:12:01 2015 UTC,Im good friends with a 3rd year CompSci who is writing his final year project in Swift. He says its stable but it is updated regularly which sometimes causes his apps to break. Just something to bare in mind
swift,316nn3,NoMadCompSci,2,Mon Apr 6 09:25:39 2015 UTC,"We've only had two versions, and Apple provided a migration tool. I'm not sure that counts as 'regularly'."
swift,316nn3,toastable,2,Thu Apr 2 13:52:17 2015 UTC,Apple provided a migration tool for the changes from 1.1 to 1.2. There were plenty of changes from 1.0 to 1.1 and even more changes happened before 1.0.   I basically went All-In on Swift a week after WWDC. Regularly is the right word.
swift,316nn3,fluchtpunkt,1 point,Fri Apr 3 11:38:33 2015 UTC,"I think that's much more a mistake in committing before version 1.0. I don't know why you'd do that and then argue there have been too many app-breaking changes.  To me, the fact there's only been one major update since public release without a migration tool is quite promising."
swift,316nn3,toastable,1 point,Sat Apr 4 09:20:32 2015 UTC,"It broke his build. His app was and is safe, because the Swift runtime version that was used to compile the app is bundled with the app.   The only problem with these changes,besides the time to fix them, is that you can't go back to an older Xcode version. Once you upgraded your code to work with the newest Xcode Beta you are stuck with that Beta. Which means you will not be able to submit your app to the App Store until that Xcode version went stable."
swift,316nn3,fluchtpunkt,1 point,Sun Apr 5 11:23:58 2015 UTC,You can download previous versions of Xcode. They are available at http://developer.apple.com with a free registration.
swift,316nn3,MaddTheSane,2,Sat Apr 4 09:18:27 2015 UTC,No.
swift,316nn3,DaemonXI,2,Tue Apr 7 18:43:57 2015 UTC,Yes and no and maybe. Just learn them both.
swift,316nn3,finn_thehuman,2,Fri Apr 3 05:16:56 2015 UTC,"It depends on your goal and if you already know C.  If you already know C, then ObjC is not that hard to pick up.  If you are starting from scratch, Swift will be easier to learn.  If you are hoping to get a job programming iOS in the near future, you should really learn both."
swift,316nn3,dar512,1 point,Fri Apr 3 08:03:50 2015 UTC,"I think Swift 1.1 and XCode 6.2 are both mature enough to start learning and skip over objective c.  I'm really looking forward to Swift 1.2 and XCode 6.3, but I'm already using Swift daily as it is now.  It definitely helps to know ObjC though as I port over code from one to the other all the time."
swift,316nn3,skoll,1 point,Thu Apr 2 14:56:13 2015 UTC,"You should still learn Obj-C, until and unless Apple replaces Cocoa and Cocoa Touch with a new, Swift-based platform."
swift,316nn3,ReasonReader,-3,Fri Apr 3 17:59:43 2015 UTC,Skip obj-c. It's prehistoric at this point.
swift,316nn3,seven_seven,0,Thu Apr 2 17:24:06 2015 UTC,"Learn both. It's not a question of stability, it's the fact that you'll be using a lot of libraries and frameworks that use ObjC. As an example, I used Core Plot in a recent Swift project. Knowing my way around the code really helped when there were issues."
swift,31860x,aaronheine,1 point,Thu Apr 2 19:37:29 2015 UTC,"use the |--| in the GUI editor to set image constraints, add view.addSubview(myView) at the end of viewDidLoad"
swift,315lav,avinassh,2,Thu Apr 2 04:06:48 2015 UTC,Hi! I've made the same things with my app. you can find it here.  The method you're using is valid if you have a valid Mac developer programs; if you want to make it works  you have to use the classes in the LaunchService frameworks. Take a look at PALoginItemUtility class in my project and you can see how I can verify if my app is added to the login item and how to add/remove it.
swift,315lav,pablosproject,2,Thu Apr 2 09:29:32 2015 UTC,"So, ServiceManagement works only if I have access to Dev program? And if not, I have to use Launch Service frameworks?"
swift,315lav,pablosproject,2,Thu Apr 2 09:44:32 2015 UTC,"Just installed your app. It is just... so nice! Really nice UI, love it. Also there is so much to learn for me. How to organize code base, project, directories etc. I will try to learn those.   Can you tell me how to create directory in the project? For example, you have Application, Controller, Library as different directories, even on file system.  When I create New Group in Xcode, they are organised in different directories in Xcode project, but on file system they are not.  I looked at the code, if I use the library PALoginItemUtility, I just have to call PALoginItemUtility.addCurrentApplicatonToLoginItems() to add and PALoginItemUtility.removeCurrentApplicatonToLoginItems() to remove? Woot, that just made my life simple.   I think you should ship this as separate library."
swift,315lav,pablosproject,1 point,Thu Apr 2 11:59:33 2015 UTC,"Thanks a lot!  First of all: to organize filesystem, you have to do it manually, no short path. Every time I create a new group in the project I bind it to a folder in the filesystem, so every file that you create will be added to that directory. You can also use appcode that permit to create group + folder automatically.  If I have time I'll certainly release it as OSS library, no problem! Hope to have helped you!"
swift,315lav,pablosproject,1 point,Thu Apr 2 12:46:41 2015 UTC,"Great, thanks again!  one more thing, you have committed your parse api keys to git. link"
swift,315lav,mipadi,1 point,Thu Apr 2 14:43:35 2015 UTC,Whoops! Thanks!
swift,315lav,mipadi,1 point,Fri Apr 3 09:27:25 2015 UTC,"Api keys not need to be secure, they can be exposed to public. I fixed it by using this guide, if anyone is looking for it."
swift,315lav,mipadi,1 point,Fri Apr 3 09:38:59 2015 UTC,here are the instructions if anyone is looking: http://stackoverflow.com/questions/6402661/workflow-to-create-xcode-groups-as-file-system-folders
swift,315lav,mipadi,1 point,Thu Apr 2 14:44:54 2015 UTC,How do you know the helper app isn't launching?
swift,315j9i,StudioSevenDesigns,5,Thu Apr 2 03:49:06 2015 UTC,"So I guess you didn't read the console output at the bottom right? Gonna guess that the property ""guess"" isn't connected to anything and this is nil at this point."
swift,315j9i,ztj,4,Thu Apr 2 04:08:37 2015 UTC,"Look at the output in the console: Unexpectedly found nil when unwrapping an optional value.  When you declare a value as a var like that, you're saying 'immediately evaluate this expression and give me the answer.'  However, that UITextField is an IBOutlet, and you can't be sure that outlet will be anything but nil until awakeFromNib() is called.  What you might want to do instead is something along the lines of this:  var guessInt: Int? {    return guess.text.toInt() }   This means any time you call self.guessInt, you're actually calling guess.text.toInt(), rather than that being evaluated when your controller is instantiated.  Keep in mind, though, that you can't call guessInt before awakeFromNib has been called."
swift,315j9i,lyinsteve,3,Thu Apr 2 04:10:41 2015 UTC,If you look next to your @IBOutlet for your guess textfield you will see the circle is white not gray.  This means that there is not connection to your textfield so that you are not actually getting the value it is always nil.
