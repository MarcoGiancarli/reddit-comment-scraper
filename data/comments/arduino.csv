arduino,3e4hgf,SwellsInMoisture,5,Tue Jul 21 21:58:50 2015 UTC,"It's because you're using float variables. Floats can only store so many digits, and I would suspect this line is the problem:  Serial.print(((lastRec - lastSent)/1000000.0000)*m/2*1000.0000);   When lastRec and lastSent are sufficiently big, the precision you can acieve with float is smaller than the difference between the two values, soyou probably end up doing:  Serial.print(((1e8 - 1e8)/1000000.0000)*m/2*1000.0000);   Floats should be avoided whenever possible. Float math is very, very slow, and due to the way the numbers are stored, you can run into nasty bugs to do with rounding errors. Grossly simplified, if you do 2.0-1.0 with floats, the result might be 1.000001.  So in terms of best practices, use int, long or unsigned long variables whenever possible, and if you need to output a float number like 101.13mm, only convert to a float in the very last step. Use unsigned longs for your timing variables and calculate distances as whole micro- or nanometers if you have to, but don't juggle floats like that.  Also, it's best not to use Serial stuff in your interrupt service routine. You only do the bare minimum in the ISR, like record the time, then set some kind of flag variable like 'boolean recvISRtriggered' which you then check in your loop(). Everything that doesn't need to happen instantly, like the math and Serial output should happen inside loop() rather than the ISR."
arduino,3e4hgf,bal00,1 point,Tue Jul 21 22:26:57 2015 UTC,"I agree not to use floats (on arduino) generally but it should be known that floats can be used for integer arithmetic safely and without rounding up to the maximum value of their significand, in this case 23 (+1 sign bit) bits ~= 8.3 million. With doubles this value is much higher. Same goes for multiplication and even divisions. You only run into trouble in this range with fractional multiplications and uneven divisions."
arduino,3e4hgf,gliph,1 point,Wed Jul 22 03:33:07 2015 UTC,"Thanks.  I'm planning on modifying it to move stuff out of the ISR and just doing a basic ""debounce"" style loop to decide to print or not within the main loop.  On floats, I'm a bit confused... The reference section says, ""Floating-point numbers can be as large as 3.4028235E+38 and as low as -3.4028235E+38.""  While you've got a point that they're not efficient in terms of memory, the difference between 1e8 and 3e38 is, well, insanely huge.  I'll modify it anyway and see if it improves!  Thanks again."
arduino,3e4hgf,Alborak,2,Tue Jul 21 22:48:01 2015 UTC,"The issue is that they can't represent numbers with the same precision across the whole range. There are a limited number of mantissa bits, and large numbers need these to represent numbers left of the decimal point. That's why something like this can happen:  if(1e20 + 0.0001 == 1e20) {     printf(""True\n""); }"
arduino,3e4hgf,Alborak,1 point,Tue Jul 21 23:28:10 2015 UTC,"Code, if you're interested:  int sendPin = 2; int receivePin = 3;  float lastSent; float lastRec;  float m = 1481.0000; // Speed of sound  void setup(){   Serial.begin(9600);   pinMode(sendPin, INPUT);   pinMode(receivePin, INPUT);   attachInterrupt(0, sent, RISING);   attachInterrupt(1, received, RISING); }  void loop(){   //delay(1000); }  void sent(){   lastSent = micros(); }  void received(){   lastRec = micros();   Serial.print(""Sent: "");   Serial.print(lastSent);   Serial.print("", Received: "");   Serial.print(lastRec);   Serial.print("", Distance: "");   Serial.print(((lastRec - lastSent)/1000000.0000)*m/2*1000.0000);   Serial.println("" mm""); }   And yes, I know that micros() doesn't quite give me the resolution I need - I can only resolve around ~3mm height here.  That's good enough for now as this is proof of concept and actual implementation will be doing address calls and measuring in clock cycles at 16 MHz."
arduino,3e4vps,Claydogh,14,Tue Jul 21 23:48:06 2015 UTC,"If you're paying $12 for a clone, yes, you're being cheated. You can get them for $3 on AliExpress. And yes, they work just as well as the real deal."
arduino,3e4vps,bradmont,3,Wed Jul 22 00:11:00 2015 UTC,I've never bought anything on AliExpress... how dependable is the site in general?
arduino,3e4vps,kiddico,1 point,Wed Jul 22 01:14:32 2015 UTC,As long as you don't need anything right away it's fine.
arduino,3e4vps,SludgeVohaul,1 point,Wed Jul 22 01:21:28 2015 UTC,"Same as eBay. Good and bad, you just have to get to know the seller. If it's too cheap to be true then it probably is."
arduino,3e4vps,dedokta,1 point,Wed Jul 22 01:45:57 2015 UTC,"I use $2.77 UNO compatibles and $2.10 Nano compatibles from Aliexpress. They work just fine.  Even Micro Pro 168 boards will be more then enough for most tasks and start at $1.40 (you need a USB programmer or use a UNO for it though)  It's similar to ebay: Buy from stores with a lot of good ratings and product ratings, e.g. http://www.aliexpress.com/item/Free-shipping-high-quality-UNO-R3-MEGA328P-CH340G-for-Arduino-Compatible-NO-USB-CABLE/1967735193.html and not some 3-rating seller even if it may be 50 cents cheaper. :-)  Can take for ever though. Make sure to extend the protection or make claims within the protection period.  Micro 168 (Not 328! No USB) http://www.aliexpress.com/item/1pcs-Pro-Mini-328-Mini-ATMEGA328-5V-16MHz-Free-Shipping/1432585134.html"
arduino,3e4vps,schorhr,1 point,Wed Jul 22 01:48:20 2015 UTC,I've bought many many things from led drivers to LEDs to lenses to aquarium stuff. Always got what I purchased. Just sometime the quality is lower if you get the no name stuff which is to be expected.
arduino,3e4vps,whosthetroll,1 point,Wed Jul 22 02:13:33 2015 UTC,"I buy a LOT from Aliexpress. It's a very reliable website and they have a lot of buyer protection, just make sure the seller you are buying from is somewhat established. I wouldn't recommend buying from someone with zero or close to zero feedback. The free shipping takes a while but the savings make it worth it if you are patient.  I bought myself a $35 arduino kit from there a while ago, it took 2 1/2 weeks to arrive. If I were to buy all of the parts from Amazon, for example, it would have easily cost me over $100. The board I got can be found for under $3 on Ali and it does literally everything a normal board does."
arduino,3e4vps,24Gospel,8,Wed Jul 22 02:58:13 2015 UTC,"Arduino is open source so legit clones are fine. Pick a good brand though, I have a bunch of SaneSmart Megas that work great.   That being said, Arduino is more than the board. Between the IDE, education and outreach you should find a way to support them if possible. If not monetarily, at least sharing what you learn can be a big and valuable way to do that."
arduino,3e4vps,maosBOT,2,Wed Jul 22 00:21:35 2015 UTC,Off brand is fine mostly. have a look on ebay. Nano/micro boards can be found for a couple of bucks.
arduino,3e4vps,speshnz,2,Wed Jul 22 00:17:05 2015 UTC,"$6 at Microcenter, and they have a pretty great selection of components, sensors, wires, tools, you name it.  I don't set foot in a retail store very often any more but I definitely enjoy trips to the big MC.  As far as I can tell the $6 inland performs identically as any of the bigger brands."
arduino,3e4vps,LandlockedPirate,2,Wed Jul 22 01:05:48 2015 UTC,"Look into building your own microcontroller circuits based on the atmega, or buy $3 nano clones on ebay"
arduino,3e4vps,ranfea,2,Wed Jul 22 01:13:05 2015 UTC,Clones are great and well worth your money. Counterfeits are unethical and ought to be avoided.
arduino,3e4vps,amorrowlyday,1 point,Wed Jul 22 01:01:02 2015 UTC,I just picked up two arduino unos (off brand) for $7 each shipped from California in a week. I can't tell a difference and could get them cheaper if I could of waited.
arduino,3e4vps,shesaidcunt,1 point,Wed Jul 22 00:19:12 2015 UTC,"I've got a clone, it functions the same but it looks junky and is soldered very poorly, just about every component is rotated off as much as you could possibly move it, making it impossible to fit into any cases without shaving them down."
arduino,3e4vps,solusolu,2,Wed Jul 22 01:14:45 2015 UTC,"The main difference between the two is the QC done at various stages of manufacturing. Where the official sources may reject a board that doesnt operate at the edges of the specs, a clone supplier will sell anything that powers up. Intel did, likely still does similar with their processors, a 1ghz processor that wouldnt operate reliably at 1ghz would be artificially throttled to say 700mhz if it operated reliably there and sold as a 700mhz processor. Intel was doing the same with over-production, they would produce too many higher speed processors and not enough of the lower speed processors people were buying, so they would throttle the faster processors and repackage them as the slower ones."
arduino,3e4vps,joekovar,1 point,Wed Jul 22 01:47:06 2015 UTC,"I bought several of the official ones to support the project that i use for prototyping.  when it comes to building a lot of something, i buy cheap ones off of ebay in bulk.  most everything i do is simple and internet connected now, so i've moved to esp8266 programmed with the arduino IDE!"
arduino,3e4vps,anaerobyte,1 point,Wed Jul 22 01:51:26 2015 UTC,"Depending on your project it's usually wasteful to use a full arduino for a permanent installation. Consider an arduino on a breadboard all you need is a atmega238p chip with the bootloader burned in, a 16Mhz crystal, and 2 small capacitors at minimum. You can use a Uno you already have to burn the bootloader and program the chip or you can grab a cheap icsp."
arduino,3e4vps,Stone356,1 point,Wed Jul 22 02:21:09 2015 UTC,"Yes, there are a lot of cheap clones out there, and yes, a lot of them are perfectly good.  But it's also worth talking about the clones that aren't cheap. There are some good manufacturers out there that make boards at similar or slightly higher prices than the Arduino ones, with better build quality and/or added features. You might be interested in them some day, so keep it in mind."
arduino,3e49cv,jim94,3,Tue Jul 21 21:01:28 2015 UTC,"I'm not sure I understand, but I'll try. Using a 3 byte array seems like the most obvious solution so I'm not sure why you're against it.  #define SEVEN_SEG 0 #define LED1      1 #define LED2      2  unsigned char reg_data[3];  updateRegisters() {   unsigned int data;     data = reg_data[0] | (reg_data[1] << 8) | (reg_data[2] << 16);   /* Loop here to shift out all data */ }  {   /* change value of only Seven seg */   reg_data[SEVEN_SEG] = new_val;   updateRegisters(); }   Obviously fill in the specifics for how you're shifting the data out, and you can update a single LED register similarly."
arduino,3e49cv,Fumigator,1 point,Tue Jul 21 22:16:13 2015 UTC,"I'll clear this up, the first shift register that is connected to the Arduino is connected to a 7-segment display displaying the current gear. The second shift register is connected to the first shift register and holds the first 8 LEDs and the third shift register is connected to the second which holds the remaining 7 LEDs.   Shift Register 1       = Gear Shift Register 2 & 3 = RPM LED indicators   In the python code I tried to convert the read integer values into strings to be encoded into bytes but it didn't work. So I thought of a dirty way to send the data as you can see in the edited post."
arduino,3e2mbm,ayad350,13,Tue Jul 21 14:04:49 2015 UTC,video of it in action pls?
arduino,3e2mbm,ImOkayAtStuff,5,Tue Jul 21 15:52:37 2015 UTC,"i love that you used bluetooth for this, but i think it would also be interesting to figure out how to fully automate this.    Case 1: you just have one button push that makes the device erase the whole board. Case 2: you add some kind of vision and have the device look for areas that need erasing"
arduino,3e2mbm,ImOkayAtStuff,2,Tue Jul 21 16:21:49 2015 UTC,This. Having to still manually control it makes it more gimmick than something practical.
arduino,3e2mbm,mveinot,4,Tue Jul 21 16:41:24 2015 UTC,I concur.  I was thinking that you connect a webcam to a PC to do image processing to find areas that need erasing.  Then use the bluetooth to send directional commands.  Writing the image processing code for finding the relevant areas should be pretty easy.  fix camera view and hard code in the area of the image that is the board.  Look for any color that isn't white (i'm assuming this is for a whiteboard based on the eraser).  assuming you have and RGB image just any part of the board with a value < 240 (not 255 for noise rejection).
arduino,3e2mbm,ImOkayAtStuff,1 point,Tue Jul 21 17:10:37 2015 UTC,"I think it'd be easier if it was something that spanned the entire width of the board, and after you're done you'd hit a button and it'd erase in one sweep. Kind of like those magnetic boards toddlers play with"
arduino,3e2mbm,hipstergrandpa,1 point,Wed Jul 22 03:43:50 2015 UTC,how do you power it in action?
arduino,3e2mbm,ImOkayAtStuff,1 point,Tue Jul 21 16:22:14 2015 UTC,When people buy components through hackster.io does it give you any cash kickbacks? Can you just load up referral links for the components?  Interesting site. There really needs to be a more popular project site like this that rewards content creators.
arduino,3e2kg4,blickblocks,2,Tue Jul 21 13:49:16 2015 UTC,"This is awesome. I love it. Before anything else, I suggest you just make a quick song/DJ set (mostly because I want to see it) and see what would actually be useful to you before any upgrades.  Having done a chunk of this with LED strips, I recommend software, not hardware, to solve your problem. I know you said you're steering away from Ableton and storing your patterns on the Arduino, but my question is.. you're playing live, you're playing MIDI notes, why are you using the Arduino's weak processor to interpret those MIDI notes? You are playing the sound through a computer (I assume), why not just send the current beat-matched pattern the same way? (via Serial/OSC/SlipSerial, etc).  No matter what, I'm excited to see what you are coming up with so PLEASE post an update!"
arduino,3e2kg4,laggingtom,1 point,Tue Jul 21 17:47:32 2015 UTC,"I suggest you just make a quick song/DJ set   I have! Just nothing on video right now.  When I perform my own stuff I'm playing guitar along with a mostly pre-assembled mix using Ableton Live. This is where the mastered audio files and the light show MIDI tracks will be playing. I've been writing the light show MIDI for each track, and I'm happy with them.  Where I'm having trouble is using the alternate mode that is just for DJing, when I'm using Traktor Scratch, and I don't have any custom written MIDI tracks to go along with each song I might play. This is where I'll want to be able to select different looping patterns on the Arduino itself. It's very different from what I'm doing with my own stuff.  I'll post up more stuff when I have the wearables ready to go, and I'll try to do a video for sure. You can hear some of my music on my Soundcloud if you're interested: https://soundcloud.com/murderline/make-your-move-dirty-french"
arduino,3e2kg4,nizon,1 point,Tue Jul 21 20:21:55 2015 UTC,Could you pull the midi clock directly from a midi enabled mixer?
arduino,3e2ohe,ennalta,5,Tue Jul 21 14:22:43 2015 UTC,"this one uses Firmata.  probably have to modify more than just the log path, but still shouldn't be too hard to make work on any platform."
arduino,3e2ohe,chrwei,1 point,Tue Jul 21 14:48:38 2015 UTC,"I will check it out, thanks"
arduino,3e2ohe,Ditchbuster,4,Tue Jul 21 15:25:54 2015 UTC,the OpenComputers mod has the ability to connect to the internet to pass data to ports. If it was selected to connect to the IP of an internet enabled arduino they could talk to each other. OC also interfaces with redstone so it could pass events and such along. The coding probably wouldnt be too hard and the #OC channel in IRC is very friendly and active. They have helped solve a lot of my OC problems.
arduino,3e2ohe,eveningLamb,2,Tue Jul 21 22:31:57 2015 UTC,If you are a java programmer you could create a simple mod that interacts with a project called ardulink. Hard option but if youre looking for a fun project here ya go!
arduino,3e2ohe,ElFeesho,1 point,Tue Jul 21 18:26:27 2015 UTC,"I was really looking for something that would be simple enough for him to do.  If I have to code it myself I will, but I am a spaghetti coder at best."
arduino,3e2ohe,swrrga,2,Tue Jul 21 19:31:43 2015 UTC,"Don't put yourself down! I'm sure you're a ravioli coder, maybe even an arrabbiata artisan coder.   This would make a cool YouTube video if you pull it off at least!"
arduino,3e48ck,GemsForEyes,2,Tue Jul 21 20:53:58 2015 UTC,there's servo and serial examples built in...
arduino,3e48ck,chrwei,0,Tue Jul 21 21:34:37 2015 UTC,"ummm, there's nothing about serial ""built in"" to the guide. That's where I looked first."
arduino,3e48ck,chrwei,2,Tue Jul 21 21:55:11 2015 UTC,https://www.arduino.cc/en/Tutorial/HomePage check the communication section
arduino,3e18z2,linuxcsgobro,24,Tue Jul 21 04:29:53 2015 UTC,"That's a pretty bad requirement you have. I would look into replacing the corded phone with a computer with an old school fax modem. It takes in a real phone line just like a corded phone, and you can get a software to answer for you on the first ring, then transfer to a real phone as needed. You can try simulating physical touches using Arduino, but I'd think that a software solution would be easier."
arduino,3e18z2,nanalayo,3,Tue Jul 21 05:14:43 2015 UTC,Where would I start on this? I see that PCI fax modems on ebay are only 6-7 bucks. I run Linux on my machines but what kind of software am I looking for here? I'm really out of my zone on this one.
arduino,3e18z2,playaspec,1 point,Tue Jul 21 15:47:07 2015 UTC,"I would look into replacing the corded phone with a computer with an old school fax modem.... you can get a software to answer for you on the first ring,   OP could easily use his Mega to talk to the modem. He'd need a TTL to RS232 converter, and a little bit of software. Most modems with a 25 pin interface have a ring signal, which precedes the 'ring' token sent over serial. All his sketch has to do is issue an 'ATH1' on either of those signals. He'd need a button to send a ""ATH0"" to reset, or perhaps it resets on a timer."
arduino,3e18z2,SweetMister,2,Tue Jul 21 13:40:58 2015 UTC,"If this device with the modem answers the call that is great but how is the home phone actually answered? Don't I still have to press the button on my actual home phone to answer it? This only solves the least important aspect of the problem. The calls are answered quickly by means of picking up the line, but I'm already doing that. I don't want to have to press the button on my home phone to pick up the call. I'm fine with pressing it to hang up but not for answering. It's very annoying when I'm typing and have to swing my hand over to answer 100 times a day."
arduino,3e18z2,daretogo,1 point,Tue Jul 21 16:08:13 2015 UTC,"I'm liking this direction the best. Set up something to auto answer on the first ring (desktop computer, modem and mega, something), then use your ""few seconds"" to physically pick up your extension and get the automated attendant information. the auto answer doesn't have to do anything but answer.  The solutions where the audible ring is detected and triggers a mechanical action (servo or whatever) are very creative and enjoyable, but seem a little Rube Goldberg-esque for a production environment like yours.  I don't have anything specific on how to do this, I just wanted to support what I think is the better direction to go. Best of luck."
arduino,3e18z2,playaspec,1 point,Tue Jul 21 15:27:13 2015 UTC,What software answers the phone on the PC with a fax modem? I'm using Linux
arduino,3e18z2,FormatOnceAYear,4,Wed Jul 22 01:27:38 2015 UTC,"I imagine you could pretty easily attach to the leads to the speaking for the ringer in the phone, then use a pnp->npn setup to turn that into an input to the duino to in turn trigger an actuator to press the button?"
arduino,3e18z2,FormatOnceAYear,1 point,Tue Jul 21 05:43:18 2015 UTC,That excludes ever using the speaker phone since most phones use the same speaker.
arduino,3e18z2,FormatOnceAYear,2,Tue Jul 21 13:42:02 2015 UTC,"The thing about a piezo buzzer is that if you make noise into it, then it actually creates some electricity, sort of like how pointing a flashlight into a LED or turning the spindle of a motor produces electricity. So my super hacky first attempt would be to mount a buzzer facing the ringer speaker, then watch the buzzer's pin for an electrical impulse and use that as an interrupt to trigger a servo to push the button. No need to modify the phone! Or you could, you know, use a little microphone. Whatevs!"
arduino,3e18z2,speshnz,1 point,Tue Jul 21 07:17:42 2015 UTC,"This was the idea that I had but  didn't know how to complete it. In theory I saw this as a tiny speaker that detects sound, i.e. the phone ringing, and then sends the signal to the thing to press the button.   What could I use to actually press the button on the phone? I'm surprised that such a seemingly simple idea has people going off in so many directions that don't solve my problem."
arduino,3e18z2,speshnz,2,Tue Jul 21 16:16:24 2015 UTC,"Their solutions do solve your problem, they just solve it electrically instead of mechanically.  A servo-motor is a motor with high torque and whose position and speed you can control. They're common parts used often in little robotics kits, and they come with a lot of Arduino starter kits. Typically you'd attach a finger to the servo's arm so that it had something to press the button with, and then you'd make some sort of bracket to mount the servo to the phone. Detect sound, move the servo arm down to press the button, move it back to its original position."
arduino,3e18z2,MatthewPatience,1 point,Tue Jul 21 19:27:32 2015 UTC,"This is excctly what I want. Some of the solutions require another computer and a fax modem, I really don't want to go that route.  Where can I buy this stuff you mention?"
arduino,3e18z2,playaspec,1 point,Tue Jul 21 20:25:00 2015 UTC,"Any electronics supplier should have them. Digikey, Mouser, Sparkfun, Adafruit, Little Bird Electronics, AliExpress, just pick one that works for you. Or you can buy the official Arduino Starter Kit, which comes with the components you need for this and projects that can show you how to use them, plus it teaches you about Arduino in general too."
arduino,3e18z2,hkr,1 point,Wed Jul 22 02:55:52 2015 UTC,"Just checked my storage bin, I have the a started kit and I have two Analog servos!"
arduino,3e18z2,Fishmachine,1 point,Wed Jul 22 03:02:13 2015 UTC,a stuck on mechanic solution is prone to failure.  Besides why would you bother when you could plum your voice line into your computer and then programatically manipulate it how ever you wanted to?
arduino,3e18z2,frumperino,1 point,Wed Jul 22 00:22:53 2015 UTC,Is there a guide to how to do that or am I missing something? I have no idea how to use my existing line and turn it into a manipulated line using VOIP and Asterisk.
arduino,3e18z2,MoserLabs,1 point,Wed Jul 22 00:25:32 2015 UTC,"why would you use VOIP and asterisk?  you could, but why would you want to?"
arduino,3e18z2,speshnz,1 point,Wed Jul 22 00:33:14 2015 UTC,"I'm getting so many suggestions in this thread I'm confused on who is suggesting what. How would you do it. I have a phone line from the wall, then you say plug it into my computer. What do I need to do that, and also how would I maniuplate it with your method?"
arduino,3e18z2,Odd-Fuck,2,Wed Jul 22 00:34:17 2015 UTC,"I've never used the chip before so I can only point you to it, but this may get you started. Maybe look for projects on Google that have incorporated it?  http://www.ti.com/product/tcm1520a"
arduino,3e18z2,gutoandreollo,2,Tue Jul 21 05:42:54 2015 UTC,"Good find, but good luck finding any. It's obsolete."
arduino,3e18z2,snarfy,1 point,Tue Jul 21 13:52:51 2015 UTC,Get a home phone that is compatible with a Bluetooth earpiece--then open up the Bluetooth earpiece to trigger the answer button when the voltage spikes.
arduino,3e18z2,snarfy,2,Tue Jul 21 08:14:24 2015 UTC,http://www.next.gr/telephone/ringers/Telephone-ringing-detector-l12391.html  Use this detector (or something similar) and connect a relay (with short delay maybe to hear a signal before answering?) in paralell to the speaker (possibly with another transistor to avoid current problems) and contacts connected to pins of pickup key on your telephone.
arduino,3e18z2,PriceZombie,1 point,Tue Jul 21 12:56:09 2015 UTC,"Suppose you even got this to work, what sort of penalty would you get if your arduino picked up the phone for you but you weren't actually there in person, had maybe stepped out for a piss and forgot to turn off the automatic?"
arduino,3e18z2,snarfy,1 point,Tue Jul 21 07:51:52 2015 UTC,turn on DND or ringer off and problem solved.  I'd imagine they typically are signed in or out to be ready for a call or not.
arduino,3e18z2,snarfy,1 point,Tue Jul 21 10:58:01 2015 UTC,"Not a problem, I'm scheduled to take calls at certain times, I won't miss any calls. This actually would give me the freedom to move around my home and office since I have a 10 foot corded headset."
arduino,3e18z2,Codemonky,1 point,Tue Jul 21 15:15:04 2015 UTC,you could get a soft phone with a bluetooth headset?
arduino,3e18z2,Codemonky,0,Wed Jul 22 00:24:06 2015 UTC,"What happens when you press the answer-button when a call is on? The most ultimate easiest hack solution would be to just wire a proper high voltage to that button. Edit: Now that I think of it, you might as well just tape the button then.."
arduino,3e18z2,akp55,1 point,Tue Jul 21 10:59:44 2015 UTC,"The problem is the opposite. If you press the button when there's no call, you hold the line open and if anyone tries to ring, they get a busy signal."
arduino,3e18z2,akp55,1 point,Tue Jul 21 11:54:26 2015 UTC,Having the answered button pressed down by tape would not work. I wouldn't be able to answer calls
arduino,3e18z2,sparr,1 point,Tue Jul 21 15:40:04 2015 UTC,Maybe you could use a servo to physically push the hangup button.    You could use a voltage divider to sense the ring voltage and drop it to arduino levels and detect when the phone rings.  That's how I'd go about it if I didn't want to modify the phone.
arduino,3e18z2,playaspec,1 point,Tue Jul 21 14:01:16 2015 UTC,Exactly. What sort of servo thing could push the button? Can you send me a link?
arduino,3e18z2,sparr,1 point,Tue Jul 21 16:18:36 2015 UTC,I was thinking a typical standard servo.
arduino,3e18z2,sschering,1 point,Tue Jul 21 17:54:20 2015 UTC,Futaba S3003 Standard Servo           Current $11.17 Amazon (New)   High $13.87 Amazon (New)   Low $10.46 Amazon (New)    $11.13 (30 Day Average)    Price History Chart and Sales Rank | FAQ
arduino,3e18z2,sparr,1 point,Tue Jul 21 17:54:30 2015 UTC,This would press the button? I don't know much about any of this engineering stuff honestly.
arduino,3e18z2,speshnz,1 point,Tue Jul 21 19:51:19 2015 UTC,It comes with a servo arm attachment.  They rotate about 180 degrees.  You could mount/tape the servo onto the phone so that when the arm rotates it hits the button.    Here are some servos in action to help you get an idea what you could do.
arduino,3e18z2,playaspec,1 point,Tue Jul 21 23:44:21 2015 UTC,DUDE YES. YES. YES.  How do I make this? I have an Arduino but I literally never used it. The idea came to mind when trying to solve this problem. The other solutions are making my head spin. I don't want to build a customer VOIP solution or re-wire my entire phone lol.  How much would this all cost? How could I get it to automatically press when a call comes in? Something to detect the sound and send a signal to spin?
arduino,3e18z2,sparr,1 point,Wed Jul 22 00:02:44 2015 UTC,"A voltage divider is made of two resistors.  The ring voltage on a standard landline is about 90 volts, much higher than the signal voltage.  You should be able to drop that to the +/- 5v that arduino wants using a voltage divider, then check for 5v happening in your arduino program using analogRead and then swing the servo arm using the servo library  Since you're just starting out, I suggest you get each piece working before trying to put it all together.  Get the arduino working.  Play around with the blink program.  Then get the servo working using the built in examples.  Then get e.g. a 9v battery and some resistors and make some voltage dividers and try to read it.  Make sure to use a multimeter or scope so you don't fry your arduino.  Also, the google."
arduino,3e18z2,Sgt_ZigZag,1 point,Wed Jul 22 01:05:48 2015 UTC,"Now this voltage divider thing, what do I need to configure this? How does this sense ring voltage? What's the total cost on all of this? Will this work with an Ardunio mega. I'm excited to buy this stuff and set it up!"
arduino,3e18z2,HugheJass,1 point,Wed Jul 22 00:12:35 2015 UTC,"I built a caller id device years ago with a mitel 8843.  Part of the schematic (page 5-29 of http://pdf1.alldatasheet.com/datasheet-pdf/view/77073/MITEL/MT8843.html), contains a ring trigger.    Look on the bottom left of the schematic, where tip and ring are captured, decoupled with 500k resistors and 0.1uf capacitors.  Then it feeds the output into TRIGin.  You can probably do something similar to build a trigger for the ring, and detect it with an arduino.  Be careful with the decoupling though.  Ring voltage is around 100v AC.  It can fry stuff pretty quickly!"
arduino,3e41kw,ExquisitePotato,3,Tue Jul 21 20:06:39 2015 UTC,"You can implement a software UART, or software I²C.  But - why are you using an ATtiny10? It is severely limited and its application is either in very small designs or as a challange."
arduino,3e41kw,kken,2,Tue Jul 21 20:27:55 2015 UTC,http://www.atmel.com/devices/ATTINY10.aspx?tab=parameters says no uart.  SoftwareSerial is maybe what you're looking for.
arduino,3e41kw,chrwei,5,Tue Jul 21 20:28:21 2015 UTC,literally SoftwareSerial
arduino,3e41kw,chrwei,3,Tue Jul 21 20:39:07 2015 UTC,"don't see why not, might only work at slower speeds"
arduino,3e41kw,chrwei,0,Tue Jul 21 20:41:20 2015 UTC,What do you mean by lower speeds? Should I lower the baud rate? Thanks
arduino,3e41kw,chrwei,2,Tue Jul 21 21:33:34 2015 UTC,9600?  maybe faster
arduino,3e41kw,1wiseguy,0,Tue Jul 21 21:37:17 2015 UTC,"I basically gave up with the at10 at this point, because I could not find any example that allowed for receiving data, only sending it (with bugs). Going to try it with the ATx5's"
arduino,3e3pcr,Classy_Sir_,4,Tue Jul 21 18:43:52 2015 UTC,"You need to use a random seed before you call random...   use   srand (time (NULL))  Before any calls to rand,  this will randomize your list of random numbers.  Otherwise you get the same numbers in order from rand after each restart."
arduino,3e3pcr,stdalex,2,Tue Jul 21 18:54:16 2015 UTC,I still do not get how to do this. ELI5 pls.
arduino,3e3pcr,kevin_at_work,6,Tue Jul 21 19:23:02 2015 UTC,"Random number generators are not random, but pseduo random. That means they take some number as a starting point (called a seed) and then perform some operations on it each time that a new ""random"" number is requested. It's more complicated, but let's pretend that the operations are:  last_number * 3 + 7   where last_number gets initialized to whatever the seed is. If you don't seed it, it assumes 0. So the first time you call random() you would get 0 * 3 + 7 which is 7. (which then get's mapped to your specified interval). The next time you call it, it would return 7 * 3 + 7 which is 28. So if you always start at the same spot, the pseudo-random number generator will always return the same sequence of numbers.  The way to get around that is to seed it with a different number each time. But how do you get a different number each time? Well, one way to do it is with the clock time, since that always changes. However, Arduino doesn't have a persistent clock, so you'd still get the same thing (with perhaps small variation) each time. So one trick to get a variable number is to read an unused (floating) analog pin, like so:  randomSeed(analogRead(0));   /u/stdalex was mostly correct, just that the function is called randomSeed in your library instead of srand like it is on *nix systems, and that time(NULL) doesn't exist on Arduino."
arduino,3e3pcr,Sniperchild,3,Tue Jul 21 20:42:55 2015 UTC,"Read the manual https://www.arduino.cc/en/reference/random  The output is deterministic every power cycle, you bare required to enter a random seed"
arduino,3e3pcr,Krye07,0,Tue Jul 21 19:17:12 2015 UTC,There are (mainly) two types of random. One that is based off a clock. And one that's based off a seed.   The function you are calling is based off a seed. Forever and always will return the same sequence. Change the seed and you change the pattern.   Saw this at the end of break time or else I'd help more. Look for a random function based off a clock and/or timer.
arduino,3e3pcr,kopkaas2000,5,Tue Jul 21 18:50:40 2015 UTC,"There are no specific random functions based off a clock. You generally seed a pseudorandom generator like random() with data you obtain from a clock using randomSeed().  Without a Real Time Clock, however, the only clock you can rely on is the one that starts at 0 when you power up the arduino. You'll still potentially end up with the same sequence.  A potential way to get around that mess is to either wait for a human to press a button before doing the random seed (timing will never be the same), or perhaps read data from an unconnected analog input using analogRead, this should yield some chaos suitable for seeding purposes."
arduino,3e3pcr,Krye07,1 point,Tue Jul 21 18:59:42 2015 UTC,I was speaking more broadly and not specifically of Arduino or C.   My initial coding was not in either =p
arduino,3e3pcr,FormatOnceAYear,1 point,Tue Jul 21 20:18:48 2015 UTC,"Easiest way to change the seed is to use the random generator to generate a number which you use as the seed. It's still pseudorandom, but you're less likely to see the same combinations over and over.   The method recommended in the Arduino Starter Kit is to read a bare analog pin to capture the noise it's reading. You can use that to generate a seed with the above method."
arduino,3e3pcr,gnorty,2,Tue Jul 21 19:59:05 2015 UTC,"Easiest way to change the seed is to use the random generator to generate a number which you use as the seed.   How are you generating the random number for the seed? If you use the random() function, then you will get the same seed each time. A different sequence to normal, but still every time you will get that same sequence."
arduino,3e3pcr,FormatOnceAYear,1 point,Tue Jul 21 21:07:03 2015 UTC,"I prefer to generate a seed by reading analog noise and messing around with it using millis(), but if I don't wanna read analog noise, I just use millis() as long as the routine won't be running as soon as the program starts. Millis() is deterministic if you run random() at the exact same time every time, but you probably won't be."
arduino,3e3pcr,gnorty,1 point,Wed Jul 22 03:01:26 2015 UTC,"but you probably won't be.   Because of some external input? I can see that. That's probably the approach I would use tbh, but I've never needed a random number so far on arduino (not one that would absolutely need to be random).  But as I write this, I think maybe it depends on why you need the number. Maybe you want to water some plants, and drop the water at a random place every time. Then maybe you could use, for example, ambient temperature to generate a seed on boot-up, and then drop water at a random() spot every few minutes, hopefully ending up with a fairly uniform distribution across the bed. That would be fine.  But if you were generating lottery numbers, maybe not. There could be predictability in there. Generating a value from the random noise on an analog input is much better if you really do need a totally unpredictable random value."
arduino,3e3pcr,aveceasar,1 point,Wed Jul 22 03:19:18 2015 UTC,How are you generating the random number for the seed?   Didn't he just say:   read a bare analog pin to capture the noise it's reading
arduino,3e3pcr,Doormatty,1 point,Tue Jul 21 22:45:29 2015 UTC,That's not   use the random generator to generate a number which you use as the seed.    That's take the seed from a random process.
arduino,3e3pcr,gnorty,1 point,Wed Jul 22 00:58:18 2015 UTC,he did yea. I dunno how I missed it. Sorry you got downvoted.
arduino,3e3pcr,Sniperchild,-1,Wed Jul 22 01:21:42 2015 UTC,Can you provide more source and a sample sequence of numbers
arduino,3e1txg,angaaron,4,Tue Jul 21 08:37:05 2015 UTC,"what does the database do? are you displaying the data live or historically?  Personally, I would use a Raspberry Pi for this type of thing - it already has all the hardware on board, and can comfortably run a web server and SQL database. There are a TON of resources out there for apache/mySQL/php on the web, and if you want to be fancy, read up on GD image libray, so you can generate images on the fly from the mySQL data (think graphs etc)  u/pockybum522 is right also that dynamic DNS/port forwarding will allow your local web server to the world at large!"
arduino,3e1txg,gnorty,1 point,Tue Jul 21 19:29:06 2015 UTC,"ive been messing with an ardi and have plans for a final project, but i also want to do some of the same things (device reads sensors sends to webserver). Are there any crazy differences, or obscure problems between the platforms(other than hardware specs)...meaning is the learning curve similar/programming simmilar/well supported?"
arduino,3e1txg,noshovel,1 point,Wed Jul 22 03:19:50 2015 UTC,"mySQL/php is not that hard to learn, and there are LOADS of examples to modify. The database may not be fully optimised, but really that is not important on a small project.  Codewise will be different. Most people use Python, which is supposed to be very easy to learn (i never tried it personally). Your project doesn't seem too complex, so again there should be some examples that you could use with minimal modification. Certainly the levels of support are similar - in fact probably more so for the Pi, since it is really just a Linux (close enough to Unix for this purpose) machine, and people have been learning to program on Unix for decades!  None of it is really hard, though. Aside form a little formal education on database theory, I taught myself to do quite a lot just from experimenting and reading online tutorials and references. php is a lot like C. SQL can be tricky if you want to do more complex searches, but simply retrieving a value or 2 is easy. I would say that a weekend of messing about should get you where you want to be, and leave you with a decent start to work from if you ever want to do a more complex web served system.  If the actual hardware side of the code really bothers you, or you want to absolutely minimise the learning curve, then you could certainly do the sensor reading side on arduino, and let the Pi do the database/web serving from data sent over serial connection.  edit - found this - might help you if you decide to stay with arduino, whether you use a Pi or a remote webserver. :)"
arduino,3e1txg,gnorty,2,Wed Jul 22 03:36:53 2015 UTC,"https://en.wikipedia.org/wiki/Dynamic_DNS is a good way to go if you want to get from outside your network to the arduino actually hosting something.   With that plus https://en.wikipedia.org/wiki/Port_forwarding and a Webserver example sketch, you should be able to see the arduino's page that it's serving from anywhere.  It sounds like you already have web hosting and a domain set up, so you might look at a way to integrate something like https://data.sparkfun.com/  https://www.leefindlow.com/articles/using-dyndns-with-custom-domain/ looks like it'll get you started on using your own domain as DDNS."
arduino,3e1txg,PockyBum522,2,Tue Jul 21 14:17:21 2015 UTC,I have been recently playing around with UDP send receive for an automated cat feeder I'm making. Might be useful for your purposes!  https://www.arduino.cc/en/Tutorial/UDPSendReceiveString
arduino,3e1txg,knoxvomica,1 point,Tue Jul 21 19:25:05 2015 UTC,"You can put a Python listener on your server and send the status info on a periodic basis, the Python will get the data and save it into the db. Then you can make the call from the web system to de database to refresh the info on the html."
arduino,3e1txg,greenoneo0,1 point,Tue Jul 21 20:27:53 2015 UTC,"One solution:   Power one arduino with photodiode hardware and xbee using a DC power source. Connect other arduino to a PC that you'll leave on. (alternatively, you don't need two arduinos if you can just connect the photodiode one to the PC over usb). Write program to send photodiode data over xbee to the other arduino, should show up over serial if the other arduino is connected over usb. Read serial with pyserial. http://pythonhosted.org/pyserial/shortintro.html.   You now have 2 options depending on your server.    If you already have hosting with your purchased domain, you'll need to send a POST request to your server (for example http://stackoverflow.com/a/10022497) containing the information from the serial line, where your own server-side code can accept the request. If you are planning on running a server locally, you can use DynDNS as others suggested.   Either way, you can display a webpage using a simple web framework like Flask (http://flask.pocoo.org/docs/0.10/tutorial/), either by displaying the latest POST request (if hosted) or by reading directly from serial (if local).  Adding some javascript could make the page live and not require a refresh."
arduino,3e2ii8,tankmohit11,3,Tue Jul 21 13:32:13 2015 UTC,"if you are a beginner , I suggest Arduino will be better  it will help you do your project without getting in so many details like AVR  And it also depends on the project you are doing."
arduino,3e2ii8,Maha_Raafat,4,Tue Jul 21 13:49:53 2015 UTC,"Arduino is a framework for avr gcc.  there's nothing preventing you from using the lower level avr gcc objects in the arduino environment, so it's a nice easy way to get started,"
arduino,3e2ii8,chrwei,2,Tue Jul 21 15:52:55 2015 UTC,"Yes.  So we're an electronics studio that produces devices used in professional entertainment contexts.  We frequently prototype on Arduino using off the shelf Arduino libraries.   Often we re-develop using avr-gcc or other lower-level systems, but frequently we don't need to.  See also: Premature Optimization"
arduino,3e2ii8,birdbrainlabs,2,Tue Jul 21 17:12:42 2015 UTC,"Use Arduino until you know better. The best analogy I can come up with for this is ""I want to climb Mount Everest. Should I join the local hiking club or move to Nepal?"" Technically neither is incorrect but there is a generally logical approach."
arduino,3e3104,somedaveguy,7,Tue Jul 21 15:57:26 2015 UTC,"It's kind of a pain in the ass to reverse-engineer your code, since the processor has only the machine code in it.  Unless you think you have created some really clever algorithms, I would imagine it would be just as easy for somebody to reverse engineer it at the functional level, i.e. just figure out what it does and start from scratch with the code."
arduino,3e3104,1wiseguy,2,Tue Jul 21 16:47:56 2015 UTC,"Yeah...now that I realize that it's machine code in the arduino, I came to the same conclusion - easier to write your own than to reverse-engineer mine."
arduino,3e3104,1wiseguy,3,Tue Jul 21 17:12:46 2015 UTC,"Keep in mind, it's not that hard to extract the machine code and program it into new parts. So somebody could do that if they want to mass-produce your design.  The problem with that approach is that it's a nightmare to alter the code if you have to change or fix something."
arduino,3e3104,nighterfighter,4,Tue Jul 21 17:53:51 2015 UTC,The client won't have access to your source code.  Once deployed in the arduino it becomes machine code.
arduino,3e3104,Odd-Fuck,2,Tue Jul 21 16:07:28 2015 UTC,It most often isn't that hard to reverse engineer the machine code though.
arduino,3e3104,gnorty,1 point,Tue Jul 21 16:26:57 2015 UTC,"really? You speak as though you have done this many times. I have dabbled in the past, and it is far from easy for me."
arduino,3e3104,Odd-Fuck,2,Tue Jul 21 21:10:12 2015 UTC,"Well, it isn't easy if the code is complex. But given most Arduino applications fit in 500 lines or less, that makes it a lot easier. Proper tools help too."
arduino,3e3104,gnorty,0,Tue Jul 21 21:16:58 2015 UTC,"Proper tools help too.   Tools like an arduino disassembler? Is there such a thing? It's hard enough with windows code, and there are some really nice disassemblers out there."
arduino,3e3104,Doormatty,1 point,Tue Jul 21 21:35:06 2015 UTC,http://lmgtfy.com/?q=avr+disassembler
arduino,3e3104,gnorty,1 point,Wed Jul 22 01:28:11 2015 UTC,"yea, I actually googled it after I posted. They are there, even web based ones. Do they make reverse engineering of previously assembled code easy? A compiled blink.cpp is 4k bytes. That is a LOT of work to sort through, and it does hardly anything at all. A more complex project is not a trivial task to reverse engineer. That is the point I am making."
arduino,3e3104,Doormatty,1 point,Wed Jul 22 01:49:23 2015 UTC,"Easier.  Dissasembly still requires an expert level understanding of the hardware, architecture and languages involved.  Tools will get you a fair distance of the way to the goal (or all the way if the program is simple enough), but you still need to be able to work out the intent of the original coder."
arduino,3e3104,gnorty,1 point,Wed Jul 22 01:54:26 2015 UTC,"Dissasembly still requires an expert level understanding of the hardware, architecture and languages involved.    This is my actual point. I got sidetracked a little on the way, but I was originally replying to people suggesting that it was ""not that hard""."
arduino,3e3104,frothface,2,Wed Jul 22 01:58:18 2015 UTC,"You can reverse it into assembly language by hand. Not hard at all. What you lose is the variable names and high level source code, so if they want to make significant changes it is harder, but not impossible. This is how things like IBM clones came around."
arduino,3e3104,gnorty,0,Tue Jul 21 21:41:48 2015 UTC,"You can reverse it into assembly language by hand. Not hard at all.   I guess if you sat there with the full instruction set and translated byte by byte each OP code, address and operand, then sure. You could do this   Not hard at all   Not hard to transcribe a few K of binary? Remember that a single mistake is very likely to cause the whole code to fail? It is hard.   What you lose is the variable names   What you also lose is any references to other addresses. Got a subroutine? You gotta find where it starts and finishes. Does the subroutine get passed data? does it return a value? Best you work out the addresses involved. Does the program have a conditional fork? Best you get those addresses sorted out, because that will fuck with your flow no end. Got any loops in there? Another little thing to trip you up. Is it sounding difficult yet?  Before you can even hope to achieve anything you are going to need to know this stuff almost by heart. And you think it is not difficult? It is really easy to outline the steps involved, but not so easy to actually do it.   This is how things like IBM clones came around.   Can you explain your reasoning here? I kinda think IBM clones came about because IBM designed the PC using standard components around an open standard, fully condoning other companies making clones. Any code involved is available to vendors, fully documented."
arduino,3e3104,Doormatty,1 point,Tue Jul 21 22:16:37 2015 UTC,"I kinda think IBM clones came about because IBM designed the PC using standard components around an open standard, fully condoning other companies making clones.    You couldn't be farther from the truth.  https://en.wikipedia.org/wiki/IBM_PC_compatible - end of first paragraph."
arduino,3e3104,gnorty,1 point,Wed Jul 22 01:08:15 2015 UTC,"Yea, I was mistaken about the open standard. Seems like the BIOS was proprietary at least. However, I suspect you are mistaking some of the meaning of that paragraph somewhat.  By definition, the ""clean room"" approach is specifically designed to avoid using the original code. It was not a case of decompiling the code, recompiling it on another plaform. More like looking at the inputs/outputs, and replicating them with whole new code. How much disassembling was involved is unclear, but to restate the actual point I was making, such techniques can hardly be described as ""not hard at all"". Cloning something like a PC might make it worthwhile, but I doubt that cloning an arduino project in this way would justify the considerable effort involved."
arduino,3e3104,Doormatty,1 point,Wed Jul 22 01:46:04 2015 UTC,"My apologies for not being clearer - I was just commenting on your idea that the appearance of clones was due to standards, nothing more."
arduino,3e3104,gnorty,1 point,Wed Jul 22 01:51:19 2015 UTC,"Yea I get that. It was just one aspect of my contention that decompiling and reverse engineering machine code, without notes or labels to help you, is by no means an easy task. It's not impossible, of course, but it takes enormous time/effort to do it."
arduino,3e3104,frothface,1 point,Wed Jul 22 01:57:12 2015 UTC,"As far as machine to asm, that's mostly just cut and paste, with a tiny bit of logic to preserve operands following instructions. What does an arduino have, maybe 35 instructions? Yes, the references are a challenge but you also have to keep in mind that an arduino has a really small, simple address space.  This is exactly how Ibm pc clones came about. Other manufacturers wanted to make something compatible but they couldn't just copy the code because of copyright. They did what's called clean room design, where one team reverse engineers the software and tells another team how it works. The other team then writes a new piece of software that looks pretty darn similar, but it's technically not a copy because they never saw the original.   This isn't a great reference but it's all it can find on mobile. https://en.m.wikipedia.org/wiki/IBM_PC_compatible"
arduino,3e3104,HelperBot_,1 point,Wed Jul 22 03:16:46 2015 UTC,Non-Mobile link: https://en.wikipedia.org/wiki/IBM_PC_compatible    HelperBot_® v1.0 I am a bot. Please message /u/swim1929 with any feedback and/or hate. Counter: 877
arduino,3e3104,elucify,1 point,Wed Jul 22 03:17:17 2015 UTC,https://en.wikipedia.org/wiki/Disassembler
arduino,3e3104,netguycry,1 point,Wed Jul 22 03:21:07 2015 UTC,"I didn't even think of that - I kind of imagined that if I plugged it into a PC, I could upload the code right back out of it. It's compiled - duh."
arduino,3e3104,joekovar,4,Tue Jul 21 16:47:39 2015 UTC,Your code is under copyright by default. You don't need to take any extra action on that front. The ATmega328P (the core of e.g. the Arduino Uno) does have lock bits you can set to disable reading and/or writing various regions of memory. See p280 onward of the datasheet.
arduino,3e3104,chrwei,1 point,Tue Jul 21 16:24:26 2015 UTC,Get your distribution pipelines and advertising in order and sell the fuck out of it before anyone can get anywhere with what they find.
arduino,3e3104,kevin_at_work,1 point,Tue Jul 21 16:09:47 2015 UTC,"familiarize yourself with the avr datasheet and its fuses.  you'll likely want to start moving out of the arduino framework at least somewhat, maybe only keeping parts of it.  though, like was already said, once compiled they can only download the assembly language binary, which is rather difficult to reverse into anything remote resembling your original code.  same as when you compile a program to an EXE."
arduino,3e3104,birdbrainlabs,1 point,Tue Jul 21 16:20:24 2015 UTC,"I'm with everyone else - it's not as big of a risk because it's not source code on the hardware.  That said, if somebody reverse engineering your code is a legitimate concern for them, physical security is going to be necessary. There are tricks you can do to make reversing more difficult, but if somebody can actually get their hands on your programmed chip, they will eventually be able to get the compiled code off. The customer's money would be better spent on a lock than in paying you to make your code unhackable."
arduino,3e0ggf,relbeek,9,Tue Jul 21 00:26:38 2015 UTC,x &= y;   is equivalent to  x = x & y;   The same expansion applies to |=.
arduino,3e0ggf,snarfy,10,Tue Jul 21 01:38:31 2015 UTC,"Until seeing this question, though, it would never have occurred to me that this is somehow inconsistent with !=.  One might just expect x != y to be equivalent to x = x ! y, or some such.  Neat to see C with fresh eyes!"
arduino,3e0ggf,jephthai,2,Tue Jul 21 03:02:36 2015 UTC,"If anything, I'd have guessed x!=y would be the same as x = !y. ! is a unary operator (one argument) so x = x ! y; won't even compile."
arduino,3e0ggf,Se7enLC,3,Tue Jul 21 13:16:28 2015 UTC,"Of course someone who knows c would know that. But to the uninitiated, it could be confusing."
arduino,3e0ggf,jephthai,2,Tue Jul 21 13:31:58 2015 UTC,"Oh, absolutely. It's also fun combining bitshift with cout in C++. Good luck making sense of that when you're not used to it!  x = 1; std::cout << ""X: "" << ( (x<2) ? (x<<2) : (x>>2) ) << std::endl;"
arduino,3e0ggf,Se7enLC,1 point,Tue Jul 21 13:36:25 2015 UTC,"Except ! isn't a binary operator and x ! y isn't a valid expression, so it all works out :)"
arduino,3e0ggf,hobbified,1 point,Tue Jul 21 16:57:46 2015 UTC,I had never seen & being used like this... I need to do a bit more learning.
arduino,3e0ggf,d3jake,7,Tue Jul 21 11:33:53 2015 UTC,a bit more learning
arduino,3e0ggf,triple65forkedtongue,1 point,Tue Jul 21 12:35:28 2015 UTC,Oh gawd.. .I wish I had tried to do that!
arduino,3e0ggf,d3jake,4,Tue Jul 21 17:02:45 2015 UTC,"https://www.arduino.cc/en/Reference/If  != compares the left and right statements and returns true if they are not equal to each other  https://www.arduino.cc/en/Reference/BitwiseCompoundAnd  &= is slightly more complicated. It's a bitwise operator, the link above explains it very well."
arduino,3e0ggf,ammar2,5,Tue Jul 21 00:36:16 2015 UTC,"Heh, based on OP's inclusion of &=, I'm guessing he meant |= and not !=."
arduino,3e0ggf,Drathus,10,Tue Jul 21 00:45:59 2015 UTC,actually I meant to ask about |= as well as !=
arduino,3e0ggf,PrototypeNM1,8,Tue Jul 21 00:50:20 2015 UTC,Slightly tangent but since you're asking these kinds of questions you might benefit from reading into bitwise and/or/xor vs logical and/or/xor if you're not familiar.
arduino,3e0ggf,Se7enLC,2,Tue Jul 21 01:40:02 2015 UTC,"It's worth adding a note about logical vs bitwise.  ""Logical"" operates on single boolean values. Each variable will be only true or false. Operators include &&, ||, ! (AND, OR, NOT).  ""Bitwise"" operates on binary values. Multiple bits per variable. Each bit is true or false, and there may be 8, 16, 32, 64, etc per variable. Operators include &, |, ^, ~ (AND, OR, XOR, NOT).  The concepts are the same for both logical and bitwise. Logical is just once, while bitwise repeats for each bit in the expression.  The AND operator will return true (1) only if both inputs are true (1). False (0) otherwise.  The OR operator will return true (1) if either inputs are true(1), false (0) otherwise.  The XOR operator will return true if the inputs are different (1 and 0, 0 and 1), but will return false if they are the same (1 and 1, 0 and 0).  The NOT operator will return the opposite of the input (unary operator, only one input).  Adding the = to an operator is shorthand for an expression where one of the inputs is also the output.  Example:  int a = 6; // in Binary, this is 0110 int b = a | 1; // in Binary, this is 0110 | 0001 int c = a & 2; // in Binary, this is 0110 & 0010 int d = ~a; // in Binary this is ~0110   a is 0110 (6)  b is 0111 (7). The 6 is OR'd with 1. Every bit position where a 1 appears in either operator, a 1 will appear in the output. The leftmost bit is a 0 in both numbers. The other 3 bit positions all contain a 1 in one of the operators.  c is 0010 (2). The 6 is AND'd with 2. The leftmost bit position has a 0 in both, so the output has a 0 there. The second bit has a 1 and a 0, so the output is a 0, since both need to be 1 to output a 1. The 3rd bit has a 1 in both, so the output is a 1. The rightmost bit is a 0 in both.  d is 1001 (9). The 6 is NOT'd, so all the bits flip. 0 becomes 1, 1 becomes 0.  EDIT: technically, d will actually be a whole mess of 1s ending with 1001, since all the preceding 0s are inverted to 1."
arduino,3e0ggf,josiahw,2,Tue Jul 21 13:44:47 2015 UTC,"&= operates in the same way += or *= operates. In the same way that x += 1 is equivalent to x = x + 1, x &= 0101 is equivalent to x = x & 1010."
arduino,3e0ggf,justdesserts2000,-2,Tue Jul 21 01:40:31 2015 UTC,x++;
arduino,3e0ggf,_teslaTrooper,1 point,Tue Jul 21 05:06:10 2015 UTC,Here's some general info on operators and more detail about bitwise operators.
arduino,3e1l63,Claydogh,11,Tue Jul 21 06:41:34 2015 UTC,http://www.instructables.com/id/Hacking-a-Powerglove/ Quick google search maybe?
arduino,3e1l63,Odd-Fuck,2,Tue Jul 21 09:11:51 2015 UTC,Great start but not exactly what I'm looking for.... I only need the buttons to work and would like to encompass everything within the glove.
arduino,3e1l63,BlackholeZ32,9,Tue Jul 21 18:36:13 2015 UTC,"Start with a simpler project.    As you can see, there isn't a wire coming off the board for every button. There's a chip on the board that takes the information from the buttons and turns it into a datastream that goes out over the cable. You'll have to figure out how that stream is coded so that you can have the arduino translate it, recode it and send it to your computer over bluetooth. Communicating over bluetooth is its own learning curve too."
arduino,3e1l63,BlackholeZ32,3,Tue Jul 21 08:43:53 2015 UTC,"On the back there are the wires coming out of the chip for the buttons, is there no way to direct those inputs towards the Arduino?  This is more of a long term project than anything, I'd just like to see where I can go with it yaknow?"
arduino,3e1l63,Purkox,1 point,Tue Jul 21 18:43:40 2015 UTC,In that case you'll have to spend some time figuring out what button makes what wire hot or grounded. Tbh though I doubt those wires are going to each button looking at the traces on the board
arduino,3e1l63,leadbasedtoy,4,Wed Jul 22 01:45:15 2015 UTC,"Start by learning some basic arduino programing, get a uno or nano board. After you have learned the basics research the HID library. You could also see if you could use a xbee module as a bluetooth keyboard. Google around a bit."
arduino,3e1l63,MayorAwesome,2,Tue Jul 21 08:39:56 2015 UTC,If I wanted to get started is the Nano or Uno better to start?
arduino,3e1l63,MayorAwesome,2,Tue Jul 21 18:45:55 2015 UTC,"They are so similar in functionality, you just need to look at each one and decide what you want. Google for Nano vs Uno. You'll have to make a lot of choices based off of your own requirements."
arduino,3e1l63,MayorAwesome,3,Tue Jul 21 19:06:27 2015 UTC,"Dude! You're about to have a lot of fun. I'm working on making a motion controller for VR using a Power Glove. I've done a lot of research trying to figure out how to talk to the thing. Check out this pdf from a research paper back in the 90's. You can simulate the box they built using an arduino. This also might be helpful.   In the end though, I ended up just soldering wires directly to the board. It just seemed easier than trying to figure out how to speak to the power glove. You'll lose the functionality of the 0-9, prog, reset buttons, but up, down, left, right, select, start, A, B. The 0-9 buttons don't actually do anything. They just program what the various combinations of flex sensors send back to the Nintendo. As far as the Nintendo is concerned, it's talking to a regular controller.   I bolted on a joystick above the palm. For wireless I used this bluetooth module from Sparkfun. The documentation on their site is great and I was able to get talking to my computer pretty quickly.   I also used a [multiplexer] from sparkfun to manage the number of wires going back to the arduino. You'll want to have some pull down resistors on the buttons so they don't float around.   Here are some pictures:   Wired up Mess of cables Motherboard Bluetooth   Good luck!  Edit: Just noticed ""Chicago"" in the background of your photo. I work downtown if you want to meet up for lunch one day. I can bring my power glove and show you what I've got so far."
arduino,3e2rvz,eligloys,2,Tue Jul 21 14:49:53 2015 UTC,"The light strips I have from adafruit are definitely not diffused, unless you count the rubber water cover.  The ones you linked to are slightly different than the neopixels though as they appear to have 6 pins.   Also pro tip, the neopixel smd LEDs are available very cheap on aliexpress."
arduino,3e2rvz,didnt_readit,1 point,Tue Jul 21 16:10:20 2015 UTC,No.  You could try sanding the top of them?
arduino,3e2rvz,Chsknight,1 point,Tue Jul 21 17:46:01 2015 UTC,"What is your application? You could add a layer of diffusion such as a piece of tracing paper, tissue paper, or cut up shower curtain."
arduino,3e1hbf,Classy_Sir_,5,Tue Jul 21 05:56:24 2015 UTC,"More than likely you've gone beyond the range if the servo. Try reducing the angle, cheap 9g servos tend to only have a range of about 15 to 165 degrees."
arduino,3e1hbf,OnyxPhoenix,1 point,Tue Jul 21 08:10:46 2015 UTC,"(newbie) .. Yea this is almost the result I got with a new servo.. from 10-163.  And when it hit the ""end"" I thought it was going to break the amount of noise it made."
arduino,3e1hbf,mashmorgan,2,Tue Jul 21 15:01:00 2015 UTC,"It's the result of trying to make the servo turn beyond its physical stop. It will do the same vibrating thing if you try to manually turn it while the power is on. If I had a spare lying around, I'd try doing surgery to fix it (mind does the same thing)."
arduino,3e4onq,PvtUnternehmer,3,Tue Jul 21 22:51:55 2015 UTC,http://lmgtfy.com/?q=arduino
arduino,3e4onq,mlennox81,1 point,Tue Jul 21 23:07:15 2015 UTC,"Arduino is a prototyping board.  It's basically a quick and easy controller that can be programmed to control various sensors, motors, etc.  The bits and add ons are typically boards that someone developed that easily interface, and usually come with a simple program to run them that accomplish a task.  Arduino isn't really meant (in my mind) to be the final destination for a project in the entrepenuership field, but a quick and easy way to prototype a device without having to do a bunch of soldering, or for building quick, one off projects.  Beyond that, it's become something of an electronics playground for people who like tinkering.  If you're looking to get into it, you'll wanna look into basic electrical theory and structure.  I like Sparkfun's tutorials. https://learn.sparkfun.com/tutorials/tags/electrical-engineering"
arduino,3e4onq,iceph03nix,1 point,Tue Jul 21 23:12:09 2015 UTC,"An Arduino is a programmable microcontroller.  It's really good at doing small, realtime tasks.  Controlling robots, controlling 3d printers, stuff of that sort.  I have hooked up a gyroscope to mine as well as remote controlled airplane receiver and servos for work on an autopilot assist.  Look at ardupilot for a prime, commercialized example of what an Arduino can do.  These shields and components add components, for hobbyists to create more stuff.  I've seen remote temperature sensors, home automation, scoreboards, music-sensing rave LED suits, and even a robot that could visually identify and track a colored balloon. One guy at my local hackerspace is building a pair of obstacle-avoiding bots that communicate hazards to each other, so they can map out a room.  In order to make something new though, you already need to understand the platform.  That's a lot of work, and a lot of programming.  Taking pre-fabbed chips from ali express and putting several on one board won't do you any good.  You need to understand the space, so you can innovate within it."
arduino,3e20yk,icoulddothatprobably,4,Tue Jul 21 10:14:17 2015 UTC,"A servo will work so long as it's got whatever input it needs in it's v wire, ground on it's ground wires, and a pwm signal containing the desired rotation angle on it's data wire. It doesn't really matter what's supplying that signal. You could rig up a single switch and have super human timing and muscle speed to generate it, and the servo won't care. The arduino is however a mass produced, cheap standard platform that is easy to use. It saves you a lot of circuit design work."
arduino,3e20yk,clayalien,4,Tue Jul 21 10:24:47 2015 UTC,"You could build a simple 555 circuit for the Serve (simplified version http://www.instructables.com/id/Servo-Control/) or anything that outputs PWM http://www.me.berkeley.edu/ME102B/lab4.html, even a soundcard/mp3 player! (http://hackaday.com/2010/05/26/sound-card-driven-servo-motor/)"
arduino,3e20yk,schorhr,2,Tue Jul 21 11:26:11 2015 UTC,This is my current wiring set up and the key fob I'm using its very similiar to the adafruit one  http://imgur.com/2dvvSIb  https://www.parallax.com/sites/default/files/downloads/700-10016-Key-Fob-Remote-Product-Guide-v1.0.pdf
arduino,3e20yk,clayalien,3,Tue Jul 21 11:29:50 2015 UTC,"The problem with this is in the first line of the pdf ""The Key Fob Remote is a simple device that lets you control four outputs on the included Receiver PCB. Just press a button on the Remote to make the corresponding output pins on the Receiver PCB send a 5 V high signal."". Hooking up a straight 5v signal to a servo  data line won't do anything. You need a way of converting it to pwm. /u/schorhr linked a nice way of generating one with a 555 timer. Granted, using an arduino just to read one input line and generate the pulse for 180 degrees when high and 0 degrees when low is massively overkill, but it's by far the easiest and cheapest solution for prototyping. If I had a factory and was producing thousands, then a much simpler custom circuit could be made. The arduino will also give you some nice jitter protection by magic, which might is even more complicated to rig up (I have no idea how clean a timer output will be).   If space is a concern, get a 555 timer and rig up the linked circuit, modified so it's high for 2ms low for 20 when D1 is high, and high for 1ms, low for 20 when it's low rather than basing it off a variable resistor. I'm afraid I can't help you with that though, you'll have to read up on timer chips. I'd recommend one of the cheaper, micro arduinos instead. Unless you really like circuit design.  EDIT: I've read over my post ant it reads a bit more standoffish and angry in tone than I intended. I don't know how to fix that, so I'll just say I'm trying to be helpful and friendly"
arduino,3e20yk,schorhr,3,Tue Jul 21 12:15:12 2015 UTC,":-)  Yeah, the 555 solution is nice if you have some laying around, though at $1.40 for a Mini pro 168 or $2.10 for a Nano it's usually easier to just use an Arduino :-) Thoguh a Attiny or Pic1xf can be a good solution if space is an issue."
arduino,3e20yk,sschering,1 point,Tue Jul 21 12:28:08 2015 UTC,I'd use a picaxe to send the PWM signal  to the servo..  You could also set up logic to  perform different functions based on how long or how many presses.
arduino,3e11qv,vijayrajanna,3,Tue Jul 21 03:22:46 2015 UTC,"#include <SoftwareSerial.h>     #define bluetooth Serial1     #define BAUDRATE 9600  // Analog read 0 is pin 38  int sensorValue = 0;  int SENSOR_ANALOG_READ_PIN = 0;  int LED = 17; char toPrint = '\0';  bool sent = false;  char state = ' ';  void setup()  {      // put your setup code here, to run once:      pinMode(LED, OUTPUT);      Serial.begin(BAUDRATE);      bluetooth.begin(BAUDRATE);  }  void loop()  {     // put your main code here, to run repeatedly:      sensorValue = analogRead(SENSOR_ANALOG_READ_PIN);     if(value > 500) {          //Serial.println(""HIGH"");          digitalWrite(LED, HIGH);          bluetooth.write(state);          bluetooth.flush();          sent = true;          digitalWrite(LED, LOW);      } else {          delay(100);      } ///////////////////////////////////////////////////////////         if((bluetooth.available()) && (sent == true)) {          Serial.println(""printing : "");          toPrint = (char)bluetooth.read();          Serial.println((char)toPrint);          sent = false;      }  }           I believe it is easier to read when it is formatted as code"
arduino,3e11qv,Schwusch,1 point,Tue Jul 21 07:22:46 2015 UTC,Is the garbage value consistent or does it change? Do you have set the proper baudrate on the receiving end? Edit: Use the page to check up if everything is hooked up correctly: http://playground.arduino.cc/Learning/Tutorial01 .
arduino,3e11qv,Odd-Fuck,1 point,Tue Jul 21 08:46:42 2015 UTC,"The garbage value constatly changes.    Example Output : Bluetooth transmits character '1'  printing : 1 printing : ˆ printing : Ì printing : ¦ printing : È printing : Ì printing : Ì printing :   The baudrate set is 9600, and the blutooth module itself is functioning as both sender and receiver The circuit is properly connected as I am able to send and receive data, but just that what received is not what was sent."
arduino,3e11qv,Odd-Fuck,1 point,Tue Jul 21 10:19:42 2015 UTC,"I'm guessing here, but I always find it convenient if someone thinks along. You could try defining bluetooth as such: SoftwareSerial bluetooth(rxpin, txpin); . Is the sending of bluetooth signals from Arduino working? Edit: Also see https://www.arduino.cc/en/Reference/softwareSerial"
arduino,3dxlie,Ahmed_El_Hinidy,5,Mon Jul 20 11:04:07 2015 UTC,"I may just be being stupid, but how exactly did you open the windows/door and switch the lights?"
arduino,3dxlie,TalentedLurker,4,Mon Jul 20 13:23:18 2015 UTC,"Locks to do it properly you need an electrified door strike or electrified handleset / deadbolt.  Many products exist designed for both residential and commercial use.  Some people will try and retrofit their existing deadbolt but its almost always an incredible eye sore doing that.  Something like lights, you could do it with simple relays.  All of this said, anybody interested in this stuff, suggest you checkout /r/homeautomation  There are many many diy friendly HA products out there that won't require you building your own mains voltage level devices."
arduino,3dxlie,Syde80,2,Mon Jul 20 14:45:59 2015 UTC,"Something like lights, you could do it with simple relays.   You can also use lamps plugged into RF outlets. That's what I did, at least.  I added LED strips around my house for ambient lighting and used RF outlets for all of the lamps. For bulbs I haven't bothered to do that yet because there are a whole bunch of options ranging from RF / bluetooth / wifi bulbs to new in-wall switches.  The outlets were nice because the only thing I had to hack up was the remote. No dealing with mains voltage or anything."
arduino,3dxlie,skootles,1 point,Mon Jul 20 19:15:02 2015 UTC,"Hi :D The thing is, I now allow you to control three digital signals from your website, then you can easily use those digital signals to control lights by using relays or Door Locks and Windows by controlling motors,, I felt that the part concerning what to do with the digital signal should be left to your imagination :D but you are right, I should have explicitly mention it :D :D Thanks for your feedback _^"
arduino,3dxlie,BurningBushJr,2,Mon Jul 20 22:14:13 2015 UTC,"Nice website but I think you have a long way to go before you can call it home automation on any level. What you have is a very basic temperature sensor and a motion detector for one room. I mean, you're still using shields and breadboards and have no interface for anything meaningful like controlling doors, windows, or HVAC. Still a long way to go for you but you're on the right track with a fancy website at least."
arduino,3dxlie,GSlayerBrian,1 point,Mon Jul 20 18:39:39 2015 UTC,"Not to criticize OP but I certainly wouldn't call the website ""fancy"" - it's literally as simple as it possibly could be."
arduino,3dxlie,BurningBushJr,1 point,Mon Jul 20 21:44:06 2015 UTC,Well it's better than my web skills.... best I can do is WordPress lol.
arduino,3dxlie,GSlayerBrian,1 point,Mon Jul 20 21:45:18 2015 UTC,How is this better than wordpress?
arduino,3dxlie,GSlayerBrian,1 point,Mon Jul 20 21:47:58 2015 UTC,"Hi again xD I just had to point again that you are comparing the layout/styling etc.. with what could have been much better, but it was a bit out of focus, but maybe you are right, in the next updated version of the project I'll consider designing a more elegant, beautiful and attractive UI, that's a promise ;) :D :D"
arduino,3dxlie,BurningBushJr,1 point,Mon Jul 20 22:20:52 2015 UTC,"Yeah as I said I wasn't criticizing - as someone who does almost exactly the same thing you do (except with a robot instead of home automation) I understand how it just needs to work before it's made pretty. I didn't expect your screenshot to be the final version of the interface, I just still didn't think it warranted being called ""fancy"" in its current state :-P"
arduino,3dxlie,GSlayerBrian,2,Mon Jul 20 22:51:59 2015 UTC,I must confess I was viewing on mobile and had never seen hackster.io and thought that was OPs website until I saw your screenshot.
arduino,3dxlie,can_dry,1 point,Tue Jul 21 06:31:34 2015 UTC,Ahh I had a suspicion that's what happened :-P
arduino,3e1g8b,sschering,1 point,Tue Jul 21 05:44:04 2015 UTC,"Should be fine, it will fit physically and there aren't any active components on the shield to work or not, it just moves the pins around in a more convenient format. Anything that has a different purpose on the Due will still have a different purpose, but it'll work in general.  As for servos, look at the datasheet for the servo you want to use :)"
arduino,3e1g8b,hobbified,1 point,Tue Jul 21 17:29:21 2015 UTC,Great thanks..  After doing some checking it appears that most modern servos will operate at a signal voltage of 2.7-3.3v.      I have already tested all my servos with a Spektrum Rx that sends  a 3.3v signal level so I think I'm ok.
arduino,3e196n,Iniroo,2,Tue Jul 21 04:31:46 2015 UTC,"It is a custom raw display for the device more or less, directly driven by its microcontroller, which many are designed to.  The ones with dots are backplanes, the one without are segments. You feed them a pseudo AC waveform. In phase should clear a segment, out of phase should darken it.   You likely want an LCD driver IC, which is probably what I would do if I wanted to re-use that display. Or fake the CID signal to feed into that SOC. Don't bother de-capping it, there likely is no point."
arduino,3e196n,classicsat,1 point,Tue Jul 21 14:27:24 2015 UTC,"I think my original post was a bit ambiguous. What I actually want to know is how the circuit board is controlling the LCD (what inputs it is sending to the LCD and so on). So in order to know that, I need to find out what each of the pins does."
arduino,3e196n,classicsat,1 point,Tue Jul 21 15:46:46 2015 UTC,"What I said, psuedo ac-wave form, out of phase to back plane to darken, in phase to lighten. LCD pins are backplanes (the dots link the front plane to backplane) or segments. It is not so much control, but drive.  You just need to try, to find the segment map."
arduino,3e196n,kundarsa,1 point,Tue Jul 21 16:47:14 2015 UTC,"take a heat gun to that black blob and pry it off to get at the chip.  i may be wrong but i think LCD screens are charlie plexed displays, either way you may have more luck once you get at that controller chip."
arduino,3e196n,kundarsa,1 point,Tue Jul 21 06:05:21 2015 UTC,this can damage the chip? My main intention is to get the data that the chip sends.
arduino,3e0hqn,CU-SpaceCowboy,2,Tue Jul 21 00:37:27 2015 UTC,"Fritzing is a simple PCB, schematic designer."
arduino,3e0hqn,Pvt_Haggard_610,1 point,Tue Jul 21 01:33:39 2015 UTC,you will need the crystal unless you can burn the fuses. As far as I know you need a programmer for that.
arduino,3e0hqn,iggy_koopa,1 point,Tue Jul 21 12:25:53 2015 UTC,Okay thanks! I guess ill just suck it up and pay the $1.50 for 5 crystals and free shipping...
arduino,3dzhb7,dvizard,2,Mon Jul 20 20:04:03 2015 UTC,Maybe just straight cables but bent pins? Like this: http://www.aliexpress.com/item/Free-Shipping-10PCS-3-40P-120P-2-54mm-pitch-three-row-needle-of-curved-needle-pin/32365891869.html
arduino,3dzhb7,Fishmachine,1 point,Mon Jul 20 20:29:35 2015 UTC,Another option is a bent female header.. this Ebay seller has different lengths
arduino,3dzgag,BurnPrograde,1 point,Mon Jul 20 19:56:48 2015 UTC,"if emulating a keyboard/mouse and gamepad/joystick is part of the task, look up the Teensy.  it's arduino compatible but has much better built in support for these things."
arduino,3dzgag,chrwei,1 point,Mon Jul 20 21:02:05 2015 UTC,lose the keyboard/gamepad and grab some momentary buttons - make it standalone!     It's much more rewarding to use buttons than it is to use a keyboard/gamepad.
arduino,3dzgag,neurofluxation,1 point,Tue Jul 21 18:33:12 2015 UTC,"Oh yeah, I have covered toggle switches, rocker switches, key lock switches, slide pots for throttle.  Its easy to set up with an ipac but I was hoping to have sounds play when certain buttons are pressed and certain leds or alarms to go on or off. Fun stuff :D"
arduino,3dzfjt,GottaRiskIt,1 point,Mon Jul 20 19:51:43 2015 UTC,Where did you plug the shield in? At the front by the USB or back by the double row header? Check this image http://kevinrye.net/files/ArduinoMEGA_0146-6.jpg
arduino,3dzfjt,sschering,1 point,Tue Jul 21 05:14:57 2015 UTC,"I actually found the source of the problem, With software serial on the Mega I could only use certain pins. And the ones I had set up previous were not supported. I moved my Rx to 11, and my Tx to 12. and that solved the problem!"
arduino,3e0pcb,VelocilBrian,3,Tue Jul 21 01:39:54 2015 UTC,"Without a picture of some kind of model number or something, this is pretty much a wasted post."
arduino,3e0pcb,leadbasedtoy,1 point,Tue Jul 21 01:43:33 2015 UTC,"Sorry, I got it off of my psp if that helps at all"
arduino,3e0pcb,leadbasedtoy,4,Tue Jul 21 01:50:31 2015 UTC,"In that case start by Googling ""arduino psp screen"""
arduino,3e0pcb,nightshade108,1 point,Tue Jul 21 02:42:46 2015 UTC,"I think, generally for these screens you need some kind of controller logic that hooks up to that ribbon cable coming out of the bottom  EDIT: Take a look at the underside of this module for example: http://www.elecfreaks.com/store/50-tft-lcd-screen-module-tft0150-p-420.html"
arduino,3dwvi2,trimatrix,9,Mon Jul 20 05:07:13 2015 UTC,110f is fine for arduino. Most ICs have operating temps up to 176f.
arduino,3dwvi2,drew990,4,Mon Jul 20 06:12:39 2015 UTC,"Yea, or at least 150F."
arduino,3dwvi2,gliph,8,Mon Jul 20 06:34:58 2015 UTC,The atmel parts handle up to 80+C all day long.   You may want to conformally coat the board if they are getting exposed to all of the dust down there.
arduino,3dwvi2,rlaptop7,6,Mon Jul 20 06:19:11 2015 UTC,"It will be ok in that ambient temperature, but don't leave it in direct sunlight all day.  Put it in an enclosure; if you really want to, add a fan."
arduino,3dwvi2,Caraes_Naur,11,Mon Jul 20 07:21:31 2015 UTC,And make the enclosure white or reflective if possible.
arduino,3dwvi2,nill0c,4,Mon Jul 20 07:50:18 2015 UTC,"but not with polished metals, that shit will get hotter than satans testickles in direct sunlight."
arduino,3dwvi2,curly686,2,Mon Jul 20 19:56:31 2015 UTC,"Do nothing. Well, keep it out of direct sunlight as it could get very hot if left in direct sunlight. I have several in my attic in which the ambient temperature gets up to 150F. If you're worried, do some tests in advance."
arduino,3dwvi2,fnordfnordfnordfnord,5,Mon Jul 20 13:10:09 2015 UTC,"I would not be worried about your arduino. If you are super worried you could use a $0.76 heatsink.  I would be more worried about your battery, if you are using one. Rechargeable Lithium-Ion batteries do not like to be too hot. I think AA batteries are a little safer in the heat but I'd welcome some more authoritative data on the subject.  What is your plan for power?"
arduino,3dwvi2,swrrga,1 point,Mon Jul 20 08:06:42 2015 UTC,"If the project permits you can add a thermometer to give ambient temp readings during the day. As others have said the IC and other components work fine in 100-150F. Just don't leave it in direct sunlight, and project it from dust during the monsoon season."
arduino,3dwvi2,scribblenaught,1 point,Mon Jul 20 07:48:06 2015 UTC,Add a heatsink to the microcontroller and spread non-conductive thermal adhesive around the nearby ICs. But 110F isn't that bad really.
arduino,3dyvlg,sensors,2,Mon Jul 20 17:30:25 2015 UTC,We are using them for a burning man art car project. Our build includes about 96 5 meter strips of these (APA102C) lights and 4 pixel pushers. We were originally using LPD8806 but these were a better price so after a ton of research we decided to go with them and so far they have been awesome.
arduino,3dyvlg,mrmatti3,1 point,Tue Jul 21 00:00:46 2015 UTC,http://www.reddit.com/r/arduino/comments/2yd0hc/arduino_uno_adafruit_dotstar_leds_ambibox/  Just that. Haven't personally tried the WS part but I have only read good stuff about the APA chips. Loving it more every day.
arduino,3dyvlg,Fid3lity,1 point,Mon Jul 20 18:29:55 2015 UTC,I'm building a hoop for my fiancé.
arduino,3dyvlg,PyBop,1 point,Mon Jul 20 18:57:57 2015 UTC,"I am also working on a hoop but I also have some Neopixels, and am working on parallel builds. Once I have my whirring harness finished I am going to run some power consumption tests, and I worry that the Dotstars are going to eat the battery too much, I think they will look better."
arduino,3dyvlg,dataunderminer,1 point,Tue Jul 21 12:14:00 2015 UTC,I haven't run any tests but using a 2200 mAH 18650 and it seems to last forever.
arduino,3dyvlg,PyBop,1 point,Tue Jul 21 12:35:05 2015 UTC,"I was originally going with those, but she wanted a 3/4 with no battery gap so fitting the LEDs and AA sized just does not fit, so i have a few 600 mAh 3.7V 10440 and will see how they preform."
arduino,3dyvlg,dataunderminer,1 point,Tue Jul 21 16:15:16 2015 UTC,So they're a souped up version of neopixels with faster write speeds and refresh rate?
arduino,3dyvlg,ArylAkamov,1 point,Mon Jul 20 23:27:04 2015 UTC,"I would use DotStars (with FastLED of course):   With a POV application for high speed When I need to use a 3rd party interrupt library, i.e. IR receiver   I would use NeoPixels:   When I want to use multiple strips/pins As my default (and less expensive) strips   To me, the key thing is the IR receiver functionality. When using FastLED, neither Ken Shiriff's nor Nico Hood's IR libraries work when driving NeoPixels. You need the 4 pin strips, such as WS2801 or APA102 for that to work."
arduino,3dyt32,IAmSilky,2,Mon Jul 20 17:13:11 2015 UTC,"Step 1: google exactly the thing you are trying to build.  ie: ""arduino aeroponic garden"" and see what happens."
arduino,3dyt32,mudclub,0,Mon Jul 20 17:21:53 2015 UTC,"Well, I have done so and can't seem to find an exact build, I probably should have been more specific that I want ideas of things I should get as I have no clue what is on the market and just how far I could go, but I will check with google"
arduino,3dyt32,cmedrive,3,Mon Jul 20 17:26:45 2015 UTC,"You probably won't find an exact build but you should be able to find enough information to get you pretty far. I searched for 'arduino aeroponic' and came up with several sites, including the arduino.cc forums, with some really good information and code. I think an UNO would be suitable and there are a lot of shields available which would probably make it even easier. Check out Adafruit and Sparkfun for parts and info, too."
arduino,3dyjob,MasterChilds,2,Mon Jul 20 16:07:18 2015 UTC,"since I have idea what you're talking about (no code, no links, no wiring examples), here's the standard debugging...  line followers are often sensitive to ambient light, requiring some form of calibration.  if it doesn't have calibration build in, you may need to do it manually.  use Serial.println() and the serial monitors to check sensor values, adjust what they are compared to if needed.  if the values don't make sense, you probably have a wiring or power problem."
arduino,3dyjob,chrwei,1 point,Mon Jul 20 17:14:24 2015 UTC,"Most of the times when you copy code from somewhere, you will get an error. a slight mistake somewhere. and everything seems perfect. post  pictures and more details about the bot"
arduino,3dyjob,Srijal,1 point,Mon Jul 20 17:40:05 2015 UTC,"I built one of that kit; the pictures showing how to hook up the IR sensors aren't very clear, you might look at those again, possibly they're reversed. I found that it needs the kind of thick line as shown on the track that comes with the kit, on white paper; we painted a black line on kraft paper and it didn't seem to pick up on it."
arduino,3dyjob,h2odragon,1 point,Mon Jul 20 20:24:27 2015 UTC,"I will check my sensors, if that doesn't work I'll take pics for you all with a copy of the code."
arduino,3dxeck,Sn0wP1ay,2,Mon Jul 20 09:21:17 2015 UTC,Looked it up as it's an interesting idea and found this: http://playground.arduino.cc/ComponentLib/Ps2mouse . You can also hook up a PS2 keyboard.
arduino,3dtu50,sp3ctr41,7,Sun Jul 19 12:05:56 2015 UTC,Looks awesome! Good work.
arduino,3dtu50,makerboost,4,Sun Jul 19 12:40:04 2015 UTC,Thanks!
arduino,3dtu50,whosthetroll,12,Sun Jul 19 12:54:24 2015 UTC,"Having never seen any of these, I had this exact idea. 2 months later its on Reddit. Can I not have an original thought? Good job."
arduino,3dtu50,TwillzKillz,6,Sun Jul 19 14:00:36 2015 UTC,"hey, at least that's a sign that you're thinking in innovative ways. :)"
arduino,3dtu50,whosthetroll,3,Sun Jul 19 22:09:58 2015 UTC,I'll take it.
arduino,3dtu50,BurningBushJr,4,Sun Jul 19 23:33:39 2015 UTC,It's been around for at least a few years now. I know the feeling. :/
arduino,3dtu50,Tech_Entrepreneur,2,Sun Jul 19 18:39:59 2015 UTC,Awesome!  It looks very futuristic.   What did you end up using for LED's and what did you use to drive them?
arduino,3dtu50,dacaeq,2,Sun Jul 19 12:46:10 2015 UTC,"That's what I was going for haha, walls are red (or will be when painted) so I wanted something that reflected well off them.  For the LEDs, I used these.  Driving them was tricky, They need 5Vs same as arduino so I wanted to use one thing to drive them both..  I tried using phone wall chargers to output 5V however they all failed, I am using 15 LEDs and at around the 6th LED, the voltage drops to 4V switching the arduino off and im still not sure why (not even quality ones rated at 2A worked.. must have been the cable)  The solution was a dodgy samsung charger rated at 4.5V outputting 6.5V. I hooked it up to the setup and its voltage drops to 5.8V which is good enough for the LEDs (runs at 5V when all LEDs are on). Too high for the arduino, I ran a 10 ohm resistor to the arduino to drop the voltage down to about 5.1-5.2v."
arduino,3dtu50,nutw07,5,Sun Jul 19 12:58:12 2015 UTC,What arduino did you use? They can take a range of voltages via the Vin pin. The uno can take 6-20V.   https://www.arduino.cc/en/Main/ArduinoBoardUno
arduino,3dtu50,kevin_at_work,1 point,Sun Jul 19 16:07:10 2015 UTC,"Uno.  Im not using the barrel jack however, its plugged straight into the Vin pin which to my understanding bypasses the linear regulator.  I might end up using the barrel jack and a 5v regulator on the LEDs if i stumble on a higher voltage power supply because I dont like the radical change in voltage the arduino is recieving atm."
arduino,3dtu50,invenio78,4,Sun Jul 19 22:05:22 2015 UTC,"The VIN pin doesn't bypass the voltage regulators, and may be the reason the Arduino became unpredictable with the other 5V supplies. (The +5V pin is connected to the output of the regulators). I like your idea to supply the Arduino through its own regulators, and providing a separate regulator for the LED's. Nice project, thanks for sharing! Uno schematic for reference"
arduino,3dtu50,gnorty,2,Mon Jul 20 02:55:54 2015 UTC,"Thanks for this, I was looking for an explanation and I believe this is it :P."
arduino,3dtu50,invenio78,0,Mon Jul 20 07:48:37 2015 UTC,"its plugged straight into the Vin pin which to my understanding bypasses the linear regulator.   This is correct.   I might end up using the barrel jack   It sounds like you know this already, but you'll need at least 7ish volts to run through the regulator, since its drop off voltage is 1.6-1.8V."
arduino,3dtu50,gnorty,2,Mon Jul 20 00:04:46 2015 UTC,So how are you going to hide the strip so it doesn't look like you have an unpainted wall with a long adhesive tape stuck to it?
arduino,3dtu50,CU-SpaceCowboy,2,Sun Jul 19 17:15:45 2015 UTC,"Not OP, but if I were I would use something like this stuff. Not sure if it is available in different colours, white is fine, black would kick ass!"
arduino,3dtu50,CU-SpaceCowboy,2,Sun Jul 19 18:19:26 2015 UTC,I'm working on some home lighting projects with LED strips and arduino control and I'm finding the most difficult part of the project hiding the wires and making it look nice.  Nobody wants to see an LED strip or wires hanging out.
arduino,3dtu50,rinyre,1 point,Sun Jul 19 18:23:14 2015 UTC,"mini trunking with a few holes drilled in the cover fits the bill. rectangle profile is available very easily, half/quarter round profile is a little harder to find (especially at a decent price) but looks much nicer.  alternatively - if you feel a little more adventurous, a cheap router will make a great job of cutting channels into the back of skirting boards :)"
arduino,3dtu50,Nowin,1 point,Sun Jul 19 18:35:51 2015 UTC,Until its completed i'm going to use a less permanent method by winding all the wires in black electrical tape and seating it in a crevice on the stairs (which you cant see properly from the video).
arduino,3dtu50,Nowin,1 point,Sun Jul 19 22:08:14 2015 UTC,Can you describe your process of just using the atmega standalone? Like if you're using a 16 mhz external crystal or not
arduino,3dtu50,Nowin,1 point,Mon Jul 20 00:16:04 2015 UTC,"Sorry about the delay, honestly wasn't sure since this would be the first time I used the atmega chip by itself.  I'll just provide a picture of what it looks like so far.  It works, I've loaded the blink sketch into it to test. I wanted to experiment with different crystals (4MHz) but I didn't have the ISP, used another arduino to burn the bootloader..  Just going to add a few wires to it now for the sensor inputs then I'll design a case on solidworks and 3D print it."
arduino,3dtu50,rinyre,1 point,Mon Jul 20 06:25:52 2015 UTC,"Awesome thank! Also on the pin out, there's a pin that's called analog reference that someone told me I need to provide power to in order to do PWM stuff. Do you know about that?"
arduino,3dtu50,rinyre,2,Mon Jul 20 22:37:06 2015 UTC,Yep just wire that up to vcc
arduino,3dy045,Fishmachine,3,Mon Jul 20 13:36:45 2015 UTC,"You're right about the output impedance problem and sampling cap. analogRead() switches the input and then starts a conversion right away, so the cap doesn't have time to charge/discharge. Normally you'd just read your pin once, wait a bit and then read it again.  There are two other ways to solve it though:   Connect a capacitor between the analog input you're reading and ground. That way your sensor charges that capacitor, and when you try to read the pin, the very low output impedance of the extra capacitor helps the internal sampling cap to charge/discharge. The downside is that it makes the sensor respond more slowly, but a 0.1 sec delay is probably not a problem for a temp sensor. The upside is that it also acts as a noise filter. If you want to lower the impedance and maintain fast response times, you can use an op-amp to buffer the signal from the sensor. Very simple circuit."
arduino,3dy045,bal00,2,Mon Jul 20 13:48:45 2015 UTC,The data sheet for the AVR suggests reading a few times from the ADC and discarding the result after switching the source of Avref. Try  reading the second analog signal a few times and THEN reading the voltage.
arduino,3dy045,drank_too_much,2,Mon Jul 20 14:28:08 2015 UTC,"In addition to what others have said, pulling down all the unused analog pins may help."
arduino,3dy045,offramp13,1 point,Mon Jul 20 16:21:00 2015 UTC,"Alright, thanks for the responses, this clears up a bit."
arduino,3dxvx1,tngbl,2,Mon Jul 20 12:57:17 2015 UTC,"the servo library does not call for specific pin usage, but that is a common misconception.  it does disable hardware PWM on some pins because it takes up a timer.  FreqCount appears to want to use the same timer on the Uno, this is because the Uno only has 1 16bit timer and that's timer2, only 1 thing can use it at a time.  if you switch to the Mega, FreqCount will use timer 5, and you can disable timer 5 in the Servo library as it only needs it if you have a whole bunch of servos.  only other option is to use a servo driver IC and/or a freq counter IC and get the tasks off the Uno."
arduino,3dxvx1,chrwei,1 point,Mon Jul 20 15:36:02 2015 UTC,Brilliant. Thank you for the info. That is exactly what I was looking for.
arduino,3dvel7,3FiTA,18,Sun Jul 19 21:10:40 2015 UTC,"Decoupling. Capacitors basically act like tiny batteries that can charge and discharge very quickly, so they smooth out the 5V power. The capacitors take care of any electrical noise (short voltage spikes or dips) that would otherwise make it to the microcontroller, and they also filter out the noise that the microcontroller itself produces, so that it  doesn't influence other components that may also be connected to the 5V bus."
arduino,3dvel7,bal00,3,Sun Jul 19 21:17:45 2015 UTC,"another way to think about it is that a capacitor presents a low impedance to high frequency signals. Connecting a capacitor between a DC signal and ground provides an easy path for the A/C component (noise) to ground, while leaving the DC component unaffected."
arduino,3dvel7,gnorty,2,Mon Jul 20 02:39:55 2015 UTC,"Can you ELI5 that a bit? My electronics courses have only covered DC so far, so I'm still trying to learn about AC on my own in the meantime."
arduino,3dvel7,gnorty,6,Mon Jul 20 03:49:27 2015 UTC,"a capacitor stores charge on it's electrodes. Imagine it as a spring. If a DC supply is applied, the plates get charged, but as they do, they oppose the voltage of the supply and the current falls off, like a spring when you put a weight on, the spring will start to move, but as it compresses it's force upwards will oppose the weight and the movement will stop at some point.  So when an AC is applied to the capacitor, the plates still charge, but before the charge reaches the voltage of the supply, the flow changes and reverses, so the charge on the plates will assist the  supply. It is like the spring has somebody bouncing on it. The movement will continue forever, and not stop.  So A/C can effectively pass through a capacitor, but DC cannot. So, imagine a 12V supply with +/- 2V of noise. The 12V current cannot pass through, but that varying +/- 2V current will pass through the capacitor to ground very easily. That means the real load (in this case the arduino) gets the nice clean flat DC supply, and the capacitor gets the noise."
arduino,3dvel7,vilette,1 point,Mon Jul 20 05:21:40 2015 UTC,That was great. Thank you!
arduino,3dvel7,WristViolin,2,Mon Jul 20 05:39:37 2015 UTC,Thank you!
arduino,3dvel7,PintoTheBurninator,4,Mon Jul 20 03:45:56 2015 UTC,"On a breadboard, first try with no capacitor. If it works you are ok.  If it resets sometimes, generally when you switch a big load like a dc motor or a power led, add a min. 10uF between + and gnd as close as possible to the cpu.  The value in uf is depending of the load you switch, more mA, more uF. That could go up to over 1000uF if you are playing with motors.  It also depends of the quality of your power supply. If it has a lot of instant power, shorts and bigs wires, there is less need for big capacitors.  Finally, if your project use analog signals and AD, put as many capacitors as you can, not big (100nf) between + and gnd, BUT very close to the chip."
arduino,3dvel7,vilette,1 point,Mon Jul 20 03:36:47 2015 UTC,Thanks!
arduino,3dvel7,des09,1 point,Mon Jul 20 03:46:02 2015 UTC,"Also if you're referring to the capacitors on the crystal circuit, here's some good info: http://electronics.stackexchange.com/questions/75704/why-use-capacitors-with-crystals"
arduino,3dveux,chiang01,3,Sun Jul 19 21:12:46 2015 UTC,"Not letting me download. It's giving me a ""forbidden"" page."
arduino,3dveux,crooks4hire,3,Mon Jul 20 00:09:33 2015 UTC,Getting the same result too
arduino,3dveux,NicsCage,3,Mon Jul 20 04:00:09 2015 UTC,"Ad and Android play store popups all over. A direct link would be nice, otherwise, down voted."
arduino,3dveux,OMGSnarf,1 point,Mon Jul 20 04:21:04 2015 UTC,I use Ublock I was able to download no problem. That being said that really sucks!
arduino,3dveux,Revons,3,Mon Jul 20 11:50:36 2015 UTC,"I didn't get any popups or annoying ads, but here's the direct link I pulled from the site. http://filepi.com/i/jnbWBos"
arduino,3dveux,PolyPill,1 point,Mon Jul 20 07:24:17 2015 UTC,Anyone got a direct link?
arduino,3dwbks,3FiTA,3,Mon Jul 20 01:57:36 2015 UTC,"How can I power the LED strip without plugging anything into the wall?   A suitably large 12V battery. If it's a smaller strip, 8 AA batteries in series would work. You would use an N-channel MOSFET on the negative side of the strip to control it."
arduino,3dwbks,bal00,1 point,Mon Jul 20 02:10:44 2015 UTC,Any recommendations for something I could plug into a breadboard? And eventually solder to a PCB?  EDIT: Would an 8 AA battery holder work?
arduino,3dwbks,scribblenaught,2,Mon Jul 20 04:41:07 2015 UTC,"If your going to solder it for mobile (ie nonpluggable) then a battery holder is your best bet. I would test how much mAh you need before doing so to determine if 8 AA batteries are enough, or if you need bigger."
arduino,3dwbks,bal00,1 point,Mon Jul 20 07:44:06 2015 UTC,"Yes, a battery holder would work."
arduino,3dwbks,surfcrawl,1 point,Mon Jul 20 10:16:33 2015 UTC,12v lipo batteries for RC stuff work well
arduino,3dwbks,dataunderminer,1 point,Mon Jul 20 10:03:11 2015 UTC,"I would agree there are some good high mHa 12v rechargeable batteries to choose from, depending on mobility and how long you want this running i have used lawnmower batteries. Also you could run the voltage regulator strait from the 12v, in parallel to the LED strip, to possibly reduce some power source complexity."
arduino,3du4tu,adilmoujahid,4,Sun Jul 19 14:21:46 2015 UTC,I dig this but is there an alternative to relying on a third party service? I'd there anything I could install locally that could do the same thing?
arduino,3du4tu,indianapale,5,Sun Jul 19 16:17:48 2015 UTC,"I have a similar question. I would like to do a home monitoring system, but instead of photocell use motion sensors and reed switches, and instead of pushing the data to plotly, I'd prefer to store the data on a local or remote server.  Great tutorial, as a newb I really appreciate clear, well written articles like this. Even if I'm not going to do the exact same thing, I can take some pieces and apply them to my project."
arduino,3du4tu,LetMeGrowThatForYou,8,Sun Jul 19 16:30:07 2015 UTC,"For real-time visualisation, you can do this using d3.js and socket.io. If you want to create a dashboard for historical data analysis, I recommend using MongoDB as a database and implement the front-end using dc.js. I wrote a blog post on how to do this: http://adilmoujahid.com/posts/2015/01/interactive-data-visualization-d3-dc-python-mongodb/"
arduino,3du4tu,LetMeGrowThatForYou,5,Sun Jul 19 16:44:59 2015 UTC,"Wow, this is awesome! Adil not only are you obviously very smart, but you're a great teacher. I think I am going to mess around with Node.js/IoT as your other blog post outlines. I'm pretty excited to get this project started!"
arduino,3du4tu,adrianoalbert,2,Sun Jul 19 18:56:57 2015 UTC,Thank you for the kind words! Glad you found the tutorials useful.
arduino,3du4tu,HeinzHeinzensen,4,Mon Jul 20 08:59:55 2015 UTC,"Hey Adil Moujahid, Thanks for sharing with us an excellent material!"
arduino,3du4tu,w0lfiesmith,2,Sun Jul 19 16:03:02 2015 UTC,I never realized it is that easy to listen to the Arduino serial port in Node.
arduino,3du4tu,playaspec,-1,Mon Jul 20 10:58:59 2015 UTC,"Neat,  but not really anything to do with an Internet of things if every ""thing"" required a USB connection to a host machine running a web server."
arduino,3du4tu,krokerz,2,Sun Jul 19 22:03:34 2015 UTC,"not really anything to do with an Internet of things if every ""thing"" required a USB connection to a host machine running a web server.    If you can't figure out how to embed this to be a stand alone device, then maybe you're not up to making things yourself.  Any competent maker could see how to add a ethernet or wifi shield, but requiring that in the article excludes many from following along.   Maybe consumers like you should stick to purchasing pre-made devices like Nest."
arduino,3du4tu,playaspec,-2,Mon Jul 20 10:28:23 2015 UTC,Yeah because using premade shields makes you such an expert right? How about make the whole thing yourself instead of relying on others premade boards?
arduino,3du4tu,krokerz,1 point,Mon Jul 20 13:24:33 2015 UTC,How about make the whole thing yourself instead of relying on others premade boards?   I make my living doing just that. Thanks for playing though.
arduino,3dx7h8,Flyp03,1 point,Mon Jul 20 07:38:25 2015 UTC,"You could use a servo motor and a distance sensor:- 1-Mount the sensor on the servo motor 2-Rotate the servo motor right and left 3-When distance sensor detect object, then you can easily know the angle at which the servo motor is ""it is the angle you need""  Here is an illustration of the distance sensor working: http://www.intorobotics.com/wp-content/uploads/2013/11/496px-Sonar_Principle_EN.svg_.png  Here is an image of how I imagine the whole set ""Sorry for bad drawing xD"": http://imgur.com/ZjjaMXx  And here is a real image of how the sensor attached to servo motor may look like: http://media.apcmag.com/wp-content/uploads/sites/20/2013/05/apcnews2012masterclass_arduino_rolly_thumb_mainImage10.jpg10.jpg  I hope this helps you :D"
arduino,3dx7h8,Ahmed_El_Hinidy,1 point,Mon Jul 20 09:24:51 2015 UTC,Thanks! But I should have mentioned that both objects/sensors will be attached to body parts so they will both be moving. I need to find the relative angular position of one body part to the other.
arduino,3dx7h8,Ahmed_El_Hinidy,1 point,Mon Jul 20 17:56:20 2015 UTC,"ummm, that's a bit different than what I understood. Ok, I'll search into it, and if I find any relevant answer I'll post it here ASAP :D"
arduino,3dx7h8,Fishmachine,1 point,Mon Jul 20 22:22:35 2015 UTC,Much appreciated!
arduino,3dx7h8,Fishmachine,1 point,Mon Jul 20 23:12:39 2015 UTC,You need to be more specific.  Are the objects connected?  What's the distance?  Does one/both move and in which axis?  One of the solutions would be mounting a source of signal (i.e. IR LED) on one object and rotating directional sensor (i.e. IR photodiode on a servo) on the other one and reading the angular position of the sensor reading the strongest signal.
arduino,3dxlk8,milanhofman,2,Mon Jul 20 11:04:48 2015 UTC,"just had an idea, what if i connect the USB to a wall outlet (with iphone charger ofcorse) than it behaves just fine..   im feeding the nano trough the vIn pin (from a buck converter set to 5.01 volts)"
arduino,3dxlk8,bal00,2,Mon Jul 20 11:08:32 2015 UTC,"If you're powering the Arduino throuch the Vin pin, the input voltage needs to be greater than 7V. 7-9V is ideal. If you want to put 5V into the Arduino directly, then you need to use the 5V pin to do it, not Vin.  If you put 5V into Vin, the 5V regulator will only manage to put out 4V or so, and that will screw up your reference voltage for the analog input, because analogRead(A0) would now return 1023 for a 4V signal.  Set your buck to 7V and things will be fine."
arduino,3dxlk8,bal00,1 point,Mon Jul 20 11:40:03 2015 UTC,"i thought so, i asked the shop if the vIn pin is regulated by the 7805 on board, no was his answer, and if i put 10 volts on that pin it would blow up,  since i use a buck converter i can just turn the voltage to 9 volts and it would be just fine right?"
arduino,3dxlk8,myplacedk,1 point,Mon Jul 20 12:02:20 2015 UTC,"Yup, though 7V will produce less heat."
arduino,3dwskv,y4m4,2,Mon Jul 20 04:36:25 2015 UTC,"If the regulator gets hot, there's a lot of current being drawn.  As this is happening when there is no SD card in place, this is most likely due to faulty wiring.    If this happened when the card was inserted I would surmise that either the card itself was damaged or you had connected 5V to the CD pin which is shorted to ground when a card is inserted.  Since it does not happen when the card is inserted, only when it is removed, it's hard to say what the problem might be.  But it's definitely not your code.    I mean it's possible your code could trigger it, but only if you have something wired wrong.  The SD card shield itself could be faulty too.  I'm trying to think of how you could possibly have wired this wrong to have this happen only when the card isn't inserted, but I'm drawing a blank.  Whatever you've done though, somehow 5V is being shorted to ground, perhaps through a resistor, when the card is removed.  It could be through a microcontroller pin, but that probably wouldn't last long if that were the case."
arduino,3dwskv,scswift,1 point,Mon Jul 20 06:07:42 2015 UTC,"I connected both the 3.3v and 5v pins to the arduino?  Your post made me try unplugging the 5v pin and it WILL power up now. The LCD screen is kinda dim, that tells me it is still pulling lots of current."
arduino,3dwskv,scswift,1 point,Mon Jul 20 14:33:25 2015 UTC,I would try connecting only the 5V pin on the SD shield and see if that works.  The shield presumably has a 3V regulator on board to supply the SD card.    The shield also probably has a level shifter or voltage divider on it to handle 5V logic. You may need a 5V supply to make that work.  The 3V pin is probably for when you re interfacing with a 3V arduino.
arduino,3dwskv,sleemanj,3,Mon Jul 20 20:40:33 2015 UTC,Maybe the spring contacts in the sdcard slot are touching the metal surface of the slot when the card is removed.  Is the top of the slot dented?
