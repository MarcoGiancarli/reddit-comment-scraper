iOSProgramming,3e5va3,lesiva,8,Wed Jul 22 04:50:43 2015 UTC,"Swift is still under rapid development. It's just over a year old as far as the public is concerned, and they were very clear when they announced it that it would evolve quickly. If you want stability, you should be using Objective-C.m, and there is nothing wrong with that at all.   As for the SDK, once a method is published in a public SDK it will be supported until it's explicitly marked as deprecated. This gives you peace of mind.   Lastly, remember that programming is challenging. It's not something where you become employable after doing a couple of tutorials. It's a craft, and it takes care and patience to understand how you learn best and what your strengths are. Keep at it and you'll be rewarded. Dealing with code that's broken since it was written, like your tutorials, is just another thing programmers actually deal with, after all."
iOSProgramming,3e5va3,silver_belt,1 point,Wed Jul 22 05:19:29 2015 UTC,"Thank you. I'm not even looking to become employable, I just want to make a couple of games that I've had in mind. Usually, programming and stuff just clicks for me. It's incredibly frustrating because this time it's not clicking, and it feels like it's not my fault lol. I'm watching him do stuff in the tutorial, and it's making perfect sense to me, and then I'm trying to implement it myself and nothing's working. Raaage.  I'll stick with it and try to figure it out. I really do wish that the very first video in ANY iOS tutorial was just disclaiming that a lot of things might be out of date by the time you see it, and educating you on how to find and use the new versions of methods when they're released."
iOSProgramming,3e5va3,15458434,4,Wed Jul 22 06:16:16 2015 UTC,Ray Wenderlich has good tutorials and they are mostly up to date on the latest API and Syntax.
iOSProgramming,3e5va3,FutureIsMine,1 point,Wed Jul 22 05:13:16 2015 UTC,"I'll give them a look, thanks!"
iOSProgramming,3e5va3,eludia,2,Wed Jul 22 06:18:53 2015 UTC,"Because the language has changed and if Apple is to allow the old code than they would have to do something similar to GO which would be to try and maintain a translation system. Their solution is instead to break your code, tell you that you need to do it a different way. Apple does provide a refactoring tool though with XCode 7, granted its not perfect, but it helps out in certain areas."
iOSProgramming,3e61db,fallendev,1 point,Wed Jul 22 05:54:59 2015 UTC,I had to refactor an existing project of about 2000 lines of code when Swift 1.2 came out. That took about an hour and since 1.2 for new projects I write everything in Swift. For me Objective-C just doesn't cut it anymore and I write twice the amount of code in Swift compared to Objective-C.
iOSProgramming,3e61db,15458434,1 point,Wed Jul 22 06:24:46 2015 UTC,"Right now, in production code, I'd still use obj-c but swift is a lot of fun to learn!"
iOSProgramming,3e2xij,felixkk,1 point,Tue Jul 21 15:31:56 2015 UTC,Didn't dig into this GitHub but the test flight iTunes connect one email account per test is real annoying.
iOSProgramming,3e39h4,CATERPILLARS,4,Tue Jul 21 16:56:38 2015 UTC,"I'm still in the beginnings of learning, it's a pretty good app! Just curious, how long did this take you? What languages did you use? What did you use to design?"
iOSProgramming,3e39h4,jman32112,6,Tue Jul 21 17:33:45 2015 UTC,"I use objective c to program because I was learning it before swift came out and didn't want to have to relearn everything. I specifically used the spritekit framework for this game. I used photoshop to make all the sprites. It took me about a month from start to release for this game, as I was learning as I went along, and I still am! It's great to learn by doing and I'd recommend trying to make the game you want to, using YouTube tutorials or questions on here or stackoverflow to push you along when you don't know how to do something. It may not be the most efficient way to learn how to code but it was a blast seeing little things start to work over time rather than stick my nose in a book and make the game in one shebang."
iOSProgramming,3e39h4,okgabr,4,Tue Jul 21 17:55:24 2015 UTC,"Cool game concept. Great job given that you did it in a month! IMHO, I recommend decreasing the difficulty when you're <10 points. There's a fine line between an addicting game and a difficult one, and I believe yours is more towards the latter."
iOSProgramming,3e39h4,okgabr,4,Tue Jul 21 20:38:15 2015 UTC,Man I had been thinking about a way to cool it down to start and I can't believe I had never thought about that. I think I'll implement that.
iOSProgramming,3e39h4,frankgotthegirl,1 point,Tue Jul 21 20:42:22 2015 UTC,Great! Looking forward to the next update.
iOSProgramming,3e39h4,schifosa,3,Tue Jul 21 20:48:25 2015 UTC,Congrats on getting an app done that fast! I'm impressed. I'm still learning but love hearing stories of people get things done. It reassures me that it's an attainable goal when I get discouraged.   About the app: I agree with the difficulty that someone else mentioned. Other than that it seems pretty fun. Are you thinking about doing achievements or upgrades or anything like that?
iOSProgramming,3e5pq8,vveerrgg,1 point,Wed Jul 22 03:57:35 2015 UTC,Swift would do the job and make sure to take a look at GCD to for making things asynchronous. You don't want to block the main thread with stuff you could have done in the background.
iOSProgramming,3e5obd,Tandoori_Pizza,1 point,Wed Jul 22 03:44:42 2015 UTC,Why not use a remote logger such as http://bugfender.com?
iOSProgramming,3e5obd,alienzingano,1 point,Wed Jul 22 04:28:33 2015 UTC,You can get the logfiles from your Device with Xcode through the Devices Window
iOSProgramming,3e5dv0,jaettekaat,2,Wed Jul 22 02:16:42 2015 UTC,"At first glance it looks like their SDK isn't being linked by your project correctly, or that their SDK (if its precompiled) doesn't include an arm7 slice in the binary."
iOSProgramming,3e5dv0,brendan09,1 point,Wed Jul 22 03:19:49 2015 UTC,"That's what I figured too, but how come when I don't include that initialization, the linker doesn't complain about the declaration of the variable?  PortSIPSDK sdkInstance;   And about subsequent calls to methods of the sdk in this form:  [sdkInstance sdkMethod:parameter]   If I remove the initialization and keep these two lines, the linker doesn't complain, but calling the method causes a EXC_BAD_ACCESS error."
iOSProgramming,3e5dv0,brendan09,1 point,Wed Jul 22 04:14:08 2015 UTC,I would imagine it's being optimized out by the compiler since an instance is never allocated.
iOSProgramming,3e5dv0,silver_belt,1 point,Wed Jul 22 04:18:38 2015 UTC,"This might just be a copy/paste thing but you're missing the * in the variable declaration.   PortSIPSDK *sdkInstance;  Keep an eye on what device you're building for, as that will determine what it tries to link to in their library. Other than that, not sure right now."
iOSProgramming,3e5dv0,15458434,1 point,Wed Jul 22 05:25:10 2015 UTC,Put an Objective-C API in between where everything is bridged to the Core Foundation types.
iOSProgramming,3e5dco,System421,2,Wed Jul 22 02:12:47 2015 UTC,You don't get access to the user's data.
iOSProgramming,3e20a7,matteoman,5,Tue Jul 21 10:04:24 2015 UTC,"good article, but this made me lol:   This line of code should never appear anywhere in your code:  let appDelegate = UIApplication.sharedApplication().delegate"
iOSProgramming,3e20a7,ploden,1 point,Tue Jul 21 17:20:59 2015 UTC,May I ask why?
iOSProgramming,3e20a7,isurujn,3,Wed Jul 22 06:21:13 2015 UTC,Only thing I disagree with is not using notification. If you don't abuse them that can be quite an easy way to pass info around. The danger zone is when you might have multiple messages or timing issues. Likewise it means you do need to know what is and isn't in memory.
iOSProgramming,3e20a7,nazbot,1 point,Tue Jul 21 17:19:13 2015 UTC,Agree. There are some situations where using notifications is the only way.
iOSProgramming,3e20a7,isurujn,1 point,Wed Jul 22 06:23:35 2015 UTC,"Great guide. Can anyone point me to a resource that better explains how the Model works? I'm having problems grasping the concept, as they say it's a ""globally reachable information"".  Thanks!"
iOSProgramming,3e20a7,kentzler,2,Tue Jul 21 14:00:53 2015 UTC,"'Model' here is referring to the collection of classes that contain the data your app is managing. For example, in an app that lists cars available for hire, the 'model' could be as simple as a single 'Car' class with properties for make, color, etc.  The author is describing how passing a 'car' around between view controllers is one way to communicate. When a car is selected from a list, the view controller for the list knows which car is being accessed. It can create the view controller that displays the car's details and pass it a reference to that car. The 'detail' view controller might change some of the information about that car, so the 'list' view controller should refresh its view when the user returns to the list. This is how the two view controllers are 'communicating'.  So 'Model' here just means the Car. In a real world application, that could extend to a collection of related model classes (drivers, car manufacturers, etc) that might need to persist to a database, be retrieved from an API, etc."
iOSProgramming,3e20a7,benpackard,1 point,Tue Jul 21 15:34:33 2015 UTC,"Wow, thanks!  Ok, here's how I think I understand it: There's a Car class. OriginVC creates an instance of Car called RedCar. How can the DestinationVC know where that instance of Car (RedCar) is located?   Or does the article simply say that the DestinationVC changes the Class attribute, not the attribute of the instance?"
iOSProgramming,3e20a7,kentzler,1 point,Tue Jul 21 16:43:54 2015 UTC,You would have a property on the destination view controller for the car. The origin would set that reference based on which car you picked.
iOSProgramming,3e20a7,benpackard,1 point,Tue Jul 21 21:58:57 2015 UTC,"Awesome, thanks!"
iOSProgramming,3e526n,jtbrown,1 point,Wed Jul 22 00:41:07 2015 UTC,My favorite tip from the video was how we recommended combining the two Auto Layout debugging methods into a unit test. Very nice.
iOSProgramming,3e4sgy,bierme,1 point,Tue Jul 21 23:21:54 2015 UTC,Is your main storyboard file set in your .plist? Would you be able to provide some screenshots?
iOSProgramming,3e4sgy,BiPoleArt,1 point,Wed Jul 22 01:09:22 2015 UTC,Deleted everything in ~/Library/Developer/Xcode/DerivedData/AppName-somelistofcharacters
iOSProgramming,3e44kx,lunarchaos42,1 point,Tue Jul 21 20:27:15 2015 UTC,How are you setting up the array in view B?
iOSProgramming,3e44kx,VulcansHammer,1 point,Tue Jul 21 20:56:27 2015 UTC,"In the header I am creating these    @property (weak, nonatomic) IBOutlet UIImageView *BImage;  @property (strong, nonatomic) NSArray *ArrayofViewsForSwipe;   @property NSInteger currentIndex; // starting at zero"
iOSProgramming,3e44kx,VulcansHammer,1 point,Tue Jul 21 21:02:35 2015 UTC,"In the .m file under where it says @implementation make sure you synthesize the array by writing        @synthesize ArrayofViewsForSwipe;   also try adding this before you set view B to the destination view controller:    B *ViewB = [[B alloc] init];   And just for reference, it's always good to use camel case when naming variables.    For example, Instead of:    @property (strong, nonatomic) NSArray *ArrayofViewsForSwipe;   Do this:    @property (strong, nonatomic) NSArray *arrayOfViewsForSwipe;"
iOSProgramming,3e44kx,dcramps,1 point,Tue Jul 21 22:50:44 2015 UTC,I used the   @synthesize arrayOfViewsForSwipe;   but when trying to add the   B *ViewB = [[B alloc] init];    It gave me an error.  I used to be a electrical engineering major and I had some bad starter programming classes I have been trying to fight it ever since.
iOSProgramming,3e44kx,SeNeO,1 point,Tue Jul 21 23:12:23 2015 UTC,Properties are already synthesized. It won't make any difference if you @synthesize or not.  Creating an instance of B with alloc init will also do nothing useful.
iOSProgramming,3e44kx,patbdev,1 point,Tue Jul 21 23:14:48 2015 UTC,"is [UIImage imageNamed:@""test.png""]working, as does it return a valid UIImage?"
iOSProgramming,3e44kx,patbdev,1 point,Tue Jul 21 21:49:50 2015 UTC,yes that works as a valid UIImage.
iOSProgramming,3e44kx,dcramps,1 point,Tue Jul 21 23:04:48 2015 UTC,In which view controller method are you calling the NSArray get object method?
iOSProgramming,3e44kx,dcramps,1 point,Tue Jul 21 22:36:22 2015 UTC,"View B, I get the error when I try and use this code:         [self showImageAtIndex:_currentIndex]; When I comment out the line the View shows the default image I stored."
iOSProgramming,3e44kx,askoruli,1 point,Tue Jul 21 23:14:02 2015 UTC,In which view controller METHOD are you calling the NSArray get object method?
iOSProgramming,3e44kx,askoruli,1 point,Tue Jul 21 23:54:34 2015 UTC,Sorry I was failing at reading. I am calling it in the ViewDidLoad method.
iOSProgramming,3e44kx,hatheaded,1 point,Wed Jul 22 01:44:13 2015 UTC,In what method are you calling _BImage.image = blah?
iOSProgramming,3e4194,guynumber3,3,Tue Jul 21 20:04:32 2015 UTC,I don't have personal experience with freelancing because I am still a new programmer but I have looked at upwork
iOSProgramming,3e4194,lunarchaos42,3,Tue Jul 21 20:31:14 2015 UTC,Go to a coworking space with lots of entrepreneurs. That's where I get all my assignments.
iOSProgramming,3e4194,15458434,2,Tue Jul 21 20:38:49 2015 UTC,"and what are such places? I'm very new to this, just trying to do something with my time."
iOSProgramming,3e4194,badlcuk,2,Tue Jul 21 21:03:49 2015 UTC,"I work at a co-working space! They are spaces where many individuals/companies rent spaces. Some people even just rent a single desk, other companies may rent an entire office or floor. They often help people networking in their community and provide support by offering meeting rooms, displays, desks, etc, so that you can have a space to work. Ours is also the host for many local developer meet ups, including language specific meet ups like local ruby, javascript, python meet ups and things such as dev socials, fundraising, and blenders for the local tech community."
iOSProgramming,3e4194,15458434,1 point,Wed Jul 22 03:13:59 2015 UTC,not sure how much of that is around here but i'll start looking around
iOSProgramming,3e4194,ThePantsThief,1 point,Wed Jul 22 03:37:35 2015 UTC,Look at meetup.com (widely used here in Amsterdam) or something similar to see if there are any meetups organised in your area for entrepreneurs. They probably can point you in the right direction.
iOSProgramming,3e4194,badlcuk,1 point,Wed Jul 22 04:34:31 2015 UTC,"I'm not familiar with what you're describing, could you elaborate?"
iOSProgramming,3e4194,devsquid,2,Tue Jul 21 22:18:29 2015 UTC,"My start was literally networking around my community until someone knew me/trusted me enough to hire me for a small job. Coworking spaces, dev groups, entrepreneur meet ups, etc."
iOSProgramming,3e4194,vveerrgg,2,Wed Jul 22 03:11:28 2015 UTC,Good Advice
iOSProgramming,3e3vwa,danielgomez22,3,Tue Jul 21 19:28:16 2015 UTC,"I used to use Crashlytics, but since it migrated to Fabric it's gone downhill...and so has the toolset.  I've been using New Relic, Apple's built-in crash tracking, and Crashlytics in various apps. I'm looking for a replacement, however."
iOSProgramming,3e3vwa,brendan09,2,Wed Jul 22 03:23:02 2015 UTC,"I've used fabric and it was OK, but I've heard a lot of people are using localytics now."
iOSProgramming,3e3tsp,succeededcoma,1 point,Tue Jul 21 19:13:55 2015 UTC,Solved
iOSProgramming,3e3sql,Rossistboss,1 point,Tue Jul 21 19:06:37 2015 UTC,"if you're trying an experiment, I say go for it. But if you're looking to do a production project, be prepared for a lot of tech support for older devices.    I would rather spend all that time instead of finding out if they'll allow it, building something that is truly useable and interesting to end users."
iOSProgramming,3e3sql,vveerrgg,1 point,Wed Jul 22 04:03:16 2015 UTC,Why would you want to support all possible iOS versions in the first place? It's completely unnecessary. It makes sense for a proof-of-concept not for normal production app.
iOSProgramming,3e3sql,Sebaall,2,Tue Jul 21 19:23:21 2015 UTC,I think there is a relatively small (but still pretty large in absolute numbers) market for new apps supporting the 1st gen iPad that almost no-one is serving.   Especially for small kids that get old devices when the parents get something new.
iOSProgramming,3e3sql,palmin,1 point,Tue Jul 21 19:38:16 2015 UTC,"I'm still skeptical. There are not only IOS version differences, but also performance limitations of older devices."
iOSProgramming,3e3sql,Sebaall,1 point,Tue Jul 21 20:00:06 2015 UTC,I am not doing this for practicality. I am just wondering if they will reject it or not.
iOSProgramming,3e2im1,I_AM_TESLA,1 point,Tue Jul 21 13:33:01 2015 UTC,"You can use Parse.com I know that you can add some server logic, and for the free tier that they have you can also set a background job."
iOSProgramming,3e2im1,xtmd,2,Tue Jul 21 13:39:03 2015 UTC,That won't work for me. Parse is good for account management but I need a service that offers realtime chat and gives me access to the backend.
iOSProgramming,3e2im1,xtmd,1 point,Tue Jul 21 13:47:25 2015 UTC,Please check this: https://www.parse.com/questions/real-time-chat-app-with-just-only-parse
iOSProgramming,3e2im1,ibisum,1 point,Tue Jul 21 14:12:34 2015 UTC,Look up noobhub on github.. Easy to use and extremely easy to customize.
iOSProgramming,3e2im1,waterskier2007,1 point,Tue Jul 21 15:45:33 2015 UTC,I've actually built a realtime chat component into one of my apps using only parse. It can definitely be done.
iOSProgramming,3e2im1,kbroich,1 point,Tue Jul 21 20:01:42 2015 UTC,A realtime chat with APN? Seriously?
iOSProgramming,3e2im1,waterskier2007,1 point,Tue Jul 21 20:49:01 2015 UTC,"Yep. The only thing it doesn't have is an indicator when the other person is typing, but that wouldn't be too hard to implement."
iOSProgramming,3e2im1,waterskier2007,1 point,Tue Jul 21 20:51:33 2015 UTC,"It can be done but not well. I need real time chat, Parse doesn't offer any sort of XMPP solution."
iOSProgramming,3e2im1,15458434,1 point,Tue Jul 21 21:50:49 2015 UTC,"I still haven't seen anywhere that you've stated why parse won't work. I'm in no way stating that it absolutely will, but maybe if you said what it doesn't do, we could have a more informed conversation"
iOSProgramming,3e2bem,GeorgeMoroz,12,Tue Jul 21 12:23:25 2015 UTC,"Unless you're an engineer / architect, you shouldn't be designing the system architecture before hiring a team. And it sounds like you don't really know what you're doing in this realm, honestly. I'd say that 90% of the time when clients hire me (or try to hire me) having designed out the system in advance, it's wrong and takes more time to fix than if they just came to me with their idea and we worked through how to implement it together. Ditto for UX, btw.  Find a team who has the capabilities to truly grok the core of your idea and not only build the app and backend, but design it (UX, architecture, etc) to meet your functional requirements within the constraints you have (budget, timeline, etc). Those teams are hard to find, but we're out there :)"
iOSProgramming,3e2bem,ryanwaggoner,3,Tue Jul 21 12:51:51 2015 UTC,Nice usage of grok :)
iOSProgramming,3e2bem,MarioKurt,1 point,Tue Jul 21 16:49:33 2015 UTC,Thanks for your insight.
iOSProgramming,3e2bem,Coldmode,3,Tue Jul 21 23:36:47 2015 UTC,You want to hire a dev team without having prototyped your app? Are you talking about an Eastern European consultancy or US based (or wherever you are) local devs? Maybe you should scale things back and make a proof of concept before you sign up to spend $15k a month on engineering.
iOSProgramming,3e2bem,MacBoxRocks,5,Tue Jul 21 16:57:54 2015 UTC,This should help.
iOSProgramming,3e2bem,15458434,1 point,Tue Jul 21 12:35:50 2015 UTC,Well I'm glad the idiom worked out in my favor.
iOSProgramming,3e2bem,lostrolls666,4,Tue Jul 21 12:43:08 2015 UTC,"Here's how the work flow of how to get to the first version of your app, with instant users on the first day. The trick is to build a minimal viable product (keep costs as low as possible, the app business is risky) and iterate from there. Step 1: Talk to people about your idea. You need feedback and more ideas. Step 2: Figure out a target audience that's interested in your idea. Talk to them get more feedback. Step 3: Make a non functional prototype. Just some images stitched together. Step 4: Talk to engineer if it's possible to easily engineer. If not go back to step 3. Step 5: Go to your target audience show your prototype. See what parts of the UI they have difficulty with.  Step 6: Back to step 3 until, every unclear thing in the interface is gone and it's the minimal amount of options. Step 7a: Have engineer build this minimal app version.  Step 7b: Talk to some press people and a possibility of a press release on blog, news sites, Facebook or whatever medium is used by targeted audience. Stap 8: Run a beta test with people from targeted audience and possible bloggers. Get yet again feedback. Step 9: Fix bugs Step 10: Go back to step 8. Until app is stable. Step 11: Launch the app with a press release or blog posts or whatever."
iOSProgramming,3e02qt,floopies,13,Mon Jul 20 22:37:28 2015 UTC,The author sounds like a stuck up prick.
iOSProgramming,3e02qt,PM_ME_UR_CEREBELLUM,1 point,Tue Jul 21 10:56:43 2015 UTC,I read through both of his Medium posts and he seemingly refuses to simply tell me what the app is meant to do in clear language.
iOSProgramming,3e02qt,blabus,2,Wed Jul 22 05:24:42 2015 UTC,I'll take a stab at it!
iOSProgramming,3e02qt,Brodie10-1,2,Tue Jul 21 02:42:26 2015 UTC,"""Goll dang....painting this fence is fun! I hope other people don't want to do it.""  ""Google Stole My Idea"" - Bullcrap.  Google had this already in the bag when you came up with your idea. I'd say this is probably libel."
iOSProgramming,3e02qt,dagobaw,3,Tue Jul 21 14:39:04 2015 UTC,lol. He didn't mean literally numbnut.
iOSProgramming,3e02qt,helpfuldan,1 point,Tue Jul 21 15:04:25 2015 UTC,I wanna help!
iOSProgramming,3e02qt,pas0185,1 point,Tue Jul 21 10:09:50 2015 UTC,I like it and want also to help.
iOSProgramming,3e02qt,steveraffner,1 point,Tue Jul 21 10:49:41 2015 UTC,"my rule of thumb is... if you can't talk about it & share it with people you trust (or are potential customers), you can't improve it before it launches.  He got a couple of things right in that article about no sacred ideas and building something for yourself fist. The problem is... he missed the point of sticking with a project till the end.   If he's not willing to commit to it to a completed product, why would a customer or another dev have any interest in taking it further.  He's gotta be like Elsa and let it go."
iOSProgramming,3e3cze,utzutz,0,Tue Jul 21 17:19:55 2015 UTC,We're also on Product Hunt. http://www.producthunt.com/tech/equal
iOSProgramming,3dyupb,jakemarsh,1 point,Mon Jul 20 17:24:14 2015 UTC,I like these posts that you're doing but could you please just post a link. It's really annoying not to have a source and not being able to copy/paste.
iOSProgramming,3dyupb,psophis,1 point,Tue Jul 21 16:53:12 2015 UTC,"Ugh, I'm sorry. I'd love to link to them here but I can't because of this silliness: http://www.reddit.com/r/iOSProgramming/comments/3az3sr/little_bites_of_cocoa_23_corespotlight/csiyjbj?context=3"
iOSProgramming,3dyupb,psophis,1 point,Tue Jul 21 17:54:44 2015 UTC,What about posting the source in the comments?
iOSProgramming,3dyupb,psophis,1 point,Tue Jul 21 18:29:23 2015 UTC,Yeah that's exactly what I was doing :(
iOSProgramming,3e19z4,ThePantsThief,1 point,Tue Jul 21 04:39:20 2015 UTC,Why does each successive block need access to the previous one? The way your code is now it would be much cleaner if it was  MYVoidBlock block = ^{     // do some more stuff }; MYVoidBlock anotherBlock = ^{     // doing more stuff };  otherBlock(); block(); anotherBlock();   But perhaps there's a reason why it can't be like that?
iOSProgramming,3e19z4,askoruli,1 point,Tue Jul 21 04:55:10 2015 UTC,"I'm making a theming protocol for classes in my app. Each block will (successive or nested) will be pass to +[UIView animateWithDuration:animations:]. It very well could be like that, that's what I'm asking haha.  So I'm deciding between something like this:  for (id block in self.themeBlocks)     [UIView animateWithDuration:X animations:block];   or this:  [UIView animateWithDuration:X animations:self.nestedThemeBlock]   Edit: there are so many blocks because subclasses that add views or functionality can still theme properly. For example, if I have MYTableViewCell that themes itself by changing it's textLabel and backgroundColor colors, and a subclass MYDetailTextTableViewCell adds a custom label to the cell, all it would have to do is add a block or nest the superclass's block to theme it."
iOSProgramming,3e19z4,askoruli,1 point,Tue Jul 21 04:57:31 2015 UTC,"So you want to have a bunch of animations executed one after the other. Successive using the completion handler seems like it will be cleaner especially when it comes to stack traces.  Edit: You actually want all the animations to happen at the same time, why not do them as a single animation:  [UIView animateWithDuration:X animations:^{     for (id block in self.themeBlocks) {          block();     } }];"
iOSProgramming,3e19z4,askoruli,1 point,Tue Jul 21 05:04:03 2015 UTC,"They need to execute at the same time, not actually one after the other, haha. My bad. Either of my above examples would make the changes appear to animate all at once as desired."
iOSProgramming,3e19z4,quellish,1 point,Tue Jul 21 05:06:19 2015 UTC,Seems like having to create all these blocks would be a bit of a pain  Why not something like this:   - (void) applyTheme:(Theme*)theme {     [super applyTheme:theme];     self.label.textColor = theme.textColor;     self.backgroundColor = theme.cellColor;  }   If you call this on all views in your hierarchy (that implement it) then the theme will be applied. If you do it inside an animation block then the changes will be animated. And you can call the same method when you create the view to have the theme applied then.
iOSProgramming,3e19z4,StunnerAlpha,1 point,Tue Jul 21 05:17:02 2015 UTC,"That's almost exactly what I have now, actually! Your comment just made me rethink what I was trying to accomplish with blocks, though. I think I might go with something like this now:  @protocol Theming <NSObject> @property Theme theme;  // just calls [self animations] and [self transitionWithViewAnimations] - (void)applyTheme;  // passes ^{ [self animations]; } to animateWithDuration:animations: // and passes  ^{ [self transitionWithViewAnimations]; } to // transitionWithView:duration:options:animations:completion: - (void)applyThemeAnimated;  // Normal animations like self.backgroundColor - (void)animations; // necessary as a workaround to some bug where animateWithDuration:animations: // doesn't actually animate - (void)transitionWithViewAnimations; @end"
iOSProgramming,3e07r1,LaserWolfTurbo72,9,Mon Jul 20 23:16:40 2015 UTC,I know for a fact that using the team names and their associated colors (together) is enough to get you sued so be careful.  http://www.avvo.com/legal-guides/ugc/can-i-use-nfl-logos-without-permission
iOSProgramming,3e07r1,dcpc10,2,Tue Jul 21 00:17:55 2015 UTC,"To be fair, it's probably all about how good/expensive your lawyers are.  HBO doesn't believe they need permission for any of that, see the new show ""Ballers"".  That doesn't necessarily apply to the rest of us, obviously."
iOSProgramming,3e07r1,jaobrien6,1 point,Tue Jul 21 09:36:38 2015 UTC,HBO has a working relationship with the NFL (Hard Knocks) so they were allowed the use of official logos/names/ect. If you go back to a movie like Any Given Sunday the NFL said hell no and did not allow them to use real teams. The NFL has complete control over what movies/TV shows are allowed to use their product.
iOSProgramming,3e07r1,AJGolf1976,1 point,Tue Jul 21 19:26:38 2015 UTC,"Not true according to this: http://profootballtalk.nbcsports.com/2015/06/07/new-hbo-series-uses-nfl-team-names-logos-without-nfl-consent/  which includes this quote from HBO   “HBO is always mindful of other intellectual property owners, but in this context there is no legal requirement to obtain their consent,” an HBO spokesperson said in a statement issued to PFT on Sunday afternoon."
iOSProgramming,3e07r1,jaobrien6,7,Tue Jul 21 19:34:24 2015 UTC,"Thoughts?   Read up the difference between trademark and copyright.  Don't take a lay persons understanding of either.  For example, a person telling you ""Their logos are actually copyrightable and trademark protected, but their names are not.""  is not correct."
iOSProgramming,3e07r1,PatentSurfer,1 point,Tue Jul 21 00:08:03 2015 UTC,"Read up the difference between trademark and copyright. Don't take a lay persons understanding of either. For example, a person telling you ""Their logos are actually copyrightable and trademark protected, but their names are not."" is not correct.   Thanks patent surfer. I'm reading as much as I can on copyrights and trademarks right now. There's a lot of great stuff out there, especially on avvo (like Quora, but for legal questions). Such as Team names are subject to trademark protection. So are league names. Player names and arguably player statistics are protected by the rights of publicity enjoyed by individual players.  So we are no doubt dealing with trademarked content here. Now, trademarked usage can be used under certain circumstances of nominative use. I obviously cannot paste a Yankees logo on a shirt, and put ""New York Yankees"" on it, and sell it. However, under nominate use, I may be able to use the trademark as a reference to describe the product.  Here's the definition...    The nominative use test essentially states that one party may use or refer to the trademark of another if:  1) The product or service cannot be readily identified without using the trademark (e.g. trademark is descriptive of a person, place, or product attribute).  2) The user only uses as much of the mark as is necessary for the identification (e.g. the words but not the font or symbol).  3) The user does nothing to suggest sponsorship or endorsement by the trademark holder. This applies even if the nominative use is commercial, and the same test applies for metatags.    Now, my application is like a forum/message-board where people can talk about and compare players. Rather than users typing in the player names, team names, league names etc which would be a quite onerous user experience... they are provided in the application. They can simply search for the players they want to talk about and select them, and then a write post about those players selected.  It appears I meet criteria #1. There is no way to readily identify talking about Tom Brady, than stating his name. ""Quarterback, with jersey number 12, who currently plays for the team that plays in Foxborough"". Using a name like this, team, and league seem to be nomanitive use.  I also meet #2. I don't use league logo's, I don't use their specific fonts, no symbols. Just the plain words.  I don't suggest that I am endorsed by or sponsored by any of these leagues in any way. I believe I meet criteria 3 as well.  Am I on point with any of this, or only searching for things I want to see?"
iOSProgramming,3e07r1,PatentSurfer,2,Tue Jul 21 00:42:56 2015 UTC,"It appears I meet criteria #1. There is no way to readily identify talking about Tom Brady, than stating his name. ""Quarterback, with jersey number 12, who currently plays for the team that plays in Foxborough"". Using a name like this, team, and league seem to be nomanitive use.   I think point #1 might be an issue for team names because for many of the teams there are ways of readily identifying them without using the trademark.  For example, the Philadelphia baseball team,  or the Boston Basketball team.  Though, for some teams there may be an argument that the team name must be used to clearly distinguish over others teams of the same sport in the same city.     Good luck."
iOSProgramming,3e07r1,goletasb,2,Tue Jul 21 00:56:08 2015 UTC,"Hi there, I practice patent, trademark, and copyright law in California.  I just wanted to warn you against making any conclusions related to whether you do or do not meet any of those factors. Those factors are very likely described in case law, and without reading the case law surrounding each factor, there is no way you can make any real conclusions. Since you've put so much hard work into your app, I'd really hate to see you go down over something like this.  The law is complicated and I generally advise clients that it's foolish to go it alone, so to speak. If you have any other specific questions, I can try to get to them tomorrow!"
iOSProgramming,3e07r1,whoops_fap,1 point,Tue Jul 21 01:56:25 2015 UTC,"Thanks a lot. I had recently decided not to resubmit after reading about specifics all day, but perhaps you're right and I should jump to conclusions yet. I have some questions and I'll run them by you when I'm no longer on mobile. Thanks!"
iOSProgramming,3e07r1,seanshin,5,Tue Jul 21 02:12:11 2015 UTC,"I've got 50+ apps in the app store and over 2 million downloads to date, and I've had to pull 5-6 apps due to copyright infringement. So even if Apple lets it through, you'll probably get a takedown notice in 2-3 days. Message me if you need help."
iOSProgramming,3e07r1,whoops_fap,1 point,Tue Jul 21 04:10:57 2015 UTC,"Just wondering, did you get those pulled apps back up again? If so, what did you have to do? Thanks in advance"
iOSProgramming,3e07r1,mistakent,1 point,Tue Jul 21 14:29:51 2015 UTC,"I didn't, because it wasn't really worth my time. I knew while I made them there was a chance they'd have to come down, but I gambled. Some of the got to stay up and were successful, the others I had to take down (well, CHOSE to take down, but it was the best option)."
iOSProgramming,3e07r1,mistakent,3,Tue Jul 21 18:42:54 2015 UTC,"In your submission process, what did you select for ""does your app contain third party content""?"
iOSProgramming,3e07r1,pas0185,1 point,Tue Jul 21 02:03:22 2015 UTC,"I think I put yes, because I thought that meant using open source cocoa pods."
iOSProgramming,3e07r1,optik88,1 point,Tue Jul 21 02:12:36 2015 UTC,What should I have put there?
iOSProgramming,3e07r1,MrRobotoPants,1 point,Tue Jul 21 02:13:51 2015 UTC,"Put no if you're not using 3rd-party content. If you put yes, you'll need to submit documentation"
iOSProgramming,3e07r1,MrRobotoPants,1 point,Tue Jul 21 03:52:16 2015 UTC,"I put yes. But I believe I am. I am using team names and player names involved in sports. Those are 3rd party, aren't they?"
iOSProgramming,3e07r1,PM_ME_UR_CEREBELLUM,1 point,Tue Jul 21 04:04:48 2015 UTC,I always think of '3rd party content' as meaning something like pulling api data from another person's web service
iOSProgramming,3e0kfq,fallendev,2,Tue Jul 21 00:59:23 2015 UTC,"When i was freelancing (full-time for a year and a half, i freelance very very part time now) i just networked locally through iOS meet ups and other dev groups. Relationships and reputation were my bread and butter. I only take on smaller apps now that I can pretty consistently manage with my experience and skill level--including my ability to approximate time needed to complete the app. The time varies, mostly due to my clients and not myself (if they dont get back to me for two months after sending them a product check in, i cant really move on much). A lot of the time i work on small projects with individuals who are just trying to navigate the world of development, a lot of my clients are 'ongoing' although its a lot of small updates, like adjusting for new OS versions as they are released, and not so much adding features. I like it this way, i dont take on hard deadlines or high stress jobs as i have my own full-time work. I charge by the hour and discuss my expectations (and what they should expect from me) early on very extensively. I screen my potential clients very very heavily after getting burned a few times."
iOSProgramming,3e0kfq,badlcuk,2,Tue Jul 21 02:12:57 2015 UTC,How much do you charge for updates to existing apps?
iOSProgramming,3e0kfq,boboguitar,1 point,Tue Jul 21 13:39:31 2015 UTC,"Per hour, per usual (and my clients know this way before one is necessary). With time I've gotten better at giving time estimates and being able to work with the client to balance out immediate needs versus nice-to-haves. I also have alternatives if the per-hour rate is too costly for them (I have certain people, including active students at my old university I can point t hem to) if the cost is too high for their current budget, but I will always tell them the tradeoffs (less experience, having to ramp up and learn the code base, etc). I dont engage in any contracts that have ongoing support clauses but work only on my own reputation so there is benefit for me to support them when I have the time, but I wont necessarily put them above my current employer or personal life."
iOSProgramming,3dzn20,kumarovski,2,Mon Jul 20 20:43:41 2015 UTC,Mobile Actions provides most comprehensive and free ASO tool so far. I've been using them for 6 months and increased my organic downloads around %20 after couple updates. try www.mobileaction.co
iOSProgramming,3dzxzs,succeededcoma,1 point,Mon Jul 20 22:01:50 2015 UTC,Resolved
iOSProgramming,3dztj0,vveerrgg,2,Mon Jul 20 21:29:21 2015 UTC,"Very nice, how long did this take you?"
iOSProgramming,3dztj0,fallendev,1 point,Tue Jul 21 00:57:31 2015 UTC,Took me 10 months working part time on it. Basically I went through a bunch of tutorials and kept extending what I had into something bigger.   The longest part was scraping the Pan Am data for the venues and events. Coding the app was mostly straight forward.
iOSProgramming,3dzpxl,blueambar,5,Mon Jul 20 21:03:25 2015 UTC,I don't know. I get most of my assignment from people I know and meet at entrepreneur collaboration workspaces like the impact hub.
iOSProgramming,3dzpxl,15458434,1 point,Mon Jul 20 21:55:45 2015 UTC,Thanks..Good idea to know and meet customers in those places.. Thanks
iOSProgramming,3dzpxl,badlcuk,4,Tue Jul 21 00:10:47 2015 UTC,"I wouldn't say massive. I see a lot of remote freelance gigs that are inconsistent, or temp contracts (6-12 month), but rarely full time positions. Even most freelancers (including myself) that i know that are quite successful are doing it by face-to-face networking and reputation/word of mouth, which is just much easier when not working on a different continent. But if you just want to work from home, I've found that a flexible work arrangement is fairly common after a good chunk of time doing in office work or having experience."
iOSProgramming,3dzpdh,soulchild_,2,Mon Jul 20 20:59:53 2015 UTC,"Yes, simulator is not a real device and will respond differently. For example your Mac's CPU is 64-bit so an Int or NSInteger is 64-bit but on the watch they both are 32-bit, since this device has a 32-bit CPU."
iOSProgramming,3dzo5m,Dark_Angelas,2,Mon Jul 20 20:51:44 2015 UTC,Things work a little differently with local notifications than they do with remote (which gmail uses) but here's some solutions to your problems:  http://stackoverflow.com/questions/5375355/clear-app-badge-with-local-notifications  http://stackoverflow.com/questions/14142434/removing-uilocalnotification-from-notification-tray-programatically
iOSProgramming,3dwaw1,hagrids_a_pineapple,14,Mon Jul 20 01:51:14 2015 UTC,"If you are making money off of an application you should probably shield yourself from a nasty tax audit and start tracking your earnings.  Most small companies are usually LLCs which means if the proverbial crap were to hit the fan then people could sue your business, but all of your private assets are protected.  Again, if you are earning any kind of money forming an LLC is cheap and easy though rules can vary depending on what state you are in.  You might also consider reading up on the IRS site about filing taxes quarterly so you don't get pummeled come next April if you have a substantial amount of tax debt to pay off.  Once you form an LLC it works like a tax pass-through service where you pay the taxes as an individual rather than as a company or corporation (i.e. you as the LLC member are personally responsible for paying any tax on LLC income)."
iOSProgramming,3dwaw1,kraftvgs,4,Mon Jul 20 03:29:26 2015 UTC,"Going to copy and paste my reply to another comment:  Are there any pitfalls of creating a company with no real intention of making it a huge thing? Basically, I want it to be able to use an official name on all my projects and to make them belong to the same thing. I'm less interested in staffing and stuff like that right now since they don't make much money; it's a hobby."
iOSProgramming,3dwaw1,kraftvgs,4,Mon Jul 20 03:31:25 2015 UTC,Aside from shelling out personal money?  Not really.  Depending on what state you are in there may be more hoops to jump through.  I'd recommend reading this and then doing a Google search for forming an LLC in your state.  NINJA EDIT:  Don't forget since you are operating your own business you can start tallying ANYTHING you buy in support of the business and use it as a tax write-off.
iOSProgramming,3dwaw1,HandshakeOfCO,0,Mon Jul 20 03:35:41 2015 UTC,"Uhh... There's actually a lot of drawbacks.  OP, if you create an LLC, expect to have its address and your name put on all sorts of lists.  These include junk mail lists, shitty BBB-esque website databases, and cold calling lists - expect to get all sorts of calls about buying office supplies in bulk or using an accounting service.  Depending on your level of comfort with having your name and address out on the Internet, this may or may not be a deal breaker.  There are ways to keep some of that info private, but they are expensive and costly and have different tax ramifications."
iOSProgramming,3dwaw1,adremeaux,3,Mon Jul 20 14:14:04 2015 UTC,"These include junk mail lists, shitty BBB-esque website databases, and cold calling lists - expect to get all sorts of calls about buying office supplies in bulk or using an accounting service.   I formed my corp about 1.5 years ago, and my info is indeed on lots of lists on the net, however I've received absolutely none of this. No cold calls, no junk mail (after the first week or so), nothing."
iOSProgramming,3dwaw1,DonCasper,1 point,Mon Jul 20 14:56:50 2015 UTC,"I don't have an llc but i get a ton of these calls, presumably from my whois info.  Which is hilarious because my ""company"" exists solely for my own jollies, I don't actually do anything with it."
iOSProgramming,3dwaw1,adremeaux,1 point,Mon Jul 20 16:03:49 2015 UTC,"You'll probably have to hire an accountant, so there's that to keep in mind. I personally have had more expenses since forming a corp than before, and there's more bullshitty paperwork, but it's still the wise thing to do. The other main reason to form a company, besides protection, is that if you ever want to hire somebody, even if it's for only a few hours, you're all set to do that. If you need for instance a designer to knock out some comps for you, you send them a W-9, pay them their $2000 or whatever, and then at the end of the tax year you fill out a 1099, send that over to them, and now the $2000 you paid them is tax deductible (so if you made 100k that year, you'll only be taxed on 98k of it, barring other deductions)."
iOSProgramming,3dwaw1,PM_ME_YOUR_NUD3Z,6,Mon Jul 20 14:54:31 2015 UTC,"Yes.  Being a sole proprietor of a company means that any debt you owe to others can be seized through your personal assets if not paid back properly. So your house, car, prized family ring are all technically fair game.  An LLC on the other hand gives you some protection from creditors doing these things. Remember LLC stands for Limited Liability Company. This means that it limits the degree to which you are liable for something. They cannot go after your personal home, car, or what have you, only company assets."
iOSProgramming,3dwaw1,Shadow_Being,4,Mon Jul 20 03:35:08 2015 UTC,*unless they have a good lawyer.
iOSProgramming,3dwaw1,bryanlogan,3,Mon Jul 20 05:12:09 2015 UTC,"Correct.  It's not bullet-proof. An accountant pointed out that if you had done something really bad as part of the ""one man company"", they could turn around and go after you as a person also."
iOSProgramming,3dwaw1,RcNorth,3,Mon Jul 20 13:50:28 2015 UTC,"Yes, set it up now.  If you get bigger and need extra staff then you won't need to rebrand everything.  I can't speak for the US, but for Canada there are both costs and savings.    Costs: annual accountant,  Savings: If you are going to be earning more than $32,000 ( i think) you can get a GST number and get back all the GST that you pay from your company. You can claim a portion of your rent/lease/mortgage for a company expense, pay yourself in dividends and your first $31000 (approx) is tax free, than 14% (I think) on the rest.  There is a bunch of other stuff, but that gives you the gist of it."
iOSProgramming,3dwaw1,Justin__D,1 point,Mon Jul 20 03:22:20 2015 UTC,"Are there any pitfalls of creating a company with no real intention of making it a huge thing? Basically, I want it to be able to use an official name on all my projects and to make them belong to the same thing. I'm less interested in staffing and stuff like that right now since they don't make much money; it's a hobby."
iOSProgramming,3dwaw1,Alaxx,1 point,Mon Jul 20 03:29:48 2015 UTC,"So basically the same reason I want to - to be able to claim job experience on a resume? That's what kills me when applying for jobs. I've easily applied for hundreds in the last month. In the rare instance a company actually contacts me and I can find out why they didn't hire me, it's all the same - no experience. This despite ten years or so of programming for fun and having (almost) all of a CS degree."
iOSProgramming,3dwaw1,Shadow_Being,4,Mon Jul 20 15:49:28 2015 UTC,"To protect yourself and your assets, yes"
iOSProgramming,3dwaw1,retsotrembla,1 point,Mon Jul 20 02:06:03 2015 UTC,make some money first- then worry about paying taxes after you have money to pay taxes on.
iOSProgramming,3dwaw1,theBigDaddio,1 point,Mon Jul 20 05:10:52 2015 UTC,"If you do create an LLC or a corporation, be sure to check the rules now for closing it down in the future. And set a calendar event to remind you to check the rules again every year or so (they change).  Things end. You don't want to be stuck with a huge payment due at the other end."
iOSProgramming,3dwaw1,sathoro,1 point,Mon Jul 20 15:55:51 2015 UTC,"I'm not sure how many people will see this comment, but what are the thoughts surrounding a situation in which the apps do not earn a lot of money? The purpose in mind of creating the company is to give them a more reputable source than ""John Doe"". What I believe I am hearing is that it is worth it, but only if you can afford an accountant."
iOSProgramming,3dwaw1,theBigDaddio,-6,Mon Jul 20 17:01:15 2015 UTC,"Sheesh, if you are not making over $500k a year in sales you are basically adding misery to your life for absolutely no reason. You will be checked by the state, Feds, etc. you will have to hire an accountant. As an LLC you will be surprised at how liable you really are. I have no LLC or anything, just a DBA and I make 6 figures a year. What liability is there in apps and software. Don't make yourself more miserable for no reason."
iOSProgramming,3dwaw1,sathoro,5,Mon Jul 20 03:45:54 2015 UTC,You are so so much less likely to be audited if you form a business. It will also help you avoid paying some taxes. If you make 6 figures you probably could have avoided paying at least $10k in taxes last year if you had an S Corp.
iOSProgramming,3dwaw1,Humdeee,-6,Mon Jul 20 04:09:16 2015 UTC,My accountant and lawyer have said otherwise.
iOSProgramming,3dwaw1,sathoro,3,Mon Jul 20 07:57:56 2015 UTC,I'm sorry but they are wrong. It is pretty common knowledge that corporations get audited much less than personal tax returns
iOSProgramming,3dwaw1,theBigDaddio,1 point,Mon Jul 20 09:05:56 2015 UTC,"Why is getting audited seen in such a negative light? Like OP, this is also my first year making some supplemental income from apps and I feel no stress if I were to get audited. It's just a secondary, more in-depth check to see if I'm keeping things honest, is it not? And I am, so what would I have to worry about?"
iOSProgramming,3dwaw1,sathoro,1 point,Mon Jul 20 15:38:27 2015 UTC,The problem is just that it can take up a lot of your time and you have to be really organized. The IRS can audit you back 7 years (I think) so you have to have records to prove all your expenses and everything for that long.
iOSProgramming,3dwaw1,theBigDaddio,-10,Mon Jul 20 19:43:02 2015 UTC,"You are a lawyer? Accountant, or random idiot who thinks they know shit. I didnt say shit about auditing, I have been audited once, 1984. It was nothing, I just had to change how I depreciated a piece of equipment. Like I said talk to a fucking expert, everyone is different. You don't know the ins and outs of my business. But I have been doing this for over 20 fucking years... and you?"
iOSProgramming,3dwaw1,sathoro,1 point,Mon Jul 20 09:35:10 2015 UTC,"It is possible there are some particular cirumstances for your situation that makes setting up a business not worth it. However, for almost any contract developer there are some huge benefits to doing so. For example, I am able to pay myself 60% of my income (so about $80k) as dividends. You don't have to pay payroll taxes on dividends so I save about 15% right there. The rest of my income I pay to myself as wages (about $70k) which I also have to pay the payroll tax on. You on the other hand are paying income and payroll taxes on 100% of your income."
iOSProgramming,3dwaw1,theBigDaddio,-1,Mon Jul 20 19:47:15 2015 UTC,"You all have to be so right don't you... You all have to win no? This is the issue... Unless the guy dies WFH he is not going to make enough for it to matter.   Once again I will reiterate, everyone I'd different. Incorporating comes with costs, accounting for one. If you end up spending more do accounting than youse e on taxes that's not really smart. If your corporation costs you more than it saves you lose. Get over it."
iOSProgramming,3dwaw1,sathoro,2,Mon Jul 20 20:34:17 2015 UTC,The first year I set up my company it cost me $1k total and saved me $12k in taxes so I'm just trying to help. You on the other hand... I'm not sure why you are here
iOSProgramming,3dwaw1,bryanlogan,-1,Mon Jul 20 20:42:51 2015 UTC,"I'm not I'm gone this is a fucked sub, I get nothing from it but bullshit from assholes like you. Overall you are hive mind fools. All your arguments are standard internet fallacies. The re is literally nothing good here except regurgitated shit that was posted somewhere else earlier.  Goodbye fucks."
iOSProgramming,3dwaw1,theBigDaddio,1 point,Mon Jul 20 20:49:45 2015 UTC,"I gave a concrete example and you have done nothing of the sort. You think setting up a business will result in the ""Feds"" auditing you... hilarious, I'm not sure who is the one just posting fallacies. Goodbye."
iOSProgramming,3dwaw1,sathoro,1 point,Mon Jul 20 20:58:32 2015 UTC,"What liabilities?  Well, patent infringement could be a big one."
iOSProgramming,3dzaw0,mjc462,1 point,Mon Jul 20 19:16:50 2015 UTC,No but if you link to a paid sign up page from the app you'll have to use an IAP.
iOSProgramming,3dzaw0,RDSWES,1 point,Mon Jul 20 19:52:08 2015 UTC,So we can link to a pricing page on our site and that would be ok?
iOSProgramming,3dzaw0,askoruli,1 point,Mon Jul 20 20:02:25 2015 UTC,That's fine since it just tells the user they need to sign up. But if there was any link on the pricing page that let them go to the signup page then you'll be rejected.
iOSProgramming,3dzaw0,15458434,1 point,Mon Jul 20 21:40:08 2015 UTC,Adding an IAP would definitely give you more purchases. It's too much a hassle for users if you do it otherwise.
iOSProgramming,3dzaw0,jaja935,1 point,Mon Jul 20 22:22:34 2015 UTC,"Yes I believe so.   Recently there were a flurry of news articles about how Spotify gets users to switch from Apple's subscription model to their own (on their site) by just sending emails (since you can't do anything in app), you could try that out. If you are only concerned about the 30% cut, you could price your subscriptions 30% higher for the app, like Spotify."
iOSProgramming,3dzaw0,matteoman,1 point,Mon Jul 20 20:55:09 2015 UTC,"Yes. Although it might not happen at first submission.  I had this experience with a client that did the same. The only way to subscribe to the service was through the website. The first thing that was presented to the user was the login screen. There was no link outside the app to go to the website and subscribe, because that is forbidden in Apple guidelines.  The app went through the review process without problems. A few months later, when we submitted an update, the app was rejected. Apple wanted us to add In App Purchases to allow people to subscribe from the app. Moreover, the price had to be the same as offered on the website, although the margin for my client was smaller since Apple gets 30% (a normal payment processor usually gets 2%-5%)"
iOSProgramming,3dxjg3,anon0108,2,Mon Jul 20 10:34:36 2015 UTC,"I've used test flight and it's does the job well. Can be a little tedious getting your beta testers setup. You can do small group testing without a review process, but to testing with a larger group (like you have) it does have to be reviewed. The process takes about a day (I've seen it take hours) and uploading new versions with only small changes gets approved even faster. Also, it's part of your membership to apple and requires little setup and no additional fees. Some of the other ones are not free and require some work to get going."
iOSProgramming,3dxjg3,dejus,2,Mon Jul 20 12:07:21 2015 UTC,"For iOS, use Testflight. At this point it covers most cases and the fact you don't have to worry about device ids makes it worth it.    For Android, Fabric.io (which has Crashlytics and ""Beta"" as part of their product lineup) is pretty convenient."
iOSProgramming,3dxjg3,jimejim,1 point,Mon Jul 20 19:17:35 2015 UTC,"Testflight, Hockeyapp, Crashlytics"
iOSProgramming,3dxjg3,askoruli,1 point,Mon Jul 20 10:58:50 2015 UTC,"Crashlytics?  i thought that was kind of an app monitoring service that alerted you to well, app crashes."
iOSProgramming,3dxjg3,askoruli,1 point,Mon Jul 20 11:01:53 2015 UTC,It does that as well
iOSProgramming,3dxjg3,ratbastid,2,Mon Jul 20 11:06:18 2015 UTC,"It's just been rebranded ""Fabric"", at http://fabric.io.  I'm using it on my current project, and I gotta say, it's slick. It integrates with Xcode, so it knows when you archive a build, and makes it 1-click easy to distribute a build to testers.  Frankly, the (very good) crash reporting is a side reason for me to use them right now."
iOSProgramming,3dxshz,WheretheArcticis,7,Mon Jul 20 12:23:49 2015 UTC,Give them instructions on how to go through the refund process.
iOSProgramming,3dxshz,Nortiest,1 point,Mon Jul 20 15:01:12 2015 UTC,"Apple handles all billing and refunds, so make sure the instructions point the customer to Apple's way of doing this. Off the top of my head, through their account online, or tapping the 'Report a problem' link in their email receipt."
iOSProgramming,3dxshz,rglassey,7,Tue Jul 21 11:10:25 2015 UTC,"You as the developer do not deal with customers with regards to refunds, Apple does."
iOSProgramming,3dxshz,BassPlayaYo,3,Mon Jul 20 17:08:25 2015 UTC,Was it a valid sale? Did the customer intentionally make a purchase? Treat all customers fairly and honestly and you should always be in the right.
iOSProgramming,3dxshz,ibtokin,1 point,Mon Jul 20 13:22:27 2015 UTC,I have not tried to have a costumer ask for a refund. I was just wondering. But I agree with you.
iOSProgramming,3dwze3,darkwan,1 point,Mon Jul 20 05:52:20 2015 UTC,"Access tokens can be saved in defaults. Core Data is safe to store user information in. I'm not to sure what you mean about the recheck someone else may need to answer that. I do suggest that you require to pass the token in with the request for more sensitive information.   CAPTCHA's are really not necessary. You could however limit the number of requests in an hour per access token on the backend or you can make it so it uses cached information for a set amount of time if there are no significant changes.  For example, I have a tide app that gives a 24 hour tide forecast. It connects to a weather API and which gives me 5 days worth of data. I cache all of that data and don't request more unless the user changes the tide location or I have gone through all my cached data points. This greatly limits the amount of calls I make every time the user refreshes the content."
iOSProgramming,3dwze3,attempt_number_two,1 point,Mon Jul 20 06:56:19 2015 UTC,"Thank you for the reply!  I appreciate the info on Core Data being safe.  As for CAPTCHAs, I'm mainly concerned about sign-up (which they won't have an access token at that time).  I'm imagining a scenario where someone sniffs the HTTP endpoint used for signing up on mobile, and then can write a bot to create some stupid amount of users by requesting that url.  Is there a general defense against this?"
iOSProgramming,3dwze3,attempt_number_two,1 point,Mon Jul 20 12:27:53 2015 UTC,I don't see how someone would be able to sniff out the end point if you make is something exclusively for the app.  I'm not aware of anyways that a user could get access to the specific request URL.
iOSProgramming,3dwze3,attempt_number_two,1 point,Mon Jul 20 22:12:40 2015 UTC,"Assuming the connection isn't HTTPS, it's trivial to connect to WIFI and then get that data from your router, or in a more round-about way, ARP poison your phone and have its requests sent to your own server and sniff the traffic there."
iOSProgramming,3dwze3,15458434,1 point,Mon Jul 20 22:59:13 2015 UTC,Okay very well then.  If I where you I would look at how apps like Instagram do it.
iOSProgramming,3dtvu7,FreshDisbackbiatch,3,Sun Jul 19 12:29:02 2015 UTC,What is social proof?
iOSProgramming,3dtvu7,DelightfulTrophyKing,2,Sun Jul 19 21:52:07 2015 UTC,"This stumped me too. Seems they are referring to quotations from media or others:  e.g. my old app had:  ""I can't believe how clear the screen is!"" -Mom  And it 'passed'"
iOSProgramming,3dtvu7,godarni,1 point,Mon Jul 20 09:00:55 2015 UTC,"I'd take the results with a grain of salt. For my app Picks, they said things like ""does not support iOS 8"", and ""does not support larger screen sizes"", which are both categorically incorrect. There are even iPhone 6/6+ screenshots are listed on the iTunes page and through the iTunes API."
iOSProgramming,3dtvu7,runtimeintrospection,2,Sun Jul 19 22:44:54 2015 UTC,"Snapchat got a C+ rating, i wouldn't look to far into it."
iOSProgramming,3dtxwm,darkwan,19,Sun Jul 19 12:58:11 2015 UTC,I'm pretty sure they use UICollectionView. It's a lot more customizable than UITableView.
iOSProgramming,3dtxwm,lyinsteve,4,Sun Jul 19 13:07:01 2015 UTC,The first Instagram dropped before collection views were a thing.
iOSProgramming,3dtxwm,neksus,5,Sun Jul 19 15:29:31 2015 UTC,I'm sure they've re-implemented their image tab since then though.
iOSProgramming,3dtxwm,lyinsteve,4,Sun Jul 19 15:43:13 2015 UTC,I don't think Instagram app does. They make the username headers sticky when you scroll through photos. That's something that would be super easy to do in a UITableView but complicated in a UICollectionView. I'm pretty sure they are using UITableViews in the Instagram app.
iOSProgramming,3dtxwm,drewying,9,Sun Jul 19 16:22:58 2015 UTC,I just inspected their app with FLEX and it is indeed a UICollectionView. My money was on UITableView too
iOSProgramming,3dtxwm,ThePantsThief,2,Sun Jul 19 18:05:11 2015 UTC,"Hard evidence, just what I was looking for.  Thanks!"
iOSProgramming,3dtxwm,ThePantsThief,2,Sun Jul 19 22:19:12 2015 UTC,"Whoa, thank you!"
iOSProgramming,3dtxwm,klopjobacid,1 point,Sun Jul 19 22:22:15 2015 UTC,How did you launch FLEX in their app?
iOSProgramming,3dtxwm,ThePantsThief,3,Sun Jul 19 22:33:35 2015 UTC,Jailbroken
iOSProgramming,3dtxwm,klopjobacid,1 point,Sun Jul 19 22:35:07 2015 UTC,"Ah right, I'm going to guess you weren't talking about this FLEX then? Have you found the tools offered through jailbreaking have helped you as a developer?"
iOSProgramming,3dtxwm,ThePantsThief,2,Sun Jul 19 22:45:49 2015 UTC,"That's the one. There's a tweak called FLEXible that lets you load it into any app, including Springboard.  It's great for examining other people's apps to see how they do things. I learned a lot about making custom views that way, takes you away from the magic.  Crashreporter is nice for when your own app crashes"
iOSProgramming,3dtxwm,klopjobacid,1 point,Sun Jul 19 22:49:23 2015 UTC,"Awesome, thanks so much, I'll have to look into jailbreaking some day."
iOSProgramming,3dtxwm,ThePantsThief,1 point,Sun Jul 19 22:56:18 2015 UTC,Why not today? ;)
iOSProgramming,3dtxwm,klopjobacid,1 point,Sun Jul 19 22:56:52 2015 UTC,"Worried about fucking something up, warranties etc."
iOSProgramming,3dtxwm,ThePantsThief,1 point,Sun Jul 19 23:07:53 2015 UTC,"What makes you say that? I've never really used a collection view, so as far as I'm aware the only advantage is being able to change the sizes of the cell's views without affecting the scroll view"
iOSProgramming,3dtxwm,dcramps,1 point,Sun Jul 19 18:01:14 2015 UTC,https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionViewLayout_class/index.html
iOSProgramming,3dtxwm,ThePantsThief,2,Sun Jul 19 18:47:23 2015 UTC,"I've read it's documentation, I just don't see why it would be advantageous to use one over a table view...  Edit: I mean, apparently it is, I just wish I knew why haha. I imagine being able to do everything Instagram has done with their collection view in a table view."
iOSProgramming,3dtxwm,lyinsteve,1 point,Sun Jul 19 22:25:14 2015 UTC,"A large reason is being able to make layouts that don't follow a row structure. Like a phot collection grid, that's super easy to do with UICollectionView, and unnecessarily complicated with UITableView."
iOSProgramming,3dtxwm,ThePantsThief,1 point,Sun Jul 19 23:52:39 2015 UTC,I'm referring specifically to Instagrams layout; I know collection views are good for grids or horizontal scrolling lists
iOSProgramming,3dtxwm,_chili,1 point,Sun Jul 19 23:56:56 2015 UTC,Thanks!
iOSProgramming,3dtxwm,sveinhal,1 point,Sun Jul 19 22:21:35 2015 UTC,"I'm pretty sure the main feed in instagram is a tableview with each post being a section in the tableview. That's how they have the top bar with your avatar, username, and time posted stick to the top while you're scrolling. The app has become pretty complex and they're certainly using a collectionview in other areas of the app."
iOSProgramming,3dtxwm,15458434,-2,Tue Jul 21 04:23:04 2015 UTC,"""Just"" makes it seem so simple, but yes. Their main user interface is a UITableView."
iOSProgramming,3dtxwm,cyanide,-17,Sun Jul 19 13:08:57 2015 UTC,"If they are fully native, probably yes. Otherwise not sure could be some web technology or maybe not. But by the way the interface works, I'm not sure if it's native or not."
iOSProgramming,3dtxwm,ThePantsThief,14,Sun Jul 19 13:30:05 2015 UTC,So many words to say nothing.
iOSProgramming,3dvylj,mumzzie,2,Mon Jul 20 00:00:45 2015 UTC,"For complicated layouts, maybe you could try smileyborg's PureLayout(https://github.com/smileyborg/PureLayout). it's simple to use, and if you set it up correctly you're sure it works on both iOS7 and iOS8"
iOSProgramming,3dvylj,acicartagena,1 point,Tue Jul 21 03:39:30 2015 UTC,"Thanks! Right now, I'm kinda confused as to whether I should use XIB or just use storyboard and whether I should code up the constraints. I'm starting over and I want to do things right this time."
iOSProgramming,3dvylj,Snwspeckle,1 point,Tue Jul 21 03:48:52 2015 UTC,"+1 to this! Awesome you noticed this, I was involved indirectly with this project and it's pretty awesome."
iOSProgramming,3dvylj,dcramps,1 point,Tue Jul 21 12:04:12 2015 UTC,"When i set everything to suggested constraints, all the subviews are messed up. Additionally, I think the specific keyboard problem is this (from the log): ""Can't find keyplane that supports type 4 for keyboard iPhone-PortraitChoco-NumberPad"", although i'm not completely sure."
iOSProgramming,3dvylj,lostrolls666,1 point,Mon Jul 20 00:02:23 2015 UTC,When i set everything to suggested constraints   You will almost never get what you expect from this. I would avoid it completely.  That keyplane log shows up in the simulator all the time.
iOSProgramming,3dvylj,dar512,1 point,Mon Jul 20 23:44:40 2015 UTC,"you should definitely be setting your own constraints. if you can't do it there, you may need to sub-class UIView in order to allow your view to behave the way you want it to without putting view logic in your controllers."
iOSProgramming,3dvylj,quellish,1 point,Wed Jul 22 06:26:21 2015 UTC,I agree with the comments that you will learn auto layout much better if you do some in code. But I've been doing layout in IB for some time now and haven't found anything I couldn't do in it.
iOSProgramming,3dvylj,armadale,1 point,Mon Jul 20 03:05:52 2015 UTC,"Can you help me with this weird bug? I'm almost certain that my constraints and code is right, yet somehow it just doesn't work."
iOSProgramming,3dvylj,armadale,1 point,Mon Jul 20 03:26:10 2015 UTC,Do you have a 3rd party keyboard on your device?
iOSProgramming,3dvylj,SeNeO,2,Mon Jul 20 04:57:43 2015 UTC,"If you want to adjust frames/positions of views in autolayout, you should adjust the relevant NSLayoutConstraint constants, not try and animate the frames."
iOSProgramming,3dvylj,RabbiSchlem,1 point,Mon Jul 20 05:25:19 2015 UTC,Oh really? I feel like I've seen tutorials that just animated uiviews without modifying their constraints. Is there any example/tutorial on modifying the constraints to move/change a UiView?
iOSProgramming,3dvylj,patbdev,2,Mon Jul 20 05:30:05 2015 UTC,Here's a very simple rundown:  https://codehappily.wordpress.com/2013/09/24/ios-animating-autolayout-constraints/  ..and a quick proj I threw together showing the above animating a view offset:  https://dl.dropboxusercontent.com/u/59865/login.zip
iOSProgramming,3dvylj,criosist,1 point,Mon Jul 20 06:01:37 2015 UTC,"Thanks a lot!! One more question: can I set constraints in storyboard and change them programmatically? I asked because it seems to me this maneuver could be error prone , i.e. If I change the constraints in storyboard I would also change the code and vice versa."
iOSProgramming,3dvcsh,jsherman10,1 point,Sun Jul 19 20:54:51 2015 UTC,"You need to change the priority of the width. Select the image and go to the inspector menu that contains a list of the constraints. Select the width constraint from the list and edit it so it's priority is lower, e.g. 750"
iOSProgramming,3dvcsh,HairySideOfTheMoon,1 point,Sun Jul 19 22:13:02 2015 UTC,Drop the width constraint. Add a trailing constraint to the horizontal center. The way the width will be stretched. Don't forget to set the UIImage to UIViewContentMode.ScaleToFill
iOSProgramming,3drsaf,dreaminginbinary,3,Sat Jul 18 20:56:25 2015 UTC,So I am a big fan of the concept of syntactic sugar. I've personally identified three areas where Swift 2 really promotes this:   defer guard the error handling model   I plan to write on all three. Do you guys think there are any other aspects of the language that should be included on that list? What part of Swift do you use that really sweetens up your code?
iOSProgramming,3drsaf,k337,1 point,Sat Jul 18 20:57:54 2015 UTC,"I'd never heard of defer, it seems an interesting tool."
iOSProgramming,3drsaf,amlynch,1 point,Sun Jul 19 07:18:40 2015 UTC,I think guard is a little more than a syntactic sugar since it requires exiting the function in the else clause.
iOSProgramming,3dtjgc,dcpc10,3,Sun Jul 19 08:52:43 2015 UTC,What type of animation? Button animation? Loading screen animation? View Controller transition animation? Game animation?
iOSProgramming,3dtjgc,Starchand,2,Sun Jul 19 09:34:11 2015 UTC,"Anything/everything. I am not looking for programmatic animations however, i am looking for animators who create their animations in proprietary formats like .swf or separately a png sequence.  Example animations : https://github.com/ResearchKit/ResearchKit/tree/master/ResearchKit/Animations/phone%402x  I am looking for individuals who can create animations like those above."
iOSProgramming,3dtjgc,DelightfulTrophyKing,6,Sun Jul 19 09:56:45 2015 UTC,"Animation is very broad - but for iOS it almost certainly won't be .swf.  Most commonly it'll be done in core animation, some would use tools like PaintCode or http://www.quartzcodeapp.com/.  Twitter's Favorite animation takes a single png file: https://twitter.com/devindoty/status/552295604505030658  In addition a tutorial was also posted recently on Ray Wenderlich which might intrest you: http://www.raywenderlich.com/102590/how-to-create-a-complex-loading-animation-in-swift"
iOSProgramming,3dtjgc,Starchand,1 point,Sun Jul 19 10:03:42 2015 UTC,@devindoty   2015-01-06 02:48 UTC  twitters new fav animation is a static image   [Attached pic] [Imgur rehost]     This message was created by a bot  [Contact creator][Source code]
iOSProgramming,3dtjgc,TweetsInCommentsBot,1 point,Sun Jul 19 10:03:49 2015 UTC,"I know some apps like Robinhood use .mov files for their animations, specifically for their FTU case. Where I worked, we would use a combination of CoreAnimation and .mov's depending on the use case."
iOSProgramming,3dtjgc,Snwspeckle,1 point,Tue Jul 21 12:06:12 2015 UTC,www.github.com
iOSProgramming,3dtjgc,Tamarisk22,0,Sun Jul 19 09:00:24 2015 UTC,I have a good understanding of the core animation framework. I always build it myself. And yes sometime it requires redesign of the entire view hierarchy at that moment.
iOSProgramming,3drpa3,nsomar,2,Sat Jul 18 20:29:01 2015 UTC,That was a good refresher thanks!
iOSProgramming,3drb26,Sqwertyu,1 point,Sat Jul 18 18:26:29 2015 UTC,I find it best to always write to characteristics with a response. Try changing the last parameter and check to see if the didWriteValueForCharacteristic delegate function gets called without an error being thrown.
iOSProgramming,3drb26,venom2053,1 point,Sat Jul 18 21:27:09 2015 UTC,Please post how you did it!
iOSProgramming,3drb26,patbdev,1 point,Sun Jul 19 23:51:43 2015 UTC,"Thanks for reminding me!  Okay so I have this code in the central side and I have it in a random method so it just sends the data to the peripheral the same time the central recieves data from the peripheral:  //writing to periph     NSString* str = @""Test"";     NSData* data = [str dataUsingEncoding:NSUTF8StringEncoding];     [self tLog:[NSString stringWithFormat:@""Writing to periph: %@"", @""test""]];     [peripheral writeValue:data forCharacteristic:characteristic    type:CBCharacteristicWriteWithoutResponse];   On the peripheral side I have a method that listens out for any write requests and then converts the request into a string with the value and then outputs out to a textbox:  - (void)peripheralManager:(CBPeripheralManager *)peripheral   didReceiveWriteRequests:(NSArray *)requests {     NSMutableString *output = [[NSMutableString alloc] init];     for (CBATTRequest *request in requests) {     NSString *stringValue = [[NSString alloc] initWithData:[request value]     encoding:NSUTF8StringEncoding];      if (stringValue) {         [output appendString:stringValue];         }     }      _label.text = output.copy;  }   I might be able to post the full source later but I would have to remove a bunch of stuff that gives away my identitiy. If I have time I might do it though. Since apples documentation is pretty poor for corebluetooth right now."
iOSProgramming,3dsa17,titleist2015,3,Sat Jul 18 23:40:41 2015 UTC,If {     .... Do something     self.navigationItem.leftBarButtonItem.enabled = NO; } Else {     .... Do something     self.navigationItem.leftBarButtonItem.enabled = YES; }
iOSProgramming,3dsa17,succeededcoma,3,Sun Jul 19 03:09:12 2015 UTC,Hiding it might be better if you want the user to move forward.
iOSProgramming,3dsa17,tangoshukudai,2,Sun Jul 19 14:26:16 2015 UTC,set hidesBackButton on UINavigationItem
iOSProgramming,3dsa17,shitidiotturtle,1 point,Sun Jul 19 10:55:22 2015 UTC,I used /u/shitidiotturtle's suggestion and it works perfect. Thanks for the help guys
iOSProgramming,3dqei1,changingminds,11,Sat Jul 18 13:04:13 2015 UTC,"No, they don't ban developers. I've never heard of such a case, except when a developer was actively and persistently trying to break the rules or take advantage of users."
iOSProgramming,3dqei1,cegiela,9,Sat Jul 18 14:28:23 2015 UTC,"Generally no, they don't ban without reason. Break a rule in their terms of service and your app will get removed (but you generally have the option to rectify it).  SOMETIMES an app will be removed by an over zealous admin. Generally after a week or two things get sorted, but in these rare cases there is a lack of communication via apples side for quite some time."
iOSProgramming,3dqei1,zenox,4,Sat Jul 18 13:48:26 2015 UTC,Apple doesn't have to ban developers because their acceptance criteria for the App Store is pretty high. They thoroughly review all apps submitted to the App Store so they don't end up doing dumb shit like Google does with the Play Store.
iOSProgramming,3dqei1,xtreemballr,1 point,Sat Jul 18 16:44:44 2015 UTC,Google Play store reviews are manual since this year. http://recode.net/2015/03/17/google-is-adding-manual-review-to-android-app-submission-process/
iOSProgramming,3dqei1,Power781,1 point,Sun Jul 19 18:48:55 2015 UTC,"The only instance I heard of a developer getting banned was one guy who got a proof of concept malware app onto the store. Once he blogged about it, the app was removed (and may have been remote deleted by apple but not sure of this) and his ADC membership was terminated.  Found the story"
iOSProgramming,3dqei1,Lost_the_weight,1 point,Sun Jul 19 13:10:44 2015 UTC,Nope and when you break a rule as get rejected you can talk to a danm human and get clarification on correcting the issue  In terms of dev friendly I'd say  Windows phone then Apple then and by a large gap google play(total garbage with communication)
iOSProgramming,3dqei1,bakutogames,-1,Sat Jul 18 17:07:54 2015 UTC,"I have been banned, because Apple can be pricks. Then there is nothing you can do about it."
iOSProgramming,3dqei1,megablast,4,Sun Jul 19 07:24:35 2015 UTC,What happend?
iOSProgramming,3dqei1,15458434,1 point,Sun Jul 19 08:56:48 2015 UTC,"I've never heard of anyone being ""banned"". Do you just mean you got your app pulled?"
iOSProgramming,3dqei1,ThePantsThief,1 point,Sun Jul 19 18:11:16 2015 UTC,Nope. Kicked off the app store. Not allowed to upload apps for 12 months.
iOSProgramming,3dqei1,megablast,1 point,Sun Jul 19 21:46:01 2015 UTC,So what happened…
iOSProgramming,3dr1js,LaserWolfTurbo72,7,Sat Jul 18 17:03:23 2015 UTC,https://developer.apple.com/app-store/marketing/guidelines/
iOSProgramming,3dr1js,attempt_number_two,1 point,Sat Jul 18 19:28:53 2015 UTC,Thanks!
iOSProgramming,3dr1js,dreaminginbinary,1 point,Sat Jul 18 19:57:19 2015 UTC,"I use Promotee for stuff like that. For someone those such as myself who less photoshop inclined and get lost with smart objects, it's served me well"
iOSProgramming,3dr1js,iliketopgun,1 point,Sat Jul 18 21:57:48 2015 UTC,Check out https://launchkit.io/
iOSProgramming,3ds20n,ThePantsThief,6,Sat Jul 18 22:24:33 2015 UTC,GPUImage has a pixelate filter.
iOSProgramming,3ds20n,askoruli,2,Sun Jul 19 01:40:32 2015 UTC,"Here   https://developer.apple.com/library/prerelease/ios/documentation/GraphicsImaging/Reference/CoreImageFilterReference/index.html#//apple_ref/doc/filter/ci/CIPixellate  there are more than 150 filters, so you will find what you need for sure.  go down to  ""CIPixellate"" filter, thats the filter you want to apply to the image"
iOSProgramming,3ds20n,bpozega,1 point,Sun Jul 19 11:19:09 2015 UTC,what do you mean? You mean making an image of the view or taking the image in the view and manipulating it?
iOSProgramming,3ds20n,theBigDaddio,1 point,Sat Jul 18 23:25:56 2015 UTC,"Well, you can blur an image view by adding a UIVisualEffectsView as a subview, so something like that I guess. Something that won't change it's .image property directly. I've come up with some solutions on my own but they don't play nice with cell reuse :/"
iOSProgramming,3ds20n,brendan09,2,Sat Jul 18 23:32:07 2015 UTC,"Why not change the .image property and keep the 'real' image stored somewhere else? If you're wanting to display a pixellated image, that would be what the image view is for."
iOSProgramming,3ds20n,criosist,1 point,Sun Jul 19 05:32:45 2015 UTC,"Like I said, I tried that but it didn't play nice with cell reuse :/ I'll probably try again harder, but I'm not fond of the extra memory pressure, my app already uses a lot"
iOSProgramming,3ds20n,brendan09,1 point,Sun Jul 19 06:45:25 2015 UTC,"if its a cell i expect its small, make sure your resizing then filtering the image to the size it needs to be rather than the original size this should free up some stuff to start with, then you can use core image and CIFilter to make a pixelated version of the image"
iOSProgramming,3dr26p,angryPanado,3,Sat Jul 18 17:08:44 2015 UTC,"Very cool!  If you are looking for something more ""automagical"" check out JKVValue. Instead of subclassing NSObject you subclass JKVValue and get the following for free:   -isEqual: -hash -description debugDescription initWithCoder: encodeWithCoder:"
iOSProgramming,3dr26p,jam510,2,Sun Jul 19 03:18:26 2015 UTC,"That's awesome! I didn't even think about going that route. Thanks for the link, going to play with it a bit now!  EDIT: Just realized you wrote the UI Testing in Xcode 7 post. That was a great read, thanks for that!"
iOSProgramming,3dr26p,jam510,1 point,Sun Jul 19 10:25:24 2015 UTC,Thanks! I'm glad the testing community in iOS is really starting to pick up. It's awesome to hear people start talking about it.
iOSProgramming,3dr1xq,Dark_Angelas,1 point,Sat Jul 18 17:06:22 2015 UTC,"A navigation item belongs to a view controller. A navigation bar is a view, most often used by UINavigationController.  UINavigationController reads the state of a view controller's UINavigationItem in order to display different items in the UINavigationBar depending on what view controller is currently showing.  I don't use the navigation items in Storyboards, as accessing them directly in code is typically much faster to write and more intuitive."
iOSProgramming,3dr1xq,brendan09,1 point,Sat Jul 18 17:46:09 2015 UTC,"Whenever you're adding a new view to a UINavigationController hierarchy, there's a pretty solid chance that Xcode won't add an IB-interactive navigation bar to that new view. You can see the navigation bar exists as its implementation is generally set to ""Inferred"" by default, but you can't change the title or modify the buttons, among other customization options.   Adding a navigation item to a view gives you that added IB interactivity (when necessary) to modify your navigation bar."
iOSProgramming,3drjle,jam510,1 point,Sat Jul 18 19:39:20 2015 UTC,I use Kiwi
iOSProgramming,3drjle,chazmuzz,1 point,Sat Jul 18 21:50:32 2015 UTC,I use the tools available in Xcode.
iOSProgramming,3drjle,15458434,1 point,Sun Jul 19 15:35:52 2015 UTC,Yep. Daily. Work at Pivotal Labs.
iOSProgramming,3drjle,dcramps,1 point,Sun Jul 19 19:13:20 2015 UTC,Awesome! I was at Pivotal for two years and recently left for a start up. Any interest in proofing something before I publish it tomorrow? PM me and I can send you the URL.
iOSProgramming,3ds5hn,succeededcoma,6,Sat Jul 18 22:57:09 2015 UTC,I'll answer in four words:    Learn to love both.
iOSProgramming,3ds5hn,dreaminginbinary,2,Sun Jul 19 01:10:41 2015 UTC,"If you want a job doing iOS development, stick with Objective-C as your main language. Be learning Swift on the side and be competent in it.  Swift isn't ready for large scale software projects. Yet. But, the day will come when its time to move over 100% and you don't want to be caught with your pants down. Prepare, but hold off on making it your main focus."
iOSProgramming,3ds5hn,brendan09,1 point,Sun Jul 19 05:40:52 2015 UTC,"I'll emphasize large scale, because there are tons of (okay, sigh.  ""100%"") apps in Swift in the store.  Large scale is not your to do list."
iOSProgramming,3ds5hn,shiggie,2,Sun Jul 19 20:22:02 2015 UTC,"Large scale being ""large in scope"" apps, not popular or number of them written in Swift.  No one is writing massive apps or software in Swift. Toy apps and indie apps are the only ones jumping on the Swift-only bandwagon. No one working on large apps is going to make the jump to Swift any time soon. It would be a nightmare to maintain between syntax revisions and there are way too many holes in the language at the moment."
iOSProgramming,3ds5hn,brendan09,1 point,Sun Jul 19 20:37:46 2015 UTC,"It's not essential to move to Swift as yet.   But it would be prudent to keep your eye on Swift here and there, because there will come a time in the coming months/year/two years where you're going to have to switch."
iOSProgramming,3dnbs7,jakemarsh,3,Fri Jul 17 17:46:26 2015 UTC,"Should use an image of HairForceOne instead for an example.  Edit: Never mind, it is impossible to resize HairForceOne."
iOSProgramming,3dnbs7,WantToStopRedditting,2,Fri Jul 17 21:46:19 2015 UTC,this is my favorite comment on these bites so far haha
iOSProgramming,3dnbs7,MacroMeez,1 point,Fri Jul 17 23:14:34 2015 UTC,why are these images?
iOSProgramming,3dnbs7,dave84,1 point,Fri Jul 17 20:42:25 2015 UTC,"Not sure, but here's a link to the text version:  http://littlebitesofcocoa.tumblr.com/post/124335542996/40-toucan"
iOSProgramming,3dok7k,ja19,13,Fri Jul 17 23:34:24 2015 UTC,"Time. Give yourself time.   I'm a very experienced programmer/designer/architect and I've been programming with iOS for 3 years now full time and I still learn on a daily basis. iOS is deep and wide and keeps expanding. This is amazingly great; you won't saturate it anytime soon.   See yourself as an explorer - the travel is more important than the destination. Set yourself a specific goal (I don't know, create a shared todo app from scratch) and keep working at it. You will restart many times, but you will converge and learn a lot in the process.  And most of all, have fun! :-)"
iOSProgramming,3dok7k,Mazzaroth,8,Sat Jul 18 00:24:22 2015 UTC,The way I found to work best was to make a small project then add small features as you go.
iOSProgramming,3dok7k,hagrids_a_pineapple,1 point,Sat Jul 18 00:16:31 2015 UTC,"This, just focus on some areas that you like or on a particular project. Don't try to learn everything. Learning as you go is the best."
iOSProgramming,3dok7k,vale93kotor,5,Sun Jul 19 21:22:36 2015 UTC,"Alright, I'm going to add a second comment here as I was on mobile for my first and left it a bit incomplete.  This isn't isolated to iOSProgramming. It's more of a question about motivation, accomplishing goals, etc.  Do 2 things.  1) Define a VERY clear end goal. For this, you should come up with a SPECIFIC app you want to make. Something you're incredibly passionate about and would love to make. Think about it for a day? Do you have the idea? How excited are you on a scale of 1-10? If you aren't a 15, take additional time and come up with another idea until you are. You'll come up with something.   Then, mock it up. Download some 'wire-framing' software, or even grab a pencil or some colored pencils and paper, and start drawing all the screens. Think about the user experience, and the goals you are trying to achieve with the app. Draw all the screens out. Now you've got got a clear goal. Not only that, it's becomes TANGIBLE. [If you read, I believe Think and Grow Rich but my memory could be wrong here, it's a book about an man who met with the richest people in the world back in the 30's. Steel magnates like Andrew Carnegie. The Bill Gates of yesteryear. He interviewed them all for a major portion of their lives. And factored their success into one common theme. That theme, is that all these men took intangible thoughts and made them into something tangible. By writing them down. Think about it for a second. When you have a dream, or thought, or a wish. Does it really exist? Is it tangible? Physical? It's just a thought. Thoughts are fleeting. Eventually you can forget it, and it ceases to exist. But when you write it down on paper, you've gone through no less than a minor miracle. You've created something. You've taken a thought and made it into a tangible, real thing that exists.]  Now, if you've mocked your app up on paper, which I think is a GREAT first step... you should hang this on your wall. Hang all over them on the wall above your computer. Or the most prominent wall in your house. Take everything else down that is a distraction. Make this the sole focal point of the room you spend the most time in.  You now have a tangible idea, and one that is the sole focal point of the place you spend the most time. You don't really need to push yourself all the time to achieve your goal in a way, because this motivational wall will be pulling you towards your goal.   2) All this doesn't mean you shouldn't push yourself. You need to. If you've got something both pulling and pushing yourselves towards your goals, it'll be that much quicker before you arrive.   For this, I suggest also something tangible. Don't just say ""I'll work on it when I get a chance."" That's not well defined nor clear. ""I'll work on it 3 hours everyday"" is more clear... but the problem is... you haven't made it tangible yet. It's just a thought. Write it down!! Here's how you do it.  You go to Wal-Mart and pick up the biggest calendar they have in the stationary section. It's a blank desk calendar with no months or dates. It's left for you to fill in. You buy this, and hang it on the same wall. Right in the middle of the wall, with all your app mockups surrounding it. Next to it, you put a giant red sharpie. In words above the calendar you write ""I will do 3+ hours of programming everyday"". Now it's tangible. For every day you do at least 3 hours of programming... you put a giant Red X over that date. If you do 2.5 hours Monday, and 3.5 hours Tuesday, you do not get a red X over Monday and Tuesday. Just Tuesday. Complete the goal as stated and get an X, or don't. Your entire life will start to revolve around the red X. That small little red X will become the biggest motivator in your life. It's quite strange really... how incredibly powerful it is. It works.  You're set up for success in a massive way now. You've got something PULLING you towards your goal, PUSHING you towards your goal, and both are TANGIBLE.   Every month you'll be astounded at the things you were so baffled and overwhelmed by on the 1st of the month and the things you've learned on the 30th."
iOSProgramming,3dok7k,LaserWolfTurbo72,3,Sat Jul 18 20:59:43 2015 UTC,"I think I can help here.   I followed a similar path. I bought a MacBook back in 08 with the intent of learning. It gathered dust for years. I did some Stanford classes or Ray wenderlich tutorials and it didn't hold my interest.   Dusted it off years later like in '12, and same thing happened after a few weeks.   Same thing again in '13/'14.   Finally in '14 I decided a different approach. Random tutorials and Stanford classes weren't going to cut it. I needed an idea I was passionate about.   I came up with an idea that I was really really passionate about. Not to make money. Not for others. But for me. The first thing I did was wireframe it. A decent chunk of the app. So now the app was tangible. It existed in at least a very basic state. This got me very excited. It was real. Tangible. I had an end goal in site, rather than no goal at all wandering aimlessly through random tutorials.   You need an end goal clarified. I had this specific. Since then I didn't quit, and I built an app with various things that would have seemed very overwhelming to me back then. Networking, backend Json API, networking, push notifications, in app purchases, and tons more. One step at a time to complete whatever the next little thing was that my app needed to become reality.   So I would suggest to you think of something you're really passionate about. That you really want to create. Then you don't need to worry about pushing yourself forward, because once you have that in your sights, it will always pull you forward."
iOSProgramming,3dok7k,LaserWolfTurbo72,2,Sat Jul 18 05:23:10 2015 UTC,So the advice I can give listen to yourself figure out what keeps you motivated and what is a motivation turn off. For example What works for me is building small things. I need success to keep going and the more small apps I create the more complex those small apps are becoming until the point where I easily build a pretty complex app like I'm doing now.
iOSProgramming,3dok7k,15458434,2,Sat Jul 18 00:28:59 2015 UTC,Think of an app to make that you really want to make. The passion is the best way through all the shit.
iOSProgramming,3dok7k,GabrielMSharp,1 point,Sat Jul 18 09:20:25 2015 UTC,"I can't emphasis enough how important this was for me! Granted I started on Android, but I honestly feel the key was that I found something I'm passionate about (a video game I play) and made an app for it. I also agree with the time sentiment. It took me well over 6 months to get to release and I took several little breaks."
iOSProgramming,3dok7k,aweFalafelApps,1 point,Sat Jul 18 13:23:15 2015 UTC,This is good advice!
iOSProgramming,3dok7k,jmenter,2,Sat Jul 18 13:36:42 2015 UTC,"Quitting anything after just a few days, and the knowledge that you're 17, I'm going to take a shot here, and it'll be much broader than I'm sure you'd prefer.  Anything worth doing takes time. While swift is easier than a lot of languages, it's still pretty powerful and is drawing on Apple's experience of decades and the field of computer science in general. You're jumping into a fascinating world, you're only scratching the surface. It's a rabbit hole, enjoy the ride but don't get attached to a destination (""I learned to program in a few weeks now I'm done. Next!"").  You basically need to learn the skill of learning and enjoying the process. Forget ever being able to check ""I do swift programming"" off the list, you'll quickly see how deep it is and realize you get out what you put in. Important -> don't beat yourself up for not having achieved ""x"" or ""y"".  What gives me the right to say this? I'm in my mid 40s, been playing drums for 30+ years and still take lessons of cool teachers, got a GPA 4.0 in Computer Science (Java was the language of choice back then), dropped out of programming 15 years ago, getting back into the last couple months with (drum toll) SWIFT! Yes, couple months you read that correctly :) Little has changed except the names and I'm taking my time and finding out the new names for the old stuff and it's all clicking.  This is an awesome book to get a grasp of what people do to get really good at stuff, clue: it's a lifestyle - I enjoyed it lots and highly recommend it:  http://www.amazon.com/Mastery-Robert-Greene/dp/014312417X  If that doesn't excite you and all seems overwhelming, great! You're not excited about it and you've literally just saved yourself a bunch of time. I've lost count of all the ""cool shit"" I wanted to do but when I really thought about having to decide doing less of what I know I love (music) to do something else, then that's useful information as it tells me I'm just not that into it.  Hope (sincerely) this helps. Wish someone had shared this stuff with me when I was younger.  Good luck!  edit: forgot stuff! ps - the ""try this course"" and ""google that stuff and check out tutorials"" etc. is all great advice, what I'm trying to help with is if you still find yourself quitting after a few days... well, read above. p.p.s. after reading lots of swift articles that got me to an app fairly quickly, I noticed the vast majority don't explain why you're doing what you're doing, so you're not learning much, except how to copy, valid but not real understanding. this site has the best tutorials I've so far) found as it explains everything you're doing so you can apply it to your own projects in future:  http://www.raywenderlich.com/category/swift"
iOSProgramming,3dok7k,halfaton,2,Mon Jul 20 03:44:21 2015 UTC,"https://www.hackingwithswift.com  Awesome tutorials, short and sweet."
iOSProgramming,3dok7k,flashpoint9,1 point,Sat Jul 18 14:34:06 2015 UTC,Give this a shot: https://www.codeschool.com/courses/try-ios
iOSProgramming,3dok7k,StunnerAlpha,1 point,Sat Jul 18 00:18:15 2015 UTC,You're issue might be bad project management. How do you plan out you're projects? Are they overly ambitiously? Do you use version control? Kanban boards?
iOSProgramming,3dok7k,bante,1 point,Sat Jul 18 01:16:13 2015 UTC,"I've been working with iOS almost since it was first released and I still feel a little overwhelmed when they release updates. The truth is that things are moving really fast right now and it's hard to keep up sometimes, even for those of us that have been around for a while.  Take a step back, breathe, and focus on doing one thing at a time.  Pick a project you want to work on and let that guide your studying so you can begin to learn about a specific area and don't try to expect to learn everything right at the start. If your project seems too big, then see if you can split off one piece to work with and start smaller.  Don't be afraid to screw up and throw it all away at the end and start over until you start feeling more comfortable. Eventually you'll get a feel for what works and what doesn't."
iOSProgramming,3dok7k,jimejim,1 point,Sat Jul 18 05:41:04 2015 UTC,The Stanford lesson was quite overwhelming for me too. I learned by making a small project and then just added functionality like a table view or a delegate or something. Then start over and do it better and quicker. You should be able to find any answer in stackoverflow
iOSProgramming,3dok7k,noobstix,1 point,Sat Jul 18 08:53:43 2015 UTC,"App can be made in a few days, and the same app could take a few months to ""really"" make, number of details in mobile app making is astounding, if you want to do everything perfectly. Simplicity for the user is not simple to produce, it sounds like a truism, but it takes a while to fully get into that mentality.  You gotta start with easily graspable, well defined goals, that you can possibly reach in 1-2 weeks, or even a few days. For example, if you'd like to to a grocery list app, don't plan ahead to have cloud sync, sharing, collaboration, social integration, fancy animations, etc. right away. Start with a simple list, and think about what can be improved in the next week or so, write it down in bullet points. Then choose one point at a time for the next target to reach. You just got yourself a Minumum Viable Prototype and you manage your project, congratulations!  And since it's a learning exercise, not a commercial product, you basically cannot fail, either technically or financially. So you can restart from scratch, modify, experiment, abandon projects as much as you want, and even if it takes a lot of time to finally make an app, you're still winning, because you learned something! It's not the most important thing to finish, it's the process that makes you better.   Doing mostly contractor-stuff now, so most of the time I get told what to make and how much time I can take, I basically envy you ;)"
iOSProgramming,3dok7k,triazotan,1 point,Sat Jul 18 11:51:36 2015 UTC,Dude I'm 27 and have started learning it maybe 10 times and after a month or two i burn out and start again. Don't feel bad keep going your younger and will definitely absorb info faster
iOSProgramming,3dok7k,brooklynscholar,1 point,Sat Jul 18 13:35:27 2015 UTC,"Buy a book. I find that if I have a physical copy to learn by, I am much more motivated knowing there's a wealth of information at my fingertips. Also sinking the money into it is motivation, too."
iOSProgramming,3dok7k,xtreemballr,1 point,Sat Jul 18 17:24:34 2015 UTC,iOS is very easy relative to some other languages and their set of tools imo.
iOSProgramming,3dok7k,dcpc10,1 point,Sun Jul 19 03:54:28 2015 UTC,"Don't learn iOS programming - yet!  If it's too advanced for you, try learning an easier language and development environment until you master the fundamentals.  Then you can apply those skills to a more involved environment, such as XCode and iOS programming.  I recommend SmallBasic - It's an easier variant of Microsoft Visual Basic.  You'll learn the basics of variables, program structure, and object-oriented programming.  Best of all, it's free.  (http://www.smallbasic.com/)  You can make games in it as well, such as Tetris."
iOSProgramming,3dok7k,anwserman,2,Fri Jul 17 23:44:51 2015 UTC,I don't think it's too advanced for me. I learned Java pretty well and I can make some basic games in Java but I really want to be able to make apps.
iOSProgramming,3dok7k,askoruli,4,Fri Jul 17 23:58:36 2015 UTC,Try porting one of your java games to iOS. Having an existing game to work off reduces a lot of the complexity and you'll be able to focus on learning what you need to get the job done instead of all of iOS.
iOSProgramming,3dok7k,yoethan,1 point,Sat Jul 18 00:15:12 2015 UTC,You should start with something basic for iOS too. My first app was a tip calculator and that took me like 3 months to finish and release. Learning something new is really boring at first and I quit several times. You just have to push through and pass a certain point.   It feels good to know that over 200 people all around the world downloaded something that I made.
iOSProgramming,3dok7k,anwserman,-2,Sat Jul 18 16:03:03 2015 UTC,"Ah.  What's your exact frustration then?  Do you know of any JavaScript by chance?  You could try learning PhoneGap/Cordova.  It's an HTML5 wrapper that allows you to make your own apps in HTML5/Javascript for both iOS and Android.  However, you can write your own ""plugins"" that hook into the native operating system.  That means, you'd write Objective-C for iOS, Java for Android.  For an app that I'm making for iOS, I did the interface in HTML and the backend in Objective-C.  I wrote a couple of my own plugins that analyzes the BPM of music, is a music player, etc.   It's all open source, so if you want to learn to see how they did the code, it's all there.  I could send you some code if you'd like.  I've learned a lot in programming for Objective-C by using it.  I'm learning bitesize chunks."
iOSProgramming,3dok7k,contrarianism,1 point,Sat Jul 18 00:13:15 2015 UTC,"You're 17 and you can't program iOS apps?  Slaaaaacker.  But seriously, I would give yourself achievable goals in realistic time frames.  Pick something simple and build on that.  Don't expect to build a facebook clone.  Start small and build on it.  That's how all apps start out."
iOSProgramming,3dpnl5,kevinmarenger,2,Sat Jul 18 06:00:42 2015 UTC,Why ? it seem pretty powerful now
iOSProgramming,3dpnl5,gtsiap,3,Sat Jul 18 09:52:25 2015 UTC,"Cross platform doesn't work on mobile.   writing native code is much more easier, faster and safer. Safer: What if Xamarin dies in x years? Native code will stay until the platform is dead. Easier and faster: Cross platform frameworks tend to have many limitations A cross platform developer will need want more money than a native developer. Also native frameworks have more learning resources available.   Also having native developers in your team is the best thing you can do. Android and iOS ui have many differences and 1 cross platform developer won't be able to write ""native"" ui for both. Nor 1 developer will be able to catch up all the new technologies that will be available for the x platforms.  Professional apps should be written with native frameworks.  If you don't have enough money in order to write native mobile apps, then you aren't get paid enough."
iOSProgramming,3dpnl5,r-w-x,1 point,Sat Jul 18 10:00:30 2015 UTC,isn't this a bit of a religious aspect or twist on things especialy if you never tried xamarin ? maybe they have catched up a lot since their mono days
iOSProgramming,3dpnl5,buccianti,1 point,Sat Jul 18 17:08:29 2015 UTC,"I think people here just have an extreme knee-jerk reaction to cross platform on mobile. Maybe they feel threatened, because they invested much time to learn Objective C and now suddenly all the C# and Android devs can also eat the iOS lunch?  Claiming that native is safer because Xamarin will die in x years also does not make sense to me. First of all Xamari's products are built on mono, the open source implementation of .NET. If anything, if Xamarin should go bankrupt, they would most likely open source everything before they turn off the lights. Secondly, with this reasoning nobody should use Unity or Unreal Engine for cross platform games either. Especially Unity, which is much like Xamarin built on mono.   Also, any company that relies on their ""native developers"" to design their UI/UX is just delusional about their own size. Any shop worth their salt will properly separate the duties of the UI/UX designers and the coders, who will build those designs.  Related to this, Xamarin allows you to add as much native code as you want to your shared/cross-platform C# codebase. Because of this it is possible to fully write native UI."
iOSProgramming,3dpnl5,regoapps,1 point,Sat Jul 18 18:40:25 2015 UTC,have you heard of allen wong story ?   https://www.youtube.com/watch?v=ZEW_dq_5XxI  how things have change in the current app market to have a success like that ? i've been told its way harder now than in 08-09 is it true for the app market ?
iOSProgramming,3dpnl5,buccianti,2,Sat Jul 18 22:08:51 2015 UTC,"I don't know Allen Wong and he has no idea if I exist but I admire him for opening up and telling the world that it is possible to make a living and possibly becoming a millionaire through apps. This is how you give back to the community and it's up to each one to work hard and make it happen (or not). So many devs out there are making a fortune but keep the secret to themselves.  I think you have two options:   Build a startup, usually based on a single app, and try to get funding so one day you can have an exit and finally become a millionaire. Build several ""chickens"" and feed them well so that you get more eggs everyday. Those chickens can be apps, books, property, etc. Allen is making a bit from each one of his apps (especially from the police radio scanner), plus from the sales of his book. That's the true nature of passive income.   I'm building a startup but also building other (passive) apps to improve my chances. You learn so much when you try, even when things don't work out as quickly as you would like. It's like buying a lottery ticket, you have a little bit of chance. If you don't buy it your chance is ZERO.  I don't believe in saturated market for apps. I think the sales of smartphones (and watches, glasses, car and home electronics) will grow forever and you will have even more chances of getting new users everyday, it's up to you to get to them. The difference between 08-09 and today is that we have so much more information on what works or not, including choices on what apps to build and marketing strategies. I think there's no excuse for not trying."
iOSProgramming,3dpnl5,regoapps,1 point,Sat Jul 18 23:22:13 2015 UTC,"I agree with most of what you said. There is also another difference between 08-09 from now that people don't realize: there are much more iOS users now. Free apps are the king now. Paid apps are for a quick buck, but getting millions of users to use your free app is guaranteed to make you a millionaire.  P.S. 99.9% of my income is from apps, real estate investments and stocks investments. My book sales are really low compared to what I make elsewhere. I don't recommend selling books as a good way of making money, unless you're a really good writer, which I am not. Why do you think I only have one book written in 2012 and that's it? Meanwhile I released over dozen apps since 2012. One day of app sales make up an entire year of book sales for me. Then sometimes people ask, well, why don't you make the book free? It is free. You can torrent the ebook for free. The paperback is not free because it costs money to print it and ship it and Amazon takes so much of a cut that I barely make anything off each book. Also, a lot of my advice IS free, whether on http://facebook.com/allenapp or http://YouTube.com/regovids"
iOSProgramming,3dpnl5,r-w-x,1 point,Mon Jul 20 06:57:59 2015 UTC,"I agree with you Allen. Free apps can scale by tenfold so you can explore the ad model and make a lot of money. But we need to distinguish what types of apps fit that profile. For example, an app in the enterprise space can be free but you can't bombard the users with ads when they pay you a monthly subscription. This is my case now and it's great but my message to the community is to think a lot before deciding on which app to build and what monetization model to follow. I thank you again for sharing your experiences, it helped me in avoiding some mistakes and keeping me motivated. I wish you a great recovery."
iOSProgramming,3dpnl5,alt51,1 point,Mon Jul 20 09:04:21 2015 UTC,You're welcome and good luck on your apps. Follow my Facebook if you haven't. I sometimes give up-to-date tips on how to market apps.
iOSProgramming,3dpnl5,r-w-x,1 point,Mon Jul 20 12:57:21 2015 UTC,"The market is much more saturated now. Every day an incredible number of new games and apps are added to the App Store. This means that it is more difficult for people to discover your app. Generally speaking, the low hanging fruit is gone by now, I think.  However, there have still been recent success stories of people selling simple apps and becoming millionaires (crossy road, for example).  If you want to become rich, the App Store is a road to money like any other. You have to work hard and be lucky, but I would not count on it.   My apps bring me a nice bonus every month. My intention is to increase my portfolio and create a nice supplemental (and passive) income, which I believe is more realistic than anything else. But I also freelance and recently started a full-time iOS (NATIVE!! 😁) development job with a startup."
iOSProgramming,3dpnl5,brendan09,1 point,Mon Jul 20 14:09:48 2015 UTC,"I'd love for someone to post an example of a truly cross platform app where it's not possible to tell it's cross platform and where it comes within 10% of matching the performance of a native app.  You won't find any.  Cross platform is a promise that comes with pretty much every platform at one point or another, but no one can ever pull it off.  There are just too many system layers for it to work properly.  If you're developing a simple client app that doesn't need much more than web functionality then sure cross platform is a viable option.  But if you're building your own core functionality then you will never get the same speed out of cross platform as you would native."
iOSProgramming,3dpnl5,antoxicion,0,Sun Jul 19 00:01:25 2015 UTC,"I have just started to learn Xamarin. I don't understand (yet) why some people are so against it. It basically allows you to write the bulk of your logic to be shared and UI can be written either native or with Xamarin.Forms.  It's easy to say that you should avoid cross platform, but if in reality you are an indie and your app lends well toward Xamarin why not? It will save you tons of time/money. That's how I see it at least.  Of course, I might change my mind a few weeks down the road, but for now everything seems to be pretty good."
iOSProgramming,3dpnl5,megablast,2,Sun Jul 19 02:52:27 2015 UTC,"They almost always produce subpar products. The people who use cross-platform tools are typically the people who don't care about the quality of the app.  Not to say you can't make something good with Xamarin...but the people who use it are typically the people churning out bad apps. People who don't put in the effort to understand the intricacies of each platform they're developing for. Often they're looking for a one-size-fits-all solution as the easy way out.  It gets decent cross platform tools (like Xamarin) looked down upon.  I say this as someone who shares the above opinion with most iOS / Android developers. A good Xamarin app is an exception to the rule. A very rare one. It may sound arrogant, but it's as much looking down on the people who use the cross platform tools as the tools themselves. It's seeing someone not dedicated to quality. No cross platform tool will ever rival native for any platform."
iOSProgramming,3dpnl5,skyblazer,2,Sat Jul 18 11:43:17 2015 UTC,What about phonegap?
iOSProgramming,3dpnl5,regoapps,2,Sun Jul 19 05:37:14 2015 UTC,"Xamarin sucks so much. I have almost finished a project in it. It is so buggy, using XAML sucks (xforms). It is slow."
iOSProgramming,3dpnl5,Kubiedo,-1,Sat Jul 18 16:37:34 2015 UTC,"My 0.02 $25 indie/$83 corporate cents:  Paying $25 a month for a cross platform UI toolkit is nuts. I guess you could justify it if you only know C# and don't want to learn anything else... but c'mon.   I've never used it, but I've heard Qt is pretty good -- you write C++ code, and it (in theory) works on literally everything. Platforms you've never even heard of. I believe it is free and open source, and sidestepping the quality-of-cross-platform-apps issue, I've heard nothing but good things about developing for it.  With that said, I agree with a lot of other people in here; cross platform UI development only works if your design goals are superficial, or if your product shouldn't look native -- like a video game which should have UI themed for its world/experience. But more importantly for your case:  You will never be featured by Apple or Google if you do cross platform UI  That is a bit of a strong statement (and I'm sure there are counter examples) but let me explain. I'm sure that there are established apps that have been featured while still using cross platform stuff; but the thing is, they were established. You're not.   You want Apple and Google to derive some benefit from featuring you, and the last thing they want is for people in internet discussions to say ""X got featured, and it was cross platform -- see? You can do good cross platform apps! Don't learn Objective-C/Swift/Java/Cocoa/Android!"" They want people invested in their platforms, and making apps were they can say ""you can't get that on [Android / iOS / Windows Phone], buy our phones!""  When Apple and Google consider featuring Apps, they often asked the developers to make changes to the app, ranging from new IAP schemes to ""move this three pixels to the left."" Sometimes these are suggestions, sometimes they are requirements. In many cases, I believe it will be impossible to make those changes using cross platform UI without hacks that no sane software engineer would condone.   Where I work, one of our products is in the process of received some sort of recognition from a major App Store, and one of their stipulations for getting this recognition is that our product adopt a new UI library that they have released recently. A quick Google search reveals that Xamarin's support for this component is currently fairly limited. The last thing you want to have to tell your boss is ""my technical decisions are going to prevent you from taking advantage of this opportunity that you have spent considerable time and resources pursuing.""  In summary, featured Apps, which as far as I know is in many cases the only path to real money available to App developers, is only open to you if you're able to lead the way in terms of adopting new technologies on the platforms you develop on. You will not be able to do this if you use cross platform, because you will always either have the additional overhead of waiting for them to implement wrappers for the new stuff that abstract away the implementation details, or just be writing separate iOS and Android code, but in C# or C++ instead of the native language.  Writing your model (in MVC) for cross platform is a different story -- but you probably already knew that. Google has a article up somewhere about their approach -- using a tool that takes Java and emits Objective-C that they used for the model of Inbox, with the UI code being written natively. Where I work, we wrote our core algorithms/business logic in a manner such that it works on pretty much any platform worth developing for, and with the exception of some notable incidents over the past few months, it's worked out very well, saving us well into the six figures of engineer time -- and that's just the financial story.  A final unrelated comment on this Allen Wong guy -- if he thought there was a good chance someone  could still do what he did, he would probably still be doing it, instead of writing get rich quick books."
iOSProgramming,3dq9rk,changingminds,4,Sat Jul 18 11:58:55 2015 UTC,"Yes. Note that the current generation (6th) and previous generation (5th) iPod touches can run iOS 8 (and iOS 9), but older generations are stuck on iOS 6. It'll be best to target more recent versions of iOS, so you should prefer at least the 5th generation."
iOSProgramming,3dq9rk,ProgrammingThomas,1 point,Sat Jul 18 12:11:37 2015 UTC,Thank you!
iOSProgramming,3dq9rk,tonyunreal,3,Sat Jul 18 12:57:30 2015 UTC,"Just a reminder, if you are not currently planning to join the paid Apple Developer Program, you have to wait for Xcode 7 to come out later this year, so you can debug/run the app you developed on an actual device, otherwise you need the paid license to do it."
iOSProgramming,3dq9rk,mavdev,2,Sat Jul 18 15:43:16 2015 UTC,"I know what you are saying, exactly the reason I moved to ios after 2 years of Android"
iOSProgramming,3dq9rk,nullput,2,Sat Jul 18 12:35:28 2015 UTC,"Just a word of warning, I started a similar way by installing OSX86 on my windows laptop. It worked badly and was quite frustrating to do anything. What it did do was give me a glimpse of how much better OSX is over windows (if it worked properly, which osx86 doesn't). That laptop has now been in the bottom draw unused for years while I work on my rMBP full time. Using windows now feels like a major downgrade. MacBook Pro's are expensive, but money well spent. Don't expect VMWare or OSX86 to give the feel of the real thing.  5th gen iPod is the minimum worth buying as a test device"
iOSProgramming,3dq9rk,AJGolf1976,1 point,Sat Jul 18 16:21:16 2015 UTC,"Welcome to the world of iOS development. I stopped developing for Android a few years ago for the same reasons, and actually since going iOS only my profits have more than doubled because I am focused on creating better products and not rushing things to ship for two platforms. You are going to love the App Store economy, It has been proven and I can tell you first hand that iOS users are way more willing to spend money on up front costs as well as in app purchases. It's just common sense, if your willing to overspend for an Apple product (Apple fanboy here so I am in this boat myself) you probably have the disposable income to spend on Apps and IAP. I am not saying you will get rich, because competition and user acquisition are extremely difficult hurdles to overcome in the App Store, but you should see much better returns on your apps on this platform. Best of luck."
iOSProgramming,3dp5l5,RjakActual,4,Sat Jul 18 02:50:33 2015 UTC,"In general geofencing is really easy to describe, but nearly impossible to implement satisfactorily. Location information is a lot noisier and messier than people realize. When you try to do something like what you describe, you start getting annoyed because you drew a 30' radius around your home, but sometime even when you're inside your home it still sometimes thinks you're outside that radius.  You can see this for yourself with an app like Tasker. I use that to turn off Wi-Fi whenever I leave home. I had to increase the radius for that all the way to 100' to keep things at all sane.  Come to think of it, Tasker probably already does what you described."
iOSProgramming,3dp5l5,TaviRider,2,Sat Jul 18 03:51:47 2015 UTC,"Turning off wifi is the exact reason you're having problems with location detection. GPS takes a handful of seconds and is relatively expensive in terms of power consumption to get a fix on your location. Because of this, manufacturers like Apple and Google use maps of known wifi hotspots to help jump start the process and get a general location in about 1 second."
iOSProgramming,3dp5l5,chaosdude78,1 point,Sat Jul 18 13:21:25 2015 UTC,"I have seen that Wi-Fi location system fail miserably. I've seen my location literally jump to another state for a minute and then jump back. Overall the location system is very good, but this is what I mean when I say that it is noisy.  Also the problem is not that I have Wi-Fi turned off, because the problem occurs when it is on."
iOSProgramming,3dp5l5,TaviRider,1 point,Sat Jul 18 15:46:37 2015 UTC,"I found an app ""Tasker - by Nick Chavez"" is that the one you mean?"
iOSProgramming,3dp5l5,TaviRider,2,Sat Jul 18 06:55:43 2015 UTC,"Sorry, I was getting my platforms confused. The Tasker I was referring to is an Android app."
iOSProgramming,3dp5l5,Lost_the_weight,2,Sat Jul 18 15:39:50 2015 UTC,"If you buy the iOS Apprentice app #3, My Locations, from Ray wenderlich's website, you will get an understanding of how iDevices determine their location, and the accuracy ranges involved. If you're serious, pay the few bucks for this lesson (or buy all 4, I think they're great, and have been maintained through the obj-C -> Swift transition). It'll get you going with MKLocation, accuracy settings and the like.  I am not in any way involved with Ray Wenderlich or his site, just a satisfied customer."
iOSProgramming,3dp5l5,johnwickham,1 point,Sun Jul 19 13:57:37 2015 UTC,"Thanks very much for the recommendation. I was reading through Wenderlich's site yesterday and wondering if it was worth it, so this is great."
iOSProgramming,3dp5l5,brendan09,1 point,Sun Jul 19 14:04:40 2015 UTC,"I'm confused, does reminders not do what you're asking?"
iOSProgramming,3dp5l5,deweysmith,2,Sat Jul 18 05:43:24 2015 UTC,"Reminder's requirement to enter an address or match a contact makes the feature useless for this specific need of mine. I do use Reminder's geofencing for sure, but a pin drop interface would be fantastic.  Today my wife asked me to stop by the jewelry store on the way home to pick up a resized ring she bought me as an anniversary gift. I set a timed reminder for late, thinking I would be working late, but I ended up leaving work early.  If I had been able to bring up a map and drop a pin on the highway near the cloverleaf where I would have to exit for the 5 minute detour to the jewelry store, I would have remembered. Instead I got all the way home and the damn alarm went off after I walked in the house.  There's no address for ""the exit lane just before the giant cloverleaf intersection of the 45 and the 183 in Austin"", so Reminders is completely inadequate for this use case.  I have this need at least 3 or 4 times a month and would LOVE to see something for iOS. Android has EXACTLY this functionality in an app called ""Geofencer""."
iOSProgramming,3dmxwr,pquimby,1 point,Fri Jul 17 16:02:33 2015 UTC,When working with wired accessories you also have the option of using a pass through adapter :  http://www.cablejive.com/products/dockStubz.html
iOSProgramming,3do8xy,Koxymon,3,Fri Jul 17 21:58:31 2015 UTC,"Your View Controller is calling appendDigits, but the method is actually called appendDigit.   Did you link the IBAction to your Storyboard and then renamed it? That might be the problem."
iOSProgramming,3do8xy,Quallentin,1 point,Fri Jul 17 23:32:10 2015 UTC,"Thank you, in the end I deleted everything and did it again from the start, since I tried to change the name back but didn't work. Thanks a lot, man"
iOSProgramming,3do8xy,succeededcoma,1 point,Sat Jul 18 13:20:31 2015 UTC,You should research this unrecognized selector sent to instance
iOSProgramming,3do8xy,15458434,2,Fri Jul 17 23:02:24 2015 UTC,This is the message you get when sending a function call to an object that doesn't have that function. If I want to drive my push bike and call the method clutch it won't work. While when in a car I can call that function. iOS just terminates any app that does any wrong function call with this error message in the log.
iOSProgramming,3do8xy,Power781,-1,Sat Jul 18 00:33:49 2015 UTC,"Hey man, it's not so nor google there."
iOSProgramming,3dotrm,Shadow_Being,1 point,Sat Jul 18 01:00:40 2015 UTC,Analytics is a religion and sales are facts?
iOSProgramming,3dotrm,15458434,1 point,Sat Jul 18 06:12:43 2015 UTC,"Probably time zone differences. Since Analytics dropped, the daily units it reports rarely matches up with Sales & Trends, but they seem to average out the same over time. Is annoying. Historically they've always said you can't directly compare what's reported in the monthly financials with the day to day figures from Sales & Trends because of this. I just wish they'd made Analytics match up as on a daily basis the discrepancy is much more of a pain."
iOSProgramming,3dotrm,rglassey,1 point,Sat Jul 18 08:22:15 2015 UTC,I believe that the analytics section only covers iOS 8+ and users that allow the sending of diagnostic info.
iOSProgramming,3dm7jf,cnatod,1 point,Fri Jul 17 12:07:30 2015 UTC,Anyone have actual evidence/data that video previews increase downloads? Still haven't made any for my apps.
iOSProgramming,3dma8s,sreid768,5,Fri Jul 17 12:39:02 2015 UTC,"Its been down for me since around 5pm central yesterday. Multiple browsers, cached cleared. Still down."
iOSProgramming,3dma8s,oklarican,5,Fri Jul 17 13:08:10 2015 UTC,The status says it's all up too?? God damn https://developer.apple.com/system-status/
iOSProgramming,3dma8s,frasmage,2,Fri Jul 17 13:28:12 2015 UTC,"probably because the server is running fine, but the site seems to be breaking on the front-end. Looks like angularJS is failing to load its components properly."
iOSProgramming,3dma8s,succeededcoma,2,Fri Jul 17 14:46:31 2015 UTC,Same here
iOSProgramming,3dma8s,RjakActual,2,Fri Jul 17 13:15:05 2015 UTC,"Here is the URL to the Apple Developer Support contact form. I chose ""Website Feedback"" for my complaint.  https://developer.apple.com/contact/submit.php  I know that with my company's software, one of our biggest issues is that users try to work around bugs or wait instead of complaining. Complaints help us a lot, so let's help Apple understand that iTunes Connect login is still broken."
iOSProgramming,3dma8s,aporcelaintouch,2,Fri Jul 17 14:49:21 2015 UTC,I usually check Twitter in cases like this and it has been a sad last 15+ hours for a lot of us :(
iOSProgramming,3dma8s,much_better_title,2,Fri Jul 17 14:59:50 2015 UTC,"Down for me right now (11:30 am EST), same issue. Seems to be some JS breaking the front end."
iOSProgramming,3dma8s,Pistachiator,1 point,Fri Jul 17 15:33:01 2015 UTC,"Try clearing your cache/cookies, or use Chrome."
iOSProgramming,3dma8s,RjakActual,2,Fri Jul 17 13:02:16 2015 UTC,Unfortunately it's not a local issue.  The site is well and truly broken.
iOSProgramming,3dma8s,swizy,1 point,Fri Jul 17 14:33:02 2015 UTC,Lalalalalalalala. All I want to do is push a new beta to TestFlight.   Tried from every browser (even opera!)  still nothin'.
iOSProgramming,3dma8s,OkToBeTakei,1 point,Fri Jul 17 14:51:16 2015 UTC,Works for me
iOSProgramming,3dma8s,Rudy69,1 point,Fri Jul 17 15:04:49 2015 UTC,"Just tried it and it worked for me too, maybe it's fixed?"
iOSProgramming,3dma8s,OkToBeTakei,1 point,Fri Jul 17 15:15:27 2015 UTC,I guess so :)
iOSProgramming,3dma8s,mrgermy,1 point,Fri Jul 17 15:32:43 2015 UTC,iTunes Music is also down.
iOSProgramming,3dma8s,danielmackey,1 point,Fri Jul 17 16:56:58 2015 UTC,It looks like it's back now. They did finally acknowledge it on https://developer.apple.com/system-status/
iOSProgramming,3dma8s,3Blox,1 point,Fri Jul 17 17:44:17 2015 UTC,Works for now
iOSProgramming,3dma8s,RjakActual,1 point,Sat Jul 18 03:44:11 2015 UTC,Yes.   I'm so glad that Apple bought TestFlight right now.   Hard to champion our iOS app in our organization when our QA is now sitting here doing nothing because I can't distribute this weeks fucking build to them.
iOSProgramming,3dma8s,mrgermy,2,Fri Jul 17 14:33:23 2015 UTC,I'm not sure if it'd fly but you could try Crashlytics Beta for distribution (if you haven't already).
iOSProgramming,3dma8s,RjakActual,1 point,Fri Jul 17 16:56:44 2015 UTC,We already use TestFairy for our Android builds so we went that way.
iOSProgramming,3dnzab,succeededcoma,3,Fri Jul 17 20:41:52 2015 UTC,you can change the metadata up until the app is in review I think. so yes you'll need to submit an update
iOSProgramming,3dnzab,shitidiotturtle,1 point,Fri Jul 17 21:49:36 2015 UTC,app is already in the store so looks like a new version for me. no worries though....i am planning some ui updates as well so this will be a good reason to redo this.
iOSProgramming,3dnzab,GabrielMSharp,1 point,Fri Jul 17 22:27:30 2015 UTC,I know that I once removed a video after it was approved for the app store. Not sure about adding one though.
iOSProgramming,3dobvj,biggy_d1,1 point,Fri Jul 17 22:22:49 2015 UTC,"i almost bought that course. i picked up a couple others. i dont know much about swift as i have only glanced over it but i have read a lot of other people talk about swift not being completely ready for prime time. like i said, i cant speak to this personally as i dont know enough about swift. i also was exposed to objective-c when it was the only language available.  i think that its great to learn swift and its something that i have been looking to get into....i also want to make an exercise for myself to convert my one app store app to swift from objective-c.  i believe the further along we get the more prevalent swift will become so i dont think you wasted your money and i think the knowledge gained will very much so transfer into iOS 9. i want to say that apple is looking at swift to take over eventually but i dont know how soon that will be and if that is even the actual case."
iOSProgramming,3dobvj,succeededcoma,1 point,Fri Jul 17 22:32:03 2015 UTC,The course is pretty good. It gives great examples as it leads you from building simple apps to clones of popular apps. Also in the end it works in a bit of parse which is nice for backend storage. If you have a python background you should be ok. It just takes a few to get used to do de and how it is involved with creating apps. Hope you enjoy it. Definitely worth $10.
iOSProgramming,3dobvj,bernard_savage,1 point,Fri Jul 17 22:41:28 2015 UTC,"I did a quick search and it looks like that code is still working for today: DAYDREAM1101  To answer your question, most of what you learn will still be relevant, so I'd definitely consider it for $10. You'll need to look up some of the new changes for swift 2.0 when you start using XCode 7 and the incremental updates to the libraries, but that shouldn't stop you from getting started and you won't have to change much.  I'd also check out UIStackView since that will be a pretty big change over using autolayout only in Interface Builder, but again, you could still build an app using what you learned from the course in iOS 9.  [edit] - On second look, I notice it says it's only updated for XCode 6.1 which isn't using swift 1.2 yet, so while you'll probably still learn a lot, be prepared to fix some bugs due to language changes. The jump to 1.2 and then to 2.0 might be confusing if you haven't done much with iOS. Maybe the extra time fixing issues will teach you something, so I'd still probably consider $10 an ok price for that. Just have the free swift guide Apple provides handy as you're learning the language."
iOSProgramming,3dobvj,jimejim,1 point,Fri Jul 17 23:50:09 2015 UTC,"I'm thinking about this course as well. I recently updated to Xcode 7 but haven't played much with it yet. The only difference I noticed so far is instead of println("" "") it is now only print("" "").  For $10, I think it'll be worth it. I'm taking a web developer course from the same guy and he is pretty informative. I saw another course for $10 called Make a freakin iPhone App or something like that and that seems promising as well. For me it's between those two. I tried a free course to make a weather app, but I am getting some errors and I'm almost towards the end. I learned a lot from it, but the instructor doesn't respond if you ask him a question. Rob answers almost instantly and is very helpful, as well as the others taking the course.  Let me know which course you decide to take!"
iOSProgramming,3dobvj,chiefarab,1 point,Sat Jul 18 05:47:47 2015 UTC,Where are you guys finding these $10 courses? It looks like it's $199 to me. I'd love to buy it for 10 though.  edit: nevermind. there are coupons available for the website that OP links to. i bought this course and another haha
iOSProgramming,3dobvj,lesiva,1 point,Tue Jul 21 05:55:36 2015 UTC,"You will always be learning and having to update your code with iOS. Swift 2.0 will become 2.1, 2.2 ect. You just have to read the docs and update small things here and there. It's not a big deal, it's just something that every iOS developer has to deal with. Taking an iOS 8 course is perfectly fine, you will just have to do a little research to update code occasionally."
iOSProgramming,3dobvj,AJGolf1976,1 point,Sun Jul 19 03:08:45 2015 UTC,"I'd suggest if you're only learning to code the nuances between iOS8 and 9 aren't that relevant. There will be certain APIs become available in iOS9, but remember that there's millions of apps out there right now to download on the App Store, and none of them are iOS9 based.  Really with every new version there's new features and changes but when it comes to learning how to code that stuff is irrelevant."
iOSProgramming,3dngb7,ThePantsThief,1 point,Fri Jul 17 18:20:28 2015 UTC,"Not a full solution, but you could obtain the font to use with Dynamic Type using a method similar to this which would enable you to do all the text measurement off the main thread.  Auto Layout is based on the Cassowary constraint solver), so you could always use an implementation of this (I don't know if there are any third party Objective-C/Swift implementations) to do the layout with the same constraints off the main thread. If you have a significant amount of layout that you need to do off the main thread though, you probably need to move away from Auto Layout."
iOSProgramming,3dngb7,ProgrammingThomas,1 point,Fri Jul 17 19:02:50 2015 UTC,"Use a UILabel instead, you can set it's text on another thread!   You can do this but you shouldn't. iOS UI has always been main thread only. When you do something on a background thread iOS doesn't always crash but it gives zero guarantee that it will work correctly. So 99/100 things will work but then the text wont show, or the layout call wont be run.   I don't see why your code has to use auto layout but perhaps this is an academic exercise."
iOSProgramming,3dngb7,askoruli,1 point,Sat Jul 18 00:30:40 2015 UTC,"Yes, of course. In this situation though, none of these views are going to be on screen (just temporary views used to calculate the row heights), so it should be safe, right?  Yeah, just an academic case I suppose. But why would you not use Autolayout for a complicated view?"
iOSProgramming,3dngb7,askoruli,1 point,Sat Jul 18 03:28:30 2015 UTC,Even if they're offscreen it's still not considered safe and I wouldn't trust it. I try to use autolayout everywhere but you do get better performance from custom layoutSubviews methods.
iOSProgramming,3dm66w,BiPoleArt,3,Fri Jul 17 11:51:32 2015 UTC,"I'm not sure how strict they are with that one. A lot of apps seem to require an email address to sign up or a login (for example ""LinkedIn"")."
iOSProgramming,3dm66w,shiift,3,Fri Jul 17 12:04:55 2015 UTC,"""My client would like to release this as a free app with part of the content available, and the rest of the content available as an IAP. Would it be acceptable to require registering an account before purchasing the IAP? Again, this would be to ensure the ability for a user to have access to their account if they forget their password.""  When implementing in-app purchases you must also implement restoring the purchases which means the users app-store login is checked if they purchased the IAP previously and given the correct permissions in your app if they have previously purchased meaning you dont have to log wether or not a user has purchased it ?"
iOSProgramming,3dm66w,criosist,1 point,Fri Jul 17 15:43:45 2015 UTC,"I've done about 3 apps now that all require an email to login. That email is stored and they don't mind. The thing is though you want to make sure, if you're going to store the email, then you want to store it in the Keychain. Dropping it in CoreData or UserDefaults will likely get you rejected.   So really what they mean is the keychain is storing it for you. YOUR app is just telling it to be stored without managing how it's being stored."
iOSProgramming,3dm66w,EisbarDasTier,3,Fri Jul 17 13:43:35 2015 UTC,I have never had an app rejected for storing email address in Coredata or NSUserDefaults.  I think that 17.2 is to prevent app to collect email address just for the sake of collecting them. If your service need an user account to be user it's not a problem to ask for email or date of birth.
iOSProgramming,3dm66w,SeNeO,1 point,Fri Jul 17 15:11:04 2015 UTC,"That line is probably there so you don't harvest personal data. So if your app require the user to share personal data in order to be used you get a rejected email from Apple. Personally every login is an annoyance to me. Every time I fill in my credentials I know I get spam, while I don't sign up for that. With In App Purchases you can have Apple host the In App Purchase content. That way you don't have to keep a server up and running. Worry about content not being copied. As soon as the user does an In App Purchase they get the content straight to their device. And this doesn't require any other sign up from the user."
iOSProgramming,3djjoc,okgabr,2,Thu Jul 16 19:58:15 2015 UTC,"Nice list, I recommend Android Community  as well"
iOSProgramming,3djjoc,3amrous,2,Thu Jul 16 20:23:35 2015 UTC,Needs a more linkbait title.
iOSProgramming,3dkd4b,Groydis,1 point,Thu Jul 16 23:43:24 2015 UTC,"I found myself needing to rename/clone projects often, after looking around I found a little app on the App Store called Project Cloner.  It wasn't free ($1.99 i think), but it's saved me a ton of time. So it was worth it.  Just wanted to share in case anyone else was interested."
iOSProgramming,3dkd4b,alt51,1 point,Fri Jul 17 04:39:35 2015 UTC,"Awesome, will give it a try!"
iOSProgramming,3dkd4b,vswr,1 point,Fri Jul 17 05:29:08 2015 UTC,Ugh.  I completely screwed up several projects trying to rename them.  Xcode would repeatedly crash every time I rename it.  Haven't tried in 6.4 yet.
iOSProgramming,3dkd4b,scamartilhon,1 point,Fri Jul 17 04:44:42 2015 UTC,I spent way to long trying to find out how to fix the issues that can crop up when trying to rename a project. One thing I didn't mention in the article was that you should also check the custom class that's listed on the scenes in your storyboard. For some odd reasons occasionally a few of them don't update to the new project name.. I will update the article with this information.
iOSProgramming,3dlobq,Jaswah,2,Fri Jul 17 07:33:18 2015 UTC,"Depending on how ""developerish"" the device can be, you could look at metawear by https://www.mbientlab.com/"
iOSProgramming,3dlobq,woodnathan,2,Fri Jul 17 09:57:02 2015 UTC,"Google ""GATT"" that should get you on your way."
iOSProgramming,3dlobq,BassPlayaYo,1 point,Sun Jul 19 14:00:36 2015 UTC,Can't be a watch :(
iOSProgramming,3dlobq,Airglow26,1 point,Fri Jul 17 08:23:02 2015 UTC,"Depends on what you ultimately want, if it's just for you look into crabbing and the decoding the Bluetooth connection data (not sure how hard this would be, though I'm tempted to try it myself).   If you plan to publish it for public use then best bet is to use the API after all, they are there for the exact reason of interfacing with the device.   You may want to look into other products too the Nike band, Microsoft band, razer nabu may be worth looking at though I don't know much about them."
iOSProgramming,3dlobq,booranger,0,Fri Jul 17 09:40:58 2015 UTC,Apple watch =p
iOSProgramming,3dlkun,th3phantom,2,Fri Jul 17 06:48:35 2015 UTC,"Somehow, trap a early 20 something year old into your app. That should do it.   If you're out of that age group, try the 65+."
iOSProgramming,3dlkun,boboguitar,1 point,Fri Jul 17 12:21:01 2015 UTC,what do you mean?
iOSProgramming,3dlkun,MrSloppyPants,1 point,Mon Jul 20 08:53:22 2015 UTC,https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/AboutEntitlements.html
iOSProgramming,3divjo,jakemarsh,4,Thu Jul 16 17:04:18 2015 UTC,Nice! Next time write in text please so it's easy to copy :)
iOSProgramming,3divjo,3amrous,4,Thu Jul 16 20:20:01 2015 UTC,So I do write each one in HTML/Text as well and I'd love to link to them here but I can't because of this silliness: http://www.reddit.com/r/iOSProgramming/comments/3az3sr/little_bites_of_cocoa_23_corespotlight/csiyjbj?context=3
iOSProgramming,3divjo,Jeff_Johnson,1 point,Thu Jul 16 21:40:19 2015 UTC,Is there any wrapper class for CG stuff? Something similar to Graphics object in c# or TCanvas in Delphi. Tnx.
iOSProgramming,3divjo,Jeff_Johnson,2,Thu Jul 16 23:42:36 2015 UTC,I'd recommend checking out https://github.com/schwa/SwiftGraphics by the always awesome schwa. 👍
iOSProgramming,3djswg,ThePantsThief,4,Thu Jul 16 21:06:03 2015 UTC,"/u/quellish has got the right idea. But if all you're after is brevity and you've got a need it now attitude I've gone and written macro to get the same kind of effect. Got the idea from here.  // NSSet literal. usage: $s(@1, @2, @3) #define $s(...) [NSSet setWithArray:@[__VA_ARGS__]]  // NSIndexSet literal. usage $is(1ul, 2ul, 3ul) #define $is(...) ({ \     NSMutableIndexSet *mutableIndexSet = [NSMutableIndexSet indexSet]; \     NSUInteger array[] = {__VA_ARGS__}; \     size_t size = sizeof(array) / sizeof(NSUInteger); \     for (size_t i = 0; i < size; i++) { \         [mutableIndexSet addIndex: array[i]]; \     } \     NSIndexSet *indexSet = mutableIndexSet; \     indexSet; \ })       Usage with your example:  NSLog(@""%@"", $s(@""foo"", @""bar"", @""baz"")); NSLog(@""%@"", $is(4, 8, 15, 16, 23, 42));   Edit: EXTScope -> libextobjc  Edit2: It has really been bugging me, and there is no real need to use macro expansion to get items into an array"
iOSProgramming,3djswg,quin123,3,Fri Jul 17 03:42:26 2015 UTC,Implement the change in llvm/clang Submit the change. File a radar to get support for the change
iOSProgramming,3djswg,quellish,0,Thu Jul 16 21:56:19 2015 UTC,"I never really understood why dictionaries use {} for the shorthand anyway. In most languages it's [a:b], and accesses in Obj-C use [] rather than {}. I don't think it would interfere with the syntax for message passing, due to it starting with @ and not having a receiver for the message."
iOSProgramming,3djswg,BonzaiThePenguin,2,Fri Jul 17 00:58:02 2015 UTC,JSON
iOSProgramming,3djswg,Space_Butts,2,Fri Jul 17 13:40:28 2015 UTC,I think python also uses {this: format} for dictionaries but I could be wrong
iOSProgramming,3djswg,BonzaiThePenguin,1 point,Fri Jul 17 16:04:41 2015 UTC,"Apparently most languages do it that way and my memory was failing me. I should have argued the other way around: C constructs arrays using {}, so for consistency it should have used @{} for arrays and dictionaries.  PHP uses [] for associative arrays, but it also uses => rather than : so that doesn't count. JavaScript uses {:}."
iOSProgramming,3disbb,Andrew0085,8,Thu Jul 16 16:40:25 2015 UTC,"It's not THAT difficult to implement. But any feature takes time to add and more importantly, time to maintain and test moving forward. Every feature you add is a weight that slows down future development because you have to make sure future changes don't break it.  I can't speak for the apps you listed, but for us, handoff is on the list of things we'd like to do, but is very, very low priority. If you think about it, the problem it solves is very first world, requiring you have not only 2 devices, but 2 Apple devices. And for even those users that do, it doesn't seem to be a very popular feature. People don't seem to think to use it. And for activities that would be more useful for handoff, like continuing a draft of an email on your Mac, it's a lot more difficult to implement. All that adds up to a very low demand for the feature.  That being said, there are several features in iOS 9 that build on top of handoff, including search and universal links. It's likely that more apps will adopt handoff since they will be getting more bang for their buck. I know for is, universal links has been something we have been wanting for years and will probably add handoff as a bonus to implementing that."
iOSProgramming,3disbb,davbeck,6,Thu Jul 16 17:04:37 2015 UTC,"While we're here, why the heck doesn't Messages handoff the current draft?"
iOSProgramming,3disbb,ThePantsThief,1 point,Thu Jul 16 17:23:11 2015 UTC,To the feedback page!
iOSProgramming,3disbb,johnwickham,6,Thu Jul 16 20:28:20 2015 UTC,I remember watching one of the conferences that showed that it is possible to handoff from website to an app. And it was fairly simple. However no one seems to care about that...
iOSProgramming,3disbb,dGasim,3,Thu Jul 16 17:01:23 2015 UTC,"Most devs are probably like me and had no idea how simple it was. I saw the cocoa bite about it the other day and was amazed. If I had a Mac app I'd implement it right away.  If not that, a lot of devs probably don't have a Mac app or don't think the experience would be vastly improved by the addition of handoff."
iOSProgramming,3disbb,ThePantsThief,1 point,Thu Jul 16 17:21:59 2015 UTC,Do you have a link to that talk? I'd love to implement  that!
iOSProgramming,3disbb,FourMoreCups,1 point,Fri Jul 17 11:11:26 2015 UTC,http://redd.it/3bw0p0
iOSProgramming,3disbb,ThePantsThief,1 point,Fri Jul 17 16:01:58 2015 UTC,"Handoff is also incredibly new - anything recently introduced will take about 1-2 years to become mainstream within the App Store.    See: http://www.ideacouture.com/blog/wp-content/uploads/2009/08/curve-499x275.jpg  Right now, the only people releasing Handoff apps would be the innovators and early adopters - teams that are built around agile, quick development.  A lot of programmers don't have this luxury; many companies are burdened with layers of bureaucracy plus the nightmare known as regression testing.  In addition, many apps are written my indie shops - one or two people who would rather focus on core functionality than ""wishful thinking"" features.  The functionality will become commonplace. Eventually.  (As a pre-teen - and I'm 30 now - I always wondered why cars didn't feature an aux jack so you could pipe music right into the sound system.  It's commonplace now, and I'm damn pissed I didn't push to try to get that idea patented.)"
iOSProgramming,3disbb,anwserman,1 point,Thu Jul 16 20:57:48 2015 UTC,If you're 30 aux jacks in car stereos were already around (just not as ubiquitous) when you were a pre-teen.
iOSProgramming,3dj316,boboguitar,2,Thu Jul 16 17:58:25 2015 UTC,"Parse has some obscure bugs and a random features that should be there but aren't, but overall it's great. It's absolutely worth it. If you don't need 30 requests per second, then you don't. That's something you need to figure out for yourself."
iOSProgramming,3dj316,nonofap111,1 point,Thu Jul 16 18:35:48 2015 UTC,Awesome. Push notifications do well for you?
iOSProgramming,3dj316,dcpc10,1 point,Thu Jul 16 23:32:20 2015 UTC,"You'll have to take time to do it in cloud code for best results, but CC is really straightforward."
iOSProgramming,3dj316,r-w-x,1 point,Fri Jul 17 05:54:59 2015 UTC,"Prase is really decent. I would say the only thing missing from it is the possibility to do more complex queries (sums, averages, etc.) without resorting to CloudCode (which is pretty easy, actually). Hard to think of anything negative to say about it."
iOSProgramming,3dj7vp,amichail,4,Thu Jul 16 18:32:39 2015 UTC,It can do. It's worth asking and stating your case calmly (using the Contact Us links on iTunes Connect). I've had a couple of obviously erroneous/malicious reviews removed when the people writing the reviews were plainly talking about something that couldn't be the app reviewed.
iOSProgramming,3dj7vp,rglassey,1 point,Thu Jul 16 18:40:15 2015 UTC,"Yes, it does work, you can use iTunes and there's a report a concern button that you can use that's along side the review."
iOSProgramming,3df390,inhoc,2,Wed Jul 15 19:45:42 2015 UTC,"Nice work. Looking at this, I realize that programming complications must be a total pain in the ass. I feel like there could be a more universal solution."
iOSProgramming,3df390,FR_STARMER,2,Wed Jul 15 23:04:14 2015 UTC,Thank you! Yeah my company is starting to brainstorm right now with ideas and implementations. It's not as straightforward as you'd think.
iOSProgramming,3dgayi,air6199,5,Thu Jul 16 01:17:56 2015 UTC,"I don't think it will be seen as spam if you post to a relevant sub. I posted my workout app to /r/Fitness a while back, and was met with good feedback."
iOSProgramming,3dgayi,sucksatmostthings,2,Thu Jul 16 05:38:26 2015 UTC,That's reassuring!
iOSProgramming,3dgayi,QuantumHoneybees,1 point,Thu Jul 16 06:42:44 2015 UTC,"Did you get permission from the mods? Also, can you link to the app? (:"
iOSProgramming,3dgayi,sucksatmostthings,1 point,Thu Jul 16 15:55:02 2015 UTC,I did not ask the mods. It is a personal training app so it was relevant to the whole sub. here is the app
iOSProgramming,3dgayi,QuantumHoneybees,2,Thu Jul 16 20:42:20 2015 UTC,"Great app, thanks!"
iOSProgramming,3dgayi,StunnerAlpha,6,Thu Jul 16 23:08:21 2015 UTC,"Don't forget to post it up here as well. May not get many upvotes (lots of folks like to downvote things like that -- jelousy, perhaps?) but you will get a lot of eyeballs. Also be sure to mention its your first app and you are new and are looking to feedback, those tend to fare better then just linking to your app."
iOSProgramming,3dgayi,nullput,1 point,Thu Jul 16 09:21:33 2015 UTC,"Fantastic, thanks a lot!"
iOSProgramming,3dgayi,skoll,1 point,Thu Jul 16 09:44:42 2015 UTC,"Upvote for :)   (lots of folks like to downvote things like that -- jelousy, perhaps?)   Reddit is rampant with this."
iOSProgramming,3dgayi,nullput,0,Thu Jul 16 14:24:32 2015 UTC,"lots of folks like to downvote things like that -- jelousy, perhaps?   Jealousy?  Far from it.  This sub is called iOSProgramming.  Reddiquette demands that we downvote things that aren't relevant to iOS programming.  See guide to rediquette: ""If you think it does not contribute to the subreddit it is posted in or is off-topic in a particular community, downvote it.""  A link to the store page of an app is about as relevant to programming as a picture of a house is to carpentry.  Or a picture of your kids is to childhood psychology.  If you just want someone to test your app, there are reddits where that is appropriate.  But this reddit is for discussions about making apps, not the apps themselves.  So write up a post on some interesting challenge you encountered and how you solved it.  Talk a bit about the libraries you used.  Talk about new iOS 9 features you took advantage of.  Show source code.  If you do any of those things then people don't care if you are also promoting something.  But if you just link to a store page and say ""Hey I worked really hard on this and want you to check it out"" there's a good chance it will get downvoted by people who aren't interested in some random app.  And jealousy will have nothing to do with it."
iOSProgramming,3dgayi,skoll,0,Thu Jul 16 17:05:20 2015 UTC,"He did not link to the app. He's not asking for testers. He's asking for promotion tips and if you think promotion is not a big part of iOS Programming, well..."
iOSProgramming,3dgayi,nullput,1 point,Fri Jul 17 10:20:36 2015 UTC,Of course he didn't link to the app in this post.  Nothing in my post is about this post of his.  I responded to someone saying he should post the link to his app back in /r/iOSProgramming and I explained why some readers will downvote that future post if it is done incorrectly.  This post of his is very relevant to /r/iOSProgramming and I have upvoted it.
iOSProgramming,3dgayi,skoll,1 point,Fri Jul 17 14:58:23 2015 UTC,"In that case, you use far more words than needed to say 'don't post it in iOS Programming, post it in iOS Games where it belongs'"
iOSProgramming,3dgayi,CQH,1 point,Fri Jul 17 16:20:43 2015 UTC,"Ok, you win that point."
iOSProgramming,3de1c5,rizzledizzle,2,Wed Jul 15 15:18:58 2015 UTC,It's a nice solution but it seems that by getting the user to sign up before downloading the app (rather than just redirecting to the app store) that it's a solution to a problem you've created. What's the reasoning behind this flow ?
iOSProgramming,3de1c5,askoruli,4,Wed Jul 15 23:06:59 2015 UTC,"I just responded to /u/Killectro with an explanation, but the reasoning behind the flow is that when a user has been sent something / invited by a friend in a new app, the chances of success are significantly lower if you just redirect them to the app store to sign up for the app.   It's much higher if you can give the user something already for having clicked the link (e.g. I sent you photos, and by clicking the link you can already view some of them (and to view the rest you should sign up)), than telling them to go get an app from the app store (and for invitations, hope they sign up with the same email address or phone number they were invited with).  Hope that helps explain it!"
iOSProgramming,3de1c5,WatermelonFlavored,3,Thu Jul 16 00:44:38 2015 UTC,Very insightful article. I can't wait to start implementing Safari View Controllers in some of my projects. Having features from Safari available to my in app webpages will definitely give my applications better functionality as well as User experience. Reading this article got me interested in watching the WWDC15 talk about Safari View Controller which is also very informative about the applications of the new web browsing implementation.
iOSProgramming,3de1c5,Killectro,4,Wed Jul 15 19:02:12 2015 UTC,"I highly recommend watching that video. After describing how you can replace your in-app web browsers with Safari View Controller, he goes on to suggest that we should use Safari View Controller when we do oAuth requests (e.g. signing in via Facebook or Twitter, etc.), because if you are already authed in Mobile Safari, it'll Just Work™. That's what got me thinking about using it for our OWN authentication."
iOSProgramming,3deh4j,jakemarsh,1 point,Wed Jul 15 17:14:06 2015 UTC,anyone know if there are objective c versions of this? :)
iOSProgramming,3dgqcl,senatorkang,6,Thu Jul 16 03:29:31 2015 UTC,It uses 'in use' authorization . In use means I am using the app right now. You want to use requestAlwaysAuthorization from the CCLocationManager.  You don't have the proper settings which is the alwaysAuthorize which means that it can run in the background mode.
iOSProgramming,3dgqcl,FutureIsMine,1 point,Thu Jul 16 05:15:24 2015 UTC,"Oh! That's easy. I thought that 'always' meant that even if the app is terminated it would know where you are.. somehow.. and that 'in use' meant active or background.   Thanks, I'll take another look at it!"
iOSProgramming,3dgqcl,15458434,-8,Thu Jul 16 07:32:30 2015 UTC,"There is a navigation key for accuracy, that way you don't drain the battery. It's not exactly clear to me why you want your app in de App Store. If you put it there everybody in de world is a potential customer."
iOSProgramming,3dezyk,decide,11,Wed Jul 15 19:24:03 2015 UTC,"""The real problem is that programmers have spent far too much time worrying about efficiency in the wrong places and at the wrong times; premature optimization is the root of all evil (or at least most of it) in programming."" - Donald Knuth   Premature or over abstraction can be just as bad as not doing enough abstraction. The art is in finding the right balance.  Getting this right comes with experience, talent, and refactoring. :)  You both sound pretty new to the game, so I would focus on getting your minimum viable product working, demonstrate the value, and get customers/investors excited.  Then look to how you could refactor the code to make it easier to maintain/extend."
iOSProgramming,3dezyk,jzed,3,Wed Jul 15 22:25:49 2015 UTC,"This really boils down to what you mean by ""abstracted"". I've got 10 years of C# experience (and it's crazy I can say that without rounding anymore) and I'm still struggling with finding the right way to design my code. Here's some things to think about and talk over with your partner. Welcome to a long journey.  (I'm going to use ""file"" really lose here. It can mean anything, a class, interface, whatever. Think of it as ""some unit of code at least as large as a single function. Most of this advice is platform and language-agnostic.)  If you work with analogies best, this is a good way to start.   Large files are like a pocketknife. When it has 1 blade, using the knife is trivial. When there are 2 blades, it is more useful, but still manageable. At 12 tools, you start to spend more time thinking and searching for the right tool than solving problems. At 30 tools, the blasted thing doesn't even fit in your pocket anymore, and after the 4th or 5th wrong selection you declare ""good enough"" and use a knife blade as a screwdriver.  Small files are like single-purpose tools. You don't think about what a corkscrew does, nor do you consider it if you're trying to cut a piece of wood. When you've got 4 or 5 tools, you can lay them out nicely and access them easily. But you've got that one drawer in your kitchen with 20 or more tools in it, don't you? It's hard to find the tool you want in that mess. What you need at that point is an organization system that lets you quickly find the tool you seek.   The ""small file"" approach could easily have 4x or more files compared to the ""large file"" approach. But having no abstractions means testing can be very hard when you have to interact with things like databases or web APIs. The large file approach tends to require end-to-end testing for every edge case, which is often difficult enough it doesn't get done. Smaller files, especially with abstractions, are easier to test without complex configuration. When your classes have automated tests, you can run those tests every time you change something to verify you haven't broken old functionality. When your tests tell you the umpteen tiny pieces that make up your application work in isolation, you can be far more confident the one big piece that glues them together works.  So don't worry about abstraction, worry about testing. When you try to write tests, you'll find yourself breaking things into smaller pieces and hiding complex things behind abstractions by instinct, and the code you write will work the first time you try it more often.  For a brief example, suppose you have to communicate with a web API that, when phone connectivity is bad, returns 5xx and 4xx error codes or drops entirely almost as often as 200 and a response. You want to make sure your program behaves properly when this happens. You could:   Delegate all REST interaction to a single file that makes the requests and interprets them, then set up a bad wifi network that causes a bunch of problems and test for a few hours until you think you've seen most of the probable error responses. Create several files: A protocol that makes REST requests and returns a result that indicates if an error occurred, the object that represents the result, a class that implements the protocol and makes real REST requests, and a class that implements the protocol but returns simulated results. To test, first you write a series of tests that use the fake REST class to return every result you expect, and verify your program does what you expect. Then, you take the program to the ""bad wifi room"" with the /real/ class running.   Which seems more likely to let a bug slip through? Isn't it easier to have something spit out error results than trying to coerce a third-party server into returning specific responses? Maybe the ""bad wifi room"" takes a while to set up, having the ability to sanity check before doing that effort is nice, isn't it?"
iOSProgramming,3dezyk,Slypenslyde,2,Thu Jul 16 16:37:53 2015 UTC,"You could force https://en.wikipedia.org/wiki/Interface-based_programming.  The idea is that you create a protocol that defines the interface of a class. Then the class implements it. Other consumers of that class know about the protocol but nothing about the implementing class. If the implementation needs to change, you don't need to change all the protocol references.  @protocol AuthenticationProvider { -(BOOL)loginWithUsername:(NSString*)username password:(NSString*)password; } @end  @implementation XXXAuthenticationService <AuthenticationProvider> -(BOOL)loginWithUsername:(NSString*)username password:(NSString*)password {      //Contact Server for Login } @end  @interface AuthenticationViewController : UIViewController @property id<AuthenticationProvider> authenticationProvider;  -(instancetype)initWithAuthenticationProvider:(id<AuthenticationProvider> authProvider); @end"
iOSProgramming,3dezyk,paulryanclark,2,Wed Jul 15 20:40:34 2015 UTC,"There seems to be 2 issues here; Abstraction and file size. I'll address each independently   Abstraction: Follow the rule of 3. So if you're doing the same thing 3 times then you should be abstracting it. When you've only done something twice you probably don't know enough to develop a sensible abstraction but you should by the third time. Don't abstract just for the sake of it or for ""what if"" scenarios. You'll end up with a far more complex codebase. File size, or rather class size: A large class usually points to a class that is doing too much and should be refactored into smaller more modular pieces. To get a rough idea what you're dealing with, how big is your largest class?"
iOSProgramming,3dezyk,askoruli,1 point,Wed Jul 15 23:56:58 2015 UTC,700 lines 😢
iOSProgramming,3dezyk,StunnerAlpha,3,Thu Jul 16 03:14:06 2015 UTC,"That isn't bad at all... I have worked on projects with LoC of several files running in the thousands... Just ensure it doesn't get that big and you should be fine. Also, keep in mind that (new line) spacing has a considerable effect on this depending on what type of coding style policy you adopt. But it is good that you are thinking of things like this, especially so early on."
iOSProgramming,3dgj9x,dnaland2,2,Thu Jul 16 02:26:48 2015 UTC,The Big Nerd Ranch has some great books :) check out their objc guide if you want to use objc. I think they have a swift book too.
iOSProgramming,3dgj9x,ThePantsThief,1 point,Thu Jul 16 03:23:24 2015 UTC,Thanks :)
iOSProgramming,3dgj9x,Lucky_Chuck,1 point,Thu Jul 16 03:55:55 2015 UTC,"I've just completed the ios7 objective-c book. I thought it was really good, but you definitely need to know programming, specifically object oriented programming for it to be worthwhile."
iOSProgramming,3dgj9x,jtbrown,2,Thu Jul 16 20:21:02 2015 UTC,"In addition to the Big Nerd Ranch books (which are excellent), lots of people like the Stanford Lectures on iTunes U."
iOSProgramming,3dgj9x,StunnerAlpha,1 point,Thu Jul 16 20:38:13 2015 UTC,Try this: https://www.codeschool.com/courses/try-ios It's great because its interactive and teaches you in the browser.
iOSProgramming,3dgj9x,acingg,1 point,Thu Jul 16 09:24:31 2015 UTC,I'm in your same boat and did a bit of similar research. I just bought the Big Nerd Ranch book on objc and also signed up for this class on Udemy with a friend (found a code online that gets you the class for $10 instead of $200) https://www.udemy.com/complete-ios-8-and-xcode-6-course-make-iphone-ipad-apps/ Let me know if you want to coordinate with us/our schedule
iOSProgramming,3dgj9x,anwserman,1 point,Thu Jul 16 18:52:50 2015 UTC,"I would hold off on learning iOS programming from the immediate get-go. I'm not stating you shouldn't learn, but programming in and of itself can be a difficult task.  My main job is a Microsoft C# shop, and I have experience in programming vanilla C++... it's taken a bit to get used to programming in Objective-C and I haven't touched doing hard-core stuff.  Which is why I recommend using SmallBasic: http://smallbasic.com/  It won't help you make an iOS app immediately, but it will help you learn the basic conventions of programming in a beginner-friendly environment.  You'll be able to learn about objects, functions, variables, and program flow in an environment that hides or manages all of the hard parts for you.  Best part, it's free!  Once you manage and learn the fundamentals, you could start leaping upwards into more advanced languages and environments, such as learning how to program iOS apps using Objective-C and Swift.  (You also need to pay $99/year to develop iOS apps, plus a Mac.  Pay this fee once you're sure you really want to learn).  That being said, the best way to learn is to come up with a small project and just try implementing it.  Try making a lap counter for when you exercise, or if you're feeling up to a challenge, a small app that keeps track of your bowling scores.  The only way to learn, is to learn from your mistakes.  You got to try!"
iOSProgramming,3dgj9x,jtbrown,3,Thu Jul 16 21:13:32 2015 UTC,Small correction: you can get Xcode for free and start building apps without paying the $99 fee. You only have to pay that once you're ready to install the app on your device (and submit to the App Store).
iOSProgramming,3deu9h,adamwulf,3,Wed Jul 15 18:44:38 2015 UTC,"Good article, been using that method myself. Another tip is that if you are using CocoaPods for your dependency mgmt, they generate licences for you: https://github.com/CocoaPods/CocoaPods/wiki/Acknowledgements"
iOSProgramming,3deu9h,awnton,1 point,Thu Jul 16 08:23:33 2015 UTC,"i rarely use cocoapods, but I'd completely missed that feature of it - thanks for the heads up on that"
iOSProgramming,3dgaas,JohnAdamZiolkowski,5,Thu Jul 16 01:12:21 2015 UTC,You still need to pay the $100 fee to release apps.
iOSProgramming,3dgaas,dcramps,5,Thu Jul 16 01:32:03 2015 UTC,Don't try using OS X on anything other than a Mac. It's only trouble to keep your machine running and even more trouble to impossible with Xcode when code signing your app for the App Store. Get a cheap used Mac mini from 2011 and stuff it with at least 8Gb of memory.
iOSProgramming,3dgaas,15458434,1 point,Thu Jul 16 09:06:45 2015 UTC,"My main OS X machine has been a hackintosh since 2008. It's never been easier to run a decent hackintosh, with 10.10.4 and 2FA in iMessage, you can even get Facetime, Handoff and Concurrency working without too much issue."
iOSProgramming,3dgaas,jedrekk,1 point,Thu Jul 16 11:02:20 2015 UTC,"Same thing for xcode. If you need to do code signing in xcode, which will happen when compiling for a device or the App Store, it will verify your machine. If something is wrong you get all kinds of code signing error's that don't mean anything to you."
iOSProgramming,3dgaas,15458434,1 point,Thu Jul 16 18:28:28 2015 UTC,"Can you upgrade the memory in Mac minis?  I looked at the apple store just now, and the cheapest Mac mini model bumped up to 8GB ram and with a mouse comes to over $800.  Still better than any of their other models, but unlike with an iMac or macbook, I'd have to buy a monitor as well."
iOSProgramming,3dgaas,15458434,2,Thu Jul 16 11:10:16 2015 UTC,Anything before the late 2014 model you can upgrade. RAM is easy to do. For the hard drive you have to take the entire thing apart. Try to get your hands on one of those with a fusion drive.
iOSProgramming,3dgaas,mariocarvalho,2,Thu Jul 16 18:26:52 2015 UTC,Don't install MacOS on a virtual machine... You can always rent a mac in the cloud!  https://www.google.pt/search?client=safari&rls=en&q=remote+osx&ie=UTF-8&oe=UTF-8&gfe_rd=cr&ei=uomnVeCKL4as8we-4oCYBQ#q=rent+mac+in+the+cloud
iOSProgramming,3dgaas,shiggie,1 point,Thu Jul 16 10:40:51 2015 UTC,Very interesting!  This is what I was thinking.  Is it possible to build to a device using this method?
iOSProgramming,3dddea,cathkay,1 point,Wed Jul 15 11:40:44 2015 UTC,ELI5?
iOSProgramming,3dddea,DJjizz,1 point,Wed Jul 15 12:41:04 2015 UTC,Playgrounds?  Director had this in 1990 in the Message Window.
iOSProgramming,3dey5m,lunarchaos42,2,Wed Jul 15 19:11:48 2015 UTC,Delete the App in de simulator. You can't always change the data model and try to open an older CoreData file with it.
iOSProgramming,3dey5m,15458434,1 point,Wed Jul 15 19:20:32 2015 UTC,That fixed the error of black screen. Thanks!
iOSProgramming,3dey5m,happydanc3,2,Wed Jul 15 19:24:45 2015 UTC,"As an aside, you should migrate a db in the future rather than delete it. Xcode gives you lightweight migrations for core data that are really easy to do."
iOSProgramming,3dey5m,askoruli,3,Wed Jul 15 22:25:03 2015 UTC,Keep in mind you only need to do this for each version you release. When you're developing it's probably easier to just delete. I've got my code setup so in debug if I get a 134100 error I just delete the file and try again.
iOSProgramming,3dey5m,happydanc3,2,Wed Jul 15 23:26:11 2015 UTC,"Definitely, I do the same."
iOSProgramming,3dey5m,15458434,2,Wed Jul 15 23:32:59 2015 UTC,The less lightweight migrations aren't much of a hassle either. You just need a bunch of those NSEntityMigrationPolicy objects.
iOSProgramming,3dey5m,happydanc3,1 point,Wed Jul 15 22:46:29 2015 UTC,"Awesome I will keep this in mind for future projects! I am on my last week of this course, but I am planning to take more training courses online."
iOSProgramming,3dey0b,doraemon-cat,1 point,Wed Jul 15 19:10:43 2015 UTC,Take a look at this SO post: Add iPod Equalizer Effect Using AVPlayer
iOSProgramming,3dey0b,succeededcoma,1 point,Wed Jul 15 20:24:11 2015 UTC,See if https://github.com/TheAmazingAudioEngine/TheAmazingAudioEngine can do what you are looking to do (I am curious as well).
iOSProgramming,3dey0b,StunnerAlpha,1 point,Thu Jul 16 09:47:48 2015 UTC,"With an HLS stream, no. With HTTP Fast Start, yes but it takes some work."
iOSProgramming,3dey0b,quellish,1 point,Fri Jul 17 01:49:24 2015 UTC,"Thanks.  I managed to get it working somewhat using AVAudioEngine by connecting an AudioFile node through effects nodes.  Only problem is that AVAudioFile is designed to only work with local files rather than over the network. I found a workaround by pre-caching the file to NSData, but then that obviously waits for the file to be downloaded before it can be played.  Is there a way to cache and play the file before the file is completely downloaded?"
iOSProgramming,3dd74a,r-w-x,1 point,Wed Jul 15 10:15:33 2015 UTC,"Not sure about multiple 4K displays, but I would opt for the dedicated graphics just to be safe/better future proofed. Here is a nice tech spec link direct from Apple: https://support.apple.com/en-us/HT202856"
iOSProgramming,3dd74a,StunnerAlpha,1 point,Wed Jul 15 10:23:22 2015 UTC,"I use a late-2013 15"" base model rMBP with Iris and just one Dell P2715Q 4k monitor. It runs beautifully most of the time, but you can see it struggle while animating on some websites and during full screen window transitions like Mission Control (par for the course in Yosemite). I can't imagine running more than one 4k display from an rMBP without discrete video."
iOSProgramming,3dd74a,RECURSIVE_META_JOKE,1 point,Wed Jul 15 10:40:27 2015 UTC,"I was in the same situation, got the mono price 4k for about $400 and have been happy with it."
iOSProgramming,3dd74a,quellish,1 point,Wed Jul 15 15:00:38 2015 UTC,"Get one one those Cinema Display's of 27"". I did the same thing made my life a lot easier."
iOSProgramming,3dev4g,ValarMorghulis6626,1 point,Wed Jul 15 18:50:45 2015 UTC,Will the app be networked? Or will users only save journals locally?
iOSProgramming,3dev4g,theprangnetwork,1 point,Wed Jul 15 18:57:15 2015 UTC,"By networked, do you mean will different users communicate with one another? If not, I'm not sure what you mean, but please do elaborate!  If this answers your question, pretty much what I envision is users typing a journal entry into the app, saving it, then having access to their previous journal entries, whether they are saved on the phone or in an online database somewhere (but not communicating with other users)"
iOSProgramming,3dev4g,Syrinathos,3,Wed Jul 15 19:00:24 2015 UTC,"If you want local storage, Core Data is obviously a great choice for the task. Cloud storage is, as you pointed out, a task for a web service such as Parse; and if you want to keep them up to date with each other, Ray Wenderlich has a tutorial on how to do just that."
iOSProgramming,3dev4g,theprangnetwork,1 point,Wed Jul 15 19:08:52 2015 UTC,"Will the entries be saved in an online database? Or kept locally on the device? Will they be available for everyone to see, or just the person who originally wrote them?"
iOSProgramming,3dev4g,theprangnetwork,1 point,Wed Jul 15 19:08:40 2015 UTC,"An online database would be preferable, so that (for instance) if I made a website the journal entries would be there. If this is the route I decided to go down, what would your advice be for how I should structure it?"
iOSProgramming,3dev4g,alienzingano,1 point,Wed Jul 15 19:14:35 2015 UTC,"Use parse.com. It's a great choice. I think you should read up on PFObject subclasses, so that you can create a data model in Parse to mimic your local data structure. Parse also provides great user management and access control. It's an excellent choice and I've built many apps on top of it. Also, Parse provides excellent data caching and local storage."
iOSProgramming,3dev4g,alienzingano,1 point,Thu Jul 16 01:05:24 2015 UTC,"Sounds like you're planning to use Parse which I think is a good plan for this kind of project. You'd want at least two tables, one of PFUsers and the other of diary entries. Within the latter you'd have a column that's a pointer to the PFUser, so that you can make a query to retrieve the entries for that user."
iOSProgramming,3dev4g,alienzingano,1 point,Wed Jul 15 19:19:30 2015 UTC,"Thanks for the info! As a followup, why would I want to use 2 tables and not just combine then into 1, especially if the second table has a column that has PFUsers?"
iOSProgramming,3desxs,LaserWolfTurbo72,2,Wed Jul 15 18:35:18 2015 UTC,"It would be a very bad UX decision to disable the rubber band effect. You should hard code an exception for this case, say, if the content offset is greater than the content height, don't show the view."
iOSProgramming,3desxs,ThePantsThief,1 point,Wed Jul 15 19:08:26 2015 UTC,"This is the route I ended up going. I tacked on an arbitrary value, and if the position at the table is greater than this, I don't touch the constraint (i.e. I dont show/hide the view/bar in this circumstance)."
iOSProgramming,3desxs,succeededcoma,1 point,Wed Jul 15 19:27:16 2015 UTC,Does this apply in your case? UIScrollView - Bounce
iOSProgramming,3denuv,Alex30,8,Wed Jul 15 18:00:59 2015 UTC,"Depending on the complexity of the app and how much time you have, 3 to 5 months could be totally realistic."
iOSProgramming,3denuv,suprabobo,3,Wed Jul 15 18:10:27 2015 UTC,I put an app in the app store over a period of eight weeks. I went through learning multiple storage methods during that period as well. I now have an app in the app store.
iOSProgramming,3denuv,succeededcoma,3,Wed Jul 15 18:51:02 2015 UTC,"As the others have said, it's entirely possible to do it in that timeframe given the right complexity to skill set ratio.   For an app I just published, it took nearly two years since I thought the ideas were simple enough at the start. But as I went on, I realized they were a bit more complex than I'd thought, and ended up getting discouraged and walking away.   So keep it as simple as you can in the beginning, and never stop learning new things."
iOSProgramming,3denuv,Syrinathos,3,Wed Jul 15 19:11:42 2015 UTC,I have a number of apps I made for corporations that had 1month timelines. That's why I quit that job.
iOSProgramming,3denuv,theBigDaddio,2,Wed Jul 15 19:27:57 2015 UTC,"3-5 months? Perfect. I started coding about a year ago in Objc and by November I had an app I could have easily submitted to the App Store.   A year later I trashed it and rewrote it from scratch, but that's because it was a rather large app (fully featured Reddit client) and I changed my mind about much of the UI.  It all depends on the complexity of the app and how satisfied you are with your work."
iOSProgramming,3denuv,ThePantsThief,1 point,Wed Jul 15 19:10:25 2015 UTC,"i started from scratch too and spent many many 18 hours a day coding. about 3 iterations of staring from scratch later, i was able to build a decently complicated app (backend parse, local storing in core data, lots of view controllers and stuff, animations and charts etc) in about 6 months. Usually I notice 80% of the work is done in 20% of the time, rest is just tweaking small things and fixing bugs on the fly. So your goal is realistic imo. Ofcourse many things come into play for a successful app - design, bugs/performance etc."
iOSProgramming,3denuv,pranoy1c,1 point,Thu Jul 16 16:28:32 2015 UTC,I had an app on the app store one month after learning Swift but I do have a programming background (C++) so that was a huge start. If your new to programming I think 2-5 months is completely realistic. Shoot for something simple at first and just get it out there!
iOSProgramming,3delqu,Alex30,3,Wed Jul 15 17:46:36 2015 UTC,"This is the part you should be looking at: this class is not key value coding-compliant for the key ageInput  The first thing I would make sure of is that every UI Object you have is wired correctly. You can get this error if something isnt connected the right way.  Go into your storyboard and cmd-click on the files owner. when the object inspector window pops up, make sure you dont have anything x'd out."
iOSProgramming,3delqu,succeededcoma,1 point,Wed Jul 15 18:02:56 2015 UTC,Worked! Thanks so much :)
iOSProgramming,3delqu,succeededcoma,1 point,Wed Jul 15 18:05:35 2015 UTC,Perfecto!
iOSProgramming,3dh1tg,rdlhd,3,Thu Jul 16 05:22:28 2015 UTC,Most likely an Apple's server issue. Try it later.
iOSProgramming,3dh1tg,Tsupaero,2,Thu Jul 16 08:48:05 2015 UTC,"You can always download from Member Center, Backup your phone and make a clean install of the last beta"
iOSProgramming,3ddxop,nathreed,0,Wed Jul 15 14:52:05 2015 UTC,Kind of sounds like NDA content that would be better asked on the Apple Developer Forum.   Particularly since you ask about Beta 3 which is a developer NDA build and not the public beta ....
iOSProgramming,3ddxop,northernpenguin,3,Wed Jul 15 16:06:02 2015 UTC,Didn't Apple relax the rules of the NDA just recently so that betas could be more openly discussed?
iOSProgramming,3d9w5t,jakemarsh,1 point,Tue Jul 14 17:12:09 2015 UTC,Opaque?
iOSProgramming,3d9w5t,antgly,2,Wed Jul 15 01:52:32 2015 UTC,"I'm not really familiar but it looks like part of swift handling of swift-to-c bridging. SecItemCopyMatching will set an unmanaged unsafe mutable pointer, toOpaque will get the c pointer (or really its swift representation), then opaque will convert to an unmanaged class reference"
iOSProgramming,3d9w5t,shitidiotturtle,2,Wed Jul 15 08:10:45 2015 UTC,yep!
iOSProgramming,3dbz52,FickleFred,6,Wed Jul 15 02:13:23 2015 UTC,"QR codes can be used for whatever you want, it's just a piece of data or text encoded into a QR image. In my app I make that piece of text a URL which is interpreted by the app as a link to the user profile page. Also iOS actually has everything you need to create and read QR codes. Look at CIfilter/CIImage for creating them and AVCaptureDevice/AVCaptureMetadataOutput for reading them"
iOSProgramming,3dbz52,askoruli,1 point,Wed Jul 15 02:24:26 2015 UTC,"Awesome, happy for that clarification. Thanks for the tip on creating/reading them! I'll look into it"
iOSProgramming,3dc6ir,anwserman,2,Wed Jul 15 03:13:01 2015 UTC,and also pushing the album artwork update into a different thread   What's your thought process on this from a memory usage standpoint?
iOSProgramming,3dc6ir,dcramps,1 point,Wed Jul 15 04:15:06 2015 UTC,"It's an exercise application, and the music can change constantly - if the user has, let's say 200 songs and somehow manages to go through them all - there's now suddenly 200 pieces of album art loaded into memory, that I cannot free.  I'm new to programming in Objective-C (but not to programming in general), and I've caught a bunch of other allocation hogs.  I just cannot resolve this one.  So right now, I'm loading the high-quality album art into the MPNowPlayingInfo center.  I'm thinking of shrinking the art down to a smaller size and then setting it.  The display quality will be poor, but I hope they're focusing more on running (and avoiding traffic) than looking at their lock screen.  EDIT:  I just realized you quoted the ""different thread"" aspect of my original post.  The autoreleasepool drains when a thread finishes, and I was hoping that by punting it into a new thread - the few lines of code that actually change the album art - that any temporary memory would be freed up."
iOSProgramming,3dc6ir,dcramps,1 point,Wed Jul 15 04:35:18 2015 UTC,"if the user has, let's say 200 songs and somehow manages to go through them all - there's now suddenly 200 pieces of album art loaded into memory, that I cannot free   I don't follow..."
iOSProgramming,3dc6ir,askoruli,1 point,Wed Jul 15 04:50:24 2015 UTC,"When a user changes the song in my music app, I change the album art displayed on the lock screen (and the heap increases by around 800KB).  If the user plays 200 different songs in my app, that's 200 pieces of album art loaded into the heap.  200 songs x 800KB = 124MB.  Now, 200 songs is a huge stretch - but if you're running for two hours, and skip a couple songs from playing after a few seconds - it could happen."
iOSProgramming,3dc6ir,askoruli,2,Wed Jul 15 04:57:15 2015 UTC,See what the heap allocation is like if you continually change music tracks. Does your app just continue to consume more memory until it crashes or does it peak or perhaps drop once it reaches a certain point. If it's the latter then it seems like there's some caching going on and I wouldn't worry about it or try to fight it.
iOSProgramming,3dc6ir,15458434,1 point,Wed Jul 15 04:21:25 2015 UTC,"It continually keeps growing - to an extent.  The heap won't increase if I have already played the music once in my app already; which is why I think it's caching the album art. What I haven't done, however, is keep hitting forward until it hits 512MB of heap (my phone is a 5S, so I have 1GB of total RAM.  Warnings start being hit at half of memory, if I recall). It's a casual growth, of about 600-800KB for each track.  I'll have to download more songs from iTunes Match, as I only have 160 stored on my phone right now.  The only thing I can say is that the workout functionality isn't completed yet; so at the moment, it's just a music player that slows down/speeds up the music.  I've used it to listen to just my music for the last few hours without it crashing or bugging out.  It's built pretty solid, but being my first iOS project where I've actually written Objective-C code (I've always used other platforms, like App Game Kit or Unity to do the heavy lifting) I'm simply nervous."
iOSProgramming,3dc645,Syrinathos,2,Wed Jul 15 03:09:21 2015 UTC,"It's hard to say exactly what's wrong because your architecture is unclear.   Are you creating your custom view by initializing it directly? ([[CustomView alloc] init]) or are you using Interface Builder to tie it in? Unless you're directly calling the init function, a nib pointed at your custom view will use initWithCoder: instead of just plain init.  Your test method will work because it's working around the UIKit hitTest: restrictions for individual views. The actions your test method perform are not the (complex sequence of) actions that occur when you tap the screen.  Take a look at the UIViewController view layout sequence (big fat guide here.) From the rough sketch you're giving me, my best guess would be you're not giving this custom view a frame at all (and therefore a bounds for iOS to know where you're tapping in the custom view).   In Xcode, try using the visual view to inspect what you're seeing on screen. The right context bar of Xcode should tell you if the uitableview and subsequently the uibuttons/views have any frame/bounds.  Good Luck."
iOSProgramming,3dc645,insolent_cur,1 point,Wed Jul 15 06:09:02 2015 UTC,"Greatly appreciate the heads up on the visual debugger; I may have been under a rock when that was covered.   And I'm 99.9% certain you're right with the frames suggestion. I made sure to declare the frames for each UIView, but clearly there was something I missed.   Thanks again for the pointers!"
iOSProgramming,3dc645,pranoy1c,1 point,Wed Jul 15 19:04:03 2015 UTC,"Every time I have seen my tableview not display data, it's been because I have forgotten to set delegate AND datasource for the tableview to my view controller. I usually use storyboard instead of nibs but I think this applied to nibs too. make sure the delegate and datasource is both set to your view controller. Also put NSLog in each of the numberOfRowsInSection and cellForRowAtIndexPath methods to see if they get called after above fails."
iOSProgramming,3dd1d9,tonikami,6,Wed Jul 15 08:54:44 2015 UTC,"Yeah the title is click bait. I personally dislike clicking on something, expecting one thing and getting the complete opposite. That aside, lets talk about your videos.   I like the idea of encouraging people to kind explore what you show them and having them run into problems and work them out. Personally I prefer longer more fleshed out videos that I can work along with, I feel with your short videos I can't do that.   Don't take this as criticism, I think there is certainly a ""Market"" for quick short tutorials of this nature, it's just not my cup of tea.  Short of all of this, you speak clearly and the to the point, well done."
iOSProgramming,3dd1d9,Groydis,2,Wed Jul 15 10:03:55 2015 UTC,"Title is shit, videos are better than expected from that title ;)"
iOSProgramming,3dd1d9,Smileybutton,2,Wed Jul 15 12:07:22 2015 UTC,Agreed. The title is shit.
iOSProgramming,3dd1d9,kyussmondo,2,Wed Jul 15 16:17:23 2015 UTC,Title: Promises the impossible.  Only suckers will click.  Is that the purpose?
iOSProgramming,3dd1d9,shiggie,-5,Wed Jul 15 16:28:21 2015 UTC,"Hey guys, i made a new tutorial series just wondering what you guys think of it?"
iOSProgramming,3dd1d9,Clipstuh,6,Wed Jul 15 08:55:00 2015 UTC,I hate the title.
iOSProgramming,3dainv,tonygoold,1 point,Tue Jul 14 19:43:50 2015 UTC,"An alternative to throwing an exception is to return nil. If you have a subclass of NSObject that takes a non-null argument in its initializer, you can still go the traditional route by suppressing compiler warnings for your override of the superclass's designated initializer:  // Subclass's designated initializer - (instancetype)initWithObject:(nonnull id)object {     if (!object) { return nil; }     self = [super init];     if (self) {         // ...     }     return self; }  // Superclass's designated initializer - (instancetype)init { #pragma clang diagnostic push #pragma clang diagnostic ignored ""-Wnonnull""     return [self initWithObject:nil]; #pragma clang diagnostic pop }"
iOSProgramming,3dainv,askoruli,1 point,Tue Jul 14 19:49:15 2015 UTC,"The exception method makes sense, you've got a method that should never ever be called (and shouldn't even compile) so throw an exception if it is. Returning nil is just confusing. Also the init method can just return nil without any of that #pragma stuff."
iOSProgramming,3dainv,askoruli,1 point,Wed Jul 15 00:14:59 2015 UTC,You need to add some contrast to the code in your blog. The first few paragraphs are ok with the blue highlighting but afterwards it's a big grey blob.
iOSProgramming,3dadpk,succeededcoma,1 point,Tue Jul 14 19:10:28 2015 UTC,"While this sounds like another ""I have a great idea, I just want someone to code it for me"" type of post I will give a suggestion just in case that is not the reason.  Local mobile developer meetings. Most larger cities host these once a month. I am a member of one and attend a good percentage of the meetings. At least you will know you are taking to mobile developers.  If you are just presenting a ""wonderful idea that I am sure will sell if you could just program it"" don't expect people to fall all over it. A solid developer has heard that pitch 12 times already this month."
iOSProgramming,3dadpk,MKevin3,2,Tue Jul 14 20:00:14 2015 UTC,"Totally not another one of those, 'I have a great idea' posts. Im not looking for anyone to do the work.  While I do have a couple ideas, I am looking for one or two people that actually want to possibly start developing apps together. I have one app in the app store already. Nothing fancy at all but it was my first and I am proud of it and its actually the basis for one of the ideas I have been working on fleshing out.  Yeah....there is actually an iOS developer meetup once a month here in Austin that I have been thinking about attending."
iOSProgramming,3dadpk,Arkelias,1 point,Tue Jul 14 20:07:18 2015 UTC,"I'll second the suggestion then. If you're already skilled and want to meet people of similar level, meetups are great."
iOSProgramming,3dadpk,15458434,1 point,Tue Jul 14 21:41:51 2015 UTC,Invest in friendships with like minded people. It's better to build a business with friends.
iOSProgramming,3da1ue,ExplicitG,3,Tue Jul 14 17:51:03 2015 UTC,I'm not 100% clear on what your app does but if you only have 50 requests per day can you have a back end server of your own query the API 50 times a day and update a database on your own server?  Then your app can make unlimited requests to your own server which has data up to date every half hour or so.  It depends on how often the data changes and what kinds of queries you want to make though.
iOSProgramming,3da1ue,luxurychair,1 point,Tue Jul 14 18:17:42 2015 UTC,"I believe the data stays the same. I guess you could do that on the free plan (10 per day) but, I have no idea how I would get that all set up."
iOSProgramming,3da1ue,Krillere,1 point,Tue Jul 14 18:53:11 2015 UTC,"Find a website that contains a lot of what you want. Scrape said website, and throw this into a file in the app.  Why you want to add quotes I don't get. You can do it with code, why would you ever do it manually?!"
iOSProgramming,3da1ue,Krillere,2,Tue Jul 14 19:35:13 2015 UTC,"How do you scrape a website? I didn't know you can quotes automatically, this will only be my 2nd app if launched."
iOSProgramming,3da1ue,Krillere,2,Tue Jul 14 19:37:20 2015 UTC,"You know how strings exists? You know that you can add characters to a string? Well, add one at the start and the end, and you've got yourself a quote.   For scraping, if you can find a long list on a single website, just CMD+S to save the source and take what you need.  I really think you need to consider what you want, because what you're trying to do seems pretty easy, so you really should be able to do it without anyone holding your hand."
iOSProgramming,3dan4e,succeededcoma,1 point,Tue Jul 14 20:14:37 2015 UTC,"I'm using a phone older than an iPhone 5s and I'm 2147483644 years old and my dog is 0. (NSInteger is a good idea)  Also, you don't need to use strong on those outlets :p"
iOSProgramming,3dan4e,dcramps,1 point,Wed Jul 15 04:43:45 2015 UTC,Wicked   I just ran the app and used that as the age and it did in fact return 0. What is wrong in the logic that makes an integer that big return 0?
iOSProgramming,3dan4e,dcramps,1 point,Wed Jul 15 04:50:49 2015 UTC,"The logic is fine, it's just integer overflow  You should use an NSInteger unless you have a specific need for an int. In this case, it won't help on 32bit devices, but will on 64.  You could also use an NSUInteger as well, since there's no point in having negative ages."
iOSProgramming,3d9jwv,theblang,2,Tue Jul 14 15:46:50 2015 UTC,I usually use Schemes for setting things like Web Client API endpoints and I use Targets for different platforms (i.e. iOS/MAC/Frameworks)
iOSProgramming,3d9jwv,drewbie85,1 point,Tue Jul 14 15:54:35 2015 UTC,What your version string?  Is there a way to handle that such that the version could change depending on the scheme?
iOSProgramming,3d9jwv,drewbie85,1 point,Tue Jul 14 18:19:38 2015 UTC,"Yes, you can modify the version string based on a build configuration. You need to modify the info.plist file when building."
iOSProgramming,3d9jwv,csacc,2,Wed Jul 15 04:00:38 2015 UTC,Schemes is the way to go.  I often have a debug scheme and a release scheme.  My Debug defines the macro DEBUG=1 and all of my logging and simulator test code is wrapped around #ifdef DEBUG statements.  Things like deployment or running unit tests or the likes would be different targets usually.
iOSProgramming,3d9jwv,rizzledizzle,1 point,Tue Jul 14 18:02:47 2015 UTC,"FWIW, a debug build from Xcode already has the DEBUG=1 preprocessor macro set for you.   Using it in a scheme like what you are doing would be useful to do an adhoc build for someone else to run, though."
iOSProgramming,3d84jn,jellydotsadventure,3,Tue Jul 14 06:39:49 2015 UTC,"Hi, I'm not an expert in iOS so I could be totally wrong but have you tried showing and hiding tabBar with animation? There a UIAnimationOptions enum that flips from bottom if I'm not mistaken. I'm on mobile right now so can't really give you any good sources.  Hope it helps! Keen to know how it's done."
iOSProgramming,3d84jn,Mr__Potatohead,1 point,Tue Jul 14 07:10:49 2015 UTC,"Hey, thanks for letting me know about this option what is this still possible because we only want the tabBar up at certain times and only when clicked on or swiped on.  thanks"
iOSProgramming,3d84jn,Tyr0,1 point,Tue Jul 14 07:53:28 2015 UTC,Check out [UINavigationController -hidesBarsOnTap]  https://developer.apple.com/library/ios/documentation/UIKit/Reference/UINavigationController_Class/#//apple_ref/occ/instp/UINavigationController/hidesBarsOnTap
iOSProgramming,3d84jn,15458434,1 point,Tue Jul 14 07:59:14 2015 UTC,That's only for the UINavigationBar and the UIToolBar. The TabBar has a different purpose and that's creating a content switch for the app.
iOSProgramming,3d91ow,hypercluster,2,Tue Jul 14 13:22:44 2015 UTC,"VNC is just meh.... It may work if you are going to spend less than hour a day working via vnc/teamviewer. But honestly, if you are going to be connected to VNC for more than several hours a day, mac mini sounds like a waste of money, seriously... Get yourself a macbook. If you can't afford the pro, get the 13"" air (I mean air 2014, not 2015 macbook). This will be  a perfect tool to start with if you can't spend more than 70% of your work time in front of your desktop.  P.S. Airs are pretty awesome machines on their own, so I guess you won't be disappointed anyway even if you give up iOS development"
iOSProgramming,3d91ow,Ference,1 point,Tue Jul 14 14:23:33 2015 UTC,Splashtop might work fine for you.
iOSProgramming,3d91ow,Goldin,1 point,Tue Jul 14 15:56:57 2015 UTC,If you go the Mac Mini route I strongly recommend at least 8g of RAM and 16g is better. Get an SSD drive. The normal HDD in the Mac Mini is very slow and will be the biggest hold up during iOS development.  Of course once you start doing that you end up pushing into Macbook price ranges so you really should consider going that direction and just skipping VNC.
iOSProgramming,3d91ow,MKevin3,1 point,Tue Jul 14 16:13:34 2015 UTC,"True, that would probably in the range of a used MacBook."
iOSProgramming,3d91ow,helpfuldan,1 point,Tue Jul 14 19:11:51 2015 UTC,"You need the older Mac mini you can upgrade. Get the one with the i5. Upgrade it to 8 gigs of ram. Get an ssd. Then you can easily use vnc/team viewer to code on it. There's a little input lag and if you're OCD it might bug you. But I've put in 6-7 hour days coding through vnc (really need the Mac mini on the same lan) and it's not an issue. I had never used a Mac and didn't feel like learning OS X and Xcode. A tip is to put the project in a Dropbox folder. Gives you access from Windows (editing images models etc) and also gives you a version history of every file. Only takes 3-4 seconds to sync a new image from Windows to the Mac. Obviously you can setup file sharing that's faster but Dropbox gives you lots of nice bonuses.   Rarely I'll plug directly into the Mac but it's usually annoying as I do everything from my windows box and having to access it from the Mac is more troublesome.   I rarely use the simulator and just plug my device directly into the Mac, the simulator lag on vnc might be a problem I don't really know. But if you have a device I don't see a problem."
iOSProgramming,3d91ow,thtanner,1 point,Tue Jul 14 17:16:40 2015 UTC,"Cool thanks, guess I can seriously consider it then."
iOSProgramming,3d91mf,AndrewSparrow,1 point,Tue Jul 14 13:22:04 2015 UTC,Have you tried with a different device?  Have you looked at all the scenarios listed at http://docs.unity3d.com/Manual/TroubleShootingIPhone.html ?
iOSProgramming,3d91mf,Space_Butts,1 point,Tue Jul 14 14:36:40 2015 UTC,"I have tested it on iPAD2, iPAD4, iPAD mini 2 and all have the same issue. On the other hand, all iphones works better, and there no sign of this bug. Looks something in iPAD version of the game, but didn't know what is exactly wrong..."
iOSProgramming,3d82el,c3ra,1 point,Tue Jul 14 06:14:59 2015 UTC,Anyone? :(
iOSProgramming,3d82el,Syrinathos,1 point,Tue Jul 14 15:17:25 2015 UTC,"All items in a UITabBarController are stored in an array, even the ones located in the ""More"" grouping.   Just access the item you want and set the badge number."
iOSProgramming,3d8kkc,Mr_Knott,2,Tue Jul 14 10:10:00 2015 UTC,Make sure you keep the existing API intact and version the new one so both versions can operate simultaneously.
iOSProgramming,3d8kkc,askoruli,1 point,Tue Jul 14 11:15:46 2015 UTC,"Thanks. So in the case off the app store update, users will continue to use the old API until they decide to update the app?"
iOSProgramming,3d8kkc,askoruli,2,Tue Jul 14 11:18:53 2015 UTC,Yeah. If users have auto update enabled it will happen fairly quickly otherwise you can't know when people will update. Keep track of how much use each version is getting using your analytics so you can make an informed decision about when to retire the old API.
iOSProgramming,3d6x9i,letmebeeee,9,Tue Jul 14 00:16:43 2015 UTC,"This should be fixed with ios9. In regards to what the other use who commented, the app store will be able to determine what resources are needed from the project and thus deliver only those resources to your device (if the developer implements this that is)."
iOSProgramming,3d6x9i,aporcelaintouch,5,Tue Jul 14 00:52:50 2015 UTC,"Because the app you downloaded has all the resources for several different devices with different screen sizes etc, that includes various sized App Icons, Logs and other image material."
iOSProgramming,3d6x9i,Groydis,2,Tue Jul 14 00:49:31 2015 UTC,iOS uses a single binary system with one binary being able to run on all devices. This means that the app has images for all iPhone and iPad screen sizes even if only a small subset are being used. It also has versions of the code optimised for different CPU architectures. Something like Facebook probably has a considerable amount of cruft in the codebase as well as localisation for all supported languages. Check out Settings -> Facebook -> Settings -> About for a list of 3rd party libraries the app uses. It's huge.  Some of this will be mitigated in iOS 9 but the real heart of this is that developers don't care. There's little to be gained from slimming down the app size since there's very little user drop off caused by a large binary. It's not like a web page where every byte you get rid of leads to a better user experience.
iOSProgramming,3d6x9i,askoruli,0,Tue Jul 14 02:13:39 2015 UTC,"External libraries + frameworks can bring file size up very quickly – I'm hoping iOS 9 will handle this (sharing AFNetworking between apps that include it, for instance)"
iOSProgramming,3d6x9i,redsashimi,10,Tue Jul 14 01:30:33 2015 UTC,I don't think iOS 9 is going to do any sharing of libraries between apps. It's just going to strip out architectures and resources that aren't being used.
iOSProgramming,3d6x9i,askoruli,9,Tue Jul 14 02:03:07 2015 UTC,Library sharing would be a huge mistake....ask Windows how that went
iOSProgramming,3d6x9i,Rudy69,0,Tue Jul 14 05:19:11 2015 UTC,"Good point. I'm always optimistic that library versioning will go well, but it really never does :("
iOSProgramming,3d6x9i,redsashimi,3,Tue Jul 14 06:57:53 2015 UTC,"Libraries don't take up much space in comparison to overall image resources.  However, using Swift will instantly bloat your app ~9mb from libraries. But, AFNetworking and most everything else is negligible to the size of your app's download size."
iOSProgramming,3d6x9i,brendan09,0,Tue Jul 14 05:53:28 2015 UTC,"Most apps are not that big. Apps like Facebook are the exception, not the rule. My app is under 10 MB and it's over 30,000 lines of code. No idea why the Facebook app is so damn big…"
iOSProgramming,3d6cgr,ThePantsThief,4,Mon Jul 13 21:38:13 2015 UTC,"Why do you need to use OpenSSL?  iOS has its own built-in support for SSL/TLS, and it also makes use of the onboard cryptographic processor (which I believe OpenSSL does not).  Performance would be better, and I have not heard of the same security vulnerabilities with the native iOS libraries as I have with OpenSSL."
iOSProgramming,3d6cgr,purplepharaoh,4,Mon Jul 13 22:56:05 2015 UTC,"iOS's SSL implementation has had its own vulnerabilities, such as this one. The nice thing compared to using OpenSSL directly is that Apple is responsible for fixing these issues instead of app developers.  One reason to use OpenSSL instead is if you need access to some of the crypto routines. I needed ECDH in a couple of my projects. Even though iOS includes an ECDH implementation, it's a private implementation that's not available to app developers.  Another reason to use OpenSSL is for more detailed certificate validation. iOS's SecTrustEvaluate can tell you whether a certificate chain is valid or not, but it only gives you general indications of why trust fails. If you need specifics you can use OpenSSL instead."
iOSProgramming,3d6cgr,TaviRider,3,Tue Jul 14 01:21:14 2015 UTC,I… was unaware iOS had it's own TLS library! I'll check that out.
iOSProgramming,3d6cgr,aazav,-5,Tue Jul 14 01:09:58 2015 UTC,its* own  it's = it is
iOSProgramming,3d6cgr,Visionator,1 point,Tue Jul 14 02:37:41 2015 UTC,"Chill out, its just autocorrect."
iOSProgramming,3d6cgr,jzed,1 point,Tue Jul 14 05:35:06 2015 UTC,twice* in one = thread?
iOSProgramming,3d6cgr,somethingpunk,5,Tue Jul 14 03:43:03 2015 UTC,Use the standard iOS/OS X facilities. https://developer.apple.com/library/ios/documentation/NetworkingInternetWeb/Conceptual/NetworkingOverview/SecureNetworking/SecureNetworking.html
iOSProgramming,3d6cgr,TaviRider,2,Tue Jul 14 00:27:34 2015 UTC,Thanks!
iOSProgramming,3d6cgr,aazav,0,Tue Jul 14 01:10:02 2015 UTC,I'm a big fan of AFNetworking by Mattt Thompson and its Swift counterpart Alamofire
iOSProgramming,3d6cgr,somethingpunk,1 point,Tue Jul 14 00:43:20 2015 UTC,"I'm no longer a fan of AFNetworking after the recent embarrassingly bad vulnerabilities, such as this one. I think this demonstrates that AFNetworking is not mature enough to trust with security.  Also AFNetworking's popularity started because it was easier to use than iOS's NSURLConnection. But the newer NSURLSession is a big improvement, and I think it takes away most of the advantages of AFNetworking."
iOSProgramming,3d5o90,barrettbreshears,4,Mon Jul 13 18:48:51 2015 UTC,I think they used SpriteKit for that. It's fully 2D and has a physics engine.
iOSProgramming,3d5o90,15458434,2,Mon Jul 13 19:44:43 2015 UTC,"Awesome, thanks for the help! I appreciate it."
iOSProgramming,3d5o90,nepragen,2,Mon Jul 13 19:51:14 2015 UTC,"This looks really similar to a flocking simulation, where you have an additional rule for scaling the circles. Flocking algorithms are part of the new GameplayKit framework. Note that GameplayKit is independent of the framework that you use for drawing the graphics, you can use UIKit, CoreGraphics, SpriteKit or whatever. You don't necessarily need a physics engine for this as the flocking algorithm gives the illusion of physically correct behaviour."
iOSProgramming,3d5o90,chaosdude78,1 point,Tue Jul 14 09:35:47 2015 UTC,"Wow, great info. That flocking simulation info is very interesting! Thanks!"
iOSProgramming,3d5o90,nepragen,2,Tue Jul 14 18:13:36 2015 UTC,"As others have said, SpriteKit is a good option for this. I recently went about writing an approximation of it using UIDynamics which you can find here"
iOSProgramming,3d5o90,succeededcoma,1 point,Tue Jul 14 12:30:06 2015 UTC,"That looks great, I like the UIDynamics approach since I have no experience with SpriteKit. Thanks so much!"
iOSProgramming,3d4squ,aporcelaintouch,2,Mon Jul 13 15:02:14 2015 UTC,The WatchConnectivity framework replaces what App Groups were used for. Watch this for more info.
iOSProgramming,3d4squ,FR_STARMER,1 point,Mon Jul 13 17:15:41 2015 UTC,"Yeah but in that case, what is done to ensure the database is synced across both devices. Aside from passing the database back and forth, it is not very intuitive."
iOSProgramming,3d4squ,FR_STARMER,1 point,Tue Jul 14 00:51:19 2015 UTC,"So you need to look at the iPhone as the central device and the watch as a peripheral. Draw data with your iPhone and sync it up to the watch at the best time, whether that is when the user looks at their watch, or immediately as new data is coming it. It's all explained in the video."
iOSProgramming,3d4squ,mrgermy,1 point,Tue Jul 14 01:13:28 2015 UTC,Can you point to the documentation you're talking about? I literally just started messing around with app groups a week ago so I could get data into my watch app.
iOSProgramming,3d4squ,mrgermy,1 point,Mon Jul 13 16:26:43 2015 UTC,"If you look up watchos2 migration, there is a document that says in the second paragraph that they shouldn't be used. Sorry I'm on my phone right now!"
iOSProgramming,3d4squ,FutureIsMine,1 point,Mon Jul 13 19:13:52 2015 UTC,No worries. Thanks for the direction! I actually haven't started looking at watch os2 docs yet.
iOSProgramming,3d4squ,FutureIsMine,1 point,Mon Jul 13 19:20:29 2015 UTC,"Glad I could be of SOME sort of help, haha."
iOSProgramming,3d4squ,FutureIsMine,1 point,Tue Jul 14 00:38:52 2015 UTC,"In WK2 the SQLite file is going to be on the watch so using a shared group isn't going to help you a whole lot. To make sure that data is in sync really depends on your use case, but the solution is going to involve tracking what information has been added to the phone, and what kind of data the watch is going to need. Could you describe your use case a bit more? What kind of data are you storing?"
iOSProgramming,3d6lkh,purplepharaoh,1 point,Mon Jul 13 22:45:30 2015 UTC,If you know javascript/willing to learn it & want to use your own backend then you could try http://socket.io/  I know of other services along the lines of baas for websocket-based servers but their pricing is so silly that I won't even refer you to them.
iOSProgramming,3d6lkh,dcpc10,1 point,Mon Jul 13 23:24:48 2015 UTC,"Depending on what you're trying to do (your app design, etc.) you could try Matrix (http://www.matrix.org) or Magnet Message (https://www.magnet.com/developer/magnet-message/) for decentralized communications and open-source pub-sub messaging, respectively."
iOSProgramming,3d681k,apphelpp,1 point,Mon Jul 13 21:06:17 2015 UTC,Use the free trial for Sketch 3
iOSProgramming,3d681k,jman32112,1 point,Mon Jul 13 22:32:53 2015 UTC,I'll check it out
iOSProgramming,3d681k,Starchand,1 point,Tue Jul 14 09:57:14 2015 UTC,Inkscape is a free Illustrator alternative and Gimp is a good photoshop alternative. If you have no design skills you could try https://www.iconfinder.com/.
iOSProgramming,3d681k,succeededcoma,1 point,Mon Jul 13 22:36:13 2015 UTC,Thanks
iOSProgramming,3d681k,succeededcoma,1 point,Tue Jul 14 09:56:12 2015 UTC,I can help if you want
iOSProgramming,3d681k,15458434,1 point,Tue Jul 14 00:00:50 2015 UTC,"Thanks for the offer. I'm going to look into the above options first, and get back to you if i can't figure it out"
iOSProgramming,3d4f9n,konstantin-koval,3,Mon Jul 13 13:03:18 2015 UTC,Logs can definitely be detrimental to performance if overused but the example is kind of nonsensical. If you have a piece of code which only exists after optimisation because of a print statement then either the code exists purely to perform that print statement or it's just useless code and should be removed.
iOSProgramming,3d4f9n,askoruli,1 point,Mon Jul 13 13:22:38 2015 UTC,Does this apply to NSLog() as well?
iOSProgramming,3d4f9n,Groydis,1 point,Tue Jul 14 00:54:38 2015 UTC,"not sure, maybe yes because we had to disable NSLog in Objective-C with #ifdef statements too"
iOSProgramming,3d4f9n,LoserInBoston,1 point,Fri Jul 17 13:52:01 2015 UTC,"Because println is meant for printing to the console, not debug logging, I use NSLog for real logging. I'd assume NSLog has this functionality baked-in to its implementation, but I might be wrong."
iOSProgramming,3d5rfo,NoFapSherlock,3,Mon Jul 13 19:10:53 2015 UTC,"For a first app you did great, but you also made the same kind of mistakes I did. There are some parts in your interface that aren't clear to me as user. For example there are several apps out there that use swipe left to do something to an entry in a table view your uses swipe right. I would reverse that it's something users have seen before and therefor are expecting it work that way. Next thing it's not clear it's a list of items. Create something that it looks like a list and did I know I can do something with it. For example tap it and when you want a cell to be able to expand make it clear you can expand the cell that way instead of tapping it. I wasn't expected that either. And the font you chose looks playful along with the rest of the app. I'd polish the images of tips too. Maybe team up with someone who loves to do some design?"
iOSProgramming,3d5rfo,15458434,1 point,Mon Jul 13 19:42:55 2015 UTC,Tnx man... I guess I really should work on my  ui design skills.
iOSProgramming,3d5rfo,15458434,2,Mon Jul 13 20:05:53 2015 UTC,"You're welcome, we all learned this somehow. If you want to improve your design. Just go to bar talk to some strangers hand over your phone, Would you like to try my app? And see what they struggle with and ask them all kinds of questions. Can you find this and this? What's the purpose of this screen. etc. You might get some useful new feature ideas as well."
iOSProgramming,3d4tos,sc00byd0nt,5,Mon Jul 13 15:09:15 2015 UTC,"I don't know about the typical case for iOS apps, but in our enterprise agreements we pay licensing for stock data, and it can be extremely large & expensive."
iOSProgramming,3d4tos,linkrift,1 point,Mon Jul 13 15:19:54 2015 UTC,Why is this data so expensive? Is it because the data you license is so up-to-date or is all stock data expensive to legally use in commercial applications?
iOSProgramming,3d4tos,brendan09,3,Mon Jul 13 15:26:57 2015 UTC,"Its valuable, highly wanted, data. Its worth what people will pay for it, which is a lot in this case."
iOSProgramming,3d4tos,brendan09,1 point,Mon Jul 13 15:43:05 2015 UTC,Makes sense. Do you have any idea if Apple would reject an app that uses the unofficial Yahoo finance API? It seems like a grey area in terms of Yahoo's ToS but would Apple reject an app for it?
iOSProgramming,3d4tos,purplepharaoh,6,Mon Jul 13 15:47:38 2015 UTC,They ask if you have a license for all data in your app. If you lie and say 'yes' you're open to a lawsuit from Yahoo.  It's illegal to access APIs against their terms of use.
iOSProgramming,3d4tos,aazav,2,Mon Jul 13 15:50:10 2015 UTC,"Additionally, there are often rate limits on web APIs such as this, so you may be throttled and limited in terms of how much/what kind of data you can get."
iOSProgramming,3d4tos,tangoshukudai,-1,Mon Jul 13 22:57:52 2015 UTC,It's* valuable  It's* worth what people will pay for it
iOSProgramming,3d4tos,TaviRider,2,Mon Jul 13 17:36:54 2015 UTC,"Sorry mate, I was on a mobile at the time. Thanks for keeping me on my toes."
iOSProgramming,3d4tos,tangoshukudai,2,Tue Jul 14 16:19:40 2015 UTC,"Yahoo has always been good for me, if you get a null value, then just try again (cache the older number, etc),  if your app gets popular and Yahoo starts to care, then you can figure out a way to pay for stock data."
iOSProgramming,3d5gxy,inevitablekris,1 point,Mon Jul 13 17:57:53 2015 UTC,You're returning the cell inside a block instead of in the function itself.
iOSProgramming,3d5gxy,15458434,1 point,Mon Jul 13 19:48:15 2015 UTC,Hi Thanks for your reply. I figured out by getting rid of PFQTVC and calculating objects count before calling cellForRowAtIndexPath.
iOSProgramming,3d5gxy,15458434,1 point,Tue Jul 14 00:29:33 2015 UTC,You can still do the calculation there and update the cell when the block is executed. As long as the function returns the cell at the end of cellForRowAtIndexPath.
iOSProgramming,3d5btk,ThePantsThief,3,Mon Jul 13 17:22:37 2015 UTC,"I don't know why they would. NSArray is really powerful because it gives you a good, optimized data structure based on the size of that array. If they eventually rewrite Foundation to use this, they'd have to do something similar. There's no way they sacrifice performance of the system classes just to use a new language."
iOSProgramming,3d5btk,iOSbrogrammer,3,Mon Jul 13 20:03:06 2015 UTC,"Why would they rewrite Foundation or any of the Core libraries in Swift? There's little to be gained, and 20+ years of code refining and evolution already in place.  Thats the whole point of the Objective-C bridge and having Swift share the same underlying runtime.  I would be shocked if they rewrote any existing framework. New ones, maybe. Old ones, never."
iOSProgramming,3d5btk,brendan09,1 point,Mon Jul 13 20:15:52 2015 UTC,"Yeah, but that's another discussion entirely, haha. As a computer science major the idea of that just seems silly. I have non-cs friends who think otherwise because every tech news outlet is screaming it. ""Apple wrote their own language! They MUST be planning to rewrite Foundation in it!"""
iOSProgramming,3d5btk,aazav,2,Mon Jul 13 20:18:43 2015 UTC,"So, what do you do in Swift when you can't subclass?"
iOSProgramming,3d5btk,chicagobob,2,Mon Jul 13 17:38:46 2015 UTC,A class cluster is more than simply the concept of sub-classing.  A class cluster is more like a factory method on a parent class that returns instances of different subclasses as it deems appropriate (but it doesn't disclose in the methods return signature which subclass you're getting -- you shouldn't care).
iOSProgramming,3d5btk,xeow,1 point,Mon Jul 13 19:53:47 2015 UTC,I'm not sure what that has to do with this; when can't you subclass in Swift?
iOSProgramming,3d5btk,buffering,2,Mon Jul 13 17:40:12 2015 UTC,"Just because Swift doesn't currently let you ""return"" a value doesn't mean that it will never have some analogue to this, right? Apple could simply modify Swift to support class clusters, and then it would be possible. (How, I'm not sure, but I'm sure could figure out a way if they wanted to.)"
iOSProgramming,3d5btk,buffering,1 point,Mon Jul 13 20:28:54 2015 UTC,"You're right, there's no reason this couldn't all change.  There is a simple way to achieve this, I'm just confused as to why they would make Swift constructors like Java / C# / etc constructors in that they don't return anything and can't initialize an instance of a subclass in the first place.  The obvious solution (for now) is to create static methods on classes which can return instances of a subclass. Unfortunately, this takes the syntax from var foo = MyClass(initializer: bar) to var foo = MyClass.myClassFooBar(bar)"
iOSProgramming,3d5btk,buffering,1 point,Mon Jul 13 20:31:09 2015 UTC,"We can assume that the Foundation implementation is already a mix of C, C++, and Obj-C (NSObject is actually a C++ struct, with a handful of its own private C++ methods).  It's not outrageous to think that years from now there may be some Swift sprinkled in there as well.  But any suggestion of a complete Swift rewrite is ridiculous.  As for the class cluster pattern, it's essentially this:  +alloc returns a singleton class factory.  The class factory implements the various -init methods to return a private concrete subclass.    A silly pseudo-implementation:  @implementation NSString + (id)alloc {      return [NSStringFactory instance];  } @end  @implementation NSStringFactory - (id)init {      return @"""";  } - (id)initWithString:(NSString*)str {     if ([str _isStatic]) {         return str;     }     if ([str _isConst]) {         return [str retain];     }     return [str copy]; }  // etc... @end   You would never implement that pattern in anything other than Obj-C.  However, that doesn't prevent you from using Swift, or C, or C++ to implement some or all of the underlying concrete subclasses."
iOSProgramming,3d5btk,quellish,1 point,Mon Jul 13 20:42:43 2015 UTC,"So basically, you think it wouldn't make sense to have the equivalent in Swift? That's sort of my thinking too.  Also, NSObject (the id type, really, which is basically typedef struct objc_object * id) is a C struct. And...   [NSObject has] a handful of its own private C++ methods   What?"
iOSProgramming,3d55qi,yamski,3,Mon Jul 13 16:38:36 2015 UTC,I don't think you can save that kind of metadata with a video. You can try writing the video to a local file path along with the specific name then writing the file at that path to the camera roll.
iOSProgramming,3d55qi,attempt_number_two,1 point,Mon Jul 13 17:04:23 2015 UTC,"Great, I'll go that route. Thanks!"
iOSProgramming,3d4pg1,JetPlanes,2,Mon Jul 13 14:35:16 2015 UTC,"You might be able to use gesture recognizer delegate methods to decide which of your swipe gesture, and the scroll view's panGestureRecognizer is used"
iOSProgramming,3d4pg1,shitidiotturtle,1 point,Mon Jul 13 14:52:51 2015 UTC,"I'm sorry, but I don't really understand what you mean :/"
iOSProgramming,3d4pg1,shitidiotturtle,2,Mon Jul 13 15:47:54 2015 UTC,"no worries.   I'm assuming you're using a UISwipeGestureRecognizer to implement the paging. UIWebView has a scrollView property, which has a panGestureRecognizer property, this gesture recognizer is used to control scrolling  Gesture recognizers have an optional delegate property (an object which conforms to the UIGestureRecognizerDelegate protocol). This delegate is useful when there are 2 gestures which can conflict. I think the most likely method you should implement is  - gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer: which is used to decide if 2 gestures are compatible with each other. I think you should set yourself as delegate on your swipe gesture and return NO in this method (i haven't tested this as at all, just a guess). If its not that method then gestureRecognizer shouldRequireFailureOfGestureRecognizer might be useful"
iOSProgramming,3d3mr8,StunnerAlpha,2,Mon Jul 13 06:47:40 2015 UTC,"It wasn't immediately clear that the purpose of this library was to trigger some event or block based on the users installation, usage or updates. I thought it might be yet another analytics package with some web service reporting component. Everything else, from installation (my preferred method is a pod, as you have it) to integration and code samples is exemplary."
iOSProgramming,3d3mr8,alpha-not-omega,2,Mon Jul 13 15:39:04 2015 UTC,"Thanks for your thoughts. Yeah, I can see how people can assume it's an analytics package right off the bat (due to its name, right?). Any tips on how you think I can circumvent the problem? I have placed the summary prominently at the top of the README in hopes of minimizing this issue."
iOSProgramming,3d3mr8,alpha-not-omega,2,Mon Jul 13 16:46:06 2015 UTC,"Maybe something like, instead of,   ""AppUpdateTracker is a simple, lightweight iOS library intended to determine basic app install/update behavior.""   The intro could read,    ""AppUpdateTracker is a simple, lightweight iOS library that triggers an alert or executes custom code upon install, update or use of an app."""
iOSProgramming,3d3k50,devxoul,1 point,Mon Jul 13 06:13:43 2015 UTC,"Great work, I am a little worried about your swizzeled dealloc method however it should be fine.   I don't understand why Apple hasn't included this (everyone wants it)."
iOSProgramming,3d3k50,tangoshukudai,1 point,Mon Jul 13 14:37:14 2015 UTC,That could be avoided by doing this as a subclass like most other UITextView placeholder implementations. I agree that its a little concerning.
iOSProgramming,3d3k50,brendan09,1 point,Mon Jul 13 15:45:34 2015 UTC,I like the idea of it being a category.
iOSProgramming,3d3k50,tangoshukudai,1 point,Mon Jul 13 15:47:43 2015 UTC,"It's convenient, but causes some pretty gnarly implementation."
iOSProgramming,3d3k50,brendan09,1 point,Mon Jul 13 15:48:29 2015 UTC,"Yes, that is true.  However if it is done properly I don't see it being an issue."
iOSProgramming,3d3k50,tangoshukudai,1 point,Mon Jul 13 15:49:23 2015 UTC,I don't get it... ;)
iOSProgramming,3d3k50,succeededcoma,1 point,Tue Jul 14 00:12:22 2015 UTC,get what?
iOSProgramming,3d3k50,tangoshukudai,1 point,Tue Jul 14 00:31:44 2015 UTC,What does this do?
iOSProgramming,3d3k50,succeededcoma,1 point,Tue Jul 14 02:01:23 2015 UTC,What does what do?
iOSProgramming,3d3k50,tangoshukudai,1 point,Tue Jul 14 02:11:01 2015 UTC,It makes a placeholder for UITextView.
iOSProgramming,3d3k50,succeededcoma,3,Tue Jul 14 17:21:58 2015 UTC,"OMG My brain was not working.....My brain kept thinking UITextField and I was thinking, 'How is this different?!'  Kids + Weekend = Fried brain"
iOSProgramming,3d3id9,IndignantDuck,3,Mon Jul 13 05:53:16 2015 UTC,"It's likely that the files are DRM protected.  I don't believe you are allowed to directly access DRM protected media via the APIs (will be given NULL urls).  With Apple Music, saving offline is for convenience, but the user doesn't own the files & they will be DRM protected.  With iTunes Match you are given DRM-free files since you own them according to the service."
iOSProgramming,3d3id9,armadale,1 point,Mon Jul 13 08:57:15 2015 UTC,"Makes sense. It's just kinda odd, I also checked the hasProtectedContentwhen I converted it to an AVPlayerItem and it also returned 0. Also I can play the song using MPMediaPlayerController."
iOSProgramming,3d1e91,timanglade,1 point,Sun Jul 12 18:51:01 2015 UTC,Blocks are the future
iOSProgramming,3d1e91,ThePantsThief,1 point,Sun Jul 12 22:50:16 2015 UTC,"I love these videos from Swift Summit, very insightful IMO"
iOSProgramming,3d09u9,samuelstone92,3,Sun Jul 12 12:06:54 2015 UTC,"Hi all, just wanted to share my first CocoaPod.  It provides an implementation of the Android/Material Design Snackbar UI component, which is used to show a brief actionable alert to the user, often to give the user a chance to undo some destructive action.  Here's a demonstration video.  I'm fairly experienced in Obj-C but pretty new to the UI side of things, so improvements are very welcome!"
iOSProgramming,3d09u9,oldcrusty,1 point,Sun Jul 12 12:12:52 2015 UTC,Will this not annoy iOS users that expect native controls?  https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/UndoRedo.html
iOSProgramming,3d09u9,mistermagicman,4,Sun Jul 12 17:32:43 2015 UTC,"Snackbars are useful for a completely different type of situation.   Take Google's use of them in Gmail for example; you do not want a modal alert being displayed every time you archive an email.  Snackbars can be used to provide a grace period for a user to undo some action.   The system undo dialogue you linked to is used to confirm an undo action, after the user has already expressed their intent to undo the action by shaking their device."
iOSProgramming,3d09u9,powerje,2,Sun Jul 12 17:44:29 2015 UTC,"I love the UX behind it and think it could work great in iOS apps, but is there any chance you could add an option for a more native looking theme? I might fork it and take a stab myself if you don't mind :)"
iOSProgramming,3d09u9,Arkanta,4,Mon Jul 13 01:03:33 2015 UTC,"In general, maybe - but it's important to look at your use case.  In most cases I can think of a Snackbar is preferable to a focus stealing UIAlertView. There is nothing particularly 'Android-y' about the look and feel of a Snackbar - I don't believe anyone will be confused by it."
iOSProgramming,3d0ir0,awnton,2,Sun Jul 12 14:05:29 2015 UTC,It looks like something that would be really useful but takes a while to setup. I like the snapshot one
iOSProgramming,3d0ir0,Rudy69,-7,Sun Jul 12 20:54:50 2015 UTC,iOS developer's* toolbox  It's a toolbox for a developer.  Use the apostrophe before the s.
iOSProgramming,3d0ir0,aazav,3,Sun Jul 12 16:05:29 2015 UTC,I waiting for you were. You are alive glad to see i am.
iOSProgramming,3d2vnp,WongWray,1 point,Mon Jul 13 02:18:28 2015 UTC,"Hey just wanted to add, would be best to unwrap that value in an if statement so that if it is ever nil you app won't crash. Eg.   If let ack = jsonObj[][].string? {     // do something with ack }  Note using '?' To unwrap the optional instead of '!'."
iOSProgramming,3d2vnp,bearfootrunning,1 point,Mon Jul 13 11:15:00 2015 UTC,"Well, the point of ! is to make sure it crashes if you absolutely need it. If he does need it and it silently fails, it'll be harder to debug later. If he doesn't need it for sure though, yeah, make it ? optional!"
iOSProgramming,3d2vnp,ThePantsThief,1 point,Mon Jul 13 16:16:53 2015 UTC,"Looks like it's dictionary->array->dictionary->array. Oddly formed JSON...  I see you've already solved it, but for anyone who doesn't want to navigate to another thread, it's  let ack = jsonObj[""findItemsByKeywordsResponse""][0][""ack""][0].string!"
iOSProgramming,3d2sie,SnakeRy,3,Mon Jul 13 01:50:43 2015 UTC,"I use a generic overlay manager to display arbitrary views and manage their order, disable input behind them, and animate the displaying and dismissing; basically a custom alert system. You don't need to go this in-depth but it's a useful module to have, especially if you want to replace the stock system alerts.  You may be able to get away with just adding the view to the main window view and then making sure it's in front. You will almost definitely have to block input around it as well."
iOSProgramming,3d2sie,Space_Butts,2,Mon Jul 13 02:10:54 2015 UTC,Not sure if this will work for you but check out WYPopoverController https://github.com/nicolaschengdev/WYPopoverController
iOSProgramming,3d2sie,ramwolf,1 point,Mon Jul 13 03:08:41 2015 UTC,"Looks like a great tool. I don't think that will work for my current problem, but I very well may use that in the future. Thanks for the link!"
iOSProgramming,3d2sie,resonaut,2,Mon Jul 13 15:07:30 2015 UTC,"You can embed everything in the modal view in another smaller view and make the root view's background colour clear. This will only work if the presentation is modal, and over current context is set in modalPresentationStyle."
iOSProgramming,3d2nxp,xThomas,7,Mon Jul 13 01:10:14 2015 UTC,"Opening other apps likely made the iPad release it from memory and have to relaunch. I'm guessing the game has a memory leak of some type and eventually just dies. To fix it, double-tap the home button and swipe the app up and off the list of recent applications, then relaunch it."
iOSProgramming,3d2nxp,neksus,1 point,Mon Jul 13 02:00:53 2015 UTC,I was thinking it was a memory problem! Wasn't sure tho.
iOSProgramming,3d2nxp,LunchPistol,1 point,Mon Jul 13 07:50:20 2015 UTC,I agree with neksus; your issue definitely sounds like a memory leak.
iOSProgramming,3d2nxp,dontforgetpassword,1 point,Mon Jul 13 12:25:09 2015 UTC,"Gremlins.   Also, I'm sorry for not having a serious answer- but you didn't give much detail and I figured we could laugh."
iOSProgramming,3d2nxp,dontforgetpassword,1 point,Mon Jul 13 01:42:17 2015 UTC,ha i rhink that was funny since i see an answer
iOSProgramming,3d29yy,WongWray,1 point,Sun Jul 12 23:09:32 2015 UTC,"I'm not sure why it's always return the word title without looking into it a bit.   However, can't you just acces the title in the same way you did for the cellForRowAtIndexPath  In your didSelectRow:  let api = APIs[indexPath.row];  And just use that to pass the data to where ever you are going.   Ninja edit: I realize this is just a work around but it should work amirite?"
iOSProgramming,3d29yy,Dilligaf_Bazinga,1 point,Sun Jul 12 23:15:21 2015 UTC,"Yes this is what I'm doing now, but what if I'm wanting to change or highlight the text?  Plus it seems like pretty strange behavior, I assumed the text variable was set in cellForRowAtIndexPath.  Anyway just thought someone could enlighten me on what's going on :)"
iOSProgramming,3d29yy,Dilligaf_Bazinga,1 point,Sun Jul 12 23:29:34 2015 UTC,"After looking at your code again, in your did select row method, you are creating a new cell.   You code of   let cell = tableview.dequeReusableCell......  Is creating a new cell and then when you are getting the text its giving you the default text which is probably set in the storyboard as ""title"".   You need to get a reference to the existing cell for that row and not create a new one. I'm on mobile at the moment and have knocked back a few so the syntax for getting the existing cell alludes me.   However it appears that's your main issue to overcome.   Ninja edit again:  Code should be something along the lines of  let cell = tableview.cellForRowAtIndexPath(indexPath)  And then accessing cell.textLabel.text should produce correct result."
iOSProgramming,3d29yy,schprockets,1 point,Mon Jul 13 00:11:52 2015 UTC,Yup makes sense.  Thanks for the help
iOSProgramming,3d29yy,aazav,2,Mon Jul 13 00:59:09 2015 UTC,"The cell isn't your model, APIs[] is. The cell is just a view. Instead of trying to get the text from the cell, get the text from its actual original source, just as you did when you created the cell."
iOSProgramming,3d29yy,eclipse278,-1,Mon Jul 13 11:55:28 2015 UTC,it's always returning* the word
iOSProgramming,3d29yy,caffeinatedhacker,1 point,Mon Jul 13 02:38:31 2015 UTC,Where does the cell get its info from?  You should get it from there as well.
iOSProgramming,3d1t6d,Holybash,2,Sun Jul 12 20:52:57 2015 UTC,To make games on iOS you need to know Sprite Kit for 2D or Scene Kit for 3D games. You can combine both in games. The rest is pretty much just general knowledge of Objective C and OOP in general.  Once you know OOP and ObjC you can look up the basic tutorials for Scenekit or spritekit and play around with it for few weeks.  Once you know OOP and Objc the rest is pretty straight foward and easy
iOSProgramming,3d0v5w,LaserWolfTurbo72,2,Sun Jul 12 16:09:40 2015 UTC,Handover your app to real people who don't know your app and ask them all kinds of question about your app. Can you find this? Do you understand the purpose? etc. That gives you insight on what to improve and how. There is no walkthrough for that every situation is different.
iOSProgramming,3d0v5w,15458434,1 point,Sun Jul 12 17:13:47 2015 UTC,"Yeah, I'm planning to do this as soon as my TestFlight get's installed.   I would like to have at least 1 intro walkthru, as I believe a certain subset of my user base may not immediately understand certain aspects of my application."
iOSProgramming,3d0v5w,15458434,1 point,Sun Jul 12 17:45:06 2015 UTC,Then go to bar and talk to random people. Handover your phone and see some life action while they use your app. That way you have immediate feedback and can ask any questions you want. Don't make your app too hard to use. For example if I can't figure out how an app works in about 2 minutes I hit the delete button. Cause there is probably somebody who did a better job at designing the interface with a similar app.
iOSProgramming,3d0v5w,askoruli,1 point,Mon Jul 13 10:21:42 2015 UTC,There's so many different ways to do this that I don't think you'll find a single solution anywhere. Here's some possibilities I can think of or have seen used   A fixed pre rendered slideshow or video explaining what each screen does An overlay on a screen which gives a description for elements An animation highlighting a particular button so the user knows to press it. Eg. Pulsating a hamburger icon so the user knows how to access the menu Prebuilt example content which explains some of the application. Eg. a drawing app with some example images explaining the techniques used   The first seems to be the most popular right now though I question the effectiveness. Which type were you thinking of?
iOSProgramming,3d0pn6,MrHarryT,2,Sun Jul 12 15:18:08 2015 UTC,"I really thought it was markup as in the markup language, that was a couple of confusing seconds.  Anyway, i don't think it is an public API. Cant find any indication of it at least."
iOSProgramming,3d0pn6,awnton,1 point,Sun Jul 12 17:45:26 2015 UTC,Markdown?
iOSProgramming,3d2f2o,amichail,9,Sun Jul 12 23:54:28 2015 UTC,"I think you've taken the phrase ""rockstar developer"" a little too literally."
iOSProgramming,3d2f2o,Space_Butts,6,Mon Jul 13 02:24:27 2015 UTC,"because nobody (i.e. users) care about developers. However, users do care about artists.  in summary, artists > developers, for users."
iOSProgramming,3d2f2o,mavdev,2,Mon Jul 13 01:50:33 2015 UTC,"No idea what you mean by ""connect""."
iOSProgramming,3d2f2o,chriswaco,0,Mon Jul 13 00:15:25 2015 UTC,"See the ""connect"" feature in Apple Music where you can follow musicians."
iOSProgramming,3d2f2o,nullput,2,Mon Jul 13 00:16:04 2015 UTC,Probably because devs don't have fans. A nicer thing for Apple to do would be to treat devs the same way they treat musicians. ie: pay developers for App of the Week. They are paying musicians while a user is in the 3 month trial yet they make a paid app free for a week and the dev just gets a loss of potential sales. Most have IAPs but not all
iOSProgramming,3d2f2o,FaZe_Clon,1 point,Mon Jul 13 15:05:22 2015 UTC,"That sounds pretty cool, but most people tend to complain or praise apps. And do so via email or something like Twitter."
iOSProgramming,3d2f2o,eimantas,1 point,Mon Jul 13 00:26:19 2015 UTC,They do have it. It's called developer support forums. Once a year they have summer fest titled WWDC
iOSProgramming,3d2f2o,15458434,1 point,Mon Jul 13 06:16:40 2015 UTC,It's like Christmas time for developers. We all get the goodies we can play with next year.
iOSProgramming,3d0dp4,Mariusmathisen,2,Sun Jul 12 12:59:22 2015 UTC,"Make a new subclass of UIView. Here's some example code to add rounded corners and a shadow:  import UIKit  class CustomView: UIView {  override init(frame: CGRect) {     super.init(frame: frame);     self.customInit(); }  required init?(coder aDecoder: NSCoder) {     super.init(coder: aDecoder);     self.customInit(); }  func customInit() {     self.layer.cornerRadius = 10;     self.layer.shadowColor = UIColor(white: 0, alpha: 1).CGColor;     self.layer.shadowOffset = CGSizeMake(2, 2);     self.layer.shadowOpacity = 0.5;     self.layer.shadowRadius = 3; } }"
iOSProgramming,3d0dp4,adams4piece,1 point,Sun Jul 12 14:04:22 2015 UTC,Thank you. :) I will try it out tomorrow. :)
iOSProgramming,3cwplf,ergotayours,14,Sat Jul 11 12:50:38 2015 UTC,iOS8 Stanford  and  Ray Wenderlich
iOSProgramming,3cwplf,Teyooo,3,Sat Jul 11 13:20:23 2015 UTC,"I started with Ray Wenderlich tutorials. Then I started doing things on my own that interested me. Really I think that just diving in was the best thing for me. That and reading stack overflow and listening to podcasts and reading blog posts like NSHipster.  Also, it may just be me, but doing UI stuff programmatically really helped me understand how things work better than using storyboards. Everyone is different though!"
iOSProgramming,3cwplf,rainerdeal,1 point,Sat Jul 11 16:03:36 2015 UTC,Do you have any podcast recommendations?
iOSProgramming,3cwplf,neutrition,2,Sat Jul 11 22:01:02 2015 UTC,"More Than Just Code Podcast, Accidental Tech Podcast, Core Intuition, and Release Notes. They all vary on their topics, but all have to do with Apple and iOS things. They have good insight on marketing techniques, implementation, and design."
iOSProgramming,3cwplf,rainerdeal,1 point,Sun Jul 12 01:47:13 2015 UTC,"nope, doing it programmatically y really makes you understand how it actually works."
iOSProgramming,3cwplf,bpozega,4,Sun Jul 12 21:45:36 2015 UTC,"https://www.udemy.com/the-complete-ios-7-course-learn-by-building-14-apps/  Getting old now because of iOS 9 coming out, but unless you are using the new libraries, this is by far the best resource out there. I took this course last summer and now I have a development job at the tech commercializations office at my college."
iOSProgramming,3cwplf,FR_STARMER,1 point,Sat Jul 11 14:11:43 2015 UTC,"Just curious because I'm the same boat u were in last summer, what do you do?"
iOSProgramming,3cwplf,QuantumHoneybees,2,Sat Jul 11 14:17:47 2015 UTC,"I work for an office at my college that takes faculty inventions and puts them through a LEAN startup funnel. Those that can be commercialized go through the IP, prototyping, and development processes, and I develop the inventions that have to do with some sort of mobile iOS tech."
iOSProgramming,3cwplf,FR_STARMER,1 point,Sat Jul 11 14:23:17 2015 UTC,"Wow it actually sounds fun, i'd be lucky if I can do that in a year's time... Thanks for answering!"
iOSProgramming,3cwplf,QuantumHoneybees,2,Sat Jul 11 18:04:56 2015 UTC,It's really awesome and is great experience for the resume and myself. No problem!
iOSProgramming,3cwplf,FR_STARMER,-1,Sat Jul 11 19:29:03 2015 UTC,I think it's still important to learn iOS7 and 8
iOSProgramming,3cwplf,Jargen,2,Sat Jul 11 18:35:41 2015 UTC,"Bitfountain.io was the best I've come across. I have done wenderlich, the iOS 14 app course the other user mentioned, solt, code with chris, and bitfountain was well worth the price. He goes into depth about why your doing the things your doing."
iOSProgramming,3cwplf,Themako1,1 point,Sat Jul 11 18:43:38 2015 UTC,"Assuming you have experience with development in general (ie know the foundation of logic structures etc) I would start here: https://www.bignerdranch.com/we-write/ios-programming/  I was in my last year of my computer science degree. Started as an intern and was handed this book. From there I learned enough to be the primary contributor to a corporate focused iPad app that touched CoreData, CoreAudio, CoreGraphics, etc and was hired on full time before my last semester.   It really helped my learning style and the authors are active on the forums if you have questions."
iOSProgramming,3cwplf,EisbarDasTier,1 point,Mon Jul 13 14:08:34 2015 UTC,"From personal experience - I learnt iOS and android development on my own through online tutorials on Youtube, Stack Overflow, appcoda, ray wenderlich's website etc. However, I felt the same too, I just wasn't confident enough to make something on my own. i think it was because most of the tutorials get you to understand one concept - like a tutorial on how to use UIButton, or another on how to use UINavigationController etc. However in a real world app, you will use hundreds of concepts pieced together. This is where I would get lost about how to get all pieces together.   Slowly I realized that my fault was that I was trying to learn each and every concept by heart - in depth. For a app, you don't need in dept knowledge about everything - you need broad knowledge about many things. Now I do ""learn on the fly"". As long as I at least know what to search for, I do not need to exactly remember how to do each thing. If I forget how to create a UIButton (just an example), I would google ""ios UIButton stack overflow"" and that shows me how to do it.  Do not let the tutorials limit you into the boxed thinking of the tutorial itself, try to just go an make any simple app which utilizes a lot of concepts pieced together. This doesn't even need to be an app for the store, just something for you to learn the full app development lifecycle. Once you have finished an app which uses many concepts pieced together, you will be more confident in coding your real app."
iOSProgramming,3cwplf,pranoy1c,1 point,Tue Jul 14 15:23:36 2015 UTC,"This is how I usually learn new languages/libraries/frameworks. The issue for me isn't figuring out how to use the various elements of the API, it's the general architecture and design that I'm unsure about. Which can't be easily resolved by Googling for some documentation."
iOSProgramming,3cy6jx,LaserWolfTurbo72,6,Sat Jul 11 21:08:33 2015 UTC,TestFlight usual takes 12-24 hours (not business hours) for me.  I regularly have TestFlight approval Saturday afternoon for an app submitted Friday evening.
iOSProgramming,3cy6jx,brendan09,1 point,Sat Jul 11 22:00:46 2015 UTC,Can I update a build as much as I'd like after TF is approved for externals?
iOSProgramming,3cy6jx,Aofwa,2,Mon Jul 13 04:54:50 2015 UTC,"Yes, as long as you leave the version number the same. (Increment the build number)  Each new version requires TestFlight approval. (1.0, 1.0.1, 1.2, etc)  When asked if you made ""significant changes"" say no or it'll send it through review again."
iOSProgramming,3cy6jx,brendan09,1 point,Mon Jul 13 05:01:17 2015 UTC,okay cool. thanks
iOSProgramming,3cy6jx,Aofwa,1 point,Mon Jul 13 14:29:29 2015 UTC,"Initial TestFlight review takes about 36 hours for me, while app store takes over a week.  After the initial TestFlight build, if you don't check ""major updates made,"" builds are ready instantly."
iOSProgramming,3cy6jx,tissin,1 point,Sat Jul 11 21:18:55 2015 UTC,"Thanks. Is that usually 36 business hours. If I submitted this morning, should I expect back to hear back Tuesday or Wednesday? 36 hours from Monday morning?"
iOSProgramming,3cy6jx,tissin,1 point,Sat Jul 11 21:28:00 2015 UTC,Probably Monday or Tuesday.  I believe that App Store Review is on weekends too.
iOSProgramming,3cy6jx,15458434,1 point,Sat Jul 11 21:31:58 2015 UTC,Tesflight is now up to 36 hours and App Store review takes about 9 days last time I submitted.
iOSProgramming,3cy6jx,Uscmeche,1 point,Sun Jul 12 09:59:31 2015 UTC,We've seen the same. Around 36 hours for TF external build. We've seen longer times too if we have IAP enabled in the app for full approval. Has anyone else seen this? Makes sense that they would take a bit longer to review.
iOSProgramming,3cxhvk,frakman1,3,Sat Jul 11 17:33:34 2015 UTC,Can you place this on Stack Overflow and link to it from here? I'll be sure to upvote it once you do.
iOSProgramming,3cxhvk,StunnerAlpha,1 point,Sat Jul 11 21:00:38 2015 UTC,done
iOSProgramming,3cxhvk,askoruli,1 point,Sun Jul 12 18:11:36 2015 UTC,I don't think it's possible to change or disable the shutter sound. It's there so apps can't be secretly taking photos.
iOSProgramming,3cxhvk,aazav,1 point,Sun Jul 12 00:16:42 2015 UTC,I think we did that be setting the sound volume to 0 temporarily or the sound output device to nil for a moment.
iOSProgramming,3ctneq,rizzledizzle,9,Fri Jul 10 18:04:14 2015 UTC,You work at launchkit? That is awesome! I use your screenshot generator for every app I make. Thanks to the whole team!
iOSProgramming,3ctneq,hagrids_a_pineapple,8,Fri Jul 10 19:22:10 2015 UTC,"Definitely gonna use this. I'm curious though, how are you able to offer this service for free?"
iOSProgramming,3ctneq,ThePantsThief,11,Fri Jul 10 19:43:05 2015 UTC,"Glad to hear! We're working on adding new premium features to each service (Screenshot Builder, Sales Reporter, App Websites, etc.) but everything we are releasing for free will always be free :)"
iOSProgramming,3ctneq,vale93kotor,5,Fri Jul 10 19:48:23 2015 UTC,"Thanks guys, the screenshot generator is awesome :)"
iOSProgramming,3ctneq,QuantumHoneybees,3,Fri Jul 10 20:27:40 2015 UTC,Will this website always be free? I'm currently working on an app that I want to have done by the end of the summer.. It needs a website and this would be perfect for it!
iOSProgramming,3ctneq,QuantumHoneybees,5,Fri Jul 10 19:45:45 2015 UTC,"Yes! We're going to add some premium features eventually to help pay for hosting it, but they will be optional. Everything we are releasing for free will always be free!"
iOSProgramming,3ctneq,iGoalie,1 point,Fri Jul 10 19:52:36 2015 UTC,That's perfect! I just need to get my app off the ground and hopefully I will be able to pay for the premium features!
iOSProgramming,3ctneq,Eat_Dinosaur,2,Fri Jul 10 19:59:07 2015 UTC,"This is really cool, (how do you offer this for free?)"
iOSProgramming,3ctneq,thisgotweird,3,Fri Jul 10 19:45:56 2015 UTC,We're going to be releasing optional but really cool premium features this fall to help us pay for it!
iOSProgramming,3ctneq,r618,2,Fri Jul 10 19:57:02 2015 UTC,"Wow, this is a really powerful tool. Great work here, man. The whole process is super easy, looks great, and only took about 5 minutes. I love startups that help other startups grow.  Could you talk a little bit about the backend technology? I'm very interested to hear what you guys use for this."
iOSProgramming,3ctneq,FaZe_Clon,2,Fri Jul 10 21:26:22 2015 UTC,"/u/thisgotweird is a better person to answer this, but we are using a custom javascript framework that he wrote called SkitJS which makes our web apps incredibly safe and easy to build/maintain.  Skit basically makes web apps into being an API client just like any other mobile app. In other words, the backend code is split so the ""webapp"" stuff doesn't live in the same server as the API (and get special privileges), as it does in so many other backend servers.   Here's a Medium post he wrote about the how's the why's of Skit which is worth checking out. Hope that's useful!"
iOSProgramming,3ctneq,dreaminginbinary,2,Fri Jul 10 21:39:29 2015 UTC,"As /u/rizzledizzle mentioned, the web frontends are skit (http://skitjs.com/) -- we have one skit tree with all our web/HTML logic in it for all the LaunchKit products (mostly vanilla JS + CSS + Handlebars templates). The app website rendering code is shared directly between the main launchkit.io skit frontend and the frontend serving custom domains (behind a separate ELB).  The backend API that powers everything (server- and client-side web + native clients we haven't released yet) is Django, but kind of Django-lite because it doesn't use a whole lot of whizbang Django-y stuff; it just serves RESTy JSON. As riz also mentioned, the frontends don't touch the database directly; everything goes through this backend API.  Most of this stack was carried over from our other project, Cluster (https://cluster.co/)."
iOSProgramming,3ctneq,bvsveera,2,Fri Jul 10 22:04:13 2015 UTC,"It's very user friendly, I like it;  How hard/im/possible would be moving the app specific generated page from https://launchkit.io/websites/<site_id> somewhere else ?  Mind you, I would probably have no problem leaving the app landing page there, I'm just curious about the hosting itself, its reliability and longterm availability"
iOSProgramming,3ctneq,patbdev,2,Sat Jul 11 01:16:06 2015 UTC,"This looks amazing, thanks for throwing it out here! I was going to code the HTML and CSS myself but this saves time."
iOSProgramming,3ctneq,mulligbc,2,Sat Jul 11 03:26:11 2015 UTC,I really enjoy what you guys are doing with the service. I'll be among your customers when you roll out the premium services.
iOSProgramming,3ctneq,air6199,2,Sat Jul 11 21:51:30 2015 UTC,"Wow, this is fantastic! Thanks for releasing this."
iOSProgramming,3ctneq,Uscmeche,1 point,Sun Jul 12 10:55:08 2015 UTC,Looks sweet! Footer links appear to be inaccessible (at least using safari on iPhone 6)
iOSProgramming,3ctneq,dcpc10,2,Fri Jul 10 23:13:08 2015 UTC,Hey Pat - Thank you for the bug report. Can you email me a link to where you're seeing that problem?  brenden@launchkit.io  thank you!
iOSProgramming,3ctneq,chewxy,1 point,Mon Jul 13 18:53:03 2015 UTC,"This is incredible! Few questions, can the site be published to WordPress and how easy would it be to add an email opt-in box? My app hasn't been released yet so I'd like a ""notify me"" email box for now and then replace it with the App Store button later."
iOSProgramming,3ctneq,pranoy1c,1 point,Fri Jul 10 23:16:40 2015 UTC,I love your products. I use the sales and review monitor. Product request: can you sync my Testflight external beta testers to an external service like Mailchimp? 😎
iOSProgramming,3ctneq,eddielement,1 point,Sat Jul 11 01:03:57 2015 UTC,Could you guys add the option to remove the black layer on top of the background image? Appreciate it.  Also: I noticed that you NEED to append 'www.' to the website url to go to it. Would be great if that behaved differently.
iOSProgramming,3ctneq,boboguitar,1 point,Sat Jul 11 02:25:15 2015 UTC,"Hm. There should be more form validation on the site. For example, I tried pasting in the full description for SquatCoach and it just wouldn't continue, because the ""short description"" was too long"
iOSProgramming,3cx5l0,ExplicitG,2,Sat Jul 11 15:43:19 2015 UTC,Add a UISwipeGestureRecognizer to the label.
iOSProgramming,3cx5l0,dcramps,1 point,Sat Jul 11 15:55:50 2015 UTC,Thanks! Does swiping working on the simulator? Pretty sure my code is right but nothing is happening. Trying to test it on my real phone but I'm getting an ineligible device error. I just updated to iOS 8.4 today. Code - http://i.imgur.com/JGKRTgP.png
iOSProgramming,3cx5l0,jonim93,3,Sat Jul 11 17:19:41 2015 UTC,"you have to add a colon to the selector's name in the constructor of the UISwipeGestureRecognizer, because your handler takes one argument:  var leftSwipe = UISwipeGestureRecognizer(target: self, action: Selector(""handleSwipes:""))"
iOSProgramming,3cx5l0,dcramps,2,Sat Jul 11 17:30:46 2015 UTC,"Thanks, I didn't know that."
iOSProgramming,3cx5l0,dcramps,2,Sat Jul 11 19:51:15 2015 UTC,"Your selector signature in the init method doesn't match the one you implemented.  This should be crashing your app. It's not, because you need to turn on userInteractionEnabled on the label first. Do that, watch it crash, then fix up your selector signature and you'll be all set."
iOSProgramming,3cwm96,boboguitar,2,Sat Jul 11 12:07:33 2015 UTC,"Thirty view controllers is probably too much for a single storyboard.  You should look at how you can group your view controllers into logical sections, then split them up into separate storyboards.  If you've got lots of view controllers that do similar things, you should probably have a single view controller that you can configure in different ways.  If your initial screen has eight buttons, perhaps it's a sign that your user interface is overly complex and needs simplifying."
iOSProgramming,3cwm96,JimDabell,2,Sat Jul 11 13:09:46 2015 UTC,"Xcode 7 and iOS 9 allow for easier use of additional storyboards. Splitting them up isn't a bad idea even in Xcode 6 because it makes it easier for multiple programmers to work on a project - you just need a little bit of code to move from one to another.    Xcode really should support larger storyboards better, though."
iOSProgramming,3cwm96,chriswaco,1 point,Sat Jul 11 14:20:12 2015 UTC,"Even if you use a separate storyboard file per screen you're still reaping the benefits because they have slightly more features than a .xib per screen. I think UITableViewCell templates is one of the most important features .xibs don't have.  If you're not using Xcode 7 yet as chriswaco already said you can simply instantiate a new view controller from a storyboard easily.  In my experience the optimum is cutting them up in simple flows of 3-5 screens and when there's one of those single screens that's not really part of a flow (let's say a Search screen) you can do it as a storyboard for one screen. So all screens inside a storyboard are connected.  What I don't like is having orphan screens inside a view controller, so for example putting the Search screen together with the Login flow without any segue to connect them."
iOSProgramming,3cwm96,lucasvandongen,1 point,Sat Jul 11 14:57:47 2015 UTC,https://github.com/rob-brown/RBStoryboardLink
iOSProgramming,3cvbrd,FaZe_Clon,1 point,Sat Jul 11 02:02:41 2015 UTC,You might want to check iOS Meetups in your area.
iOSProgramming,3cvbrd,affeking,1 point,Sat Jul 11 04:34:20 2015 UTC,I actually just found one about an hour ago that's going on in a few days so I may go. Thank you though!
iOSProgramming,3cvbrd,serrghi,1 point,Sat Jul 11 05:06:20 2015 UTC,"Too bad over the internet doesn't count, I'd love to help you out. Feel free to PM me if you have any questions that come up during your learning experience :)"
iOSProgramming,3csc1v,Voley,15,Fri Jul 10 11:14:24 2015 UTC,Do you mind recording it and making it available after the stream? Thanks for doing this!!
iOSProgramming,3csc1v,falder12,21,Fri Jul 10 11:21:12 2015 UTC,"Yes, it will be posted on youtube."
iOSProgramming,3csc1v,matoelorriaga,2,Fri Jul 10 11:43:14 2015 UTC,thanks!
iOSProgramming,3csc1v,themightyspitz,2,Fri Jul 10 14:26:50 2015 UTC,Sweet! Can't wait to check it out!
iOSProgramming,3csc1v,Drumitar,2,Fri Jul 10 16:59:10 2015 UTC,awesome !
iOSProgramming,3csc1v,CurlyT,1 point,Fri Jul 10 20:07:41 2015 UTC,I second this!
iOSProgramming,3csc1v,gtsiap,1 point,Fri Jul 10 11:30:43 2015 UTC,+1 !
iOSProgramming,3csc1v,mavdev,1 point,Fri Jul 10 11:36:08 2015 UTC,"hey, would love to see the youtube link. Is it up?"
iOSProgramming,3csc1v,pakkolol,1 point,Fri Jul 10 14:58:58 2015 UTC,The stream will start in 2.5 hours. The youtube link will be up tomorrow.
iOSProgramming,3csc1v,jarosan,2,Fri Jul 10 15:28:23 2015 UTC,Thanks great idea!
iOSProgramming,3csc1v,tjgrant,2,Fri Jul 10 13:36:44 2015 UTC,Subscribing for VOD
iOSProgramming,3csc1v,BrandanDeMamp,2,Fri Jul 10 14:25:18 2015 UTC,"At the time of this comment, you're in the middle of streaming, but a a question out of curiosity:   Before you started, how long did you think this project would take? After you finish, how long did it take you? Are you re-using any code you've previously wrote or are you doing all this ""from scratch"" more or less?   I notice you're talking and explaining things conceptually while streaming, do you think that might be a bit of a slowdown in your progress? ;-)"
iOSProgramming,3csc1v,Ky1eT,2,Fri Jul 10 19:26:54 2015 UTC,"Around 8 hours So far 4.5 hours No, all from scratch"
iOSProgramming,3csc1v,pseducode,2,Fri Jul 10 23:00:00 2015 UTC,"I thought you said 7 years, and I was really confused."
iOSProgramming,3csc1v,optik88,1 point,Fri Jul 10 16:22:16 2015 UTC,!RemindMe 1 Day
iOSProgramming,3csc1v,TelyX,1 point,Fri Jul 10 16:12:13 2015 UTC,"I can't wait to see the recorded vid!  when done, are you just going to update this post with the link, or make an entirely new post?"
iOSProgramming,3csc1v,optik88,0,Fri Jul 10 19:17:44 2015 UTC,!RemindMe 1 week
iOSProgramming,3csc1v,QuestionsEverythang,3,Fri Jul 10 11:45:52 2015 UTC,The OP commented that he'll post the video on YouTube after the stream...
iOSProgramming,3csc1v,Cyph0n,2,Fri Jul 10 13:00:49 2015 UTC,"Yup, it was for me to come and watch the video after, I can see how it looks though :P"
iOSProgramming,3csc1v,siliconespray,-8,Fri Jul 10 14:13:55 2015 UTC,Huge reading fail here
iOSProgramming,3csc1v,succeededcoma,0,Fri Jul 10 19:23:56 2015 UTC,Commenting for vod
iOSProgramming,3ctp1v,rizzledizzle,1 point,Fri Jul 10 18:15:49 2015 UTC,This is great news! Have they published any docs on the new HTTP API for push?
iOSProgramming,3ctp1v,erikvillegas,1 point,Fri Jul 10 20:00:26 2015 UTC,"No readable docs yet (that I can find), but watch What's New In Notifications WWDC 2015 video, and skip to 20:50"
iOSProgramming,3ctp1v,MrSloppyPants,1 point,Fri Jul 10 20:53:35 2015 UTC,"As you've stated, you'll need to use the new HTTP/2 based APNS Server API in order to take advantage of this. But it's good news for sure."
iOSProgramming,3ctp1v,zmist,1 point,Fri Jul 10 22:01:41 2015 UTC,"Right - and the 4KB is available on the HTTP/2 API, while the 2KB payload works on the socket-based server API. (4KB is their ""carrot"" to get people to switch to the HTTP/2 API, it seems)"
iOSProgramming,3ctp1v,MrSloppyPants,0,Fri Jul 10 22:16:10 2015 UTC,I wonder when they'll actually encrypt it.
iOSProgramming,3ctp1v,chriswaco,0,Sat Jul 11 05:40:20 2015 UTC,Why would they need to? You shouldn't be sending sensitive information in a push notification.
iOSProgramming,3ctmah,jakemarsh,2,Fri Jul 10 17:56:10 2015 UTC,Today's Friday July 10th
iOSProgramming,3ctmah,Tandoori_Pizza,1 point,Fri Jul 10 21:10:27 2015 UTC,"ACK - well that one will be a question on a game show someday.  Sorry about that, I was quite tired when writing this one heh."
iOSProgramming,3ctmah,k337,2,Sat Jul 11 02:33:34 2015 UTC,These are great - do they belong to a website or book?
iOSProgramming,3ctmah,awnton,3,Fri Jul 10 22:43:59 2015 UTC,http://littlebitesofcocoa.com :)
iOSProgramming,3ctmah,k337,1 point,Sat Jul 11 12:24:05 2015 UTC,"Nice one, I should have googled myself but I was tired and lying in bed 😅"
iOSProgramming,3ctmah,helpfuldan,1 point,Sat Jul 11 14:00:03 2015 UTC,"Yep, if you google the name you'll find it all :)  Also thanks so much for reading!"
iOSProgramming,3cu4yg,konstantin-koval,2,Fri Jul 10 20:12:38 2015 UTC,can you explain as I am 5 years old what is the purpose of that API?
iOSProgramming,3cu4yg,MarsSpaceship,1 point,Sat Jul 11 02:57:47 2015 UTC,"Get information about your object.  Example - You want to know all properties (variables) names of your object. It is very useful for JSON encoding, when you need to cover your object to JSON"
iOSProgramming,3cu4yg,MarsSpaceship,1 point,Sat Jul 11 06:14:49 2015 UTC,"ahhh, thanks for the explanation. My use of JSON in the past was very limited."
iOSProgramming,3cu4yg,ThePantsThief,1 point,Sat Jul 11 13:24:31 2015 UTC,Neato! Is it possible to reflect methods or instance variables in Swift?
iOSProgramming,3cu4yg,ThePantsThief,1 point,Sat Jul 11 00:59:27 2015 UTC,"Right now it's only possible to inspect variables (the called properties in Swift) theirs names, types and values. Thinking of adding objc-rutime support for getting methods as well, but that would use objc :( which I don't want"
iOSProgramming,3cu4yg,ThePantsThief,1 point,Sat Jul 11 05:46:01 2015 UTC,"Oh, apparently ""a Swift property does not have a corresponding instance variable,"" interesting.  If you want some example code, I recently wrote the equivalent in Objective-C, which I dubbed MirrorKit. Feel free to make it a dependency or use it to help write your own!  It won't support getting methods on pure Swift objects, though, since they don't use dynamic dispatch. It'll work for any Objective-C object however."
iOSProgramming,3cu4yg,clooth,1 point,Sat Jul 11 06:14:34 2015 UTC,"Thanks, I will have a look on it. It's still possible to use objc_getClass and other Runtime API in Swift. So maybe I will add some usage of it."
iOSProgramming,3cw2ad,th3phantom,3,Sat Jul 11 06:43:40 2015 UTC,"Is this an app for personal use or something you plan to release on the App Store? If you plan to release it on the App Store and Apple do a good job reviewing it, it will be rejected. Continually posting data to a web server is very malwarish"
iOSProgramming,3cw2ad,nullput,2,Sat Jul 11 11:15:00 2015 UTC,Okay so for starters this is a terrible idea. You are going to slaughter your users' battery life. How on earth do you justify doing this kind of heavy lifting every three minutes?
iOSProgramming,3cw2ad,gormster,1 point,Sat Jul 11 12:38:21 2015 UTC,"What do you mean by ""totally close the app""? And what's wrong with the code you currently have?"
iOSProgramming,3cw2ad,askoruli,1 point,Sat Jul 11 06:57:28 2015 UTC,My current code just doing once POST request when the app opened but it's not keep POSTING even when user go to another view. What i wanna really to achieved is POST REQUEST keep posting the data for every 3 minute even the user go to another view or switching to another app.
iOSProgramming,3cw2ad,askoruli,1 point,Sat Jul 11 09:41:38 2015 UTC,"It should keep posting while your app is open but once the user minimises the app you'll have to do something different, look into background fetch. This should give you a decent introduction:  http://www.objc.io/issues/5-ios7/multitasking/  You wont be able to do anything like 3 minutes though, you're looking at more like it being called every hour."
iOSProgramming,3cw2ad,caffeinatedhacker,1 point,Sat Jul 11 10:18:42 2015 UTC,It's only firing once due to an issue with how you're scheduling the timer.
iOSProgramming,3cw2ad,15458434,1 point,Sat Jul 11 17:21:01 2015 UTC,iOS takes control over when your app runs in the background. So you can't have it do stuff every three minutes.
iOSProgramming,3cw2ad,15458434,1 point,Sat Jul 11 07:19:58 2015 UTC,What do you mean?
iOSProgramming,3cw2ad,TheMiamiWhale,2,Sat Jul 11 09:42:05 2015 UTC,When your app is off screen and in the background there is no way to tell when your app will run some code in the background. This is totally controlled by iOS itself and you can't do anything about that.
iOSProgramming,3cw2ad,trusk89,1 point,Sat Jul 11 12:42:03 2015 UTC,What i wanna do just like background fetch which will keep fetching the data iin background even user switching to another app but for POST to webservice.
iOSProgramming,3cuxem,ModeratorRyan,2,Fri Jul 10 23:53:49 2015 UTC,"Well, i think the key to this is you're saying you want to ""display all major cities that have the current time 5am/pm "" but i guess its supposed to be based on the local individuals time zone 5am/5pm?  Pretty much what id do is id approach this by checking the local timezone first. If its 5am/5pm, then id look at all the major cities you have listed and look at their timezones. If the timezones match, you could display it. Not sure if that takes in to daylight savings properly--another idea is just have your cities and convert the times to UTC, then when local timezone is 5, display anyone who's time is the same in UTC."
iOSProgramming,3cuhac,Mrredditorson,1 point,Fri Jul 10 21:46:29 2015 UTC,Does she have an iPhone that has a lower version of iOS than the lowest version your app supports? For example your app is iOS 8 and up and she has an iPhone 4 with iOS 7.x
iOSProgramming,3cuhac,15458434,1 point,Sat Jul 11 07:12:13 2015 UTC,"Hah, she does have an iPhone 5s, dunno if she upgraded to iOS 8 but all of my apps support at least iOS 7. That's a good thought though"
iOSProgramming,3ctmfa,ThePantsThief,1 point,Fri Jul 10 17:57:10 2015 UTC,"I haven't dived deeply into the objective c  runtime but it seems pretty clear from the definition id objc_msgSend ( id self, SEL op, ... ); that types are being ignored at runtime. Take this example:  NSSet* set = (NSSet*) [[NSArray alloc] init]; NSLog(@""%d"",[set count]); //prints 0   This will compile and run without any errors. The cast stops the compiler from complaining and the cast does nothing at runtime. Then when calling [set count] it becomes objc_msgSend(set, NSSelectorFromString(@""count"")). Since both NSArray and NSSet respond to the selector count the code runs fine.  I feel I may have missed part of what you were asking though."
iOSProgramming,3ctmfa,askoruli,1 point,Sat Jul 11 02:04:37 2015 UTC,"I'm asking if the syntax NSObject *foo is allowed by the compiler, because here NSObject is being used as a type instead of an object, but NSObject is not declared as a type, as far as C can tell. id is declared as a typedef, however. I'm not even sure if my question makes sense, tbh"
iOSProgramming,3ctmfa,askoruli,1 point,Sat Jul 11 02:11:04 2015 UTC,NSObject isn't declared as a type in C but it is a type in obj-c. I don't see why it needs to be a type in C
iOSProgramming,3ctmfa,askoruli,1 point,Sat Jul 11 02:19:17 2015 UTC,"Because Objective-C is a pure superset of C. I guess I've answered my own question though; it's probably just compiler magic, like all of the @ keywords and literal syntaxes."
iOSProgramming,3ctmfa,shiggie,1 point,Sat Jul 11 06:11:59 2015 UTC,Objective-C being a superset of C means that all C code is valid in Objective-C but the reverse does not hold.
iOSProgramming,3ctmfa,somethingpunk,1 point,Sat Jul 11 06:21:04 2015 UTC,"I know, that's what I was asking; if there was actually something behind the scenes making it valid C syntax (like id) or if it's compiler magic."
iOSProgramming,3ctztk,northernpenguin,1 point,Fri Jul 10 19:34:06 2015 UTC,Doesn't seem to fix Office 2011 though.
iOSProgramming,3ctztk,ThePantsThief,1 point,Fri Jul 10 19:34:21 2015 UTC,Try the office 2015 beta
iOSProgramming,3ctztk,ThePantsThief,1 point,Sat Jul 11 19:15:16 2015 UTC,I don't have Office 365 so I am using Mail.app and Pages until September hits
iOSProgramming,3ctztk,ThePantsThief,1 point,Sat Jul 11 20:27:55 2015 UTC,You don't need it! It's free!
iOSProgramming,3ctztk,derfherdez,1 point,Sat Jul 11 20:32:29 2015 UTC,Office 2016 was actually released (not beta) on Thursday. That removed the free price unless you have Office 365 subscription but I could do the 30 day trial.
iOSProgramming,3ctg18,sponrad,2,Fri Jul 10 17:10:59 2015 UTC,Of course you get that. In iTunesConnect you get an overview of the amount of units per country per day.
iOSProgramming,3ct3sg,CinoRips,2,Fri Jul 10 15:37:57 2015 UTC,So many table view controllers.
iOSProgramming,3ct3sg,Maj0rPaine,2,Fri Jul 10 16:39:26 2015 UTC,"From you description, it seems like you only need 1 table view controller. Just pass in the data set that you want to be displayed each time you push to the table view controller:  CustomTableViewController *customVC = [[CustomTableViewController alloc] initWithData:<your_data_source_here>];"
iOSProgramming,3ct3sg,swineflu11,1 point,Fri Jul 10 17:35:21 2015 UTC,"You are making a big mistake here that is gonna cause you insane head ache in the future. Learn Design patterns, specialy the MVC Model-View-Controlers.  The problem is that it looks to me that you use tableview to store the actual data.   What you need is 1 Table View, 1 ViewControler and 1 Database  Lets say you want to display the next dataset, then you call a delegate from the Tableview, llets calt it getnewData. the Viewcontroler implements that delegate and the getnewData method, then the Viewcontroler Retrieves the data from the Model (a class that reads, writes and stores data) and sends that data back to the TableView.  That way you have 1 Class that manages data, ViewControler manages that passing of data between that Dataclass and the tableview and the TAbleview that ONLY display the data.  https://www.youtube.com/watch?v=_Qbjwx0hB6A  this is a nice video, Learn the MVC desing patter, it is gonna save you a lot of headache (learned this the hard way), BY using those design pattern you avoid a lot of common problems by default"
iOSProgramming,3ct3ce,Slayer122678,1 point,Fri Jul 10 15:34:27 2015 UTC,Check out flic: https://flic.io
iOSProgramming,3ct0yo,BlackOptimist,3,Fri Jul 10 15:16:01 2015 UTC,It will matter in terms of sanity. I cannot recommend buying a $400 Mac.
iOSProgramming,3ct0yo,hagrids_a_pineapple,4,Fri Jul 10 18:02:57 2015 UTC,A good alternative for you could be a mac mini -- around the same price range and pretty good specs.
iOSProgramming,3ct0yo,skunkcat,1 point,Fri Jul 10 17:40:09 2015 UTC,"It may technically work, but honestly, it's going to be painful.   You won't be able to comfortably update the OS to take advantage of new SDK features, and you'll have a difficult time running some of the more powerful tools. But possible."
iOSProgramming,3ct0yo,johnwickham,1 point,Fri Jul 10 17:15:30 2015 UTC,I'd stay away from any Core2Duo machines at this point. Try to get at least an i5 if you can so that you'll be able to stay current with OS X. Apple likes to force developers to stay current by deprecating the ability for new versions of Xcode to run on previous versions of OS X.
iOSProgramming,3ct0yo,MrSloppyPants,1 point,Fri Jul 10 17:15:38 2015 UTC,"i would not recommend this. I bought a macbook pro 4 years ago with 4 gigs of ram and regular hard drive. it was just too slow to be able to do multiple Xcode projects and simulator plus other browser stuff. ended up upgrading to 16 gigs ram and ssd. best decision ever. I would just suggest getting a mac mini as someone else suggested. You will already have plenty of other shit to be fighting with when learning iOS programming, poor performance and crashes due to memory/processing issues is the last thing you will want to be frustrated with."
iOSProgramming,3ct040,skunkcat,1 point,Fri Jul 10 15:09:16 2015 UTC,So I am trying to understand a bit more what you are trying to do. Im guessing the whole editing debacle is to enable editing mode for the table view in each of the controllers.  Would it not be easier to create  a UIBarButtonItem and place it in the main ViewController and then have it determine which of the three tableViewControllers tableviews to be placed in editing mode?  It would be great if you could provide some additional information if I am incorrect about something.
iOSProgramming,3ct040,phillebaba,1 point,Sat Jul 11 20:04:32 2015 UTC,"Yes, that I precisely what I am trying to do -- I am currently testing out a UIBarButtonItem placed within storyboard (on the main viewController,) with the action  - (IBAction)toggleEditingMode:(id)sender { UITableViewController *firstController = [self.storyboard instantiateViewControllerWithIdentifier:@""firstController""]; UITableViewController *secondController = [self.storyboard instantiateViewControllerWithIdentifier:@""secondController""]; UITableViewController *thirdController = [self.storyboard instantiateViewControllerWithIdentifier:@""thirdController""]; // If you are currently in editing mode... if (self.isEditing) {      // Change text of button to inform user of state     [sender setTitle:@""Edit""];      // Turn off editing mode     [firstController setEditing:NO animated:YES];     [secondController setEditing:NO animated:YES];     [thirdController setEditing:NO animated:YES];     [self setEditing:NO animated:YES];     if(firstController.editing) {         NSLog(@""editMode on"");     } else {         NSLog(@""editMode off"");     }}     else {      // Change text of button to inform user of state     [sender setTitle:@""Done""];      // Enter editing mode     [firstController setEditing:YES animated:YES];     [secondController setEditing:YES animated:YES];     [thirdController setEditing:YES animated:YES];     [self setEditing:YES animated:YES];     if(firstController.editing) {         NSLog(@""editMode on"");     } else {         NSLog(@""editMode off"");     } }   }  What the NSLog tells me is that the function is working -- and that the Child Controller firstController is in fact being set to editing mode.  My problem now is that although it is in editing mode, nothing changes. I want to be able to delete and move cells while in editing mode."
iOSProgramming,3ct79t,KtheGriffin,6,Fri Jul 10 16:04:27 2015 UTC,"I don't mean to be rude but you're literally asking people to develop an entire application for you. Specific questions are okay but you cannot realistically expect people to answer ""how can I write lines of code?"" wholeheartedly. Check out the resources on the sidebar to learn how to do it and good luck."
iOSProgramming,3ct79t,hagrids_a_pineapple,2,Fri Jul 10 19:17:26 2015 UTC,"To add to that, this is a very complex project, probably something an entire team of people would work on. Dozens of people or more."
iOSProgramming,3ct79t,ThePantsThief,2,Fri Jul 10 19:38:07 2015 UTC,Agreed  There is a lot at play here. Lots of R&D that should be done. Are you building out your backend yourself? Are you using a ready made solution? This is just a the tip of the iceberg.
iOSProgramming,3ct79t,succeededcoma,2,Fri Jul 10 22:50:13 2015 UTC,As a backend server I am using Parse with PubNub because it is going to be an IM app I worked on the other parts of the app like chat rooms and everything but I don't know how to create a matching algorithm like LykeMe. And no you are not rude it's good in fact to find honest responses and sorry if I seemed like asking you to write the whole thing for me I did everything except this algorithm (which the most important hahaha).
iOSProgramming,3ct79t,samrolken,1 point,Fri Jul 10 23:55:07 2015 UTC,"You're going to need a backend server for this. Your iOS app would be a client for this server. Your app would need to communicate with this backend application via an HTTP API. This backend would store the user account information and the user interests in a database. It would also have code implementing some algorithm for matching users. It would probably also handle the messaging features.  This is a lot to do, but I wouldn't say it's entirely out of reach. You'll need to learn a lot about creating a back-end server application. If you're familiar with any web development languages, start there. Work out the functionality on the back-end with a fully working API, then it will be relatively easy to hook your iOS app up to it."
iOSProgramming,3ct79t,askoruli,1 point,Fri Jul 10 20:51:12 2015 UTC,"Thx for your answer. I already have taken care of everything like backend servers, chat rooms and the design but I just don't know how to make the algorithm."
iOSProgramming,3ct79t,15458434,1 point,Fri Jul 10 23:56:19 2015 UTC,Take a look at this: http://rayli.net/blog/data/top-10-data-mining-algorithms-in-plain-english/  It's got some pretty simple explanations of algorithms to do the type of classification that you want. From my limited experience I don't think parse is going to be the correct choice here for the algorithm part. I would look into setting up a second server which does just your matching. That way it can be in whatever language is most appropriate and has the best support for the tools you need.
iOSProgramming,3ct79t,15458434,1 point,Sat Jul 11 01:48:09 2015 UTC,http://rayli.net/blog/data/top-10-data-mining-algorithms-in-plain-english/   Okay thank you for your help buddy :)
iOSProgramming,3crza4,th3phantom,2,Fri Jul 10 08:10:43 2015 UTC,location area code -> MapKit; cellId -> Not going to happen; cellTowerId -> Not going to happen; speed -> CoreLocation; direction -> Called heading in CoreLocation; compass -> CoreLocation; temp -> Don't know try IOKit if possible at all; imei -> Not going to happen; phoneNumber -> Not going to happen;
iOSProgramming,3ct27b,agirlnamedsew,1 point,Fri Jul 10 15:25:31 2015 UTC,"What instantly put me off was when you asked ""What is your current position"" and I clicked ""Student, Unemployed Looking for work.""  The next question it asks me where I worked."
iOSProgramming,3ct27b,BrandanDeMamp,2,Fri Jul 10 16:24:18 2015 UTC,When you finish it doesn't even show you the results 0/10 don't waste your time
iOSProgramming,3crgzd,Danappelxx,1 point,Fri Jul 10 04:33:23 2015 UTC,I added facebook chat into my app a long time ago when they offered an XMPP service but don't know what the API is like these days. Are you making a chat service integrate with facebook or just sending out predefined messages?
iOSProgramming,3crgzd,askoruli,1 point,Fri Jul 10 05:34:07 2015 UTC,They don't offer the XMPP service anymore (ever since they launched messenger). I could get away with sending a predefined message so technically I can simply make a image out of it but even so I would hate it if the user were to be forced to press 'send' 10 times instead of once.
iOSProgramming,3crgzd,15458434,0,Fri Jul 10 05:45:12 2015 UTC,"Yes, they do. I'm using the native Messages application on the Mac as my Facebook chat client. So that compliance is still there."
iOSProgramming,3crgzd,Power781,3,Fri Jul 10 07:30:52 2015 UTC,The xmpp compliance is due to be dropped in the next months (see the documentation)
iOSProgramming,3cnb5q,__brownbear__,7,Thu Jul 9 06:05:57 2015 UTC,This is brilliant. I think I'll implement it in https://github.com/FancyPixel/gulps if you don't mind :) Truly an amazing work.
iOSProgramming,3cnb5q,andreamazz,2,Thu Jul 9 08:26:19 2015 UTC,hah this is perfect for your app
iOSProgramming,3cnb5q,thisismyaccountclean,2,Thu Jul 9 14:05:04 2015 UTC,Go for it! It looks like it was meant to be paired with your app :)
iOSProgramming,3cnb5q,jmenter,3,Thu Jul 9 16:31:50 2015 UTC,Looks neat. Any reason UIColorFromHex is a subclass of NSObject rather than a category on UIColor?
iOSProgramming,3cnb5q,klopjobacid,1 point,Thu Jul 9 11:27:25 2015 UTC,Got slightly lazy refactoring it :P I should really just make it a category
iOSProgramming,3cnb5q,brianlikesmusic,3,Thu Jul 9 16:32:57 2015 UTC,Love this. Nice.
iOSProgramming,3cnb5q,Starchand,3,Thu Jul 9 06:35:51 2015 UTC,"You know you have to do the rest of the elements now, right?"
iOSProgramming,3cnb5q,ArvoHeikki,2,Thu Jul 9 14:51:36 2015 UTC,"I hear if you run it on five phones, it summons a blue hero with green hair"
iOSProgramming,3cnb5q,aporcelaintouch,2,Thu Jul 9 16:38:25 2015 UTC,"Love it. Can't imagine where I would use it unless I make a liquid related app, but still - very cool."
iOSProgramming,3cnb5q,johnwickham,2,Thu Jul 9 07:29:13 2015 UTC,Very spiffy!
iOSProgramming,3cnb5q,Scatterfelt,2,Thu Jul 9 12:21:40 2015 UTC,"Looks great! Was actually thinking about implementing exactly something like this in an app i've been working on, will have to give it a try!"
iOSProgramming,3cnb5q,_brownbearlover_,2,Thu Jul 9 13:37:57 2015 UTC,This is so so nice! Great work
iOSProgramming,3cr5z2,hdoria,2,Fri Jul 10 02:53:16 2015 UTC,"Until you find a fix, you can get to the scheme sheet by going to the menu bar, clicking Product, holding Option and then clicking one of the first five menu items (Run…, Test…, Profile…, Analyze…, Install…, Archive…)."
iOSProgramming,3cr5z2,NSCFType,1 point,Fri Jul 10 03:24:17 2015 UTC,"If possible, scale up the effective resolution of your screen and make the Xcode window bigger.  I had this happen on my 15"" MBP, I usually run it at the 1440x900 resolution however I had to scale it up to the 1680x1050 resolution and make the Xcode window larger to show the scheme selection menu"
iOSProgramming,3crrci,joegoggin27,10,Fri Jul 10 06:26:12 2015 UTC,Learning to use periods first will benefit you immensely
iOSProgramming,3crrci,hagrids_a_pineapple,7,Fri Jul 10 22:25:56 2015 UTC,"My advice, your first App will be probably one giant learning experience. And it's not going to attract that many users. Let the App be a learning experience and worry about creating a company for the second App by that time you figured out how the game works and you can make some money."
iOSProgramming,3crrci,15458434,1 point,Fri Jul 10 07:26:52 2015 UTC,"You can sign up for iAds with your own account you don't need an organization account. It's dead simple if I recall correctly, you simply hop onto the apple developer portal and you should sign up for iAds and add the banner view into your app. Why not release the app under your account - why do you need an organization account?"
iOSProgramming,3crrci,Pango56,1 point,Fri Jul 10 06:58:48 2015 UTC,I was looking to change it to an organization account because right now under the company name it says my dads name and i was kind of hoping to change it to say something different sense it says my dads name on it
iOSProgramming,3crrci,whynotmatt,1 point,Fri Jul 10 15:40:11 2015 UTC,"To switch to an organization you will have to contact Apple support directly. They don't allow you to change the name on the developer account yourself. And if you are wanting to switch it to an organization, be prepared to have documentation (like a business license or DUNS number) showing that you actually are an organization."
iOSProgramming,3crrci,whynotmatt,0,Fri Jul 10 17:45:57 2015 UTC,i just contacted them and they said that i have to be registered as a company before i can get a DUNS number. Do you know how i can do that? the people on the support line said that they couldn't supply me with that information because they didn't know.
iOSProgramming,3cphwi,Airglow26,2,Thu Jul 9 19:00:28 2015 UTC,Working with Foundation objects you could serialize as JSON; NSJSONSerialization.
iOSProgramming,3cphwi,sneakattack,2,Thu Jul 9 19:05:21 2015 UTC,"If you're already working with Founation objects, the simplest way would be to just use NSArray.writeToFile(). NSJSonSerialization works too, but has a much steeper learning curve imo. I'm not sure why anyone would use it to write something instead of NSArray.writeToFile()... does it have any upsides I'm unaware of?"
iOSProgramming,3cphwi,ThePantsThief,1 point,Thu Jul 9 19:35:45 2015 UTC,"XML vs JSON  OP didn't specify much detail about his use case. Even if JSON isn't the best choice in OP's use case, it's still nice to throw it out there so people know it's an option.  And it's not really that complicated to use, a couple more lines of code at best."
iOSProgramming,3cphwi,sneakattack,1 point,Thu Jul 9 20:07:03 2015 UTC,"Gotcha, okay. I've just never seen it used for anything except parsing JSON HTTP responses, so I was a little thrown off to see it suggested for serializing an array. Definitely good to know."
iOSProgramming,3cphwi,ThePantsThief,2,Thu Jul 9 20:24:05 2015 UTC,PLists were the standard answer in Objective C - wonderful things.  No idea if they work with Swift.  But you could simply stick them in NSUserDefaults and get them back same way.  I hope that still works.
iOSProgramming,3cphwi,cyancynic,1 point,Thu Jul 9 19:42:46 2015 UTC,"You're probably best off converting your Swift arrays to NSArrays before serializing them.  let swiftArray = ...  let foundationArray = swiftArray as NSArray foundationArray.writeToFile(pathToFile, atomically:true);  // read it back in let anotherArray = NSArray(contentsOfFile: pathToFile)   But since the inner arrays are not of type NSArray, you need to either convert them as well, or create them as NSArrays initially. Also, I'm not very familiar with Swift, so there may be more caveats I'm not aware of (like, maybe swift strings won't serialize or something, but I think they bridge to NSString automatically so that shouldn't be a problem). But this should point you in the right direction :)"
iOSProgramming,3cphwi,ThePantsThief,1 point,Thu Jul 9 19:05:45 2015 UTC,I'd use the CoreData framework for this.
iOSProgramming,3cpyvs,LaserWolfTurbo72,4,Thu Jul 9 21:01:28 2015 UTC,"Facebook and Twitter didn't start with ads. They built a user base and added them later. Some people were unhappy, but they mostly got over it."
iOSProgramming,3cpyvs,brendan09,3,Thu Jul 9 21:27:24 2015 UTC,"I think for the scenarios you described its fine. Most apps will fail to be successful, so putting a lot of effort into monetization before you even have a user base may end up being a waste of time. Not to mention, if your app relies on user generated content, charging or having ads will probably only hurt you until you have a decent amount of content accumulated."
iOSProgramming,3cpyvs,blamsonyo,2,Thu Jul 9 22:02:59 2015 UTC,"I've started a few businesses and from what I've found, they're 2 main ways in tech to make money:   Offer a product / service, charge for it and get paid to do your work Give everything away for free, get lots of eyeballs, get investments to expand, and continually expand till your investors / you feel it's the right time to monetise.   With (1) the business model is very easy and if you're successful, you get more profit which you can then put into more advertising / marketing / staff to grow your business.  With (2) the business model is very complicated.  If you're successful you spend even MORE money and you need to get investment to continually grow your business.    The reason why Facebook and Twitter made it so far was because they had rapid growth (do you know how to get rapid growth?) and they have access to investors who gave them a lot of money to cover their expansion cost / hire staff / grow very quickly.  If you're a first time business owner, I'd highly recommend (1).  If you'd still like to persue (2) do you have access to mentors or have you got into something like ycombinator?  How comfortable are you with talking to investors and getting funding?  Do you know how to run numbers to wet investors appetites, and how are your presentation skills to go to something like Techcrunch Disrupt / The Verge / etc to build buzz?    Had a quick look through Crunchbase for Quora, they've raised over $161 million in funding.  Do you know how to unlock that capital to help your business grow with a ""free"" model?"
iOSProgramming,3cpyvs,jerroldp,2,Thu Jul 9 23:25:16 2015 UTC,While you may not want to launch with any monetization you probably want to have at least thought about it. If you're trying to get investors onboard then they'll want to know how the app will eventually generate revenue. Also the model you choose may have an impact on the app design so having it up front may save you rewriting a lot of code.
iOSProgramming,3cpyvs,askoruli,0,Thu Jul 9 23:28:32 2015 UTC,"If you are not thinking of monetization from day one then I believe you are failing. You are not facebook or twitter. Unless you are getting funded (and you are not or you would not be asking on reddit) then you better either give it away, or plan on how to make $ from day one."
iOSProgramming,3cpyvs,theBigDaddio,1 point,Fri Jul 10 00:44:51 2015 UTC,"It's impossible to ""give it away"". There's value in everything, including free users. Focus on making a good app. The money will be a lot easier to figure out then. If you can't make a good app, monetization doesn't really matter.   Obviously if the app is going to take you 3 years to create, nothing should be an afterthought. But on the normal app timeframe the idea of ""let's make this super amazing free app then figure out the money"" is perfectly acceptable. Let's remember the @ and # on Twitter were USER suggestions post launch.   I'd be shocked if there was someone out there who is making really good fun popular apps who isn't making money."
iOSProgramming,3cnzfx,sucksatmostthings,2,Thu Jul 9 11:36:30 2015 UTC,"For games and other apps that leverage the GPU, I would recommend always testing on device. It's a better representation of the performance characteristics you'll see (even with a debug build). Perhaps it's just me, but I don't see much of a latency diff in deploying to device over the simulator. In fact, quickly deploying to device is one of the advantages of using SpriteKit over Unity. Deploying to a device from Unity can easily take 5 mins (at least on my machine). The danger there is that it promotes prolonged development on the desktop. Your app runs great until you put it on device."
iOSProgramming,3cnzfx,aoakenfo,1 point,Thu Jul 9 17:47:02 2015 UTC,And preferably test it on the slowest device it should run on.
iOSProgramming,3cp5mr,redfire333,3,Thu Jul 9 17:27:43 2015 UTC,Marco Ament did a pretty good job fleshing out a podcast app with his Overcast app. Take a look at that.
iOSProgramming,3cp5mr,bhodinut,1 point,Thu Jul 9 21:28:00 2015 UTC,"Yup, I think it took him roughly a year to get to 1.0 (give or take a month or 2). Best podcast app on the market though."
iOSProgramming,3cp5mr,div,1 point,Fri Jul 10 21:46:18 2015 UTC,"I like it too, but I hate how he still hasn't added streaming. I don't want to download my podcast on wifi or wait for it to finish downloading to play. I just want to see a list of episodes and have it play immediately.   I still have unlimited data from Verizon so that could be why..."
iOSProgramming,3cp5mr,succeededcoma,1 point,Sat Jul 11 16:20:11 2015 UTC,"I think you should look at CoreAudio / AudioToolbox for playback. Overall the app itself shouldnt be to hard. Depends on where you are getting your podcasts from as well, I would assume."
iOSProgramming,3cp5mr,tangoshukudai,1 point,Thu Jul 9 18:31:04 2015 UTC,"It is all about interface design.  Create a beautiful design, then architect the app, then get to work.   If you want a proof of concept app then that can be done in a couple hours, a polished app with one developer would probably take a few weeks - months."
iOSProgramming,3com13,ItsLukeHill,0,Thu Jul 9 15:04:41 2015 UTC,"Im sure there are plenty of frameworks that have been developed to ease the creation of such an app, but wouldnt it seem much more fulfilling to build this app yourself rather than stick pretty much an entire app someone else wrote in the app store as your own?"
iOSProgramming,3com13,succeededcoma,1 point,Thu Jul 9 18:32:24 2015 UTC,No.  I'm not an app programmer I'm a video producer.  How would one find frameworks like the ones you mention?
iOSProgramming,3cl9yg,okgabr,10,Wed Jul 8 20:04:03 2015 UTC,"Fact: Flappy Bird’s success was because of its user reviews, >reaching 700,000 reviews per month   Legitimate question: How is the author so sure which is the cause and which is the result? Flappy Bird and the reactions of its players were massively hyped on social media (Vine, fb) and it was temporarily turned into some kind of a meme. Obviously a large userbase brings in more reviews, so it was sure that it would reach the ratings per month as stated in the article."
iOSProgramming,3cl9yg,pwnflakes,1 point,Wed Jul 8 21:17:42 2015 UTC,"The quoted ""fact"" is completely absurd. It's much more likely, as you suggested, that the increased number of downloads caused the increased number of reviews.   There's absolutely no evidence suggesting the opposite is even remotely plausible, and linking to a bunch of speculation does nothing to prove otherwise."
iOSProgramming,3cl9yg,n0damage,0,Sun Jul 12 02:10:08 2015 UTC,Here's the detailed case study that we used by Zack Williams on how Flappy Bird pushed users to rate their app to drive more downloads: http://zachwill.com/flappy-bird/
iOSProgramming,3cl9yg,zimm3r16,-1,Wed Jul 8 21:28:35 2015 UTC,Here's an article from VentureBeat that highlighted the implementation details: http://venturebeat.com/2014/02/11/how-in-app-review-mechanics-pushed-flappy-bird-to-the-top-of-the-charts/
iOSProgramming,3cl9yg,zimm3r16,7,Thu Jul 9 02:16:55 2015 UTC,"The key I've seen is to divert negative reviews. Prompt a custom rating notification or dialog or gui widget. Ask if they like it and give options of Love It! (take them to the app store), Hate It! (take them to a form that they can fill out and send to you (not the app store) and you can reply back), and of course No Thanks (no I don't want to leave a review)."
iOSProgramming,3cl9yg,CaptainShanks,2,Thu Jul 9 11:51:59 2015 UTC,That's a very nice implementation to direct each type of users to the appropriate channel. I'd love if you could share the before/after  numbers for the effect of that implementation on your apps.
iOSProgramming,3cl9yg,sobri909,3,Wed Jul 8 22:07:30 2015 UTC,Never done it! I'm pretty sure there was a post here or maybe in ux or design. It was successful though.
iOSProgramming,3cl9yg,CaptainShanks,1 point,Wed Jul 8 22:13:30 2015 UTC,"This is honestly pretty darn deceptive.  Users should have just as equal an accessible of a chance to give your app 1 star from a dialog as a 5 star.   You absolutely know that most people aren't going to fill out a negative review form, and you're taking advantage of a user's laziness or ignorance to artificially inflate the rating of a (probably) shitty app.  Definitely provide access to some sort of feedback form, but don't manipulate your users. That's just scummy."
iOSProgramming,3cl9yg,sobri909,2,Wed Jul 8 22:16:39 2015 UTC,"Bug reports that end up in App Store reviews can't be dealt with properly, be star there's no way to contact the person who had the problem.   So it's important to direct people with complaints and problems to your support channels, if you ever want to be able to help them."
iOSProgramming,3cl9yg,CaptainShanks,1 point,Thu Jul 9 01:45:14 2015 UTC,"Look, I understand that, but using a dialog to give only 2 choices, either to ""Give me 5 stars!"" or ""Leave feedback!"" (while not acknowledging the ability to give a rating lower than 5 stars) is still manipulative.  It's like telling a child they have the option to either go to bed or take a bath and go to bed. There are clearly other options, but the person being asked the question isn't going to think of them actively and proceed about their day/app.  Provide the option to give feedback, but don't wrap it in a dialog like that, you are literally just farming out for better ratings, and that's just plain tacky."
iOSProgramming,3cl9yg,sobri909,1 point,Thu Jul 9 05:45:30 2015 UTC,"We do it with three options:   Loving it! It's alright  There's problems    The first option thanks them then offers to take them to the App Store to leave a review.   The second option offers both a link to leave an App Store review and a way to send us feedback directly.   The third option only offers them a way to contact support. This is important, because we need to be able to contact people to fix problems with the app and with our service."
iOSProgramming,3cl9yg,zimm3r16,2,Thu Jul 9 05:55:22 2015 UTC,"That is actually pretty solid, and a good compromise of not being terribly manipulative about ratings and actually getting critical feedback. It makes sense that you would want the feedback to improve your app, especially in being able to reply directly to users, but making sure they understand that they are free to rate the app how they want is important, and might even make the user respect the dev more, at least in my opinion.  More people should think like you and not the comment thread originator :-)  I guess I'm just looking at this whole thing from the perspective of a heavy app user and a future developer who's still in college. As much as I understand that people want their apps to be a success, and that they face an uphill battle in a sea of crap to get visible, I just feel like there are non-evil ways to be successful."
iOSProgramming,3cl9yg,adremeaux,2,Thu Jul 9 06:06:26 2015 UTC,"Yeah I think it's important to be careful with the wording and the options you offer. It's entirely possible to do it in a dickish way. We've tried to strike the right balance, and it's worked out well.   I think that middle option is the important thing. It lets them say ""I'm not loving it, it's alright, and I might either want to tell the app makers about why, or I might want to tell everyone else by leaving an App Store review."" It's up to them."
iOSProgramming,3cl9yg,CaptainShanks,4,Thu Jul 9 06:19:02 2015 UTC,I'm not denying it is deceptive. But I disagree with App Store ratings. They majorly reflect the negative more then the positive. That's human nature. You're more likely to complain then congratulate
iOSProgramming,3cl9yg,Captn_King,0,Thu Jul 9 06:24:13 2015 UTC,"Deceptive or not, it's the only way to even the playing field. If everyone else is corking their bat without any penalties, are you not going to as well? You either run with the crowd or get steamrolled."
iOSProgramming,3cl9yg,aporcelaintouch,1 point,Thu Jul 9 02:40:09 2015 UTC,"So, the only way to become successful in a sea of shitty and deceptive apps is to become one of the shitty and deceptive apps?  I think I would prefer to fail with dignity."
iOSProgramming,3cl9yg,3amrous,2,Thu Jul 9 04:35:22 2015 UTC,Interesting. Has anybody actually used the instabug sdk that can confirm it lowers bad ratings?
iOSProgramming,3cnfpf,sneeden,1 point,Thu Jul 9 07:02:13 2015 UTC,"I've been using this in a new camera app I'm developing, and it's been so easy to use, in comparison to other solutions. Works in Swift with a bridging header too, which is nice."
iOSProgramming,3cnfpf,bvsveera,2,Thu Jul 9 11:27:29 2015 UTC,You were using this category before i posted here? Neat. I'll be interested to the app.
iOSProgramming,3cnfpf,bvsveera,1 point,Thu Jul 9 17:51:07 2015 UTC,"Yeah, took me quite some time to find this, so it's good to see it being shared here. I'll post a link to the app on this sub once it's on the App Store."
iOSProgramming,3cnfpf,bvsveera,2,Mon Jul 13 02:46:07 2015 UTC,"Glad you like it. If you have any ideas to add to it, let me know. I wrote it to do the jobs that it does but always wanted to come back and add some more. I haven't really done any Photos work since.   What do you use it for specifically? There seems to be a lot of interest in the metadata functions. I can't find a way to write it back out to iCloud without making a copy."
iOSProgramming,3cnevz,th3phantom,2,Thu Jul 9 06:52:01 2015 UTC,"This seems like a pretty good answer from: http://stackoverflow.com/questions/21350125/afnetworking-2-0-and-background-transfers   For background uploads, this is an annoyance (as your task-level informational progress and completion blocks you specified when creating the task will not get called). But if you employ the session-level renditions (e.g. setTaskDidCompleteBlock and setTaskDidSendBodyDataBlock), that will get called properly (assuming you always set these blocks when you re-instantiate the session manager)."
iOSProgramming,3cnevz,Ldellar,1 point,Thu Jul 9 07:55:09 2015 UTC,thank you.
iOSProgramming,3ckolq,jakemarsh,1 point,Wed Jul 8 17:38:40 2015 UTC,Is this 9+ only?
iOSProgramming,3ckolq,mistermagicman,2,Thu Jul 9 04:59:37 2015 UTC,"Nope, everything here will work in 8.0+ 👍🏻"
iOSProgramming,3cn985,alt51,3,Thu Jul 9 05:44:24 2015 UTC,"Sounds like a perfect case for IAP, basically Apple says that anything that is digital and consumed within the app should be an IAP."
iOSProgramming,3cn985,optik88,1 point,Thu Jul 9 09:03:08 2015 UTC,Perfect!  Thanks!
iOSProgramming,3cn985,brendan09,2,Fri Jul 10 00:15:59 2015 UTC,Yep. Perfect case for IAP. Just remember Apple will take 30% and price accordingly.
iOSProgramming,3cmzme,th3phantom,5,Thu Jul 9 04:09:29 2015 UTC,"You can do this easily with sets.  NSMutableSet *old = //set of friends from previous run NSSet *new = //friends from this run [old minusSet:new]   old now contains whoever deleted you since the previous run, and is much faster than an O(n2) array method."
iOSProgramming,3cmzme,dcramps,1 point,Thu Jul 9 05:09:33 2015 UTC,thank you
iOSProgramming,3cmzme,brendan09,3,Thu Jul 9 09:11:11 2015 UTC,"There isn't an API for friend add / remove activity, but you can get a current list of friends.  Essentially, here's what you need to do:  1) 3 Arrays:   1 array of all 'friends' the last time you checked 1 array of all current 'friends' for this check 1 empty array to contain people who have 'unfriended' since last check   2) Loop through old array of friends and make sure each friend is somewhere in the new array of friends. If they are, move on. If they're not, add them to the empty array.   3) Your previously empty array now contains people who were friends on the last check, but aren't in this check (if there were any)."
iOSProgramming,3cmzme,Egodude,1 point,Thu Jul 9 04:16:06 2015 UTC,thank you
iOSProgramming,3cmzme,brendan09,1 point,Thu Jul 9 09:11:07 2015 UTC,This will work but is extremely slow as it is going to be O(n2).  Working with sets will make this much easier since you can get the difference of two sets which would be what friends removed you.
iOSProgramming,3cmzme,Egodude,0,Thu Jul 9 22:42:25 2015 UTC,"NSMutableSet   This will have the same overhead. The difference is that it isn't your code, its NSSet's. Making a method call doesn't reduce the complexity of the overall execution....just the complexity of what you wrote.   They have the same complexity, however NSSet is faster than NSArray at some operations do to maintaining a hash-based lookup table (rather than using linked lists).  On this list size its going to be negligible or non-existant."
iOSProgramming,3cmzme,brendan09,1 point,Thu Jul 9 22:50:01 2015 UTC,"All you do is store one set of ""Old Friends"" then when the user wants new data you make a set of ""new friends"".  You then subtract the sets and you have the differences.  Inside of these sets I would make FBFriendObjects that have ID's associated with them then once you get your difference you can just request the info of those ID's and those are your friends that removed you.  Not sure how that wouldn't work."
iOSProgramming,3cmzme,optik88,0,Thu Jul 9 22:55:21 2015 UTC,"Which is simpler to code, but not simpler to execute. The algorithmic complexity of the underlying operation is the same."
iOSProgramming,3cmzme,brendan09,1 point,Thu Jul 9 22:56:04 2015 UTC,"Just a heads up though, if you do this then you WILL get a C&D as it violates policy.  There is no API method to get the complete friends list which means that the sites that are currently doing this are usually scraping the friends list which is also not allowed.  But yes the idea that @brendan09 mentions is how it would work"
iOSProgramming,3cmzme,optik88,0,Thu Jul 9 09:01:48 2015 UTC,There is an API to get the friends list.   https://developers.facebook.com/docs/graph-api/reference/v2.4/user/friends
iOSProgramming,3cmzme,brendan09,2,Thu Jul 9 14:01:37 2015 UTC,"You seem to be missing a very key point about that API endpoint:   This will only return any friends who have used (via Facebook Login) the app making the request.   So yes, if every single one of your friends had the app you were using for this then you would be covered, chances are though that is not going to be the case."
iOSProgramming,3cmzme,optik88,1 point,Thu Jul 9 14:15:33 2015 UTC,"Ah, good point. Definitely didn't see that part.  The last time I did it was with the taggable friends API, which is now deprecated and requires review to use. I assumed this was more or less a direct replacement. It appears not, probably for good reason. Yay, privacy!"
iOSProgramming,3cmzme,brendan09,1 point,Thu Jul 9 14:25:21 2015 UTC,"Yeah the idea behind the privacy overhaul is that no application should be able to get information about a user that has not specifically granted that information to that user.  The 'taggable_friends' API is very close to the old implementation but still will only grant you a local app-scoped user ID and the name, anything else you will need the permission of the user :)"
iOSProgramming,3cmxe3,kumarovski,5,Thu Jul 9 03:48:18 2015 UTC,This is really the only link you need to see what's available for iOS.
iOSProgramming,3cmxe3,brendan09,1 point,Thu Jul 9 04:03:40 2015 UTC,Are you talking specifically about frameworks available to developers within iOS or are you talking about development kits by third parties? IDEs?  Can you be a little more specific?
iOSProgramming,3cmudn,Ellsworthh4,2,Thu Jul 9 03:20:50 2015 UTC,Woe. Backup. A subview of UINavigationController? You shouldn't be doing that.  UINavigationController is meant exclusively to handle a navigation stack of view controllers.   self.navigationItem.leftBarButtonItem = self.editButtonItem   Works fine in View Controllers managed by UINavigationController. I'd suggest using a UITableViewController and adding it to the navigation stack of the UINavigationController.  Do not:   Add it as a subview to UINavigationController Use just a UINavigationBar Create tons of UIViews for screens without the accompanying UIViewController subclass   Also: Happy cake day
iOSProgramming,3cmudn,brendan09,1 point,Thu Jul 9 03:30:34 2015 UTC,"Oh, my bad. I mistyped; the UIView is a subview of a UIViewController that is on the navigation stack of a UINavigationController. My problem is that if I use    navItem.leftBarButtonItem = self.editButtonItem;   my subview does not enter into editing mode."
iOSProgramming,3cmudn,brendan09,1 point,Thu Jul 9 03:43:44 2015 UTC,"That only works if you're using a UITableViewController. You can use a UITableViewController as a child view controller of your UIViewController to achieve that.  SetEditing only works on a UITableView. Is that what you're using? If its just a custom UIView, there isn't a setEditing: method on it. You'll have to write all of that yourself."
iOSProgramming,3cmudn,brendan09,1 point,Thu Jul 9 03:55:39 2015 UTC,"Ahhh okay, I see what my problem is now. I am using a custom UIView with prototype cells, as I couldn't figure out how to set a UITableViewController as a child view in storyboard, though I suppose it might be easier for me to figure that out than to write my own editing methods.  Thanks for clearing that up for me!"
iOSProgramming,3cm94i,libationblog,2,Thu Jul 9 00:28:27 2015 UTC,"Are you just trying to figure out how to create a unique random number and attach a timestamp to it? That's all they're really doing to create a conference ID.  For a given User account, they have a list of Meetings. Each Meeting has a unique ID, a name, and a timestamp.  When that ID is sent to others... they plug it into the app, which  then looks it up in the Meetings table and pulls back the metadata.  This is how the ID system works. Actually facilitating a meeting is a completely different animal."
iOSProgramming,3cm94i,brendan09,1 point,Thu Jul 9 03:27:11 2015 UTC,No I am looking at doing both. I am just looking at getting the direction of a tutorial or set of tutorials so I can see how this is done to try and better understand it and then build it out for myself.
iOSProgramming,3cm94i,brendan09,3,Thu Jul 9 03:46:23 2015 UTC,"1) Parse won't be able to facilitate a service like this.  2) No offense, but if you don't know how to generate random unique integers (Like first week of CS classes)....you're definitely not going to be able to write the massive infrastructure required to support a conference or meeting system. Here in 3-5 years of heavy, heavy study and full-time programming maybe.... but these aren't easy systems to write.  Systems like this have dozens of people working on them and cost hundreds (or thousands) of dollars a year to use for a reason. They take a long time to build, and for one person is likely a multiple year project. Writing one that works even remotely well is a rather difficult software engineering problem.  There isn't going to be a tutorial teaching you how to write a system like this. It's too complex.  Shoot lower and start off with generating unique IDs, then learn basic networking, database theory, etc. You're several years from being able to approach a complex system like this.  I say this not to discourage you, but rather to tell you to set your sights more realistically. If you don't then you're going to wind up frustrated."
iOSProgramming,3cm94i,brendan09,1 point,Thu Jul 9 04:01:52 2015 UTC,"I do appreciate the honesty actually. And really its kind of a relief as I didn't know where to start on this and its clear why. Now I guess the real question would be since this isn't simple, instead of recreating the wheel is there an open source solution for this type of problem?"
iOSProgramming,3cm94i,brendan09,1 point,Sun Jul 12 05:03:41 2015 UTC,"No, but there are SDKs for services you can pay to provide a backend that facilitates video/audio streaming."
iOSProgramming,3clb2o,skunkcat,3,Wed Jul 8 20:11:36 2015 UTC,"You can change the target & action for a UIBarButtonItem on the fly. E.g., if you have this in viewDidLoad:  UIBarButtonItem *addButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(doInitialThing:)]; self.navigationItem.rightBarButtonItem = addButton;   Then later you can swap out the action like this:  UIBarButtonItem *addButton = self.navigationItem.rightBarButtonItem; addButton.action = @selector(doOtherThing:);   You can also change the target if you need to.  (ETA: You probably should keep a reference to the addButton instead of pulling it from self.navigationItem.rightBarButtonItem, just in case that gets cleared out.)"
iOSProgramming,3clb2o,ChristinaMltn,1 point,Wed Jul 8 21:19:43 2015 UTC,"Thank you, this seems relatively simple. I did not know that I could change the actions of buttons with a .action property!"
iOSProgramming,3clb2o,Syrinathos,2,Thu Jul 9 00:55:53 2015 UTC,Just refer back to the UISegmentedControl's selectedIndex property in your UIButton's method. Like...   if (segmentedControl.selectedIndex == 0) {       // Do this thing  } else {       // Do that thing  }
iOSProgramming,3clb2o,StunnerAlpha,1 point,Thu Jul 9 00:41:48 2015 UTC,Is there a difference between using if/else statements and using a statement such as:  switch (segment.selectedSegmentIndex) {     case 0:         //code     case 1:         //code   when using a UISegmentedControl?
iOSProgramming,3clb2o,WoolyEnt,5,Thu Jul 9 00:55:07 2015 UTC,"No difference, functions the same. Just a matter of preference."
iOSProgramming,3ckoyg,danielgomez22,3,Wed Jul 8 17:41:07 2015 UTC,Huh? Xcode already has shortucts for that. You can even choose specific panels with shortcuts.
iOSProgramming,3ckoyg,pukotoshana_murkals,1 point,Wed Jul 8 20:28:03 2015 UTC,"Agree. For all the faults Xcode has, a lack of short cuts isn't one of them. They're worth learning, at least compared to making your own."
iOSProgramming,3ckoyg,nXiety,1 point,Wed Jul 8 21:39:39 2015 UTC,"Sure, but you have to maintain them, and if you use beta versions... will be a pain to setup and remember which labels are for what (try it :P)"
iOSProgramming,3ckoyg,pukotoshana_murkals,1 point,Thu Jul 9 13:35:54 2015 UTC,"I don't have to mainrain them, they are there out of the box…"
iOSProgramming,3ckoyg,disco_sloth,1 point,Thu Jul 9 14:47:00 2015 UTC,Mantain what? They're always the same!
iOSProgramming,3ckoyg,disco_sloth,1 point,Thu Jul 9 15:19:45 2015 UTC,have you used the beta ones? or had to restart your OS sometime? then think hmmm what where the commands that I changed...
iOSProgramming,3ckoyg,Jeff_Johnson,0,Fri Jul 10 13:02:10 2015 UTC,Yes. No. I'm sorry you had to waste your time.
iOSProgramming,3ckulj,taroth,3,Wed Jul 8 18:19:27 2015 UTC,There's a kit for that.
iOSProgramming,3ckulj,nonofap111,4,Wed Jul 8 19:36:20 2015 UTC,"This generation of programmers are going to be retarded. It's already ridiculous. Lets start a project, okay first go import 154 frameworks to handle all the stuff we never had to learn ourselves. Now we're ready to code! Lets let the text flipping experts handle that, no reason to reinvent the text wheel!   Nothing against the creator. Cool repo. But seriously."
iOSProgramming,3ckulj,helpfuldan,2,Wed Jul 8 20:23:30 2015 UTC,"This is a really good point. The times I do use open source projects I do go through them to see how things are being done. While I don't end up writing my own library to do whatever the ""magic box"" becomes much less opaque and I usually learn something.   Even years ago when I was doing JavaScript and I'd use some jQuery plugin I'd have to see how it worked before I used it. Otherwise I felt like I was cheating - not knowing what was going on in the background."
iOSProgramming,3ckulj,mrgermy,2,Wed Jul 8 22:17:20 2015 UTC,"˙sᴉɥʇ ɹoɟ ddɐ SO ɔɐƜ uʍo ʇɯ uǝʇʇᴉɹʍ ǝʌ,I Ⓑⓤⓣ ⓘⓣ ⓐⓛⓢⓞ ⓛⓔⓣⓢ ⓨⓞⓤ ⓓⓞ ⓣⓗⓘⓢ a⃣n⃣d⃣ t⃣h⃣i⃣s⃣ a̷n̷d̷ t̷h̷i̷s̷ a⃒n⃒d⃒ t⃒h⃒i⃒s⃒,⃒ t⃒o⃒o⃒ Plus Braille for the vision impaired:  ⠏⠇⠥⠎ ⠃⠗⠁⠊⠇⠇⠑ ⠋⠕⠗ ⠞⠓⠑ ⠧⠊⠎⠊⠕⠝ ⠊⠍⠏⠁⠊⠗⠑⠙"
iOSProgramming,3cjlu9,lucasvandongen,5,Wed Jul 8 12:35:00 2015 UTC,"Release needed > 30th september, go for Xcode 7."
iOSProgramming,3cjlu9,Power781,2,Wed Jul 8 13:23:39 2015 UTC,This is the main question that needs to be answered.
iOSProgramming,3cjlu9,Stazalicious,1 point,Wed Jul 8 13:56:51 2015 UTC,Three months from now is more like October the 7th.
iOSProgramming,3cjlu9,lm2s,4,Thu Jul 9 13:28:21 2015 UTC,"I'm involved in a project in which we faced that same dilema. We chose to use Xcode 7 for one simple reason: Swift 2.0.  Up until now we only have maybe hit 1 bug in the compiler and were able to solve it. Unless you'll are doing something exotic you'll rarely hit a bug/issue and if it happens there are workarounds.  Regarding Xcode 7, it's pretty stable and usable. At least, I haven't had any major crash and it seems to be more stable than Xcode 6 in my machine."
iOSProgramming,3cjlu9,Airglow26,1 point,Wed Jul 8 13:22:45 2015 UTC,So is Xcode 7 going to break all my Xcode 6 swift?
iOSProgramming,3cjlu9,jaja935,2,Wed Jul 8 16:27:51 2015 UTC,"Xcode 7 will force you to use Swift 2.0 since that's the compiler it's shipped with (It comes with a handy migrator from 1.2 to 2.0) So yes, it once you start to use Xcode 7, you won't be able to use the same project on Xcode 6 unless you manually migrate all your Swift code to back to 1.2."
iOSProgramming,3cjlu9,mmellinger66,1 point,Wed Jul 8 16:39:44 2015 UTC,"Yes you should use Swift 2.0. Otherwise, in 5 months you're going to waste time refactoring to Swift 2.0, retesting, etc."
iOSProgramming,3cjlu9,B4MPER,1 point,Wed Jul 8 17:34:37 2015 UTC,xcode 7 beta does not support ios 8.4
iOSProgramming,3cjlu9,JimDabell,1 point,Thu Jul 9 16:24:53 2015 UTC,"I would.  Exceptions and guard statements cut down on boilerplate code substantially.  Exceptions and protocol extensions can improve your code structure substantially.  Don't waste time aiming for something that's going to be obsolete before you finish; don't skate to where the puck is, skate to where the puck is going to be.  Yes, there are likely to be bugs you'll run across with Xcode 7, but let's be honest, there are likely to be bugs you'll run across with any version of Xcode – it's always been beta quality software."
iOSProgramming,3ckl01,LaserWolfTurbo72,3,Wed Jul 8 17:13:50 2015 UTC,"You can just present your code in an interview. Login to Github, or whatever SCM software you have, and walk them through the project. Any developer worth their salt won't care if it's actually ""published"" they just care that you can write working code. If you  can bring an app via TestFlight, etc.   H1B visas are notoriously hard to get. They always max out. SHouldn't stop you from applying though."
iOSProgramming,3ckl01,engineered_academic,1 point,Wed Jul 8 17:37:42 2015 UTC,H1B visas are already all handed out for the year of 2015.
iOSProgramming,3ckl01,FutureIsMine,2,Thu Jul 9 01:34:04 2015 UTC,"In regards to #3, I find that remote jobs are better at picking up skills than office jobs. Maybe it's just the types of offices I work in, but I'm finding that I get pigeonholed when I work in the office, and have more creativity when I'm at ""home"". Although I have a dedicated working space and separate ""home"" and ""work"" computers, I also find that learning a tough subject is easier because I get get up and walk around rather than just sit at my desk and stare at the screen. I love remote working."
iOSProgramming,3ckl01,engineered_academic,2,Wed Jul 8 17:46:25 2015 UTC,"Generally, your best bets at a job will be chatting with people at dev meetups or other events where people might go to meet people like you. But mobile is fairly hot so with an app in the store or close to it (demo-able at least), I'd apply at least cross country. There seems to be a lack of decent mobile talent in Canada (at least near Waterloo/Toronto, probably Montreal too). Re: remote. I had my best learning experiences with a remote team in the US while I was in Canada. But that was mostly because I had enough knowledge to really accelerate given their culture. I think you could be ok remote or in a office (but make sure you're not the only iOS dev). I stumbled upon this job posting that might suit you. It's based in Vancouver with some remote flexibility (I don't know them, just happened to see it the other day). Even though they're saying ""expert level"" the salary level indicates they might not be strict about that: http://careers.stackoverflow.com/jobs/89634/mobile-developer-atimi-software-inc?searchTerm=ios It reads like a wish list where they know they'll probably hire someone without exactly that experience. Stack Overflow Careers also lists companies willing to pay relocation, like these: http://careers.stackoverflow.com/jobs?searchTerm=ios&location=canada&range=20&distanceUnits=Miles&offersrelocation=true (I think it's worth applying to at least TopHat & Ayuda based on their descriptions.) For the US depending on your education you might want to look in to a TN visa."
iOSProgramming,3ckl01,ChristinaMltn,1 point,Thu Jul 9 02:18:54 2015 UTC,"Do you have a CS degree or some kind of education before you started work?  I dont personally believe not having an app on the app store, or a public github will hinder you terribly (although id say if you can, get something up on github since your professional skills are not in iOS). Could you visibly show your code from your private repo, or is that not an option?   I personally wouldnt apply cross border if youre applying for junior iOS positions. Mid-level full stack positions who want mobile experience, maybe, but then you may not even be working with iOS. Do you not want to work in your (regional) area? Could you not move to Toronto/Vancouver/etc?   I definitely think you should be looking to move and work in an office, as you note, but that doesnt mean you cant apply for jobs online. I would not recommend remote at this point in your career with your goals.  Not sure if i can help much, but ive been doing mobile for 6 years in Central Canada. There are jobs here (AB/SK) for people in your position."
iOSProgramming,3ckl01,badlcuk,1 point,Wed Jul 8 18:52:50 2015 UTC,I wouldn't worry about not having anything in the app store. Just show them the code you wrote. Post your project on Drop Box or something for the employer to download. You could make some more code samples even if they aren't in the app store to demonstrate your knowledge.
iOSProgramming,3clhfb,ReadDog,3,Wed Jul 8 20:55:09 2015 UTC,"Apps are an interesting commodity. From what I understand, a company normally buys an app to turn a profit, to get hold of key talents, accrue some IPR or maybe a mixture of them.   Are the businesses you're selling to already developers? If not would they be buying support too?  I'm not selling anything by the way, I'm just interested."
iOSProgramming,3clhfb,Stazalicious,3,Wed Jul 8 22:08:53 2015 UTC,"May I ask the price range people are saying they'd buy an app for? I understand it varies widely but $250 is much much different than $20k. It usually costs thousands to have an app developed, so I'm just curious about the numbers you have in mind."
iOSProgramming,3clhfb,hagrids_a_pineapple,1 point,Thu Jul 9 03:11:47 2015 UTC,"Seems like no one understands the cost of an App. It's usually shocking when a person looking to get an app built first hears the price.  If you want a quality app built, it's usually around 1,500 USD. That's probably at the cheaper end of the scale."
iOSProgramming,3clhfb,BrandanDeMamp,2,Fri Jul 10 16:27:23 2015 UTC,That's insanely cheap. That's for an app that will count down to Christmas. Any app with any sort of complexity will be over $10k.  Which is exactly why a business like this is going to be hard to get off the ground. Are they going to have millions of dollars to make serious offers? They will find next to no developers willing to sell their app for $500. Frankly I'd rather make $0 a month off of it and see my name on the App Store than practically give it away.
iOSProgramming,3clhfb,hagrids_a_pineapple,1 point,Fri Jul 10 17:02:00 2015 UTC,I'm too new to developing to fully grasp that an app can costs that much to make.
iOSProgramming,3clhfb,BrandanDeMamp,1 point,Fri Jul 10 17:09:18 2015 UTC,"If you want your mind to be blown, an app like Twitter (which really isn't that complex, it just acquired millions of users) is estimated to cost around $500k to make. $10k will buy you Flappy Bird."
iOSProgramming,3clhfb,hagrids_a_pineapple,1 point,Fri Jul 10 17:35:18 2015 UTC,"Jesus. If I could make 500K off an app, I would be a happy man.   I'm guessing it's because of the profit you could you make. If it were a brand new Twitter, it probably wouldn't be that much."
iOSProgramming,3clhfb,BrandanDeMamp,1 point,Fri Jul 10 17:37:16 2015 UTC,No! Price is not based on how much you think the person you're making it for will make off of it. That's seriously just the price it costs for a social media app like that to be built. Profits are not part of that equation. Its crazy.
iOSProgramming,3clhfb,hagrids_a_pineapple,2,Fri Jul 10 17:39:50 2015 UTC,What kind of apps are you looking for? I have one but I doubt it's something you'd be interested in.
iOSProgramming,3clhfb,mrgermy,1 point,Wed Jul 8 22:27:05 2015 UTC,"I have some buyers who are interested in various types of businesses, apps being one of those models.  What type of app do you own?"
iOSProgramming,3clhfb,skilless,1 point,Wed Jul 8 23:18:05 2015 UTC,You'll have competition: http://techcrunch.com/2014/11/18/app-suey-is-buying-up-mobile-small-businesses-with-goal-of-owning-1-of-apps-on-itunes/
iOSProgramming,3clhfb,askoruli,3,Thu Jul 9 03:33:17 2015 UTC,"An app developer earning $5,000 bucks a month as an example might be thrilled to get a check for 50K. This might be a life changing figure for this particular developer depending on their country, age and current stage in life   This seems like a terrible deal for the developer."
iOSProgramming,3ckjx8,ballinismyhobby,1 point,Wed Jul 8 17:06:13 2015 UTC,That would be considered usage of a private API. You shouldn't be forcing users to orientations this way.  The appropriate way to handle this is to override:  - supportedInterfaceOrientations - preferredInterfaceOrientationForPresentation - shouldAutorotate   and return the appropriate values.
iOSProgramming,3ckjx8,brendan09,1 point,Wed Jul 8 17:48:42 2015 UTC,thanks for responding but that doesn't actually make the screen rotate.  do i do this in my viewcontroller or in the root / navigationcontroller?
iOSProgramming,3ckjx8,brendan09,1 point,Wed Jul 8 22:21:12 2015 UTC,"You're not allowed to truly force the screen to rotate. But, using that, you can declare that a specific VC only supports the orientations you want (effectively forcing to that when opened).  If your VC is in a navigation controller then you'll likely need to subclass UINavigationController and override the methods there. Use that subclass as your navigation controller for this VC."
iOSProgramming,3ckjx8,brendan09,1 point,Wed Jul 8 22:23:12 2015 UTC,"thanks!  i am getting closer.  i am actually seeing the same behavior but i feel like i am doing it the right way now.  my issue occurs when the shouldRotate(), supportedInterfaceOrientations(), etc are not called in my new view even though my new view is created when i go to the new screen.  of course those methods are called when it works as expected.  perhaps some caching or view re-use is being done?"
iOSProgramming,3ckjx8,askoruli,1 point,Wed Jul 8 22:50:36 2015 UTC,It's not reusing or caching. It won't call your VC's implementation of those methods if you're in a navigation controller. Make sure to implement it in a navigation controller subclass.  It can also be affected by your target settings. (If you don't have all the other orientations allowed in your target config.)
iOSProgramming,3clgse,titleist2015,3,Wed Jul 8 20:50:51 2015 UTC,Sounds like a segue might work well: it'll give you a transition between the two view controllers and you can pass data to the destination view controller in prepareForSegue Ray Wenderlich has a good tutorial: http://www.raywenderlich.com/50310/storyboards-tutorial-in-ios-7-part-2 Here's an example of using prepareForSegue: http://stackoverflow.com/questions/7864371/how-to-pass-prepareforsegue-an-object
iOSProgramming,3clgse,ChristinaMltn,1 point,Wed Jul 8 21:12:30 2015 UTC,"I've tried doing this and every time I set the label on the new view controller from the segue, I get an error saying that it found nil while unwrapping an optional value  here is my code, the error is coming from the firstVC.score.text = ""test"" line  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {         let firstVC: FirstViewController = segue.destinationViewController as! FirstViewController          firstVC.score.text = ""test""     }"
iOSProgramming,3clgse,bpozega,2,Sun Jul 12 05:41:49 2015 UTC,"The way i would do it is to make a database class, either have the database class write down a file in the apps document folder and then read that database again in the second view controler. Or Create a class that has both Viewcontroler as a class variable, then you can use delegates to pass data from VC1 to masterViewcontroler and back to VC2. the MVC design patter solves those issues in general. I dont use the storyboard at all, i do everything in code so cant really help you with that part.  Or you can use a Singleton (not sure if it is good practice to store data in singletons, );"
iOSProgramming,3cl0lh,horton45,2,Wed Jul 8 19:00:06 2015 UTC,"There are loads of ways you could accomplish this. Here's one simple method:  if ([string hasSuffix:@"".000""]) {     string = [string substringToIndex:string.length - 4]; }"
iOSProgramming,3ci28x,ThePantsThief,5,Wed Jul 8 01:58:46 2015 UTC,https://developer.apple.com/library/prerelease/mac/releasenotes/Foundation/RN-Foundation/index.html#10_11NotificationCenter  Yay weak references
iOSProgramming,3ci28x,dcramps,1 point,Wed Jul 8 02:35:35 2015 UTC,Thx m8
iOSProgramming,3ci28x,johnwickham,1 point,Wed Jul 8 03:29:12 2015 UTC,I remember this too. I have a feeling it was new in iOS 9.0
iOSProgramming,3ci28x,tonygoold,1 point,Wed Jul 8 02:23:58 2015 UTC,"https://developer.apple.com/library/prerelease/mac/releasenotes/Foundation/RN-Foundation/index.html#10_11NotificationCenter   Dangit, yeah. Would a workaround just be passing a weak self into addObserver:…?"
iOSProgramming,3ci28x,tonygoold,1 point,Wed Jul 8 03:10:16 2015 UTC,"No. The weak specifier applies to the pointer variable itself, not the object it points to, so the lifetime of the object is still determined by whether NSNotificationCenter uses strong or weak references internally."
iOSProgramming,3ci28x,tonygoold,1 point,Wed Jul 8 13:39:41 2015 UTC,"I still don't understand strong / weak very well, I guess. Can you tell me how this is different than making self weak before entering a block (owned by self), then making self strong again inside the block? This doesn't cause a retain cycle"
iOSProgramming,3ci28x,chriswaco,3,Wed Jul 8 16:10:30 2015 UTC,"The thing to keep in mind is that it's not the object itself that is strong/weak, it's the pointer you're using to refer to it, which I think may be behind your confusion. Consider this example:  __weak MyClass *weakSelf = self; self.someBlockProperty = ^{     MyClass *strongSelf = weakSelf;     doSomething(strongSelf); };   The first line declares a weak pointer called weakSelf, but it's not correct to say it makes self weak: The implicit self variable is still a strong reference and the object it points to still has a positive retain count.  After that, a block is defined that captures weakSelf from the enclosing context. It's like the block now has an instance variable that happens to have the same name, type, and value as the one in the outer scope. In particular, that ""instance variable"" is also a weak pointer because the variable it captured was a weak pointer, so the block doesn't affect the object's retain count just because of the values it captures.  On this line:  MyClass *strongSelf = weakSelf;   The value in weakSelf is copied into a strong variable. At this point, as long as weakSelf isn't already nil, the retain count for the object goes up because of the assignment to strongSelf. After the call to doSomething, there are no more uses of strongSelf and, since it's just a local variable inside the block, the variable is reclaimed and the object's retain count goes back down. In other words, the block only increases the retain count while it's actually running, because of the strong variable declared inside the block. If the block had instead referred directly to self, then it would have had the equivalent of a strong instance variable and it would create a retain cycle.  Now consider this:  NSMutableArray *array = [[NSMutableArray alloc] init]; __weak MyClass *weakSelf = self; [array addObject:weakSelf];   Arrays keep strong references to their elements. It doesn't matter that you pass in a weak pointer because its value will be assigned to a strong one inside the array. In fact, because the method's signature is - (void)addObject:(id)anObject (i.e., the parameter is not explicitly weak), the previous example is exactly equivalent to the following:  NSMutableArray *array = [[NSMutableArray alloc] init]; __weak MyClass *weakSelf = self; MyClass* strongTemp = weakSelf; [array addObject:strongTemp];   tl;dr: You can't force a class to use weak references just by passing it one."
iOSProgramming,3cg5xg,jakemarsh,3,Tue Jul 7 17:33:33 2015 UTC,thank you for great little tips.
iOSProgramming,3cg5xg,th3phantom,3,Wed Jul 8 01:40:44 2015 UTC,you're quite welcome! thanks for reading! :)
iOSProgramming,3cim7q,umen,2,Wed Jul 8 05:00:35 2015 UTC,Just an uneducated guess - your platform target/base SDK is 8.3 and 8.1; doesn't it need to be 7.1?
iOSProgramming,3cim7q,GilesDMiddleton,1 point,Wed Jul 8 18:19:52 2015 UTC,it doesn't give me option to move it below 8
iOSProgramming,3cim7q,GilesDMiddleton,1 point,Thu Jul 9 09:37:11 2015 UTC,Did you see this post? http://apple.stackexchange.com/questions/147028/how-do-i-acquire-sdks-to-build-target-pre-8-0-ios
iOSProgramming,3cgump,O0O0O0O00O,26,Tue Jul 7 20:24:00 2015 UTC,"Being a student is irrelevant. They're paying for the app, they're not hiring you. You're a developer, period. Furthermore, at 40h/week, 6k corresponds to 20USD/h which is pretty low according to common figures. I think that you are perfectly reasonable when asking for 20k (or even more for this kind of software with a backend and possibly certification).   You simply have to say that you're sorry but you won't do this for 6k because it won't cover the development costs, and you can point them to http://howmuchtomakeanapp.com/."
iOSProgramming,3cgump,TomTheBest,13,Tue Jul 7 20:41:27 2015 UTC,"Even at 20k, I think you are low.   This is the thing you have to realize, and I went through this with developing sites for customers. You know what you are worth. You know what your time is worth. You dont need to let someone dictate that for you by low-balling you.   If they want someone to do it for $20/hr, they will get what they pay for. At $20/hr, I wouldnt expect to get a lot.  Also, make sure they understand maintenance and how that will play into things. How are you going to maintain the app and the backend? Is maintenance rolled into the overall price? Is it extra? These are things you need to ensure you have in writing before they go hog wild on you."
iOSProgramming,3cgump,succeededcoma,2,Tue Jul 7 21:00:01 2015 UTC,Is $70/hr normal for something like this?
iOSProgramming,3cgump,ThePantsThief,2,Wed Jul 8 03:33:21 2015 UTC,"A top-tier U.S. contracting agency will charge between $125-$200/hr for a senior developer. Those are premium prices, but a top-shelf agency with a record of delivering big, complex projects to schedule and budget will get those rates and be turning work away. Independents, less experienced, or overseas (non-U.S.) developers will work cheaper. There are some great overseas contractors and some great independents, but also too many less-than-great ones, sadly."
iOSProgramming,3cgump,hatheaded,1 point,Wed Jul 8 05:40:07 2015 UTC,At 40 hours a week for 7 weeks thats around $20k. Yes
iOSProgramming,3cgump,succeededcoma,1 point,Wed Jul 8 04:17:47 2015 UTC,"70 bucks an hour is usually normal if you want to hire a young, out of college developer. You won't get a top tier developer for that price. That's more like 150 to 200 an hour."
iOSProgramming,3cgump,BrandanDeMamp,16,Fri Jul 10 16:29:50 2015 UTC,"HIPAA compliance should cost 20k by itself, because you need to pay for your professional liability insurance, your QA team, security audits, and the lawyer that drafted your independent contractor agreement with a shiny indemnification clause and now will represent you in court when the hospital tries to displace blame for any data breaches.  You aren't missing an opportunity by walking away from this project.  Just say you have some other opportunities you want to pursue and thank them for considering you."
iOSProgramming,3cgump,RECURSIVE_META_JOKE,1 point,Tue Jul 7 23:11:04 2015 UTC,"I didn't even think about that. If something goes wrong with HIPPA requirements, the app developer may take the fall.  OP is best walking away. That is NOT something you want to mess with."
iOSProgramming,3cgump,BrandanDeMamp,15,Fri Jul 10 16:31:01 2015 UTC,"You're building an app for a hospital? 20k is embarrassingly low. The key here is the long term service agreement, which you don't even mention. Does the hospital truly value this project if they want you to deliver something for just 6k? Stay firm at 20..."
iOSProgramming,3cgump,savaero,1 point,Tue Jul 7 23:22:36 2015 UTC,"Long term service agreement, as in, maintaining and updating the app + servers? Yeah definitely haven't mentioned that to them, oops. If they want that, honestly I cannot give these things to them for pennies."
iOSProgramming,3cgump,Hawk_Irontusk,12,Wed Jul 8 00:06:17 2015 UTC,"You have a moral obligation to tell them about this. You're only shooting yourself in the foot if you don't.  As for your main question... run away. Your initial quote is way too low, and this is your opportunity to back out gracefully.  I don't know anything about your app, but if you're talking about building a back end, having interactive graphs and HIPAA compliance, AND you're going to bring a second person on, there's just no way on Earth you're going to build it in seven weeks for $20k.  It also sounds like you have some pre-existing relationship with the hospital. If I'm wrong, then ignore this, but if you do then run even faster. They're going to take advantage of that relationship, and they have leverage in that they're a hospital and you're a med student. You'll be maintaining this app for pennies for years to come.  Don't do it man."
iOSProgramming,3cgump,StunnerAlpha,2,Wed Jul 8 00:57:07 2015 UTC,"Hawk_Irontusk is spot on. This is a project you shouldn't take... it has the potential to go terribly wrong, and if it goes right you will get letter of recommendation for what? Being a coder? Med schools don't care if their students can code, your letters of recommendation on this front won't carry much weight. Instead, go above and beyond in academia, or other med-related projects which prove your worth as a potential candidate for med school.  Honestly, I'd say focus on one thing... you mention you are already working full time and are in premed and on top of that you want to do all this? I bet your grades will suffer if they aren't already, and no letter of recommendation will help you at that point. Choose one thing to seriously pursue and prioritize it above all else. Med students don't have time for anything but focusing on what they are doing and by the looks of it what you are doing now makes me think you are more passionate about programming, so I would say go with that.  Either way, best of luck."
iOSProgramming,3cgump,SnapDraco,1 point,Wed Jul 8 04:52:53 2015 UTC,"This, so much. Back out now, you are in over your head and it looks like your estimates are painfully low for time, if not money."
iOSProgramming,3cgump,montagetech,13,Wed Jul 8 07:57:34 2015 UTC,Welcome to the world of contract development. This happens all the time and the best you can do is tell the client you cannot do it for that price and that they should look else ware.
iOSProgramming,3cgump,deweysmith,8,Tue Jul 7 20:58:30 2015 UTC,"Just like this.  Seriously, Mike is great."
iOSProgramming,3cgump,KaneHau,4,Tue Jul 7 20:56:47 2015 UTC,"There are three factors to application design:   price speed of delivery quality (bug free)   Tell the client he can have any two, but not all three.   if it is inexpensive and delivered quickly, it will not be quality if it is inexpensive and quality, it will not be delivered quickly if it is quality and delivered quickly, it will not be inexpensive"
iOSProgramming,3cgump,Stazalicious,5,Tue Jul 7 20:50:11 2015 UTC,Those are the three factors to EVERY project: Time Cost and Performance.
iOSProgramming,3cgump,askoruli,4,Tue Jul 7 22:13:00 2015 UTC,"$14k in exchange for some letters of recommendation seems like a really bad deal. To me your estimate already seems quite low so I wouldn't budge. You can easily put yourself in a position where you've got a full time job, a second contract which has taken longer than you expected, stressed out from overwork and getting very little for it.  Tell them that the quote includes QA costs, that you've already discounted it from what you would charge other clients and that there's an allowance for unexpected scope changes and other unforeseen problems as well as short term maintenance."
iOSProgramming,3cgump,Aofwa,3,Tue Jul 7 23:22:17 2015 UTC,"Not to be nosey, but .. 40/hr work week, premed, and you want to also build a hospital's app as well. How are you going to find the time to do all of this?"
iOSProgramming,3cgump,lucasvandongen,2,Wed Jul 8 04:20:16 2015 UTC,So you have a day job of 40 hours and that project supposedly will cost you another 40 hours per week. That would never work to begin with. Maybe you could get a basic version going on for the same price but without all the difficult stuff. Probably they don't need all the fancy graphs anyway. 60 hours per week for seven weeks is enough.  Once you get the application in you have a better bargaining position.
iOSProgramming,3cgump,lucasvandongen,1 point,Tue Jul 7 23:00:43 2015 UTC,"What do you mean by ""once I get the application in""? Like, after I finish it, or what?"
iOSProgramming,3cgump,badlcuk,3,Tue Jul 7 23:07:19 2015 UTC,"Right, when people inside the department actually start using it there is a much bigger chance you can get some funds directed to it. Or maybe they never needed it. What you need is a minimum viable product."
iOSProgramming,3cgump,hagrids_a_pineapple,2,Wed Jul 8 01:34:15 2015 UTC,"Can you not just say the timeline is not possible and reject their offer? It's the same as saying ""it costs 8k"", they say ""do it for 7"", you say no and walk away. I've done this with clients (whom I recommend to others if my fee is too high) if they try to negotiate my time. Just say ""I'm sorry, I cannot do that for you, this is my timeline/rate"". But you need to be prepared to walk. You are not stuck there.   Eta: I also agree your price per hour even without ongoing maintenance is ridiculously low for your experience btw. Your student situation is irrelevant. And I went to university and worked in Saskatchewan Canada, so... You are very very low for North America!"
iOSProgramming,3cgump,Stink-Finger,1 point,Wed Jul 8 03:42:07 2015 UTC,"He is saying he is paying you less because you are a student. Literally, he is saying ""Yeah, I'll pay you less because you get to the work instead of someone else! Awesome, right?"""
iOSProgramming,3cgump,aporcelaintouch,1 point,Wed Jul 8 01:00:40 2015 UTC,"Yeah, they will always throw the ol' ""You are getting more out of this ...blah blah blah"" The bottom line is that you are selling an app.  Doesn't matter who you are or what your circumstances may be.  Its the product that matters.  You should also retain the rights to what you write.  Lease it to them."
iOSProgramming,3cgump,xormancer,1 point,Wed Jul 8 11:46:41 2015 UTC,"Funny, this is EXACTLY how I priced out an app that was being priced out. Are you sure you're not me? Even down to the $6k price figure! hahah.  How I see it, is the project was going to be taking up my FREE time. Which to me, is worth way more than what my rate that I get paid at work to do. If the client doesn't like that and wants to low ball, then they can find someone else who truly is in need of experience. But the whole ""you'll get more out of this if we pay you less and you do more work"" is garbage.  If a client sees you like that and is unwilling to agree to meet somewhere closer to what you priced out, then I say to hell with them. You already have a job and while the additional money would be nice, I would venture to say (unless you're a recluse) that you're free time is WAY nicer."
iOSProgramming,3cgump,xormancer,1 point,Wed Jul 8 15:22:42 2015 UTC,What are you using for your backend? I've been wanting to make my own backend for an iOS sideproject. My work uses PHP and Ruby for ours (and I only do iOS atm). I'm currently trying to decide between Go or Elixir just for the sake of learning one.
iOSProgramming,3cgump,Vertp,2,Wed Jul 8 00:10:08 2015 UTC,"I'm personally a fan of Flask (a python framework). The documentation is insane, seriously it probably cuts my googling time into fractions, and as long as you observe good Python and object oriented practices, it's as simple as it gets.   That being said, with HIPAA compliance, I'm going to have to think about the backend a bit more, but for 99.999% of projects, it's my go to."
iOSProgramming,3cgump,lucasvandongen,1 point,Wed Jul 8 00:19:47 2015 UTC,"I've actually heard really good things about Flask. Would you happen to have any recommendations for reading/tutorials? Though what you say about the documentation is exciting, I'm definitely going to take a look tonight.  I'm really curious to know what you end up deciding on for your backend!"
iOSProgramming,3chhej,succeededcoma,2,Tue Jul 7 23:08:49 2015 UTC,"You seem to be on the right track.  Make sure your UI object inherits from an existing class that most resembles its functionality. (At a minimum, UIControl for controls or UIView for views).  Drag a corresponding object on to the canvas. If there is an ancestor object in IB (like UIButton) that your inherits from, drag it to the canvas and change the class type. If yours inherits from UIControl or UIView, you might drag a standard UIView on screen and change the class type of it. Make sure the object you put on canvas is in the inheritance of your control / view.  You can have them show up in Interface Builder...but it can be quite taxing on your processor (and battery if you're mobile on a laptop). Take a look at IB_DESIGNABLE (Objective-C, it has another syntax for Swift). This will render your control in Interface Builder for you.  You can even expose properties to be configured in Interface Builder."
iOSProgramming,3cg67b,hagrids_a_pineapple,6,Tue Jul 7 17:35:25 2015 UTC,"Are you sure you can't just zip the projects from their parent folder and copy the .zip-file?  Alternatively, use an online Version Control System, like Git through GitHub, BitBucket and so on - that'll take out the hassle of ever transferring or moving projects locally, while keeping a backup in the cloud.  Keep in mind that some services, like GitHub, require a monthly fee, in order to host private repositories, IIRC. BitBucket is free, to some extend :)  Edit: Also, regarding your certificate issue, the easiest thing is to sign a new developer key on your newly installed OS, and adding it to the respective application provisioning profiles, and then download those."
iOSProgramming,3cg67b,HerculesCE,2,Tue Jul 7 18:17:55 2015 UTC,"For transferring certificates / keys.... Go into Xcode preferences -> Accounts and export your developer profile. This will include all your certs, keys, and provisioning profiles. Open that on your new OS X install."
iOSProgramming,3cg67b,brendan09,1 point,Tue Jul 7 18:24:10 2015 UTC,TIL!  Thank you.
iOSProgramming,3cg67b,HerculesCE,1 point,Tue Jul 7 18:25:59 2015 UTC,Thank you so much! I feel my anxiety dissipating already.
iOSProgramming,3cg67b,HerculesCE,1 point,Tue Jul 7 18:30:49 2015 UTC,I'll try to zip and transfer that way. I had also looked at Github but am reluctant to pay so much money for such a limited plan. $7 a month for ONE private repo? Wow. I don't even make money off of my apps yet so that's off the table. I'll look at BitBucket though thank you for the suggestion. I prefer to keep it locally but that may the direction I have to go.  Thank you for being friendly!
iOSProgramming,3cg67b,succeededcoma,2,Tue Jul 7 18:23:59 2015 UTC,"I use BitBucket for small random projects of mine, private. It's brilliant, and usually reliable. I highly recommend you using a VCS no matter what, as the benefits of your history of commits and merges are beyond worth getting settled with a CLI like that of Git's, if you're not familiar with it :)"
iOSProgramming,3cg67b,chriswaco,2,Tue Jul 7 18:29:05 2015 UTC,"^ This  You can use BitBucket. I work for Atlassian and support BitBucket so if you have any questions, let me know."
iOSProgramming,3cg67b,thoughtzero,1 point,Tue Jul 7 19:28:14 2015 UTC,Thank you!
iOSProgramming,3cg67b,thoughtzero,0,Tue Jul 7 20:33:49 2015 UTC,"I've been committing every now and then on Xcode but if I'm honest I'm not sure where they are going. I assume a local repository on the Mac. After I install my SSD and get everything set up, I'm going to learn to efficiently use VCS so this isn't an issue in the future. Thanks for your help!"
iOSProgramming,3cg67b,thoughtzero,3,Tue Jul 7 18:33:10 2015 UTC,"Make sure the flash drive is formatted as ""Mac OS Extended"". There's no reason why project files can't be copied to other volumes. You might also buy an external SATA to USB adapter so you can mount the the old drive if you need to."
iOSProgramming,3chzoc,hagrids_a_pineapple,1 point,Wed Jul 8 01:37:37 2015 UTC,Did you create / install a provisioning profile for your new Watch extension?
iOSProgramming,3chzoc,brendan09,1 point,Wed Jul 8 01:51:37 2015 UTC,"I have to be honest with you, the whole provisioning, certificate generation thing confuses the Hell out of me.  No I haven't and I'm not sure how I'd go about it"
iOSProgramming,3chzoc,brendan09,1 point,Wed Jul 8 01:55:50 2015 UTC,"A Watch extension is technically an app all on its own.   You need to go the Developer Center and create a new App ID for your Watch extension, then add it to your app group. Then download the appropriate provisioning profiles for it, just like a regular app."
iOSProgramming,3chzoc,brendan09,1 point,Wed Jul 8 01:57:31 2015 UTC,"Hmmm. Okay, well I tried that just now and downloaded the Profile, but when I go to install it (double click the profile) it opens a page a rubbish text and does not install it. There is not a gear symbol on the file either. Could this be because I am running El Capitan?"
iOSProgramming,3chzoc,brendan09,1 point,Wed Jul 8 02:10:09 2015 UTC,"Open the file with Xcode. Right click -> Open With, or drag it on to the Xcode icon in the Dock.  I honestly can't say. It should work fine, but obviously beta is beta."
iOSProgramming,3chzoc,brendan09,1 point,Wed Jul 8 02:21:02 2015 UTC,"Yeah, I'm not supposed to be using 6.4 with El Capitan but I opened it through the command line. It doesn't let me open it through those methods. Is there a way to add it through Xcode while its open?"
iOSProgramming,3chzoc,ziaDave19,1 point,Wed Jul 8 02:24:59 2015 UTC,"You could try the Open With in the File menu of Xcode. You could also import it using Xcode 7, if you have that installed.  But, keep in mind you shouldn't use OS X betas on your production machine for exactly this reason... You never know what it will break."
iOSProgramming,3chzoc,ziaDave19,1 point,Wed Jul 8 02:26:49 2015 UTC,Lesson learned. Unfortunately none of this is working. My SSD comes tomorrow so I will just have to try again when I have Yosemite installed again. Thank you for your help.
iOSProgramming,3cha86,dwalker39,2,Tue Jul 7 22:15:12 2015 UTC,Mine just loaded for me
iOSProgramming,3cha86,Tyler2Tall,1 point,Tue Jul 7 23:36:27 2015 UTC,"Dammit, alright thanks."
iOSProgramming,3cha86,fithbert,1 point,Tue Jul 7 23:46:17 2015 UTC,"Mine are working, but the whole network has been goofy the last few days. I've noticed some ads (I'm running) randomly getting no impressions for a few hours, and sometimes the the iAd portion of iTunes Connect either won't load, or sorta' half loads with stuff about iTunes Radio Advetising (which I do not actually have access to… not that baller)."
iOSProgramming,3cha86,mistakent,1 point,Wed Jul 8 02:40:17 2015 UTC,"Going off iAds, anyone have iAd earnings not show up in financial reports this week?  Edit: It's up. Took a bit longer than I thought :]"
iOSProgramming,3ch4xs,Raygun77,7,Tue Jul 7 21:36:21 2015 UTC,SourceTree
iOSProgramming,3ch4xs,ICouldBeTheChosenOne,1 point,Wed Jul 8 02:44:53 2015 UTC,"Love source tree, use it with all my projects. Best part is that the free version is really really good, I don't even know if there's a paid version..."
iOSProgramming,3ch4xs,Uncle-Jemima,3,Sun Jul 12 05:21:48 2015 UTC,"I learned git with the Xcode interface since it's so straight forward, and I'd probably suggest starting with it especially if you'll be coding in Xcode alot. Now I mostly use the command line because its faster and more powerful, but I still use either the Xcode interface or SourceTree when I need to quickly see what an old commit contains. Eventually you'll reach a point where Xcode wont handle something (like stashing or squashing) and thats when you'll need to use the command line :)"
iOSProgramming,3ch4xs,doct0rfoo,2,Tue Jul 7 22:03:05 2015 UTC,"Knowing CLI is a big deal. Even using a GUI Git app, I sometimes have to use the CLI to fix issues with the repo."
iOSProgramming,3ch4xs,succeededcoma,2,Tue Jul 7 22:21:48 2015 UTC,"GitX and command line, but recently I switched to GitUp. It's nice."
iOSProgramming,3ch4xs,dcramps,1 point,Tue Jul 7 22:50:43 2015 UTC,"+1 for GitX and command line. Keep it pure, and maintain control all the way!"
iOSProgramming,3ch4xs,StunnerAlpha,2,Wed Jul 8 05:09:30 2015 UTC,Command line. 5 years ago Xcode totally ducked a project via crappy git integration and I'll never forget it.
iOSProgramming,3ch4xs,badlcuk,1 point,Tue Jul 7 23:42:37 2015 UTC,"I know Xcode had significant problems with git at one point, but it seems pretty stable now. I use it for all my commits. I sometimes use it to push as well.    I use Sourcetree also. It's only issue is lack of a decent manual.    But like others have said, you'll need to learn the cli as well."
iOSProgramming,3ch4xs,dar512,1 point,Wed Jul 8 12:33:05 2015 UTC,"Oh no, i definitely think its a lot better now :) It just spooked me once and so i swapped. Sourcetree i have used (although dont currently) and enjoyed it."
iOSProgramming,3ch4xs,badlcuk,2,Wed Jul 8 18:19:44 2015 UTC,"I use Tower at home but then also know the CLI very well for work, it always helps to know the CLI underneath as there are usually at least some limitations to GUI clients."
iOSProgramming,3ch4xs,optik88,2,Wed Jul 8 11:31:02 2015 UTC,"I started on the command line, and if you take that route I recommend using Homebrew to install the latest version (OSX comes bundled with an older version)."
iOSProgramming,3ch4xs,hagerty9009,2,Wed Jul 8 14:04:35 2015 UTC,"Xcode has screwed me WAY too many times with its simple Git support. It may work fine for a single person on the master branch but otherwise I have had super crappy luck with it.  When I can use AppCode as a replacement for Xcode its Git plug-in works great, has not screwed me over yet.  When Xcode has screwed me or when I can't use AppCode I will use SourceTree. I have used that for connection to internal, GitHub and BitBucket repositories. It has worked out very nicely.  I also use iTerm (terminal with tabs + other stuff) and I use the Git command line from there. At some point you will probably need to user Git on the command line. Use Brew to install it and have it around for when you will need it.  Make sure you set up a really good .gitignore file for every project. Don't have you all cocoapod source files etc. in your repository. You can find a number of pre-configured .gitignore files for Xcode / AppCode / etc. on GitHub and other places."
iOSProgramming,3ch4xs,MKevin3,4,Wed Jul 8 20:54:42 2015 UTC,I use Tower both at work and at home.
iOSProgramming,3ch4xs,kielrene,1 point,Wed Jul 8 04:43:59 2015 UTC,Tower is $60 for a new license and SourceTree is free.  Is there something there worth paying the $60 for?  This is not a slam.  Genuinely want to know if I should take a look at it.
iOSProgramming,3ch4xs,dar512,1 point,Wed Jul 8 20:47:47 2015 UTC,"I've worked with SourceTree, but I very much prefer Tower. It's just a lot more polished than SourceTree. SourceTree is pretty bloated in my eyes and a lot more complicated to use. Tower concentrates on the features that actually matter in daily work and delivers those perfectly. I'm just a lot more productive with it."
iOSProgramming,3ch4xs,kielrene,1 point,Thu Jul 9 04:24:55 2015 UTC,"Knowing the command line side of things is pretty important, but really for solo deving and just backing up your working, whats integrated into the IDE will do just fine.  My routine is, personal solo working, just use IDE, group stuff command line. I don't know why I do it that way. Always have.  Also I've i'm contributing to something, which I rarely do I will use command line."
iOSProgramming,3ch4xs,Groydis,-2,Tue Jul 7 22:03:10 2015 UTC,I silently judge people who use any GUI system of source control.  Terminal is manly. Don't puss out.
iOSProgramming,3ch4xs,unpopularOpinions776,1 point,Wed Jul 8 05:28:18 2015 UTC,Untrue but funny anyway.
iOSProgramming,3cgx31,jhurray,1 point,Tue Jul 7 20:41:00 2015 UTC,I'm a fan of auto layout but i know a lot of people who would appreciate what you've done. Thanks for contributing.
iOSProgramming,3cgx31,unpopularOpinions776,1 point,Wed Jul 8 05:40:55 2015 UTC,"0.0 <-> 1.0 is not a percentage. 0.0 <-> 100.0 is a percentage. It's more like a factor or ratio or something like that. Either scale them up 100x so they are true percentages or change the name.  I also really don't get the part where autolayouts are hard when you're doing landscape vs portrait (which isn't totally true anymore either) unless you really insist on doing everything in code.  The rest of it: a nice framework, seems to be easy to use and thought out."
iOSProgramming,3cgbsd,notswag,7,Tue Jul 7 18:13:56 2015 UTC,Let me get that for you...
iOSProgramming,3cgbsd,aporcelaintouch,2,Tue Jul 7 19:42:22 2015 UTC,If you'd like to learn Objective-C you could start here for free > http://tryobjectivec.codeschool.com/
iOSProgramming,3cgbsd,nathanello,5,Tue Jul 7 20:53:45 2015 UTC,"That really depends on your goal, where you are now, and what you want to do. To directly answer your question: you can learn iOS development for free with Stanford's course on iTunes U. https://itunes.apple.com/us/course/developing-ios-8-apps-swift/id961180099  RayWenderlich.com has lots of tutorials you can follow for learning specific frameworks and technologies.  You should probably follow some sort of path so you know where you stand and what's next. Then pick out resources that can help you learn what you need to learn to get to the next level."
iOSProgramming,3cgbsd,jtbrown,1 point,Tue Jul 7 18:19:05 2015 UTC,I always recommend this one: https://www.codeschool.com/paths/ios
iOSProgramming,3cgbsd,StunnerAlpha,1 point,Wed Jul 8 04:36:36 2015 UTC,I don't know what you've learned so far but focus on Objective C first.
iOSProgramming,3cgbsd,unpopularOpinions776,1 point,Wed Jul 8 05:30:34 2015 UTC,I'm a huge fan of hackingwithswift.com.
iOSProgramming,3cdw4j,LemonadeTrophy,4,Tue Jul 7 03:45:44 2015 UTC,"My game ""push it in"" was most successful at initial launch but has since grounded to a halt in downloads.   My app ""pocket pool boy"" continues to have downloads trickle in.    Both are ad supported and neither make much money.    I am slowly learning how to make better ui as that is the major issue with them.    I continue to update all my apps several times a year.   At this point it's just a hobby and a dream"
iOSProgramming,3cdw4j,bakutogames,2,Tue Jul 7 15:25:59 2015 UTC,"Is that all the same app? :D If so, what's it called?"
iOSProgramming,3cdw4j,Zhirgoyt,4,Tue Jul 7 10:45:45 2015 UTC,Flappy Fart
iOSProgramming,3cdw4j,shiivan,6,Tue Jul 7 11:47:07 2015 UTC,Instafart
iOSProgramming,3cdw4j,ThePantsThief,1 point,Tue Jul 7 13:04:52 2015 UTC,Flapyart
iOSProgramming,3cdw4j,helguita,2,Tue Jul 7 13:25:16 2015 UTC,"5,000 Words Per Hour. I earn ~$500 a month from it, and about five times that amount from the book that spawned the app.  I've learned a LOT from deploying it though. Prior to that I thought 20-30 beta testers would catch everything. I couldn't have been more wrong. My user base finds new and inventive bugs every week.  I make a lot more money from books in general (fiction mostly), but I do continue to develop apps. Most make me three figures, and if you add up enough revenue streams it's enough to live on."
iOSProgramming,3cdw4j,Arkelias,2,Tue Jul 7 14:14:31 2015 UTC,"I made an app called 'logic grid puzzles - word games for brain training' (sorry the name is so long). I continue to write puzzle packs for it. For me, offering All Packs has been the best revenue source, it includes future packs which other developers tell me is dumb but users really love. It continues to perform better than my other word game apps so who knows!"
iOSProgramming,3cdw4j,iliketopgun,1 point,Tue Jul 7 20:11:46 2015 UTC,"I have three apps on the App Store. A calculator, a guitar chords chart app, and a game similar to flappy birds. The one with the most downloads and ad revenue is the guitar chords app."
iOSProgramming,3cdw4j,MiddlebrowMentality,1 point,Wed Jul 8 11:49:44 2015 UTC,Spend Stack hit #18 under Finance (paid) when it launched.
iOSProgramming,3cdw4j,dreaminginbinary,1 point,Tue Jul 7 14:56:38 2015 UTC,First app I built hit #3 Health & fitness (iPad) after releasing an ipad version. Got lucky with the timing since it was only a few months after the iPad came out. It still regularly gets in the top 20-50 but I don't support it anymore.  Also a baseball related app I built for a client hit #28 in Sports for iphone. Not really too proud of that one. Shit design and many headaches trying to fix previously outsourced code.
iOSProgramming,3cevh9,Pnikosis,8,Tue Jul 7 10:59:09 2015 UTC,You should try advertising on http://careers.stackoverflow.com.
iOSProgramming,3cevh9,codgerX,5,Tue Jul 7 13:29:58 2015 UTC,"Have you considered posting on one of Hacker New's ""Who's Hiring"" threads? If I were looking to hire that would definitely be somewhere I would consider.  Normally they run once a month and even when I'm not seeking a new job I'll scroll through to see if anything catches my eye."
iOSProgramming,3cevh9,mmnml,1 point,Tue Jul 7 14:32:21 2015 UTC,"That's a great suggestion, I'll definitively do that."
iOSProgramming,3cevh9,iOSbrogrammer,2,Tue Jul 7 14:42:47 2015 UTC,You'll have to wait until August 1 for that to have visibility and recency though. But still a good option to have in the back of your head.
iOSProgramming,3cevh9,skilless,3,Tue Jul 7 19:27:27 2015 UTC,Which part of Southern Europe?
iOSProgramming,3cevh9,unpopularOpinions776,5,Tue Jul 7 13:52:54 2015 UTC,"Barcelona, 32 degrees celcius right now, but we have a beach. And air conditioner... And smoothies in the office."
iOSProgramming,3cevh9,blaizedm,1 point,Tue Jul 7 14:03:29 2015 UTC,"I'm wondering how many people (like myself) read that and thought ""no thanks I prefer my basement""."
iOSProgramming,3cevh9,quellish,2,Wed Jul 8 05:42:51 2015 UTC,"Maybe try /r/IWantOut and/or /r/IWantOutJobs, lots of people there looking to relocate."
iOSProgramming,3cevh9,Wayne_Skylar,1 point,Tue Jul 7 13:01:59 2015 UTC,Thanks!
iOSProgramming,3cevh9,downvotefodder,1 point,Tue Jul 7 13:07:27 2015 UTC,Why not let them work remote?
iOSProgramming,3cevh9,dfsw,3,Tue Jul 7 15:09:35 2015 UTC,Because the project needs strong in site collaboration and coordination.
iOSProgramming,3cevh9,linkrift,4,Tue Jul 7 15:15:26 2015 UTC,"People always seem to think this, but as someone who's worked both on a one-room team and a completely distributed team, I find that working remotely actually improves team productivity."
iOSProgramming,3cevh9,jtbrown,-4,Tue Jul 7 15:27:45 2015 UTC,"For years, and on dozens of projects, I've worked 3 times zones away from the other developers. There's this thingy called the ""internet"" (ask the google about it) where you can be constantly in touch."
iOSProgramming,3cdixi,smithandsons,2,Tue Jul 7 01:52:38 2015 UTC,"Very cool. I like the clean, simplistic design and the colors. Like the icon too except for the 3D look. Skeuomorphism doesn't really play well with flat design. Anyway, interesting read. I'm currently developing an iOS app for a freelance client too."
iOSProgramming,3cdixi,isurujn,2,Tue Jul 7 06:50:49 2015 UTC,"Thanks!  As for the icon, I toyed with some flat designs but couldn't quite nail it.  All of my other icons have been in that modern style - a shape or logo with a background with a tiny gradient.  It'd be cool if you wrote about your experience freelancing on your current project.  I pitch it as promotion for the client and offer to let them take a look prior to posting it.  Usually they object to only a sentence or two."
iOSProgramming,3cdixi,dreaminginbinary,1 point,Tue Jul 7 14:03:21 2015 UTC,"Interesting read. Doing work for clients is about the only thing I've not done in the world of iOS, I usually just push them aside. Never dedicated time to put some thought into pricing, contracts, expectations, etc."
iOSProgramming,3cdixi,Rudy69,6,Tue Jul 7 02:02:15 2015 UTC,"I personally find it's a stable income that doesn't depend on the ""AppStore lottery"". I've mostly given up on developing content for myself at this point. The money I make freelancing would be really hard to make with sales or ad impressions."
iOSProgramming,3cdixi,dreaminginbinary,1 point,Tue Jul 7 05:49:10 2015 UTC,"I agree.  It's really nice to not have to worry about monetizing these things.  That being said, I'm trying to always have one project where I can do what I want with 100% full control.  Problem is, I never get around to releasing them because they don't pay!"
iOSProgramming,3cec2x,vale93kotor,1 point,Tue Jul 7 06:29:59 2015 UTC,"Not sure if this is it but take a look at this, its very helpful."
iOSProgramming,3cfmud,Flames5123,3,Tue Jul 7 15:19:55 2015 UTC,"I can't completely answer your question, but I can tell you that the reason for using ""as!"" Instead of ""as"" is because the Swift compiler is protecting you from assigning a value to something when the value doesn't exist. If you use ""!"" That denotes an optional which means that the variable can be given a value, but won't freak out if it isn't. Using optionals is one way Swift attempts to keep your code clean and error safe.  Sorry if this isn't the greatest explanation. I would recommend reading up on optionals a bit more."
iOSProgramming,3cfmud,Jusisgood,1 point,Tue Jul 7 15:46:54 2015 UTC,Thanks! This helps a little. I'll look into it tonight when I go over the code again.
iOSProgramming,3cfmud,yeskia,1 point,Tue Jul 7 16:46:23 2015 UTC,"Pretty sure that's a change in Swift 1.2. It used to be ""as"" but they wanted to make it clearer that forcing a downcast can be dangerous, so the syntax has been changed to ""as!""."
iOSProgramming,3cfmud,jtbrown,1 point,Wed Jul 8 06:59:31 2015 UTC,"When you use ""as!"", you're forcing it to cast to the type you want. If that cast fails, the app will crash, so I'm not surprised it's crashing for you. What this means is that whatever object you're casting isn't the type you expect - it's some other type.  You should be able to see which line it's crashing on with the debugger and inspect the object you're trying to cast so you can see what type it really is.  Alternatively - and recommended - you can safely cast with ""as?"" and then handle the case where the cast fails, dealing with the optional value instead. So your code above might look something like this (which I haven't tested):  if let button = UIButton.buttonWithType(.System) as? UIButton {     self.nextKeyboardButton = button } else {     // the cast failed - do something! (or do nothing...)     println(""casting to UIButton failed..."") }   In practice, this cast statement seems pretty unlikely to fail - I'm guessing your crash is coming from some other cast in your code."
iOSProgramming,3cf4wa,1osb,2,Tue Jul 7 12:47:27 2015 UTC,"I've seen some apps with OSX and iOS versions (e.g. 1Password, Things) mention a wifi server running from the mac, which a local phone could connect to"
iOSProgramming,3cf4wa,shitidiotturtle,1 point,Tue Jul 7 14:11:00 2015 UTC,You could try handoff if that fits your design.
iOSProgramming,3cf4wa,meelawsh,1 point,Tue Jul 7 14:38:12 2015 UTC,"Handoff is great, but I'd like to also support Windows."
iOSProgramming,3cf4wa,meelawsh,1 point,Tue Jul 7 14:44:10 2015 UTC,"You can definitely do USB cable (check out Unicorns), for wifi you'd have to do some low-level coding on the iPhone (sockets), perhaps UDP. You're much more flexible on the computer side. I haven't done anything like this, just spitballing."
iOSProgramming,3cf4wa,badlcuk,1 point,Tue Jul 7 20:01:50 2015 UTC,"Actually i thiiiink i just watched a video that described how to fake this, and then make it a little more real. I cant remember the details, but it would be this video from this years WWDC iirc. I think this had a mechanism for kind of dealing with local pushes of data, but i definitely know they talk about faking it well.  Sorry if this is not at all what you need, but it seemed maybe you might not have had to actually do a real push notification by the wording of your post so it may be useful."
iOSProgramming,3cf4wa,Don_Equis,1 point,Tue Jul 7 14:41:03 2015 UTC,How much data and how long does the device's battery need to last? You can encode data on sound that we can't hear.
iOSProgramming,3ccz0o,jman32112,1 point,Mon Jul 6 23:09:57 2015 UTC,What are you programming this in?
iOSProgramming,3ccz0o,fithbert,1 point,Mon Jul 6 23:28:25 2015 UTC,"I’m using swift, sorry I should’ve mentioned that."
iOSProgramming,3ccz0o,fithbert,2,Mon Jul 6 23:50:33 2015 UTC,"What are you suing for graphics? SpriteKit? Cocos2D?  If you're using either of those, look in to actions, specifically scaleTo with duration.   When the user touches a dot, add the scaling action and save it as a member variable, when they stop touching, use the member variable to tell the action to stop and set the dot's scale back to 1.0.  Here's a SpriteKit tutorial inovling actions that I did starting out: http://www.raywenderlich.com/42699/spritekit-tutorial-for-beginners"
iOSProgramming,3ccz0o,fithbert,2,Tue Jul 7 00:18:43 2015 UTC,"Er… sorry, that tutorial is totally in objective-c. Here's one in Swift: http://www.raywenderlich.com/89222/sprite-kit-animations-texture-atlases-swift"
iOSProgramming,3ccz0o,fithbert,1 point,Tue Jul 7 02:08:26 2015 UTC,"Right now I'm just doing it through UIKit, so not even using any game engine, mostly because the game functions don't require any physics"
iOSProgramming,3ccz0o,fithbert,2,Tue Jul 7 03:52:37 2015 UTC,Give the SpriteKit tutorial a try and see if that's easier.  IMO it's just arranged much better for handling the needs of games. Physics are optional.
iOSProgramming,3ccz0o,jedrekk,2,Tue Jul 7 04:27:58 2015 UTC,Plus (this isn't in that tutorial) you can arrange SpriteKit scenes in interface builder now.  And in iOS 9 / XCode 7 you can do timeline animations in SpriteKit interface builder.
iOSProgramming,3cdsfk,th3phantom,4,Tue Jul 7 03:12:20 2015 UTC,You can use an ad hoc provisioning profile with all the device IDs instead of enterprise. You need a plist and an ssl connection  See Apple's wireless distribution guide.
iOSProgramming,3cdsfk,gintonicisntwater,2,Tue Jul 7 09:22:57 2015 UTC,upload  your ad hoc ipa to dropbox (supports ssl linking) and create a manifest html file that you will link to your users - you can then replace the IPA when you update without changing the link
iOSProgramming,3cdsfk,halpz,2,Tue Jul 7 15:06:58 2015 UTC,"You'll need the Enterprise program. However, if you distribute it to anyone without a contractual business relation to you with 'legitimate business interest' then Apple will terminate your account....and likely blacklist you from creating another one. It's not really worth the risk.  Put it on the App Store, put it on Cydia, or release it open source and let people build/install it themselves."
iOSProgramming,3cdsfk,brendan09,1 point,Tue Jul 7 22:35:50 2015 UTC,You need an enterprise program for this. If you do this using an enterprise program your app must include a login for your company.
iOSProgramming,3cd0xt,LaserWolfTurbo72,1 point,Mon Jul 6 23:25:25 2015 UTC,"Are you accessing the keychain directly or through a wrapper? When I first started saving information to the keychain directly I had a few users having intermittent problems like this (though I can't remember the error exactly). I started using UICKeyChainStore and haven't noticed any problems since, though my user base is fairly small so perhaps it just a problem waiting to happen."
iOSProgramming,3cd0xt,askoruli,1 point,Mon Jul 6 23:40:19 2015 UTC,"I've tried both SSKeyChain and UICKeychainStore. I'm getting the error with both. I don't doubt there's a lot of people using these quite successfully. However, in some certain circumstance, this error rears its head.   You likely aren't experiencing the issue at all. You'd notice it if you were from about 30-60 minutes of testing (depending how frequently you access the keychain is likely a factor too though)."
iOSProgramming,3cd0xt,askoruli,1 point,Mon Jul 6 23:45:32 2015 UTC,I don't use the keychain much. On login I store the username + password (usually only happens once) and then I read them when required for authentication (once every 24 hours)
iOSProgramming,3cd0xt,askoruli,1 point,Mon Jul 6 23:57:54 2015 UTC,"Once your used is logged in, how do you authenticate certain POSTs/actions with your server?"
iOSProgramming,3cd0xt,askoruli,1 point,Tue Jul 7 01:48:12 2015 UTC,I get a 24hr token which I just realised is being stored unencrypted in core data and I need to move into the keychain. Even then I'll only read it once when the app starts and keep it in memory.  It's only a photo app with no users right now so I'm not too worried.
iOSProgramming,3cd0xt,askoruli,1 point,Tue Jul 7 02:19:24 2015 UTC,"How do you keep it in memory? Do you have some sort of SessionManager singleton class that reads the value and keeps it in the singleton?  Perhaps this is part of my issue? Every time I need the token, I retrieve it from the Keychain. So any action that requires authentication, like creating a post, or a comment, or editing their account etc... I retrieve it from the keychain. Perhaps not storing it in memory is part of the problem?"
iOSProgramming,3cd0xt,askoruli,1 point,Tue Jul 7 02:43:08 2015 UTC,I have a kind of service architecture which is created in the app delegate and then passed to all my view controllers. So it's not technically a singleton but functions similarly. The top level service class is broken down into a tree of sub services. One of them is the UserService which on startup loads the current user into memory for quick access. This includes the session token.   But for your case I would just create a singleton to test the theory. Even if it doesn't solve the problem it might cut down how often it happens significantly.
iOSProgramming,3cd0xt,quellish,1 point,Tue Jul 7 02:55:02 2015 UTC,"Even if it doesn't solve the problem it might cut down how often it happens significantly.   Definitely. While Apple seems to suggest it may have to do with launching/resuming the application, I've definitely received the error whilst neither of those are true.   Just by the sheer mathematics of it, storing the token in memory will cut down the amount of times the keychain is accessed for the token from dozens to 1. That alone has got to decrease the errors occurrence."
iOSProgramming,3cd0xt,quellish,1 point,Tue Jul 7 04:55:26 2015 UTC,What are your thought on my sketchy proposed solution? Would it pass Apple review? Is it too far beyond responsible security?
iOSProgramming,3cd0xt,TaviRider,1 point,Mon Jul 6 23:50:47 2015 UTC,"It will pass review just fine. Apple doesn't do an audit of your code to make sure you're correctly securing sensitive data.   I can't see a way you can do this without opening up a security hole, however small the hole may be. But if the correct solution (keychain) is broken then you're in a tough spot. I would advise before spending time implementing custom security you spend time trying to replicate the problem. Since it sounds like the problem is happening a lot for you can you make a minimal app which replicates the problem and post it on github? Perhaps someone can spot something odd. Also once you can replicate the problem in its simplest form perhaps taking out 1 or 2 things will make it go away."
iOSProgramming,3ccmpk,yaomango,1 point,Mon Jul 6 21:37:39 2015 UTC,I actually just closed a live streaming app I made. I would highly recommend building on existing resources rather than building your own.  I used www.cine.io but they are closing in about two months. The most popular streaming platform is OpenTok (www.tokbox.com).   Totally worth the money spent in my opinion.
iOSProgramming,3ccmpk,Maximillionnn,1 point,Mon Jul 6 21:41:46 2015 UTC,"Oh perfect. Thanks so much for this, I was actually trying to find some services for this as well.  Cheers!"
iOSProgramming,3ccmpk,Maximillionnn,1 point,Mon Jul 6 22:37:37 2015 UTC,No problem! Let me know if you run into any problems getting setup with them.
iOSProgramming,3cdvoe,Tamarisk22,2,Tue Jul 7 03:41:27 2015 UTC,"If you want to wait until all the tasks are finished, I would add them to an array as you create them, and then call a function in the completion handler of the task that will remove the task from your array. When there are no more tasks in the array, everything is finished.  You could also wrap up your tasks in NSOperations and set dependencies on them. Then add one final task with the code to set your buttons up as the last dependency so it won't run until everything else is finished."
iOSProgramming,3cdvoe,caffeinatedhacker,1 point,Tue Jul 7 12:26:52 2015 UTC,"For the array method, I want to make sure I understand. Essentially add the tasks to an array, then run a loop through the array?   EDIT: I guess the part i dont understand is how everything will wait for the array to be empty"
iOSProgramming,3cdvoe,caffeinatedhacker,1 point,Wed Jul 8 02:19:59 2015 UTC,"You can have the success handler for the task call another method in your class that will check the array. Something like this:  let task = session.dataTaskWithRequest(request) { (data, response, error) in    if data != nil {      self.taskCompleted();    }  } self.tasks.add(task)   and then in taskCompleted() remove the completed task from your array and check to see if there's anything left.  It's probably not the most elegant solution, but it can work"
iOSProgramming,3cdvoe,attempt_number_two,1 point,Wed Jul 8 05:30:59 2015 UTC,"and check to see if there's anything left   do you mean like:  if taskArray.count == 0 {     // do whatever }   Then nothing would stop this check from just being passed over. I've heard about this array-check method before. I'm sorry, I am having trouble and have spent 2 days on this problem. I think my brain is going to mush."
iOSProgramming,3cdvoe,attempt_number_two,1 point,Wed Jul 8 06:17:53 2015 UTC,"Is this what you are asking for?     let session = NSURLSession.sharedSession()     if let url = NSURL(string: someString) {         let request = NSMutableURLRequest(URL: url)         let task = session.dataTaskWithRequest(request) { (data, response, error) in             if data != nil {                //do something with data              }         }           task?.resume()       }   Edit: after reading back over your post maybe this isn't what you are asking. But I'll keep it here in case it could help."
iOSProgramming,3cdvoe,attempt_number_two,1 point,Tue Jul 7 04:06:40 2015 UTC,"I should have clarified that I wanted to execute the code outside of the task execution block. I want to set labels/buttons/whatever from data gathered from the NSURLSession, but the code to set the button label is called before the task is completed. So my code keeps trying to set nil values to app elements."
iOSProgramming,3cbbjj,Hgunz47,3,Mon Jul 6 16:03:03 2015 UTC,"You can look into this cocoapod: https://cocoapods.org/?q=english%20dictionary  Never used it, but cocoapods can be really useful if they're good."
iOSProgramming,3cbbjj,alanscarpa,6,Mon Jul 6 17:32:50 2015 UTC,"You might be able to use UITextChecker to validate words (you'd need to turn your letter array into a string to do that—I'd recommend just using a string rather than an array of letters in the first place), but a better way is probably bundling a text file which contains all valid words for your game.  I've previously used the ENABLE word list for use with a word game (it's in the public domain), and you can download it here: http://norvig.com/ngrams/enable1.txt (I'm not sure where the official download for this is, though.)  You then need to load the words into an array of strings, so you can check to see if your current word is in the strings array. Hope that helps!"
iOSProgramming,3cbbjj,Komputer9,2,Mon Jul 6 16:40:20 2015 UTC,"Thanks, I will look into this. All valid words for my game will be any real English word greater that 2 letters and less than 11 letters."
iOSProgramming,3cbbjj,freaky_dee,7,Mon Jul 6 16:47:12 2015 UTC,"To extend that idea, you want to use a set, not an array. Searching an array for a string is O(N), searching a set is O(1)."
iOSProgramming,3cbbjj,fithbert,2,Mon Jul 6 17:41:40 2015 UTC,Thank you.
iOSProgramming,3cbbjj,fithbert,1 point,Mon Jul 6 18:20:48 2015 UTC,Great call!  And did you ever play Letterpress? Great game. Atebits hosted their word list on GitHub: https://github.com/atebits/Words  That's a good because you can use a library like AFNetworking (there's lots of tutorials) to check the version of the word list and download it if there's a new one. So you can make changes to the list if needed without users having to update from the App Store (or you having to resubmit the app).
iOSProgramming,3cbbjj,skilless,1 point,Tue Jul 7 00:32:38 2015 UTC,"I'm blind, lol. That word list was posted right below this. lol. Just shows it's a good resource."
iOSProgramming,3cbbjj,skilless,3,Tue Jul 7 10:59:28 2015 UTC,"I've written two word games, most recently revamping Fire Words.  You don't want to use iOS's built-in dictionary. It uses the user's current localization, which may invalidate UK or American spellings of words (color vs. colour) which an adept word game player would expect to be accepted. It would also possibly break words for players that use a non-english (or especially non-germanic) language. And if your game is multiplayer, than you have the possibility of each player not even using the same dictionary.  And none of that is considering familiar game rules like the banning of pronouns and capitalized words.  You really want to include your own dictionary. Luckily Loren Bichter, creator of Letterpress, has open sourced his: https://github.com/atebits/Words  Both my games had to run on the iPhone 4, which made holding the entire dictionary in memory very difficult. In both cases I sorted the dictionary by word length, and broke it up at each length. That way the search space for a given word is limited to the list of all words of the same length.  Given the power of modern devices, I'd probably load the whole dictionary into an array and just use the  built-in contains() method. If you do want something more elegant, there's a lot of more clever algorithms than the ones I described, as word games have existed on computers far less powerful than even an iPhone 4.  Good luck!"
iOSProgramming,3cbbjj,halpz,1 point,Mon Jul 6 19:19:47 2015 UTC,Thank you very much! Fire Words looks like it has a gorgeous UI. Has it had any success in the Appstore?
iOSProgramming,3cbbjj,halpz,1 point,Mon Jul 6 19:28:24 2015 UTC,Not much success! But I hope to make a sequel eventually…
iOSProgramming,3cbbjj,twostraws,1 point,Mon Jul 6 19:46:47 2015 UTC,you should load the words into core data on the first launch - then you can perform queries instead of iterating through massive lists
iOSProgramming,3cbbjj,w0mba7,2,Tue Jul 7 08:56:40 2015 UTC,"you need to query a dictionary - I think there may be a built -in dictionary you can use, but if not I imagine an API is available somewhere"
iOSProgramming,3cbbjj,succeededcoma,2,Mon Jul 6 16:20:06 2015 UTC,"This exact problem is solved in a free tutorial I wrote, which uses UITextChecker for an anagrams game. If you want to jump straight to the pertinent chapter, click here and search for UITextChecker."
iOSProgramming,3cbbjj,ThePantsThief,1 point,Mon Jul 6 20:00:53 2015 UTC,"Wow, thanks. Checking this out now."
iOSProgramming,3cbbjj,SleepyTimeOkay,1 point,Mon Jul 6 23:59:40 2015 UTC,"Alright, I think I am confused with the NSNotFound part. This is what I have:  I am calling wordIsReal(finalWord) which looks like this.  I keep getting TRUE for every .  ""WATER is a real word""  ""PNNQ is a real word"""
iOSProgramming,3cazxu,feldrok_,3,Mon Jul 6 14:31:22 2015 UTC,Are you using the latest Xcode 7 beta?  I think GameplayKit is part of iOS9 and Swift 2 which comes with Xcode 7.
iOSProgramming,3cazxu,skoll,2,Mon Jul 6 14:38:26 2015 UTC,"Ohhh, that must be the problem... I'm using 6.4... Thank you! Im just starting with this... Do you recommend any other good tutorials?"
iOSProgramming,3cazxu,15458434,5,Mon Jul 6 14:41:00 2015 UTC,"If your still learning stay away from Xcode 7. It's still beta and you run into problems you don't understand. Ray Wenderlich has some good iOS tutorials on his community site on learning GameKit, SpriteKit and SceneKit for Xcode 6.x"
iOSProgramming,3cazxu,twostraws,2,Mon Jul 6 19:26:38 2015 UTC,"If you're looking specifically to learn GameplayKit, I wrote two tutorials that will interest you: using GameplayKit and GKMinmaxStrategist to make a Four in a Row game and how to generate random numbers using GameplayKit.  If you're looking to learn SpriteKit, then tutorials 11, 14, 17, 20, 23, 26 and 29 of Hacking with Swift all teach SpriteKit. If you're just learning Swift, can I suggest you start at my first tutorial otherwise you might find it a bit difficult!  All these tutorials are free, and all are written for Swift. Have fun!"
iOSProgramming,3cazxu,skoll,1 point,Mon Jul 6 19:58:06 2015 UTC,"You should be able to download the Xcode 7 beta if you want to continue with that tutorial.  If not, there are tons of SpriteKit tutorials to get you started on game related programming for iOS now.  Then add GameplayKit when Xcode 7 and iOS 9 are released.  There is Apple's primer on SpriteKit: https://developer.apple.com/library/ios/documentation/GraphicsAnimation/Conceptual/SpriteKit_PG/GettingStarted/GettingStarted.html  Or various different game type tutorials here: http://www.raywenderlich.com/category/sprite-kit"
iOSProgramming,3cc3q1,succeededcoma,3,Mon Jul 6 19:24:52 2015 UTC,"https://developer.apple.com/library/ios//documentation/MapKit/Reference/MKMapView_Class/index.html  See ""Annotating the Map""  tl;dr   create a class that conforms to MKAnnotation and holds the annotation coordinates and the information you want to display. There are three properties, but the most important (and required) one is coordinate which is a CLLocationCoordinate2D. Create an array of these objects using your Parse data and add them to the map with addAnnotations: use the MKMapView to display MKPinAnnotationView or custom MKAnnotationView objects - this is handled by MKMapKitDelegate, and what you will be most interested in initially is mapView:viewForAnnotation:   edit: here is a basic example controller: https://gist.github.com/dcramps/0cecc8016e941afd1141"
iOSProgramming,3cc3q1,dcramps,1 point,Mon Jul 6 19:49:39 2015 UTC,Really awesome. Thanks for the example!!
iOSProgramming,3cc3q1,binaryOne,1 point,Mon Jul 6 22:09:45 2015 UTC,"Is there a limit to how many annotations to load into the array?    For example if I wanted to display nearby restaurants, surely I'm not creating an array of all restaurants on the planet and then letting MKMapView only display the ones nearby...  I'm guessing you can filter the array before passing it on to MKMaView but wouldn't that still require filtering large amounts of data? Perhaps I'm thinking about this all wrong."
iOSProgramming,3cc3q1,dcramps,1 point,Tue Jul 14 00:03:00 2015 UTC,"You can put however many you want in the array. The mapview will only display ones with coordinates that fall into the region the map is displaying.  edit: Keep in mind this means you can potentially display thousands and thousands of pins if you zoom the map out, so be careful about how you design things"
iOSProgramming,3cbwk1,LaserWolfTurbo72,8,Mon Jul 6 18:36:18 2015 UTC,"However, sometimes you might have a section with 20+ functions in it.   This is usually a pretty good sign that your viewcontroller is doing too much."
iOSProgramming,3cbwk1,dcramps,1 point,Mon Jul 6 19:33:06 2015 UTC,"I would agree that usually it is, but not always. I've been reading ""Uncle Bob's"" Clean Code recently, and have come to adopt many of his ideas.  So as opposed to...  - (void)viewDidLoad {     ....     self.widgets = [[NSMutableArray alloc] init];     self.gadgets = [[NSMutableArray alloc] init];      self.navigationItem.title = @""Inventory"";      self.tableView.backgroundColor = [UIColor redColor];      [self fetchWidgets];     [self fetchGadgets];     ... }   I'm more likely to have...  - (void)viewDidLoad {     ...     [self initializeData];     [self initializeView];     [self fetchData];     ... }  - (void)initializeData {     ...     self.widgets = [[NSMutableArray alloc] init];     self.gadgets = [[NSMutableArray alloc] init];     ... }  - (void)initializeView {     ...     [self initializeNavigationController];     [self initializeTableView];     ... }  - (void)initializeNavigationController {     ...     self.navigationItem.title = @""Inventory"";     ... }  - (void)initializeTableView {     ...     self.tableView.backgroundColor = [UIColor redColor];     ... }  - (void)fetchData {     [self fetchWidgets];     [self fetchGadgets]; }   etc.  Very small, well defined functions that serve 1 thing, and if they attempt to do 2 things, then breaking them apart. However, it can lead to a lot of functions. They're all very readable of course because of their size, and if they are named well, no comments are needed. However, I'm never too sure how best to organize them and where to best slot them into my code."
iOSProgramming,3cbwk1,dcramps,2,Mon Jul 6 21:19:39 2015 UTC,"Right, that makes sense. I think your groupings make sense, but they're just big as a consequence of many small methods.  Group them in logical sections. Grouping delegate methods is great, and having the mark include the full name of the delegate allows you to CMD+Click that text to get to the header. Group network calls together, actions together. Or split your network calls and actions into their own groups, eg ""#pragma mark - User purchase"" etc.  Alphabetically doesn't really make any sense."
iOSProgramming,3cbwk1,askoruli,2,Mon Jul 6 21:33:19 2015 UTC,I think your organisation is good but you would benefit from having a view model class to slim down the view controller. I think of view models as transforming model data into a form which can be used by my view. In your case I would move the widgets and gadgets arrays to the view model along with the fetch methods. I'm sure you'll find more things that you can move over as well.
iOSProgramming,3cat71,napolux,1 point,Mon Jul 6 13:30:51 2015 UTC,You can have more than one version of Xcode installed and choose which toolchain you use for command line builds by using xcode-select: https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xcode-select.1.html  You can download older versions of Xcode from developer.apple.com.
iOSProgramming,3cat71,skoll,1 point,Mon Jul 6 13:42:56 2015 UTC,Thanks. Is this the only way?
iOSProgramming,3cat71,skoll,1 point,Mon Jul 6 13:50:42 2015 UTC,I am not aware of any way to make the Swift 1.2 compiler compile Swift 1.1 code.  Backwards compatibility doesn't seem to be something Apple is striving for in their compiler updates.  So in order to compile 1.1 code on a system with 1.2 as the default compiler is to install the 1.1 compiler (older version of Xcode) as well.  As far as I know.
iOSProgramming,3c86ty,Danappelxx,6,Sun Jul 5 20:27:46 2015 UTC,"I don't know about communities, per-say, but https://iosdevweekly.com/, http://ios-goodies.com/, and http://nshipster.com/ all make good reading for keeping up with trends in iOS dev in general."
iOSProgramming,3c86ty,luxurychair,2,Sun Jul 5 20:39:11 2015 UTC,"That's disappointing... You'd think more people would want a place to share their findings. It seems to be only iOS, too, since android has xda and it's subreddit is nearly twice the size of iOS's."
iOSProgramming,3c86ty,ThePantsThief,5,Mon Jul 6 06:36:33 2015 UTC,My favorites:   NSHipster Objc.io The Hamster Emporium Mike Ash's blog and his gists
iOSProgramming,3c86ty,reblis,3,Sun Jul 5 22:58:36 2015 UTC,There's the iOS developers slack channel that you can join http://ios-developers.io/
iOSProgramming,3c86ty,TouchMint,2,Tue Jul 7 07:19:06 2015 UTC,Iphonesdkdev used to be a really good place for business side and programming advice but after a few account compromises it has somewhat died out.
iOSProgramming,3c86ty,tjgrant,2,Mon Jul 6 12:01:18 2015 UTC,"/r/iosprogramming , you're lookin' at it, baby."
iOSProgramming,3c86ty,lucasvandongen,1 point,Mon Jul 6 17:36:15 2015 UTC,"It's pretty much non existent I guess....I follow a bunch of people on Twitter, that's pretty much it."
iOSProgramming,3c86ty,Alcoholic_Synonymous,1 point,Mon Jul 6 02:06:30 2015 UTC,"I don't think there's a single place that defines the community. Twitter has loads of people talking about iOS dev, constantly. The community comes from the meet ups, like CocoaHeads and NS<Whatever>"
iOSProgramming,3c86ty,15458434,1 point,Mon Jul 6 12:13:56 2015 UTC,"Look for CocoaHeads I know they're based in Amsterdam, I'm not sure if they're a global community. Else there is Appsterdam which is a Global community."
iOSProgramming,3ca06k,ThePantsThief,2,Mon Jul 6 07:06:05 2015 UTC,"Maybe it's a little tangential, but not all types are known to the runtime. But, since you are requiring that your types are still more than a void *, that's a problem.  I don't know if you can do it totally transparently, but a type could tell your little 'type system' what it needs in a +load, and you can do it for them.  With this kind of 'meta' programming, you can also do it with macros."
iOSProgramming,3ca06k,shiggie,1 point,Mon Jul 6 16:15:15 2015 UTC,"Ah, macros could probably help here. Can a type like int be used in as a macro argument?  Such that with this macro:  #define MKPropertyGetterForNamedType(name, type) imp_implementationWithBlock(^(id self) { return *( type *)[self getIVarAddressByName: name]; })];   the following:  MKSimpleMethod *getLength = [pLength getterWithImplementation:imp_implementationWithBlock(^(id self) {     return *(NSUInteger*)[self getIVarAddressByName:iLength.name]; })];   becomes:  MKSimpleMethod *getLength = [pLength getterWithImplementation:MKPropertyGetterForNamedType(iLength, NSUInteger)];   Edit: even simpler:  #define MKPropertyGetter(property, name, type)  [property getterWithImplementation: imp_implementationWithBlock(^(id self) { return *( type *)[self getIVarAddressByName: name]; })]; ... MKSimpleMethod *getLength = MKPropertyGetter(pLength, @""_length"", NSUInteger);"
iOSProgramming,3ca06k,shiggie,1 point,Mon Jul 6 16:29:26 2015 UTC,"The preprocessor just substitutes in the macro, so anything (almost) goes, just as it ends up being syntactically correct."
iOSProgramming,3ca06k,shiggie,1 point,Mon Jul 6 16:36:07 2015 UTC,"Awesome. This will be perfect then, haha. Thanks!"
iOSProgramming,3ca06k,KTheRedditor,1 point,Mon Jul 6 16:44:24 2015 UTC,"But, at this point, are you forcing the user to do more than using @property?  (I don't doubt that you're offering more functionality, but for how much work on the user?)"
iOSProgramming,3c7l1l,timanglade,1 point,Sun Jul 5 17:14:53 2015 UTC,I've been thinking about doing a similar thing recently for an image processing server. Seems great!
iOSProgramming,3c7l1l,jdeath,-2,Sun Jul 5 18:42:44 2015 UTC,So to run the script you need to install a >1 GB package (Xcode) and managing versions is inconvenient or impossible? Seems like a poor choice.
iOSProgramming,3c7l1l,Space_Butts,-7,Sun Jul 5 20:49:37 2015 UTC,"Wow, she went to UPenn. Typical."
iOSProgramming,3c9a76,chowlb,2,Mon Jul 6 02:22:35 2015 UTC,"I don't know of any ""out of the box"" solution but I've implemented a messaging system for an iOS app like this before. (I wrote the server side in PHP.)  The way I did it was every user had an ""inbox"" list and a ""sent"" list.  Whenever a user ""sent"" a message to someone, a reference to the message was written to the sending user's ""sent"" list, and the receiving user's ""inbox"" list.  I was only writing ""references"" (location on how to find the message file), and the message file was stored separately, and wouldn't be deleted even if the sender and all recipients deleted their references to the message.  Replies would create new message files (and new references), and forwards could be implemented as copies of the original reference or themselves ""replies"", depending on if there was any additional data attached.  Anyway, this may be more work than you might want to do, but that's the basics of how I did it: global list of messages on the server and every user had two lists of references pointing to those messages."
iOSProgramming,3c9a76,tjgrant,1 point,Mon Jul 6 15:29:38 2015 UTC,"I think you kind of nailed it. A BOOL column ""isHidden"" or something. Your query would then include anything !isHidden"
iOSProgramming,3c6ybl,davey_b,4,Sun Jul 5 13:03:42 2015 UTC,"Same. My coolest side projects have all been shit shows. Sometimes, I don't even bother to indent my code or give meaningful names to variables. It's just a flurry of typing to get it working. Everything publicly exposed, 1000 line functions, and code that is copy and pasted.   And I don't apologize for it. It's my style of writing. It's a stream of consciousness, where I throw everything down on paper. When the code is so messy it affects my inertia, that's when it's time to revisit, edit, and clean up. By that point, I've usually tested a lot of different ideas. Large swaths of feature tests are littered throughout the code base. But now I know what's required to make them work and more importantly, work together. After the refactoring process, I've deleted 1000s of lines of code. The design is succinct.  Then I start rolling around in the mud again..."
iOSProgramming,3c6ybl,aoakenfo,3,Sun Jul 5 17:47:07 2015 UTC,"Write all the shitty code you like for version 1, but for the love of god tidy it up later. Maintaining clean code, post v1, is a much easier and a more enjoyable experience."
iOSProgramming,3c6ybl,ProgrammingThomas,2,Sun Jul 5 19:30:31 2015 UTC,I always start with shitty code when I need to figure new stuff out but when I get it working I just turn it into something less ugly before I build a whole app around it. Flawed logic tends to pollute into all other parts of an app.  But what you do with your own little apps is of no concern to me really. Until I need to maintain it. Then things change. If you ever find a brick in your living room wrapped in a print some shitty code you wrote for a project a while ago. That could be me.
iOSProgramming,3c6ybl,lucasvandongen,1 point,Sun Jul 5 23:05:21 2015 UTC,"Thing is,  writing shitty code during job interviews can make or break you getting that job."
iOSProgramming,3c6ybl,QuestionsEverythang,1 point,Mon Jul 6 00:40:07 2015 UTC,"The thing is even if you try to write as cleanly as possible, the constantly changing project requirements would sooner or later force you to write shitty code. I think everyone has encountered that case when you got initial specs, carefully planned all the architecture, and a few weeks after a new feature appears that is impossible to integrate without dirty hacks."
iOSProgramming,3c6ybl,apolotary,1 point,Mon Jul 6 01:40:14 2015 UTC,"The author is talking about ""technical debt"" To be a good developer you should be aware of when you are accruing tech debt, and when it's ok. For a small simple application tech debt is usually not a problem. If that same simple app becomes wildly popular and requires more features and/or has a longer maintenance lifecycle, then it may be time to pay down your technical debt and clean up the code. For larger apps with many developers tech debt can lead to a lot of problems during all stages of development."
iOSProgramming,3c9b46,starjie,2,Mon Jul 6 02:31:25 2015 UTC,"You should be able to explicitly set the dimensions of the UITextField in the size options. Then, even when the field is empty, it will have an intrinsic size."
iOSProgramming,3c9b46,ArvoHeikki,1 point,Mon Jul 6 03:11:55 2015 UTC,Are you creating the field programmatically or in Interface Builder? Are you using auto layout?
iOSProgramming,3c9b46,neksus,1 point,Mon Jul 6 03:11:00 2015 UTC,I'm using auto-layout
iOSProgramming,3c9b46,neksus,1 point,Mon Jul 6 03:16:28 2015 UTC,Are you trying to modify the width of the frame? With auto layout enabled you'll have to change either the constant width or the left/right anchors.
iOSProgramming,3c9b46,neksus,1 point,Mon Jul 6 03:47:23 2015 UTC,Yeah the frame width. I've been clicking and dragging the ends but auto layout wants to move it back.
iOSProgramming,3c9b46,dcramps,2,Mon Jul 6 04:13:38 2015 UTC,After you adjust the frame you need to update the constraints to match.
iOSProgramming,3c9b46,dannymannyisuncanny,2,Mon Jul 6 13:39:48 2015 UTC,"Change the leading/trailing/width constraint constant and have IB update the frame for you. When you change the frame yourself, autolayout is going to return it to whatever size it resolves to, so you need to change the constraints."
iOSProgramming,3c8tph,burgeoning_philosoph,1 point,Sun Jul 5 23:50:41 2015 UTC,I think a lot of people would find this useful but I doubt anyone has built such a thing yet. But fairly likely that someone is in the process of creating it.
iOSProgramming,3ca3it,th3phantom,1 point,Mon Jul 6 07:54:07 2015 UTC,"There's a private API in the CoreTelephony framework. But this will only get the number from the settings area, not the one burned into the SIM itself.  NSString* CTSettingCopyMyPhoneNumber();   As of iOS 7, you will also need to sign your app with the following entitlement to be able to access this API at all.  com.apple.coretelephony.Identity.get"
iOSProgramming,3ca3it,MrSloppyPants,1 point,Mon Jul 6 18:21:30 2015 UTC,how can i sign my app with entitlement?
iOSProgramming,3c6lyx,ThePantsThief,1 point,Sun Jul 5 09:27:35 2015 UTC,"Feedback, API design suggestions, etc, all welcome and encouraged!"
iOSProgramming,3c6lyx,paulryanclark,1 point,Sun Jul 5 09:28:33 2015 UTC,The following would be helpful: * Cocoapods integration * Licensing details
iOSProgramming,3c6zfj,awong05,3,Sun Jul 5 13:19:59 2015 UTC,RayWenderlich.com ... the iOS Apprentice books in particular.
iOSProgramming,3c6zfj,ArvoHeikki,2,Sun Jul 5 14:02:05 2015 UTC,"I bought three of these (Swift, iOS Apprentice, and Games) to read on my 9 hour flight tomorrow.  They're really helpful, highly recommended.  :)"
iOSProgramming,3c6zfj,wundaii,1 point,Sun Jul 5 22:24:22 2015 UTC,"Yep, they are totally excellent, and the PDFs are always updated for new changes to iOS and Swift. I think the only ones they don't update anymore are the iOS6 & 7 books."
iOSProgramming,3c6zfj,ArvoHeikki,1 point,Sun Jul 5 23:43:16 2015 UTC,"Yeah, I was happy to see they had updated it for Swift 1.2.  Now I'm just waiting for them to include 2.0."
iOSProgramming,3c6zfj,wundaii,1 point,Mon Jul 6 21:05:30 2015 UTC,"I'm pretty sure they won't be releasing their 2.0 updates until Xcode 7 is officially out of beta, mostly because it breaks the NDA to post images of the interface before it's out. But they work on their updates during beta periods and typically release them really quickly once the NDA is lifted."
iOSProgramming,3c6zfj,ArvoHeikki,1 point,Mon Jul 6 22:23:25 2015 UTC,"Oh awesome, good to know :)"
iOSProgramming,3c5474,dreaminginbinary,8,Sat Jul 4 21:46:13 2015 UTC,"While I'm all about Swift and how awsome it is, glad to see tha they're also modernizing obj-c."
iOSProgramming,3c5474,reckoner23,4,Sat Jul 4 22:07:27 2015 UTC,"My thoughts as well. Especially when it comes to my day job, it's almost all Objective-C. It's nice to sprinkle these kind of enhancements in"
iOSProgramming,3c5474,nazihatinchimp,1 point,Sat Jul 4 22:27:36 2015 UTC,"Am I nuts, or did I read an article awhile back that said they were going to start phasing out Objective C?"
iOSProgramming,3c5474,FR_STARMER,2,Sun Jul 5 05:15:11 2015 UTC,Probably are in the next five years. Objective C is verbose and slow compared to Swift. Not a big deal though because you can still mix objc with swift.
iOSProgramming,3c5474,lucasvandongen,2,Sun Jul 5 12:40:34 2015 UTC,"It might be verbose but the very slow part is not completely fair. C is completely part of the Objective-C spec and doing algorithms using Objective-C should be close to or equal to C in terms speed if you simply use the fast part of the Objective-C spec. ""Pure"" Objective-C without using any C code is more something you should regard as a higher level ""glue"" language that makes bringing logic into your application easier.  Most benchmarks that compare programming languages use NSArray and other typical Cocoa classes that are very feature rich and easy to use but not as fast as C code. Swift would be almost just as slow using those. In fact, in the average app >90% of all CPU taxation happens in code and compiled frameworks that you didn't write yourself."
iOSProgramming,3c5474,FR_STARMER,1 point,Sun Jul 5 23:21:53 2015 UTC,I said slow compared to Swift. See this for more information on what I am talking about.
iOSProgramming,3c5474,lucasvandongen,1 point,Mon Jul 6 13:22:40 2015 UTC,"You can't pretend C or C++ don't exist when you use Objective-C or Objective-C++, like this graph does. It's not like you're using some kind of specialistic Python install that is optimised for a certain task, it's right there at the core of the language, you can't even take it away without breaking the whole language. If Swift performs just as good as C in a lot of algorithms it does a hell of a job."
iOSProgramming,3c5474,FR_STARMER,1 point,Mon Jul 6 22:18:00 2015 UTC,I'm not pretending like Objective-C isn't a superset of C. It seems as if the speed comes from something at the compiler level. Not being hostile man.
iOSProgramming,3c5474,lucasvandongen,1 point,Tue Jul 7 02:20:44 2015 UTC,"The ""slowness compared to Swift"" comes from the fact that the benchmarks are flawed. Only if you deliberately try to sabotage Objective-C performance by not using the fastest options available to you Objective-C is slower, otherwise for most algorithm stuff Objective-C is faster than Swift because unless you're looking for very special cases nothing beats C in performance.  Compare this code to Swift: http://www.cypherspace.org/rsa/rc4.c  Swift will never be faster. Yet you can use it without changing a line in Objective-C and it will be just as fast.  The speed gains from using Swift are at the point where you're not doing pure calculations like RC4 but you're tying all kinds of Objective-C or Swift classes / structs together. Swift can predict much better what it will encounter at runtime because it's not (as) dynamic as Objective-C so at compile time it can optimise better what it can and can't expect. Same goes for C# and Java, but they have a slight penalty for being JIT compiled.  The advantage of Swift is that you can keep using higher level code to get performance that's almost as good and sometimes even the same, in Objective-C you need to discard most of the NS* stuff to be faster and you're basically doing pure C or C++ at best."
iOSProgramming,3c5474,gormster,2,Tue Jul 7 19:24:26 2015 UTC,"It would just be NSEnd<Post *>*, the ""of"" is implied in a generic."
iOSProgramming,3c5474,tonygoold,2,Sun Jul 5 07:50:25 2015 UTC,"Crap...  What are you talking about, I didn't type it that way? :-)"
iOSProgramming,3c5474,askoruli,2,Sun Jul 5 12:55:56 2015 UTC,"@property (strong, nonatomic, nonnull) NSArray *someViews;   Not only does this help Objective-C, but now this property won’t be pumped full of optionals over in Swift as well.   This says the property won't be nil, not that the array won't contain nil (which it can't anyway)."
iOSProgramming,3c5474,ThePantsThief,3,Sun Jul 5 16:02:46 2015 UTC,Glad objective-c finally has generics but it's sad that the main reason the language is getting an update is because of what is useful to swfit.
iOSProgramming,3c5474,ThePantsThief,1 point,Sat Jul 4 23:32:04 2015 UTC,"I'm just glad generics aren't mandatory like they are in Swift. I'll definitely add these new features to my public resources, but for my private code 90% of the time it'll just be a hindrance."
iOSProgramming,3c7w9u,Yanmega,3,Sun Jul 5 18:55:47 2015 UTC,"You need OS X. Get a refurbished mac mini, those go for pretty cheap."
iOSProgramming,3c7w9u,StunnerAlpha,1 point,Sun Jul 5 19:36:11 2015 UTC,OK- is there any way whatsoever to program on PC? Just covering bases. Thanks!
iOSProgramming,3c7w9u,starjie,1 point,Sun Jul 5 19:46:49 2015 UTC,Apple only lets you develop iOS apps on a Mac.
iOSProgramming,3c7w9u,StunnerAlpha,1 point,Sun Jul 5 20:51:05 2015 UTC,"You can hackintosh, but that is more work than is worth, and is highly discouraged as you spend a considerable amount of time maintaining it, which means less time to code. Not really worth it unless your time is cheap and/or you enjoy doing that sort of stuff."
iOSProgramming,3c7w9u,_onAndOffAgain,1 point,Sun Jul 5 21:06:35 2015 UTC,alright alright! thank you so much.
iOSProgramming,3c67e3,nazihatinchimp,9,Sun Jul 5 05:24:59 2015 UTC,Some example code would help ;)
iOSProgramming,3c67e3,optik88,1 point,Sun Jul 5 07:52:39 2015 UTC,"Yes, we need some code to help you."
iOSProgramming,3c2ncr,based2,3,Sat Jul 4 04:45:27 2015 UTC,It's kind of peculiar UILayoutGuides aren't in Interface Builder yet. The stacks are already supported. I really hope they'll add it before the GM of Xcode 7
iOSProgramming,3c2ncr,lucasvandongen,1 point,Sat Jul 4 15:42:51 2015 UTC,"Excellent, thank you"
iOSProgramming,3c3hzg,ValarMorghulis6626,7,Sat Jul 4 12:11:48 2015 UTC,"If you only need to show two pictures, you don't actually need a game engine. Simple UIButtons/UIControls will do. Let this ""round"" view controller be initialized with values, score, etc and reuse the same design. Then you can control the levels from the overall game brain class."
iOSProgramming,3c3hzg,dmee3,1 point,Sat Jul 4 13:51:28 2015 UTC,"What do you mean by the ""game brain class""?"
iOSProgramming,3c3hzg,AdviceAdam,2,Sat Jul 4 14:15:56 2015 UTC,"I'm going to piggyback off of what dmee3 said and really recommend that this is the route you go. When I was starting out, I would often try to make things that were too complicated for my skill level. It's great that you have a game you want to make and it's even better that it's definitely something that you can accomplish! I don't think you should worry about SpriteKit or anything like that yet, you'll get bogged down & frustrated and in the end, you won't want to finish your game because you can't figure it out.  The game you're describing can be quite simple to make. All you need are the two buttons, some sort of way to randomly assign which one is the llama and which one is the duck, a way to keep track of how many the user has selected correctly, and a label to show which one the user should select."
iOSProgramming,3c3hzg,QuantumHoneybees,1 point,Sat Jul 4 16:53:49 2015 UTC,"If you don't know what a class is, I suggest going through bit fountain.io's course on iOS programming with swift I'm still not done with it but it's really helpful and can teach you all what you need to make this game. Unfortunately, to add more details and cool graphics, you'll need more than what that course can offer, which is why I recommend, like many said here, to go through sprite kit after you're done :)"
iOSProgramming,3c3hzg,dmee3,1 point,Sat Jul 4 21:00:09 2015 UTC,"Maybe a singleton (class, of which there exists only one instance of), holding the current state of the game, keeping track of progress, score and other values and ultimately controlling how levels are changed (with respect to navigation controller).  Its only one way to design it though. For starters, you could design just a level or two and hold those values in NSUserDefaults, where they will be remembered even after restart."
iOSProgramming,3c3hzg,SporadicGenius,2,Sat Jul 4 14:19:22 2015 UTC,"You'll want to take a look at the iOS Apprentice (first tutorial, which is free) from Ray Wenderlich. It teaches you to build a simple game using basic UI elements and most importantly, no game engine.  http://www.raywenderlich.com/  You can sign up for the newsletter on the right-hand side to get that tutorial (200-ish pages) and get started.  It's worth noting that I would highly suggest learning SpriteKit after you've had your fun developing this simple game of yours without it. I'm only a few months into my learning but I've had a blast with SpriteKit. Maybe you'll be inspired to return to your picture-based game and make a V2 with a bunch of neat features and animations.  Good luck!"
iOSProgramming,3c3hzg,SporadicGenius,1 point,Sun Jul 5 11:36:56 2015 UTC,AlienBlue brain farted a duplicate post
iOSProgramming,3c3hzg,SporadicGenius,1 point,Sun Jul 5 11:39:02 2015 UTC,AlienBlue brain farted a duplicate post
iOSProgramming,3c3hzg,megablast,1 point,Sun Jul 5 11:39:02 2015 UTC,"For something like this, I wouldn't even dream of using anything less that Unity 3d, with an Oracle back end database running on a real mainframe, and a full .Net webstack to communicate with it."
iOSProgramming,3c3hzg,unpopularOpinions776,1 point,Mon Jul 6 04:12:08 2015 UTC,"Thanks, will do!"
iOSProgramming,3c4y02,LaserWolfTurbo72,3,Sat Jul 4 20:49:29 2015 UTC,"Does the phone with grey buttons have ""Darken Colors"" on in accessibility?"
iOSProgramming,3c4y02,mistermagicman,1 point,Sat Jul 4 21:42:19 2015 UTC,Grayscale? I don't see a Darken Colors.
iOSProgramming,3c4y02,ThePantsThief,2,Sat Jul 4 22:52:05 2015 UTC,"Accessibility > increase contrast > darken colors. That sounds like the issue. If it's not on, file a radar."
iOSProgramming,3c4y02,dcramps,1 point,Sat Jul 4 23:47:06 2015 UTC,That did it! Thanks!
iOSProgramming,3c4y02,tjgrant,1 point,Sun Jul 5 01:54:28 2015 UTC,Are they all running the same OS?
iOSProgramming,3c4vcf,ThePantsThief,1 point,Sat Jul 4 20:24:49 2015 UTC,"Edit: just saw the allObjects method in the docs, is that what you were looking for?"
iOSProgramming,3c4vcf,shitidiotturtle,1 point,Sat Jul 4 20:52:27 2015 UTC,"No, like, a C array. Not an NSArray :P Something I can use with C APIs which take an array of pointers."
iOSProgramming,3c4vcf,shitidiotturtle,2,Sat Jul 4 23:10:41 2015 UTC,right. it's possible that there is no single c array to return. the data structure might be something more complex to help with mutability
iOSProgramming,3c4vcf,lyinsteve,1 point,Sat Jul 4 23:21:18 2015 UTC,"Yeah, NSArray changes data structures when it gets on the order of 100k objects I think. I was hoping NSPointerArray would not do that so it could expose the underlying array. :/ I guess I'll look for a cocoa pod or something."
iOSProgramming,3c464l,revblaze,2,Sat Jul 4 16:34:43 2015 UTC,You can launch it from terminal  /Applications/Xcode.app/Contents/MacOS/Xcode </dev/null &>/dev/null &
iOSProgramming,3c464l,sneeden,1 point,Sat Jul 4 19:15:38 2015 UTC,"Not working for me. ""Error -10064"""
iOSProgramming,3c464l,johnwickham,1 point,Sat Jul 4 17:51:21 2015 UTC,Thanks for this!
iOSProgramming,3c2gpd,sonnytron,9,Sat Jul 4 03:35:37 2015 UTC,"I knew it was ""clicking"" for me when I started dreaming about Cocoa Touch.  I literally had a dream that featured a girl in a one-piece bathing suit made out of a UITableView. It was scrollable and everything."
iOSProgramming,3c2gpd,ratbastid,2,Sat Jul 4 11:11:46 2015 UTC,How far down did you scroll ( ͡° ͜ʖ ͡°)
iOSProgramming,3c2gpd,ThePantsThief,1 point,Sun Jul 5 05:08:59 2015 UTC,"You know what, this is actually still really vivid for me, despite being like five years ago.  It was a UITableView that didn't have any content. You know what you get before the tableView even calls numberOfSectionsInTableView. Just a bunch of empty cells that do the rubber-band effect in both directions. That was what the printing on the bathing suit was like. The suit itself didn't scroll (the suit itself was made of UIWindow, I think), but it had the UITableView as a subview."
iOSProgramming,3c2gpd,ratbastid,1 point,Sun Jul 5 12:18:48 2015 UTC,"Interesting. Do you ever have dreams about actual code? Not just components like above, but like… coding in your dreams? Solving problems (that probably don't exist)? Sometimes when I code hard for a few days in a row I have dreams like this and wake up almost as exhausted as when I went to bed"
iOSProgramming,3c2gpd,ThePantsThief,1 point,Sun Jul 5 18:53:13 2015 UTC,"I have. Much more often, I'll realize the solution to some problem right after checking out for the day. More than once I've been halfway to my car, smacked my head, and turned around and went back in to at least leave myself a note for the morning."
iOSProgramming,3c2gpd,ratbastid,3,Sun Jul 5 23:21:10 2015 UTC,"First off, congratulations! Welcome to the pack. :)  As someone who hires iOS devs, I'm glad you quickly discovered item #1 and worked to correct it. The number of ""I learned Swift this year"" job applicants with no Objective-C experience is astounding. I don't know of a single (legitimate) development group who will hire someone without extensive Objective-C experience. People don't like to admit the truth: The iOS world still runs on Objective-C. Swift is the future, not the now.  As for #2, great list. I'd also add some online resources that I've found to be awesome for people trying to learn iOS development. I typically point interns and other people learning to these:   Ray Weinerlich NSHipster YouTube Ask questions / join discussions here on /r/iOSProgramming   Again, welcome to the club!"
iOSProgramming,3c2gpd,brendan09,1 point,Sat Jul 4 03:48:00 2015 UTC,"Hi, I recently discovered that I'm super passionate about iOS programming and would love to have a career working with iOS applications. I just finished the Code Coalition course that OP mentioned and now I'm planning on making some apps to put on my portfolio.   If I apply for a junior dev position, what are some objective-c concepts that I should be really familiar with in order to land the job?"
iOSProgramming,3c2gpd,yoethan,1 point,Sat Jul 4 08:28:42 2015 UTC,The questions on this page are very good. If you know (and understand) the questions to all of them then you'll be doing well.  http://www.raywenderlich.com/53962/ios-interview-questions
iOSProgramming,3c2gpd,brendan09,1 point,Sat Jul 4 13:26:45 2015 UTC,thank you for the link!
iOSProgramming,3c2gpd,yoethan,3,Sat Jul 4 16:17:35 2015 UTC,"Also, read websites like NSHipster, Objc.io, the Hamster Emporium, and Mike Ash's blog, and read people's code (Mike Ash has some interesting gists). These are my favorite online-resources. Keep in mind they aren't tutorials. They're just there to expand your knowledge of Objective-C and Cocoa. :) All very interesting"
iOSProgramming,3c43v8,hagrids_a_pineapple,3,Sat Jul 4 16:13:39 2015 UTC,"You either download Xcode 7, or revert to Yosemite"
iOSProgramming,3c43v8,Power781,1 point,Sat Jul 4 16:14:26 2015 UTC,"Okay, guess I'll go get 7. All my projects will work just as before, right?"
iOSProgramming,3c43v8,Power781,3,Sat Jul 4 16:16:15 2015 UTC,"All your project will use the iOS 9 SDK then, and will not be able to be published to the AppStore until Late september. In term of code, it will probably work except if you use some of the rare API that changed. Also if you have swift apps, some might need some rewrite on some error handling parts because Xcode 7 use only swift 2.0"
iOSProgramming,3c43v8,Power781,-1,Sat Jul 4 16:32:56 2015 UTC,"Oh, that is awful. I seriously will have to re-write a lot of the code and cannot even publish for 3 months?"
iOSProgramming,3c43v8,Power781,7,Sat Jul 4 16:38:18 2015 UTC,"Yes, it's why the OS X betas, are only for beta testing, not for production purposes."
iOSProgramming,3c43v8,johnwickham,-1,Sat Jul 4 16:47:01 2015 UTC,"Yep, lesson learned. If you have a second, can you point me to any information on how to revert to Yosemite?"
iOSProgramming,3c43v8,mistermagicman,1 point,Sat Jul 4 16:53:47 2015 UTC,"Reformat, or new partition."
iOSProgramming,3c43v8,CleverError,1 point,Sat Jul 4 17:05:09 2015 UTC,"Back up, boot into recovery (or from an external disk), use disk utility to restore and install Yosemite"
iOSProgramming,3c43v8,fubarx,1 point,Sat Jul 4 17:24:27 2015 UTC,You do not need to downgrade or switch to Xcode 7. You can launch Xcode 6.4 from the command line in Capitan. I believe /Applications/Xcode.app/Contens/MacOS/Xcode should do it. If you google around I'm sure you'll find multiple tutorials.
iOSProgramming,3c43v8,revblaze,1 point,Sun Jul 5 03:42:59 2015 UTC,Already discussed here https://www.reddit.com/r/iOSProgramming/comments/3awe5u/warning_xcode_6_el_capitan_beta_2/
iOSProgramming,3c43v8,fubarx,1 point,Sat Jul 4 16:23:46 2015 UTC,"I learned this lesson the hard way a few MacOS releases ago. Now I install all MacOS betas on an external SSD and boot into it to try the new stuff. Same with iOS. It doesn't go onto my day-to-day phone but on a test device.   Unfortunately, I didn't have a spare watch so ended up updating the one to watchOS 2. Now it only talks to an iOS 9 device which is not my main phone. So for the next few months I'm walking around with a nice unconnected not-so-smart watch on my wrist.  Any way, back to OP's issue. Suggest downgrading to Yosemite on main machine and going with an external install of El Cap. New xcode also makes breaking changes to all Swift code so it can not be backward built on a previous version of xcode."
iOSProgramming,3c43v8,fubarx,1 point,Sat Jul 4 17:00:21 2015 UTC,How can I go back to Yosemite? I do not have Time Machine set up. Would downloading from the App Store work?
iOSProgramming,3c43v8,sneeden,1 point,Sat Jul 4 17:03:03 2015 UTC,https://www.reddit.com/r/iOSProgramming/comments/3c464l/how_to_launch_xcode_6_on_el_capitan/?ref=share&ref_source=link
iOSProgramming,3c43v8,dcpc10,0,Sat Jul 4 17:16:10 2015 UTC,"Ruh roh. No Time Machine!?!  There's your first problem. Once everythings back to stable you will want to invest $80 in a large external hard-disk so you can have backups. And to be safe, get yourself a copy of SuperDuper or Chronosync and make fully-bootable backups to a disk partition or a secondary drive (along with scheduled updates). And to be extra careful (which everyone should be) you should also have an offsite one like Carbonite, Mozy, or Crashplan.  And once you've done all this, assume that the $80 drive will fail in the next few years and will take everything you have down with it. Then plan accordingly.  I've been bitten enough times so I do all of them. Every night.  For example, if you had a bootable SuperDuper backup from before you did the ElCap update you would be back where you were in an hour.  The least destructive way to downgrade is to download the Yosemite installer from the appstore, but not run it. You may have to do this from a different machine. Then find the file and copy it to a USB external drive and make it bootable (using a third-party tool like DiskMaker.' Then you boot off that drive by holding the Option key right after restart to bring up the boot drive selector. Then you start off that drive and hopefully now it will let you re-install it over ElCap without overwriting your user data.  It's possible you may have to manually reinstall some apps, if any modified system files (which they should not have but Old Skool apps still do).  If this doesn't work, then you'll have to erase your main drive and reinstall the OS from scratch off that boot volume, then manually migrate your files and apps back onto it. Yeah it sucks, but it's actually a bit liberating since you'll likely install only the apps you use a lot and will free up some space.  In all cases, make sure you have at least one full bootable backup stored away before you try any of this, otherwise you might find yourself having to erase your disk with no backups of your userfiles.  And for crying outloud, get some backups going. They're not an annoyance. They're there to protect us from our own stupidity. The reason I'm extra paranoid is because I've been extra stupid in the past. </rant>  Good luck!"
iOSProgramming,3c3ynf,djnoxious,2,Sat Jul 4 15:24:24 2015 UTC,You can override prepareForReuse on cell subclasses to reset the view to a default state.
iOSProgramming,3c3ynf,dcramps,3,Sat Jul 4 18:48:18 2015 UTC,"Yes, this is because the table view reuses cells. Add an else statement to catch all cells that are not row 15."
iOSProgramming,3c3ynf,Aofwa,1 point,Sat Jul 4 15:44:34 2015 UTC,"That doesn't seem like the right way of doing it? What if i had set the background colour to be white in the prototype / nib cell properties, that would mean having to set the colour it also in the cellForRowAtIndexPath."
iOSProgramming,3c3ynf,Aofwa,2,Sat Jul 4 15:51:49 2015 UTC,I don't really understand what you mean by that. Setting the color for the prototype will change every cell's background. When you are trying to customize a specific cell index you have to also define every other index or else when the cell is reused it will not change its color.
iOSProgramming,3c3ynf,Aofwa,2,Sat Jul 4 16:23:16 2015 UTC,"Ok, thanks Aofwa. I think it's slowly making more sense to me."
iOSProgramming,3c3ynf,mistermagicman,1 point,Sat Jul 4 16:35:58 2015 UTC,"no problem, glad to help"
iOSProgramming,3c3ynf,dcramps,1 point,Sat Jul 4 16:38:20 2015 UTC,"Yep - one thing to understand is that cells are reused in tableviews. This allows them to be very fast and less memory intensive, but ultimately means you have to setup a cell for every possible state. If there's a ""default"" state, I usually set that up in the tableviewcell class method ""prepareForReuse"" because that's what it's for. It gets called before any cell is reused. That way I'm not courting my View Controller with code that really belongs to the cell."
iOSProgramming,3c3ynf,mistermagicman,2,Sun Jul 5 03:46:28 2015 UTC,"It's an instance method, not a class method."
iOSProgramming,3c3s7q,caffeinatedhacker,3,Sat Jul 4 14:19:20 2015 UTC,Just make something. It will force you to learn the new APIs. Doing it in swift will also help a ton.
iOSProgramming,3c3s7q,tangoshukudai,1 point,Sat Jul 4 15:21:40 2015 UTC,"A list of API changes for each version of iOS is at:  https://developer.apple.com/library/ios/releasenotes/General/WhatsNewIniOS/Introduction/Introduction.html  You can also do a search through the header files for NS_AVAILABLE. There have been a lot of changes: Swift, Autolayout, storyboards, 64-bit support, size classes, UIViewController's view size in relation to the navigation bar, NSURLSession as a replacement to NSURLConnection, etc, etc."
iOSProgramming,3c4f0o,xThomas,4,Sat Jul 4 17:56:22 2015 UTC,"An alternative to Xcode for Objective-C is AppCode, although I'm not sure that it is any simpler and/or performant than Xcode. An alternative would be to use a text editor and compile via clang in Terminal, but this wouldn't be an easier way to learn as you lose auto competition (and add effort to the compilation process, so it becomes more complex).  Sticking with Xcode is your best bet for now; virtually all Objective-C tutorials will also use it."
iOSProgramming,3c4f0o,ProgrammingThomas,1 point,Sat Jul 4 18:00:15 2015 UTC,"looked at appcode, skipped it for now but may use it in future. clang is a bit foreign to me as i don't use terminal  I just found something called CodeRunner. Seems ok and suitable to my purposes. it compiles and loads fast enough for small simple stuff  Edit: coderunner is a trial version, i get a week. I can practice with this for now."
iOSProgramming,3c4f0o,unpopularOpinions776,5,Sat Jul 4 18:55:19 2015 UTC,You seem kinda picky and unappreciative for someone who is asking for help.
iOSProgramming,3c4f0o,BlasphemousJoshua,2,Sat Jul 4 19:36:05 2015 UTC,"Most people who say they want to learn Objective C are actually wanting to learn Apple's ""Cocoa"" frameworks. That's far easier to do with Xcode than without regardless of the speed of your Mac.  If you want to use another library or framework then use whatever IDE and language that maker recommends.  If you don't want to use Xcode, and have no need of Apple's Cocoa frameworks, you're probably better off learning pure C, C++, or Java as they have a wider variety of IDEs and frameworks/libraries you can use."
iOSProgramming,3c4f0o,ssrobbi,1 point,Sat Jul 4 21:05:47 2015 UTC,Ill look into that stuff thanks
iOSProgramming,3c4f0o,ssrobbi,2,Sun Jul 5 08:10:04 2015 UTC,You could write it in vim and compile via command line if you wanted I suppose.   Edit: you don't use terminal so probably a bad option
iOSProgramming,3c4f0o,RDSWES,1 point,Sat Jul 4 22:01:12 2015 UTC,:(
iOSProgramming,3c2v0p,horton45,3,Sat Jul 4 06:15:38 2015 UTC,XCode 7 beta doesn't support developing on iOS 8.4 devices - it's known issue which is listed in release notes. But there is a way! Use the 'hack': http://stackoverflow.com/a/31013217
iOSProgramming,3c2v0p,Sebaall,1 point,Sat Jul 4 06:52:30 2015 UTC,Oh see I knew it was just an oversight on my part. I was able to for beta 1 so I just assumed it would be the same. Thank you!
iOSProgramming,3c2v0p,johnwickham,1 point,Sat Jul 4 14:55:44 2015 UTC,"That's what I did, works great!"
iOSProgramming,3c079e,okgabr,2,Fri Jul 3 16:07:00 2015 UTC,"I understand the important of feedback within an application, but how can I provide it with being obtrusive or having the feedback tool be tough to find?"
iOSProgramming,3c079e,WhoYouCallinTurkey,2,Fri Jul 3 19:03:08 2015 UTC,"In my app I have a Settings section that has links to the each developers Twitter account, the App's Facebook and Twitter account, and a button that allows the user to send an email to the app's email!   So far with around 500 users I've only received 1 email with suggestions and feedback. And a few tweets here and there saying what they liked.   I'd be happy to share screenshots and code of my implementation!"
iOSProgramming,3c079e,rainerdeal,1 point,Fri Jul 3 19:57:42 2015 UTC,That would be awesome!
iOSProgramming,3c079e,Xeppen,1 point,Fri Jul 3 22:45:24 2015 UTC,Here is a small album of screenshots of my implementation.
iOSProgramming,3c079e,rainerdeal,1 point,Sat Jul 4 16:22:38 2015 UTC,Splendid! Thank you
iOSProgramming,3c079e,Xeppen,1 point,Sat Jul 4 20:16:34 2015 UTC,Hamburger menu =/
iOSProgramming,3c079e,hampa9,1 point,Sun Jul 5 12:27:09 2015 UTC,"That's a really cool idea but the problem is that it's not 100% In-App. You have to force your users outside your app to tweet or send an email, right? I bet many of the users that leave your app to go somewhere else to send you their feedback don't come back instantly after doing it.  What I meant by In-App Feedback is to do the whole process natively from within your app with minimum interruption to the user's experience."
iOSProgramming,3c079e,rainerdeal,1 point,Sat Jul 4 12:53:18 2015 UTC,"For the Twitter and Facebook thing, yes they get taken out of the app. There are ways to get that to work differently, but I had a lot of trouble getting it to work.   The email actually does work from inside the app, though."
iOSProgramming,3c079e,anarchyx34,3,Sat Jul 4 15:21:14 2015 UTC,Except that nobody actually bothers to send the feedback.
iOSProgramming,3c079e,jasonlotito,2,Fri Jul 3 22:50:01 2015 UTC,"Not true.  I've gotten very good feedback from people using my in app feedback tool.  I don't get lot, but it's a simple app with a small username, but the feedback I have gotten has been good."
iOSProgramming,3c079e,Syrinathos,2,Sat Jul 4 02:15:52 2015 UTC,"Actually we, at Instabug, ran a case study with some of our users that showed a 750% increase in user feedback when having In-App feedback compared to the regular communication channels (email or twitter). If you make the feedback process smooth and within your app, users will appreciate that you actually care enough to hear them and will be much more likely to send you their feedback."
iOSProgramming,3c079e,Yhelmy,2,Sat Jul 4 12:36:47 2015 UTC,"True statement.   Like one of the other posts described, I have a ""Feedback and Support"" area right in the settings tab that lets the user send right from within the app without the need for any mail being sent.   Not a single bite in over three months of the app being live."
iOSProgramming,3c2nqj,angry_african,7,Sat Jul 4 04:50:02 2015 UTC,"I think you should learn both, but learn obj-c first. It has much better (consistent) examples + documentation.  Because Swift is new, and undergoes so many changes every few weeks, it's a little annoying when you look at past examples which don't really work anymore. Also Swift 2 is starting, so you should wait for that to settle down.  Either way, you should focus on learning the basic cocoa frameworks & mastering the UIKit"
iOSProgramming,3c2nqj,l0l141,1 point,Sat Jul 4 07:39:18 2015 UTC,"As everyone says, learn both, but focus on Objective-C first.   If you want to get a job, you need Objective-C. If you want to prepare for the future, you need Swift."
iOSProgramming,3c2nqj,sobri909,1 point,Sat Jul 4 11:03:28 2015 UTC,both
iOSProgramming,3c2nqj,MarsSpaceship,1 point,Wed Jul 15 04:26:05 2015 UTC,"You still need both. Working in NYC, everyone who's hiring (including where I work) has a mixed codebase. I would start with Obj-C and mix some Swift in as you go. Learning one after mastering the other is really trivial."
iOSProgramming,3c2nqj,Dachd43,0,Sat Jul 4 05:17:36 2015 UTC,"I would say if you are new to coding and you dont plan om developing for any other platform any time soon, use Swift. If not, use objective c"
iOSProgramming,3c2nqj,raq0915,3,Sat Jul 4 15:21:38 2015 UTC,"I would say ""if you're new to coding and don't plan on seeking gainful employment any time soon"", then yes learn Swift first.  There are a couple gigs out there looking for ""3+ years of swift"" (lol) but those are people who don't know anything about development. If you plan on working on an app for a company or working with others you NEED obj c first."
iOSProgramming,3c2nqj,unpopularOpinions776,0,Sun Jul 5 05:18:49 2015 UTC,"Learn traditional Obj-C first. There's more support for it on the internet, has a longer history, and many more examples in Obj-C for you to look at while learning. Swift is not too hard to pick up after you master Obj-C anyways (same vice versa, but easier to pick up Obj-C first)"
iOSProgramming,3c1qwu,R1v,1 point,Fri Jul 3 23:25:41 2015 UTC,"You likely didn't set up your viewDidLoad() in your viewcontroller properly, or don't have the links between the IBOutlets/IBActions and the label/textfields (assuming you used storyboard).  Can you take a screenshot of your Main.storyboard and your ViewController.swift?"
iOSProgramming,3c1qwu,l0l141,1 point,Fri Jul 3 23:57:55 2015 UTC,Did you mess with the Main Interface setting under Deployment info under the General settings? Should be set to Main if you have a Main storyboard.
iOSProgramming,3c1qwu,boesej,1 point,Sat Jul 4 04:16:36 2015 UTC,Show us the code of the view controller. There is no way we can guess what you did wrong.
iOSProgramming,3bz39k,lsolniczek,2,Fri Jul 3 09:02:06 2015 UTC,"Setting the attributes for a range using match() is actually really, really clever."
iOSProgramming,3bz39k,nrith,1 point,Fri Jul 3 12:08:42 2015 UTC,"Thank you, I think so as well :)"
iOSProgramming,3bz39k,chriswaco,1 point,Mon Jul 6 08:55:17 2015 UTC,"I'm not sure how you would localize strings like that.  Our method was to use embedded codes in the string that the localizers would ignore. Something like:    <bold>String<blue>in<black,italic>chain"
iOSProgramming,3bz39k,aazav,1 point,Fri Jul 3 15:50:10 2015 UTC,library*
iOSProgramming,3bz39k,aazav,1 point,Fri Jul 3 22:20:25 2015 UTC,Is this Swift only or does it also work for Objective-C?
iOSProgramming,3bz39k,brendan09,1 point,Fri Jul 3 22:21:18 2015 UTC,"It is only Swift library, sorry :)"
iOSProgramming,3bz39k,brendan09,1 point,Mon Jul 6 08:35:16 2015 UTC,"You're making an assumption that you won't match multiple substrings.  I wrote a category that added a method like this to NSMutableAttributedString:   [attrString appendString:(NSString*)string withAttributes:(NSDictionary*)attributes]   So using it looked like this:  [attrString appendString:@""String"" withAttributes:@{NSForegroundColorAttribute : [UIColor blackColor}];  [attrString appendString:@""In"" withAttributes:@{NSForegroundColorAttribute : [UIColor lightGrayColor}];  [attrString appendString:@""Chain"" withAttributes:@{NSForegroundColorAttribute : [UIColor darkGrayColor}];   Which is much cleaner, imho. The assumption of only a single string matching your substring, as well as the syntax of this, looks much more complicated to me."
iOSProgramming,3c1ec2,kumarovski,2,Fri Jul 3 21:39:57 2015 UTC,What? You want to download every app launched? What?
iOSProgramming,3c1ec2,hagrids_a_pineapple,2,Fri Jul 3 21:45:29 2015 UTC,I want a list of all the daily new apps. I want to see if I can find any macrotrends.
iOSProgramming,3c1ec2,hagrids_a_pineapple,5,Fri Jul 3 21:59:13 2015 UTC,Oh a list. I swear I thought you were going to try and download every single app that is released...
iOSProgramming,3c1ec2,Alcoholic_Synonymous,2,Fri Jul 3 22:00:42 2015 UTC,I download about 30 apps a day though.
iOSProgramming,3c1ec2,Sohailk,1 point,Fri Jul 3 22:11:06 2015 UTC,AppAnnie might have that info?
iOSProgramming,3c1ec2,Sohailk,1 point,Fri Jul 3 22:09:45 2015 UTC,where do you they get it from?
iOSProgramming,3c0bwi,LaserWolfTurbo72,1 point,Fri Jul 3 16:43:20 2015 UTC,May want to take a look at SimFinger
iOSProgramming,3c0bwi,succeededcoma,1 point,Fri Jul 3 18:51:21 2015 UTC,"I use QuickTime to record my apps, no tap gesture though."
iOSProgramming,3c01uw,sinchdev,-2,Fri Jul 3 15:24:04 2015 UTC,Why isn't this subreddit private yet?
iOSProgramming,3bysza,densmo,4,Fri Jul 3 06:56:37 2015 UTC,"For not having any design experience, I'm really impressed by the overall polished and cohesive look of the game, as well as the tasteful animations. The app is responsive and just feels good to use. Reminds me very much of Threes in that sense."
iOSProgramming,3bysza,ArvoHeikki,1 point,Fri Jul 3 07:34:26 2015 UTC,Thank you.
iOSProgramming,3bysza,Starchand,4,Fri Jul 3 10:40:08 2015 UTC,"While the gameplay isn't overly exciting or unique, your design/UI and attention to detail is better than some seasoned professionals."
iOSProgramming,3bysza,hagrids_a_pineapple,1 point,Fri Jul 3 11:39:23 2015 UTC,"Wow..thanks!  You're probably right about the gameplay. In the beginning I wanted to make a complex turn based strategy game with a simple UI based on basic shapes (mostly circles). I came up with all these amazing ideas until I realized that it was beyond what I was able to do. I got rid of all the pathetic game logic I managed to put together and turned into this. My goal was to simplify and focus so I could make a game that works and looks as good as possible given my limited skills.  Judging from all the amazing feedback here, I think I accomplished my goal but the game didn't turn out as fun as I thought it would be.  For my next game, i'm definitely gonna get into some more game design theory. Do you maybe know some good resources in that field?"
iOSProgramming,3bysza,maaaark,3,Fri Jul 3 17:43:24 2015 UTC,GREAT first app
iOSProgramming,3bysza,wannabe_rebel,1 point,Fri Jul 3 15:29:16 2015 UTC,Thank you
iOSProgramming,3bysza,titanicwasahoax,2,Fri Jul 3 18:05:37 2015 UTC,Cool game just speed up the animations. It's a little slow for my liking
iOSProgramming,3bysza,QuantumHoneybees,3,Fri Jul 3 08:16:05 2015 UTC,Thanks!  Do you mean all animations or just the transitions between scenes?
iOSProgramming,3bysza,CleverError,2,Fri Jul 3 10:28:54 2015 UTC,"Looks great, how long did the learning process take out of curiosity?"
iOSProgramming,3bysza,succeededcoma,2,Fri Jul 3 09:51:06 2015 UTC,I'm at it for about 7 months now.
iOSProgramming,3bysza,succeededcoma,3,Fri Jul 3 10:26:09 2015 UTC,Incorporating the mechanism from the game into the settings screen is one of the best things I've seen in a while. Overall the game reminds me a lot of dots but for a first app this is extremely good.
iOSProgramming,3bysza,norviller,2,Fri Jul 3 07:04:01 2015 UTC,"Thanks a lot.   At first, I was conflicted about whether I should use game mechanism as buttons and switches, because I thought it could confuse users that are used to the standard iOS UI. When I had friends try it for the first time during development, they did not get what they were supposed to do and they just kept tapping on the button. That was one of the reasons why I made the tutorial when you start the app for the first time."
iOSProgramming,3bysza,TouchMint,1 point,Fri Jul 3 07:21:36 2015 UTC,Did you use all of these? I'm currently on bitfountain.io's course and it's taken me 2 weeks. i can't imagine how long it must've taken you to go through all of those!  Great App btw!  Just one tip: I'd love it if you can make it so that you can change the direction of the chAin if you pass by a circle once more :)
iOSProgramming,3byzw7,weeronniesun,2,Fri Jul 3 08:20:08 2015 UTC,Did the provisioning profile of the app was expired ?
iOSProgramming,3byzw7,Power781,1 point,Fri Jul 3 20:39:11 2015 UTC,"Was the app distributed via a Mobile Device Management (MDM) system? or did you just setup an HTTPS link to an install plist?  I'm not sure what happens when installing via MDM, but if installed with a link to a plist, these apps will be missing after a device restore (a message pops up after restore saying something about ""not all apps could be restored from the apps tore""). I believe iOS major version updates include a restore step in the installation, that could be the cause."
iOSProgramming,3bw0p0,jakemarsh,2,Thu Jul 2 16:43:15 2015 UTC,"You totally missed the opportunity to use the ""off"" emoji!  👋📴  The more you know…🌈⭐️"
iOSProgramming,3bw0p0,tjgrant,2,Fri Jul 3 01:41:00 2015 UTC,damn it! I was looking everywhere for that thing! Thanks for setting me straight haha.
iOSProgramming,3bxoxg,dmitrig01,2,Fri Jul 3 00:36:46 2015 UTC,"Does anyone have an idea how can I pass data through installation to an iOS app? Some of those services appear to give this functionality, how do they do it?"
iOSProgramming,3bxoxg,FastAsUcan,1 point,Fri Jul 3 15:10:51 2015 UTC,"hey there, I put together this infographic for Branch, which lets you pass data through install on iOS (and Android). To do it, we use a fingerprinting technique based on OS, device, screen size and other factors. This page in our docs explains how we do it and how accurate our matching is. Here's a more general explanation of how to create links, how they route and how you can embed custom parameters in them. If you have any more questions, PM me and I'll do my best to answer or refer you to our awesome support team. :)"
iOSProgramming,3bxoxg,Catulle,1 point,Fri Jul 3 18:23:18 2015 UTC,Thank you for the detailed answer and for the help Catulle!
iOSProgramming,3bxoxg,FastAsUcan,1 point,Fri Jul 3 20:32:43 2015 UTC,Someone needs to show this to LinkedIn... ಠ_ಠ
iOSProgramming,3bxoxg,Kekkonshiki,1 point,Fri Jul 3 05:11:39 2015 UTC,Nice summary.  You missed http://www.oplytic.com. They're in the 'mobile attribution' box.  Disclosure: I did some dev work for them.
iOSProgramming,3bxoxg,fubarx,1 point,Fri Jul 3 20:20:45 2015 UTC,"Cool, thanks for the tip!"
iOSProgramming,3bvaoa,felixkk,1 point,Thu Jul 2 13:08:52 2015 UTC,"I'm hopeful that more integrated screenshot utilities will become available shortly.  The UI test automation provided by Xcode gives us an opening to do this.  I expect to be able to fully automate setting up the screenshot data, navigating to the app screen I want to screenshot, taking the screenshot, setting up the status bar, and putting them in frames matching the correct device for the correct screeshot size, and finally putting that in my selected background with the descriptive text above the device.  In fact, I'm itching to work on it myself, if I didn't already have more projects than I have time to work on them."
iOSProgramming,3bvaoa,me_asplode,1 point,Thu Jul 2 14:17:24 2015 UTC,"That's exactly what the article is talking about... even if it's not built into XCode tools the whole fastlane suite of tools is extremely easy to use, and integrates well into the development and delivery process."
iOSProgramming,3bvaoa,DiseasesFromMonkees,2,Thu Jul 2 15:46:04 2015 UTC,"I understand.  What I meant was that I expect tools to be even more integrated than this soon, for instance, using Xcode's own unit testing framework, so devs won't have to learn a 3rd party scripting framework."
iOSProgramming,3bvaoa,me_asplode,1 point,Thu Jul 2 16:32:16 2015 UTC,"I really like MengTo's Sketch template for the App Store. Yeah, I have to boot every device and take screenshots, but right now I only have one language. So for me, the small developer, this works.  https://github.com/MengTo/AppStoreSketch  I'm all for automation however, so definitely thanks for posting this!"
iOSProgramming,3bvaoa,utahpow,1 point,Thu Jul 2 18:48:09 2015 UTC,I haven't got around to trying it out yet but this looks like a useful tool:  https://launchkit.io/screenshots
iOSProgramming,3bvaoa,Stazalicious,1 point,Thu Jul 2 22:10:03 2015 UTC,I used it for my app that is about to show up in the App Store.
iOSProgramming,3bvaoa,succeededcoma,1 point,Fri Jul 3 07:19:49 2015 UTC,"Yes, this was all mentioned in the article. It's a good and simple solution. Just not perfect because of different reasons (e.g. blurry font, invalid font size)"
iOSProgramming,3bvaoa,Stazalicious,1 point,Fri Jul 3 08:57:28 2015 UTC,Oh I see yeah. I guess it's just about how much time you have. If you go for one of their templates which has a background then it's going to be less noticeable anyway.
iOSProgramming,3bvaoa,megablast,1 point,Fri Jul 3 09:40:20 2015 UTC,"Wish there was a way to create app icons automatically, without using a 20mb psd file  use http://ticons.fokkezb.nl/, but it does not include watch support."
iOSProgramming,3bxh0u,MaritimeMedic,4,Thu Jul 2 23:26:55 2015 UTC,I think you would be better off using ads over a paid model.
iOSProgramming,3bxh0u,Clipstuh,1 point,Fri Jul 3 04:05:21 2015 UTC,"Indeed, I am inclined to agree with you. I plan to release a Vomit Dodge Free edition, which will use ChartBoost ads displayed before every level."
iOSProgramming,3bxh0u,antgly,1 point,Sat Jul 4 00:09:11 2015 UTC,Your fonts look out of place.
iOSProgramming,3bxh0u,Phr34Ck,1 point,Fri Jul 3 06:10:09 2015 UTC,I agree. Something I plan to address in a future patch.
iOSProgramming,3bvg43,may_be_not,1 point,Thu Jul 2 14:00:11 2015 UTC,Here is mine project! Thanks for posting it! Any comments and suggestions are welcome!
iOSProgramming,3byk67,jiraiyaperv,2,Fri Jul 3 05:24:34 2015 UTC,The segmented control looks the same in both photos to me.
iOSProgramming,3byk67,csacc,0,Fri Jul 3 06:00:40 2015 UTC,"Sorry for the lack of info, but I meant expanding the information inside the segmented control.  Any assistance would be helpful :)"
iOSProgramming,3byk67,MrHarryT,1 point,Fri Jul 3 06:04:07 2015 UTC,Don't put the content inside the segmented control. Just use a tableview (or another view) underneath the segmented control. When you tap it then you can move the views up (by editing the constant on layout constraints).
iOSProgramming,3byk67,IveCeasedToExist,1 point,Fri Jul 3 12:11:11 2015 UTC,thanks mate! i'll try it once i get home :) cheers!
iOSProgramming,3bwll7,ObjectiveCopley,2,Thu Jul 2 19:19:20 2015 UTC,ASL.
iOSProgramming,3bumlp,luniawar20,8,Thu Jul 2 07:49:53 2015 UTC,"You mean GitHub? Git and GitHub are different things.  Build something simple, clean, well made, that has some novelty.  The code should be architecturally sound, tidy, demonstrating knowledge of the fundamentals and good sense of app architecture.  The UI should be simple and clean, demonstrating a good sense of basic interface design. It doesn't have to be flashy unless you've got a talent for that.  Basically the person doing the code review for a junior candidate is looking for 1) basic competency, 2) potential, 3) no red flags.  Red flags are scruffy code, bad habits, misuse of basic language or API features, and other stuff that I can't think of right now but I know it when I see it.  If the role isn't going to involve UI design, then on the UI side I'd mostly be looking for conscientiousness, completing all the bits, not leaving any ugly gaps or obviously awkward interactions. Simple clean animations and interactions that properly express what the interface does and how it's meant to be used. Nothing over the top, just ticking off the basics and demonstrating a grasp of good and bad UI patterns.  When I say build something that has novelty, I mean you've got to actually catch the interviewer's interest. If your work is proficient but boring, the job will go to the other candidate who is proficient but interesting. So try to make something that demonstrates at least some basic inventiveness and shows that you have your own ideas and that they're good ideas.   As a junior you wouldn't be hired for your ability to invent and decide the company's major features. But juniors are still expected to be able to think on their own and come up with clever and successful solutions to problems.   Edit: Here's more of the red flags I'd be looking out for."
iOSProgramming,3bumlp,sobri909,2,Thu Jul 2 08:46:50 2015 UTC,"I'd rather see well-commented and written code with just a couple features than a whole bunch of bug-filled junk that doesn't even work. I would be even more impressed if you used the Issues feature of GitHub to document all ""feature requests"" (i.e. stuff you didn't get around to writing yet) as the ability to explain requirements from both technical and business perspectives is a skill that I use daily at my job."
iOSProgramming,3btm72,necromancer08,3,Thu Jul 2 01:21:13 2015 UTC,https://github.com/andreamazz/AMWaveTransition
iOSProgramming,3btm72,klopjobacid,5,Thu Jul 2 07:33:37 2015 UTC,I'm the author of this lib and I approve the choice :D
iOSProgramming,3btm72,andreamazz,2,Thu Jul 2 12:37:11 2015 UTC,"Something like this is exactly what i was looking for.   But i'd like to try and create some of my own animation. I am not very experienced with core graphics and core animation, but i know my way around it.   Any suggestion on how i can start learning how to create these animations?   I will be reading your code, but if you have any book recommendation or any article, I'd appreciate it."
iOSProgramming,3btm72,andreamazz,2,Thu Jul 2 12:57:20 2015 UTC,"I wrote a couple of blog posts about this library, they might help you: http://andreamazz.github.io/blog/2014/04/19/transitioning/ and http://andreamazz.github.io/blog/2014/05/22/uikit-dynamics/"
iOSProgramming,3btm72,ryosen,-1,Thu Jul 2 13:01:24 2015 UTC,"jQuery UI has a full tweening library. Since it's open source, you can examine the code for the various effects and learn from that."
iOSProgramming,3btm72,swineflu11,2,Thu Jul 2 13:10:47 2015 UTC,"In my app, I display the list without any animation. I'd like to incorporate some cool animation. Not necessarily like this one, but something similar. How would i go about creating animation like this? any guidance will be appreciated."
iOSProgramming,3btm72,aoakenfo,1 point,Thu Jul 2 01:23:15 2015 UTC,"For the animations, use the array sequence calls from: https://github.com/matthewcheok/POP-MCAnimate   I'd suggest using snapshot views as well."
iOSProgramming,3btm72,criosist,-7,Thu Jul 2 01:31:33 2015 UTC,"Don't use standard controls like a UITableView, because customization is a pain.  This type of animation is easily implemented if you have a tween class with easing functions and properties like delay and callbacks.  TweenMax is a great API that demonstrates how easy animation can be."
iOSProgramming,3bsea1,ivanbruel,2,Wed Jul 1 19:37:10 2015 UTC,"There's some neat stuff here, but I just don't think that supporting older versions of iOS is going to be a long-term problem.  https://david-smith.org/iosversionstats/  So maybe 5.6% of all iOS users are on iOS 5 and 6? And less than 20% are on iOS 7, and that number's only going to get smaller. 75% are on the latest version, 8. And that means we're probably going to see a super high percentage switch to 9 pretty quickly. Usage of 8 hit over 70% after about 5 months from ship.  I'm just not seeing the value for going with HOKO."
iOSProgramming,3bsea1,aquanext,3,Wed Jul 1 22:54:39 2015 UTC,"Uptake of 9 should be even faster than it was for 8, considering the smaller download sizes and that crazy feature that will delete apps to make space for the install then put them back afterwards."
iOSProgramming,3bsea1,sobri909,0,Thu Jul 2 08:53:33 2015 UTC,"Thanks for opening the discussion /u/aquanext. With HOKO, we tried to solve fundamental things that were dragging the mobile deep link adoption. Indeed, backward compatibility in iOS devices was one of the things we solved that in long-term might not be so important. That’s actually just one piece of the puzzle.  On top of that we are offering: an 100% free and simple to use platform to get your iOS (and Android) apps running with the latest deep linking standards in a breeze; a platform to keep track of all your links and all your platforms; and smart links that go beyond normal deep links by providing you with flexible and adaptive fall backs and deferred linking (i.e. the ability to redirect the user to some view after he goes through the store and installs the app).  Our goal is to provide mobile deep linking in the most simple way possible to make the developers’ life easier. Our vision is one in which apps are no longer silos of data - but every user interaction will lead to another app in an interconnected web of apps and devices.  Read more about it in our page: https://hokolinks.com/  Let me know if have any other question that we can help you with by writing to our CEO: joaquin@hokolinks.com."
iOSProgramming,3bsea1,HokoAdam,1 point,Thu Jul 2 10:25:54 2015 UTC,"How do you implement deferred deep linking?  I've only ever done this by using the IDFA, which Apple seems to be cracking down on for apps that don't have ads."
iOSProgramming,3bsea1,brendan010,1 point,Fri Jul 3 15:16:09 2015 UTC,We use fingerprinting based on some data that doesn’t change that often. http://support.hokolinks.com/what-is-a-deferred-deep-link/
iOSProgramming,3buay3,bulldogs93,1 point,Thu Jul 2 05:21:56 2015 UTC,You have to be logged in. The sim will not let you log in if you have two factor authentication enabled.
iOSProgramming,3buay3,succeededcoma,1 point,Fri Jul 3 16:24:00 2015 UTC,but does a user need to be logged in?
iOSProgramming,3buxp6,huzziii,1 point,Thu Jul 2 10:33:51 2015 UTC,"Is there a way to call buttonsPressed method to see if the buttons are pressed, then disregard the previously entered values on screen and consider the newly entered ones?"
iOSProgramming,3buxp6,lm2s,1 point,Thu Jul 2 10:48:08 2015 UTC,"_screen.text=[NSString stringWithFormat:@""%d%@"",first,[sender currentTitle]];   Without more code I can't be sure but the problem seems to be here, you are concatenating the previous value (2, in first).  A quick fix would be to clear first at the end of each operation (+, -, /, ...)."
iOSProgramming,3buxp6,lm2s,1 point,Thu Jul 2 12:51:45 2015 UTC,"By clear, do you mean the following?    _screen.text=@"""";    clear"
iOSProgramming,3buxp6,jman32112,1 point,Thu Jul 2 13:10:31 2015 UTC,"No, clear the value in first, as in first = 0. But this won't work, you'll end up with ""010"".  You need to change the logic of isFirst so that it doesn't enter the else when you are performing the input of another number."
iOSProgramming,3bvhlr,95POLYX,3,Thu Jul 2 14:13:14 2015 UTC,128 gb is not enough. You need 256 at least.
iOSProgramming,3bvhlr,eviltofu,2,Thu Jul 2 15:41:04 2015 UTC,yeah forgot to mention it...
iOSProgramming,3bvhlr,leandrotami,2,Thu Jul 2 15:53:33 2015 UTC,"You don't really need such powerful hardware to start learning iOS development. Of course having a powerful computer is nice, but it's perfectly possible to work without having an UI running at 60fps! I work with a Late 2011 13'' MacBook Pro, I know people working with Mac minis. As I said it's nice to have great hardware but it's not such a requirement."
iOSProgramming,3bvhlr,gomezluisj,1 point,Thu Jul 2 17:52:20 2015 UTC,"I'm having the same dilemma, I want mobility and also work on storyboards, should i get the 13"" + monitor, or the 15"" ?"
iOSProgramming,3bvhlr,Power781,1 point,Thu Jul 2 16:13:45 2015 UTC,"15"" is enough work correctly working with IB."
iOSProgramming,3bvhlr,Power781,1 point,Fri Jul 3 04:18:35 2015 UTC,Ohh... Did they break it across the whole system or just in some parts?
iOSProgramming,3br4yn,dreamache,1 point,Wed Jul 1 14:02:49 2015 UTC,"Only first 5 course, the others are not present, they send you a mail when the other stuff is ready  Availble courses: Designing the App 1. Designing the logo 13:32 2. Designing the UI 11:36 3. Designing the OFF button state 04:33 4. Preparing assets 05:32 5. Exporting the assets 06:59"
iOSProgramming,3br4yn,yudoit,4,Wed Jul 1 16:54:33 2015 UTC,The title of the site seems to be riffing off of the popular design code.io
iOSProgramming,3br4yn,dreaminginbinary,1 point,Wed Jul 1 16:59:34 2015 UTC,"you need to verify an email, then get ANOTHER email with login credentials. srs?"
iOSProgramming,3buhjz,ThePantsThief,2,Thu Jul 2 06:42:07 2015 UTC,"In Debug Area/ Variables View, right click the variable, click Edit Summary Format… then do your thing."
iOSProgramming,3buhjz,NSCFType,2,Thu Jul 2 14:10:48 2015 UTC,Thanks!
iOSProgramming,3buhjz,eimantas,1 point,Thu Jul 2 14:50:45 2015 UTC,"Try overriding debugDescription method. Here's the declaration:   @property (readonly, copy) NSString *debugDescription"
iOSProgramming,3buhjz,SeNeO,2,Thu Jul 2 07:01:44 2015 UTC,"I tried that, but that just changes what prints out when you po object / press the (i) sadly"
iOSProgramming,3bsue4,stevestencil,1 point,Wed Jul 1 21:33:25 2015 UTC,"Man I really wish I had my personal Mac now and not just my company one, I'd love to help. Best of luck though with your app, it sounds pretty amazing."
iOSProgramming,3bsue4,BlackHayze,0,Thu Jul 2 02:28:21 2015 UTC,Try Elance.com or similiar sites where you can contract really experianced developers. also make sure that you sing a contract with them so that no one can steal the source code and run away. stuff like that.
iOSProgramming,3bs1vl,ihatetoregister,2,Wed Jul 1 18:09:46 2015 UTC,"Hey so it took me a while to get back to my computer after getting my phone replaced so I could test with a basic music player app.   I constructed this for iOS 8.1.2, I made no changes to it (except converting to swift 2). I opened my music app and started playing a song from Apple Music that I made sure I didn't have in my library and I was able to control play/pause/previous/next actions as well as use the volume and elapsed time sliders  http://i.imgur.com/8PyYFsN.png  http://i.imgur.com/xsd3ybV.png  I currently don't have it set up to choose a song from within the app so I can't tell you if that will work  Edit: it occasionally crashes. Sometimes immediately, sometimes after skipping a few times. Still works fine with music in library"
iOSProgramming,3bs1vl,AxeEffect3890,1 point,Fri Jul 3 14:41:09 2015 UTC,"That's nice, thanks!"
iOSProgramming,3bs1vl,brendan09,1 point,Sat Jul 4 05:16:28 2015 UTC,"I would assume if they've been saved offline that you can. (Like with iTunes Match)  I don't think you have free reign to the online store, however.  I haven't tried it, these are just my educated guesses from how the framework and prior systems worked."
iOSProgramming,3bpubj,radicality,3,Wed Jul 1 04:36:42 2015 UTC,"Here's the folder structure I always use, YMMV but I find it helps abstract how the different files work with each other   Application - Application-related files affecting the life cycle of the entire app. Extensions - Specific files overriding Apple's standard library in Swift. Protocols - Protocols for other classes to implement. Helpers - Structures, classes, and methods to help with common tasks. Models - Models representing data structures within the app. ViewModels - Abstracted view models to handle the data that is represented in controllers. Controllers - Controllers hold most of the logic between backend model and user interactions. Views - Customized views of user interaction elements. Resources > Images.xcassets - All the images, best practice is to save as PDF. Resources > Vector Assets - PDF vector assets to be used as images. Resources > Storyboards - Storyboards doing the heavy lifting for the screens in the app. Resources > Nibs - Nibs used for smaller view management. Resources > Other Sources - Property lists and other files. Resources > Localization - Localization files."
iOSProgramming,3bpubj,imkevinxu,3,Wed Jul 1 06:26:44 2015 UTC,"I used something similar in the past, until another developer (which worked at Apple for a while) made me notice that this is not an optimal way of organizing code.  Let's say you have an app that has a profile screen, which has a bug. When you see it, you are not going to think ""Oh, this bug is in the protocols"". What you think is simply ""I have a bug in the profile screen"".  In your folder structure you have no way of knowing where the code for that screen is. Sure, you now remember (and you probably don't even use the folder structure, but open the files with the open quickly feature of Xcode), but you will forget. Also, any new person of the project will have to hunt down that particular class before he can start working on it.  I now organize my code in a structure that reflects the app structure. Granted there are always generic files that do not belong to any specific part and will go into more generic folders, but now, when I look for something, I can easily find it in my folder structure.  Architecture is a good thing to think about and it's good to constantly keep it organized, but I don't believe anymore that this should be reflected in the folder structure of the project."
iOSProgramming,3bpubj,matteoman,3,Wed Jul 1 12:15:42 2015 UTC,"If the codebase gets BIG enough, I combine the two.  The high level is similar to /u/umkevinxu for the classes that are used everywhere.  At the same level is a Features or Sections or something similar where it's organized like /u/matteoman describe - one for each major section or feature of the system.  Inside that are folders similar to the high level - controllers, models, etc.  Of course this is only necessary if the codebase gets THAT big."
iOSProgramming,3bpubj,me_asplode,4,Wed Jul 1 14:19:17 2015 UTC,Artsy's loaded iOS team has opened up their entire app.
iOSProgramming,3bpubj,pauliwalnuts,1 point,Wed Jul 1 11:51:16 2015 UTC,Great share - I didn't realize they had released their code. This is awesome!
iOSProgramming,3bpubj,TheMiamiWhale,7,Wed Jul 1 14:49:14 2015 UTC,Read through Alamofire its a well crafted open source project.
iOSProgramming,3bpubj,FutureIsMine,1 point,Wed Jul 1 06:12:39 2015 UTC,"Thanks, that sounds like a good one!"
iOSProgramming,3bs4nt,lunarchaos42,1 point,Wed Jul 1 18:29:26 2015 UTC,"I don't do web development (iOS developer), but when hiring I do look for well-rounded individuals. Especially if they aren't experts in the iOS space.  .....but if a great iOS-only dev walks in the door, not having web development isn't going to count against them."
iOSProgramming,3bs4nt,brendan09,1 point,Wed Jul 1 19:33:28 2015 UTC,"Well, I have experience as a Tier 1 IT from college internship - 6 mths, as well as experience working in a GPU production facility as a product engineering intern- 5.5 mths, and a six month job of Database stuff freelance engineer intern- 8 mths.  (Trying to be as vague as possible without shedding too much information.) So I have worked Hardware, SQL, and IT. I have played with web dev but I have never been very good at getting front end stuff to look good. Thank you for the insight on the postings. I am still new at iOS (currently finishing my first/only college offered course on iOS) and fixing to work the CoreData portion of treehouse training. I really want to work as an iOS developer when I finish school next year. Do you have any advice on being a great iOS-only dev? Also, I still need one internship for my college to get my BS degree would you have any advice other than having a list of apps on github that would make my resume stand out?  Thanks for your input btw! Edit: some details and a thank you. :)"
iOSProgramming,3bs4nt,brendan09,1 point,Wed Jul 1 19:55:24 2015 UTC,"A great iOS dev is going to have several years experience, and numerous apps on the store. Unfortunately, you're unlikely to get there before you graduate. But, you may be ready for a Junior position. The biggest focus is to learn as much about iOS development as you can, make sure you know Objective-C in and out, have written complete (and shipping!) apps, and know your fundamentals really well.  Get with a company where you can work (even as an intern) on a shipping iOS app. Its the best experience you could ask for and will really stand out when you combine it with your own personal work."
iOSProgramming,3bs4nt,brendan09,1 point,Wed Jul 1 20:07:37 2015 UTC,"Would you say that knowing Objective-C is still more important than Swift? I was planning to finish the Treehouse course on Objective-C then do the Swift course, but if I need to be an expert at Objective-C for a realistic job then thats what I should work on."
iOSProgramming,3bs4nt,brendan09,2,Wed Jul 1 20:19:51 2015 UTC,"Yes. If you want a job doing iOS development, you need Objective-C. All legacy code for the past 8+ years is in Objective-C, and its not going to be scrapped just to be rewritten in a trendy language.  Plus, Swift isn't ready for large production software yet. The tooling isn't ready, the compiler isn't ready, the syntax changes frequently, the ABI isn't stable, etc. Swift is nice to have a working knowledge of, and great to practice and work on for the next year or two until its really ready to be #1 choice for apps. Right now it's just not yet."
iOSProgramming,3bs4nt,succeededcoma,1 point,Wed Jul 1 20:21:48 2015 UTC,"Awesome information. Thank you so much! This information very helpful. I just picked up iOS development when I cam back from my last internship (GPU engineering) this spring, that's where I realized hardware wasn't something I enjoyed. I know a lot of sites offered the training for Swift, but my school didn't even consider it and I guess it is because of the reasons you list. Would you recommend any training sites other than the treehouse course? I am currently working through last years iOS big nerd ranch book as well for my class."
iOSProgramming,3bs4nt,StunnerAlpha,1 point,Wed Jul 1 20:29:05 2015 UTC,The Stanford courses on iTunes U are great. Ray Wenderlich has some great content. NSHipster has great content.
iOSProgramming,3bs4nt,askoruli,1 point,Wed Jul 1 20:35:14 2015 UTC,I have been told the Stanford stuff was good before. I have it on my iTunes account for use after I finish the treehouse I just forgot about it. I will look up the others. :)
iOSProgramming,3bs3zu,elephantoes2,3,Wed Jul 1 18:24:56 2015 UTC,"New APIs are added but you probably don't want to use them right away because it takes time for all users to upgrade. Currently I support iOS 7 and iOS 8 and don't plan to drop iOS 7 just yet.  What you will be learning as you get started will not be affected by iOS 9. Don't make iOS 9 an excuse to stop learning, heck there will always be another excuse to do that. Put your head down and get to it.  Xcode 7 will change a bit from Xcode 6 as well so don't get worried about that either. They are very similar, just some tweaks and the ability to put code on a device without needing a paid provisioning profile."
iOSProgramming,3bs3zu,MKevin3,2,Wed Jul 1 18:51:20 2015 UTC,"Don't wait. The time lag on books is a long time. You're better off mastering what is out now with the most up-to-date books available, and then cobbling together the new stuff from what's available online, as you need it. When the new books come out, you can buy them then and use them to fill in any holes in your knowledge.  That's my two cents."
iOSProgramming,3bs3zu,mariox19,1 point,Wed Jul 1 19:58:37 2015 UTC,"I don't think there are enough changes in iOS 9 to really matter, but if you're programming in Swift you probably do want to start with Swift 2.0. I think the biggest change in iOS 9 is the addition of UIStackView, which will make view layout a lot simpler for many apps."
iOSProgramming,3bs3zu,EricShapiro,1 point,Wed Jul 1 18:48:20 2015 UTC,"iOS 9 isn't that big of a change that it makes prior knowledge useless; it's mostly incremental improvements. So, start reading iOS  8 stuff now and it will definitely be valuable.  For what it's worth, all my iOS 8 tutorials are free, and all my iOS 9 tutorials are free too. Hacking with Swift is the main site (30 free Swift tutorial projects!), but you can jump straight to my iOS 9 tutorials here."
iOSProgramming,3brhcd,chriszimort,9,Wed Jul 1 15:41:59 2015 UTC,"Yes, they're usually this bad. I usually avoid them until beta 4 or later."
iOSProgramming,3brhcd,bcheek1327,5,Wed Jul 1 16:03:06 2015 UTC,"No, the watchOS betas are exceptionally bad. The watch almost isn't usable. I've been on every beta since iOS 6."
iOSProgramming,3brhcd,ThePantsThief,3,Wed Jul 1 19:38:22 2015 UTC,I agree with the watchOS betas being exceptionally bad. iOS 9 is okay but the Watch is essentially unusable.
iOSProgramming,3brhcd,brendan09,1 point,Wed Jul 1 20:42:25 2015 UTC,I will say the battery life improvement between beta release and beta 1 is like day and night.
iOSProgramming,3brhcd,succeededcoma,1 point,Wed Jul 1 20:51:00 2015 UTC,Definitely!
iOSProgramming,3brhcd,brendan09,1 point,Wed Jul 1 20:51:12 2015 UTC,Yes! It's amazing how broken it is. Basically everything I try to do crashes or freezes it. I'm not developing any watch apps yet but I feel bad for anyone who is.
iOSProgramming,3brhcd,trusk89,2,Fri Jul 3 02:52:24 2015 UTC,"As a developer, this year I will only update on the public betas. Having only one device which I can update, being my main phone, I will wait it out."
iOSProgramming,3brhcd,Power781,1 point,Wed Jul 1 18:30:20 2015 UTC,"Yup, this was my mistake. I figured I'd update my personal phone, just because. Man, now I know better."
iOSProgramming,3brhcd,iOSbrogrammer,2,Fri Jul 3 02:53:47 2015 UTC,iOS beta is as bad as usual. OS X beta is 10 times better than Yosemite one...
iOSProgramming,3brhcd,FutureIsMine,3,Thu Jul 2 01:14:39 2015 UTC,Haha oh boy. Yeah they're usually this bad.
iOSProgramming,3brgr2,ValarMorghulis6626,2,Wed Jul 1 15:37:29 2015 UTC,"I'm currently working on a location based app for my internship, so I can give you some pointers. You're going to need CoreLocation and MapKit, so read through their documentation. You'll need to use CLLocationManagerto get authorization for the users location, but then you can just use your MKMapView to load in the users location. If you have any questions feel free to let me know."
iOSProgramming,3brgr2,im_a_terrapin,1 point,Wed Jul 1 17:09:22 2015 UTC,"Thanks for the info, this is exactly what I was looking for! I'm planning on getting started this weekend, so I'll let you know if I have any more questions"
iOSProgramming,3brf60,JetPlanes,2,Wed Jul 1 15:25:32 2015 UTC,"Disable scroll of uitextview Override layoutSubviews of the view which contains uitextview Within layoutSubviews get the size of the uitextview's content size. If it's less or equal to your max height, set uitextview height equal to this value If it's bigger than max allowed height, set uitextview's height to your max value and enable the scroll.   It's easy, don't be afraid of writing custom stuff."
iOSProgramming,3brf60,Ference,1 point,Wed Jul 1 22:00:09 2015 UTC,Got it! I'll look into this. Thanks for the help
iOSProgramming,3br91i,Voley,7,Wed Jul 1 14:37:52 2015 UTC,"We've gone back and re-engineered a few of our apps to Swift, and while we've had a few issues with going into production with them, it was nothing that prevented us from shipping.  The biggest headache we've had is an issue that cropped up when we used the ""Swift Optimization"" compiler flag; it broke some array sorting.  But that was back in the first release of Swift, and I believe it's been addressed.  Other than that one little hiccup, it's been okay.  We currently have three of our thirteen apps converted over to Swift (not counting a few Unity-based game apps produced by another unit), with plans to port two of them in the coming month.  One of those three apps is a Core Data app, and it came over without issue.  None of those converted apps use any legacy libraries or third party libraries that also haven't been ported to Swift themselves, so I can't speak to that side of things."
iOSProgramming,3br91i,onewayout,3,Wed Jul 1 17:05:53 2015 UTC,"I'd estimate we're 10% C, 4% Objective-C++, 1% JavaScript (Cordova/Phonegap), 1% C# (Xamarin), and the rest Objective-C. No production Swift, and only two very simple test apps to make sure our products work with Swift apps. If I were starting a new project I'd probably consider Swift now because the language and tools have had some time to bake. Some of the language features might make it easier to write correct, maintainable code."
iOSProgramming,3br91i,TaviRider,2,Wed Jul 1 16:06:43 2015 UTC,"Our current app in the app store (that uses swift, we have others that are still ObjC only):  (~69k daily active users / ~18k daily new users) is about 30% Swift (1.2 as of today).    Next gen app that we're building, the core will be 100% Swift 2.0, mainly as an excerise to move the tech team forward and establish a roadmap for ""innovating"" with the underlying technology. (not just flashy UI updates).    The only real growing pains were really in the build process - CLI builds don't package the ipa properly, so we had to work around that.  And the rapid nature at which Apple's updating swift is/was problematic. (Deprecations?  who needs those, just break it!)    As for questions and answers:      In a hybrid app, things work pretty seamlessly, just need to include the headers in the appropriate bridging libs.  We don't use CoreData (overkill for what we do, though we are implementing realm in another of our apps that isn't swift)  Legacy code is fine, so long as you understand how to properly bridge from Swift to C.  For example, it took quite some thinking to figure out how to call C function pointers from within Swift.  We had to refactor a lot of code, due to safety concerns and making things that much more readable/easier to use.  But that said, it's opened the door for us to re-write much of the legacy libs we had in native iOS languages (ObjC/ObjC++ or swift), or gives us a lot of leverage with our 3rd party partners to have them do the same."
iOSProgramming,3br91i,kaosdg,2,Thu Jul 2 14:24:05 2015 UTC,"I work for a company that makes apps for First Responders. Since switching to Swift and rewriting core parts of the app as necessary, we've been able to ensure a lot more safety and crash resistance. Optionality has really been the biggest thing for us, forcing us to reason about the existence of values at compile time has made everything way more robust.  We're not writing any more Objective C unless we absolutely have to."
iOSProgramming,3br6yn,freelancerharry,3,Wed Jul 1 14:21:01 2015 UTC,While that site is better than most it still seems like a bit of a generic offshore spam site   Hire dedicated android/iOS developers from Bacancy technology to obtain best offshore development services from India.   When a developer applies for a job with numerous grammatical errors in their resume it usually means there's going to be communication issues. When a company has the same on their marketing website then it's an even bigger concern. But then they do offer a 3 day free trial so I would take them up on that and if things are going badly then bail.
iOSProgramming,3br6yn,askoruli,2,Wed Jul 1 23:37:52 2015 UTC,"That's pretty unspecific, maybe if you share what your app would do and we can give you advice."
iOSProgramming,3bo5i7,ronabuelo,4,Tue Jun 30 19:58:01 2015 UTC,mobile dev is a different beast from web. You are gonna need to learn a lot about OOP and other coding paradigms.
iOSProgramming,3bo5i7,ShockScapes,4,Tue Jun 30 22:07:16 2015 UTC,"This.  Front End Developers have my utmost respect; they have a lot to contend with between all the browsers, changing standards, trends and frameworks of varying maturity.  It obviously requires a large body of knowledge and experience.  However, it's better that some of that knowledge gets left firmly at the door, when it comes to Mobile Dev.  Mobile (and OO in general) is a very different beast.  I've cringed in the past when seeing Apps where every variable is a string, and there are is no formalised data model, only ad-hoc dictionaries and arrays of strings which get converted to/from other types only when interaction with the SDK and other APIs is needed.    I even once saw an App that serialised a bunch of variables to JSON, solely to pass them between classes internally... clear hallmark of a 'web dev going mobile'!  Avoid these obvious mistakes and you're already doing better than some :-)"
iOSProgramming,3bo5i7,Darkmoon_UK,3,Wed Jul 1 03:05:49 2015 UTC,As a web dev gone mobile I would love to see those examples. I was fortunate in that during my transition I had a back end developer showing me the ropes of OOP (though I had a bit of experience with PHP).
iOSProgramming,3bo5i7,mrgermy,2,Wed Jul 1 05:27:26 2015 UTC,"I call myself a web dev, but ""serialised a bunch of variables to JSON, solely to pass them between classes internally"" is bad even there."
iOSProgramming,3bo5i7,me_asplode,3,Wed Jul 1 14:22:20 2015 UTC,"Ive enjoyed being an iOS developer.  I started out as an iOS (native) developer. I then moved out to android and helped assist in a few bb apps. After that, I moved to full stack work, working with an app that communicated with a back end but also had a front end admin view that needed tailoring. Got my familiar with full stack work and introduced me to web front end, databases, etc. Next job also full stack, but different backend languages. Now I am currently expanding my skills to web apps as well. At the end of the day, I still pitch myself as an iOS developer, though. Its what I focus on, although id say I'm more a ""native mobile"" developer now.  (ETA currently working on a cordova app....as stated, do not make web apps if you want to make native iOS apps)"
iOSProgramming,3bo5i7,badlcuk,5,Wed Jul 1 00:08:28 2015 UTC,From iOS to cordova. Wow i thought my life sucked.
iOSProgramming,3bo5i7,Starchand,1 point,Wed Jul 1 07:42:32 2015 UTC,"Well, I don't like to talk about how much I'm hating that portion ;) it's not forever,  thank god..."
iOSProgramming,3bo5i7,badlcuk,3,Mon Jul 6 05:59:42 2015 UTC,I'm currently in the process of switching. Quit my job around 2 months ago and dived head first into iOS development. Finished a book (Big Nerd Ranch) and I might take my very first client next week!  I'm contemplating the idea of writing my own app but I'm out of ideas. I have no idea what to build.
iOSProgramming,3bo5i7,Phr34Ck,3,Tue Jun 30 22:38:04 2015 UTC,"Get involved in open source projects. Really good way to keep your coding chops up while giving back to the developer community. Additionally, you have a place where you can show off your contributions to potential employers/clients. I have a few open source iOS projects of my own and could definitely use help, especially with STAControls (which I plan on putting up on CocoaPods once I get to a more stable/solid feature-set)."
iOSProgramming,3bo5i7,StunnerAlpha,1 point,Tue Jun 30 22:44:15 2015 UTC,"thanks for the suggestion, I will definitely do that!"
iOSProgramming,3bo5i7,Phr34Ck,3,Tue Jun 30 22:51:45 2015 UTC,Moved from doing Java Enterprise apps for the government to making iOS/Android apps for clients and I've never looked back.
iOSProgramming,3bo5i7,Rudy69,6,Tue Jun 30 23:41:35 2015 UTC,The only Enterprise I'll ever consider again is USS Enterprise.
iOSProgramming,3bo5i7,lucasvandongen,3,Wed Jul 1 11:41:34 2015 UTC,So much better. Actually using a compiler and getting error messages is great.
iOSProgramming,3bo5i7,megablast,3,Wed Jul 1 02:10:35 2015 UTC,I love it - every day is a blast. I switched from a career in finance and haven't looked back.
iOSProgramming,3bo5i7,TheMiamiWhale,2,Wed Jul 1 14:57:50 2015 UTC,Moved from web (first PHP later ASP.Net) and a WPF application to iOS. I think the most important thing is that apps are less prone to Enterprise bullshit. Also web is a total chaos right now with four very different browsers with their mobile counterparts and a new JS framework every month.
iOSProgramming,3bo5i7,lucasvandongen,2,Wed Jul 1 11:44:20 2015 UTC,"It has been a long journey into mobile dev: Basic -> dBase -> C - C++ -> Java -> C# -> Android / Java -> iOS / ObjC  The Java work I did was front end for web and desktops. They needed someone to try mobile work so I gave it a shot. I started on Android as I already knew the language so I could just concentrate on ""mobile"". I then learned ObjC as I had the mobile knowledge and could concentrate on learning the language.  I have done some web work with JS / CSS / HTML but I did not enjoy it. I have come to expect a lot of aspects of strongly typed languages and IDES with great debuggers. Did not care of the ""do this here for IE and this for Safari and this for FireFox"". Good to know web technologies but not an area I care to code in again."
iOSProgramming,3bo5i7,MKevin3,2,Wed Jul 1 12:16:38 2015 UTC,It is good as far as front end development goes. There are many good opportunities for work and the Apple development ecosystem is among the best. It is an interesting field because most lay people have smart phones now so they can relate to your work.  My experience before mobile is mostly in console and handheld game development.
iOSProgramming,3bo5i7,Space_Butts,-10,Tue Jun 30 21:27:18 2015 UTC,Learn how to work with Cordova. It crosses the gap for you.  http://cordova.io
iOSProgramming,3bo5i7,Sir_not_sir,4,Tue Jun 30 20:15:46 2015 UTC,Don't do this if you actually want to learn how to be an ios developer.  Do this if you have something simple you want to convert to run on iOS really quick.
iOSProgramming,3bo5i7,MacroMeez,3,Tue Jun 30 23:38:56 2015 UTC,But beware that the App you make with Cordiva will not completely have access to all native hardware elements and therefor is unable to fully integrate into the device. On Android users care less about this then the ones using Apple.
iOSProgramming,3bo5i7,15458434,-2,Tue Jun 30 22:34:06 2015 UTC,If you want additional hardware access then write a plugin. It's ridiculously easy to do.
iOSProgramming,3bo5i7,Sir_not_sir,1 point,Tue Jun 30 22:37:35 2015 UTC,"So actually you're saying you can get access to the Multipeer Connectivity, Metal, GameKit, iOKit, CoreData, HealthKit, HomeKit ,Acceleration, Security, AddressBook, Social, Account and many other frameworks to get a full integration into iOS?"
iOSProgramming,3bo5i7,15458434,1 point,Wed Jul 1 22:11:30 2015 UTC,Yes.
iOSProgramming,3bos4y,e-dosta,4,Tue Jun 30 22:45:29 2015 UTC,"UITableView --> Cells represent each table Inside each table is a UITableView that has seats listed Each seat has a UITableView with reservation information Have another view that allows you to add new tables, etc.  Allow the ability to remove tables   Use something like Parse or even iCloud to keep everything in sync  Thats about the easiest way I can think of to build it."
iOSProgramming,3bos4y,succeededcoma,2,Tue Jun 30 23:27:28 2015 UTC,Parse is heavenly
iOSProgramming,3bos4y,surfaspen,1 point,Wed Jul 1 00:11:48 2015 UTC,"yup that looks like a good plan, at least in theory.  setting up those UITableViews shouldnt be that hard, and I should read some more about Parse and how it works.  So right now I only have one problem: the fact that Swift is still not open-source and I can't compile in windows -_-"
iOSProgramming,3bos4y,succeededcoma,1 point,Fri Jul 3 08:08:38 2015 UTC,Run OSX in a VM
iOSProgramming,3bmcq3,yariok,4,Tue Jun 30 11:26:46 2015 UTC,This makes my foray into the world of iOS development seem paltry. I made a to do app and thought this is the coolest shit ever. WRONG...prio is the coolest shit ever!!
iOSProgramming,3bmcq3,succeededcoma,1 point,Tue Jun 30 16:58:20 2015 UTC,thank you mate! please keep at your application and share it with me when it will be completed.
iOSProgramming,3bmcq3,succeededcoma,1 point,Tue Jun 30 17:19:42 2015 UTC,Sure thing!!
iOSProgramming,3bmcq3,aoakenfo,2,Tue Jun 30 17:52:19 2015 UTC,nice job. i'm a big fan of custom-built ui.
iOSProgramming,3bmcq3,FresherWater,1 point,Tue Jun 30 18:32:34 2015 UTC,Thank you! me too ;)
iOSProgramming,3bmcq3,cr888,2,Tue Jun 30 20:45:24 2015 UTC,Your clearly amazing at this. Have you got any advice for someone who is only 2 weeks into their ios development journey?
iOSProgramming,3bmcq3,emprr,2,Tue Jun 30 19:56:04 2015 UTC,"I started developing for OS X and iOS around 4 years ago. Today I work as iOS developer for an amazing company called Neato Robotics, I write for a blog about iOS development and in my spare time I build iOS applications :P That said, iOS gives you a lot of chances! my suggestion is just to keep at it and start building applications as soon as possible! (I also suggest you to check the Stanford course, it is free on itunes U and it is an awesome starting point http://web.stanford.edu/class/cs193p/cgi-bin/drupal/)"
iOSProgramming,3bmcq3,Tsupaero,2,Tue Jun 30 20:42:58 2015 UTC,"I rarely buy apps, especially when it's not original or a game.  But this UI is so nice, I bought it. I've been looking for a reminder app for a while, and this is by far the best I've seen."
iOSProgramming,3bmcq3,Two_Oceans_Eleven,2,Tue Jun 30 20:02:53 2015 UTC,Thank you! We spent a lot of time trying to create something special :)
iOSProgramming,3bol1o,ThePantsThief,0,Tue Jun 30 21:51:23 2015 UTC,I would have called this being documented: https://developer.apple.com/library/ios/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/c/func/class_replaceProperty
iOSProgramming,3bol1o,shiggie,2,Tue Jun 30 23:35:51 2015 UTC,"replaces a property of a class   No way…? :P  I meant it doesn't have a ""discussion"" that tells what it means by ""replacing"" a property."
iOSProgramming,3bol1o,shiggie,1 point,Wed Jul 1 04:46:15 2015 UTC,"Heh.  Well, I should say it's ""documented"". But, the runtime is one of those things that you really need to read more than one function's documentation."
iOSProgramming,3bol1o,shiggie,1 point,Wed Jul 1 14:53:24 2015 UTC,"I'm working on an OO wrapper for the runtime API, Google turned up nothing for this particular function… Happen to have any info on it? haha"
iOSProgramming,3bok5c,Clipstuh,1 point,Tue Jun 30 21:44:47 2015 UTC,"Yes, don't put any conditions in the model like delete everything on relationships. You have to manage this in your code. It functions like a shoe box. You put something in another device takes it out. And it's horrible to debug, cause you get only framework error messages back that don't mean anything to you. I dropped the functionality in my App after and attempt of three weeks."
iOSProgramming,3bok5c,15458434,1 point,Tue Jun 30 22:28:33 2015 UTC,I added iCloud sync into my app after fighting with it for awhile (even switched to parse at one point). Even though It mostly works the headaches it causes isn't worth the benefits which I don't even think my users use.
iOSProgramming,3bna6t,neo-_-man,3,Tue Jun 30 16:18:52 2015 UTC,One of the biggest benefits of Unity is not being limited to the iOS platform.
iOSProgramming,3bna6t,majeric,1 point,Tue Jun 30 17:07:05 2015 UTC,yes ... absolutely :)
iOSProgramming,3bna6t,onewayout,3,Tue Jun 30 17:08:48 2015 UTC,"Unity is pretty different from Sprite Kit.  Sprite Kit development is (almost) all done with code, whereas, although you can do code-only development in Unity, typically, you're using the IDE in a drag-and-drop fashion to add components, set values, make connections, etc.  Unity also imposes a particular structure on your development, namely the ""component"" pattern.  This is a pretty popular and usable structure for creating games, but it's not the only way of doing it, and if you've never done it before, it might take a bit of time to get your head around if you're used to the more traditional ""class hierarchy"" approach to things.  If you're hoping to ""port"" a Sprite Kit game over to this model, it's unlikely that it will be straightforward unless you've also been using the component pattern in your own Sprite Kit work.  If you're starting from scratch or close to it, though, you might find it worthwhile to switch.  The component system is really powerful, elegant, and versatile, and is worth learning.  The time you spend learning Unity won't be totally wasted, because the component pattern is useful in other contexts, so it's probably worth delving into even if you end up deciding to stay with Sprite Kit.  As majeric mentioned, the major selling point of Unity is that it publishes to many platforms.  This will probably be the main differentiator for most developers.  But it does come at a bit of a cost; for instance, test driving a Sprite Kit project on a physical device is simple and quick via Xcode, but is kind of a huge pain on the Unity side, requiring two publishing passes and switching between Unity and Xcode.  And there are no ""tiers"" as to what is available and what isn't on the Sprite Kit side - you can code to whatever Apple exposes.  Unity cordons off some features only for the Pro version, so you'd have to pay to get access to those features, but Unity makes a lot of the things you'd normally want to do easier, too, so that trade-off might be worth it.  There's also the cost issue.  The ""Pro"" version is a little pricey on a hobbyist/indie developer budget, so you may want to do some thinking about whether the Pro version (a) is something you'd need for your game, and (b) worth the cost.  There's also the issue of revenue sharing; you'll have to look at the agreements and see if you are willing to submit to the terms of the license.  If you're an indie developer without a runaway hit on your hands, it's probably not going to be an issue, but if you take in enough money, you'll have to give Unity a cut.  (That falls into the category of ""nice problems to have"", though, so don't get too scared off of that - just be sure you understand what you're agreeing to.)  Luckily, Unity has a free trial, so you can take it for a test drive with only the time investment as your cost.  There are lots of great tutorials out there on how to use the IDE, but you'll probably want to set aside a weekend to really have some time to dig into the system and see if it's right for you.  Personally, I like both Unity and Sprite Kit.  There isn't a ""wrong"" choice here; both are perfectly viable for making games.  But they each have their strengths and weaknesses, so, as with most things, it's a matter of choosing the best fit for your particular needs rather than wondering which is objectively ""better""."
iOSProgramming,3bna6t,daviderosa,2,Tue Jun 30 19:54:01 2015 UTC,"Unity doesn't impose a revenue share model. If you earn more than $100.000/year you have to get a Pro license, but that's all."
iOSProgramming,3bna6t,onewayout,2,Tue Jun 30 20:45:37 2015 UTC,I've edited my post to reflect that.
iOSProgramming,3bna6t,aoakenfo,2,Tue Jun 30 21:15:45 2015 UTC,I recommend watching this tutorial video and browsing the rest of the live training. Unity is a different style of working and has a fantastic workflow.
iOSProgramming,3bna6t,LemonadeTrophy,2,Tue Jun 30 18:02:38 2015 UTC,Is there a website which tells you what apps use?  Similar to the website extension which tells you the frameworks they use.  I wouldn't mind seeing a comparison of games between unity and spritekit games.
iOSProgramming,3bna6t,helpfuldan,2,Tue Jun 30 18:29:27 2015 UTC,"If you are only ever going to make games unity has a lot of advantages. If you plan to create other apps and want to learn about the iOS platform, obviously go with spritekit.   When you use unity, you get better at unity, and you can make more games. Getting good with objc/swift/Xcode/iOS lets you make more games and of course apps. If I was 100% games id probably pick unity. It's really powerful."
iOSProgramming,3bozod,FickleFred,2,Tue Jun 30 23:47:08 2015 UTC,Yes!!!  I am taking an app I built using Core Data and incorporating Parse for backend data management. It's pretty cool stuff and they take the headache out of a lot of stuff you would have to build otherwise.
iOSProgramming,3bozod,succeededcoma,1 point,Wed Jul 1 02:21:13 2015 UTC,That's awesome to hear! Seems it's recommended quite a bit on this sub so I'll definitely give it a shot. Do you need to know objective-C to use it or can you work off of swift?
iOSProgramming,3bozod,succeededcoma,1 point,Wed Jul 1 13:29:03 2015 UTC,Parse and Swift work well together.  Check this out: Parse and Swift
iOSProgramming,3bozod,JaxJags,2,Wed Jul 1 15:05:57 2015 UTC,"Parse is good for starting out, but when you expand, you should make your own backend. Going from parse to AWS for a backend saw great performance benefits and piece of mind. Also, their support isn't the best (for what I've experienced)."
iOSProgramming,3bozod,brainded,1 point,Wed Jul 1 21:57:05 2015 UTC,I would say if you don't have much experience in development then Parse is going to be your best friend. Or at least a service like parse that abstracts your backend into a service you just configure and use. Building a secure and responsive backend isn't easy and putting that burden on someone else will save you on the short term. If your app takes off you can migrate later. Security is as good as you define it which just means you have a little learning to do on ACLs in parse. Also you can use it to develop some more complex backend Apis with their cloud code solution.
iOSProgramming,3bmjzo,bitrise,2,Tue Jun 30 12:50:48 2015 UTC,This looks promising! Does it support Apple TestFlight deployment?
iOSProgramming,3bmjzo,jam510,2,Tue Jun 30 13:36:21 2015 UTC,"Sure, we have iTunes Connect integration with Deliver and Shenzen. Check all integrations here: https://www.bitrise.io/steplib/bitrise Thanks for the feedback! :)"
iOSProgramming,3bmjzo,jam510,2,Tue Jun 30 14:27:20 2015 UTC,"Awesome! I search for TestFlight and didn't see it. Great work, I'm going to get our team up and running on this platform this afternoon."
iOSProgramming,3bmjzo,brendan09,1 point,Tue Jun 30 15:24:46 2015 UTC,"Great! If you have any questions or just want to chat, you can find the team in our slack room: chat.bitrise.io ;) Happy building!"
iOSProgramming,3bmjzo,StunnerAlpha,1 point,Tue Jun 30 15:32:17 2015 UTC,"I've been using bitrise for a while. Great service, really flexible, and unbelievably easy to use.  Glad you guys were featured!"
iOSProgramming,3bnr20,makarovx,1 point,Tue Jun 30 18:17:44 2015 UTC,This seems like it's going to be really difficult. Firstly you need to get access to the users emails. There's a gmail API which I guess you can use for this but due to the authorisation mechanism it's probably going to be a bit tough to get going.  After that you have the problem of identifying which email's are newsletters. I guess the 2 options are a whitelist of known newsletter email addresses or a machine learning algorithm which can categorise an email as a newsletter. The first is going to be impossible to keep up to date and the second is a huge chunk of work if you don't know what you're doing.
iOSProgramming,3bodyv,chicken21200,1 point,Tue Jun 30 20:59:58 2015 UTC,"This is a problem you do not want to solve with polling. Polling from the clients simply doesn't scale. Unfortunately as far as I know mysql does not have any good way of providing real-time notifications of table changes (compare PostgreSQL's LISTEN/NOTIFY).  Your best bet is to do the polling on the server side (in a single process), and use APNS or some other technique to get updates to the clients."
iOSProgramming,3bodyv,neverbetterthanks,1 point,Wed Jul 1 01:40:35 2015 UTC,what about MySQL triggers? is there a solution there?
iOSProgramming,3bodyv,nkgentile,1 point,Wed Jul 1 02:58:49 2015 UTC,"I don't think the trigger provides a way to ""escape"" the database, getting the information to a consumer outside of the database."
iOSProgramming,3bodyv,neverbetterthanks,1 point,Wed Jul 1 04:33:54 2015 UTC,"To be fair, 'a php script' hosted on GoDaddy doesn't scale either."
iOSProgramming,3bntfp,succeededcoma,3,Tue Jun 30 18:34:23 2015 UTC,IB UI elements are the same as those created in code. You can modify them in code.  You can create them in IB and modify them or customize them as needed anytime after -awakeFromNib in the lifecycle.
iOSProgramming,3bntfp,brendan09,3,Tue Jun 30 19:07:19 2015 UTC,Yes you can change the class of your UIView or UIButton to something you've created yourself in IB. This is a very common way to do things.  You could also use IB_DESIGNABLE to show the changes you made to the standard UI object on top of what you did in IB. This allows you to see the changes in code from within IB. It costs a fair amount of resources but it can save you from launching your app over and over to see the changes.  I always do everything in Interface Builder and write code in specialised classes wherever needed. Subclassing your view items is a very good practice as you really do not want code concerning how things should look in any controller class.
iOSProgramming,3bm4qx,bpoplauschi,1 point,Tue Jun 30 09:35:17 2015 UTC,"So, any plans to ad support for SFSafariViewController? The API looks wildly different, but this will obviously be the dominant web view in iOS 9."
iOSProgramming,3bm4qx,skilless,1 point,Tue Jun 30 14:28:29 2015 UTC,"Not necessarily.  SFSafariViewController is an entire view controller. It replaces other custom browser view controllers.  UI/WKWebView are views themselves. They're probably done being used as part of custom browser view controllers for apps like mine, but they still have their place in other parts of some apps for sure!"
iOSProgramming,3bm4qx,ThePantsThief,1 point,Tue Jun 30 18:09:17 2015 UTC,"Agree, SFSafariViewController is not a competitor for WK/UIWebView. It can be used to create an in-app browsing experience, but there will be cases where a *WebView is what we need. Plus, it's only available from iOS9, so for older systems we still need the 2 webviews."
iOSProgramming,3bm4qx,eimantas,1 point,Wed Jul 1 04:50:24 2015 UTC,"About future plans, we will be looking closer at SFSafariVC and if we find common ground, we might add support for that in the library."
iOSProgramming,3bm4qx,xkcd_transcriber,-3,Wed Jul 1 04:51:32 2015 UTC,https://xkcd.com/927/
iOSProgramming,3bkqq5,aoakenfo,1 point,Tue Jun 30 00:47:38 2015 UTC,"I would be willing to do a series of video tutorials about it, walking the user step-by-step through the creation process. However, that is no small amount of work. Perhaps a Kickstarter if there was enough interest."
iOSProgramming,3bkqq5,succeededcoma,4,Tue Jun 30 05:46:11 2015 UTC,Just wow. Thats amazing. I really like it.
iOSProgramming,3bkqq5,eimantas,1 point,Tue Jun 30 18:19:05 2015 UTC,This is really impressive! What hardware was that on?
iOSProgramming,3bkqq5,Faeynrir,1 point,Tue Jun 30 02:38:37 2015 UTC,iPad Air 2
iOSProgramming,3bkqq5,lucasvandongen,1 point,Tue Jun 30 08:04:40 2015 UTC,Very nice!
iOSProgramming,3bkqq5,wundaii,1 point,Tue Jun 30 18:03:54 2015 UTC,That's just amazing.
iOSProgramming,3bkqq5,heathbar24,1 point,Tue Jun 30 08:24:57 2015 UTC,This is really cool!  Do the photos move with your finger when you swipe them down?
iOSProgramming,3bmy40,ThePantsThief,1 point,Tue Jun 30 14:51:12 2015 UTC,OBJC_ROOT_CLASS expands to __attribute__((objc_root_class)). It's only defined as nothing if the clang you're building with doesn't have it available.  /* objc/objc-api.h */ #if !defined(OBJC_ROOT_CLASS) #   if __has_attribute(objc_root_class) #       define OBJC_ROOT_CLASS __attribute__((objc_root_class)) #   else #       define OBJC_ROOT_CLASS #   endif #endif
iOSProgramming,3bmy40,NSCFType,2,Tue Jun 30 16:37:09 2015 UTC,Ah. I was looling through the docs and it just said #define OBJC_ROOT_CLASS
iOSProgramming,3biu9t,jam510,2,Mon Jun 29 16:10:47 2015 UTC,I also took the headers and generated some unofficial documentation for UI Testing.
iOSProgramming,3biu9t,tjgrant,1 point,Mon Jun 29 23:07:00 2015 UTC,"Thanks for doing this investigation!  I'm curious to see something like a tutorial on how to do this from start to end on a project, but regardless, this is a great start."
iOSProgramming,3bj54f,jakemarsh,1 point,Mon Jun 29 17:30:04 2015 UTC,Nice work!  Maybe you could include a link in the comments to your website? So we can copy the code.
iOSProgramming,3bj54f,megablast,3,Tue Jun 30 05:14:44 2015 UTC,http://twitter.com/lilbitesofcocoa
iOSProgramming,3bj54f,joefarish,1 point,Tue Jun 30 09:48:36 2015 UTC,thanks!
iOSProgramming,3bj54f,mistermagicman,1 point,Tue Jun 30 17:31:39 2015 UTC,"I'd love to but unfortunately I can't, see here for the story: http://www.reddit.com/r/iOSProgramming/comments/3az3sr/little_bites_of_cocoa_23_corespotlight/csiyjbj?context=3"
iOSProgramming,3blxfa,alt51,3,Tue Jun 30 07:49:56 2015 UTC,"Although not exactly relevant, but still:  I have developed an application that has strict location restrictions (license per country, etc). And if user was opening an application in a country where there is no license for app publisher - user would see the notices about it.  I have stated in review notes that the app is strictly geofenced. Apple did not have any problems with that as long as you are clear on what your application does (or where it is supposed to work)."
iOSProgramming,3blxfa,eimantas,1 point,Tue Jun 30 08:00:06 2015 UTC,"Great, thanks so much for the advice."
iOSProgramming,3blxfa,AJGolf1976,2,Tue Jun 30 08:08:27 2015 UTC,"You will not get rejected for having an app that is local to one state, heck, I have seen apps that have been local to a county fair or something like that. So not an issue."
iOSProgramming,3blxfa,Clipstuh,2,Tue Jun 30 18:17:53 2015 UTC,"I developed an app specific to a university, you'll be fine."
iOSProgramming,3blxfa,onewayout,2,Tue Jun 30 19:09:03 2015 UTC,"We have a gardening app that lists information specific to our state only, and never had a problem getting it approved.  As long as you're up front about the geographic specificity of your app, you should be fine."
iOSProgramming,3blswu,ThePantsThief,1 point,Tue Jun 30 06:49:55 2015 UTC,Every object pointer points to location in memory where the objects contents start. With a copy this content is copied to another space in memory and a new pointer assigned to the new property you declared. With get its different. You just get a copy of the pointer pointing to the same location in memory.
iOSProgramming,3blswu,15458434,1 point,Tue Jun 30 07:37:42 2015 UTC,It also states that you have to free() the memory occupied by variable that is created with copy method.  Related: Ownership policy
iOSProgramming,3blswu,eimantas,0,Tue Jun 30 08:01:53 2015 UTC,In objective-c code and if you're using non-arc code or with Core Foundation types yes. But when using objects or Swift you don't have to. Arc will take care of that.
iOSProgramming,3blswu,15458434,1 point,Tue Jun 30 10:20:33 2015 UTC,"These aren't CF types, these are C types :P Does anyone happen to know how you can manage the memory of the variable returned by the copy method in Swift?"
iOSProgramming,3blswu,15458434,1 point,Tue Jun 30 13:46:30 2015 UTC,"Yes, take a look at UnsafePointer<T>. If you need some example code let me know."
iOSProgramming,3blswu,15458434,1 point,Tue Jun 30 22:18:51 2015 UTC,"So, they do the same thing in different ways? Why does copyAttribteList return objc_property_attribute_t and the other returns a char*?  Edit: oh, does copyAttributeList just return a struct pointer where the struct carries the same information as getAttributes? ie ""Tc,Vmychar"" vs a struct where type = ""c"" and name = ""myChar""?"
iOSProgramming,3blswu,eimantas,1 point,Tue Jun 30 13:18:29 2015 UTC,I don't think it's the same thing. When copied you get a physically different object with the same contents. Which means you don't have to worry for example about thread safety when accessing from the other property.
iOSProgramming,3bkm8h,sleepyfloydshaan,5,Tue Jun 30 00:09:40 2015 UTC,Get rid of the launch screens for iPhone 6 including the LaunchScreen.xib and it will just scale up the iPhone 5 version.
iOSProgramming,3bkm8h,askoruli,1 point,Tue Jun 30 00:24:44 2015 UTC,Hmm... that didn't work. I deleted the LaunchScreen.xib entirely. Instead of scaling it just added white space around.
iOSProgramming,3bkm8h,askoruli,2,Tue Jun 30 03:41:09 2015 UTC,Try adding a LaunchImage asset with just the 2x and Retina 4 images.
iOSProgramming,3bkm8h,askoruli,1 point,Tue Jun 30 03:48:18 2015 UTC,http://imgur.com/wICr2Bt That is what it looks like. I am using a file that is 640x960 in 2x and 640x1136 image in retina but still no luck.
iOSProgramming,3bkm8h,askoruli,2,Tue Jun 30 04:11:17 2015 UTC,"Launch screen file should be empty. You should have 2 images ,one that's 640 * 1136 and one that's 640 * 960. If that doesn't work then I'm out of ideas."
iOSProgramming,3bkm8h,ChristinaMltn,3,Tue Jun 30 04:13:14 2015 UTC,"When I removed the LaunchScreen.xib it defaulted to my main storyboard. That was causing the issue. Once I cleared out ""Launch Screen File"" completely, it ended up working. Thanks a bunch!!!"
iOSProgramming,3biq09,ThePantsThief,2,Mon Jun 29 15:38:33 2015 UTC,"I haven't tried this but it looks like you may be able to figure it out from the property type string.  https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtPropertyIntrospection.html  edit:  out of curiosity, why are you needing to find this out?  I am very curious as to the use case."
iOSProgramming,3biq09,Stsalomon90,1 point,Mon Jun 29 16:51:29 2015 UTC,"Really just curious. I'm getting into some C# for work and .NET has an entire Reflection framework (the PropertyInfo class specifically interests me), while all Objective-C has is the objc_XXX methods. I'm thinking about making a reflection framework for Cocoa.  Edit: I think this is just what I'm looking for. :) New project, here I come!"
iOSProgramming,3biqlv,succeededcoma,3,Mon Jun 29 15:43:12 2015 UTC,"I believe it's iOS 6.0, as you can still set the deployment target to that operating system in Xcode 7."
iOSProgramming,3biqlv,FR_STARMER,1 point,Mon Jun 29 15:49:22 2015 UTC,I would assume then its safe to say whatever the minimum version that Xcode will let you build for is most likely the minimum version Apple would expect although I would expect that they would rather you develop for the latest and greatest.
iOSProgramming,3biqlv,awnton,1 point,Mon Jun 29 15:50:33 2015 UTC,"I don't have the source on me but Apple actually recommends targetting the last two major versions. Right now 7 and 8, and in the fall 8 and 9."
iOSProgramming,3biqlv,MrSloppyPants,3,Tue Jun 30 08:39:48 2015 UTC,"You can technically deploy an app that can support back to iOS 4.3 using Xcode 6.3.2. As long as you are not using any API calls that are unsupported, you could easily deploy an app that supports all the way back to 4.3 if you wanted."
iOSProgramming,3biqlv,MrSloppyPants,1 point,Mon Jun 29 17:41:01 2015 UTC,Interesting and good information to know.
iOSProgramming,3biqlv,Power781,3,Mon Jun 29 18:34:57 2015 UTC,"Actually, with the new 64-bit only restriction on App Store submissions, I may be mistaken there. If Apple is preventing you from uploading 32-bit only builds, then you are limited to devices that can run 64-bit binaries, which raises the floor to iOS 6 then.  Sorry about that!"
iOSProgramming,3biqlv,MrSloppyPants,1 point,Mon Jun 29 19:07:53 2015 UTC,No worries. I didnt think about that. But it seems to make more sense. :)
iOSProgramming,3biqlv,15458434,1 point,Mon Jun 29 19:09:33 2015 UTC,"The build will still have 32 bits slices, so it is possible. It only depends of your ARCHS flag"
iOSProgramming,3biqlv,MrSloppyPants,2,Mon Jun 29 19:37:16 2015 UTC,"As of today yes, but any apps that are built with the iOS 9 SDK will need to be 64-bit only, as per Apple @ WWDC this year."
iOSProgramming,3biqlv,15458434,1 point,Mon Jun 29 20:09:10 2015 UTC,"No, the binary needs to support 64-bit. 32-bit can still be present because of the iPhone 4s, 5 and iPad 2 and retina"
iOSProgramming,3biqlv,MrSloppyPants,1 point,Tue Jun 30 07:42:52 2015 UTC,Turns out it's a developer option to remove support for 32-bit devices.   http://9to5mac.com/2015/06/10/ios-9-older-devices-lose-support-apps/
iOSProgramming,3biqlv,tjgrant,1 point,Tue Jun 30 13:05:28 2015 UTC,I think it was already possible to exclude hardware. Especially on hardware level. In this case I mean things like non Touch ID hardware or non cellular for example but I haven't looked at it.
iOSProgramming,3biqlv,15458434,1 point,Tue Jun 30 22:16:14 2015 UTC,It wasn't actually. Not officially anyway. This is the first time Apple has authorized the targeting of devices specifically rather than OS versions.
iOSProgramming,3bjsfd,huzziii,4,Mon Jun 29 20:14:30 2015 UTC,It's a one page app. 75 lines of code? I don't think God will judge you harshly for copying/pasting a block of code a few times. iOS developers are the only community I know of that care as much about how the code looks as the app itself. And let's just say a lot of devs need to be slightly more focused on the app.
iOSProgramming,3bjsfd,helpfuldan,1 point,Mon Jun 29 20:43:19 2015 UTC,"What /u/helpuldan said.  However if you just want to the least amount of code possible. Perhaps try putting your timers into a dictionary.  So you could have a method called timerWithName: and in there check if a timer already exists with that name, if so, return it, if not, create it and add it to the dictionary.   Can't help much more without know what this one page app actually does."
iOSProgramming,3bjsfd,Kasuist,1 point,Tue Jun 30 01:15:52 2015 UTC,Step 1: Make it work. Step 2: Make it work better.   I think you are focusing on Step 2 before you finish Step 1.
iOSProgramming,3bjbp7,LaserWolfTurbo72,2,Mon Jun 29 18:16:59 2015 UTC,Hopefully you find this blog post I wrote helpful: http://h4ckish.com/2015/01/22/renaming-your-cocoapods-ios-project/
iOSProgramming,3bjbp7,StunnerAlpha,1 point,Tue Jun 30 04:11:36 2015 UTC,"You can change your product name and bundle display name without changing the target / workspace / project / scheme name settings.  You can do it in your Plist or your build configuration. In your plist it's ""Bundle Display Name""."
iOSProgramming,3bjbp7,brendan09,1 point,Mon Jun 29 21:47:33 2015 UTC,"What is ""${PRODUCT_NAME}"". Is it essentially a var which can be set elsewhere, and then used throughout the plist?"
iOSProgramming,3bjbp7,brendan09,1 point,Mon Jun 29 22:09:29 2015 UTC,"Yep! You can change in your build settings, or just replace the variable with a string."
iOSProgramming,3bjbp7,brendan09,1 point,Mon Jun 29 22:32:54 2015 UTC,"Yep! You can change in your build settings, or just replace the variable with a string.   Replaced the var. Am I correct in thinking I cannot change my bundle identifier at this point. Sorry not bundle identifier. App ID. Can I no longer change it, it doesn't appear I can in the Member Center."
iOSProgramming,3bjbp7,brendan09,1 point,Mon Jun 29 22:53:06 2015 UTC,"Nope App IDs are permanent. But, you could always delete it and make a new one."
iOSProgramming,3bi8xp,a7x802,2,Mon Jun 29 13:08:39 2015 UTC,just add the link to the stacks post in your post text above ?
iOSProgramming,3bi8xp,criosist,1 point,Mon Jun 29 13:34:06 2015 UTC,Thanks i'll do that
iOSProgramming,3bi8xp,criosist,1 point,Mon Jun 29 13:37:41 2015 UTC,"i dont really know anything about spritekit lol, I would have tried to help otherwise :P I would add spritkit to the title"
iOSProgramming,3bi8xp,nuudlez,1 point,Mon Jun 29 14:07:14 2015 UTC,"Where is your touchesBegan code? In your view controller? Scene? Node? If you put a breakpoint or a log in your touchesBegan method, do you break or log? Could it be a userInteractionEnabled flag?"
iOSProgramming,3bhpl3,StunnerAlpha,5,Mon Jun 29 08:55:57 2015 UTC,"Why don't you just turn on VoiceOver? I turned it on and the accessibility label is ""Take Picture"".  To turn on VoiceOver, Setting ... General ... Accessibility.   The accessibility inspector is for the Simulator."
iOSProgramming,3bfnhq,criosist,7,Sun Jun 28 20:20:35 2015 UTC,You won't find any Apple code of slide out menus as Apple does not consider the use of slide out menus as part of its GUI guidelines
iOSProgramming,3bfnhq,xephos13,1 point,Sun Jun 28 20:26:37 2015 UTC,"Yeah, I've looked and figured this was the case. I was hoping that someone had a good third-party implementation available that was extremely noob-friendly."
iOSProgramming,3bfnhq,ArvoHeikki,2,Sun Jun 28 20:36:55 2015 UTC,"With the future release of iOS 9 having the ability on iPad for Slide Over and Multitasking, she may want to rethink the ""hamburger"" menu design.  I can speak first hand using apps the have slide menus while using Slide Over or MT is a nightmare for user experience.  Just my two cents.  If she can use a tab bar or some other navigational paradigm that isn't a slide out ""hamburger"" menu, she should pursue that."
iOSProgramming,3bfnhq,raq0915,1 point,Sun Jun 28 22:22:46 2015 UTC,"huh, i'll definitely talk to her about that. I'm not familiar with iOS 9 at all though; if you could provide a link or two at your convenience I'd really appreciate it! That way I could read up on it and have some material for her to read up on as well."
iOSProgramming,3bfnhq,raq0915,1 point,Sun Jun 28 22:42:40 2015 UTC,"I have to agree with this, the hacky slide-out thing was novel for a few minutes, but it's not very intuitive from a user experience perspective. The whole thing with tapping in the narrow strip on the side to make the menu retract is particularly clumsy."
iOSProgramming,3bfnhq,raq0915,4,Mon Jun 29 06:27:27 2015 UTC,"I had the same issue a few weeks ago. Look up Jared Davidson on Youtube. He can teach you how to do it, and if you really dont have a lot of free time, you can download his project files and just edit them"
iOSProgramming,3bfnhq,raq0915,1 point,Sun Jun 28 21:02:23 2015 UTC,"wow, thanks so much! video guides are super helpful for a noob like me :D"
iOSProgramming,3bfnhq,lyinsteve,1 point,Sun Jun 28 22:41:47 2015 UTC,"No problem man. If you choose to download the project files, just be sure you change the cell names and view controller names to whatever you need"
iOSProgramming,3bfnhq,LaserWolfTurbo72,1 point,Sun Jun 28 23:03:02 2015 UTC,"To confirm, is this the video you found?  https://www.youtube.com/watch?v=5SUV1YY2yxQ"
iOSProgramming,3bfnhq,LaserWolfTurbo72,1 point,Mon Jun 29 00:07:07 2015 UTC,"I was actually referring to his swift tutorial, but now that I reread your post, you are using C. My B. If you are creating the app from scratch, I suggest using his tutorial for Swift. But that is basically the video I was referring to"
iOSProgramming,3bfnhq,LaserWolfTurbo72,1 point,Mon Jun 29 01:07:02 2015 UTC,Ahh gotcha. I'll definitely be trying out more things in the future so I'll keep his Swift tutorial bookmarked:P
iOSProgramming,3bfnhq,LaserWolfTurbo72,2,Mon Jun 29 01:14:35 2015 UTC,"I just started programming a month ago, and if I've learned anything, its this: if you are going to develop for iOS, get used to Swift. Swift is honestly very easy to learn, and its the best for dev"
iOSProgramming,3bfnhq,ThePantsThief,1 point,Mon Jun 29 01:16:48 2015 UTC,"Thing is her project is already in C, so I can't switch at this point :/  I'll definitely be using Swift next time I approach an iOS project though."
iOSProgramming,3bfnhq,ThePantsThief,1 point,Mon Jun 29 01:20:51 2015 UTC,Are you sure it's C and not Objective-C?  You literally cannot write an iOS app in pure C unless you use only Objective-C runtime calls.
iOSProgramming,3bfnhq,ThePantsThief,2,Mon Jun 29 02:01:50 2015 UTC,Ah apologies - I meant Objective C. Bad habit of referring to it as just C.
iOSProgramming,3bfnhq,ThePantsThief,2,Mon Jun 29 02:16:37 2015 UTC,"When I was also brand new I decided to use a 3rd party GitHub project, ECSlidingViewController. Liken the road I paid for it dearly numerous times (for one, it doesn't work with hidesBottomBarWhenPushed which has caused me some grief). I wish I had done it myself. One day when I get a chance I'll rewrite it.  Anyway I'm no expert but I'd do it like this.   Side by side views or tableviews or whatever you want. Then using constraints, animation, and pan gestures, you could easily whip one up.   If you want some code let me know and I can paste some. I'm in mobile right now."
iOSProgramming,3bfnhq,ThePantsThief,1 point,Mon Jun 29 02:55:20 2015 UTC,"Wow, this is great! It's kinda hard to know where to start so your comment is much appreciated :)  If you had a starting point in code that would be great. With XCode I'm just like ""wtf am i doing where do i even start"" since there are so many ways to organize projects and views and whatnot"
iOSProgramming,3bfnhq,irvene2000,1 point,Mon Jun 29 03:58:33 2015 UTC,"Ok. I think I can probably get to this tomorrow. What do you have in the mind for the main view, and the slideout menu view? Both TableViewController's, or something else?"
iOSProgramming,3bh86l,cboath,9,Mon Jun 29 05:01:45 2015 UTC,You're probably using the '.m' and '.h' templates separately. Use the 'Cocoa Touch Class' template and it will create both for you.
iOSProgramming,3bh86l,ProgrammingThomas,2,Mon Jun 29 05:40:34 2015 UTC,A .h file is a .header file. It says in my equally named .m file you can find these things. And in the .m file the actual code implementation is present. This is an old inheritance from ANSI C where Objective-C is derived from. Everything present in the .m file and not in the .h file is hidden from the outside. The .h file you can import that one in the .h and .m file where the code is needed.
iOSProgramming,3bh86l,15458434,1 point,Mon Jun 29 06:55:43 2015 UTC,Great.  Thanks a lot!  I'll give it a shot.
iOSProgramming,3bf0nk,GilesDMiddleton,4,Sun Jun 28 17:06:31 2015 UTC,"This is from Apple's site:    iAd revenue is determined by volume of ad requests (impressions), the percentage of those requests that are filled with ads, and the effective revenue per thousand filled impressions (eCPM). You can control the ads that will appear in your apps directly from the Actions drop down in the table below. Monthly payments to you are based on Apple's fiscal month."
iOSProgramming,3bf0nk,succeededcoma,2,Sun Jun 28 18:29:49 2015 UTC,Depends on the iAd. Companies can create all kinds of iAds with iAd workbench. I'm not sure what Apples guidelines are for ads though. What I do know all the other stuff in the Ad you can't control. It's just delivered content for you.
iOSProgramming,3bec3h,jarvis_willy,2,Sun Jun 28 12:48:33 2015 UTC,Documentation shows it pretty clearly.
iOSProgramming,3bec3h,tangoshukudai,0,Sun Jun 28 13:29:53 2015 UTC,"It has nothing to do with any watch APIs. Just access that through HealthKit, and follow one of any number of HealthKit tutorials online.  Apple provides no access to real-time heart rate data."
iOSProgramming,3bec3h,DiseasesFromMonkees,2,Sun Jun 28 15:45:08 2015 UTC,"Take advantage of all new features, such as programmatic access to the Digital Crown for simpler item selection and animation APIs for fluid and more dynamic user interfaces. Employ new ways to play audio and video, and use the microphone to record audio directly from Apple Watch. With access to the Taptic engine, you can add haptic feedback in your Apple Watch apps. watchOS 2 also includes many enhancements to other existing frameworks such as HealthKit, enabling access to the health sensors that access heart rate and health information in real-time. CoreMotion enhancements include the ability to use the accelerometer to create engaging experiences on Apple Watch - https://developer.apple.com/watchos/pre-release/"
iOSProgramming,3bcei7,ThePantsThief,7,Sat Jun 27 21:59:46 2015 UTC,"Setting the shadow image is how you get rid of it but you also have to set the navigation bar's background image. I typically hide the shadow image with something like this:  [[UINavigationBar appearanceWhenContainedIn:[UINavigationController class], nil]      setBackgroundImage:[UIImage imageNamed:@""navBarBG""] forBarMetrics:UIBarMetricsDefault];  [[UINavigationBar appearanceWhenContainedIn:[UINavigationController class], nil] setShadowImage:[UIImage new]];//only works when background image is also set   EDIT: I see a lot of comments saying to iterate through the subviews and remove it. I highly suggest you don't do that in any situation unless absolutely necessary. You don't know if that subview will always be at the expected index or be of the expected class - Apple could change it at any time."
iOSProgramming,3bcei7,AJ_at_Fuzz,2,Sun Jun 28 02:48:55 2015 UTC,I'm using searchBar.barStyle = UIBarStyleBlackOpaque. I've tried:   self.navigationController.navigationBar.shadowImage = nil / [UIImage new] self.navigationController.navigationBar.layer.shadowOpacity = 0 searchBar.layer.shadowOpacity = 0
iOSProgramming,3bcei7,johnwickham,2,Sat Jun 27 22:01:19 2015 UTC,It's just an annoying behavior of UINavigationBar. I use this to clip it off:  for (UIView *view in self.navigationController.navigationBar.subviews) {     for (UIView *view2 in view.subviews) {         if ([view2 isKindOfClass:[UIImageView class]]) {             [view2 removeFromSuperview];         }     } }
iOSProgramming,3bcei7,brendan09,1 point,Sat Jun 27 22:35:56 2015 UTC,This is hacky at beast and very prone to breaking between OS releases.  You should use the -shadowImage property to remove it (in conjunction with a background image).
iOSProgramming,3bcei7,johnwickham,1 point,Mon Jun 29 02:41:04 2015 UTC,"You're absolutely right, I just hate having the background image for some reason… but this does feel unstable."
iOSProgramming,3bcei7,Lurky036,1 point,Mon Jun 29 12:43:45 2015 UTC,"Try self.navigationController.navigationBar.clipsToBounds = YES  The API states that setting shadowImage to nil causes it to use the default ""shadow"". What it actually is is a small view just below the navigation bar.  It looks odd because of the colours being used, though its supposed to black (0.3 alpha), not grey…"
iOSProgramming,3bcei7,dcpc10,1 point,Sat Jun 27 22:34:22 2015 UTC,"That didn't solve it, but it sure did make the status bar disappear O_o I'm not sure it has anything to do with the shadowImage property now. Do shadow images have to be a certain dimension? I'm gonna test some other ones."
iOSProgramming,3bcei7,basthomas,1 point,Sat Jun 27 23:16:52 2015 UTC,"I created a thread about this recently, however no fixes worked for me: https://www.reddit.com/r/iOSProgramming/comments/39mpcw/how_to_get_ride_of_hairline_below_uinavigationbar/"
iOSProgramming,3be21m,Makegooduseof,10,Sun Jun 28 10:00:39 2015 UTC,"There are production applications written in Swift, its enough. However being able to read basic objective-c syntax will be a big help when using 3rd party libraries. However that will happen when you have been working a while."
iOSProgramming,3be21m,Eamonn-Dunne,6,Sun Jun 28 10:58:10 2015 UTC,"Yes, go with Swift. One big reason to do this, beyond any strengths or weakness of the language itself, is that the best new iOS learning materials are using Swift. Adoption is happening very, very quickly at this point. If you're making iOS apps as a hobby, you'll do yourself a disservice by focusing first on a relic like Objective-C. This isn't to say that Objective-C knowledge can't come in handy, just that a hobbyist has no immediate reason to learn it over Swift."
iOSProgramming,3be21m,ArvoHeikki,2,Sun Jun 28 11:00:52 2015 UTC,Solid advice.
iOSProgramming,3be21m,ThePantsThief,1 point,Mon Jun 29 05:29:59 2015 UTC,Yes to the title.
iOSProgramming,3be21m,finn_thehuman,-1,Mon Jun 29 02:17:08 2015 UTC,"Well, Apple is going to drop Objective-C eventually. The current framework are all written in Objective-C. Based on that. Learn Swift there is eventually no way around it, but currently you would need some Objective-C knowledge as well."
iOSProgramming,3be21m,15458434,5,Sun Jun 28 14:18:14 2015 UTC,"If Apple drops Objective-C it will happen slowly, on magnitude of a decade.   Probably Apple will keep Objective-C fully supported until... well my bet would be 128 bit computers, (or a processor architecture after the ARM switch). This is based on the past, where you can still write Carbon programs to this day (a tech that was deprecated around the time of the Intel transition.) But these programs are 32 bit only and Apple finally (after 10-15 years of deprecation notices) stopped supporting the Carbon networking stack (Open Transport). Granted this was a little sudden and left some companies scrambling when Apple finally broke people.  For a while - the next 5 years or so I'd say - most pro devs will be using both: introducing Swift into an existing Obj-C code base or a ""90% of the app is in Swift, here in 2021, but there's still the FoobarManager we just never got around to rewriting because..."". That session in WWDC 2015 about integrating Swift into your Objective-C apps was really good.  But for hobby stuff, if you had to choose? Use Swift as your learning language and learn enough Objective-C to sight read it: (oh, I kind of see what this sample code is doing, I'll just translate it into Swift though...). Swift has good tools for learning (playgrounds), and it is the future/new hotness."
iOSProgramming,3be21m,rwilcox,-1,Sun Jun 28 16:52:35 2015 UTC,It is now.
iOSProgramming,3be21m,aazav,-5,Sun Jun 28 13:21:44 2015 UTC,"""If you have aspirations to develop full time, learn Objective C, but if you don't, feel free to start with Swift.""    I'm pretty sure this has been debunked by now."
iOSProgramming,3be21m,CQH,4,Sun Jun 28 12:14:26 2015 UTC,"No, that's 100% true. Professional iOS devs need to know Objective-C. It'll remain the primary language for any responsible developer working on production software until Swift's language syntax and ABI are finalized.  Clients and companies don't want to pay for rewriting portions of their app every 1-2 months because a dev wanted to use the new big thing. Plus, just using Swift adds 8mb to your download size per binary since the ABI isn't stable."
iOSProgramming,3be21m,brendan09,1 point,Sun Jun 28 23:14:17 2015 UTC,"Lattner's little Pyramid of Doom showed some necessarily ugly Swift code that gets a lot prettier with 'guard', but it required updating by hand.  So, any experienced team is going to keep things up to date - meaning, start using Swift where it's manageable, and where it's not going to be a pain to update as things change."
iOSProgramming,3be21m,shiggie,2,Mon Jun 29 20:10:31 2015 UTC,"No experienced dev jumps on the bandwagon the second a new technology is announced. It's irresponsible.  There's being up to date, and then there's being on the bleeding edge. Bleeding edge is irresponsible for production or critical software.  Clients don't pay to have you spend hours on a large product fixing language changes....especially when there was a better option. Spending days refactoring large products every 1-2 months when the language changes is insanely dumb. When the language syntax and ABI is stable, it'll be time to consider it for production. Until then, no.  Plus, bundling the WHOLE Swift runtime because the ABI isn't stable is just ridiculous when you have to be conscious of download sizes.  Objective-C isn't deprecated or going away in the next decade. It isn't ""out of date"" to use Objective-C, probably won't be for more than a few years."
iOSProgramming,3be21m,brendan09,1 point,Mon Jun 29 20:19:51 2015 UTC,"I hear you.  Although, it seems like you just said the same thing you said the first time, and repeated some of what I said, but with more words, especially where I agreed with you."
iOSProgramming,3be21m,shiggie,1 point,Tue Jun 30 04:54:16 2015 UTC,"Somewhat, but I disagree with the premise of using it in some places. Projects split between languages is even more maintainability nightmare. Plus, 1 line of Swift instantly adds 10mb to your app's file size.  My point in general is avoid it with the exception of hobby projects or learning exercises."
iOSProgramming,3be21m,brendan09,1 point,Tue Jun 30 05:01:26 2015 UTC,"Swift gets ABI stability with iOS 9, and App Thinning means iOS 9 devices won't download the Swift runtime."
iOSProgramming,3be21m,lyinsteve,1 point,Mon Jul 6 03:56:08 2015 UTC,"No, it doesn't. It was rumored. Turned out it didn't."
iOSProgramming,3bbvn2,LaserWolfTurbo72,6,Sat Jun 27 19:07:49 2015 UTC,"Who are you? Three kids in Silicon Valley spending the summer pitching your startup to investors? Go with a brandable name like Uber.  If you are on your own, doing the microISV thing and don't have a huge deal of marketing power or ability, a descriptive name (e.g., Give Me a Lift) is more likely to get you at least some customers via organic means, and if the app is good, you might get some degree of success from there.  Brands are great. Building brands is however a lot of work."
iOSProgramming,3bbvn2,acangiano,2,Sat Jun 27 20:36:41 2015 UTC,This is really solid advice.
iOSProgramming,3bbvn2,first-timer-,1 point,Sun Jun 28 16:17:55 2015 UTC,"This is an excellent question and I'm curious to see what people think. I think a catchy name is better most of the time but I have no real sources for that. I'm just more likely to download something with a decent name and not ""Checklist notepad - free"""
iOSProgramming,3bbvn2,hagrids_a_pineapple,1 point,Sun Jun 28 15:57:40 2015 UTC,"Yeah, I think it's pretty tough to find quantifiable data on the subject.  I feel like you can really on speculate.  I think if your app isn't a game, and serves a sole purpose, the best possible name is either catchy-descriptive or descriptive. So if it's a note taking application, rather than ""Note Taker"", something like InstaNote (terrible cuz it's piggybacking, but just for example purposes), EverNote, etc. If you have a note taking app called WoozleWozzle, you're unlikely to garner any recognition IMO.  If on the other hand your app is game, in which a descriptive title could never be long enough to describe it, a catchy title is probably better. Or catchy-descriptive. Look at QuetzalCoatl. ColorSnake is descriptive, and maybe slightly catchy but not really. QuetzalCotal, without even knowing what it is, SOUNDS fun to download. And games don't really needs a description IMO.  But it's all speculation and nothing more than that."
iOSProgramming,3bbvn2,hagrids_a_pineapple,1 point,Sun Jun 28 16:16:38 2015 UTC,"I totally agree on the ""Catchy-Descriptive"". Make a name that is easy to remember but also fits in the subject somehow. Unless it's something you plan on making a business, I think theres a bit more flexibility. ""Twitter"" says nothing about what it actually does, but its so big people know anyway."
iOSProgramming,3beyft,amichail,40,Sun Jun 28 16:46:23 2015 UTC,Dafuq
iOSProgramming,3beyft,helpfuldan,7,Sun Jun 28 16:59:54 2015 UTC,You can think anywhere… I come up with solutions for stuff in the shower even
iOSProgramming,3beyft,ThePantsThief,4,Sun Jun 28 17:21:13 2015 UTC,What?  Get off the crack pipe.
iOSProgramming,3beyft,aazav,3,Mon Jun 29 04:13:59 2015 UTC,"That's an interesting point of view.  Look at it this way - with a MacBook, you can always take it with you if you want to work in a coffee. You can't do that with a desktop Mac (well maybe you can, but ...)  But, you can also LEAVE your MacBook at home and go for a walk and do some thinking. Having a MacBook means you have 1 option more. In the end, you must force yourself to think, don't leave that to external factors. :)"
iOSProgramming,3beyft,TheStigec,-6,Sun Jun 28 17:38:02 2015 UTC,But not having a MacBook would probably mean thinking more than you would otherwise.
iOSProgramming,3beyft,Rockytriton,6,Sun Jun 28 18:01:57 2015 UTC,"i'm guessing you are trying to win an argument with someone, just let it go, if having a laptop will stop you from thinking then you have other issues.  Also throw your iphone away if you have that problem."
iOSProgramming,3beyft,TheStigec,1 point,Sun Jun 28 18:35:18 2015 UTC,"Why? You can always leave it at home. Trust me, a lot of people I know went with desktop Macs and regretted after 2 months when they went on vacation. Or when they saw me work at a coffee shop. Or when they wanted to work on the balcony. Or the couch. Or... you get the idea. :)"
iOSProgramming,3beyft,hagrids_a_pineapple,3,Sun Jun 28 18:33:12 2015 UTC,Why could you not just leave the MacBook at home?
iOSProgramming,3beyft,tjgrant,8,Sun Jun 28 19:28:41 2015 UTC,"The latest iTunes service agreement says you have to take your MacBook with you at all times.  Personally I clicked ""decline."""
iOSProgramming,3beyft,hagrids_a_pineapple,1 point,Sun Jun 28 20:58:57 2015 UTC,Please tell me that's a weird joke
iOSProgramming,3beyft,SockPants,1 point,Sun Jun 28 21:02:00 2015 UTC,No. It's cheaper though.
iOSProgramming,3beyft,15458434,1 point,Sun Jun 28 17:26:12 2015 UTC,"The thing about coding I have with coding is, that I need screen estate for that. Documentation, simulator, Xcode, terminal, stackoverflow etc. That will get cramped on a small laptop screen. I solved this with a Cinema Screen at my work spot and I prefer to do coding mostly at that screen. But a quick hack on the way is always possible."
iOSProgramming,3beyft,th3phantom,1 point,Mon Jun 29 00:32:30 2015 UTC,Dafuqq!!!
iOSProgramming,3bdhvh,IAteTheTigerOhMyGosh,2,Sun Jun 28 04:43:26 2015 UTC,"A little bit of offtopic, I am sorry for not giving you the answer right away. I believe there's something wrong with setting bounds / frame.  Jokes apart, use autolayout. It's 2015, seriously. To do constraints programmatically easier, I recommend  the Purelayout pod. This way you can easily illiminate the layouting problems when you have this kind of issues"
iOSProgramming,3bdhvh,Ference,1 point,Sun Jun 28 10:42:55 2015 UTC,Thanks. It actually turned out that it was there the whole time. Just invisible.  The reason I didn't use autolayout is because I'll need to animate this toolbar. Everything else in this all but the toolbar is actually autolayout.Would you still recommend autolayout under this circumstance?
iOSProgramming,3bdhvh,Ference,1 point,Sun Jun 28 15:47:49 2015 UTC,"Yes, I still will. Autolayout constraints can be animated as easy as the view frame. With the one key and awesome difference: you no longer worry about screen sizes and orientation.   Also if you have anorher view pinned with autolayout to the view you are animating, it will get autoanimated to satisfy constraints as well. For example you have an autolayouted view with image and text inside (autolayouted inside as well). You can animate this view's size constraints. And its internals (image and text) will auto move and resize with animation automatically. It's really awesome"
iOSProgramming,3bdhvh,Ference,1 point,Sun Jun 28 16:02:43 2015 UTC,"To animate a constraint:  1) if constraint created with IB, just pull it onto the source file to create an outlet property. If created programmatically, just asiign it to a property manually  2) change the constant's constant within uiview animate block (similar to animating frame)"
iOSProgramming,3bdhvh,Lurky036,1 point,Sun Jun 28 16:07:21 2015 UTC,"Are you sure it's not there? I just tried this and the text field is indeed there (albeit, it's invisible).  UITextField by default has no border, and (I think) a clear background starting in iOS 7, so it may appear to be not there, but if you tap on the left-side of the toolbar it should bring up the keyboard and show the caret on the text field.  Try setting a background color or giving the text field a border and you should see it in the toolbar."
iOSProgramming,3bdhvh,15458434,1 point,Sun Jun 28 13:47:01 2015 UTC,AutoLayout prevents you from writing to bounds and frame properties. Either switch AutoLayout off or just define a width or height NSLayoutConstraint. BTW. There is a nice WWDC video about it.
iOSProgramming,3bbczg,LaserWolfTurbo72,1 point,Sat Jun 27 16:23:17 2015 UTC,Have you tired asking on stack exchange?
iOSProgramming,3bbczg,raznog,1 point,Sat Jun 27 19:24:20 2015 UTC,I would try stackoverflow for this kind of question.
iOSProgramming,3bbczg,15458434,1 point,Mon Jun 29 00:33:51 2015 UTC,"LaserWolfTurbo72, any luck?  I am stuck in the same problem in iOS 9 beta devices."
iOSProgramming,3bbczg,sanniv,1 point,Mon Jun 29 17:21:25 2015 UTC,"Yeah, it appears the old transactionreceipt is deprecated, and therefore the return receipt json structure has also changed.   Do 2 things. 1) Use itunes-receipt project on github. Then print the entire receipt.to_json. Then you just need to parse/iterate the json, looking in the ""in_app"" element. The json will look something like this...  Notice the receipt json element fields are all empty (which is why venice is returning everything nil). You need to look inside the ""in_app"" for all the purchases ever made.  receipt =     {   ""adam_id"" = 0;   ""app_item_id"" = 0;   ""application_version"" = ""1.0"";   bid = ""<null>"";   ""bundle_id"" = ""com.LaserWolfTurbo72.WidgetTracker"";   bvrs = ""<null>"";   ""download_id"" = 0;   ""expires_date"" = ""<null>"";   ""in_app"" =         (           {           ""adam_id"" = ""<null>"";           ""app_item_id"" = ""<null>"";           ""application_version"" = ""<null>"";           bid = ""<null>"";           ""bundle_id"" = ""<null>"";           bvrs = ""<null>"";           ""download_id"" = ""<null>"";           ""expires_date"" = ""<null>"";           ""in_app"" = ""<null>"";           ""is_trial_period"" = false;           ""itunes_env"" = production;           latest = ""<null>"";           original = {               ""adam_id"" = ""<null>"";               ""app_item_id"" = ""<null>"";               ""application_version"" = ""<null>"";               bid = ""<null>"";               ""bundle_id"" = ""<null>"";               bvrs = ""<null>"";               ""download_id"" = ""<null>"";               ""expires_date"" = ""<null>"";               ""in_app"" = ""<null>"";               ""is_trial_period"" = ""<null>"";               ""itunes_env"" = production;               latest = ""<null>"";               original = ""<null>"";               ""product_id"" = ""<null>"";               ""purchase_date"" = ""2015-06-27T00:29:23.000+00:00"";               ""purchase_date_ms"" = 1435364963000;               ""purchase_date_pst"" = ""2015-06-27T01:29:23.000+00:00"";               quantity = ""<null>"";               ""receipt_data"" = ""<null>"";               ""request_date"" = ""<null>"";               ""request_date_ms"" = ""<null>"";               ""request_date_pst"" = ""<null>"";               ""transaction_id"" = 1000000161078715;               ""version_external_identifier"" = ""<null>"";                 };           ""product_id"" = ""com.LaserWolfTurbo72.RotoFeed.widgetproduct4"";           ""purchase_date"" = ""2015-06-27T00:29:23.000+00:00"";           ""purchase_date_ms"" = 1435364963000;           ""purchase_date_pst"" = ""2015-06-27T01:29:23.000+00:00"";           quantity = 1;           ""receipt_data"" = ""<null>"";           ""request_date"" = ""<null>"";           ""request_date_ms"" = ""<null>"";           ""request_date_pst"" = ""<null>"";           ""transaction_id"" = 1000000161078715;           ""version_external_identifier"" = ""<null>"";             },             {           ""adam_id"" = ""<null>"";           ""app_item_id"" = ""<null>"";           ""application_version"" = ""<null>"";           bid = ""<null>"";           ""bundle_id"" = ""<null>"";           bvrs = ""<null>"";           ""download_id"" = ""<null>"";           ""expires_date"" = ""<null>"";           ""in_app"" = ""<null>"";           ""is_trial_period"" = false;           ""itunes_env"" = production;           latest = ""<null>"";           original =   {               ""adam_id"" = ""<null>"";               ""app_item_id"" = ""<null>"";               ""application_version"" = ""<null>"";               bid = ""<null>"";               ""bundle_id"" = ""<null>"";               bvrs = ""<null>"";               ""download_id"" = ""<null>"";               ""expires_date"" = ""<null>"";               ""in_app"" = ""<null>"";               ""is_trial_period"" = ""<null>"";               ""itunes_env"" = production;               latest = ""<null>"";               original = ""<null>"";               ""product_id"" = ""<null>"";               ""purchase_date"" = ""2015-06-27T16:51:01.000+00:00"";               ""purchase_date_ms"" = 1435423861000;               ""purchase_date_pst"" = ""2015-06-27T17:51:01.000+00:00"";               quantity = ""<null>"";               ""receipt_data"" = ""<null>"";               ""request_date"" = ""<null>"";               ""request_date_ms"" = ""<null>"";               ""request_date_pst"" = ""<null>"";               ""transaction_id"" = 1000000161106233;               ""version_external_identifier"" = ""<null>"";                 };           ""product_id"" = ""com.LaserWolfTurbo72.RotoFeed.widgetproduct6"";           ""purchase_date"" = ""2015-06-27T16:51:01.000+00:00"";           ""purchase_date_ms"" = 1435423861000;           ""purchase_date_pst"" = ""2015-06-27T17:51:01.000+00:00"";           quantity = 1;           ""receipt_data"" = ""<null>"";           ""request_date"" = ""<null>"";           ""request_date_ms"" = ""<null>"";           ""request_date_pst"" = ""<null>"";           ""transaction_id"" = 1000000161106233;           ""version_external_identifier"" = ""<null>"";             },             {           ""adam_id"" = ""<null>"";           ""app_item_id"" = ""<null>"";           ""application_version"" = ""<null>"";           bid = ""<null>"";           ""bundle_id"" = ""<null>"";           bvrs = ""<null>"";           ""download_id"" = ""<null>"";           ""expires_date"" = ""<null>"";           ""in_app"" = ""<null>"";           ""is_trial_period"" = false;           ""itunes_env"" = production;           latest = ""<null>"";           original =  {               ""adam_id"" = ""<null>"";               ""app_item_id"" = ""<null>"";               ""application_version"" = ""<null>"";               bid = ""<null>"";               ""bundle_id"" = ""<null>"";               bvrs = ""<null>"";               ""download_id"" = ""<null>"";               ""expires_date"" = ""<null>"";               ""in_app"" = ""<null>"";               ""is_trial_period"" = ""<null>"";               ""itunes_env"" = production;               latest = ""<null>"";               original = ""<null>"";               ""product_id"" = ""<null>"";               ""purchase_date"" = ""2015-06-26T05:24:58.000+00:00"";               ""purchase_date_ms"" = 1435296298000;               ""purchase_date_pst"" = ""2015-06-26T06:24:58.000+00:00"";               quantity = ""<null>"";               ""receipt_data"" = ""<null>"";               ""request_date"" = ""<null>"";               ""request_date_ms"" = ""<null>"";               ""request_date_pst"" = ""<null>"";               ""transaction_id"" = 1000000160934916;               ""version_external_identifier"" = ""<null>"";                 };           ""product_id"" = ""com.LaserWolfTurbo72.RotoFeed.widgetproduct2"";           ""purchase_date"" = ""2015-06-26T05:24:58.000+00:00"";           ""purchase_date_ms"" = 1435296298000;           ""purchase_date_pst"" = ""2015-06-26T06:24:58.000+00:00"";           quantity = 1;           ""receipt_data"" = ""<null>"";           ""request_date"" = ""<null>"";           ""request_date_ms"" = ""<null>"";           ""request_date_pst"" = ""<null>"";           ""transaction_id"" = 1000000160934916;           ""version_external_identifier"" = ""<null>"";             },             {           ""adam_id"" = ""<null>"";            ....           ""version_external_identifier"" = ""<null>"";             },             {           ""adam_id"" = ""<null>"";            ....           ""version_external_identifier"" = ""<null>"";             },             {           ""adam_id"" = ""<null>"";            ....           ""version_external_identifier"" = ""<null>"";             }         );   ""is_trial_period"" = ""<null>"";   ""itunes_env"" = sandbox;   latest = ""<null>"";   original =         {       ""adam_id"" = ""<null>"";       ""app_item_id"" = ""<null>"";       ""application_version"" = ""1.0"";       bid = ""<null>"";       ""bundle_id"" = ""<null>"";       bvrs = ""<null>"";       ""download_id"" = ""<null>"";       ""expires_date"" = ""<null>"";       ""in_app"" = ""<null>"";       ""is_trial_period"" = ""<null>"";       ""itunes_env"" = production;       latest = ""<null>"";       original = ""<null>"";       ""product_id"" = ""<null>"";       ""purchase_date"" = ""2013-08-01T07:00:00.000+00:00"";       ""purchase_date_ms"" = 1375340400000;       ""purchase_date_pst"" = ""2013-08-01T08:00:00.000+00:00"";       quantity = ""<null>"";       ""receipt_data"" = ""<null>"";       ""request_date"" = ""<null>"";       ""request_date_ms"" = ""<null>"";       ""request_date_pst"" = ""<null>"";       ""transaction_id"" = ""<null>"";       ""version_external_identifier"" = ""<null>"";         };   ""product_id"" = ""<null>"";   ""purchase_date"" = ""<null>"";   ""purchase_date_ms"" = ""<null>"";   ""purchase_date_pst"" = ""<null>"";   quantity = ""<null>"";   ""receipt_data"" = ""<null>"";   ""request_date"" = ""2015-06-27T16:51:12.000+00:00"";   ""request_date_ms"" = 1435423872955;   ""request_date_pst"" = ""2015-06-27T17:51:12.000+00:00"";   ""transaction_id"" = ""<null>"";   ""version_external_identifier"" = 0;     };"
iOSProgramming,3bba1b,cezheng,3,Sat Jun 27 15:57:03 2015 UTC,"Some people, when confronted with a problem, think  “I know, I'll use regular expressions.”   Now they have two problems."
iOSProgramming,3bba1b,helpfuldan,1 point,Sat Jun 27 17:12:57 2015 UTC,"I agree with you on some cases. I think if people decided to use this, I either means they already have experience in Python's re and know it's more convenient, or they are convinced that Python's re is better and would like to have a try."
iOSProgramming,3bc8te,tommy16p,4,Sat Jun 27 21:06:57 2015 UTC,No you can't use Windows. You can edit code but you can't run it in any way. It always needs to be signed on a Mac.
iOSProgramming,3bc8te,lucasvandongen,0,Sat Jun 27 22:06:08 2015 UTC,So could I use a virtual machine?
iOSProgramming,3bc8te,15458434,3,Sat Jun 27 22:15:18 2015 UTC,"One thing the OS X license forbids to run it on non Apple hardware. But if your laptop has the right hardware it might be able to run it. But there are a shit load of pitfalls, because Apple has some mechanisms to prevent you from doing it and you'd need a developers license to install an App on an actual device, which is verified on the moment of installing your App. So I'd say get a second hand late 2012 Mac Mini stuff it with 16Gb of memory. It's not worth your time(money) to invest getting a OS X installation hack on a regular pc."
iOSProgramming,3bc8te,joycamp,1 point,Sun Jun 28 14:28:32 2015 UTC,"Ok, I see your point. Thanks."
iOSProgramming,3bc8te,lucasvandongen,3,Sun Jun 28 14:36:58 2015 UTC,"This way lies madness.....,,  http://www.macbreaker.com/2015/01/virtualbox-yosemite-zone.html"
iOSProgramming,3b9rtl,johnwickham,2,Sat Jun 27 03:42:40 2015 UTC,"I rather like it. Would want to try it out on a few devices, mostly to see if the size makes sense.   You can dismiss it by swiping it off the screen.   That alone would be a huge improvement and I think if I saw your design without any prompting I'd try to swipe it away (and be very happy when it worked)."
iOSProgramming,3b9rtl,ChristinaMltn,1 point,Sat Jun 27 13:57:20 2015 UTC,Thank you very much! Now I think an animation sliding onscreen would make more sense to clue the user in that it can be pushed off.
iOSProgramming,3b9rtl,brendan09,1 point,Sat Jun 27 16:37:42 2015 UTC,"No thanks. The only thing it needs is to be a tiny bit smaller (or stay less long), otherwise it looks great as it is."
iOSProgramming,3b7j9y,Badfirmware,3,Fri Jun 26 16:31:55 2015 UTC,Awesome! very interesting! How long did it take you to build it?
iOSProgramming,3b7j9y,fpbraz,2,Fri Jun 26 22:14:59 2015 UTC,"Thanks! It took about 1 month or so to build the hardware. But first, it took closer to 6 months of data gathering and analysis (lots of people had to punch the bag)."
iOSProgramming,3b7j9y,mugu22,0,Fri Jun 26 22:33:44 2015 UTC,"Great job! Very very impressive.  Can you go a little more into the details of how this was done? I'm guessing there's a gyroscope in those little white things you put in the gloves, and they're transferring data to a server somewhere? If so, how is the gyroscope communicating its info to the server?   -edit- No, wait, I got it. The gyroscope communicates via bluetooth to the phone? How did you manage that?"
iOSProgramming,3b7j9y,toxpham,1 point,Fri Jun 26 22:40:30 2015 UTC,The sensor data (accelerometer) <-> Bluetooth <-> SmartPhone <-> Firebase or Parse (or you could just integrate with your own preferred cloud if you want). It uses the MetaWear board for the sensors and communication.
iOSProgramming,3b7j9y,isurujn,2,Sat Jun 27 01:07:54 2015 UTC,This is awesome!
iOSProgramming,3bbb12,amichail,4,Sat Jun 27 16:05:50 2015 UTC,CloudKit might meet your needs
iOSProgramming,3bbb12,Jay18001,2,Sat Jun 27 16:38:06 2015 UTC,"Depending on the amount of data, you could probably put it into a qr code. Images are super easy to share."
iOSProgramming,3bbb12,coffeekin,1 point,Sat Jun 27 18:40:52 2015 UTC,Look at the new ReplayKit coming in iOS 9
iOSProgramming,3bbb12,ClashesYeMilk,-1,Sat Jun 27 16:10:49 2015 UTC,The idea is to share the game mode settings/data  — not a replay of a game in that game mode.
iOSProgramming,3bbb12,ClashesYeMilk,1 point,Sat Jun 27 16:14:33 2015 UTC,Hmm...Maybe something like NYTNow where they generate a really nice image that is then shared to Twitter with a link back to the app.
iOSProgramming,3bb1dp,Snikege,1 point,Sat Jun 27 14:33:09 2015 UTC,"CCSettings has a ""Clear Badge"" toggle. Try that and check if it will be a permanent solution."
iOSProgramming,3bb1dp,rafy709,1 point,Sat Jun 27 16:27:55 2015 UTC,oh my god yeeeees!!!! thanks so much
iOSProgramming,3badmc,eagle101,1 point,Sat Jun 27 08:28:06 2015 UTC,No that I could find. The button to open in regular mobile safari is there so kinda pointless. SFVC gives the user their normal cookies and keychain so yes.
iOSProgramming,3badmc,moltenwater,1 point,Sat Jun 27 12:45:20 2015 UTC,"I didn't dig too deep into this but I thought that is was also supposed to give apps that use webkit as a basis (some cross-platform frameworks) and browsers that use the webkit engine because that's the only one allowed on iOS (chrome, firefox).  Having a fixed URL bar would be a HUGE pain in the ass for them."
iOSProgramming,3badmc,lucasvandongen,1 point,Sat Jun 27 13:48:30 2015 UTC,"Those should be using WKWebView, which in iOS 9 added many useful APIs that stopped some of them from adopting it. SFSafariViewController is not suitable (or even possible, from what I’ve gathered) to build on top of."
iOSProgramming,3badmc,illusionmist,1 point,Sun Jun 28 09:53:16 2015 UTC,Thank you
iOSProgramming,3badmc,necromancer08,1 point,Sun Jun 28 23:39:07 2015 UTC,"Sorry, i don't know the right answer to your question, but just so you are aware according to App Store Review Guidline 2.12  "" Apps that are not very useful, unique, are simply web sites bundled as Apps, or do not provide any lasting entertainment value may be rejected """
iOSProgramming,3badmc,necromancer08,1 point,Sat Jun 27 13:48:46 2015 UTC,"My app will be much more than what I described, so it shouldn't have any issues. Thanks for this!"
iOSProgramming,3badmc,MShahmeer,1 point,Sun Jun 28 23:39:41 2015 UTC,Glad to hear that. Good luck. :thumbsup
iOSProgramming,3badmc,MShahmeer,1 point,Sun Jun 28 23:43:22 2015 UTC,"1) Unfortunately, you cannot hide any UI elements in SFSafariViewController, from what  I'm aware of.  2) IMO, the SFSafariViewController would be better for this since it has secure access to user credentials, passwords etc.   Check out this example of the new Safari View Controller I wrote: https://github.com/MShahmeer/SFSafariViewController-Test"
iOSProgramming,3badmc,MShahmeer,1 point,Sun Jun 28 22:36:49 2015 UTC,"Thank you.  As far as point two goes, after seeing your example, I don't think for my purpose that the Safari View Controller should be used. If they are in the middle of ordering food and accidentally hit DONE button, they lose everything. Agree?"
iOSProgramming,3ba7li,Clipstuh,2,Sat Jun 27 06:53:36 2015 UTC,You just call your tableviews's scrollToRowAtIndexpath method
iOSProgramming,3ba7li,Racepace,1 point,Sat Jun 27 08:44:47 2015 UTC,there's a bunch of notifications you can listen to  UIKeyboardWillShowNotification UIKeyboardDidShowNotification UIKeyboardWillHideNotification UIKeyboardDidHideNotification  Then you need to adjust content inset of the table view to move the content from below the keyboard. Finally use scrollToRowAtIndexpath/scrollToPoint to scroll to a specific position in the table view
iOSProgramming,3ba6ez,Kubiedo,1 point,Sat Jun 27 06:36:50 2015 UTC,"You can make your own shader and use that to create a filter for GPUImage. https://github.com/BradLarson/GPUImage That or apply several core image color filters to create an image with each color, draw parts of each image to a context, then create an image from the context."
iOSProgramming,3b8to5,toorealc,1 point,Fri Jun 26 22:18:56 2015 UTC,"Add a License file to the project (I would recommend a liberal one, such as MIT, BSD, or Apache). All professional iOS devs won't touch projects that aren't distributed under a license as the default assumes copyright on behalf of the original author(s)."
iOSProgramming,3b8to5,StunnerAlpha,1 point,Sat Jun 27 09:07:44 2015 UTC,Could you tell me how I would do that? :)
iOSProgramming,3b8to5,StunnerAlpha,2,Sat Jun 27 22:05:10 2015 UTC,You can follow what I have done here: https://github.com/Stunner/STAControls by simply adding a LICENSE.txt file to the repo. I use the MIT license so you can more or less copy/paste its contents and change it from my name to yours and you would be set.  People like to also mention it at the bottom of the README file (in addition to the LICENSE.txt file) as depicted here: https://github.com/Stunner/App-Update-Tracker
iOSProgramming,3b8vdt,huzziii,2,Fri Jun 26 22:33:04 2015 UTC,"Your format string is wrong should be:  _labelOutput.text=[NSString stringWithFormat:@""%d"",tag];   But tag is perhaps the wrong thing to user anyway since it's only numbers and wont work for +,- buttons. This may be better:  _labelOutput.text = sender.currentTitle"
iOSProgramming,3b8l3p,mrcanoehead,3,Fri Jun 26 21:09:07 2015 UTC,"We've been told absolutely no gimmick or novelty apps.  That said, we're a large media company. That also said, we also air/publish some of the most popular ""gimmick"" / comedy shows available, so a gimmick companion app would be awesome :("
iOSProgramming,3b8l3p,kaosdg,1 point,Sat Jun 27 01:12:30 2015 UTC,Shiiiiiit.
iOSProgramming,3b95tr,xThomas,2,Sat Jun 27 00:07:19 2015 UTC,Safari iOS doesn't support plugins.
iOSProgramming,3b95tr,TaviRider,1 point,Sat Jun 27 03:03:17 2015 UTC,Well that sucks.  Can I hack it in Xcode if I jailbreak?
iOSProgramming,3b95tr,TaviRider,1 point,Sat Jun 27 03:41:26 2015 UTC,"Technically anything is possible if you jailbreak, but this would be very difficult to accomplish."
iOSProgramming,3b95tr,dodongdude,2,Sat Jun 27 03:49:30 2015 UTC,"In iOS 8 you can create Action extensions that run a JavaScript file to modify the content of a webpage. For example, the Bing app has an Action extension for translating the user’s current page. Your could very easily create an extension that modifies the text styling :)  https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/ExtensibilityPG/ExtensionScenarios.html  Look for ""Accessing a Webpage"""
iOSProgramming,3b70mj,ImOssir,1 point,Fri Jun 26 14:10:29 2015 UTC,I try to be good about implementing integration tests with this (open source): https://github.com/kif-framework/KIF
iOSProgramming,3b70mj,StunnerAlpha,1 point,Sat Jun 27 09:16:24 2015 UTC,"Well, I'm talking about automatic tools. Unit, automation and integration testing is another thing"
iOSProgramming,3b6olr,velixo,1 point,Fri Jun 26 12:15:11 2015 UTC,You need to create the notification from the App during a peripheral-app communication. ANCS is not 'visible' from an iOS App (since all Apps are sandboxed and the only visibility you get is through iOS frameworks/libraries...) so you can't create a notification (unfortunately).
iOSProgramming,3b3z3z,jakemarsh,3,Thu Jun 25 19:50:27 2015 UTC,"I love these, but not being able to select text really sucks."
iOSProgramming,3b3z3z,megablast,1 point,Fri Jun 26 05:42:57 2015 UTC,"So I 100% agree, see here for why I'm not posting that stuff: http://www.reddit.com/r/iOSProgramming/comments/3az3sr/little_bites_of_cocoa_23_corespotlight/csilw14"
iOSProgramming,3b3z3z,skilless,1 point,Fri Jun 26 17:32:33 2015 UTC,These really need a URL to the source.
iOSProgramming,3b5xbx,LaserWolfTurbo72,1 point,Fri Jun 26 06:02:52 2015 UTC,"Validation should be done twice. Once locally, and once on your server.  CargoBay solves the local validation. You'll need to use something else server side in order to validate from that end. Here's a document on verifying receipts on your server. NOTE: Their server implementation is written in Objective-C...since no one writes servers in Objective-C you'll probably need to port it to another language, but that should be easy."
iOSProgramming,3b6pup,amichail,6,Fri Jun 26 12:27:29 2015 UTC,Somehow I'm tempted to recommend you the most unmaintainable code that could pass through my mind.
iOSProgramming,3b6pup,Don_Equis,1 point,Fri Jun 26 12:47:03 2015 UTC,"You can store the current day's game mode in the keychain, which is persisted between app installations. Or you can have the day's game mode determined based on the date, such as (daysSinceEpoch % numberOfGameModes). Both of these methods will ultimately fail, though. The user can just set their device's date to the next day to change modes, and there is no foolproof way to detect this. So instead you can have your game contact a server to get the current date. This has the major drawback that your game only works when the device has a network connection, which may be unacceptable to many of your users.  But let's be honest here. This artificial limitation to get users to spend money on the game is going to annoy your users. I suggest you  find some other way to monetize your hand, such as charging for it (B2P), and/or using IAP for non-gameplay enhancements like hats."
iOSProgramming,3b6pup,TaviRider,1 point,Fri Jun 26 14:54:06 2015 UTC,"But how would one prevent gamers from reinstalling the app to play a different game mode in the same day without making the in-app purchase?   Well, the easy thing to do would be to just add some features that let them ""advance"" by earning coins or something during play, and then just store the game mode they played today alongside that information about their progress.  If they reinstall the app, destroying the ""what I played today"" information, they also destroy their progress.  Anyone who cares enough about the game to go to the trouble to reinstall the game just to play the game right now instead of waiting until tomorrow probably also cares enough to not destroy their progress.  That won't prevent the behavior you mention, or ambitious hackers getting around it, but I'll bet it would cover the vast, vast majority of your players.  Anyone who would go to all that trouble to avoid paying you a dollar is never going to pay you a dollar anyway, so you're not losing much from those people, and you risk losing your paying customers.  If you really need to restrict it, say it unbalances the game for the entire community somehow if people can do that, then you're looking at checking in with a server somewhere with the player's Game Center player ID, and passing along the vendor ID for the device as you go.  This would let you detect the same player playing on two devices, or a player switching Game Center logins on the same device.  (A player who logs into two Game Center accounts on two different devices is indistinguishable from two real people, so if that's a problem, you'll have to deal with that at the game design level, not the technology level.)  But ultimately, like TaviRider said, it's probably a bad idea to restrict players like that.  ""No, don't play my game right now.  Wait until later!  Why don't you sleep on it?"" isn't a great approach to player engagement.  That's a pretty fast way to get your app dustbinned."
iOSProgramming,3b6pup,onewayout,1 point,Fri Jun 26 15:39:32 2015 UTC,Bad idea. That kind of thinking is what pisses off users. You are more likely to get a delete and no reinstall than someone paying to remove it. Just make the game 99 cents or whatever and move on
iOSProgramming,3b6pup,Techsupportvictim,0,Mon Jun 29 03:15:31 2015 UTC,Why would you even want to do that? That is literally everything wrong with app store games at the moment.
iOSProgramming,3b6qru,Heffertron,12,Fri Jun 26 12:36:43 2015 UTC,"No, ideas are worthless.  It's the execution that matters"
iOSProgramming,3b6qru,Mrredditorson,6,Fri Jun 26 13:10:43 2015 UTC,"Patents don't cover ideas, so no?"
iOSProgramming,3b6qru,BonzaiThePenguin,2,Fri Jun 26 13:30:07 2015 UTC,"This is the most relevant answer. A patent doesn't cover ideas. It covers implementations and (controversially) processes.   Which means that you've got to at least have a reference implementation of your idea to submit with your application. In some cases, documentation sufficient to stand in for an implementation has been accepted, but even that's dicy."
iOSProgramming,3b6qru,ratbastid,1 point,Fri Jun 26 15:15:47 2015 UTC,"Actually as I recall you can get a patent on an idea but it hasn't to be a really unique, innovative kick ass idea that is unlikely everything out there already. And you have to have it really detailed out"
iOSProgramming,3b6qru,Techsupportvictim,1 point,Mon Jun 29 03:18:34 2015 UTC,"A patent is a waste unless it's properly made a part of a full business plan. Patents aren't a ticket to riches. They're a tool you can use if you have a plan, where the plan uses many other tools as well."
iOSProgramming,3b6qru,watery_planet,1 point,Sat Jun 27 00:42:40 2015 UTC,"Have you researched the idea thoroughly and come to the conclusion that it's totally original? Do you have $10k + to spare (ballpark figure)? If so, then try consulting with a patent lawyer to see if it's worth it."
iOSProgramming,3b6qru,Zhirgoyt,1 point,Fri Jun 26 12:43:54 2015 UTC,"Little to nothing patented will be revolutionary. The patent system is based on incremental improvements.  A provisional is not required. Allowance, not acceptance.  Most patents are not going to go to court, and having a patent portfolio can be valuable for a business.  I think you mean design patent. Trade dress is more closely related to trademarks."
iOSProgramming,3b4lqd,tianan,2,Thu Jun 25 22:41:31 2015 UTC,"YouTube videos have to be played inside a webview (UIWebView or WKWebView).  My understanding is that there are ways to load them outside of a webview, but that such ways violate the YouTube terms of service and are not well-supported.  YouTube actually has a project and a guide with all of the steps you need for getting this working.  It's Obj-C but they hold your hand and you can mix and match that with Swift. GitHub Project Guide  If you wanted to go the unsupported route because you don't plan on releasing this to anyone who matters, you can try this or this."
iOSProgramming,3b2viq,JamesBronn,3,Thu Jun 25 15:02:03 2015 UTC,"Get a subscription to RayWenderlich. Their tutorials are the best, very thorough and has tough challenge for you to practice."
iOSProgramming,3b2viq,kentzler,2,Thu Jun 25 15:18:05 2015 UTC,If you ever want to get a job of iOS developer you have to learn Objective-C. Good books are Big nerd ranch Objective-C book and Big nerd ranch iOS book
iOSProgramming,3b2viq,Voley,1 point,Thu Jun 25 15:05:17 2015 UTC,Shameless self-promotion: http://www.alloc-init.com/programming-resources/ I keep a list of resources on my website :D
iOSProgramming,3b2viq,Kronusdark,1 point,Thu Jun 25 15:27:06 2015 UTC,Check out the Stanford course on iTunes U. It has both theory and small practical sample.
iOSProgramming,3b3mjs,bigfoot13442,1 point,Thu Jun 25 18:18:35 2015 UTC,Call Apple developer support.  +1 (800) 633-2152
iOSProgramming,3b3mjs,onewayout,1 point,Thu Jun 25 19:22:46 2015 UTC,Make sure your primary account email is verified and has 2 factor enabled
iOSProgramming,3b3mjs,quellish,1 point,Thu Jun 25 21:22:47 2015 UTC,Can't get far enough into the account to do it. The screenshot is literally the only thing I can see or do in the account
iOSProgramming,3b3cff,sneeden,1 point,Thu Jun 25 17:07:24 2015 UTC,Once a year.
iOSProgramming,3b3cff,Starchand,1 point,Thu Jun 25 20:16:05 2015 UTC,"Never, unless I install a new OS version or something like that. I increase build numbers pretty often though. And in other occasions Debug -> Attach to Process helps if the apps does boot on the device but it doesn't stay attached to the debugger."
iOSProgramming,3b3cff,lucasvandongen,0,Fri Jun 26 15:34:40 2015 UTC,"I tend to debug and test in the simulator most of the time (business apps, not games). Allows me to switch between devices easier as as Xcode / AppCode don't like to have multiple devices hooked up USB at same time. On occasion I would have to reset the simulator.  For devices I have not experienced the need to reboot them. I used an iPhone 4s and a retina iPad mini for most of my testing and never rebooted them. I might only test on them a few times a week though."
iOSProgramming,3b3cff,MKevin3,2,Thu Jun 25 17:40:10 2015 UTC,Yeah I use the simulator when I can. The app I'm working on uses many of the device's sensors so the simulator isn't always ideal. For straight up UI stuff I'll use it.
iOSProgramming,3b1ydl,CinoRips,3,Thu Jun 25 08:56:04 2015 UTC,"Not a CPU reduction, but general dev tip:   I suggest splitting this to separate storyboards (e.g. each branch for ""Pull ups"", ""Squats"", etc.). This will be easier to maintain and develop (especially if there will be more than one person on the project).  Better yet, I think this whole storyboard can be reimplemented with 4 scenes (as far as I can see to the right), because branch UIs are exactly the same in structure and the only difference is title and most probably data collection container (CoreData or plist?)  So this is how it would look:  Nav Controller -> BW Exercise list VC (BA) -> Category List VC (EI) -> Sets/reps VC  When user taps on a row in BA it passes the title and needed data to EI view controller (this would be the list of exercises). Then in EI scene, when tapping the row, you open the Series VC with series number 0. Then the Series VC can have a segue to itself and also pass the variables through prepareForSegue:sender: method (e.g. same series number incremented by 1).  Edit: corrections.  Edit 2: proper VC naming"
iOSProgramming,3b1ydl,eimantas,1 point,Thu Jun 25 10:00:31 2015 UTC,"I think making multiple storyboards would help but how would I have it operate the same way? B.W. exercise list > category list > set/reps list  Also, can you explain what you mean by 'series VC'?  Thanks for your help!!!"
iOSProgramming,3b1ydl,eimantas,1 point,Thu Jun 25 10:38:13 2015 UTC,"You make it operate the same way by instantiating UIStoryboard with a given name and then instantiating initial view controller from that storyboard instead of performing a segue.  Series VC is my naming for ""Set/Reps list""."
iOSProgramming,3b1ydl,kielrene,3,Thu Jun 25 13:32:02 2015 UTC,"Please don't make 40 view controllers with table views. Make one view controller with a table view, and pass the kind of data to display in the segue. Write the tableview implementation (data source etc.) in code.   Another problem I have is that when I flick a switch to 'ON', it does not remain 'ON' when I return after leaving that page.   You need to store the value of that switch somewhere, for example in NSUserDefaults and (re)set the state every time the view appears."
iOSProgramming,3b1ydl,FutureIsMine,1 point,Thu Jun 25 11:02:22 2015 UTC,"That sounds splendid. I have made segues before. However it was only for one 'push'. Do I need to make multiple segue statements for multiple pages?  Here is my 'single push' segue from another project:   (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender { if ([segue.identifier isEqualToString:@""showArrayDetail""]) {     NSIndexPath *indexPath = [self.tableView indexPathForSelectedRow];     SecondTableViewController *destViewController = segue.destinationViewController;     destViewController.animalName = [animals objectAtIndex:indexPath.row];     destViewController.title = destViewController.animalName;"
iOSProgramming,3b1ydl,BonzaiThePenguin,1 point,Thu Jun 25 12:44:43 2015 UTC,"Another option is to write the tableViewController in swift and then pass in a function during initialization that will be used for cellForRowAtIndexPath. This way you can actually use one viewController for everything, and just use different functions for different needs."
iOSProgramming,3b1ydl,aoakenfo,1 point,Thu Jun 25 15:53:16 2015 UTC,Xcode is using too much CPU if you just let it idle with that view open? I'd expect the live code issues or symbol indexing to be causing it.
iOSProgramming,3b1ydl,MarsSpaceship,1 point,Thu Jun 25 09:24:32 2015 UTC,yes! I have a total of about 40 table views open  edit: the screen shot is only a portion of the the main storyboard
iOSProgramming,3b34q1,ThePantsThief,3,Thu Jun 25 16:10:49 2015 UTC,"You can, I do this all the time with data source delegates to keep my controllers skinny. I create a new class extension that conforms to the protocol and provides the implementation. This way the original controller just sets itself as a delegate / data source, while the extension does the heavy lifting"
iOSProgramming,3b34q1,andreamazz,1 point,Thu Jun 25 17:18:34 2015 UTC,It's not really safe to do this in classes you don't own.  For all you know SFSafariViewController already implements those methods for some reason or another and you are now overriding them in a category which you don't want to do.
iOSProgramming,3b34q1,dsfjisdjfisdmf,1 point,Fri Jun 26 04:45:14 2015 UTC,"I have the environment variable set to tell me if my categories replace any existing methods, so if it does implement it under the hood I'll know ;)"
iOSProgramming,3b4gi5,FresherWater,5,Thu Jun 25 22:00:11 2015 UTC,"It is never too late to learn:   Learning how to program is valuable way beyond apps. In a recent article concerning job replacement by AI/robots, software programming had a 4% chance of being replaced. (Meaning 4% of that job sector can expect to be replaced.) There are plenty of jobs in software design It isn't just about apps.  It is about getting your name out there as an established developer.  Put a couple of quality apps in the store and you will start to get contacted by people needing apps designed (I've done several 3rd party apps that way). You can write apps and not put them in the app store.  You can write apps just for yourself and select friends (you can provision their phones).  Note that those apps don't go through any approval process and as such can use any framework you want (wink wink nudge nudge). Just about every field these days requires software designers. Knowing how to create a complete application, from concept to delivery, support, and marketing, is very powerful and means you are quite valuable in the programming world.   Are you going to write a killer billion dollar app?  Maybe.  There are tons of simple concepts that did exactly that.  But most likely not.  Your gains will most likely be more indirect than direct.  Edit: I've had (and pulled) a number of apps in the App store, from 99 cents to $49.99. Most were nitch - the $49.99 app for example requires a special hardware dongle (wifi sniffer).  I certainly can't retire off of those, but I've made tons more from people who found out about me through those apps, and hired me to write apps."
iOSProgramming,3b4gi5,KaneHau,1 point,Thu Jun 25 22:10:15 2015 UTC,"Wow, this is a very interesting response. I can see why you are probably right about this. Thank you."
iOSProgramming,3b4gi5,lucasvandongen,1 point,Thu Jun 25 22:20:27 2015 UTC,"Depends on what you want to do. In 1999 there were a lot of Windows applications out there. People that learned how to create Windows applications in that year still have a job if they kept up their skills. But 1995 was the year to get that ""first 32-bit Windows compression utility"" out of the door and be the first to grab marketshare. By 1999 there were either entrenched applications or the applications pushed in by big companies. The only thing you could do was create a totally new idea like file sharing that just came around the corner around that date.  So you're learning how to program an app, which is pretty similar to an OS X application and actually also pretty similar to Android, Windows or Linux. You will understand how to create a fluent non-blocking UI and how to work with an application that is permanently in memory. You will know how to connect to an API or even learn how to make one yourself. All that knowledge is transferable and will be yours when you shift to some other programming field. I did this a few times and I am a better iOS programmer because of it.  The big rush of completely new applications that rely on very specific mobile possibilities and ""first on iOS but already exists elsewhere"" applications has passed. If you want to ride that wave I suggest to look into domestic applications, smart devices (fridges, toasters, whatever), all that stuff you're going to connect to your mobile and the internet. Also the maker industry is ballooning, 3D printing and CNC is plummeting all the time in costs and those markets didn't settle yet on a standard or a few big companies that share the majority of the market."
iOSProgramming,3b4gi5,sgspace321,0,Fri Jun 26 11:53:56 2015 UTC,Yes it is too late. There are no more app ideas left in the world.
iOSProgramming,3az3sr,jakemarsh,4,Wed Jun 24 17:38:07 2015 UTC,Link to actual article instead of this image: http://littlebitesofcocoa.tumblr.com/post/122345870995/23-corespotlight
iOSProgramming,3az3sr,kennyjmeyers,4,Wed Jun 24 23:37:25 2015 UTC,"I really like these, but you should really consider adding a link to the site there, otherwise people don't know where to find more. I had to Google for ""little bites of cocoa"" (which I didn't know was a website) to find the Tumblr and add it to my RSS reader."
iOSProgramming,3az3sr,yeskia,3,Thu Jun 25 04:18:08 2015 UTC,"So funny story, I was providing a link to the site as well as like the RSS, email, etc. subscription options and Reddit flagged my account for ""self promotion"" - so I had to stop doing it :/  I would absolutely love to provide them with each post so people who want to make sure they don't miss any can subscribe but unfortunately I don't wanna risk my account getting banned or anything.  I guess the other alternative would be a dedicated subreddit, but I just don't feel like my site is big enough to deserve that yet? I'm not sure. Would love to hear ideas for readers about what the best thing to do would be."
iOSProgramming,3az3sr,yeskia,3,Thu Jun 25 19:54:56 2015 UTC,"Ah that is a shame! Yeah it might be hard to get traction in a subreddit like that. I don't have any genius ideas for you, but I hope you keep making these (as they're great) and you build a bigger audience!"
iOSProgramming,3az3sr,skilless,1 point,Fri Jun 26 01:52:16 2015 UTC,can you just put the URL to your site in the image?
iOSProgramming,3az3sr,illusionhill,1 point,Fri Jun 26 20:59:33 2015 UTC,Is it possible to remove entries once they are entered? I have a news app that removes older stories so I would like to be able to take them off spotlight at that point.
iOSProgramming,3az3sr,clawesome,1 point,Thu Jun 25 06:18:04 2015 UTC,There is a deleting example is in this post:  https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-SW3
iOSProgramming,3az3sr,illusionhill,1 point,Thu Jun 25 08:16:19 2015 UTC,"Awesome, thank you."
iOSProgramming,3b1laq,alamare1,3,Thu Jun 25 05:57:44 2015 UTC,Things like that are built using UICollectionView (although the example from your screenshot may also simply be a paging scrollview). Check out this nice overview at NSHipster. The checkbox is just a custom control added to each cell.
iOSProgramming,3b1laq,kielrene,1 point,Thu Jun 25 06:22:43 2015 UTC,What I took image wise was directly from Photos.app in iOS 9
iOSProgramming,3b1laq,kielrene,2,Thu Jun 25 06:31:25 2015 UTC,"If you only want this, a scrollview with paging enabled should suffice. Add the images next to each other in the scrollview, and the checkboxes on top.  It's actually very easy to do."
iOSProgramming,3b1laq,criosist,2,Thu Jun 25 06:40:05 2015 UTC,"Use a collectionview with a subclassed flow layout, custom cell selection and if you want it to look paged override targetContentOffset : in the flow layout."
iOSProgramming,3b0vfc,Jalsemgeest,1 point,Thu Jun 25 01:53:19 2015 UTC,"If you want real-time interactions, look into using sockets."
iOSProgramming,3b0vfc,Aofwa,1 point,Thu Jun 25 01:59:19 2015 UTC,I've used sockets for a simple project before but never to do something like this.  Are sockets something that would be implemented on both iOS and the website?
iOSProgramming,3b0vfc,Aofwa,1 point,Thu Jun 25 02:14:08 2015 UTC,Yes. I used SIOSocket for this exact usage. SIOSocket can communicate with Socket.IO  Edit: it appears that Socket.IO now has their own iOS client written in swift.
iOSProgramming,3b0vfc,Aofwa,1 point,Thu Jun 25 02:19:23 2015 UTC,Those are some pretty awesome resources.  Thank you!  Edit: That's even better!
iOSProgramming,3b0vfc,askoruli,1 point,Thu Jun 25 02:28:59 2015 UTC,"Just looked into Socket.io fair bit and just wanted to say thank you again, it is exactly what I was looking for!"
iOSProgramming,3b0vfc,askoruli,2,Thu Jun 25 03:17:45 2015 UTC,"No problem, glad I could help."
iOSProgramming,3b08ok,LaserWolfTurbo72,1 point,Wed Jun 24 22:43:29 2015 UTC,Are you using estimated row heights?
iOSProgramming,3b08ok,dsfjisdjfisdmf,1 point,Wed Jun 24 23:23:58 2015 UTC,I am yes. And RowHeight of UITableViewAutomaticDimension.
iOSProgramming,3b08ok,dsfjisdjfisdmf,1 point,Thu Jun 25 00:51:33 2015 UTC,"Upon a little further inspection, it appears that has a lot to do with it.  If I set the estimated row height way under, at say ""40.0"" when my cells are typically 100.0... then I get the opposite of the problem I described in OP. Rather than my content jumping up, it jumps down.   However, an accurate estimated row height still doesn't solve my issue completely.   For example, I have these 2 labels which are variable size height. 1 can be up to 2 rows, one can be up to 5 rows. Let's say based on font size, each row of text takes up 20px.  If each label only uses 1 row, it'll take up 40 pixels. Let's say the rest of our cell is 100 pixels. So 140 total. On the other hand, if both labels are maxed out with text, that's 7 lines of text total, ot 140 pixels. Plus the 100 for the cell, so 240 total.  So our cells could be 140-240 pixels.  Let's say we estimate at 190, right in the middle. If we have a grouping of cells all using max text, or a grouping all using min text, the issue will still present itself.  There will still be some jump, although way less than I am seeing in that video, that's for sure.  Another issue is... I actually have 2 self sizing cells on this tableview. This one, and one I've hidden for the video to simplify the issue. The other one is much smaller. More like 50.0 pixels. vs 200.0.  How or what is the best way to accommodate for this?"
iOSProgramming,3b08ok,dsfjisdjfisdmf,1 point,Thu Jun 25 01:03:17 2015 UTC,"Yeah I've dealt with this same issue before.  Basically when you reload the table it recalculates the height for all of your rows and any rows that are offscreen are asked for their estimated row height.   Then, as you scroll up the rows are asked for their real heights and the row height changes.  This changes the content size of the table above your scroll position while you are scrolling and the position starts jumping around.  If you aren't sure that your scrolling performance is actually an issue without using the estimated row heights then I would suggest not using them as it is just too buggy in my experience.  Alternatively, you could cache the calculated real heights for your rows and then return the real height if you have it in the estimated row height method which will avoid this issue.  This is annoying to do if you are using automatic dimension for your row heights and relying on autolayout to calculate the heights for you."
iOSProgramming,3az8hh,lunarchaos42,2,Wed Jun 24 18:11:37 2015 UTC,"You need to also add a storyboardID for your view controller.  This must be ""Deminsions"", the same as the Identifier you use in  [self.storyboard instantiateViewControllerWithIdentifier:@""Deminsions""]"
iOSProgramming,3az8hh,deadline_,1 point,Wed Jun 24 18:46:10 2015 UTC,"Got an error but it looks like I just need to add a UINavagtionController to my first ViewController?  Now I get This:  *** Terminating app due to uncaught exception 'NSGenericException', reason: 'Could not find a navigation controller for segue 'Deminsions'. Push segues can only be used when the source controller is managed by an instance of UINavigationController.'  Screenshot of my storyboardlayout: http://imgur.com/TO7DAge"
iOSProgramming,3az8hh,aazav,2,Wed Jun 24 19:40:15 2015 UTC,"From your storyboard, you need to embed your ViewController's scene in a Nav Controller.  Select the View Controller Scene.  Go to the Editor menu, select Embed In and pick Navigation Controller.  You do this for the beginning of the flow that you want to navigate through."
iOSProgramming,3az8hh,deadline_,1 point,Tue Jun 30 14:03:30 2015 UTC,"Yes, you are using a push segue which pushes a view controller onto the navigation controller stack.  Therefore you should embed your DataViewController (i suppose this is the one you are starting the segue from) in a Navigation Controller.  To do this, simply head to your storyboard, select the DataViewController and click on Editor->Embed In->Navigation Controller"
iOSProgramming,3az8hh,deadline_,1 point,Wed Jun 24 21:01:51 2015 UTC,It isnt my first view but it worked great. My first view is the Start View Controller. I plan to go to more views later so will I need to do this for each view?  The treehouse training course that I took only had it go from one view back to the start view.   P.s I gave you gold mate thanks so much for the help.
iOSProgramming,3az8hh,deadline_,2,Wed Jun 24 21:49:44 2015 UTC,"The difference between the segue from your StartViewController to the DataViewController and the DataViewController to the DeminsionsViewController is the presentation style (you can inspect or change this by clicking on the segue and selecting the attributes inspector on the right side).  The first one uses a modal presentation style, which shows the DataViewController fullscreen and therefore needs no NavigationController.  The second one is a push segue, which needs a navigation controller at its start ViewController to actually push something.     There is no need to create a navigation controller for each of your view controllers, you'll only need a new one when starting a push segue from a view controller which isn't presented via a push segue itself. For example, your DeminsionsViewContoller could start a push segue without any new NavigationController, as it already has a navigation controller through the previous presentation.     P.S. Thanks for the gold!"
iOSProgramming,3az8hh,deadline_,1 point,Thu Jun 25 06:43:18 2015 UTC,"Awesome, thanks for the detailed information. This is my final project for class, but we didn't cover push controllers or storyboarding segues.... well we pretty much only covered objective-c to be honest. I just wanted to make something that I could consider a real application of iOS. I want to program iOS when I finish school next year, but this class was completely a waste of my time. Edit: English is hard."
iOSProgramming,3az8hh,succeededcoma,2,Thu Jun 25 11:31:34 2015 UTC,You should definitely check out the Stanford iTunes U course which teaches the essentials to build iOS-Apps.  There should also be older versions available if you don't want to learn Swift and stay with Objective-C.
iOSProgramming,3az8hh,succeededcoma,1 point,Thu Jun 25 14:09:44 2015 UTC,I want to learn Swift just my class course is objective-C only. I was planning to do the treehouse iOS Swift course after I finished all of the Objective-C training modules and this summer class. Would you say the Stanford iTunes U course is better?
iOSProgramming,3az8hh,aazav,2,Thu Jun 25 15:02:47 2015 UTC,"I've never tried any treehouse courses myself before so i can't really compare the two, i just know i've learned a lot from doing the Stanford course a while back :)"
iOSProgramming,3axzy8,codevil,1 point,Wed Jun 24 12:11:24 2015 UTC,The first answer on StackOverflow is absolutely correct.
iOSProgramming,3az47r,majkeli,2,Wed Jun 24 17:41:10 2015 UTC,"Class Asset {     Int assetId,     String name,     Field[] questions, }  Class Field {     Int fieldId,     Int assetId,     String name,     String[] options }  Class Survey {     Int assetId,     Dictionary{          Key = Int fieldId,         Value = String answer     } }"
iOSProgramming,3az47r,joepeg,1 point,Wed Jun 24 18:15:58 2015 UTC,Thank you for that.  What would be the best way to store the survey data in Core Data?
iOSProgramming,3az47r,joepeg,1 point,Wed Jun 24 18:30:56 2015 UTC,"Not sure I follow.   You would pre-populate core data with instances of fields and assets. At runtime, you would load each asset and its corresponding fields to prompt the user to select from the options.   To store the answers chosen, create an instance of Survey, and populate the dictionary with the answers and store the survey in core data.   You'll probably want some more identifying info on the survey such as the user, date, etc."
iOSProgramming,3az47r,joepeg,1 point,Wed Jun 24 19:19:14 2015 UTC,"OK, I got it, thank you again.  So I would need an Options entity in Core Data too.  Switching my brain from relational DB thinking to Core Data is a bit of a challenge when it comes to lookup data."
iOSProgramming,3awe5u,johnwickham,6,Wed Jun 24 01:12:43 2015 UTC,If you can't run Xcode6 in new beta do this. Cheers
iOSProgramming,3awe5u,nahive,2,Wed Jun 24 07:40:44 2015 UTC,"Did that, it's working well!"
iOSProgramming,3awe5u,dparne,2,Wed Jun 24 15:33:15 2015 UTC,"I did this but it says ""You can't open the application ""Xcode"" because it is not supported on this type of Mac."" Any idea why this might happen?"
iOSProgramming,3awe5u,nahive,1 point,Tue Jul 7 22:46:58 2015 UTC,"Yeah I didn't figure it out, but if you remove Xcode and reinstall it from AppStore it will."
iOSProgramming,3awe5u,JVO1317,1 point,Wed Jul 8 06:21:04 2015 UTC,"Instead of reinstalling, I changed the Xcode package name in Applications folder, and it worked. Even I could rename it back to Xcode."
iOSProgramming,3awe5u,Rudy69,9,Sun Jul 12 03:41:09 2015 UTC,Run  /Applications/Xcode.app/Contents/MacOS/Xcode       In the console and Xcode will start just fine. It's annoying but it works
iOSProgramming,3awe5u,instasergio,1 point,Wed Jun 24 05:49:31 2015 UTC,"Works good, thanks!"
iOSProgramming,3awe5u,mugu22,1 point,Wed Jun 24 15:18:39 2015 UTC,"Oh my god, thank you! I was ready to reinstall to Yosemite."
iOSProgramming,3awe5u,mn2005,1 point,Thu Jun 25 15:59:04 2015 UTC,"that works for me, but when running an app to the simulator, Xcode freezes / hangs. Do you have an idea why?"
iOSProgramming,3awe5u,Rudy69,1 point,Wed Jul 1 15:06:52 2015 UTC,"Not sure, everything worked as expected for me"
iOSProgramming,3awe5u,mn2005,1 point,Wed Jul 1 15:09:23 2015 UTC,reinstalled el capitan beta 2 over my current installation and also reinstalled xcode 6.4 final. working now. thanks!
iOSProgramming,3awe5u,ryno2019,1 point,Thu Jul 2 12:42:43 2015 UTC,Needed this. Thanks!
iOSProgramming,3awe5u,totallynaked-thought,3,Mon Jul 6 23:17:04 2015 UTC,You must download Xcode 7 for El Capitan.. 6.4 is for Yosemite only.
iOSProgramming,3awe5u,totallynaked-thought,2,Wed Jun 24 01:34:33 2015 UTC,"Right, but Xcode 7 is a beta… and comes with the inherent complications. Though, if you've installed the ElC beta on a primary machine, I guess you're okay with that :)"
iOSProgramming,3awe5u,mversteeg3,3,Wed Jun 24 01:51:43 2015 UTC,make sure you get the command-line developer tools too from the developer portal and i saw a new package too of yet additional tools.   since i use home-brew and some other accouterments that are built from source.. i've not upgraded yet to the bleeding edge.
iOSProgramming,3awe5u,joelypolly,1 point,Wed Jun 24 02:14:10 2015 UTC,El Capitan is in beta as well... Edit: just saw the last part.  I am not a smart man
iOSProgramming,3awe5u,devc4,1 point,Wed Jun 24 11:13:27 2015 UTC,"I have to say this beta has been a pretty stable and pain free one, relatively speaking"
iOSProgramming,3awe5u,NerdWith_A_Tan,1 point,Wed Jun 24 14:53:05 2015 UTC,true
iOSProgramming,3awe5u,TheMiamiWhale,-2,Thu Jul 16 13:18:19 2015 UTC,"I mean it's pretty simple and Apple even says it multiple times before you download anything, none of this stuff is for prod or machines that need to do prod work. Don't install the beta on your one and only machine. Or if you feel compelled to, create a new partition to test el captain in and keep your production work safe."
iOSProgramming,3awe5u,NerdWith_A_Tan,3,Wed Jun 24 06:36:23 2015 UTC,I didn't get from any of OP's posts here that he doesn't understand this. I think he was merely trying to let people know Xcode 6 doesn't run on El Capitan.
iOSProgramming,3awe5u,brdth,-3,Wed Jun 24 09:14:04 2015 UTC,"Fair enough, I must have misunderstood his/her intent. I'm just tired of people complaining about this kind of thing when they probably shouldn't have installed this on a machine they need for prod work/every day personal machine. Especially when its easy to do a new partition, and do test work on there."
iOSProgramming,3awe5u,s73v3r,2,Wed Jun 24 10:10:26 2015 UTC,There's no excuse for that with all of the VM technology out there. I have an external hard drive dedicated just for that.
iOSProgramming,3awe5u,lucasvandongen,2,Wed Jun 24 12:04:48 2015 UTC,I dunno. I've been able to run current release tools on beta OS X before. I remember doing it on Mavericks beta.
iOSProgramming,3aytzi,finkin,2,Wed Jun 24 16:26:41 2015 UTC,Yup - when you submit there is a section where you enter in account credentials and instructions.  This is done every day (probably every minute of every day?).
iOSProgramming,3aytzi,affeking,1 point,Wed Jun 24 17:34:10 2015 UTC,Yes. This is what I have done for a financial app in the past.
iOSProgramming,3aytzi,Space_Butts,1 point,Wed Jun 24 17:08:47 2015 UTC,Yes.
iOSProgramming,3axqxx,napolux,7,Wed Jun 24 10:13:21 2015 UTC,"I've found Crashlytics (free) to work the best. It's from Twitter.  The numbers are usually lower from iTunes Connect because those reports only come from users who ""opt-in"" during device setup. Lots of people don't. Crittercism or other solutions track everything.  One important fact: Any of these only catch actual crashes. They don't count if your app was artificially terminated by the system, for example using too much memory will get your app killed by the system with no report."
iOSProgramming,3axqxx,brendan09,2,Wed Jun 24 14:12:50 2015 UTC,"Any sort of error tracking can miss some types of crashes due to the nature of IOS.  Crittercism is very up and down for me.  Some days I get nothing at all when my test flight is crashing a lot.  If you are running a server back end for your app, I would recommend just roll your own instead of using either Flurry or Crittercism. They both use the same library so you are paying them to obtain your app usage stats. https://www.plcrashreporter.org/"
iOSProgramming,3axqxx,yetanotherwoo,1 point,Wed Jun 24 13:09:35 2015 UTC,"The dev shop I worked for used to have Crittercism as a standard, but we swapped to Crashlytics - it was free and seemed to be more effective. We're considering phasing it out and using New Relic instead, since it does performance monitoring primarily and crash reporting as well, but the free tiers of it are not nearly as good as Crashlytics - though we've had cases where having both results in missed catches on one side or the other."
iOSProgramming,3axqxx,rivade,2,Wed Jun 24 14:21:34 2015 UTC,"Crashlytics is free for a reason, your data is used to target advertising. Crittercism also provides performance and transaction monitoring. New Relic is far from a mobile company and I've found their SDK to cause issues."
iOSProgramming,3axqxx,mtnboardr,1 point,Wed Jun 24 22:07:46 2015 UTC,"""New Relic is far from a mobile company and I've found their SDK to cause issues. "" What sort of issues? I am curious as I am currently evaluating it for my company."
iOSProgramming,3axqxx,StunnerAlpha,1 point,Thu Jun 25 00:40:16 2015 UTC,"Just a different comment for other info, there's also Fabric.io, it requires yet another app install on OSX, but it seems to not use plcrashreporter so catches different things, YMMV."
iOSProgramming,3axqxx,yetanotherwoo,1 point,Wed Jun 24 15:23:36 2015 UTC,Fabric is Crashlytics (Twitter)
iOSProgramming,3axqxx,cuomo456,1 point,Wed Jun 24 17:18:05 2015 UTC,"Doh, thanks!"
iOSProgramming,3aypnp,wedranb,2,Wed Jun 24 15:56:51 2015 UTC,Happy to chat. I'm based in the UK/Ireland at the moment and free in the evenings mid week. I've been developing in Obj-C for 6 years and Swift for 4 weeks. Quite opinionated about architecture and testing. DM me if you want my Skype ID
iOSProgramming,3aypnp,Alcoholic_Synonymous,1 point,Wed Jun 24 19:36:25 2015 UTC,"Happy to chat as well. I have been working in mobile industry for 3 years, 1 year in android, 2 in iOS - Objective C. Though I am not qualified to be a mentor, i'd be happy to chat about code and discuss ideas."
iOSProgramming,3aycj4,onemillions,2,Wed Jun 24 14:13:48 2015 UTC,Couldnt you just create a tableviewcell that you use when datasource.count == 0 ?  like in your numberOfRows() you would have if datasource.count == 0 -> return 1  then in cellForRow()  if datasource.count == 0 return mySexyPlaceHolderCell
iOSProgramming,3aycj4,criosist,1 point,Wed Jun 24 16:01:31 2015 UTC,Thank you I will try doing that I never thought of that. So you can have more that one placeholder cell for a table?   Edit: I tried it and it worked perfectly thank you. I am still new to IOS development but this has really helped me out.
iOSProgramming,3ax5ha,th3phantom,1 point,Wed Jun 24 05:27:40 2015 UTC,"If its for your own project, there are libraries (often posted in this sub) to visualise touches. For third party stuff, I'm afraid jailbreaking is the only solution."
iOSProgramming,3ax5ha,r-w-x,1 point,Wed Jun 24 14:23:10 2015 UTC,"I use this. You'll have to set the ""alwaysShowTouches"" property to YES to see touches in Quicktime."
iOSProgramming,3ax5ha,nepragen,1 point,Wed Jun 24 19:47:17 2015 UTC,thank you all for answering.
iOSProgramming,3aun76,jakemarsh,0,Tue Jun 23 17:21:56 2015 UTC,"should the swift 2 ""if statements"" be ""=="" or ""=""?"
iOSProgramming,3aun76,rajohns08,1 point,Wed Jun 24 02:26:53 2015 UTC,"/u/rajohns08: nope, that's = on purpose. In pattern matching, that is the syntax for saying ""the thing on the right side is inside this range"", and now that syntax works in if statements.  It is perhaps a tad confusing for anyone coming into the language now, I had to go check to make sure I wasn't nuts when I saw your comment haha.  Cheers!"
iOSProgramming,3aun76,Power781,3,Wed Jun 24 04:23:52 2015 UTC,The variable's name is wrong though.
iOSProgramming,3axz9l,drumerboy1988,2,Wed Jun 24 12:03:41 2015 UTC,xcode Command /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc failed with exit code 1  i bolded the relevant words /s
iOSProgramming,3axz9l,CodeTherapist,2,Wed Jun 24 15:30:51 2015 UTC,"swiftc is referring to the swift compiler, so somehow the swift compiler has failed. The first thing I would do would be to check your compile sources and make sure that none of them are red. Also try deleting derived data, than clean and run your application."
iOSProgramming,3axz9l,FutureIsMine,1 point,Wed Jun 24 17:01:51 2015 UTC,"so my app loads items from a .plist file, and that file is now red and I can't open it. Any clue why this happened and anyway to fix it?"
iOSProgramming,3axz9l,FutureIsMine,1 point,Wed Jun 24 22:42:24 2015 UTC,"No idea what happened to it, You will need to drag the file into your project and put it in as if its a new file."
iOSProgramming,3au8o3,blademan88,3,Tue Jun 23 15:34:28 2015 UTC,how do you deal with the limited number of boundaries that you can setup in iOS?
iOSProgramming,3au8o3,joelypolly,1 point,Tue Jun 23 23:39:19 2015 UTC,We build all the geofences using our sdk and then calculate entrance/exit all with our own logic. This lets us have better control and do fun things like completely bypass the limited number of boundaries :)
iOSProgramming,3au8o3,joelypolly,2,Wed Jun 24 06:38:35 2015 UTC,would that have an impact on the battery life?
iOSProgramming,3au8o3,aazav,1 point,Wed Jun 24 07:34:17 2015 UTC,"There is an impact but we've worked very hard to make sure that the battery drain is minimal. In fact, even with hundreds of geofences running, we manage to have a battery drain of less than 5% per day!"
iOSProgramming,3au8o3,ThePantsThief,2,Wed Jun 24 16:27:33 2015 UTC,"So, give us an executive summary of what it offers.  Thanks!"
iOSProgramming,3au8o3,megablast,3,Tue Jun 23 16:58:05 2015 UTC,"Hey aazav! In short, we let you detect real world events with just a few lines of code. An example would be: ""let me know when someone leaves their house in the morning."" Using our SDK, you can monitor this with only a few lines of code. We automatically handle detecting the user's home, running in the background, optimizing for battery life, and perhaps most important, making sure everything is handled in an extremely privacy friendly manner. Here's a sample video we made to demonstrate what its like to use our tech:  https://vimeo.com/131504945  Our goal is to allow developers to code off real world events, not a bunch of messy sensor data."
iOSProgramming,3au8o3,megablast,1 point,Tue Jun 23 17:03:23 2015 UTC,That's pretty freakin' cool. Stuff like this is always appreciated. :) Thanks!
iOSProgramming,3au8o3,sloec,1 point,Tue Jun 23 18:48:22 2015 UTC,Thanks for the feedback ThePantsThief! Very much appreciated!
iOSProgramming,3au8o3,sloec,1 point,Tue Jun 23 18:54:19 2015 UTC,How do you know where someone's house is?
iOSProgramming,3au8o3,RabbiSchlem,1 point,Thu Jun 25 09:51:45 2015 UTC,We built some in house algorithms to determine this. It typically takes about 5 days for our algorithm to learn where someone lives and then we continously update it in case someone moves or we made a mistake in our initial guess (e.g. user was on a business trip when they downloaded the app using our sdk). All of this is done in an EXTREMELY privacy friendly manner. We store the locations on the phone itself so that we never even have access to it. We never collect any PII data and we obfuscate or delete any data on our server (e.g. wifi) that could be possibly used to reverse engineer someone's home location.
iOSProgramming,3au8o3,big_chugga,1 point,Thu Jun 25 18:12:50 2015 UTC,"So you just look at locations at night time, and if a person is regularly in that place, it is their home."
iOSProgramming,3au8o3,pranoy1c,1 point,Thu Jun 25 20:47:24 2015 UTC,"Sure, that will get it done most of the time! However, there are several edge cases which we are still working to perfect:   university students consultants children with divorced parents adults who spend multiple nights a week at their girl/boyfriends house etc    With that said, I agree with you home is one of the easier use cases. Work has significantly more important edge cases and we plan to tackle many more."
iOSProgramming,3au8o3,pranoy1c,2,Fri Jun 26 02:09:27 2015 UTC,Can the end user define custom locations or just the app developer?
iOSProgramming,3au8o3,pranoy1c,1 point,Tue Jun 23 22:16:00 2015 UTC,"The app developer could easily make that a user feature. The SDK revolves around a concept of triggers (notify me when this trigger happens). Registering a trigger is very easy, for example:   let trigger = FireTrigger. whenEntersPoi( PoiType. Restaurant)   The developer could easily allow the user to choose only categories they care about or even enter custom locations via lat/long and/or address.   Let me know if that didn't answer your question and thanks for looking!"
iOSProgramming,3au8o3,finn_thehuman,1 point,Tue Jun 23 22:25:27 2015 UTC,Cool thanks.
iOSProgramming,3au8o3,finn_thehuman,2,Tue Jun 23 22:50:52 2015 UTC,This looks great! I've been interested in doing an app that tracks your movement. Could I get one of the $250 codes?
iOSProgramming,3au8o3,garfbargle,1 point,Wed Jun 24 11:59:47 2015 UTC,Of course! I've sent you a PM! Thanks so much for the interest!
iOSProgramming,3au8o3,Macintosh_HD,1 point,Wed Jun 24 16:28:00 2015 UTC,This looks really interesting. Is it free to use for commercial purposes?
iOSProgramming,3au8o3,Macintosh_HD,2,Tue Jun 23 17:50:24 2015 UTC,"It's free to use up to 10,000 events a month. I also messaged you a code for $250 credit! Thanks for checking out the website!"
iOSProgramming,3au8o3,Macintosh_HD,1 point,Tue Jun 23 17:52:09 2015 UTC,"thanks for sharing, looks very cool! few questions: 1. how exactly does the sdk detect changes in the real world? like does the phone need to be connected to another sensor?  2. Will there be any support for android? 3. Is this available for use in commercial apps? 4. What are the privacy concerns handled like? Who is the data shared with? 5. The point of interests - like gym for example, does the user actually need to firstly define that place as a point of interest? or does the sdk already know different locations as point of interests? 6. Which countries does the sdk support for point of interest? Ps. Like the website, looks nicely designed with no extra stuff! I might build something off of this"
iOSProgramming,3au8o3,dcpc10,2,Tue Jun 23 18:10:09 2015 UTC,"Hi pranoy1c!    We only use phone hardware, no beacons or anything of that sort is needed. You simply add a few lines of code and we handle everything else, including running in the background, ensuring privacy, dealing with poi data, etc. We of course use location but then we supplement it with a bunch of sensor data to help reduce false positives.  Android is definitely on the roadmap! I can't give you an estimate yet, but if demand is there, we will deliver! Yes, 100%. In fact, message me and I'll give you a code for $250 worth of credits in case you ever want to start going commercial with it.  The data is shared with no one. We take MANY measures to ensure privacy and this is one of the things we pride ourselves on. No PII data is collected. Most of the processing occurs on the phone itself so that Sense360 (and everyone else) doesn't have access to it. Any data that we do handle is either obfuscated and encrypted or processed and instantly deleted. We are not trying to gather and sell data. We are trying to bring sensor intellegence to the masses and we know one of the most important parts of that will be ensuring privacy.  Nope, you simply register ""gyms"" with one line of code and we'll handle the rest. L) Right now we only support USA.    I super appreciate your feedback. Please feel free to message me here or email me at ori AT sense360 COM with ANY (and I mean ANY) questions and/or feedback."
iOSProgramming,3au8o3,megablast,2,Tue Jun 23 18:21:05 2015 UTC,"great reply to all my questions. A bit disappointed at the USA only part though, I am in Canada and would definitely love to play around with your SDK this weekend. But being USA only, I can't :( How much of work is involved for other country support? like isn't ""location awareness"" available in most countries?   Android would really be appreciated as I develop both iOS and android and usually I have found android users to adopt this type of stuff faster (NFC, wireless charging etc). Located in Canada, can i still do something with testing the API?"
iOSProgramming,3au8o3,megablast,2,Tue Jun 23 21:14:39 2015 UTC,"It's not so much about doing work to make it ""work"" in Canada, it's just that we haven't really tested it or fine tuned our algorithms for any potential differences that may occur. We will implement a few changes tonight and have it available for use for you in Canada but I can't make any promises about performance ;)   We will definitely add Android in the near future. We have so many things we want to do but only so much bandwidth. It was a tough decision but ultimately we decided for various reasons to go iOS first."
iOSProgramming,3au8o3,surfaspen,1 point,Tue Jun 23 21:19:11 2015 UTC,"thanks!! from your responses, seems like you are really investing lot of time in getting this going. I wish you the very best! Look forward to working with the sdk!"
iOSProgramming,3au8o3,surfaspen,1 point,Wed Jun 24 03:22:27 2015 UTC,"I can't stress this enough: we want ANY and ALL feedback. I'm not just talking about small things, I'm talking about everything. Do you wish this product went in a totally different direction? Would you want to use it in a completely different way than we've designed? Do you want small changes? Any and all feedback will be greatly appreciated."
iOSProgramming,3axdz8,hundley10,2,Wed Jun 24 07:07:02 2015 UTC,Something along these lines: https://gist.github.com/jawngee/722c039e7dcb79f52619  You'll want to change line #34 to configure the format you'd like the read samples to be in.
iOSProgramming,3axdz8,safetywerd,1 point,Wed Jun 24 08:30:05 2015 UTC,"This is exactly what I was looking for! For line #34, I think my settings would be about the same right? But in Swift I'm getting the error: ""AudioFormatID does not conform to protocol AnyObject"" when I create the outputSettings dictionary. For the life of me I can't figure out why..."
iOSProgramming,3axdz8,safetywerd,1 point,Wed Jun 24 21:18:55 2015 UTC,I don't do swift so I can't help you.  You definitely want to change the settings.  The settings in that gist are for mono samples at 8800khz. :)
iOSProgramming,3axdz8,jsonfellin,1 point,Wed Jun 24 21:25:21 2015 UTC,Check out The Amazing Audio Engine.  It'll give you everything you need to load an audio file or pull in audio from a mic.  You can add custom filters to process the audio however you like.
iOSProgramming,3axdz8,jsonfellin,1 point,Wed Jun 24 07:18:04 2015 UTC,"That looks like a useful framework, thanks. Can you confirm if this will return the actual, discreet audio samples to me? I can't seem to find much about that in the documentation. My goal is to perform some complex calculations on an input signal, rather than apply generic audio filters, so I need access to the low-level frames that make up the signals themselves."
iOSProgramming,3awskj,ThePantsThief,3,Wed Jun 24 03:17:31 2015 UTC,"UIImage is immutable, so it's generally okay to have multiple objects pointing to the same instance.  You probably don't want the performance/memory hit of copying the image.  Your suggested way of copying it also wouldn't work, the CGImage you pass to that method doesn't get copied so you would effectively just be making more images still backed by the same CGImage"
iOSProgramming,3awskj,dsfjisdjfisdmf,2,Wed Jun 24 03:37:51 2015 UTC,"I'm aware; seemed silly, haha. Thanks for confirming my suspicions :P"
iOSProgramming,3awskj,FutureIsMine,1 point,Wed Jun 24 03:59:05 2015 UTC,"Going further than NSCopying, its a good idea to even have Swift Structs use references to UIImages rather than storing them as a value type since that would be an incredibly expensive copy."
iOSProgramming,3atzub,nickchuck,5,Tue Jun 23 14:25:51 2015 UTC,/r/cringe
iOSProgramming,3atzub,iownacat,-2,Wed Jun 24 02:59:37 2015 UTC,http://gph.is/1FrF1ge
iOSProgramming,3atzub,mavdev,2,Wed Jun 24 04:31:56 2015 UTC,What are the funds from the Kickstarter campaign going to be used for?
iOSProgramming,3atzub,mavdev,1 point,Tue Jun 23 18:08:25 2015 UTC,"Our goal is $750 which we will use for some screen recording software and video production. As for the extra money, some will be just kept as profit. We also are looking to hire someone to help us expand our classes"
iOSProgramming,3atzub,voltimer,1 point,Tue Jun 23 18:39:56 2015 UTC,"Thank you for the transparent answer. All the best, I've seen your Youtube ads also, pretty nice."
iOSProgramming,3atzub,Clipstuh,0,Tue Jun 23 18:43:12 2015 UTC,Thanks. Hope I haven't invaded too many of your youtube videos ;)
iOSProgramming,3atzub,Clipstuh,1 point,Tue Jun 23 18:44:15 2015 UTC,"Nice initiative, the course will be free?"
iOSProgramming,3atzub,codeByNumber,1 point,Tue Jun 23 17:16:18 2015 UTC,"No, but with the Kickstarter the class is only $29. It will be more when it is finished in August.  What did you like or dislike about the project? Any feedback?"
iOSProgramming,3atzub,codeByNumber,1 point,Tue Jun 23 18:06:40 2015 UTC,"You're out of Provo? Cool, I'm in Orem; studying CS at the U!"
iOSProgramming,3atzub,tianan,1 point,Tue Jun 23 20:50:58 2015 UTC,Stinkin Ute! ;)   If you ever want to meet iOS devs in the area check out the cocoaheads http://www.meetup.com/Utah-Valley-CocoaHeads-iOS-and-Mac-Development
iOSProgramming,3atzub,alt51,1 point,Tue Jun 23 20:58:58 2015 UTC,Awesome thanks. I'm 19 but have been developing for iOS for 1.5 years.  Btw my names Nick too hhaha.
iOSProgramming,3atzub,utahpow,1 point,Tue Jun 23 21:33:16 2015 UTC,Nicks unite!
iOSProgramming,3atzub,xfan10,1 point,Tue Jun 23 22:23:43 2015 UTC,"As someone who is currently learning iOS programming using my pluralsight account, this looks interesting.  My question: You are clearly marketing this toward the complete beginner, but is it going to feel to slow for someone with years of programming experience? (zero iOS exp though)."
iOSProgramming,3atzub,xfan10,1 point,Tue Jun 23 22:26:23 2015 UTC,"Hmmm, maybe. I have a lot of students who come from different coding backgrounds that think it's a nice intro. Others are bored.   Here's a coupon to get my iOS 8 class as a test run. If you like it, please back my project :) https://www.udemy.com/ios-8-and-swift-how-to-make-a-freaking-iphone-app/?couponCode=codeByNum"
iOSProgramming,3atzub,xfan10,1 point,Tue Jun 23 22:32:35 2015 UTC,Thanks Nick! I will definitely check it out.
iOSProgramming,3atu5w,ThePantsThief,5,Tue Jun 23 13:37:03 2015 UTC,"The answer is...it depends.  This is a good exposition with a lot of great pointers to even more details if you want to go down the rabbit hole even farther.  Swift makes use of multiple dispatch techniques including borrowing Objective C, vtables, and direct calls (final methods that can't be overridden).  I found it interesting to note that, despite all these tricks which impose all kinds of limitations, it still isn't appreciably faster than Objective C dispatch most of the time.  Edit: A really good exposition of Swift object memory layouts."
iOSProgramming,3atu5w,cyancynic,1 point,Tue Jun 23 16:07:41 2015 UTC,"That first link answered just about everything I wanted to know, and the second one is a good read as well. Thanks!"
iOSProgramming,3atu5w,FutureIsMine,1 point,Tue Jun 23 17:40:22 2015 UTC,Happy cakeday!
iOSProgramming,3atu5w,_cortex,2,Tue Jun 23 18:40:05 2015 UTC,"It has more to do with the compiler. The compiler needs to lookup the other methods of a class, but if its private or final than the compiler is more at ease knowing that there is no other subclass that has access to this method, therefore it won't perform the check which takes time."
iOSProgramming,3atu5w,chriswaco,2,Tue Jun 23 15:59:54 2015 UTC,"Isn't dynamic dispatch just another name for a vtable? C++ has the notion of static and dynamic dispatch as well, IIRC.   From my understanding, that article just says that in a class that might be subclassed, making a method private/final will make the compiler emit static method calls."
iOSProgramming,3atu5w,_cortex,3,Tue Jun 23 16:05:02 2015 UTC,"C++ uses vtables which are created at build time so the caller can find a method address using a simple table index. Obj-C method tables can be modified at runtime, though, which is great for flexibility and dynamic library support, but dispatch is slower. I think it requires a hash map and method address cache, but I haven't looked at it in detail in a few years.   Swift has an optimized dispatch system for its own classes, but supports Obj-C's system for compatibility and flexibility. Anything derived from NSObject will use Obj-C's dispatch system."
iOSProgramming,3atu5w,chriswaco,2,Tue Jun 23 16:32:27 2015 UTC,"Not sure why I'm being down voted, I was correct according to this Wikipedia entry - dynamic dispatch is the name of the technique, vtable is just how it is implemented in C++. The only practical difference is that the C++ vtable is read-only, while Objective-C's message dispatch is writable and therefore needs a cache to be fast (with a few other interesting features like message forwarding baked into the dispatcher), and Swift allows for static dispatch as well as both dynamic types."
iOSProgramming,3avt7g,FlatlandCow,2,Tue Jun 23 22:18:44 2015 UTC,"Doesn't seem so strange. Check that your 'IBUIViewControllerAutoLayoutGu' is declared correctly, only one time, and that the correct type is sent."
iOSProgramming,3avt7g,jeankev,0,Wed Jun 24 10:07:41 2015 UTC,"Ok, but where do I do that?"
iOSProgramming,3avob5,7re,3,Tue Jun 23 21:41:10 2015 UTC,We went from an older Object C app to a .net Xamarin forms app and they didn't blink an eye.
iOSProgramming,3avob5,barjam,2,Tue Jun 23 21:46:22 2015 UTC,"Oh wow, it certainly won't be anything that revolutionary :p"
iOSProgramming,3avob5,mistermagicman,3,Tue Jun 23 21:50:34 2015 UTC,"Make sure the bundle ID is the same! Otherwise it won't upload to iTunes Connect as the same app. But yes, you can completely rewrite it for an update."
iOSProgramming,3avob5,ThePantsThief,1 point,Tue Jun 23 22:09:30 2015 UTC,"Ok, thanks!"
iOSProgramming,3avob5,barjam,1 point,Tue Jun 23 22:27:48 2015 UTC,Why did you move to Xamarin?
iOSProgramming,3avob5,brendan09,0,Tue Jun 23 22:25:23 2015 UTC,Zero interest in learning objective C and I just needed to get an app out the door.
iOSProgramming,3avob5,barjam,1 point,Tue Jun 23 23:00:04 2015 UTC,"Zero interest in learning  just needed to get an app out the door.   Ah, what every great app is made of."
iOSProgramming,3avob5,Awkwardosaur,5,Wed Jun 24 02:05:03 2015 UTC,"I already know a ton of languages without any particular desire to learn an odd ball language such as Object C especially with the future of the platform moving to Swift. I have been doing this for over 20 years long enough to see the writing on the wall. I have to prioritize what I invest my time on learning as it isn't possible to learn everything and right now Object C is a very poor investment for me and everyone tells me to hold out another year on Swift.  I needed a simple business app. It didn't need to be ""great"" it just needed to perform it's task well and be maintainable by my .Net team. It also needed to support all the variants of i-devices along with Android.  So a couple of .Net developers in their spare time were able to release an iPhone app with zero previous iPhone experience....   Not a bad decision for now.  On the other hand if we would have wanted to release a ""great"" app that wasn't a simple forms based app we would have used something else."
iOSProgramming,3avob5,barjam,0,Wed Jun 24 03:21:04 2015 UTC,"It's funny that all the Microsoft fans keep telling all the Apple stuff is weird and  not productive: the languages, tools, frameworks. And still the most of the people dont give a shit about Microsoft when it comes to mobile stuff.   I was watching Microsoft Virtual Academy lessons for Windows Phone development and the teachers were always dissing everything that Apple does. I just had to stop watching."
iOSProgramming,3avob5,ThePantsThief,2,Wed Jun 24 07:25:35 2015 UTC,"I am not even a Microsoft fan if that is what you are implying. My main development machine is a MBP and all my gadgets are apple.  I am largely language agnostic. My last job was C++ and Java, this one was .Net and if I thought Objective C had a future I would learn it. It doesn't and would be a poor choice to waste my time there."
iOSProgramming,3avob5,ThePantsThief,-1,Wed Jun 24 12:03:04 2015 UTC,RemindMe! 3 days Give this guy gold
iOSProgramming,3avob5,barjam,-1,Wed Jun 24 03:18:48 2015 UTC,Objective-C will probably be easier to learn now that you're at least familiar with Cocoa on some level!
iOSProgramming,3avob5,me_asplode,1 point,Wed Jun 24 03:20:04 2015 UTC,"We are a .Net team. Learning Xamarin was, well, there was nothing really to learn. Easy. Xamarin is an extremely simple wrapper for Cocoa it seems and anytime we went digging for clarity the cocoa api stuff sufficed."
iOSProgramming,3avcn1,ThatBoringFellow,3,Tue Jun 23 20:19:21 2015 UTC,"Come on, it's his/her first one :-). I remember that feeling, it was a lot of fun."
iOSProgramming,3avcn1,dreaminginbinary,1 point,Tue Jun 23 20:59:17 2015 UTC,"You would be better off having the app for free and run add banners here and there, just my 2 cents.  EDIT: making it free would cause a lot more people to download it, more reviews, more critics , you would see what people don't like, you could learn from that and improve the app.  gz on your first app."
iOSProgramming,3av378,luniawar20,1 point,Tue Jun 23 19:12:57 2015 UTC,"Always quality over quantity. One good app on the app store should score you an interview. So polish, polish, polish to make whatever you've got up shine.  If I see a half dozen poorly crafted apps I'm much less impressed."
iOSProgramming,3av378,Arkelias,1 point,Tue Jun 23 19:51:55 2015 UTC,"A non-flappy bird app might help an entry-level candidate get an interview, but throwing a couple view controllers together doesn't really tell me if someone can develop software.  But, yeah, all other things being equal, one good app might get them to an interview over someone with the same background and no apps, or a ton of bad ones."
iOSProgramming,3av378,shiggie,1 point,Tue Jun 23 20:13:16 2015 UTC,Something that looks decent and does something - it can't be something that was obviously made just to have an app on the store.
iOSProgramming,3av378,finn_thehuman,1 point,Tue Jun 23 21:49:17 2015 UTC,"Quality is all that matters.  If you can make one shitty app you can make a hundred, quantity means nothing, and is actually a red flag."
iOSProgramming,3av378,MacroMeez,1 point,Wed Jun 24 06:24:26 2015 UTC,"Quality over quantity. This is a nice list of stuff it's typically nice to know so I'd aim to hit most of these points, if they apply to the type of app you're making: http://roadfiresoftware.com/2015/01/what-you-need-to-know-to-land-a-job-as-an-ios-developer/  There are a few more view controller configurations in that list than makes sense in most apps so just use what makes sense."
iOSProgramming,3asqoa,brendan09,2,Tue Jun 23 05:17:08 2015 UTC,You should create some gifs and pictures and add them to the GitHub page so we can see how it works without having to set it up.
iOSProgramming,3asqoa,rivade,2,Tue Jun 23 14:26:38 2015 UTC,The repo now has a gif of the sample project running and an image of the code require to give that view controller its resizing abilities.  Let me know what you think!  Thanks!
iOSProgramming,3asqoa,rivade,1 point,Tue Jun 23 20:26:19 2015 UTC,"Looks slick. I like it, good job."
iOSProgramming,3asqoa,JEzuSFC,2,Tue Jun 23 20:37:52 2015 UTC,Thanks!
iOSProgramming,3asqoa,tangoshukudai,1 point,Tue Jun 23 20:38:13 2015 UTC,"I'll add a gif. There is a sample project in the repo, however."
iOSProgramming,3asqoa,nazihatinchimp,1 point,Tue Jun 23 15:38:29 2015 UTC,"I'll give it a try, thanks!"
iOSProgramming,3asqoa,nazihatinchimp,1 point,Tue Jun 23 07:08:00 2015 UTC,video of it in action?
iOSProgramming,3asqoa,Siwan__,1 point,Tue Jun 23 14:52:19 2015 UTC,I'll be adding a gif soon.
iOSProgramming,3autbe,succeededcoma,1 point,Tue Jun 23 18:05:26 2015 UTC,"With regards to actually transferring the path, it'll probably be easier/cleaner to transfer the path data (raw lat/lon points, encoded as JSON or whatnot) and then recreate the overlay on the recipient's device. As far as the actual method of data transfer (SMS, bluetooth, etc...), it's hard to say without more context."
iOSProgramming,3aus9p,kaneua,2,Tue Jun 23 17:57:45 2015 UTC,"Depends on what you want to achieve, i personally find Objective C pretty easy to learn. Also, if you want to make apps, you must be up to date with with OSx version."
iOSProgramming,3aus9p,bpozega,1 point,Tue Jun 23 18:50:00 2015 UTC,"I want to achieve the basic knowledge of Objective-C, write some console applications to get familiar with it and then buy a real Mac machine."
iOSProgramming,3aus9p,bpozega,2,Tue Jun 23 19:47:47 2015 UTC,"Its worth it, simple language and easy to learn, try it for a week and see if you like it."
iOSProgramming,3aus9p,ChristinaMltn,1 point,Tue Jun 23 23:19:52 2015 UTC,Thanks for your answer.
iOSProgramming,3aus9p,Starchand,2,Tue Jun 23 23:28:58 2015 UTC,"Best place to look at what the changes were is Apple's docs on the changes in Xcode: https://developer.apple.com/library/ios/documentation/DeveloperTools/Conceptual/WhatsNewXcode/Articles/Introduction.html#//apple_ref/doc/uid/TP40004635-SW1  Big stuff that changed: - NSArray/NSDictionary literals were added in Xcode 4.4 which requires OS X 10.8. That's kinda the tipping point for ""modern"" Obj-C. - ARC memory management & Storyboards in Xcode 4.2. You could skip storyboards but I wouldn't go pre-ARC for anything serious (I would play with it to get a feel for what ARC is doing).  Really, learning Obj-C to build apps is more about the frameworks than the language. You'll have a hard time with that in a very old Xcode or the Linux Obj-C toolchain. If you really just want to learn the language (not the frameworks, building iOS UIs, etc) you could stick with old/Linux stuff."
iOSProgramming,3aus9p,Starchand,1 point,Wed Jun 24 12:38:34 2015 UTC,"Thanks. My target is to get familiar with it and build a couple of ""old"" Mac apps just for fun. I guess, if I will have 10.6 Obj-C experience, I will grasp modern things faster."
iOSProgramming,3aus9p,brendan09,1 point,Wed Jun 24 13:08:37 2015 UTC,You'll need 10.9 at least.
iOSProgramming,3at0m9,JustThall,5,Tue Jun 23 07:21:21 2015 UTC,"They used React-native, Pop and ComponentKit. Paper had a team of UI and Devs working on it for 1 year."
iOSProgramming,3at0m9,Starchand,2,Tue Jun 23 08:07:39 2015 UTC,Wasn't it just Pop? I don't think other two existed back when it came out.
iOSProgramming,3at0m9,meelawsh,1 point,Tue Jun 23 13:50:50 2015 UTC,"Just what I needed, thx"
iOSProgramming,3at0m9,David_c_m,3,Tue Jun 23 23:02:13 2015 UTC,"Paper wasn't written using react-native, they wrote it in objc/c++, the smooth animations were achieved using async display kit"
iOSProgramming,3at0m9,Starchand,2,Tue Jun 23 10:23:48 2015 UTC,Your right. I got confused as they just talk about it in their react-native video - https://youtu.be/KVZ-P-ZI6W4?t=17m51s
iOSProgramming,3at0m9,cyancynic,2,Tue Jun 23 18:00:17 2015 UTC,All the packages for Paper are listed in the app in the 'licenses' deep in the preferences.
iOSProgramming,3asmug,bvsveera,1 point,Tue Jun 23 04:37:04 2015 UTC,did you ask users to have CoreLocalization service during app/always permision ?
iOSProgramming,3asmug,pisu86,1 point,Wed Jun 24 03:23:19 2015 UTC,"Yep, did that. A deleted comment on this thread suggested to use the Photos framework, or Core Graphics, so I'll probably be able to use those to resolve my problem."
iOSProgramming,3aqdnf,jakemarsh,3,Mon Jun 22 17:35:21 2015 UTC,Little Bites of Cocoa is quickly becoming one of my favorite resources. Thanks!
iOSProgramming,3aqdnf,lyinsteve,4,Mon Jun 22 20:27:49 2015 UTC,thanks so much for reading! :)
iOSProgramming,3aqdnf,FourMoreCups,2,Mon Jun 22 22:45:52 2015 UTC,Honestly love these things. Definitely subscribing. Thank you!
iOSProgramming,3asaaw,th3phantom,2,Tue Jun 23 02:41:12 2015 UTC,Did you use a UINavigationController and push on another view controller that has a scrollview?  Or did you just put a navigation bar in a scrollview?
iOSProgramming,3asaaw,perezda,1 point,Tue Jun 23 04:03:49 2015 UTC,I put a navigation bar in a tableviewcontroller
iOSProgramming,3asaaw,perezda,1 point,Tue Jun 23 17:06:00 2015 UTC,that's the problem. it shouldn't be a sub view of the tableview. its hard to make suggestions without knowing more about how you're building the app. do you know how to use UINavigationController?
iOSProgramming,3asaaw,mistermagicman,2,Tue Jun 23 23:24:21 2015 UTC,Like this?
iOSProgramming,3asaaw,alfa96,1 point,Tue Jun 23 10:08:40 2015 UTC,"I would put a UIScrollView beneath the navigation bar, and then put all the other views inside the UIScrollView. Also, I'd probably disable bouncing."
iOSProgramming,3asaaw,aazav,0,Tue Jun 23 04:02:39 2015 UTC,Agreed.  Bouncing is evil and needs to die in a fire.
iOSProgramming,3asaaw,aazav,1 point,Tue Jun 23 17:00:09 2015 UTC,when the user is scrolling down?  when the user scrolls down?  when the user has scrolled down?
iOSProgramming,3asrqu,CinoRips,3,Tue Jun 23 05:29:13 2015 UTC,It depends. That can be a couple of hundred to thousands.
iOSProgramming,3aqe0i,IAteTheTigerOhMyGosh,1 point,Mon Jun 22 17:37:51 2015 UTC,"https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html  Cmd-F ""Receiving Keyboard Notifications"""
iOSProgramming,3aqe0i,iOSbrogrammer,1 point,Mon Jun 22 19:46:01 2015 UTC,"Also, I'm not sure about when the keyboard is hidden, but when it's visible that ""toolbar"" is called the inputAccessoryView."
iOSProgramming,3apw1q,kricke,3,Mon Jun 22 15:22:24 2015 UTC,"Stanford iOS8 course is the best resource to get started and you can just watch it without having to ""code along"" while still being able to know what is going on. https://itunes.apple.com/en/course/developing-ios-8-apps-swift/id961180099  If you have an iOS device, you should try Swifty, its like the apples swift programming guide, but interactive. https://itunes.apple.com/us/app/swifty-learn-to-code-in-swift!/id886315617?mt=8&ign-mpt=uo%3D4  Edit: Swifty is freemium (some chapters are free the rest can be unlocked for 2.99)"
iOSProgramming,3apw1q,densmo,3,Mon Jun 22 19:28:35 2015 UTC,"Those are perfect, thanks!"
iOSProgramming,3apw1q,Phr34Ck,1 point,Mon Jun 22 22:15:37 2015 UTC,is it possible to get these courses on youtube? The problem is that it always download huge (700+ mb per movie) files and my Internet connection is not that good.
iOSProgramming,3apw1q,densmo,1 point,Mon Jun 22 22:18:19 2015 UTC,https://www.youtube.com/results?search_query=stanford+ios8
iOSProgramming,3apw1q,burritofridays,3,Mon Jun 22 22:31:32 2015 UTC,"I can recommend a these two guys on Youtube.   Skip Wilson:  https://www.youtube.com/user/SkipCasts  and  Brian Advent:  https://www.youtube.com/channel/UCysEngjfeIYapEER9K8aikw  Also, though not video tuts, the tutorials over at Raywenderlich.com and hackingwithswift.com are pretty solid too."
iOSProgramming,3as602,meruapps,5,Tue Jun 23 02:04:20 2015 UTC,"If you never move it and it has no lighting, it doesn't have to be true 3d. Fake it with an image mask."
iOSProgramming,3as602,aoakenfo,1 point,Tue Jun 23 05:09:05 2015 UTC,Thanks! I think i'll try that out.
iOSProgramming,3as602,brendan09,2,Thu Jun 25 03:06:25 2015 UTC,SceneKit (with maybe SpriteKit in iOS 9) is probably what you're looking for.
iOSProgramming,3as602,shiggie,1 point,Tue Jun 23 02:13:35 2015 UTC,"Cool, thanks for the response!"
iOSProgramming,3as602,cuomo456,2,Thu Jun 25 03:06:35 2015 UTC,"There's also OpenGL (ES) or Metal, which works on iPhone 5s or greater (and soon, OS X, though I suspect not on all hardware).  I also wrote an app that will display objects in obj format.  What else do you want the app to do?"
iOSProgramming,3arwcf,PM_ME_YOUR_BELT,3,Tue Jun 23 00:38:28 2015 UTC,"This is typically bad UI practice. Users don't like this. Here's how to do it, with some compromises:    Hide the status bar. Banners will be hidden while your app is open. You can determine if the app was left by sending a network request for the ""Did Enter Background"" notification or the ""Application Will Terminate"" notification. You can't programmatically lock the user into your app."
iOSProgramming,3asbd4,Rick-Asstley,2,Tue Jun 23 02:50:12 2015 UTC,If your just starting out I would focus more on price point. I have a 2009 iMac with 8gb of ram and it works fine. Any of the MacBook pros would work well so go with what you want to pay.
iOSProgramming,3asbd4,micro435,1 point,Tue Jun 23 03:06:38 2015 UTC,"Awesome, I wasn't sure if the older systems were compatible with Xcode, Yosemite, or anything else. Thanks!"
iOSProgramming,3asbd4,micro435,2,Tue Jun 23 19:58:20 2015 UTC,Yeah. As long as you have Yosemite you should be able to work with the latest version of Xcode and swift.
iOSProgramming,3asbd4,titleist2015,2,Tue Jun 23 22:27:07 2015 UTC,I have the 13 inch MacBook pro retina with the 256 gb ssd and I love it. It's been really good for all developing that I've done. The 13 inch screen does get a little cluttered when you have a lot going on in Xcode though. All in all though I have no complaints
iOSProgramming,3asbd4,bvsveera,2,Tue Jun 23 04:16:12 2015 UTC,"Glad to hear you like yours and that it's working out for ya! I've also read that too, about not having too much real estate to work with. I have an external 22"" monitor though so I believe that should help"
iOSProgramming,3asbd4,bvsveera,2,Tue Jun 23 19:53:58 2015 UTC,"I use a 2011 13"" MacBook Pro, which is becoming less bearable nowadays. A relative of mine uses a 2014 13"" MacBook Air, which is fantastic for Xcode and development."
iOSProgramming,3asbd4,Sh3z,1 point,Tue Jun 23 04:45:49 2015 UTC,Why is it becoming less bearable?  I've looked at the Airs too... I'd rather pay the extra few hundred for the boost in performance and Retina though.
iOSProgramming,3asbd4,lap_felix,1 point,Tue Jun 23 19:52:31 2015 UTC,"Well, waiting for builds to compile and the iOS Simulator to run can get a bit annoying. Also, it's a little harder to view the retina iPad / iPhone 6 Plus in the simulator due to their higher resolutions; these can all be fixed by running on-device, though. Aside from that, Yosemite has not been kind, resulting in a general performance degradation and lack of WiFi connectivity (newer Macs don't seem to have this issue). Here's hoping OS X El Capitan makes things better."
iOSProgramming,3apqw3,NSCFType,2,Mon Jun 22 14:39:13 2015 UTC,"Ah, interesting… so it supports Markdown."
iOSProgramming,3apqw3,tjgrant,-4,Mon Jun 22 19:01:41 2015 UTC,"Thanks for the spam, as usual."
iOSProgramming,3apqw3,charlierunkle69,6,Mon Jun 22 15:35:01 2015 UTC,Spam? The doc param format changed in Xcode 7. I found it useful and thought I'd share.
iOSProgramming,3ar8s7,ThePantsThief,2,Mon Jun 22 21:26:42 2015 UTC,No XCTest is newer. Use it. Has some nice enhancements for async testing (expectations).
iOSProgramming,3aq7eb,dontclickonmeplease,1 point,Mon Jun 22 16:49:26 2015 UTC,I would assume human translators. Having tried to google translate anything in the past has proven to me the structure of sentences is the weak part of automatic translation.
iOSProgramming,3aq7eb,nXiety,1 point,Mon Jun 22 18:34:01 2015 UTC,"Apple has a list of Third Party Localization Vendors, which seem to use human translators. One of them charges 0.09 USD per word.  https://developer.apple.com/internationalization/"
iOSProgramming,3aq7eb,densmo,1 point,Mon Jun 22 19:44:05 2015 UTC,Thanks guys.
iOSProgramming,3aqjb7,JobspressoTeam,2,Mon Jun 22 18:17:48 2015 UTC,just out of curiosity...do you need a cs degree for these kind of jobs? I have an engineering degree and I've made 4 iOS apps but no formal CS experience
iOSProgramming,3aqjb7,jti107,1 point,Tue Jun 23 02:01:55 2015 UTC,"By ""these kinds of jobs"", do you mean remote-friendly ones? Or software developer jobs in general?  If you have an engineering degree and published multiple apps to the App Store, you'll have no trouble qualifying for most iOS software development positions, remote or not (unless they ask specifically for x years of experience).  I've even had a coworker who had a History degree, and became a self-taught professional software developer.  Let me know if this helps."
iOSProgramming,3aqjb7,jti107,2,Tue Jun 23 12:41:12 2015 UTC,thank you! that's very helpful.
iOSProgramming,3aqjb7,s73v3r,1 point,Tue Jun 23 21:31:05 2015 UTC,What's the pay range for the position?
iOSProgramming,3aqjb7,big_chugga,-1,Mon Jun 22 21:16:17 2015 UTC,"The employer (Stripe) hasn't specified this, but a quick search on Glassdoor shows their average salary at ~$110k for Software Engineers."
iOSProgramming,3aqjb7,chensmile,3,Mon Jun 22 21:36:20 2015 UTC,"So, in other words you're a recruiter who knows that a particular job exists. Isn't this what Linkedin is for?"
iOSProgramming,3amg3t,densmo,14,Sun Jun 21 17:44:41 2015 UTC,Congratulations! Don't be upset at all if it doesn't get approved for the first go! Good luck! :)
iOSProgramming,3amg3t,Jalsemgeest,3,Sun Jun 21 19:03:25 2015 UTC,"Thanks!  I'm actually a bit worried my app gets rejected because it has some more ""creative"" UI elements. It's too bad that Apple doesn't provide more information about where they draw the line between creative and too complex."
iOSProgramming,3amg3t,boredhokie,6,Sun Jun 21 19:31:31 2015 UTC,They generally clearly state why they rejected your app. Once V1 is approved subsequent updates you submit are usually scrutinized less and approved much more quickly (2-3 days in my experience). Good luck!
iOSProgramming,3amg3t,dontforgetpassword,10,Sun Jun 21 19:46:41 2015 UTC,"Whoa you have a good experience. We usually end up arguing with apple for a week, spend a week waiting for review again, then maybe get approved. We also aren't doing anything particularly special. But they have cracked down on rules as of late."
iOSProgramming,3amg3t,7re,8,Sun Jun 21 19:56:09 2015 UTC,Same here... sometimes they even decide to reject my apps for things that have been approved before rather than new features :s
iOSProgramming,3amg3t,TheMcDucky,3,Sun Jun 21 22:24:16 2015 UTC,My app got rejected. I tried resubmitting it without any significant changes and it was approved...
iOSProgramming,3amg3t,dontforgetpassword,1 point,Mon Jun 22 06:01:57 2015 UTC,"That EXACT same thing happened to us. We had to pull a build to update screen shots (not apple asking, our marketing team) and when we changed the images then submitted again- they rejected for a previously approved feature. I had to spend two weeks arguing with their team. They even told me to reprogram our feature in x way. They don't sit in on my meetings. Why do they feel that is okay?! Rant ended."
iOSProgramming,3amg3t,isurujn,1 point,Thu Jun 25 17:40:43 2015 UTC,Thank you! That's good to know.
iOSProgramming,3amg3t,dell5,1 point,Sun Jun 21 19:57:55 2015 UTC,They generally clearly state why they rejected your app.   Lucky you. I had a totally unpleasant experience with Apple a few years ago trying to get an app approved. They just mentioned the app crashes. Not even mentioning the view or the action where it happens. Kept asking it a few times. Still got the same robotic reply.
iOSProgramming,3amg3t,dell5,7,Mon Jun 22 13:26:24 2015 UTC,What language did you use? How did you start learning?
iOSProgramming,3amg3t,Krillere,2,Mon Jun 22 10:19:21 2015 UTC,"i used swift i started with a course on udemy (https://www.udemy.com/complete-ios-developer-course/#/) which wasn't too bad but once I started to work on my own apps rather than the examples from the course I realized that it didn't teach me much about what matters most, like the basic concepts of object-oriented programming and the MVC design pattern. Once your app gets beyond the ""hello world"" stage, you'll need to know that stuff. So I read some chapters of Apple Swift Programming Guide and googled around. Unfortunately, by the time I started learning, the stanford swift course wasn't out yet and I didn't really want to get into objective-C. Many people say that you need to learn objective-c but when you get into swift you'll get used to reading it at some point which is all you need to know in my opinion."
iOSProgramming,3amg3t,succeededcoma,1 point,Mon Jun 22 18:17:05 2015 UTC,"I am currently doing the same course and really want to start from swift, as I heard it is faster to learn than Objective-C.  Should I drop the course and try something else? Such as the courses on Lynda.com?   Thanks for the reply!  If you could start over again would you do anything different?"
iOSProgramming,3amg3t,Mawrawr,1 point,Mon Jun 22 20:24:01 2015 UTC,"I'm not saying it's a bad course, it's great to get used to xcode and the basic workflow of programming in it. There are probably lots of better tutorials and if I had to start over I would start doing the stanford course and/or sign up for treehouse. I know the stanford course doesn't look as exciting as those ""Make 100 real world app clones"", because you don't instantly see the results of the work you put into it but it'll safe you lots of frustration later down the road. Also, you should have a look at an app called swifty, it's great for learning swift and it's free...mium/cheap.  I think the best you can do is to take on a project and learn as you go. you should choose a project that you are sure you can actually finish. You don't want to put in weeks into something and then realize that it was too hard and have to give up. After many failed projects, I chose to make a game, because with a game you are in full control of the UI and logic and forces you to keep your code neat and organized. Also, it is much easier to make a simple game that doesn't exist yet, than it is to make a simple app that doesn't exist yet.  Focus on making something that does one thing and keep it that way. If you want some inspiration, look in the app store for ketchapp games or those shitty aa, bb, cc... games. if you don't want to make a game at least try to limit the amount of frameworks your app will use, so you can focus on your programming skills rather than figuring out how make each framework work.  To be clear, I didn't drop the course entirely, sometimes I used it for reference when I forgot how to do stuff or was looking for a tutorial on a specific framework (like CoreData, Parse, etc).   I hope this helps. Good luck!  Edit: Swift > Objective-C, just look at some Obj-C code and the same code in Swift and you'll agree. API is the same across both languages and the syntax is not too different either, so you'll be able to look at obj-c code and know what's going on without needing to learn it."
iOSProgramming,3amg3t,micoro,5,Mon Jun 22 21:19:09 2015 UTC,It's going to feel even better when you see the 'Processing for App Store' mail. :-)
iOSProgramming,3amg3t,drumerboy1988,5,Sun Jun 21 22:25:23 2015 UTC,What is your app?
iOSProgramming,3amg3t,Drowned,2,Mon Jun 22 00:26:57 2015 UTC,"It's a connect-the-dots kind of game called Vicious Circles. The aim of the game is to score as many points as possible. There is no app store link yet (duh), but here! are some screenshots .  It will be free with iAds that can be removed with an IAP (I know that sounds like, but I made sure that it doesn't get in the way of the game)."
iOSProgramming,3amg3t,jnevens,3,Mon Jun 22 19:11:37 2015 UTC,"Congrats! But don't underestimate the amount of time you may spend revising your app to get onto the app store, it gets quite annoying sometimes"
iOSProgramming,3amg3t,jnevens,2,Mon Jun 22 02:49:45 2015 UTC,Congrats and good job!!
iOSProgramming,3aow8e,snagra,1 point,Mon Jun 22 08:27:12 2015 UTC,"Works ok for me:  let jsonString = ""{\""listOfStrings\"":[\""item1\"", \""item2\""]}"" if let dataFromString = jsonString.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false) {     let json = JSON(data: dataFromString)     println(json)     println(json[""listOfStrings""])     println(json[""listOfStrings""][0]) }   This gives:  {   ""listOfStrings"" : [     ""item1"",     ""item2""   ] } [   ""item1"",   ""item2"" ] item1"
iOSProgramming,3aow8e,optik88,1 point,Mon Jun 22 09:52:28 2015 UTC,"Why not process it with NSJSONSerialization? And you can type cast the contents of the returned Dictionary or Array.  var jsonError: NSError? if let openExchangeRateDictonary = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.AllowFragments, error: &jsonError) as? Dictionary<NSObject, AnyObject> {     let baseCurrencyCode = openExchangeRateDictonary[""base""] as! String     let rates = openExchangeRateDictonary[""rates""] as! Dictionary<String, Double>     let date = NSDate(timeIntervalSince1970: Double(openExchangeRateDictonary[""timestamp""] as! Int))     NSOperationQueue.mainQueue().addOperationWithBlock({ () -> Void in         self.baseCurrencyCode = baseCurrencyCode         self.rates = rates         self.date = date     }) }"
iOSProgramming,3aqqzb,avery51,3,Mon Jun 22 19:15:03 2015 UTC,"I have never met a conversion tool that was not more trouble than just doing it myself. I treat all of them like they are on an infomercial at 2 AM - RUN LIKE HELL!  Your best bet is to learn Android development. I do both, iOS and Android and switch between them during the day. If these are small projects you really should be able to pull it off.  Keep in mind that pretty much everything you suffered through learning on iOS will apply under Android. You already designed it for a small screen, understand touch interactions, have REST calls in place (if you do networking) etc. Java is derived from C just like ObjC is so you know a lot of that syntax.  Maybe contract out one on the smaller conversions. Then look over that Android code compared to the iOS code you wrote. I think you will find a lot of similarities. That one conversion can give you a really nice starting point for converting your current or future apps."
iOSProgramming,3aqqzb,MKevin3,1 point,Mon Jun 22 20:56:54 2015 UTC,Great advice.  Thank you!
iOSProgramming,3apsas,jom4njee,2,Mon Jun 22 14:50:51 2015 UTC,"As far as I know, there is no way to do this. You can do something like this but the user need to leave the app on the foreground..."
iOSProgramming,3apsas,SeNeO,1 point,Mon Jun 22 15:21:25 2015 UTC,"this was just what I needed, thanks!"
iOSProgramming,3aq7l0,lrobinson2011,2,Mon Jun 22 16:50:52 2015 UTC,Not a fan of the alternating colors on the table view cells. The separators are enough to distinguish cells from one another.
iOSProgramming,3aq7l0,mistermagicman,1 point,Mon Jun 22 17:21:36 2015 UTC,"Thanks, I appreciate the feedback."
iOSProgramming,3aq7l0,Afflictare,1 point,Mon Jun 22 17:33:20 2015 UTC,"Are the ""Daily Deals"" now listed on the ""List"" view under the bar's name? Also, how do you get to the ""All Deals"" section?"
iOSProgramming,3aq7l0,Afflictare,1 point,Mon Jun 22 17:18:16 2015 UTC,"The daily deals list was condensed to just ""List"" which shows the current daily deals for each bar. The ""Deals"" tab has been removed. I'm thinking of maybe adding similar functionality back in by filtering the single list."
iOSProgramming,3aopob,diegie,2,Mon Jun 22 06:47:33 2015 UTC,"The native resolution of the iPhone 5 is 1136 x 640. So the screen displays 640 pixels horizontally.  However the way Safari works is a bit different: it multiplies the pixel on a website by the factor of two. This means that you have to develop a site for a 568 x 320, exactly the half on each side of the screen to have a site that looks native.  Also, the same logic applies to iPhone 4, 4S, 5S, 5C and 6. But the 6 plus uses a multiplication of 3, so with the native resolution of 2208 x 1242, it appears to be 736 x 414.  You can use -webkit-min-device-pixel-ratio to detect this."
iOSProgramming,3aopob,millAh,1 point,Mon Jun 22 07:54:19 2015 UTC,"Aside from millAh's comment you may want to set the viewport if you haven't already, try adding this in the <head> of your webpages.  <meta name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1'>  Also it may be worth noting that you generally shouldn't build your site around the screen sizes of specific devices. Instead let your site's content determine your breakpoints. Screen sizes change all the time, just use flexible sizing so it always looks good, regardless of the device."
iOSProgramming,3aopob,-killertofu,1 point,Mon Jun 22 09:55:35 2015 UTC,I'm using bootstap and the viewport is added :)
iOSProgramming,3aopob,Cueball61,1 point,Mon Jun 22 14:11:29 2015 UTC,"Sounds like you're not using a grid framework, or not using it appropriately? I would highly recommend using a grid framework (Foundation 5 is my tool of choice, but there's also Bootstrap and many others)."
iOSProgramming,3aopob,15458434,1 point,Mon Jun 22 13:31:25 2015 UTC,Using bootstrap and it works great. But I just need to know the exact screen resolution that's used on an iPhone. Google says 640x... but that's not the same as on the iPhone itself (if you check your website...).
iOSProgramming,3aomlk,enVoco,1 point,Mon Jun 22 06:06:25 2015 UTC,"Very helpful, thanks! Would replicating the Kim Kardashian game to that level of detail be difficult to handle?"
iOSProgramming,3aomlk,Starchand,3,Mon Jun 22 09:05:27 2015 UTC,"I'm guessing your not talking about server side code. On client side as most serious games are written to run cross platform the game engine would be written in something like C, C++ or Lua with UI probably written in native Obj-C or Android.  As a hobby/indie game/first time game Swift and SpriteKit are a good start."
iOSProgramming,3aomlk,ThePantsThief,1 point,Mon Jun 22 23:50:35 2015 UTC,"Thanks, I will definitely look into those!"
iOSProgramming,3aomlk,unpopularOpinions776,2,Mon Jun 22 08:16:11 2015 UTC,You'll probably wanna start with SpriteKit in Objc or Swift.
iOSProgramming,3aomlk,StopHavingKids_,6,Mon Jun 22 23:51:03 2015 UTC,Swift isn't widely used yet. Objective C is the language most iOS apps are made in.
iOSProgramming,3aomlk,unpopularOpinions776,5,Mon Jun 22 08:48:06 2015 UTC,"You're being downvoted by idiots I see. Too bad, because you're totally correct."
iOSProgramming,3ansta,succeededcoma,1 point,Mon Jun 22 01:00:37 2015 UTC,"You can change just about every single part of your app, but remember that you run in a sandbox. You will never be able to change things like the home screen, lock screen, other apps, etc."
iOSProgramming,3an7fy,DreamLimbo,6,Sun Jun 21 21:45:14 2015 UTC,Only if you want to use a new feature or just arbitrarily enjoy being on beta builds of software. The stable version is the stable version because it's what the majority of people will want to be using.
iOSProgramming,3an7fy,Shrugs_,5,Sun Jun 21 23:35:30 2015 UTC,"If you're just learning, beta crashes and configurations may trip you up. Stick with Xcode 6. You don't need 7 unless you're targeting the latest API features."
iOSProgramming,3an7fy,aoakenfo,1 point,Mon Jun 22 00:59:51 2015 UTC,"I think you have to pay for the dev account and at the moment you are eligible to download the latest beta with this account, yes. I think it's better to stick with the latest stable, especially when you start."
iOSProgramming,3an7fy,petermolnar_hu,-3,Mon Jun 22 14:45:54 2015 UTC,"Get the Xcode 7 beta, you will have access to the new stack views, which will become default in ALL the layouts that will be developed now."
iOSProgramming,3an7fy,Power781,1 point,Mon Jun 22 00:16:19 2015 UTC,How difficult will it be to eventually update my app for iOS 9 if I use the latest stable release instead of the beta?
iOSProgramming,3an7fy,Power781,-2,Mon Jun 22 01:00:56 2015 UTC,"It will work directly, but your development will probably be faster using the new iOS9 features :)"
iOSProgramming,3an5yg,HoneyBadger08,3,Sun Jun 21 21:31:56 2015 UTC,"Here an idea: Use 3 images. 1 will be your mask, 2 will be the image with the foggy mirror, 3 will be the clean image mirror.  Track your finger and modify your mask image. Use the mask image to hide & reveal the content of the foggy image. Place the clean image behind the foggy one, so when you mask it, you see the reflection behind.  Good luck!"
iOSProgramming,3an5yg,JEzuSFC,1 point,Mon Jun 22 07:10:48 2015 UTC,"This seems interesting, waiting for answer too. :)"
iOSProgramming,3alpee,NaveNocab,1 point,Sun Jun 21 13:14:04 2015 UTC,Whilst the outcome is cool I would have to say that if you are wanting to make tutorials then don't just read out every word that you are writing.  Sure it might take a 45 minute video instead of a 15 minute one but if you actually explain what you are doing then it makes for a much better experience.
iOSProgramming,3alpee,optik88,3,Sun Jun 21 14:24:18 2015 UTC,"Not only that, but it's like either there's a program automatically typing line by line from an identical file, or he's doing it manually and just narrating as the lines appear.  I don't know anybody who'll start at the top and ""carve out"" a program line by line like that."
iOSProgramming,3anhl9,Captain_DeMorgan,2,Sun Jun 21 23:15:44 2015 UTC,Wouldn't this open up a lot of security issues?
iOSProgramming,3anhl9,askoruli,1 point,Sun Jun 21 23:34:57 2015 UTC,"Absolutely. If implemented correctly, services can have public APIs that require authentication with no sacrifice in security."
iOSProgramming,3anhl9,mistermagicman,1 point,Mon Jun 22 13:18:51 2015 UTC,"Apps using iCloud can't access other apps' data, and certainly can't access other users' data."
iOSProgramming,3anhl9,connor_g,1 point,Mon Jun 22 01:13:45 2015 UTC,You can probably add a feature where you go to the native app and have an open in X app option.
iOSProgramming,3amfyr,evident_frogs,1 point,Sun Jun 21 17:43:29 2015 UTC,Have you looked into trying team viewer?
iOSProgramming,3amfyr,garfbargle,1 point,Sun Jun 21 18:25:37 2015 UTC,"Yes.. I did... But it's not discrete. There's a little, like, ticker in the window corner. And an app icon running on the dock."
iOSProgramming,3amfyr,garfbargle,2,Sun Jun 21 18:26:29 2015 UTC,You've combed through the settings for a way to disable that indicator? You can hide running apps from displaying in your dock.  edit: Here's someone that figured it all out it looks like. This is surely 1000x easier than rolling your own remote viewing apps haha. http://www.websitecodetutorials.com/forum/viewtopic.php?f=30&t=620
iOSProgramming,3aicsp,front9tech,2,Sat Jun 20 13:47:46 2015 UTC,Thank you so much!!!
iOSProgramming,3aicsp,Brodie10-1,2,Sat Jun 20 22:17:30 2015 UTC,Awesome find OP! Thanked!
iOSProgramming,3aicsp,ERTWMac,1 point,Wed Jun 24 02:18:52 2015 UTC,SAVED!!! thanks
iOSProgramming,3akdrk,huzziii,1 point,Sun Jun 21 01:36:24 2015 UTC,NSTimer* timer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(tick:) userInfo:@(2) repeats:YES];   - (void) tick:(NSTimer*)timer {    int num = [timer.userInfo intValue]; //num is 2 }
iOSProgramming,3akdrk,askoruli,-1,Sun Jun 21 02:11:13 2015 UTC,UserInfo must be a dictionary.
iOSProgramming,3akdrk,eimantas,1 point,Sun Jun 21 04:13:17 2015 UTC,"@property(readonly, retain) id userInfo   The type is id. Why does it need to be a dictionary?"
iOSProgramming,3akdrk,askoruli,2,Sun Jun 21 05:15:16 2015 UTC,You're right. It doesn't. I'm used to userInfo as a dictionary because of NSNotification objects.   /me runs to check parameter list for NSNotification
iOSProgramming,3akcu7,meruapps,2,Sun Jun 21 01:26:15 2015 UTC,I believe Facebook ads may let you target specific devices
iOSProgramming,3ak82o,succeededcoma,1 point,Sun Jun 21 00:35:00 2015 UTC,What kinds of resources? Tutorials? Graphics? Techniques?
iOSProgramming,3ak82o,brendan09,1 point,Tue Jun 23 02:18:09 2015 UTC,Yeah  Books...anything that is a really good read for someone starting out with MapKit.
iOSProgramming,3ai9m4,dreaminginbinary,1 point,Sat Jun 20 13:05:33 2015 UTC,"What version of Swift are you using? I ask this because the enum Platform in ""The Climax"" section uses an enum case that takes arguments like this:  case iPhone(latestSupportedModel: Int).  In my project I have an enum that takes arguments to further specify the enum type, but I have to declare the enum case like so: case .Input(let InputFieldType). When I'd like to do something like yours, like this: case .Input(type: InputFieldType) but this throws an error."
iOSProgramming,3ai9m4,Uncle-Jemima,2,Sat Jun 20 18:49:37 2015 UTC,"Hey Uncle-Jemima, I wrote that particular code last night in a playground file using Xcode 7, so by proxy that would be Swift V2"
iOSProgramming,3ai9m4,Uncle-Jemima,1 point,Sat Jun 20 22:17:23 2015 UTC,Ahh alright I figured it'd be v2.0. Thanks!
iOSProgramming,3ajk0c,ixidor56,5,Sat Jun 20 20:38:56 2015 UTC,"It can get expensive but I own every iteration of the iPhone since the 4s, every iPad mini since the original, and the last 4 generations of iPad. I just have a hard time releasing an app without testing it on an actual device, and I feel like you need to test on as many different devices as you can. To me it's just a cost of doing business as an iOS developer."
iOSProgramming,3ajk0c,AJGolf1976,2,Sun Jun 21 03:20:48 2015 UTC,I like having older devices because they give me a feel for the worst possible user experience. I always try to keep one on an older iOS as well because some bugs are version specific.
iOSProgramming,3ajk0c,askoruli,1 point,Sun Jun 21 01:06:53 2015 UTC,"Are you a big developer? If so then yes keep them around.  If not then try and always test in the simulator for all devices you support, even if you don't know the speed of them you can still get a feel for the UI of them."
iOSProgramming,3ajk0c,optik88,1 point,Sun Jun 21 14:26:49 2015 UTC,The iPhone 4 still runs iOS 7. Also has the same screen as the iPhone 4S. So that's a pretty fine testing device to keep for the next few months until iOS 7 dies out and you will stop supporting it. The iPad mini will still run any version of iOS and would probably still be in use if it were in my house.
iOSProgramming,3ajk0c,lucasvandongen,-5,Mon Jun 22 11:09:40 2015 UTC,Sell them
iOSProgramming,3aj3o9,JCD2020,2,Sat Jun 20 18:10:49 2015 UTC,"Drag around in that blank window and it should appear, seems to be a weird bug with appearing in that debug view"
iOSProgramming,3ah67g,xThomas,2,Sat Jun 20 03:34:36 2015 UTC,When you build an app you choose the deployment target and you will have a single app that runs on all iOS versions >= the deployment target. The minimum you can support for a new app is 7.0. If you want to use features from a higher iOS version you can conditionally enable them in your code so your app wont crash on lower versions.  So 7.0 and up. 1 app for all versions.
iOSProgramming,3ah67g,askoruli,1 point,Sat Jun 20 04:04:53 2015 UTC,"What about Apple watch apps, seems like the minimum deployment target Is 8.2"
iOSProgramming,3agydu,kippypapa,1 point,Sat Jun 20 02:11:11 2015 UTC,Take a look at the GL Camera Ripple example provided by apple.
iOSProgramming,3aeww2,canhelp,5,Fri Jun 19 15:54:02 2015 UTC,"This isn't a 'fix' for this error. The 'fix' is to add SSL support to your server, which is the intention of the error.  Telling people to fix their apps by adding this key is irresponsible and only promotes insecure apps. If you don't have control over the server at the other end, okay....but that's rarely the case.  You should support SSL in your apps and API. It's 2015."
iOSProgramming,3aeww2,brendan09,1 point,Fri Jun 19 16:17:36 2015 UTC,My bad brendan09 I agree . I had a section about the same but forgot to publish the saved draft. I have updated the doc please let me know.  In my example lets say I am trying to fetch something from itunes.apple.com even though it supports ssl I am not able to get NSURLSession to load without those entries in the Info.plist could you share your thoughts on that?
iOSProgramming,3aeww2,brendan09,3,Fri Jun 19 16:54:51 2015 UTC,"Apple seems to be requiring servers to use at least TLSv1.2 in order to qualify for Application Transport Security. If they don't have SSL or have too old of a version, then it'll fail. In that case it'll need an exemption key.  People are currently filing bug reports as they consider the TLSv1.2 requirement to be a mistake. The issue also affects certain features of MapKit, as most of Apple's servers (like the API you're using) haven't been updated to at least TLSv1.2.  You can find people discussing the intricacies of iOS 9's Application Transport Security and giving Radar case numbers for bug reports of behavior they consider to be improper. Whether or not Apple changes the TLSv1.2 requirement is a different conversation. I'm sure its well-purposed, but it appears a majority of the web (Apple included) isn't quite ready for it yet.  Application Transport Security ?  CFNetwork IOS9 SSLHandshake -9847  directions search in iOS 9 fails with SSL error  People seem to be taking the nuclear option of disabling the feature entirely. Ideally, a whitelist approach for specific domains allowed to bypass this feature would be used instead of completely disabling the feature.  Edit: And here is a post on how to whitelist domains that need to be exempt from App Transport Security for your app. This is the proper way to do it, rather than nuking the feature entirely."
iOSProgramming,3af1ny,ThePantsThief,2,Fri Jun 19 16:31:06 2015 UTC,Why are you trying to calculate them all up front?  And why are you using a UITextView in cells instead of a multi-line UILabel?
iOSProgramming,3af1ny,brendan09,1 point,Fri Jun 19 16:44:53 2015 UTC,I couldn't find a UILabel that decently handles link tap detection. I'm currently using CCHLinkTextView.
iOSProgramming,3af1ny,RedBannedHammer,0,Fri Jun 19 19:58:30 2015 UTC,Precalculating row heights to ensure 60 FPS scrolling is pretty standard practice.
iOSProgramming,3af1ny,brendan09,2,Fri Jun 19 18:34:33 2015 UTC,"I'm aware of the concept, but its rarely needed if you provide good estimated heights to - tableView:estimatedHeightForRowAtIndexPath:. In 99% of circumstances, this is the better practice and will produce superior results.  I wouldn't go so far to call it 'standard' practice (as it only applies if you have horribly performing setups and don't use the estimated API), but its relatively common."
iOSProgramming,3af1ny,RedBannedHammer,2,Fri Jun 19 19:33:37 2015 UTC,"Using estimated row heights won't work well if cell heights vary greatly. Unless you're a fan of stuttering scrolling, it's not really ideal. I talked to one of the engineers that works on that portion of the UIKit API who acknowledged that estimated row height has issues, some of which are fixed in iOS 9."
iOSProgramming,3af1ny,brendan09,3,Fri Jun 19 19:49:48 2015 UTC,"If it varies greatly, then no. But attempting to calculate the heights for ALL cells (especially with UITextViews) isn't a better solution.  The UIKit engineers tend to recommend using estimated when possible, then buffering pre-calculated heights as necessary. But, spending several seconds precalculating them is far worse than an occasional stutter from loading on demand, or a stutter from buffer systems.  It also really comes down to the complexity of your constraints. You should always use the minimal number of constraints necessary, and try not to use 'over taxing' ones (ones that depend upon the calculations of others, or that require 'balancing' to satisfy). Not using a UITextView here would go a long ways in that direction.  If you need to cache the cell heights the better approach is to keep a cache thats XX ahead of the current tableview and sacrifice a couple of frames every 50+ cells that you scroll for calculations. Once you have them calculated, you'll always have them."
iOSProgramming,3af1ny,brendan09,1 point,Fri Jun 19 19:59:44 2015 UTC,Because the row heights vary so much I have no idea what the estimate could be (think comments in a reddit thread). Does that make a difference or would providing an arbitrary value be okay? I'll definitely give it a shot.
iOSProgramming,3af1ny,brendan09,1 point,Fri Jun 19 19:51:16 2015 UTC,"Arbitrary value thats an average is okay. It'll help some. But, more than anything, eliminating the UITextView will solve a lot of problems."
iOSProgramming,3af1ny,brendan09,1 point,Fri Jun 19 20:00:07 2015 UTC,"The thing is, sometimes the average is like 50 pts, sometimes it's 250 :/  I'll revisit replacing the text view with a label. I've come a long way since I last looked into that; I might be able to write my own now if I can't find one."
iOSProgramming,3af1ny,Phr34Ck,1 point,Fri Jun 19 20:04:00 2015 UTC,I'd definitely recommend looking into that if its possible.
iOSProgramming,3af1ny,Phr34Ck,1 point,Fri Jun 19 20:06:53 2015 UTC,"I just remembered the estimatedHeightForRowAtIndexPath: method, I might be able to leverage that, sounds like it was made for my case!"
iOSProgramming,3af1ny,David_c_m,1 point,Fri Jun 19 21:57:09 2015 UTC,"Oh! One hacky sounding solution that's highly effective is having like 5+ estimated row heights that you could return based upon the -length property of the NSString you need to show.  Its not nearly always right, but it can get you in the ballpark if you do right...and that's what's going to help."
iOSProgramming,3af1ny,RedBannedHammer,1 point,Fri Jun 19 20:17:28 2015 UTC,"I totally forgot about estimatedHeightForRowAtIndexPath:! That should be fine, yeah :) Thanks!"
iOSProgramming,3af1ny,lucasvandongen,2,Fri Jun 19 21:57:50 2015 UTC,"hey, a total newbie here that's currently learning iOS.   Why is it needed to calculate the height of the cell? Isn't it like a container that expands depending on whatever content it includes (like a label that expands in width depending on the text) ?"
iOSProgramming,3af1ny,lucasvandongen,1 point,Sat Jun 20 19:35:46 2015 UTC,"Nope. In iOS 8 however, Apple finally added a way to let the table view controller calculate the row heights behind the scenes. But it's still very buggy, and you'll have to calculate them manually if you want to support iOS 7, so I just calculate them manually.  Even with AutoLayout, views don't size themselves on their own. AutoLayout is just giving views constraints to adhere to when the containing view changes size."
iOSProgramming,3af1ny,lucasvandongen,1 point,Mon Jun 22 00:13:23 2015 UTC,"Also, labels don't resize as you change the text. You explicitly have to call -sizeToFit to make the label resize itself after changing the text."
iOSProgramming,3af1ny,JimRoepcke,1 point,Mon Jun 22 08:51:00 2015 UTC,"awesome, thanks!"
iOSProgramming,3af1ny,RedBannedHammer,1 point,Mon Jun 22 09:13:50 2015 UTC,You can calculate the boundingRect of a Attributed text string on a background thread if you feed it the correct width. Then set constrain the width and height to that rect value so the layout engine has no work to do.
iOSProgramming,3afjfl,LaserWolfTurbo72,1 point,Fri Jun 19 18:45:31 2015 UTC,"In the U.S. this process only took a few days, where are you located?"
iOSProgramming,3afjfl,nathanello,1 point,Fri Jun 19 19:38:32 2015 UTC,Canada. Maybe that's why.
iOSProgramming,3afjfl,eSALTS,1 point,Fri Jun 19 21:11:31 2015 UTC,"When I set up the US Tax info, it was pretty much instant.  For the Canadian info, I sent it via regular mail from Saskatchewan maybe 3-4 weeks ago, and the button in iTunes Connect still says ""Set Up"", so I'm assuming it hasn't been processed yet.  I sent them an email yesterday inquiring about the status of my tax information setup.  Hopefully I hear back soon.  It is kind of annoying how long this is taking, and that I haven't heard anything back at all."
iOSProgramming,3afjfl,eSALTS,1 point,Fri Jun 19 20:22:59 2015 UTC,I'm Canadian. It's also taking quite a long time. I hope it gets processed quickly.   What is tax info did you have to enter? I'm curious if I also need to do some is tax info.   I sent my info in via one day shipping so I would be done promptly but here I am still waiting.
iOSProgramming,3afjfl,eSALTS,1 point,Fri Jun 19 21:12:42 2015 UTC,"For US tax info I just filled out the form in iTunes Connect (Agreements, Tax, and Banking > View Tax Info > U.S. Tax Forms)."
iOSProgramming,3afjfl,eSALTS,1 point,Fri Jun 19 21:19:08 2015 UTC,Are you Canadian. Is that mandatory?
iOSProgramming,3afjfl,eSALTS,1 point,Sat Jun 20 05:05:54 2015 UTC,"Yes I'm Canadian, but anybody that wants to make money on their apps have to fill out the U.S. tax forms. It's extremely easy though."
iOSProgramming,3adr7h,moonman239,1 point,Fri Jun 19 07:59:41 2015 UTC,I would check out the OpenCV library for real time video processing.
iOSProgramming,3adr7h,Clipstuh,1 point,Fri Jun 19 09:19:04 2015 UTC,https://github.com/TheAmazingAudioEngine/TheAmazingAudioEngine
iOSProgramming,3afqwz,allen_bracket,1 point,Fri Jun 19 19:44:00 2015 UTC,https://dipinkrishna.com/blog/2014/07/login-signup-screen-tutorial-xcode-6-swift-ios-8-json/
iOSProgramming,3aeqeq,lunarchaos42,2,Fri Jun 19 15:01:55 2015 UTC,Set the same width and height constraint on each button.
iOSProgramming,3aeqeq,disco_sloth,2,Fri Jun 19 16:06:11 2015 UTC,"Except that then you're injecting magic numbers into your constraints. Which is unfortunate.  I'd rather pin one correctly to its surroundings (for different orientations and displays), then align the leading and trailing edges of all of them. Give a height constraint if they have to be something other than their natural size, but otherwise leave that alone."
iOSProgramming,3aeqeq,ratbastid,1 point,Fri Jun 19 20:56:27 2015 UTC,Worked like a charm. I didn't think to do that thanks mate!
iOSProgramming,3aeqeq,disco_sloth,1 point,Fri Jun 19 16:30:34 2015 UTC,Keep an eye on orientation changes though...
iOSProgramming,3aeqeh,first-timer-,2,Fri Jun 19 15:01:53 2015 UTC,"The PDFContext produced by this call:  CGPDFDocumentRef pdf = CGPDFDocumentCreateWithURL((CFURLRef)[[NSBundle mainBundle] URLForResource:[NSString stringWithFormat:@""Tray Test""] withExtension:@""pdf""]);   Does not serve as the foundation for calls made to the context created via UIGraphicsBeginPDFContextToData. They create separate PDF contexts.  Since you didn't open a new page in that PDF context, your text drawing commands went to nowhere.  So, your core issues are:   Opening an existing PDF document into a context, then doing nothing with that context, then closing it, does exactly what you'd expect: nothing. The 'new' PDF you're creating and working in is created as an 'empty' document with the call UIGraphicsBeginPDFContextToData. All of your future drawing calls are rendering into that context, which never had your old PDF in it to begin with. These 2 PDF contexts are different, and don't share data / pages between them. There probably aren't any pages in your new PDF. You never made a call to UIGraphicsBeginPDFPage to actually create a new page to draw into. This means your text rendering calls went to nowhere. Unrelated, but never ever specify fixed frames for things like this. CGRectMake(0, 100, 768, 1024-100) I can tell you're trying to account for the iPad fullscreen, and probably not be hidden under the status / nav bar and possibly a toolbar. You should be using Auto Layout, or at a minimum, using the variables available to you such as * CGRectGetWidth(self.view.bounds)* and * CGRectGetHeight(self.view.bounds)* and Autoresizing Masks so that your UI is adaptable. If you watched WWDC this year you saw that split screen iPad apps are coming. The way you're doing this will break badly, and absolutely won't work on iPhones with varying screen sizes. Start using Auto Layout ASAP or you'll get left behind."
iOSProgramming,3aeewg,DonkiestOfKongs,1 point,Fri Jun 19 13:21:03 2015 UTC,"Yes, you can reset the simulator.  Typically the Photos UI freezes for a couple of seconds while loading the first time in your app (for that session) on older devices. Its something to do with indexing / refreshing the Photos database.  Describe when it freezes? Before you pick a photo? After you pick a photo?  If after, it's likely you're not dismissing the image picker controller in the delegate method where it delivers you the media. Call -dismissViewControllerAnimated: on your image picker controller in that method."
iOSProgramming,3aeewg,brendan09,1 point,Fri Jun 19 16:22:54 2015 UTC,"It freezes before the view ever comes up. I tap the camera button, And then everything freezes. I can’t dismiss the app. I can’t accesss multitasking. I haven’t tried to do nc or cc yet but I will try your suggestion."
iOSProgramming,3aeewg,brendan09,1 point,Fri Jun 19 23:48:52 2015 UTC,Can you post the code where you're trying to present it? That will likely help us debug with you.
iOSProgramming,3aeewg,brendan09,1 point,Sat Jun 20 04:56:43 2015 UTC,"- (IBAction)takePicture:(id)sender {     UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];     // If the device has a camera, take a picture.     // Otherwise just pick from the photo library.     if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {         imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;     } else {         imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;     }      imagePicker.delegate = self;      // Place image picker on the screen     [self presentViewController:imagePicker animated:YES completion:nil]; }  - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {     // Get picked image from info dictionary     UIImage *image = info[UIImagePickerControllerOriginalImage];      // Put that image onto the screen in our image view     self.imageView.image = image;      // Take image picker off the screen     // you must call this dismiss method     [self dismissViewControllerAnimated:YES completion:nil]; }"
iOSProgramming,3aeewg,brendan09,1 point,Sat Jun 20 14:46:35 2015 UTC,"I don't see anything immediately wrong here.  Everywhere you've overridden viewDidLoad, viewWillAppear, etc. have you called the super equivalent? If not UIKit can get confused about what controller is currently showing and you can have strange issues like this when trying to present a VC.  Make sure you have a root view controller set to your UIwindow and that the current VC you're in is in that view controller hierarchy (not just added as a sub view)."
iOSProgramming,3aeewg,brendan09,1 point,Sat Jun 20 15:46:48 2015 UTC,http://stackoverflow.com/questions/26623400/photos-app-in-ios-7-1-simulator-not-working  Followed the solution posted there. All is well now.   Thank you!
iOSProgramming,3aagj3,matthuss,4,Thu Jun 18 14:47:00 2015 UTC,dont see this on the news anywhere. got any links?
iOSProgramming,3aagj3,thisismyaccountclean,1 point,Thu Jun 18 17:22:50 2015 UTC,I have been looking for links too. The only thing I can find is on their Twitter feed about Apple using their iCloud app in iOS9.
iOSProgramming,3aagj3,SilentRadar,1 point,Thu Jun 18 19:10:20 2015 UTC,"Yeah, same."
iOSProgramming,3aagj3,thisismyaccountclean,1 point,Thu Jun 18 19:55:54 2015 UTC,"Incredible platform, can't wait to see what Apple will do with this!"
iOSProgramming,3ae99y,dzamir,3,Fri Jun 19 12:20:46 2015 UTC,"This site over-estimates by a LOT. Its refreshing compared to sites that underestimate, but still dramatically off just the same.  We bill $200+ an hour, and I just estimated some of the recent projects we've done....it was off by over $100,000 on all of them. Sometimes more.  It really does depend on the project, and no website is going to give you an accurate estimate."
iOSProgramming,3ae99y,brendan09,2,Fri Jun 19 16:28:36 2015 UTC,"Welp, looks like I'm only building map apps from now on.  Didn't know that I could get $8500 for a mapview."
iOSProgramming,3ae99y,alt51,1 point,Sat Jun 20 06:20:09 2015 UTC,It depends on an App.
iOSProgramming,3abg5k,brimfieldfleafinder,4,Thu Jun 18 19:10:33 2015 UTC,"Developer here as well...I would be willing to take a look at it if you have not found someone already. I could give you a detailed estimate of what needs to be done, how long I feel it would take, and how much I would charge to complete the app. Worst case scenario you could use my estimate to shop around for another developer if you feel I am to expensive. PM me if interested."
iOSProgramming,3abg5k,AJGolf1976,3,Thu Jun 18 20:43:59 2015 UTC,Was there a contract signed for the work done / payment made?
iOSProgramming,3abg5k,succeededcoma,2,Thu Jun 18 19:46:36 2015 UTC,"I have estimates from him.  Basically he would create an estimate, I would agree on the work and cost, and then he would work.  When he completed the work, he would submit the app to the store, and I would pay him.    The last time I paid him the app was sent to the store with huge bugs and crashed constantly.  The app is centered around a live event that takes place 3 times a year, and we were 4 weeks away from the event.  After three weeks of me calling, emailing texting, begging for me to help, 3 days before the event he submits a fix to the store and requests an expedited review.  Apple approved the app in time, and now there is only 1 glitch that crashes the app.  My only problem is, now its been over another month from him and still no word."
iOSProgramming,3abg5k,succeededcoma,2,Thu Jun 18 19:54:46 2015 UTC,What is the app? Im not expert when it comes to iOS development but I would be curious to look at the app.
iOSProgramming,3abg5k,mavdev,3,Thu Jun 18 20:01:57 2015 UTC,"Developer here, trying to understand your requirement a bit better. You want someone to look at your code and compare it to the app in the app store and see what it will take to get to the point on the app store??  I can help (PM me), but I can probably only offer to take a look and highlight differences required in the code, probably will not have the time to help with getting the code to the app store app level even if it's minimal work. If that helps, PM me."
iOSProgramming,3abg5k,iGoalie,1 point,Thu Jun 18 20:19:30 2015 UTC,"If you cant help me to get the code to the app store level, thats not much help to me right now.  Thanks for the offer to take a look at it though."
iOSProgramming,3abg5k,lucasvandongen,3,Thu Jun 18 20:54:00 2015 UTC,"Developer here as well, I'd be happy to take a look at it for you. Send me a PM if your interested.   EDIT: I assume the crash you are talking about is when a user clicks on the ""instagram, easy or eBay"" buttons? (if not theres a free bug report for you :) )"
iOSProgramming,3abg5k,mdbellott,3,Thu Jun 18 20:25:19 2015 UTC,Cleaning up the mess after the cheap guy seems to be becoming sort of a speciality for me. I can't believe how many devs just bail out on a paying customer just because they're facing problems that are hard to solve.
iOSProgramming,3abg5k,Clipstuh,1 point,Fri Jun 19 11:48:37 2015 UTC,Name of the app?
iOSProgramming,3abg5k,StunnerAlpha,1 point,Thu Jun 18 20:06:26 2015 UTC,Brimfield Flea finder
iOSProgramming,3abg5k,StunnerAlpha,-10,Thu Jun 18 20:09:01 2015 UTC,Well you basically gave your dev's name out to the entire community.
iOSProgramming,3abg5k,jbkrule,5,Fri Jun 19 00:32:57 2015 UTC,"It's my apple dev account. So did I really?  Also, I don't really care because I would love for him to respond and tell me what I did to cause him to screw me like this."
iOSProgramming,3abg5k,AJGolf1976,1 point,Fri Jun 19 01:55:44 2015 UTC,"Dev here, if you haven't found someone already PM me."
iOSProgramming,3abg5k,FearAndLawyering,1 point,Fri Jun 19 03:45:14 2015 UTC,"There is a bigger issue you have aside from just getting the source code. It appears that he published the app to the App Store under his development account. If he goes AWOL (which it seems he has), there is no way for you to get him to take down the app or transfer it to your developer account, and Apple's App Store doesn't allow two Apps with the same name, so you will have to update all your references and ads that point users to installing a new app (assuming the worst case scenario where you get no response from him). You could try and inform Apple of the situation (in the hopes of having them take down the app) but your milage may vary."
iOSProgramming,3aafdk,eolszewski,2,Thu Jun 18 14:37:43 2015 UTC,Without a visual marker users wouldn't know which way to go to get the color they want. Suggest putting a subtle border around it with the colors you would get if you dragged in that direction.  I'd also do some on-device testing to see how easy it is to pick colors with your finger in the way.
iOSProgramming,3aafdk,fubarx,1 point,Thu Jun 18 15:31:09 2015 UTC,"I aree, but I also love how minimal it looks currently. OP, I'm probably gonna use this in my app for building custom themes :) Thanks!"
iOSProgramming,3aafdk,ThePantsThief,1 point,Thu Jun 18 15:39:22 2015 UTC,"/u/fubarx, I wanted to make this as minimal as possible, but adding an optional ""rainbow-border"" would definitely be a great addition. I've done testing on the 4S with 100x100 views of this and have had great success in choosing colors, it's amazingly precise.  /u/ThePantsThief thanks! I made this because the other pods didn't look up to iOS 8 design and had a bit of baggage to them."
iOSProgramming,3aafdk,ThePantsThief,1 point,Thu Jun 18 16:26:09 2015 UTC,"Looks perfect imo. /u/fubarx is right about the ambiguity but I think the elegant design trumps that in this scenario.  Also, just FYI but if you mention users with /u/ instead of @ it will notify them, /u/eolszewski damn your name was hard to type"
iOSProgramming,3aafdk,imjameshall,0,Fri Jun 19 14:06:02 2015 UTC,Nice.
iOSProgramming,3ad1j6,TheCracchen,2,Fri Jun 19 03:00:43 2015 UTC,Yep. I believe they copy the gif to the pasteboard then the user can copy it into the text field. Check out gif keyboard.
iOSProgramming,3abtkm,croutongeneral,6,Thu Jun 18 20:48:01 2015 UTC,"Theyre rejecting your app because they are claiming that your app provides no functionality that Facebook itself provides.    If you can show where you are implementing something that the Facebook site itself does, you can respond to the reviewer and let them know.  Outside of using Facebook for authentication, does your app mimic any functionality of Facebook? Friends list, etc.?"
iOSProgramming,3abtkm,succeededcoma,1 point,Thu Jun 18 20:54:17 2015 UTC,"So my app is ""Odds Are"" or the game ""What are the odds"" (or whatever people call it).  Anyways the app uses the friends list so you can load the game for the first time and you have a ton of friends already that are using it. Also the app has a newsfeed for you view what your friends are doing on the app. And I only collect the data I need, i don't collect anything unnecessarily."
iOSProgramming,3abtkm,succeededcoma,4,Thu Jun 18 21:09:19 2015 UTC,Do this:     List out steps for them to see the friends list Make a video that shows them the functionality   Keep in mind reviewers are people too. They may not see a feature the same way you do and a little nudge in the right direction will help them understand.
iOSProgramming,3abtkm,BiPoleArt,3,Thu Jun 18 21:16:50 2015 UTC,Submit an appeal stating that you use the Facebook API so users can look at what their Facebook friends in the app are doing.
iOSProgramming,3abtkm,onewayout,2,Thu Jun 18 21:11:57 2015 UTC,"Basically, Apple is saying that you can't just require people to divulge personal info in order to get any benefit from your app.  In the case of a game, that means you have to let them play the game without giving up their account information for a social network service.  You can enhance your game by connecting it with Facebook, but you can't require Facebook account information in order to play.  You can get around that rejection by allowing people to play the game without divulging their Facebook account.  I'm not familiar with the ""Odds Are"" game, but if you can provide a single-player mode, or a matchmaking service with strangers outside the Facebook context if not, then you ought to be able to get around that.  Besides, adding that functionality will make the people without Facebook accounts, or who do not wish to connect games to it, happy, which is always a good thing.  Even if you managed to skirt Apple's rule on this, you'd be facing a few irate negative reviewers, which could sink your rankings on the App Store listings, so you might as well address it in a way that makes people happy."
iOSProgramming,3abtkm,MrHarryT,3,Fri Jun 19 16:51:40 2015 UTC,Second this. I don't always want my Facebook friends to know what games I play.
iOSProgramming,3abtkm,ThePantsThief,1 point,Sat Jun 20 10:00:05 2015 UTC,"I third this, in addition to what the other comment says about letting them know what you're using the Facebook api for."
iOSProgramming,3abtkm,argentounce,3,Sat Jun 20 18:12:08 2015 UTC,"I believe you need to read again this part ""such as email address and date of birth""  If you are not using email and birthday just don't ask for it and everything should be fine.  This happened to me, and the solution after a long talk in resolution center was to make birthday optional, not required."
iOSProgramming,3abtkm,optik88,2,Thu Jun 18 23:57:35 2015 UTC,"Another sidepoint is that getting the users friends list is no longer supported in the Facebook API, if you request the list of friends you will only be shown users that also have granted your app permission."
iOSProgramming,3abtkm,swishspitrinse,1 point,Fri Jun 19 06:59:07 2015 UTC,"As far as I know this is only for non-game apps. If you submit to Facebook as a game you can access the friends list to ""invite"" them to play."
iOSProgramming,3abtkm,optik88,2,Fri Jun 19 08:15:41 2015 UTC,"The invitable_friends API is only available for games that have a Facebook Canvas app implementation. This API is only available on version 2.0 (or later) of the Graph API.   So you need to have a canvas app, not simply just a game."
iOSProgramming,3abtkm,7re,1 point,Fri Jun 19 09:24:22 2015 UTC,"You need to justify every piece of personal data you get. Basically write them an explanation of why you need their name, e-mail, DOB, location, etc."
iOSProgramming,3abtkm,RDSWES,1 point,Fri Jun 19 07:57:04 2015 UTC,Make the game so  the FB login is optional. I auto delete ANY app that ask for me to log into FB.
iOSProgramming,3aavzk,optik88,1 point,Thu Jun 18 16:44:40 2015 UTC,Pretty simple but I wanted something free and easy that allows users to 'Rage Shake' from within the app to quickly and easily submit feedback.  Let me know what you think or if you think it could be improved :)
iOSProgramming,3a9ko4,matteoman,2,Thu Jun 18 08:48:31 2015 UTC,I am a new to iOS development and I can fully agree with what you said about feeling lost at the beginning. I now have a pretty good understanding of all the concepts you spoke about but feel I could have a little more. I found most tutorials lacking so I turned to a objective c book by Stephen Kochan which really helped in the main concepts and then watched tutorial videos at Linda.com. And now hopefully understand some more from you. Thanks
iOSProgramming,3a9ko4,fcbraji,1 point,Thu Jun 18 13:03:46 2015 UTC,"Thanks, I hope my articles are going to be helpful!"
iOSProgramming,3ac1ih,Xeppen,1 point,Thu Jun 18 21:48:00 2015 UTC,Post this on Stack Overflow please (link to it from here when done of course).
iOSProgramming,3ac1ih,StunnerAlpha,1 point,Fri Jun 19 00:54:42 2015 UTC,http://stackoverflow.com/questions/30934133/how-to-import-array-attribute-with-magicalrecord-into-coredata
iOSProgramming,3ac1ih,StunnerAlpha,1 point,Fri Jun 19 09:05:12 2015 UTC,Upvoted.
iOSProgramming,3aao44,amichail,6,Thu Jun 18 15:46:42 2015 UTC,"The answer has to do with concurrency, multi-threading, and the risks that come with those paradigms. Structs and Value types are not referenced like objects are and as such, passing value types across threads does not create race conditions or create problems of objects being changed out under another class. Classes are actually dangerous when you are multi-threading and as such structs are much safer. It is not only apple, but Google's new programming language Go has a preference for static typing and using value types as well for the same reasons as I mentioned above."
iOSProgramming,3aao44,FutureIsMine,3,Thu Jun 18 16:12:47 2015 UTC,"I don't believe Swift is ""moving away"" from classes, nor that it has made the changes it has in some attempt to reduce concurrency issues.  It's about performance and making defaults more optimizeable and memory efficient.  Swift retains all of the capabilities and the complexities of OO and multi-threaded programming. What they have done is make two of the most common, built-in data structures structs by default.  Swift still has access to all of the foundation (class based) data structures and all of the concurrency issues and solutions that go along with them (e.g. GCD).  So why did they do this?  Because structs have significant performance benefits in many situations and they believe that those situations come up often enough they they should be the default.  Structs can be allocated directly on the stack instead of on the heap and because their scoping is limited the compiler can have a much greater understanding of how they are used and passed around, making powerful optimizations possible.  The fact that you can't access structs in the same multi-threaded way as reference objects is a facet of this, not a driving reason for the change.  TLDR: Structs are somewhat less flexible but more optimize-able as defaults and probably a bit more in-line with the functional style of programming that is in vogue at the moment."
iOSProgramming,3aa6js,Bagellord,4,Thu Jun 18 13:19:58 2015 UTC,"(Disclosure: rakes hay for BNR) Howdy! We can't wait to have you. Get plenty of sleep tonight and be sure to stay hydrated throughout the week.  Take advantage of your home/work Internet pipe and get the latest stable Xcode (6.3.2) installed and have it download all the latest documentation from the Preferences > Downloads screen. Internet will be passable at Asilomar, but not suitable for downloading gigabytes of data.  Finally, I'm told Asilomar pulls no punches on radically changing weather - bring layers! You're going to have a great week!"
iOSProgramming,3aa6js,bignerdzach,1 point,Thu Jun 18 19:13:00 2015 UTC,Awesome! Really looking forward to it. I'm flying in from Alabama leaving at 530 tomorrow morning so sleep may be an issue.   I've got the latest xcode and ios versions set up. How is cell reception about there?
iOSProgramming,3aa6js,bignerdzach,2,Thu Jun 18 19:24:31 2015 UTC,"I asked in our Slack channel how cell service is and the only response was ""Annoying."" Plan accordingly! :)"
iOSProgramming,3aa6js,succeededcoma,5,Thu Jun 18 20:56:56 2015 UTC,Know that I am uber jelly!!
iOSProgramming,3aa6js,frodokun,4,Thu Jun 18 14:32:03 2015 UTC,"Be sure to get enough rest before you go, and when you're there.  And hydrate.  It's easy to get dried out and lethargic.  (Disclosure, I too wear a hat at the ranch)"
iOSProgramming,3aa6js,AntonioTiger,2,Thu Jun 18 19:08:44 2015 UTC,"I've been to their iOS bootcamp at Historic Banning Mills (awesome place, I want to go back) but I think it's at a different location now.   I'll talk about my experience... I was fed 3 times a day and the food was plentiful and delicious. They gave us a few bottles of wine with dinner.  Saturday and Sunday were Objective-C. There isn't a lot of hands on guided lab work but you'll write some code to get comfortable. Plan on getting back on your computer and playing around with what you've learned after dinner.   Mon-Fri was iOS from 8am to around 6pm. After lunch we'd go for hikes, and they give you snacks and refreshments throughout the day. The iOS material came from the book they sell, just slightly updated.   I don't know that I'd mess around with the beta version of anything. I'm guessing they're going to use the latest version of Xcode and Swift. Just make sure you can load an app on to a device, or you won't really be able to do the labs involving the camera or CoreMotion.   My advice: Try to spend as much time as you can writing code. Try to complete all of the challenges at the end of each chapter no matter how trivial they seem.   Let me know if you have any questions."
iOSProgramming,3aa6js,bignerdzach,1 point,Thu Jun 18 16:33:25 2015 UTC,Thanks! Will do. My employer is sending me and I'm looking forward to it. I'm going to the California location.   Does the book come with the class or is it something else to buy?
iOSProgramming,3aa6js,AntonioTiger,5,Thu Jun 18 16:36:41 2015 UTC,"(Disclosure: BNR employee) You'll be getting a copy of current course materials, which are newer than the book."
iOSProgramming,3aa6js,digitalburro,1 point,Thu Jun 18 18:51:33 2015 UTC,"We were given the same BNR Objective-C book that you can buy, an updated version of the iOS programming book but it was split between 2 binders, and another binder with the presentation slides."
iOSProgramming,3aa6js,fubarx,2,Thu Jun 18 20:45:14 2015 UTC,"I'm heading into the advanced boot camp after doing a couple of other BNR courses.  The biggest hurdle for me in that first course (also coming from an Android background) was adapting to Xcode.  My classmates and I really struggled not having a proper intro to how Xcode is laid out/not knowing shortcuts etc.  while these aren't essential to competing the material, I think that can just make the learning curve feel more steep than it already is.    My suggestion is to watch some video intros to Xcode (be sure it's for Xcode 6 as icons and whatnot changed with 6) and do a bit of digging to find shortcuts that you routinely use (for me it was comment/u comment code and the block indent shortcuts)."
iOSProgramming,3aa6js,bignerdzach,1 point,Thu Jun 18 23:17:56 2015 UTC,"If you're in the iOS developer program set up the new xCode beta and load a test device with iOS 9 beta.  There's a new component called UIStackView that will warm the cockles of your heart if you're used to the Android nested layout model :-)  Also, get comfortable with Swift playgrounds. It's a great way to noodle around and just try out some code with immediate feedback."
iOSProgramming,3aaypt,nathanello,3,Thu Jun 18 17:04:19 2015 UTC,"I would schedule a UILocalNotification (https://developer.apple.com/library/ios/documentation/iPhone/Reference/UILocalNotification_Class/index.html#//apple_ref/occ/cl/UILocalNotification) so you don't have to keep checking ""Is it time now?"" in your app. Just let the OS notify you. This way you can also show your user a banner saying ""Hey, come back and watch some more rewards videos!"", badge your app icon, and/or play a sound."
iOSProgramming,3aaypt,6strtheory,1 point,Thu Jun 18 20:23:14 2015 UTC,"Thanks for the tips, I'll definitely be giving this a try. Have you worked with local notifications in Obj-C before?"
iOSProgramming,3aaypt,criosist,1 point,Thu Jun 18 21:52:13 2015 UTC,Would it be a better idea to set the NSDate as a userDefault at the time the limit was reached and then check that the time difference between the userDefault date is greater than 24 hours? If the date is greater than I would reset my video plays counter back to 0?
iOSProgramming,3aaypt,criosist,1 point,Thu Jun 18 17:14:57 2015 UTC,This is the correct answer :P either check if the stored date is past midnight / 24 hours since you last modified it.
iOSProgramming,3aaypt,criosist,1 point,Thu Jun 18 18:26:17 2015 UTC,"I have never worked with NSDate before though, I'm assuming you have... Would you be willing to take a look at my code once it's written and make sure I've done things correctly?"
iOSProgramming,3aaypt,criosist,1 point,Thu Jun 18 18:54:58 2015 UTC,they recently updated it so if your working ios8+ then its ridiculously easy
iOSProgramming,3aaypt,criosist,1 point,Thu Jun 18 20:37:28 2015 UTC,The project I'm currently working on is iOS7+ but maybe I'll start with just 8+ then if it's so much easier... I'm just a small time indie dev with ~50K downloads to date.
iOSProgramming,3aaypt,criosist,1 point,Thu Jun 18 21:52:59 2015 UTC,It's still easy in 7 it's just they update the date stuff to make integrating with calendar easier but still only a few lines for ios7
iOSProgramming,3aayis,aleixventa,1 point,Thu Jun 18 17:03:02 2015 UTC,We just launched this site to help people create deep links Any feedback is welcome.
iOSProgramming,3aam8a,Karmaologist,2,Thu Jun 18 15:32:16 2015 UTC,Look at the call stack in the debugger
iOSProgramming,3aam8a,ThePantsThief,1 point,Thu Jun 18 15:37:38 2015 UTC,How do I get to the call stack?
iOSProgramming,3aam8a,ThePantsThief,2,Thu Jun 18 15:41:45 2015 UTC,"It's the thing that appears on the left when you start debugging a project. However, if yours looks like this with just main at the top, the call stack won't be helpful.  I'm kind of new to iOS dev, but if you have Crashlytics installed, it will symbolicate the crash logs for you and you can look at the call stack in the crash log online."
iOSProgramming,3aahxx,ballinismyhobby,3,Thu Jun 18 14:59:07 2015 UTC,Size classes: https://developer.apple.com/library/ios/recipes/xcode_help-IB_adaptive_sizes/chapters/AboutAdaptiveSizeDesign.html
iOSProgramming,3aahxx,olifante,2,Thu Jun 18 15:50:52 2015 UTC,+1 for AutoLayout or SnapKit/Masonry if you want to do it in code.
iOSProgramming,3aahxx,Dierdr4,1 point,Thu Jun 18 15:11:35 2015 UTC,thanks!  would you suggest this for very complex views as well or at some point does it become easier to do to separate XIBs?
iOSProgramming,3aahxx,Dierdr4,2,Thu Jun 18 15:16:02 2015 UTC,"You want to use it, especially if the view gets complex."
iOSProgramming,3aahxx,CleverError,2,Thu Jun 18 15:36:50 2015 UTC,"You should be using auto layout and depending on your goal, that could be all you need to use.  Depending on the difference between portrait and landscape there are other things you may need to do. Interface builder allows you to create constraints that only apply to a specific size class so that it changes the constraints being used when the sizeClass changes. If the changes are very different (adding/removing views) you'll have to do that in code."
iOSProgramming,3a9d64,dcpc10,3,Thu Jun 18 07:03:12 2015 UTC,The way to do it is through custom view controller transitions. In your case you might have to replicate those UI elements on the transition view.  But you might be able to more easily accomplish that using the snapshotViewAfterScreenUpdates(_:) method of UIView to take a snapshot of the previous view controller to use for the transition.
iOSProgramming,3a9d64,matteoman,1 point,Thu Jun 18 09:05:33 2015 UTC,Sounds to me like you should be writing your own container view controller using UIViewController Containment. It's really quite simple and puts all the power in your hands.
iOSProgramming,3a7r7f,nsomar,1 point,Wed Jun 17 22:01:30 2015 UTC,I dont know what gif to use :D
